:F UIFUNC2.GRN
:D Modified on %E%, Revision (SID) = %I% 
:I   1892, 1632210, 1679535
:! 
:N Fnc_My_steel
:S    665,   135,   523
:T Command
:A parameter of colunm
:D Menu of parameter of colunm
:C /prep7
:D 支持结构材料参数
Inp_NoApply
Cmd_)*Cset,1,5
Fld_0
  Typ_Lab
  Prm_请输入吊装架材料参数:
Fld_2
  Prm_弹性模量:[EX]
  Typ_real
  Def_*par(2.1e11)
Fld_3
  Prm_泊松比:[PRXY]
  Typ_real
  Def_*par(0.3)
Fld_4
  Prm_密度:[DENS]
  Typ_real
  Def_*par(7850)
Fld_5
  Prm_外径:[OutRAD]
  Typ_real
  Def_*par(0.152/2)
Fld_6
  Prm_内径:[InnRAD]
  Typ_real
  Def_*par(0.147/2)
Cmd_)/go
Cmd_)*get,EX_steel,cpar,1
Cmd_)*get,PRXY_steel,cpar,2
Cmd_)*get,DENS_steel,cpar,3
Cmd_)*get,OutRAD_steel,cpar,4
Cmd_)*get,InnRAD_steel,cpar,5
Cmd_)/input,Parasteel.mac
:E END
:!********************************************************************
:N Fnc_My_silicon
:S    500,   135,   358
:T Command
:A parameter of plan
:D Menu of parameter of plan
:C /prep7
:D 支撑平台材料的参数
Inp_NoApply
Cmd_)*Cset,1,3
Fld_0
  Typ_Lab
  Prm_请输入蒙皮材料参数:
Fld_2
  Prm_弹性模量:[EX]
  Typ_real
  Def_*par(3.0e4)
Fld_3
  Prm_泊松比:[PRXY]
  Typ_real
  Def_*par(0.2)
Fld_4
  Prm_密度:[DENS]
  Typ_real
  Def_*par(2600e-12)
Cmd_)/go
Cmd_)*get,EX_Silicon,cpar,1
Cmd_)*get,PRXY_Silicon,cpar,2
Cmd_)*get,DENS_Silicon,cpar,3
Cmd_)/input,Parasilicon.mac
:E END
:!********************************************************************
:N Fnc_Steel_column
:S    689,   113,   569mmand
:A Model_Support
:D Menu of Model_Support
:C /prep7
:D 吊装模型
Inp_NoApply
Cmd_)*Cset,1,4
Fld_0
  Typ_Lab
  Prm_请输入吊装几何模型参数：  
Fld_2
  Prm_上部绗架高度[H]
  Typ_real
  def_*par (1)
Fld_3
  Prm_吊装跨径[L]
  Typ_Real
  Def_*par (8)
Fld_4
  Prm_跨径总步长[N]
  Typ_Real
  Def_*par (8)
Fld_5
  Prm_吊装宽度[D]
  Typ_Real
  Def_*par (1)   
Fld_6
  Prm_立柱长度[ColumnH]
  Typ_Real
  Def_*par (8)  
Fld_7
  Prm_平台高度[PlanH]
  Typ_Real
  Def_*par (4)  
Cmd_)/go
Cmd_)*get,H,cpar,1
Cmd_)*get,L,cpar,2
Cmd_)*get,N,cpar,3
Cmd_)*get,D,cpar,4  
Cmd_)*get,ColumnH,cpar,5
Cmd_)*get,PlanH,cpar,6  
Cmd_)/input,SteelModeling.mac   
:E END
:!********************************************************************
:N Fnc_Silicon_plate
:S    321,   120,   194
:T Command
:A Model_Plane
:D Menu of Model_Plane
:C /prep7
:D 平台几何模型
Inp_NoApply
Cmd_)*Cset,1,1
Fld_0
  Typ_Lab
  Prm_请输入平台几何模型参数：
Fld_2 
  Prm_平台蒙皮厚度[t]
  Typ_Real
  Def_*PAR (0.05)  
Cmd_)/go
Cmd_)*get,t,cpar,1
Cmd_)/input,SiliconModeling.mac
:E END
:!********************************************************************
:N Fnc_Mesh_steel
:S    325,   119,   199
:T Command
:A Mesh_Support
:D Menu of Mesh_Support
:C /prep7
:D 平台网格划分
Inp_NoApply
Cmd_)*Cset,1,1
Fld_0
  Typ_Lab
  Prm_请输入网格划分参数[单击OK确定]：
Fld_2
  Prm_单个步长划分份数[s1]
  Typ_Real
  Def_*PAR (5)
Cmd_)/go
Cmd_)*Get,s1,cpar,1
Cmd_)/INPUT,SteelMeshing.mac
:E END
:!********************************************************************
:N Fnc_Mesh_silicon
:S    302,   117,   178
:T Command
:A Mesh_Plane
:D Menu of Mesh_Plane
:C /prep7
:D 平台网格划分
Inp_NoApply
Fld_0
  Typ_Lab
  Prm_请输入蒙皮网格参数：
Fld_2
  Prm_基本网格单元尺寸[size]
  Typ_Real
  Def_*PAR (1)
Cmd_)/go
Cmd_)*Get,size,cpar,1
Cmd_)/INPUT,SiliconMeshing.mac
:E END
:!********************************************************************
:N Fnc_Model_DDof
:!添加约束
:S    511,    96,   408
:T Command
:A Model_DDof
:D 添加约束及荷载
Inp_NoApply
Cmd_)*Cset,1,2
Fld_0
  Typ_Lab
  Prm_请输入约束荷载及重力场参数：
Fld_2
  Prm_风荷载[q]
  Typ_Real
  Def_*PAR (-30)
Fld_3
  Prm_重力加速度[g]
  Typ_Real
  Def_*PAR (9.8)
Fld_4
  Prm_固定约束[US]
  Typ_Real
  Def_*PAR (0)
Fld_5
  Prm_集中荷载[fy]
  Typ_Real
  Def_*PAR (1000)
Cmd_)/go
Cmd_)*Get,q,CPAR,1
Cmd_)*Get,g,CPAR,2
Cmd_)*Get,US,CPAR,3
Cmd_)*Get,fy,CPAR,4
Cmd_)/INPUT,Constraints&loads.mac
:E END
:!********************************************************************
:N Fnc_Model_SSolve
:S    196,    83,   106
:T Command
:A Model_SSolve
:D 求解计算
Inp_NoApply
Fld_0
  Typ_Lab
  Prm_确认建模无误后，单击OK开始求解
Cmd_)/go
Cmd_)/input,SharktoothSolve.mac
:E END
:!********************************************************************
:N Fnc_X_stress
:S    205,   100,    98
:T Command
:A X-Structure-stress
:D 显示结构的X方向应力云图
Inp_NoApply
Fld_0
  Typ_Lab
  Prm_单击OK显示结构的X方向应力云图
Cmd_)/go
Cmd_)/Input,pxstress.mac
:E END
:!********************************************************************
:N Fnc_Y_stress
:S    205,   100,    98
:T Command
:A Y-Structure-stress
:D 显示结构的Y方向应力云图
Inp_NoApply
Fld_0
  Typ_Lab
  Prm_单击OK显示结构的Y方向应力云图
Cmd_)/go
Cmd_)/Input,pystress.mac
:E END
:!********************************************************************
:N Fnc_Z_stress
:S    205,   100,    98
:T Command
:A Z-Structure-stress
:D 显示结构的Z方向应力云图
Inp_NoApply
Fld_0
  Typ_Lab
  Prm_单击OK显示结构的Z方向应力云图
Cmd_)/go
Cmd_)/Input,pzstress.mac
:E END
:!********************************************************************
:N Fnc_FN-stress
:S    195,    91,    97
:T Command
:A FN-stress
:D 显示结构的轴力应力云图
Inp_NoApply
Fld_0
  Typ_Lab
  Prm_单击OK显示结构的轴力应力云图
Cmd_)/go
Cmd_)/Input,FNstress.mac
:E END
:!********************************************************************
:N Fnc_X-Structure-displacement
:S    233,   122,   104
:T Command
:A X-Structure-displacement
:D 显示结构的X方向位移云图
Inp_NoApply
Fld_0
  Typ_Lab
  Prm_单击OK显示结构的X方向位移云图
Cmd_)/go
Cmd_)/Input,pxdisplacement.mac
:E END
:!********************************************************************
:N Fnc_Y-Structure-displacement
:S    233,   122,   104
:T Command
:A Y-Structure-displacement
:D 显示结构的Y方向位移云图
Inp_NoApply
Fld_0
  Typ_Lab
  Prm_单击OK显示结构的Y方向位移云图
Cmd_)/go
Cmd_)/Input,pydisplacement.mac
:E END
:!********************************************************************
:N Fnc_Z-Structure-displacement
:S    233,   122,   104
:T Command
:A Z-Structure-displacement
:D 显示结构的Z方向位移云图
Inp_NoApply
Fld_0
  Typ_Lab
  Prm_单击OK显示结构的Z方向位移云图
Cmd_)/go
Cmd_)/Input,pzdisplacement.mac
:E END
:!********************************************************************
:N Fnc_Total-Structure-displacement
:S    238,   127,   104
:T Command
:A Total-Structure-displacement
:D 显示结构的总位移云图
Inp_NoApply
Fld_0
  Typ_Lab
  Prm_单击OK显示结构的总位移云图
Cmd_)/go
Cmd_)/Input,Totaldisplacement.mac
:E END
:!********************************************
:N Fnc_OMEGA_dele
:S    314,   170,   137
:T Command
:C )! Fnc_OMEGA_dele
:A    Global
:D Delete Global Angular Velocity
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_OMEGA
Inp_NoApply
Cmd_OMEGA,0,0,0
Fld_0
 Typ_Lab
 Prm_[OMEGA]  This function sets all angular velocities
Fld_0
 Typ_Lab
 Prm_         to zero!
:E END
:! 
:N Fnc_OPNCONTROL
:S    401,   154,   240
:T Command
:C )! Fnc_OPNCONTROL
:A Open Control
:D Open Control
:P (FULL_ANS)
:K #(NLCNTRL)
:H Hlp_C_OPNCONTROL
Inp_NoApply
Cmd_OPNCONTROL
Fld_0
 Typ_Lab
 Prm_[OPNCONTRL] Opening up of time step
Fld_2
 Prm_Physical value to open
 Typ_LIS_OPTIONB
 LIS_TEMP,TEMP
 Def_TEMP
Fld_3
 Prm_Threshold open value
 Typ_REAL
Fld_4
 Prm_Number of substeps
 Typ_INT
:E END
:! 
:N Fnc_OUTPR
:S   1317,   325,   985
:T Command
:C )! Fnc_OUTPR
:A Solu Printout
:D Solution Printout Controls
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,11
:C )_zc(1)='BASIC','NSOL','RSOL','ESOL','NLOAD','VENG','SFOR','ALL'
:C )_zc(9)='NONE','LAST','ALL'
:C )*del,_z
:C )*dim,_z,,3
:C )/go
:K #(PREP7*SOLUTION)
:H Hlp_C_OUTPR
Cmd_)/nopr
Cmd_)*set,_z(1)
 Fld_0
  Typ_Lab
  Prm_[OUTPR]  Solution Printout Controls
 Fld_2
  Prm_Item   Item for printout control
  Typ_LIS_OPTIONB
  LIS_Basic quantities,1
  LIS_Nodal DOF solu  ,2
  LIS_Nodal reactions ,3
  LIS_Element solution,4
  LIS_Elem nodal loads,5
  LIS_Element energies,6
  LIS_Stabl forc/momnt,7
  LIS_All items       ,8
 Fld_3
  Prm_FREQ   Print frequency
  Typ_LIS_RADIOB
  LIS_None            ,9
  LIS_Last substep    ,10
  LIS_Every substep   ,11
  LIS_Every Nth substp,12
Cmd_)*CSET,1,1
 Fld_2
  Prm_                   Value of N 
  Typ_INT
  Def_Blank
 Fld_0
  Typ_Lab  
  Prm_             (Use negative N for equally spaced data) 
Cmd_)*set
 Fld_2
  Typ_Def__z1
 Fld_3
  Typ_Def_
 Dlm_'
 Fld_4
  Prm_Cname  Component name -
  Typ_LIS_OPTIONB
  LIS_All entities    ," "
  LIS_*READ,CM
 Dlm_'
 Fld_0
  Typ_Lab
  Prm_       - for which above setting is to be applied
 Fld_5
  Typ_Def_
Cmd_)/go
Cal_Fnc_OUTPR_ADD1,3,LE,11,2
Cal_Fnc_OUTPR_ADD2,3,GT,11,2
:E END
:! 
:N Fnc_OUTPR_ADD1
:S    297,   179,   111
:T Command
:C )! Fnc_OUTPR_ADD1
:C )/nopr
:C )*if,_z(1),eq,1,then
:C ) _z1=''
:C )*elseif,_z(1),eq,8,then
:C ) _z1=''
:C )*endif
:C )/go
Inp_P
Cmd_OUTPR
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*PAR(_zc(_z(2)))
 Fld_4
  Typ_Def_*PAR(_z1)
:E END
:! 
:N Fnc_OUTPR_ADD2
:S    289,   179,   103
:T Command
:C )! Fnc_OUTPR_ADD2
:C )/nopr
:C )*if,_z(1),eq,1,then
:C ) _z1=''
:C )*elseif,_z(1),eq,8,then
:C ) _z1=''
:C )*endif
:C )/go
Inp_P
Cmd_OUTPR
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*PAR(_z1)
:E END
:! 
:N Fnc_OUTPR_cw
:S    200,   161,    32
:T Command
:C )! Fnc_OUTPR_cw ORPHAN
:A Printout Ctrls
:D Solution Printout Controls
:K #(PREP7*SOLUTION)
:H Hlp_C_OUTPR
Inp_P
Cmd_)OUTPR,STAT,,, ,,, ,1
:E END
:! 
:N Fnc_OUTRES
:S   2061,   524,  1530
:T Command
:C )! Fnc_OUTRES
:A DB/Results File
:D Controls for Database and Results File Writing
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,20
:C )_zc(1)='ALL','NSOL','RSOL','ESOL','NLOAD','STRS','EPEL','EPTH'
:C )_zc(9)='EPPL','EPCR','FGRAD','FFLUX','MISC','NONE','LAST','ALL'
:C )_zc(17)='BASIC','V','A','LOCI'
:C )*del,_z
:C )*dim,_z,,3
:C )_z2=2**(-100) ! Establish 'tiny' to force blank defaults at all times
:C )/go
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_OUTRES
Cmd_)/nopr
Cmd_)*set,_z(1)
 Fld_0
  Typ_Lab
  Prm_[OUTRES]  Controls for Database and Results File Writing
 Fld_2
  Prm_Item   Item to be controlled
  Typ_LIS_OPTIONB
  LIS_All items       ,1
  LIS_Basic quantities,17
  LIS_Nodal DOF solu  ,2
  LIS_Nodal reactions ,3
  LIS_Element solution,4
  LIS_Elem nodal loads,5
  LIS_Elem nodal strs ,6
  LIS_Elem elast strn ,7
  LIS_Elem therm strn ,8
  LIS_Elem plast strn ,9
  LIS_Elem creep strn ,10
  LIS_Elem nodal grad ,11
  LIS_Elem nodal flux ,12
  LIS_Elem misc data  ,13
  LIS_Nodal velocity  ,18
  LIS_Nodal acceleratn,19
  LIS_Intgr point locs,20
 Fld_3
  Prm_FREQ   File write frequency
  Typ_LIS_RADIOB
  LIS_Reset           ,19
  LIS_None            ,14
  LIS_At time points  ,18
  K_LN(expass)
  LIS_Last substep    ,15
  LIS_Every substep   ,16
  K_LN(expass)
  LIS_Every Nth substp,17
  K_LN(harmonic)
  Def_15
  K_LN(HARMONIC*EXPASS)
  Def_16
Cmd_)*CSET,1,1
K_CM(STATIC*TRNSIENT*HARMONIC*NOFILTER)
 Fld_2
  Prm_                   Value of N 
  Typ_INT
  Def_Blank
 Fld_0
  Typ_Lab 
  Prm_             (Use negative N for equally spaced data)
Cmd_)!
K_CM(static*trnsient*harmonic)
 Fld_2
  Def_*PAR(_z2)
Cmd_)*SET,_z1
 Fld_2
  Typ_Def_'
  Dlm_~
 Fld_3
  Prm_Cname  Component name -
  Typ_LIS_OPTIONB
  LIS_All entities    ," "
  LIS_*READ,CM
  Dlm_~
 Fld_0
  Typ_Lab
  Prm_       - for which above setting is to be applied
 Fld_4
  Typ_Def_'
Cmd_)/go
Cal_Fnc_OUTRES_ADD1,3,LE,16,2
Cal_Fnc_OUTRES_ADD2,3,EQ,17,2
Cal_Fnc_OUTRES_ADD3,3,EQ,18,2
Cal_Fnc_OUTRES_ADD4,3,EQ,19,2
:E END
:! 
:N Fnc_OUTRES_31
:S    303,   136,   160
:T Command
:C )! Fnc_OUTRES_31
:D Database/Results File Writing at time points
:H Hlp_C_OUTRES
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_0
  Typ_Lab
  Prm_   OUTRES command based on 
 Fld_2
  Prm_Existing array
  Typ_LIS
  LIS_*READ,PARA
Cmd_)/GO
Cal_Fnc_OUTRES_311
:E END
:! 
:N Fnc_OUTRES_311
:S    198,    74,   117
:T Command
:C )! Fnc_OUTRES_311
Inp_P
Cmd_OUTRES
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Dlm_%
 Fld_4
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_5
  Typ_Lab
:E END
:! 
:N Fnc_OUTRES_32
:S    306,   127,   172
:T Command
:C )! Fnc_OUTRES_32
:D Create New Array for OUTRES command
:H Hlp_C_OUTRES
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_2
  Prm_Name of new array
  Typ_Char,32,32
Cmd_)*SET,_zn
 Fld_2
  Prm_Number of time points
  Typ_Int
  Def_1
Cal_Fnc_OUTRES_321
:E END
:! 
:N Fnc_OUTRES_321
:S    259,    74,   178
:T Command
:C )! Fnc_OUTRES_321
Inp_P
Cmd_)/GO
! Exclude_from_paths
Cmd_*DIM
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_ARRAY
 Fld_4
  Typ_Def_*PAR(_zn)
 Fld_5
  Typ_Def_1
 Fld_6
  Typ_Def_1
Cal_Fnc_OUTRES_322
:E END
:! 
:N Fnc_OUTRES_322
:S    227,    74,   146
:T Command
:C )! Fnc_OUTRES_322
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(1)
  Dlm_(
  Fld_3
  Typ_Def_1
  Dlm_,
  Fld_4
  Typ_Def_1
  Dlm_)
  Fld_5
  Typ_Lab
Cal_Fnc_OUTRES_323
:E END
:! 
:N Fnc_OUTRES_323
:S    198,    74,   117
:T Command
:C )! Fnc_OUTRES_323
Inp_P
Cmd_OUTRES
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Dlm_%
 Fld_4
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_5
  Typ_Lab
:E END
:! 
:N Fnc_OUTRES_ADD1
:S   1066,   908,   151
:T Command
:C )! Fnc_OUTRES_ADD1
:C )/nopr
:C )*if,_z(1),eq,1,then
:C )*if,_z1,ne,' ',then
:C )*create,ansuitmp
:C )*msg,warn
:C )OUTRES command ignored component selected due to item,%/&
:C )ALL being also selected. See OUTRES help for details.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C ) _z1=''
:C )*endif
:C )!
:C )*if,_z(1),eq,17,then
:C )*if,_z1,ne,' ',then
:C )*create,ansuitmp
:C )*msg,warn
:C )OUTRES command ignored component selected due to item,%/&
:C )BASIC being also selected. See OUTRES help for details.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C ) _z1=''
:C )*endif
:C )!
:C )*if,_z(1),eq,3,then
:C )*if,_z1,ne,' ',then
:C )*create,ansuitmp
:C )*msg,warn
:C )OUTRES command ignored component selected due to item,%/&
:C )RSOL being also selected. See OUTRES help for details.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C ) _z1=''
:C )*endif
:C )/go
Inp_P
Cmd_OUTRES
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
 K_FL(static*trnsient*(harmonic+full))
  Typ_Def_*PAR(_zc(_z(2)))
 Fld_4
  Typ_Def_*PAR(_z1)
:E END
:! 
:N Fnc_OUTRES_ADD2
:S   1068,   908,   153
:T Command
:C )! Fnc_OUTRES_ADD2
:C )/nopr
:C )*if,_z(1),eq,1,then
:C )*if,_z1,ne,' ',then
:C )*create,ansuitmp
:C )*msg,warn
:C )OUTRES command ignored component selected due to item,%/&
:C )ALL being also selected. See OUTRES help for details.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C ) _z1=''
:C )*endif
:C )!
:C )*if,_z(1),eq,17,then
:C )*if,_z1,ne,' ',then
:C )*create,ansuitmp
:C )*msg,warn
:C )OUTRES command ignored component selected due to item,%/&
:C )BASIC being also selected. See OUTRES help for details.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C ) _z1=''
:C )*endif
:C )!
:C )*if,_z(1),eq,3,then
:C )*if,_z1,ne,' ',then
:C )*create,ansuitmp
:C )*msg,warn
:C )OUTRES command ignored component selected due to item,%/&
:C )RSOL being also selected. See OUTRES help for details.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C ) _z1=''
:C )*endif
:C )/go
Inp_P
Cmd_OUTRES
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  K_FL(STATIC*TRNSIENT*(HARMONIC+FULL)*NOFILTER)
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*PAR(_z1)
:E END
:! 
:N Fnc_OUTRES_ADD3
:S    685,   140,   538
:T Command
:C )! Fnc_OUTRES_ADD3
:D Database/Results File Writing at time points
:H Hlp_C_OUTRES
Cmd_!
 Fld_0
  Typ_Lab
  Prm_   OUTRES command based on time points
 Fld_2
  Prm_   Take time points from
  Typ_LIS_RADIOB
  LIS_Existing array  ,1
  LIS_New array       ,2
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_
 Fld_0
  Typ_Lab
  Prm_Note: OUTRES at given time point is valid for thermal elements,
 Fld_0
  Typ_Lab
  Prm_      thermal-electric elements, thermal surface effect elements
 Fld_0
  Typ_Lab
  Prm_      and FLUID116, or any combination thereof.
 Fld_0
  Typ_Lab
  Prm_
Cal_Fnc_OUTRES_31,2,EQ,1,1
Cal_Fnc_OUTRES_32,2,EQ,2,1
:E END
:! 
:N Fnc_OUTRES_ADD4
:S    123,    76,    40
:T Command
:C )! Fnc_OUTRES_ADD4
Inp_P
Cmd_OUTRES
 Fld_2
  Typ_Def_ERASE
:E END
:! 
:N Fnc_OUTRES_cw
:S    225,   185,    33
:T Command
:C )! Fnc_OUTRES_cw ORPHAN
:A DB/Results File
:D Controls for Database and Results File Writing
:K #(PREP7*SOLUTION)
:H Hlp_C_OUTRES
Inp_P
Cmd_)OUTRES,STAT,,, ,,, ,1
:E END
:! 
:N Fnc_OUT_stat
:S    251,   158,    86
:T Command
:C )! Fnc_OUT_stat
:A Show Status
:D Show Status of Output Controls
:K #(PREP7*SOLUTION)
:H Hlp_UI_outstat
Inp_P
Cmd_)/LWBEGIN,ansuitmp
Cmd_)$OUTPR,STAT
Cmd_)$OUTRES,STAT
Cmd_)/LWSHOW,ansuitmp
:E END
:! 
:N Fnc_OceanRead
:S   1123,   743,   373
:T Cmd
:C )! Fnc_OceanRead
:C )/NOPR
:C )*DEL,_zc
:C )*DEL,_zp
:C )*SET,_zc,'/*.*'
:C )*SET,_zp,'\*.*'
:C )*GET,_z2,common,,sectionc,,chr8,5
:C )*IF,_z2,NE,'OFF',THEN
:C )*GET,_z3,common,,sectionc,,chr8,7
:C )*GET,_z4,common,,sectionc,,chr8,9
:C )*GET,_z5,common,,sectionc,,chr8,11
:C )*GET,_z6,common,,sectionc,,chr8,13
:C )*GET,_z7,common,,sectionc,,chr8,15
:C )*GET,_z8,common,,sectionc,,chr8,17
:C )*GET,_z9,common,,sectionc,,chr8,19
:C )*ELSE
:C )*SET,_z2,' '
:C )*SET,_z3,' '
:C )*SET,_z4,' '
:C )*SET,_z5,' '
:C )*SET,_z6,' '
:C )*SET,_z7,' '
:C )*SET,_z8,' '
:C )*SET,_z9,'.'
:C )*ENDIF
:C )*GET,_zid,common,,sectioncm,,int,6
:C )/GO
:A Import Ocean
:D Read External Ocean File
:H Hlp_C_OCREAD
Inp_NoApply
Cmd_OCREAD
 Fld_0
  Typ_Lab
  Prm_[OCREAD]  Read a file containing ocean data for wave %_zid%
 Fld_2
  Prm_FILE    External ocean file
  Typ_FILE
K_LN(intelnt+alphant)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zc%)
K_LN(INTELNT*ALPHANT)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zp%)
 Fld_5
  Prm_Integer option for user routine
  Typ_INT
:E END
:! 
:N Fnc_OptFil
:S    282,   241,    34
:T Cmd_N
:C )! Fnc_OptFil
:C )! The purpose of this block is to make the conversion
:C )! from UIDL to EUIDL function properly
:C )! Topological Optimization is undocumented at revision 14
:A Opt
:K opt
Inp_P
! Exclude_from_paths
Cmd_)!
:E END
:! 
:N Fnc_OutOpts2
:S   1246,   458,   781
:T Command
:C )! Fnc_OutOpts2
:C )!/NOPR
:C )!
:C )KEYW,KEY1,0
:C )KEYW,KEY2,0
:C )KEYW,KEY3,0
:C )KEYW,KEY4,0
:C )*if,_z(1),EQ,-1,then
:C )KEYW,KEY1,1
:C )*elseif,_z(1),EQ,4,then
:C )KEYW,KEY2,1
:C )*else
:C )KEYW,KEY3,1
:C )*endif
:C )!
:C )*if,_z(6),EQ,1,then
:C )KEYW,KEY4,1
:C )*endif
:C )!
:C )*IF,_z(5),EQ,0.0,THEN    ! This is for the SHELL command
:C )KEYW,KEY5,0
:C )*ELSE
:C )KEYW,KEY5,1
:C )*ENDIF
:C )/GO
Inp_P
Cmd_RSYS
 Fld_2
 K_FL(KEY1)
  Typ_Def_SOLU
 Fld_2
 K_FL(KEY2)
  Typ_Def_*CPAR(1)
 Fld_2
 K_FL(KEY3)
  Typ_Def_*PAR(_z(1))
!
Cmd_ERNORM
K_CM(powrgrph)
P_CM(LINPLUS*THERMAL)
Fld_2
Typ_Def_*PAR(_zc(_z(3)+1))
!
Cmd_AVPRIN
P_CM(LINPLUS*THERMAL*ELECMAG)
Fld_2
Typ_Def_*PAR(_z(4))
Fld_3
K_FL(STRUCTRL+powrgrph)
Typ_Def_*PAR(_z(7))
!
Cmd_SHELL
K_CM(KEY5)
P_CM(LINPLUS)
Fld_2
Typ_Def_*PAR(_zc(_z(5)+2))
!
Cmd_AVRES
K_CM(POWRGRPH)
 Fld_2
  Typ_Def_*PAR(_z(11))
 Fld_3
  Typ_Def_*PAR(_zc(_z(16)+12))
!
Cmd_/EFACET
K_CM(POWRGRPH)
 Fld_2
  Typ_Def_*PAR(_z(12))
!
Cmd_LAYER
K_CM(pmethod)
P_CM(LINPLUS+ed)
Fld_2
K_FL(KEY4)
Typ_Def_FCMAX
Fld_2
K_FL(key4)
Typ_Def_*CPAR(2)
!
Cmd_FORCE
P_CM(LINPLUS*ELECMAG)
 Fld_2
  Typ_Def_*PAR(_zc(_z(9)+5))
!
Cmd_)/NOPR
Cmd_)*DEL,_z
Cmd_)*DEL,_zc
Cmd_)/GO
:E END
:! 
:N Fnc_OutOpts3
:S    949,   382,   560
:T Command
:C )! Fnc_OutOpts3
:C )!
:C )KEYW,KEY1,0
:C )KEYW,KEY2,0
:C )KEYW,KEY3,0
:C )KEYW,KEY4,0
:C )*if,_z(1),EQ,-1,then
:C )KEYW,KEY1,1
:C )*elseif,_z(1),EQ,4,then
:C )KEYW,KEY2,1
:C )*else
:C )KEYW,KEY3,1
:C )*endif
:C )!
:C )*IF,_z(5),EQ,0.0,THEN    ! This is for the SHELL command
:C )KEYW,KEY5,0
:C )*ELSE
:C )KEYW,KEY5,1
:C )*ENDIF
Inp_P
Cmd_)/GO
!
Cmd_RSYS
 Fld_2
 K_FL(KEY1)
  Typ_Def_SOLU
 Fld_2
 K_FL(KEY2)
  Typ_Def_*CPAR(1)
 Fld_2
 K_FL(KEY3)
  Typ_Def_*PAR(_z(1))
!
Cmd_ERNORM
K_CM(powrgrph)
P_CM(LINPLUS*THERMAL)
 Fld_2
  Typ_Def_*PAR(_zc(_z(3)+1))
!
Cmd_AVRES
K_CM(POWRGRPH)
 Fld_2
  Typ_Def_*PAR(_z(11))
 Fld_3
  Typ_Def_*PAR(_zc(_z(16)+12))
!
Cmd_AVPRIN
P_CM(LINPLUS*THERMAL*ELECMAG)
Fld_2
Typ_Def_*PAR(_z(4))
Fld_3
K_FL(STRUCTRL)
Typ_Def_*PAR(_z(7))
!
Cmd_SHELL
K_CM(KEY5+THERMAL)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*PAR(_zc(_z(5)+2))
!
Cmd_)/NOPR
Cmd_)*DEL,_z
Cmd_)*DEL,_zc
Cmd_)/GO
:E END
:! 
:N Fnc_OutOpts_p1
:S   3717,  1054,  2656
:T Command
:C )! Fnc_OutOpts_p1
:A Options for Outp
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,16
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,13
:C )_zc(1)='OFF','ON','TOP','MID','BOT'
:C )_zc(6)='STATIC','DAMP','INERT','TOTAL',
:C )_zc(10)='EFFS','TOTS'
:C )_zc(12)='    ','FULL'
:C )!
:C )_z0=0
:C )*get,_z9,ACTIVE,,RSYS
:C )*if,_z9,GE,11,then
:C )_z8='4'
:C )*else
:C )_z8=CHRVAL(_z9)
:C )_z9=2**(-100)
:C )*endif
:C )!
:C )*GET,_z5,common,,d3com,,int,132   ! PGrLevel (for /EFACET)
:C )*IF,_z5,LE,0,THEN
:C )_z5=1
:C )*ELSEIF,_z5,GE,3,THEN
:C )_z5=4
:C )*ENDIF
:C )*GET,_z2,common,,cpost1,,int,84   ! layer num 
:C )*IF,_z2,LT,0,THEN 
:C )_z3=1 
:C )*ELSE 
:C )_z3=0 
:C )*ENDIF 
:C )*GET,_z4,common,,cpost1,,int,7   ! error norm key    
:C )*IF,_z4,eq,1,then
:C )_z4=1
:C )*else
:C )_z4=0
:C )*ENDIF
:C )*get,_z6,common,,cpost1,,int,408
:C )keyw,kyavpr,_z6
:C )*GET,_z6,common,,cpost1,,int,5
:C )*IF,_z6,EQ,0.0,THEN
:C )KEYW,KEY1,1
:C )*ELSE
:C )KEYW,KEY1,0
:C )*ENDIF
:C )/GO
:D Options for Output
:H Hlp_UI_outopts
:K (POST1)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_Options for Output
 Fld_0
 K_FL(THERMAL+structrl)
  Typ_Lab
  Prm_(Thermal options only are shown)
!  
 Fld_2
  Prm_[RSYS]  Results coord system
  Typ_LIS_OPTIONB
   LIS_Global Cartesian,0
   LIS_Global cylindric,1
   LIS_Global spherical,2
   LIS_As calculated   ,-1  
   LIS_Local system    ,4
  Def_*PAR(_z8)
!  
Cmd_)*CSET,1,1
 Fld_2
  Prm_     Local system reference no.
  Typ_int
  Def_*PAR(_z9)
!  
 Fld_0
 K_FL(STRUCTRL)
  Typ_Sep
!  
Cmd_)*SET,_z(3)
K_CM(powrgrph)
P_CM(LINPLUS*THERMAL*ELECMAG)
 Fld_2
 K_FL(powrgrph)
 P_FL(LINPLUS*THERMAL)
  Prm_[ERNORM]  Error estimation calcs
  Typ_LOGI,Off             ,On
  Def_*PAR(_z4)
!  
Cmd_)*SET,_z(4)
 Fld_2
 P_FL(LINPLUS*THERMAL*ELECMAG)
  Prm_[AVPRIN]  Principal stress calcs
  Typ_LIS_OPTIONB
   LIS_From components ,0
   LIS_From principals ,1
  Def_*GET(common,,cpost1,,int,1)
!
Cmd_)*SET,_z(7)
K_CM(powrgrph+STRUCTRL)
P_CM(LINPLUS*THERMAL*ELECMAG)
 Fld_2
  Prm_     Effective NU for EQV strain
  Typ_REAL
  K_LN(KYAVPR)
  Def_*GET(COMMON,,CPOST1,,REAL,565)
  K_LN(kyavpr)
  Def_*PAR(_z0)
!  
Cmd_)*SET,_z(11)
K_CM(POWRGRPH)
 Fld_2
  Prm_[AVRES] Avg rslts (pwr grph) for
  Typ_Lis_OPTIONB
  Lis_All data         ,1
  Lis_All but Mat Prop ,2
  Lis_All but Real Cons,3
  Lis_All but Mat+Real ,4
  Def_*GET(common,,d3com2,,int,63)
!  
Cmd_)*SET,_z(16)
K_CM(POWRGRPH)
 Fld_2
  Prm_        Use interior data
  Typ_Logi,NO,YES
  Def_*GET(common,,d3com2,,int,62)
!
Cmd_)*SET,_z(12)
K_CM(POWRGRPH)
 Fld_2
  Prm_[/EFACET]  Facets/element edge
  Typ_Lis_OPTIONB
   Lis_ 1 facet/edge  ,1
   Lis_ 2 facets/edge ,2
   Lis_ 4 facets/edge ,4
  Def_*PAR(_z5)
!
Cmd_)*SET,_z(5)
K_CM(STRUCTRL*THERMAL)
P_CM(LINPLUS)
 Fld_0
 K_FL(STRUCTRL)
  Typ_Sep
!  
 Fld_2
 K_FL(STRUCTRL*THERMAL)
 P_FL(LINPLUS)
  Prm_[SHELL]  Shell results are from
  Typ_LIS_OPTIONB
   K_LN(KEY1)
   Lis_  - DEFAULT -   ,0
   LIS_Top layer       ,1
   LIS_Middle layer    ,2
   LIS_Bottom layer    ,3
  Def_*GET(common,,cpost1,,int,5)
!
 Fld_3
 K_FL(STRUCTRL+pmethod)
 P_FL(LINPLUS+ed)
  Prm_[LAYER]  Layer results are from
  Typ_LIS_RADIOB
   LIS_Max failure crit,1
   LIS_Specified layer ,0
  Def_*PAR(_z3)
!  
Cmd_)*CSET,2,2
 Fld_2
 K_FL(STRUCTRL+pmethod)
 P_FL(LINPLUS+ed)
  Prm_         Specified layer number
  Typ_int
  Def_*PAR(_z2)
!  
Cmd_)*SET,_z(9)
P_CM(LINPLUS*ELECMAG)
 Fld_2
  Prm_[FORCE]  Force results are
  Typ_LIS_OPTIONB
   LIS_Total force     ,4
   LIS_Static only     ,1
   LIS_Damping only    ,2
   LIS_Inertia only    ,3
  Def_*GET(common,,cpost1,,int,8)
!  
 Fld_3
  Typ_Def_*GET(ACTIVE,,KEYWORD,,STRUCTRL)
Cal_Fnc_OutOpts2,3,NE,0
Cal_Fnc_OutOpts3,3,EQ,0
:E END
:! 
:N Fnc_P26VAR_ADD
:S    354,   299,    33
:T Cmd
:C )! Fnc_P26VAR_ADD
:C )/NOPR
:C )*DEL,_z1
:C )*DO,_z1,1,200
:C )/NOPR
:C )*GET,_z2,common,,cpst26,,int,(612+_z1) ! variable number to be used next  
:C )*IF,_z2,EQ,0,EXIT
:C )*ENDDO
:C )/GO
:A Add Variable
:D Add Time-History Variable
:K #(POST26)
Inp_P
Cmd_)!
Cal_Fnc_P26VAR_ADD2
:E END_Fnc_P26VAR_ADD
:! 
:N Fnc_P26VAR_ADD2
:S    714,   148,   543
:T Cmd
:C )! Fnc_P26VAR_ADD2
:A Add Variable
:D Add Time-History Variable
:K #(POST26)
:H Hlp_UI_varadd2
Inp_NoApply
Cmd_)!
 Fld_2
  Prm_Type of variable
  Typ_LIS_RadioB
  LIS_Nodal DOF result,1
  K_LN(CIRC)
  LIS_Element results ,6
  K_LN(circ)
  LIS_Element results ,2
  K_LN(circ)
  LIS_... by seq no.  ,6
  K_LN(circ)
  P_LN(LINPLUS*THERMAL*ELECMAG)
  LIS_Reaction forces ,3
  P_LN(LINPLUS)
  K_LN(psdrandm+circ)
  LIS_Gap Force data  ,4
  K_LN(psdrandm+circ)
  P_LN(LINPLUS*THERMAL*ELECMAG)
  LIS_Solution summary,5 
Cal_Fnc_NSOL,2,EQ,1
Cal_Fnc_ESOL,2,EQ,2
Cal_Fnc_RFORCE,2,EQ,3
Cal_Fnc_GAPF,2,EQ,4
Cal_Fnc_SOLU,2,EQ,5
Cal_Fnc_ESOL_SN,2,EQ,6
:E END_Fnc_P26VAR_ADD2
:! 
:N Fnc_P26VAR_EDIT
:S   1257,   970,   280
:T Command
:C )! Fnc_P26VAR_EDIT
:C )/NOPR
:C )!_z2= variable type, where 1=ESOL, 2=RFOR, 3=SOLU, 4=NSOL, 5=GAPF
:C )*GET,_z2,common,,cpst26,,int,(612+_z1)  ! variable no. to be edited      
:C )*GET,_z3,common,,cpst26,,int,(1012+_z1) !check if node no. is 0 for seq # 
:C )*GET,_z9,common,,cpst26,,chr4,(420+_z1)
:C )*IF,_z2,EQ,1,THEN
:C )*IF,_z3,EQ,0,THEN
:C )*IF,_z9,EQ,'SMIS',THEN
:C )_z4=6
:C )*ELSEIF,_z9,EQ,'NMIS',THEN
:C )_z4=6
:C )*ELSEIF,_z9,EQ,'LS',THEN
:C )_z4=6
:C )*ELSEIF,_z9,EQ,'LEPE',THEN
:C )_z4=6
:C )*ELSEIF,_z9,EQ,'LEPT',THEN
:C )_z4=6
:C )*ELSEIF,_z9,EQ,'LEPP',THEN
:C )_z4=6
:C )*ELSEIF,_z9,EQ,'LEPC',THEN
:C )_z4=6
:C )*ELSEIF,_z9,EQ,'NLIN',THEN
:C )_z4=6
:C )*ELSEIF,_z9,EQ,'LBFE',THEN
:C )_z4=6
:C )*ELSE
:C )_z4=1
:C )*ENDIF
:C )*ELSE
:C )_z4=1
:C )*ENDIF
:C )*ELSE
:C )_z4=_z2
:C )*ENDIF
:C )*IF,_z1,EQ,1,THEN
:C )_z4=7
:C )*ENDIF
:C )/GO
:A Edit Variable
:D Edit Time-History Variable
:K #(POST26)
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z4)
Cal_Fnc_ESOLe,2,EQ,1
P_LN(LINPLUS*THERMAL*ELECMAG)
Cal_Fnc_RFORCE_e,2,EQ,2
P_LN(LINPLUS*THERMAL*ELECMAG)
Cal_Fnc_SOLU,2,EQ,3
Cal_Fnc_NSOLe,2,EQ,4
P_LN(LINPLUS)
Cal_Fnc_GAPF,2,EQ,5
Cal_Fnc_ESOL_SNe,2,EQ,6
Cal_Fnc_p26NoEdit,2,GT,6
:E END
:! 
:N Fnc_P26_E_p
:S    196,   107,    82
:T Command
:C )!Fnc_P26_E_p
:A Element for Data
:D Element for Data
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_ELEM
  Min_0
  Cnt_1
  Pfm_2
Cmd_)/GO
:E END
:! 
:N Fnc_P26_N_p
:S    190,   101,    82
:T Command
:C )!Fnc_P26_N_p
:A Node for Data
:D Node for Data
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_NODE
  Min_0
  Cnt_1
  Pfm_2
Cmd_)/GO
:E END
:! 
:N Fnc_PAGET_AR
:S    631,   161,   463
:T Command
:C )! Fnc_PAGET_AR
:A Path in array
:D Archive Path in to Array Parameters
:H Hlp_C_PAGET
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_za
 Fld_0
  Typ_Lab
  Prm_[PAGET] Archive path information in to arrays
 Fld_2
  Prm_POPT  Choose option to archive:
   Typ_Lis_RadioB
    Lis_All information ,0
    Lis_POIN-only points,1
    Lis_TABL-only data,2
    Lis_LABE-only labels,3
 Fld_0
  Typ_Lab
  Prm_Note: "All information" choice leads to the
 Fld_0
  Typ_Lab
  Prm_      consecutive execution of all other options.
Cal_Fnc_PAGET_C0,2,eq,0
Cal_Fnc_PAGET_C1,2,gt,0
:E END
:! 
:N Fnc_PAGET_C0
:S    418,   132,   279
:T Command
:C )! Fnc_PAGET_C0
:D Archive All Information
:H Hlp_C_PAGET
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_)*CSET,2,2
 Fld_2
  Typ_CHAR,4,4
  Prm_Identifier of archive arrays
  Def_TRAC
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Note: The identifier "TRAC" means creation of three
 Fld_0
  Typ_Lab
  Prm_      array parameters: TRACPOIN,TRACDATA,TRACLABL.
Cal_Fnc_PAGET_RR
:E END
:! 
:N Fnc_PAGET_C1
:S    475,   291,   177
:T Command
:C )! Fnc_PAGET_C1
:C )/NOPR
:C )*if,_za,eq,1,then
:C )_zc='Points'
:C )*elseif,_za,eq,2,then
:C )_zc='Data'
:C )*elseif,_za,eq,3,then
:C )_zc='Labels'
:C )*endif
:C )/GO
:D Archive Path %_zc% in to Array
:H Hlp_C_PAGET
:K #(POST1+RESULTS)
Cmd_)*CSET,2,2
 Fld_2
  Prm_Archive %_zc% into array
  Typ_CHAR
  Def_
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_za)
Cal_Fnc_PAGET_PO,2,eq,1
Cal_Fnc_PAGET_TA,2,eq,2
Cal_Fnc_PAGET_LA,2,eq,3
:E END
:! 
:N Fnc_PAGET_LA
:S    141,    70,    64
:T Command
:C )! Fnc_PAGET_LA
Inp_P
Cmd_PAGET
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_LABE
:E END
:! 
:N Fnc_PAGET_PO
:S    141,    70,    64
:T Command
:C )! Fnc_PAGET_PO
Inp_P
Cmd_PAGET
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_POIN
:E END
:! 
:N Fnc_PAGET_RR
:S    365,    70,   288
:T Command
:C )! Fnc_PAGET_RR
Inp_P
Cmd_PAGET
 Fld_2
  Typ_Def_*CPAR(2)
  Dlm_~
 Fld_3
  Typ_Def_*STR(POIN)
 Fld_4
  Typ_Def_POIN
Cmd_PAGET
 Fld_2
  Typ_Def_*CPAR(2)
  Dlm_~
 Fld_3
  Typ_Def_*STR(DATA)
 Fld_4
  Typ_Def_TABL
Cmd_PAGET
 Fld_2
  Typ_Def_*CPAR(2)
  Dlm_~
 Fld_3
  Typ_Def_*STR(LABL)
 Fld_4
  Typ_Def_LABE
:E END
:! 
:N Fnc_PAGET_TA
:S    141,    70,    64
:T Command
:C )! Fnc_PAGET_TA
Inp_P
Cmd_PAGET
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_TABL
:E END
:! 
:N Fnc_PAPUT_AR
:S    715,   153,   555
:T Command
:C )! Fnc_PAPUT_AR
:A Path from array
:D Retrieve Path from Arrays
:H Hlp_C_PAPUT
:K #(POST1+RESULTS)
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_0
  Typ_Lab
  Prm_[PAPUT] Retrieve path information from archive arrays
 Fld_2
  Prm_Define Path with Name :
  Typ_CHAR
  Def_
 Fld_0
  Typ_Sep
Cmd_)*SET,_za
 Fld_2
  Prm_POPT  Choose restoration option:
   Typ_Lis_RadioB
    Lis_All information ,0
    Lis_POIN-only points,1
    Lis_LABE-also labels,3
    Lis_TABL-also data,2
 Fld_0
  Typ_Lab
  Prm_Note: Use of last two options is allowed only after
 Fld_0
  Typ_Lab
  Prm_      execution of restoration option POPT=POIN. 
Cal_Fnc_PAPUT_C0,2,eq,0
Cal_Fnc_PAPUT_C1,2,gt,0
:E END
:! 
:N Fnc_PAPUT_C0
:S    516,   152,   357
:T Command
:C )! Fnc_PAPUT_C0
:A Path from array
:D Retrieve All Information
:H Hlp_C_PAPUT
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_)*CSET,2,2
 Fld_2
  Typ_CHAR,4,4
  Prm_Identifier of archive arrays
  Def_TRAC
 Fld_0
  Typ_Sep
 Fld_0
  Prm_Note: All three array parameters with the same prefix
  Typ_Lab
 Fld_0
  Prm_      must exist after use of PAGET or PLTRAC command.
  Typ_Lab
 Fld_0
  Prm_List of existing arrays
  Typ_Lis_OptionB
   LIS_*READ,PARA
Cal_Fnc_PAPUT_RR
:E END
:! 
:N Fnc_PAPUT_C1
:S    517,   412,    98
:T Command
:C )! Fnc_PAPUT_C1
:C )/NOPR
:C )KEYW,KPOIN,0
:C )KEYW,KTABL,0
:C )KEYW,KLABL,0
:C )*if,_za,eq,1,then
:C )_zc='Points'
:C )KEYW,KPOIN,1
:C )*elseif,_za,eq,2,then
:C )_zc='Data'
:C )KEYW,KTABL,1
:C )*elseif,_za,eq,3,then
:C )_zc='Labels'
:C )KEYW,KLABL,1
:C )*endif
:C )/GO
:A Path from array
:D Retrieve Path %_zc% from Array
:H Hlp_C_PAPUT
:K #(POST1+RESULTS)
Cmd_)*CSET,2,2
 Fld_2
  Prm_Restore %_zc% from array
  Typ_Lis
   LIS_*READ,PARA
Cal_Fnc_PAPUT_DD
:E END
:! 
:N Fnc_PAPUT_DD
:S    414,    70,   337
:T Command
:C )! Fnc_PAPUT_DD
Inp_P
Cmd_)/NOPR
Cmd_)*GET,_z91,PARM
K_CM(KPOIN)
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_DIM
 Fld_4
  Typ_Def_X
Cmd_)*GET,_z92,PARM
K_CM(KTABL)
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_DIM
 Fld_4
  Typ_Def_X
Cmd_)*GET,_z96,PARM
K_CM(KLABL)
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_DIM
 Fld_4
  Typ_Def_X
Cmd_)/GO
Cal_Fnc_PAPUT_EE
:E END
:! 
:N Fnc_PAPUT_EE
:S   1004,   317,   680
:T Command
:C )! Fnc_PAPUT_EE
:C )/NOPR
:C )*IF,_za,ne,1,then
:C )*GET,_z91,PATH,,NPTS
:C )*ENDIF
:C )*IF,_za,ne,2,then
:C )*GET,_z94,PATH,,NDIV
:C )*ELSE
:C )_z94=(_z92-1)/(_z91-1)
:C )*ENDIF
:C )*GET,_z93,PATH,,NSET
:C )*if,_z93,lt,_z96,then
:C )_z93=_z96
:C )*endif
:C )/GO
Inp_P
Cmd_PADEL
K_CM(kpoin)
 Fld_2
  Typ_Def_*CPAR(1)
Cmd_PATH
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*PAR(_z91)
 Fld_4
  Typ_Def_*PAR(_z93)
 Fld_5
  Typ_Def_*PAR(_z94)
Cmd_PAPUT
K_CM(kpoin+KTABL*KLABL)
 Fld_2
  Typ_Def_*CPAR(11)
 Fld_3
  Typ_Def_*STR(POIN)
Cmd_PAPUT
K_CM(kpoin+ktabl+KLABL)
 Fld_2
  Typ_Def_*CPAR(12)
 Fld_3
  Typ_Def_*STR(TABL)
Cmd_PAPUT
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
 K_FL(KPOIN+ktabl+klabl)
  Typ_Def_*STR(POIN)
 Fld_3
 K_FL(KTABL+klabl+kpoin)
  Typ_Def_*STR(TABL)
 Fld_3
 K_FL(KLABL+kpoin+ktabl)
  Typ_Def_*STR(LABE)
Cmd_)*CSET,11,11
K_CM(KPOIN+ktabl+klabl)
 Fld_2
  Typ_Def_*CPAR(2)
Cmd_)*CSET,12,12
K_CM(KTABL+klabl+kpoin)
 Fld_2
  Typ_Def_*CPAR(2)
:E END
:! 
:N Fnc_PAPUT_RQ
:S    501,   115,   379
:T Command
:C )! Fnc_PAPUT_RQ
:C )/NOPR
:C )_z94=(_z92-1)/(_z91-1)
:C )/GO
Inp_P
Cmd_PATH
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*PAR(_z91)
 Fld_5
  Typ_Def_*PAR(_z94)
Cmd_PAPUT
 Fld_2
  Typ_Def_*CPAR(2)
  Dlm_~
 Fld_3
  Typ_Def_*STR(POIN)
 Fld_4
  Typ_Def_POIN
Cmd_PAPUT
 Fld_2
  Typ_Def_*CPAR(2)
  Dlm_~
 Fld_3
  Typ_Def_*STR(LABL)
 Fld_4
  Typ_Def_LABE
Cmd_PAPUT
 Fld_2
  Typ_Def_*CPAR(2)
  Dlm_~
 Fld_3
  Typ_Def_*STR(DATA)
 Fld_4
  Typ_Def_TABL
:E END
:! 
:N Fnc_PAPUT_RR
:S    548,   132,   409
:T Command
:C )! Fnc_PAPUT_RR
:C )/NOPR
:C )_z91=0
:C )_z92=1
:C )_z93=0
:C )_z94=0
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)*GET,_z91,PARM
 Fld_2
  Typ_Def_*CPAR(2)
  Dlm_~
 Fld_3
  Typ_Def_*STR(POIN)
 Fld_4
  Typ_Def_DIM
 Fld_5
  Typ_Def_X
Cmd_)*GET,_z92,PARM
 Fld_2
  Typ_Def_*CPAR(2)
  Dlm_~
 Fld_3
  Typ_Def_*STR(DATA)
 Fld_4
  Typ_Def_DIM
 Fld_5
  Typ_Def_X
Cmd_)*GET,_z93,PARM
 Fld_2
  Typ_Def_*CPAR(2)
  Dlm_~
 Fld_3
  Typ_Def_*STR(LABL)
 Fld_4
  Typ_Def_DIM
 Fld_5
  Typ_Def_X
Cmd_)/GO
Cal_Fnc_PAPUT_RQ
:E END
:! 
:N Fnc_PARRES
:S    392,   157,   228
:T Cmd
:C )! Fnc_PARRES
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A Restore Parameters
:D Restore Parameters
:H Hlp_C_PARRES
Cmd_PARRES
Fld_0
Typ_Lab
Prm_[PARRES]  Restore Parameters
Fld_2
Prm_Lab  Existing parameters will be
Typ_Lis_OptionB
LIS_Replaced        ,NEW
LIS_Merged with new ,CHANGE
Fld_3
Prm_Fname  Restore from file
Typ_FILE
Def_*PAR(_zx)
:E END
:! 
:N Fnc_PARSAV
:S    381,   151,   223
:T Cmd
:C )! Fnc_PARSAV
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A Save Parameters
:D Save Parameters
:H Hlp_C_PARSAV
Cmd_PARSAV
Fld_0
Typ_Lab
Prm_[PARSAV]  Save Parameters
Fld_2
Prm_Lab    Parameters to be written
Typ_Lis_OptionB
LIS_Scalar only     ,SCALAR
LIS_Scalar and Array,ALL   
Fld_3
Prm_Fname  Write to file
Typ_FILE
Def_*PAR(_zx)
:E END
:! 
:N Fnc_PATHDELALL
:S    255,   120,   128
:T Cmd
:C )!  Fnc_PATHDELALL
:H Hlp_C_PADELE
:A All Paths
:D Delete All Paths
Inp_NoApply
Cmd_PADEL,ALL
 Fld_0
  Typ_Lab
  Prm_[PADEL,ALL]  This function deletes all defined paths
Cmd_PATH,STAT
Cmd_/REPLOT
:E End
:! 
:N Fnc_PATHDELNAM
:S    312,   121,   184
:T Cmd
:C )!  Fnc_PATHDELNAM
:H Hlp_C_PADELE
:A By Name
:D Delete Path by Name
Inp_NoApply
Cmd_PADEL
 Fld_0
  Typ_Lab
  Prm_[PADEL,Name]  Delete Path 
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Name   Delete Path by Name :
  Typ_Lis
  LIS_*READ,DPTH
Cmd_PATH,STAT
Cmd_/REPLOT
:E End
:! 
:N Fnc_PATHEDIT
:S    688,   111,   570
:T Cmd
:C )! Fnc_PATHEDIT
:A Modify Path
:D Modify Path
:H Hlp_C_PPATH
Cmd_PPATH
 Fld_0
  Typ_Lab
  Prm_[PPATH]  Modify Path points in Global Cartesian Coordinate System
 Fld_0
  Typ_Sep
 Fld_2
  Prm_NPT    Path point number
  Typ_INT
  Def_Blank
 Fld_3
  Prm_Node   Node number
  Typ_INT
  Def_Blank
 Fld_4
  Prm_X,Y,Z  Location in Global CS 
  Typ_REAL3
  Def_Blank
 Fld_7
  Prm_CS     Interpolation CS   
  Typ_INT
  Def_*GET(ACTIVE,,CSYS)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_NOTE: Modify either the Node number (Node) or for Node=0 the coordinate
 Fld_0
  Typ_Lab
  Prm_      locations (X,Y,Z) in Global Cartesian Coordinate System.
:E END
:! 
:N Fnc_PATHOPTS
:S    463,   113,   343
:T Cmd
:C )!  Fnc_PATHOPTS
:H Hlp_C_PMAP
:A Path Options
:D Path Options
Inp_NoApply
Cmd_PMAP
 Fld_0
  Typ_Lab
  Prm_[PMAP]  Create the mapping of the path geometry
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Choose geometry mapping
  Typ_LIS_OptionB
  LIS_Uniform division,'UNI '
  LIS_Accurate divisns,'ACCU'
 Fld_3
  Prm_Account for discontinuities
  Typ_LIS_OptionB
  LIS_No discontinuity,'    '
  LIS_Mat discontinuit,'MAT '
:E End
:! 
:N Fnc_PATHPLOT
:S    148,    91,    50
:T Cmd_N
:H Hlp_C_/PBC
:A Plot Paths
:D Plot Paths
Inp_P
Cmd_/PBC,PATH,1
Cmd_/REPLOT
Cmd_/PBC,PATH,0
:E End
:! 
:N Fnc_PATHRECALL
:S    287,   115,   165
:T Cmd
:C )!  Fnc_PATHRECALL
:H Hlp_C_PATH
:A Recall Path
:D Recall Path
Inp_NoApply
Cmd_PATH
 Fld_0
  Typ_Lab
  Prm_[PATH]  Define Path specifications
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Name   Recall Path by Name :
  Typ_Lis
  LIS_*READ,DPTH
:E End
:! 
:N Fnc_PATHRESU
:S    245,   108,   130
:T Cmd
:H Hlp_C_PARESU
:A Paths from file
:D Resume Paths from File
Inp_NoApply
Cmd_PARESU
 Fld_0
  Prm_[PARESU,,]  Restore paths  
 Fld_3
  Prm_File,ext,dir Read from file
  Typ_File
Cmd_PATH,STAT
:E End
:! 
:N Fnc_PATHSAVALL
:S    263,    96,   160
:T Cmd
:H Hlp_C_PASAVE
:A All Paths
:D Save All Paths
Inp_NoApply
Cmd_PASAVE,ALL
 Fld_0
  Typ_Lab
  Prm_[PASAVE,ALL]  This function saves all defined paths
 Fld_2
  Prm_File,ext,dir Write to file
  Typ_File_INLINE
:E End
:! 
:N Fnc_PATHSAVE
:S    319,   109,   203
:T Cmd
:H Hlp_C_PASAVE
:A Paths in file
:D Save Paths by Name or All
Inp_NoApply
Cmd_)!
 Fld_0
  Prm_[PASAVE]  Save paths in file 
 Fld_2
  Prm_Existing options:
  Typ_Lis
   Lis_Save all paths,0
   Lis_Selected paths,1
Cal_Fnc_PATHSAVALL,2,eq,0
Cal_Fnc_PATHSAVNAM,2,eq,1
:E End
:! 
:N Fnc_PATHSAVNAM
:S    357,   103,   247
:T Cmd
:H Hlp_C_PASAVE
:A Paths by name
:D Save Path by Name
Inp_NoApply
Cmd_PSEL,S
 Fld_0
  Typ_Lab
  Prm_[PASAVE,NAME]  Save selected paths from list
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Name   Save Path by Name :
  Typ_MLis
  LIS_*READ,DPTH
Cmd_PASAVE,S
 Fld_2
  Prm_File,ext,dir Write to file
  Typ_File_INLINE
:E End
:! 
:N Fnc_PATHSTAT_1
:S    125,    96,    22
:T Cmd
:C )!  Fnc_PATHSTAT_1
:A    Defined Paths
:C)!
Inp_P
Cmd_PATH,STATUS
:E End
:! 
:N Fnc_PATHSTAT_2
:S    142,   115,    20
:T Cmd
:C )!  Fnc_PATHSTAT_2
:A    Current Path
:K #(POST1+RESULTS)
:C)!
Inp_P
Cmd_PDEF,STAT
:E End
:! 
:N Fnc_PBAKQTY
:S    732,   604,   121
:T Cmd
:C )! Fnc_PBAKQTY
:C )/NOPR
:C )*SET,_zzz,_z(2)
:C )*IF,_z(3),GT,1,THEN
:C )*SET,_z(1),-1
:C )*SET,_z(3),1
:C )*SET,_zzz,-_z(4)
:C )*ELSEIF,_z(3),EQ,0,THEN
:C )*SET,_zzz,0
:C )*ENDIF
:C )*GET,_PLOTYP,COMMON,,D3COM,,CHAR,4
:C )KEYW,_dopbak,1
:C )*IF,_PLOTYP,EQ,'NPLO',THEN
:C )*SET,_zzz,0
:C )*SET,_z(3),0
:C )KEYW,_dopbak,0
:C )*ELSEIF,_PLOTYP,EQ,'KPLO',THEN
:C )*SET,_zzz,0
:C )*SET,_z(3),0
:C )KEYW,_dopbak,0
:C )*ELSEIF,_PLOTYP,EQ,'LPLO',THEN
:C )*SET,_zzz,0
:C )*SET,_z(3),0
:C )KEYW,_dopbak,0
:C )*ENDIF
:C )/GO
:D Hidden QUAL granule
:H Hlp_UI_QUALITY
Inp_P
Cmd_/COLOR,PBAK
K_CM(_DOPBAK)
 Fld_2
  Typ_Def_*PAR(_z(3))
 Fld_3
  Typ_Def_*PAR(_z(1))
Cmd_)!
Cal_Fnc_Pl_QUALITY1
:E END
:! 
:N Fnc_PBAK_COLR
:S   1096,   355,   734
:T Cmd
:H Hlp_C_/COLOR
:H Hlp_C_/TXTRE
:C )! Gouraud Shading of BG
:C )/NOPR
:C )*DEL,_z2
:C )*DEL,_z3
:C )_z2=zpbakiqr(2)
:C )*if,_z2,EQ,22,then
:C )    _z2=1
:C )    _z3=4
:C )*else
:C )    _z3=zpbakiqr(3)
:C )*endif
:C )*DEL,_z
:C )*DIM,_z,,8
:C )/GO
:A Picture Background Shading
:D Picture Background Shading
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Prm_            Style
  Typ_LIS_OPTIONB
   Lis_Left to Right,0
   Lis_Top to Bottom,1
   Lis_Right to Left,2
   Lis_Bottom to Top,3
  Def_*PAR(_z2)
Cmd_)*SET,_z(2)
 Fld_2
  Prm_            Color
  Typ_LIS_OPTIONB
   Lis_Magenta-Red  ,1
   Lis_Magenta      ,2
   Lis_Blue-Magenta ,3
   Lis_Blue         ,4
   Lis_Cyan-Blue    ,5
   Lis_Cyan         ,6
   Lis_Green-Cyan   ,7
   Lis_Green        ,8
   Lis_Yellow-Green ,9
   Lis_Yellow       ,10
   Lis_Orange       ,11
   Lis_Red          ,12
   Lis_Dark Gray    ,13
  Def_*PAR(_z3)
Cmd_)*SET,_z(3)
 Fld_2
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot,7
   LIS_Replot       ,8
  Def_8
!
Cmd_)/GOPR
!
Cal_Fnc_PBAK_EXEC
:E End
:! 
:N Fnc_PBAK_EXEC
:S    388,   238,   143
:T Cmd
:C )! Execute /COLOR,PBAK command
:C )/NOPR
:C )_z1=_z(1)
:C )_z2=_z(2)
:C )_z3='/REP'
:C )*if,_z(3),EQ,7,then
:C )    _z3='!'
:C )*endif
:C )/GO
:A Picture Background
:D Picture Background
Inp_P
!
Cmd_/COLOR,PBAK,ON
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z2)
!
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_z3)
:E End
:! 
:N Fnc_PBAK_TXTR
:S   1549,   401,  1141
:T Cmd
:H Hlp_C_/COLOR
:H Hlp_C_/TXTRE
:C )! Texturing of BG
:C )/NOPR
:C )*DEL,_z2
:C )*DEL,_z3
:C )_z2=zpbakiqr(2)
:C )*if,_z2,NE,22,then
:C )    _z3=16
:C )*else
:C )    _z3=zpbakiqr(3)
:C )    *if,_z3,gt,21,then
:C )        _z3=16
:C )    *endif
:C )*endif
:C )*DEL,_z
:C )*DIM,_z,,8
:C )/GO
:A Picture Background Texturing
:D Picture Background Texturing
Cmd_)/NOPR
Cmd_)*SET,_z(1),-1
Cmd_)*SET,_z(2)
 Fld_2
  Prm_                Type
  Typ_LIS_OPTIONB
   LIS_Aluminum        ,1
   LIS_Aluminum brushed,2
   LIS_Steel with bumps,3
   LIS_Steel embossed  ,4
   LIS_Steel pattern   ,6
   LIS_Steel riveted   ,7
   LIS_Steel scratched ,8
   LIS_Steel etched    ,11
   LIS_Iron            ,5
   LIS_Iron - grainy   ,13
   LIS_Gold            ,31
   LIS_Brass           ,32
   LIS_Silver          ,33
   LIS_Tin             ,9
   LIS_Metal           ,10
   LIS_Metal - hot     ,12
   LIS_Metal - rusty   ,14
   LIS_Brick           ,15
   LIS_Block           ,16
   LIS_Wood            ,17
   LIS_Wood - light    ,18
   LIS_Wood - walnut   ,19
   LIS_Plastic - red   ,37
   LIS_Plastic - green ,39
   LIS_Plastic - blue  ,36
   LIS_Plastic - ivory ,35
   LIS_Plastic - yellow,38
   LIS_Plastic - brown ,40
   LIS_Plastic - black ,34
   LIS_Plastic hard red,22
   LIS_Plast hard blue ,20
   LIS_Plast hard Lblue,21
  Def_*PAR(_z3)
Cmd_)*SET,_z(3)
 Fld_2
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,7
   LIS_Replot          ,8
  Def_8
!
Cmd_)/GOPR
!
Cal_Fnc_PBAK_EXEC
:E End
:! 
:N Fnc_PBAK_TXTR2
:S    708,   243,   441
:T Cmd
:H Hlp_C_/TXTRE
:H Hlp_C_/COLOR
:C )! Load a texture from a file and make it your BG
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,8
:C )/GO
:A Picture Background From File
:D Picture Background From File
Cmd_)!
 Fld_2
  Prm_          File Format           
  Typ_LIS_OPTIONB
   LIS_Bitmap,1
   LIS_JPEG  ,2
   LIS_PNG   ,3
  Def_1
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Prm_      Texture Index(51-99)
  Typ_INT
  Def_88
Cmd_)*SET,_z(2)
 Fld_2
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,7
   LIS_Replot          ,8
  Def_8
Cmd_)/GOPR
Cal_Fnc_PBAK_bmp,2,EQ,1,1
Cal_Fnc_PBAK_jpg,2,EQ,2,1
Cal_Fnc_PBAK_png,2,EQ,3,1
:E END OF Fnc_PBAK_load
:! 
:N Fnc_PBAK_bmp
:S    544,   253,   268
:T Cmd
:H Hlp_C_/TXTRE
:H Hlp_C_/COLOR
:C )! Load a texture from a BMP and make it your BG
:C )/NOPR
:C )_z2='/REP'
:C )*if,_z(2),EQ,7,then
:C )    _z2='!'
:C )*endif
:C )/GO
:A Bitmap Filename
:D Bitmap Filename
Fmt_H
Cmd_/TXTRE,FILE
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Prm_[/TXTRE]  Texture file
  Typ_FILE
K_LN(intelnt+alphant)
  Def_*Str(*.img)
K_LN(INTELNT*ALPHANT)
  Def_*Str(*.bmp)
Cmd_/COLOR,PBAK,ON,-1
 Fld_2
  Typ_Def_*PAR(_z(1))
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_z2)
:E END OF Fnc_PBAK_bmp
:! 
:N Fnc_PBAK_jpg
:S    500,   249,   228
:T Cmd
:H Hlp_C_/TXTRE
:H Hlp_C_/COLOR
:C )! Load a texture from a JPG and make it your BG
:C )/NOPR
:C )_z2='/REP'
:C )*if,_z(2),EQ,7,then
:C )    _z2='!'
:C )*endif
:C )/GO
:A JPEG Filename
:D JPEG Filename
Fmt_H
Cmd_/TXTRE,FILE
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Prm_[/TXTRE]  Texture file
  Typ_FILE
  Def_*Str(*.jpg)
 Fld_6
  Typ_Def_JPEG
Cmd_/COLOR,PBAK,ON,-1
 Fld_2
  Typ_Def_*PAR(_z(1))
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_z2)
:E END OF Fnc_PBAK_jpg
:! 
:N Fnc_PBAK_png
:S    497,   247,   227
:T Cmd
:H Hlp_C_/TXTRE
:H Hlp_C_/COLOR
:C )! Load a texture from a PNG and make it your BG
:C )/NOPR
:C )_z2='/REP'
:C )*if,_z(2),EQ,7,then
:C )    _z2='!'
:C )*endif
:C )/GO
:A PNG Filename
:D PNG Filename
Fmt_H
Cmd_/TXTRE,FILE
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Prm_[/TXTRE]  Texture file
  Typ_FILE
  Def_*Str(*.png)
 Fld_6
  Typ_Def_PNG
Cmd_/COLOR,PBAK,ON,-1
 Fld_2
  Typ_Def_*PAR(_z(1))
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_z2)
:E END OF Fnc_PBAK_png
:! 
:N Fnc_PCALC_acos
:S    615,   180,   428
:T Command
:C )! Fnc_PCALC_acos
:C )/NOPR
:C )_z1='  '
:C )/GO
:A ArcCosine
:D Arccosine of Path Items
:H Hlp_C_PCALC
:K #(POST1+RESULTS)
Cmd_PCALC,ACOS
 Fld_0
  Typ_Lab
  Prm_[PCALC],ACOS      LabR = FACT2 * arccos(Fact1 * Lab) + const
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_5
  Prm_FACT1  1st Factor
  Typ_REAL
  Def_1
 Fld_3
  Prm_Lab    Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_4
  Typ_Def_S
Fld_0
Prm_
 Fld_6
  Prm_FACT2  2nd Factor
  Typ_REAL
  Def_1
 Fld_7
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_PCALC_add
:S    704,   163,   534
:T Command
:C )! Fnc_PCALC_add
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Add
:D Add Path Items
:H Hlp_C_PCALC
:K #(POST1+RESULTS)
Cmd_PCALC,ADD
 Fld_0
  Typ_Lab
  Prm_[PCALC],ADD      LabR = (FACT1 * Lab1) + (FACT2 * Lab2) 
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_5
  Prm_FACT1  1st Factor
  Typ_REAL
  Def_1
 Fld_3
  Prm_Lab1   1st Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_0
  Prm_
 Fld_6
  Prm_FACT2  2nd Factor
  Typ_REAL
  Def_1
 Fld_4
  Prm_Lab2   2nd Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
  LIS_- none -                        ,"  "
Fld_0
Prm_
Fld_7
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_PCALC_asin
:S    611,   176,   428
:T Command
:C )! Fnc_PCALC_asin
:C )/NOPR
:C )_z1='  '
:C )/GO
:A ArcSine
:D Arcsine of Path Items
:H Hlp_C_PCALC
:K #(POST1+RESULTS)
Cmd_PCALC,ASIN
 Fld_0
  Typ_Lab
  Prm_[PCALC],ASIN      LabR = FACT2 * arcsin(Fact1 * Lab) + const
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_5
  Prm_FACT1  1st Factor
  Typ_REAL
  Def_1
 Fld_3
  Prm_Lab    Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_4
  Typ_Def_S
Fld_0
Prm_
 Fld_6
  Prm_FACT2  2nd Factor
  Typ_REAL
  Def_1
 Fld_7
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_PCALC_cos
:S    583,   172,   404
:T Command
:C )! Fnc_PCALC_cos
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Cosine
:D Cosine of Path Items
:H Hlp_C_PCALC
:K #(POST1+RESULTS)
Cmd_PCALC,COS
 Fld_0
  Typ_Lab
  Prm_[PCALC],COS      LabR = FACT2 * cos(Fact1 * Lab) + const
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_5
  Prm_FACT1  1st Factor
  Typ_REAL
  Def_1
 Fld_3
  Prm_Lab    Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
Fld_0
Prm_
 Fld_6
  Prm_FACT2  2nd Factor
  Typ_REAL
  Def_1
 Fld_7
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_PCALC_deri
:S    574,   185,   382
:T Command
:C )! Fnc_PCALC_deri
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Differentiate
:D Differentiate Path Items
:H Hlp_C_PCALC
:K #(POST1+RESULTS)
Cmd_PCALC,DERI
 Fld_0
  Typ_Lab
  Prm_[PCALC],DERI           LabR = FACT * d(Lab1) / d(Lab2)
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_5
  Prm_FACT   Factor
  Typ_REAL
  Def_1
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_4
  Prm_Lab2   2nd Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
:E END
:! 
:N Fnc_PCALC_div
:S    554,   169,   378
:T Command
:C )! Fnc_PCALC_div
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Divide
:D Divide Path Items
:H Hlp_C_PCALC
:K #(POST1+RESULTS)
Cmd_PCALC,DIV
 Fld_0
  Typ_Lab
  Prm_[PCALC],DIV            LabR = (Lab1 / Lab2) * FACT
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_4
  Prm_Lab2   2nd Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
Fld_0
Prm_
  Fld_5
  Prm_FACT   Factor
  Typ_REAL
  Def_1
:E END
:! 
:N Fnc_PCALC_exp
:S    681,   181,   493
:T Command
:C )! Fnc_PCALC_exp
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Exponentiate
:D Exponentiate Path Items
:H Hlp_C_PCALC
:K #(POST1+RESULTS)
Cmd_PCALC,EXP
 Fld_0
  Typ_Lab
  Prm_[PCALC],EXP      LabR = ( |Lab1| ** EXP1 ) + ( |Lab2| ** EXP2 ) 
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_5
  Prm_EXP1   1st Exponent
  Typ_REAL
  Def_1
Fld_0
Prm_
 Fld_4
  Prm_Lab2   2nd Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
  LIS_- none -                        ,"  "
 Fld_6
  Prm_EXP2   2nd Exponent
  Typ_REAL
  Def_0
:E END
:! 
:N Fnc_PCALC_intg
:S    569,   177,   385
:T Command
:C )! Fnc_PCALC_intg
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Integrate
:D Integrate Path Items
:H Hlp_C_PCALC
:K #(POST1+RESULTS)
Cmd_PCALC,INTG
 Fld_0
  Typ_Lab
  Prm_[PCALC],INTG           LabR = FACT * Int (Lab1) d(Lab2) )
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_5
  Prm_FACT   Factor
  Typ_REAL
  Def_1
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_4
  Prm_Lab2   2nd Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
:E END
:! 
:N Fnc_PCALC_log
:S    611,   182,   422
:T Command
:C )! Fnc_PCALC_log
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Natural Log
:D Natural Log of Path Items
:H Hlp_C_PCALC
:K #(POST1+RESULTS)
Cmd_PCALC,LOG
 Fld_0
  Typ_Lab
  Prm_[PCALC],LOG      LabR = FACT2 * ln(Fact1 * Lab) + const
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_5
  Prm_FACT1  1st Factor
  Typ_REAL
  Def_1
 Fld_3
  Prm_Lab    Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_4
  Typ_Def_S
Fld_0
Prm_
 Fld_6
  Prm_FACT2  2nd Factor
  Typ_REAL
  Def_1
 Fld_7
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_PCALC_mult
:S    558,   175,   376
:T Command
:C )! Fnc_PCALC_mult
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Multiply
:D Multiply Path Items
:H Hlp_C_PCALC
:K #(POST1+RESULTS)
Cmd_PCALC,MULT
 Fld_0
  Typ_Lab
  Prm_[PCALC],MULT           LabR = Lab1 * Lab2 * FACT
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_4
  Prm_Lab2   2nd Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
Fld_0
Prm_
 Fld_5
  Prm_FACT   Factor
  Typ_REAL
  Def_1
:E END
:! 
:N Fnc_PCALC_sin
:S    598,   168,   423
:T Command
:C )! Fnc_PCALC_sin
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Sine
:D Sine of Path Items
:H Hlp_C_PCALC
:K #(POST1+RESULTS)
Cmd_PCALC,SIN
 Fld_0
  Typ_Lab
  Prm_[PCALC],SIN      LabR = FACT2 * sin(Fact1 * Lab) + const
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_5
  Prm_FACT1  1st Factor
  Typ_REAL
  Def_1
 Fld_3
  Prm_Lab    Path item
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_4
  Typ_Def_S
Fld_0
Prm_
 Fld_6
  Prm_FACT2  2nd Factor
  Typ_REAL
  Def_1
 Fld_7
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_PCIRC
:S    469,   139,   323
:T Command
:C )! Fnc_PCIRC
:A By Dimensions
:D Circular Area by Dimensions
:K #(PREP7)
:H Hlp_C_PCIRC
Cmd_PCIRC
 Fld_0
  Typ_Lab
  Prm_[PCIRC]  Circular Area by Dimensions
 Fld_2
  Typ_Real
  Prm_RAD1    Outer radius
  Def_Blank
 Fld_3
  Typ_Real
  Prm_RAD2    Optional inner radius
  Def_Blank
 Fld_4
  Typ_Real
  Prm_THETA1  Starting angle (degrees)
  Def_0
 Fld_5
  Typ_Real
  Prm_THETA2  Ending angle (degrees)
  Def_360
:E END
:! 
:N Fnc_PCROSS
:S   1121,   150,   964
:T Command
:C )! Fnc_PCROSS
:A Cross Product
:D Cross Product of Path Items
:H Hlp_C_PCROSS
:K #(POST1+RESULTS)
Cmd_PCROSS
 Fld_0
  Typ_Lab
  Prm_    {LabXR,LabYR,LabZR} = {LabX1,LabY1,LabZ1} X {LabX2,LabY2,LabZ2} 
 Fld_0
  Typ_Lab
  Prm_[PCROSS]
 Fld_0
  Typ_Lab
  Prm_       User labels for result vector
 Fld_2
  Prm_LabXR             X-component
  Typ_CHAR,8
 Fld_3
  Prm_LabYR             Y-component
  Typ_CHAR,8
 Fld_4
  Prm_LabZR             Z-component
  Typ_CHAR,8
Fld_0
Prm_
 Fld_0
  Typ_Lab
  Prm_       Path items in 1st vector
 Fld_5
  Prm_LabX1             X-component
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_6
  Prm_LabY1             Y-component
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_7
  Prm_LabZ1             Z-component
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
Fld_0
Prm_
 Fld_0
  Typ_Lab
  Prm_       Path items in 2nd vector
 Fld_8
  Prm_LabX2             X-component
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_9
  Prm_LabY2             Y-component
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_10
  Prm_LabZ2             Z-component
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
:E END
:! 
:N Fnc_PDANL
:S   1127,   656,   464
:T Cmd
:C )! Fnc_PDANL
:D Assign Deterministic Model File
:H Hlp_C_PDANL
:C )/NOPR
:C )*DEL,_Z9
:C )*GET,_Z9,PARM,,BASIC
:C )*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3  $)*DEL,_Z4
:C )*DEL,_Z5  $)*DEL,_Z6  $)*DEL,_Z7  $)*DEL,_Z8
:C )*GET,_Z1,PDS,,ANLD,,START,1
:C )*GET,_Z2,PDS,,ANLD,,START,9
:C )*GET,_Z3,PDS,,ANLD,,START,17
:C )*GET,_Z4,PDS,,ANLD,,START,25
:C )*GET,_Z5,PDS,,ANLD,,START,33
:C )*GET,_Z6,PDS,,ANLD,,START,41
:C )*GET,_Z7,PDS,,ANLD,,START,49
:C )*GET,_Z8,PDS,,ANLD,,START,57
:C )*IF,_Z1,EQ,'        ',THEN
:C )*SET,_ZU,'*.*'
:C )*SET,_ZP,'*.*'
:C )*ELSE
:C )*SET,_ZU,'/*.*'
:C )*SET,_ZP,'\*.*'
:C )*ENDIF
:C )/GO
Fmt_H
Inp_Noapply
Cmd_PDANL
  Fld_2
    Prm_ [PDANL]  Analysis file
    Typ_FILE
K_LN(intelnt&alphant)
  Def_*STR(%_Z1%%_Z2%%_Z3%%_Z4%%_Z5%%_Z6%%_Z7%%_Z8%%_ZU%)
K_LN(INTELNT|ALPHANT)
  Def_*STR(%_Z1%%_Z2%%_Z3%%_Z4%%_Z5%%_Z6%%_Z7%%_Z8%%_ZP%)
Cmd_)!
  Fld_2
    Typ_DEF_*PAR(_Z9)
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3  $)*DEL,_Z4
Cmd_)*DEL,_Z5  $)*DEL,_Z6  $)*DEL,_Z7  $)*DEL,_Z8
Cmd_)*DEL,_Z9
Cmd_)*DEL,_ZU  $)*DEL,_ZP
Cmd_)/GO
Cal_Fnc_PD_NOPRM,2,EQ,0,2
:E END
:! 
:N Fnc_PDANL_ENTRY
:S    298,   175,   116
:T Cmd
:C )! Fnc_PDANL_ENTRY
:A    Assign
:H Hlp_C_PDANL
:C )/NOPR
:C )*GET,_Z1,PDS,,NSOL       ! No. of solution sets done
:C )/GO
Inp_P
Cmd_)!
  Fld_2
    Typ_DEF_*PAR(_Z1)
Cmd_)/NOPR  $)*DEL,_Z1   $)/GO
Cal_Fnc_PDANL_WARN,2,GT,0,1
Cal_Fnc_PDANL
:E END
:! 
:N Fnc_PDANL_WARN
:S    526,    96,   423
:T Cmd
:C )! Fnc_PDANL_WARN
:D WARNING
:H Hlp_C_PDANL
Inp_Noapply
Cmd_)!
Fld_0
Prm_
Fld_0
Prm_                            - WARNING -
Typ_LAB
Fld_0
Prm_  Specifying a new analysis file is not allowed after a probabilistic
Typ_LAB
Fld_0
Prm_  analysis has been performed already.  Save and clear the existing data
Typ_LAB
Fld_0
Prm_  with [-Prob Database-/Save...] and [-Prob Database-/Clear + Reset..]
Typ_LAB
Fld_0
Prm_  before you can specifying a new analysis file.
Typ_LAB
:E END
:! 
:N Fnc_PDBBM_ENTRY
:S   1070,   773,   290
:T Cmd
:C )! Fnc_PDBBM_ENTRY
:A    BBM options
:D Options for a Box-Behnken Matrix Design
:H Hlp_C_PDDOEL
:C )/NOPR
:C )*GET,_ntrv,PDS,0,NTRV     ! number of random input variables
:C )KEYW,KEY1,1
:C )*DO,_z1,1,_ntrv
:C )*DEL,_zc
:C )*GET,_zc,PDS,0,BBML,_z1,VTYP
:C )*IF,_zc,NE,'PROB',THEN
:C )KEYW,KEY1,0
:C )*ENDIF
:C )*DEL,_zc
:C )*GET,_zc,PDS,0,BBML,_z1,LOPT
:C )*IF,_zc,NE,'BND ',THEN
:C )KEYW,KEY1,0
:C )*ENDIF
:C )*GET,_z2,PDS,0,BBML,_z1,LVAL,1
:C )*IF,_z1,EQ,1,THEN
:C )_z2prv=_z2
:C )*ELSE
:C )*IF,_z2,NE,_z2prv,THEN
:C )KEYW,KEY1,0
:C )*ENDIF
:C )*ENDIF
:C )*GET,_z3,PDS,0,BBML,_z1,LVAL,3
:C )*IF,_z1,EQ,1,THEN
:C )_z3prv=_z3
:C )*ELSE
:C )*IF,_z3,NE,_z3prv,THEN
:C )KEYW,KEY1,0
:C )*ENDIF
:C )*ENDIF
:C )*ENDDO
:C )/GO
Inp_P
Cmd_)!
  Fld_2
    K_FL(key1)
    Typ_DEF_*PAR(1)
Cmd_)!
  Fld_2
    K_FL(KEY1)
    Typ_DEF_*PAR(1)
Cmd_)/NOPR
Cmd_)*DEL,_ntrv
Cmd_)*DEL,_Z1     $)*DEL,_ZC
Cmd_)*DEL,_Z2     $)*DEL,_Z3
Cmd_)*DEL,_Z2prv  $)*DEL,_Z3prv
Cmd_)/GO
Cal_Fnc_PDDOEL_BBM0,2,EQ,1,1
Cal_Fnc_PDDOEL_BBM1,2,EQ,1,2
:E END
:! 
:N Fnc_PDCCD_ENTRY
:S   1069,   772,   290
:T Cmd
:C )! Fnc_PDCCD_ENTRY
:A    CCD options
:D Options for a Central Composite Design
:H Hlp_C_PDDOEL
:C )/NOPR
:C )*GET,_ntrv,PDS,0,NTRV     ! number of random input variables
:C )KEYW,KEY1,1
:C )*DO,_z1,1,_ntrv
:C )*DEL,_zc
:C )*GET,_zc,PDS,0,CCDL,_z1,VTYP
:C )*IF,_zc,NE,'PROB',THEN
:C )KEYW,KEY1,0
:C )*ENDIF
:C )*DEL,_zc
:C )*GET,_zc,PDS,0,CCDL,_z1,LOPT
:C )*IF,_zc,NE,'BND ',THEN
:C )KEYW,KEY1,0
:C )*ENDIF
:C )*GET,_z2,PDS,0,CCDL,_z1,LVAL,1
:C )*IF,_z1,EQ,1,THEN
:C )_z2prv=_z2
:C )*ELSE
:C )*IF,_z2,NE,_z2prv,THEN
:C )KEYW,KEY1,0
:C )*ENDIF
:C )*ENDIF
:C )*GET,_z3,PDS,0,CCDL,_z1,LVAL,5
:C )*IF,_z1,EQ,1,THEN
:C )_z3prv=_z3
:C )*ELSE
:C )*IF,_z3,NE,_z3prv,THEN
:C )KEYW,KEY1,0
:C )*ENDIF
:C )*ENDIF
:C )*ENDDO
:C )/GO
Inp_P
Cmd_)!
  Fld_2
    K_FL(key1)
    Typ_DEF_*PAR(1)
Cmd_)!
  Fld_2
    K_FL(KEY1)
    Typ_DEF_*PAR(1)
Cmd_)/NOPR
Cmd_)*DEL,_ntrv
Cmd_)*DEL,_Z1     $)*DEL,_ZC
Cmd_)*DEL,_Z2     $)*DEL,_Z3
Cmd_)*DEL,_Z2prv  $)*DEL,_Z3prv
Cmd_)/GO
Cal_Fnc_PDDOEL_CCD0,2,EQ,1,1
Cal_Fnc_PDDOEL_CCD1,2,EQ,1,2
:E END
:! 
:N Fnc_PDCDF
:S   1258,   414,   837
:T Cmd
:C )! Fnc_PDCDF
:A    CumulativeDF
:D Plot CDF of a probabilistic variable
:H Hlp_C_PDCDF
:C )/NOPR
:C )KEYW,KEY1,0
:C )KEYW,KEY2,0
:C )*GET,_Z1,PDS,0,NTRV       ! Total no. of random variables
:C )*IF,_Z1,GE,1,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*GET,_Z2,PDS,0,NTRP       ! Total no. of random output parameters
:C )*IF,_Z2,GE,1,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
Cmd_PDCDF
  Fld_0
    Typ_LAB
    Prm_ [PDCDF]   Plot Cumulative Distribution Function
  Fld_2
    Prm_ Rlab      Select Results Set
    Typ_LIS
    LIS_*READ,RLMC        ! List of MCS related Result Sets
  Fld_3
    Prm_ Name      Prob Design Variable
    Typ_LIS
    K_LN(KEY1)
    LIS_*READ,RV
    K_LN(KEY2)
    LIS_*READ,RP
  Fld_4
    Prm_ Type      Type of CDF Plot
    Typ_Lis_OptionB
    LIS_Empirical CDF   ,EMP
    LIS_Gauss Plot      ,GAUS
    LIS_Log-Normal Plot ,LOGN
    LIS_Weibull Plot    ,WEIB
    Def_EMP
  Fld_5
    Prm_ CONF      Confidence Level
    Typ_REAL
    Def_0.95
  Fld_6
    Prm_ NMAX      Maximum no. points
    Typ_INT
    Def_100
  Fld_0
    Typ_LAB
    Prm_           NOTE: 0.0 < CONF < 1.0 ! Default is 0.95.
  Fld_0
    Typ_LAB
    Prm_                 Confidence bounds are suppressed for CONF<0.5.
:E END
:! 
:N Fnc_PDCFLD_ENTRY
:S    769,   160,   602
:T Cmd
:C )! Fnc_PDCFLD_ENTRY
:A    Correl Field
:D Calculate a Correlation Field
:H Hlp_C_PDCFLD
:C )/NOPR
:C )/GO
Cmd_PDCFLD
  Fld_0
    Typ_LAB
    Prm_ [PDCFLD]  Calculate a Correlation Field
  Fld_0
    Typ_LAB
    Prm_           ParR = Array Storing the Correlation Field
  Fld_2
    Typ_CHAR,32
    Prm_ ParR      Result Array Parametr
  Fld_3
    Prm_ Entity    Calcul. Distance with
    Typ_LIS_RadioB
    LIS_Elemnt Centroids,ELEM
    LIS_Nodes           ,NODE
  Fld_4
    Prm_ Ctype     Correlation Fctn Type
    Typ_LIS_RadioB
    LIS_NONE            ,NONE
    LIS_Lin  Exponential,LEXP
    LIS_Quad Exponential,QEXP
    LIS_Distance        ,DIST
  Fld_5
    Prm_ CLENGTH>0 Correlation Length
    Typ_REAL
:E END
:! 
:N Fnc_PDCLR_ENTRY
:S    609,   145,   457
:T Cmd
:C )! Fnc_PDCLR_ENTRY
:A    Clear & Reset
:D Clear and Reset Probabilistic Data
:H Hlp_C_PDCLR
Inp_Noapply
Cmd_PDCLR
  Fld_0
    Prm_ [PDCLR]   Clear and Reset Probabilistic Data
    Typ_LAB
  Fld_2
    Prm_ Type      Clear which data?
    Typ_LIS_RADIOB
    LIS_Clear all       ,ALL
    LIS_Only the results,POST
    Def_ALL
  Fld_0
    Prm_
  Fld_0
    Prm_                     - WARNING -
  Typ_LAB
    Fld_0
    Prm_  Existing probabilistic data and settings will
    Typ_LAB
  Fld_0
    Prm_  be cleared and reset to default conditions.
  Typ_LAB
:E END
:! 
:N Fnc_PDCMAT_ENTRY
:S    784,   150,   627
:T Cmd
:C )! Fnc_PDCMAT_ENTRY
:A    Correl Matrix
:D Correlation Matrix
:H Hlp_C_PDCMAT
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_)*CSET,1,3
  Fld_0
    Typ_LAB
    Prm_ [PDCMAT]  Print Correlation Matrix
  Fld_2
    Prm_ Rlab      Select Results Set
    Typ_LIS
    LIS_*READ,RLMC        ! List of MCS related Result Sets
  Fld_3
    Prm_ Matrix    Type of Matrix
    Typ_LIS_OptionB
    LIS_Input - Output  ,IO
    LIS_Input - Input   ,II
    LIS_Output - Output ,OO
    LIS_Single Correlatn,S
  Fld_4
    Prm_ Corr      Type of Correlation
    Typ_LIS_OptionB
    LIS_Spearman Rank   ,RANK
    LIS_Pearson Linear  ,LIN
Cal_Fnc_PDCMAT_MATX,3,ES,IO,1
Cal_Fnc_PDCMAT_MATX,3,ES,II,1
Cal_Fnc_PDCMAT_MATX,3,ES,OO,1
Cal_Fnc_PDCMAT_SNGL,3,ES,S,1
:E END
:! 
:N Fnc_PDCMAT_MATX
:S    585,   148,   430
:T Cmd
:C )! Fnc_PDCMAT_MATX
:A    Correl Matrix
:D Correlation Matrix
:H Hlp_C_PDCMAT
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_PDCMAT
  Fld_0
    Typ_LAB
    Prm_ [PDCMAT]  Print Correlation Matrix
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_'        '
  Fld_5
    Typ_DEF_'        '
  Fld_6
    Typ_DEF_*CPAR(3)
  Fld_7
    Prm_ SLEVEL    Significance Level
    Typ_REAL
    Def_0.025
  Fld_8
    Prm_ POPT      Print Probabilities?
    Typ_LIS_RadioB
    LIS_Yes            1,1
    LIS_No             0,0
:E END
:! 
:N Fnc_PDCMAT_SNGL
:S    641,   161,   473
:T Cmd
:C )! Fnc_PDCMAT_SNGL
:A    Correl Matrix
:D Correlation Matrix Single Entry
:H Hlp_C_PDCMAT
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_PDCMAT
  Fld_0
    Typ_LAB
    Prm_ [PDCMAT]  Print Correlation Matrix
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_S
  Fld_4
    Prm_ Name1,Name2  Sel 2 Parameters
    Typ_MLIS
    LIS_*READ,RV
    LIS_*READ,RP
    Bnd_2.0d0,2.0d0
  Fld_6
    Typ_DEF_*CPAR(3)
  Fld_7
    Prm_ SLEVEL    Significance Level
    Typ_REAL
    Def_0.025
  Fld_8
    Prm_ Popt      Print Probability?
    Typ_LIS_RadioB
    LIS_Yes            1,1
    LIS_No             0,0
:E END
:! 
:N Fnc_PDCORR_ADD
:S    484,   148,   329
:T Cmd
:C )! Fnc_PDCORR_ADD
:A    Correlation
:D Add/Edit a Correlation
:H Hlp_C_PDCORR
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_PDCORR
  Fld_0
    Typ_LAB
    Prm_ [PDCORR] Define correlations between random variables
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Prm_ CORR         Correlation coeff
    Typ_REAL
    Def_0.0
  Fld_0
    Typ_LAB
    Prm_                                      NOTE: -1.0 <= CORR <= 1.0
:E END
:! 
:N Fnc_PDCORR_DEL
:S    252,   146,    99
:T Cmd
:C )! Fnc_PDCORR_DEL
:A    Correlations
:D Delete Correlations
:H Hlp_C_PDCORR
:C )/NOPR
:C )/GO
Inp_P
Cmd_PDCORR
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_DEL
:E END
:! 
:N Fnc_PDCORR_ENTRY
:S    483,   313,   163
:T Cmd
:C )! Fnc_PDCORR_ENTRY
:A    Correlation
:D Define a Correlation
:H Hlp_C_PDCORR
:C )/NOPR
:C )*DEL,_Z1
:C )*GET,_Z1,PDS,0,NTRV       ! Total no. of random variables
:C )*IF,_Z1,LT,2,THEN
:C )KEYW,KEY1,0
:C )*ELSE
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*DEL,_Z1
:C )/GO
Inp_P
Cmd_)!
  Fld_2
    K_FL(key1)
    Typ_DEF_*PAR(1)
Cmd_)!
  Fld_2
    K_FL(KEY1)
    Typ_DEF_*PAR(1)
Cal_Fnc_PDCORR_WARN,2,EQ,1,1
Cal_Fnc_PDCORR_PRE,2,EQ,1,2
:E END
:! 
:N Fnc_PDCORR_PRE
:S    562,   156,   399
:T Cmd
:C )! Fnc_PDCORR_PRE
:A    Correlation
:D Add/Edit or Delete Correlation
:H Hlp_C_PDCORR
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_)*CSET,1,3
  Fld_0
    Typ_LAB
    Prm_ [PDCORR] Define correlations between random variables
  Fld_2
    Prm_ Name1,Name2  Sel 2 random var's
    Typ_MLIS
    LIS_*READ,RV
    Bnd_2.0,2.0
  Fld_3
    Prm_              Sel Add/Delete
    Typ_LIS_RADIOB
    LIS_Add/Edit        ,ADD
    LIS_Delete          ,DEL
    Def_ADD
Cal_Fnc_PDCORR_ADD,3,ES,ADD,1
Cal_Fnc_PDCORR_DEL,3,ES,DEL,1
:E END
:! 
:N Fnc_PDCORR_WARN
:S    511,   209,   295
:T Cmd
:C )! Fnc_PDCORR_WARN
:D Warning for Correlations
:H Hlp_C_PDCORR
:C )/NOPR
:C )*DEL,_Z1
:C )*GET,_Z1,PDS,0,NTRV       ! Total no. of random variables
:C )/GO
Inp_Noapply
Cmd_)!
  Fld_0
    Prm_
  Fld_0
    Prm_  The number of defined random variables is %(I)_Z1%.
    Typ_LAB
  Fld_0
    Prm_  To define correlations at least two random variables must
    Typ_LAB
  Fld_0
    Prm_  be defined.
    Typ_LAB
  Fld_0
    Prm_
Cmd_)/NOPR  $)*DEL,_Z1  $)/GO
:E END
:! 
:N Fnc_PDDIS_BETA
:S    947,   407,   533
:T Cmd
:C )! Fnc_PDDIS_BETA
:D Quantify Beta Distribution
:H Hlp_C_PDVAR
:C )/NOPR
:C )*SET,_Z4,2.0
:C )*SET,_Z5,2.0
:C )*SET,_Z6,0.0
:C )*SET,_Z7,1.0
:C )*IF,_Z1,GT,0,THEN
:C )*GET,_ZC,PDS,,VDIS,_Z1
:C )*IF,_ZC,EQ,'BETA',THEN
:C )*GET,_Z4,PDS,,PAR1,_Z1
:C )*GET,_Z5,PDS,,PAR2,_Z1
:C )*GET,_Z6,PDS,,PAR3,_Z1
:C )*GET,_Z7,PDS,,PAR4,_Z1
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDVAR
  Fld_0
    Typ_LAB
    Prm_ Parameters for BETA distribution
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Prm_ SHAPE1>0  First shape parameter
    Typ_REAL
    DEF_*PAR(_Z4)
  Fld_5
    Prm_ SHAPE2>0  Secnd shape parameter
    Typ_REAL
    DEF_*PAR(_Z5)
  Fld_6
    Prm_ LB        Lower Boundary
    Typ_REAL
    DEF_*PAR(_Z6)
  Fld_7
    Prm_ UB        Upper Boundary
    Typ_REAL
    DEF_*PAR(_Z7)
  Fld_0
    Typ_LAB
    Prm_ NOTE: LB < UB !
Cmd_)/NOPR
Cmd_)PDVAR,,RV,STAT
Cmd_)/GO
:E END
:! 
:N Fnc_PDDIS_EXPO
:S    819,   414,   398
:T Cmd
:C )! Fnc_PDDIS_EXPO
:D Quantify Exponential Distribution
:H Hlp_C_PDVAR
:C )/NOPR
:C )*SET,_Z4,1.0
:C )*SET,_Z5,0.0
:C )*SET,_Z6,0.0
:C )*SET,_Z7,0.0
:C )*IF,_Z1,GT,0,THEN
:C )*GET,_ZC,PDS,,VDIS,_Z1
:C )*IF,_ZC,EQ,'EXPO',THEN
:C )*GET,_Z4,PDS,,PAR1,_Z1
:C )*GET,_Z5,PDS,,PAR2,_Z1
:C )*GET,_Z6,PDS,,PAR3,_Z1
:C )*GET,_Z7,PDS,,PAR4,_Z1
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDVAR
  Fld_0
    Typ_LAB
    Prm_ Parameters for EXPONENTIAL distribution
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Prm_ DECAY>0   Decay parameter
    Typ_REAL
    DEF_*PAR(_Z4)
  Fld_5
    Prm_ OFF       Offset parameter
    Typ_REAL
    DEF_*PAR(_Z5)
  Fld_6
    Typ_DEF_*PAR(_Z6)
  Fld_7
    Typ_DEF_*PAR(_Z7)
Cmd_)/NOPR
Cmd_)PDVAR,,RV,STAT
Cmd_)/GO
:E END
:! 
:N Fnc_PDDIS_GAMA
:S    802,   408,   387
:T Cmd
:C )! Fnc_PDDIS_GAMA
:D Quantify Gamma Distribution
:H Hlp_C_PDVAR
:C )/NOPR
:C )*SET,_Z4,1.0
:C )*SET,_Z5,1.0
:C )*SET,_Z6,0.0
:C )*SET,_Z7,0.0
:C )*IF,_Z1,GT,0,THEN
:C )*GET,_ZC,PDS,,VDIS,_Z1
:C )*IF,_ZC,EQ,'GAMA',THEN
:C )*GET,_Z4,PDS,,PAR1,_Z1
:C )*GET,_Z5,PDS,,PAR2,_Z1
:C )*GET,_Z6,PDS,,PAR3,_Z1
:C )*GET,_Z7,PDS,,PAR4,_Z1
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDVAR
  Fld_0
    Typ_LAB
    Prm_ Parameters for GAMMA distribution
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Prm_ POWER>0   Power value
    Typ_REAL
    DEF_*PAR(_Z4)
  Fld_5
    Prm_ DECAY>0   Decay parameter
    Typ_REAL
    DEF_*PAR(_Z5)
  Fld_6
    Typ_DEF_*PAR(_Z6)
  Fld_7
    Typ_DEF_*PAR(_Z7)
Cmd_)/NOPR
Cmd_)PDVAR,,RV,STAT
Cmd_)/GO
:E END
:! 
:N Fnc_PDDIS_GAUS
:S    810,   411,   392
:T Cmd
:C )! Fnc_PDDIS_GAUS
:D Quantify Gaussian Distribution
:H Hlp_C_PDVAR
:C )/NOPR
:C )*SET,_Z4,0.0
:C )*SET,_Z5,1.0
:C )*SET,_Z6,0.0
:C )*SET,_Z7,0.0
:C )*IF,_Z1,GT,0,THEN
:C )*GET,_ZC,PDS,,VDIS,_Z1
:C )*IF,_ZC,EQ,'GAUS',THEN
:C )*GET,_Z4,PDS,,PAR1,_Z1
:C )*GET,_Z5,PDS,,PAR2,_Z1
:C )*GET,_Z6,PDS,,PAR3,_Z1
:C )*GET,_Z7,PDS,,PAR4,_Z1
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDVAR
  Fld_0
    Typ_LAB
    Prm_ Parameters for GAUSSIAN Distribution
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Prm_ MEAN      Mean value
    Typ_REAL
    DEF_*PAR(_Z4)
  Fld_5
    Prm_ SIGMA>0   Standard deviation
    Typ_REAL
    DEF_*PAR(_Z5)
  Fld_6
    Typ_DEF_*PAR(_Z6)
  Fld_7
    Typ_DEF_*PAR(_Z7)
Cmd_)/NOPR
Cmd_)PDVAR,,RV,STAT
Cmd_)/GO
:E END
:! 
:N Fnc_PDDIS_LOG1
:S    812,   412,   393
:T Cmd
:C )! Fnc_PDDIS_LOG1
:D Quantify Lognormal Distribution
:H Hlp_C_PDVAR
:C )/NOPR
:C )*SET,_Z4,1.0
:C )*SET,_Z5,1.0
:C )*SET,_Z6,0.0
:C )*SET,_Z7,0.0
:C )*IF,_Z1,GT,0,THEN
:C )*GET,_ZC,PDS,,VDIS,_Z1
:C )*IF,_ZC,EQ,'LOG1',THEN
:C )*GET,_Z4,PDS,,PAR1,_Z1
:C )*GET,_Z5,PDS,,PAR2,_Z1
:C )*GET,_Z6,PDS,,PAR3,_Z1
:C )*GET,_Z7,PDS,,PAR4,_Z1
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDVAR
  Fld_0
    Typ_LAB
    Prm_ Parameters for LOGNORMAL Distribution
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Prm_ MEAN>0    Mean value
    Typ_REAL
    DEF_*PAR(_Z4)
  Fld_5
    Prm_ SIGMA>0   Standard deviation
    Typ_REAL
    DEF_*PAR(_Z5)
  Fld_6
    Typ_DEF_*PAR(_Z6)
  Fld_7
    Typ_DEF_*PAR(_Z7)
Cmd_)/NOPR
Cmd_)PDVAR,,RV,STAT
Cmd_)/GO
:E END
:! 
:N Fnc_PDDIS_LOG2
:S    826,   412,   407
:T Cmd
:C )! Fnc_PDDIS_LOG2
:D Quantify Lognormal Distribution
:H Hlp_C_PDVAR
:C )/NOPR
:C )*SET,_Z4,0.0
:C )*SET,_Z5,1.0
:C )*SET,_Z6,0.0
:C )*SET,_Z7,0.0
:C )*IF,_Z1,GT,0,THEN
:C )*GET,_ZC,PDS,,VDIS,_Z1
:C )*IF,_ZC,EQ,'LOG2',THEN
:C )*GET,_Z4,PDS,,PAR1,_Z1
:C )*GET,_Z5,PDS,,PAR2,_Z1
:C )*GET,_Z6,PDS,,PAR3,_Z1
:C )*GET,_Z7,PDS,,PAR4,_Z1
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDVAR
  Fld_0
    Typ_LAB
    Prm_ Parameters for LOGNORMAL Distribution
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Prm_ MLOG    Mean Logarithmic values
    Typ_REAL
    DEF_*PAR(_Z4)
  Fld_5
    Prm_ SLOG>0  St.Dev Logrthmic values
    Typ_REAL
    DEF_*PAR(_Z5)
  Fld_6
    Typ_DEF_*PAR(_Z6)
  Fld_7
    Typ_DEF_*PAR(_Z7)
Cmd_)/NOPR
Cmd_)PDVAR,,RV,STAT
Cmd_)/GO
:E END
:! 
:N Fnc_PDDIS_TGAU
:S    976,   423,   546
:T Cmd
:C )! Fnc_PDDIS_TGAU
:D Quantify Truncated Gaussian Distribution
:H Hlp_C_PDVAR
:C )/NOPR
:C )*SET,_Z4,0.0
:C )*SET,_Z5,1.0
:C )*SET,_Z6,-3.0
:C )*SET,_Z7,+3.0
:C )*IF,_Z1,GT,0,THEN
:C )*GET,_ZC,PDS,,VDIS,_Z1
:C )*IF,_ZC,EQ,'TGAU',THEN
:C )*GET,_Z4,PDS,,PAR1,_Z1
:C )*GET,_Z5,PDS,,PAR2,_Z1
:C )*GET,_Z6,PDS,,PAR3,_Z1
:C )*GET,_Z7,PDS,,PAR4,_Z1
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDVAR
  Fld_0
    Typ_LAB
    Prm_ Parameters for TRUNCATED GAUSSIAN Distribution
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Prm_ MEAN     Mean value
    Typ_REAL
    DEF_*PAR(_Z4)
  Fld_5
    Prm_ SIGMA>0  Standard deviation
    Typ_REAL
    DEF_*PAR(_Z5)
  Fld_6
    Prm_ LOW      Lower Truncation Value
    Typ_REAL
    DEF_*PAR(_Z6)
  Fld_7
    Prm_ UP       Upper Truncation Value
    Typ_REAL
    DEF_*PAR(_Z7)
  Fld_0
    Typ_LAB
    Prm_ NOTE: LOW < UP !
Cmd_)/NOPR
Cmd_)PDVAR,,RV,STAT
Cmd_)/GO
:E END
:! 
:N Fnc_PDDIS_TRIA
:S    915,   413,   495
:T Cmd
:C )! Fnc_PDDIS_TRIA
:D Quantify Triangular Distribution
:H Hlp_C_PDVAR
:C )/NOPR
:C )*SET,_Z4,0.0
:C )*SET,_Z5,0.5
:C )*SET,_Z6,1.0
:C )*SET,_Z7,0.0
:C )*IF,_Z1,GT,0,THEN
:C )*GET,_ZC,PDS,,VDIS,_Z1
:C )*IF,_ZC,EQ,'TRIA',THEN
:C )*GET,_Z4,PDS,,PAR1,_Z1
:C )*GET,_Z5,PDS,,PAR2,_Z1
:C )*GET,_Z6,PDS,,PAR3,_Z1
:C )*GET,_Z7,PDS,,PAR4,_Z1
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDVAR
  Fld_0
    Typ_LAB
    Prm_ Parameters for TRIANGULAR distribution
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Prm_ LB    Lower Boundary
    Typ_REAL
    DEF_*PAR(_Z4)
  Fld_5
    Prm_ MLV   Most likely value
    Typ_REAL
    DEF_*PAR(_Z5)
  Fld_6
    Prm_ UB    Upper Boundary
    Typ_REAL
    DEF_*PAR(_Z6)
  Fld_7
    Typ_DEF_*PAR(_Z7)
  Fld_0
    Typ_LAB
    Prm_ NOTE: LB <= MLV <= UB  and  LB < UB !
Cmd_)/NOPR
Cmd_)PDVAR,,RV,STAT
Cmd_)/GO
:E END
:! 
:N Fnc_PDDIS_UNIF
:S    857,   422,   428
:T Cmd
:C )! Fnc_PDDIS_UNIF
:D Quantify Uniform/Rectangular Distribution
:H Hlp_C_PDVAR
:C )/NOPR
:C )*SET,_Z4,0.0
:C )*SET,_Z5,1.0
:C )*SET,_Z6,0.0
:C )*SET,_Z7,0.0
:C )*IF,_Z1,GT,0,THEN
:C )*GET,_ZC,PDS,,VDIS,_Z1
:C )*IF,_ZC,EQ,'UNIF',THEN
:C )*GET,_Z4,PDS,,PAR1,_Z1
:C )*GET,_Z5,PDS,,PAR2,_Z1
:C )*GET,_Z6,PDS,,PAR3,_Z1
:C )*GET,_Z7,PDS,,PAR4,_Z1
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDVAR
  Fld_0
    Typ_LAB
    Prm_ Parameters for UNIFORM Distribution
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Prm_ LB    Lower Boundary
    Typ_REAL
    DEF_*PAR(_Z4)
  Fld_5
    Prm_ UB    Upper Boundary
    Typ_REAL
    DEF_*PAR(_Z5)
  Fld_6
    Typ_DEF_*PAR(_Z6)
  Fld_7
    Typ_DEF_*PAR(_Z7)
  Fld_0
    Typ_LAB
    Prm_ NOTE: LB < UB !
Cmd_)/NOPR
Cmd_)PDVAR,,RV,STAT
Cmd_)/GO
:E END
:! 
:N Fnc_PDDIS_WEIB
:S    898,   410,   481
:T Cmd
:C )! Fnc_PDDIS_WEIB
:D Quantify Weibull Distribution
:H Hlp_C_PDVAR
:C )/NOPR
:C )*SET,_Z4,1.0
:C )*SET,_Z5,1.0
:C )*SET,_Z6,0.0
:C )*SET,_Z7,0.0
:C )*IF,_Z1,GT,0,THEN
:C )*GET,_ZC,PDS,,VDIS,_Z1
:C )*IF,_ZC,EQ,'WEIB',THEN
:C )*GET,_Z4,PDS,,PAR1,_Z1
:C )*GET,_Z5,PDS,,PAR2,_Z1
:C )*GET,_Z6,PDS,,PAR3,_Z1
:C )*GET,_Z7,PDS,,PAR4,_Z1
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDVAR
  Fld_0
    Typ_LAB
    Prm_ Parameters for WEIBULL distribution
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Prm_ EXP>0 Weibull exponent
    Typ_REAL
    DEF_*PAR(_Z4)
  Fld_5
    Prm_ CHR   Weibull characteristic
    Typ_REAL
    DEF_*PAR(_Z5)
  Fld_6
    Prm_ OFF   Offset parameter
    Typ_REAL
    DEF_*PAR(_Z6)
  Fld_7
    Typ_DEF_*PAR(_Z7)
  Fld_0
    Typ_LAB
    Prm_ NOTE: CHR > OFF !
Cmd_)/NOPR
Cmd_)PDVAR,,RV,STAT
Cmd_)/GO
:E END
:! 
:N Fnc_PDDMCS_ALL
:S    919,   448,   464
:T Cmd
:C )! Fnc_PDDMCS_ALL
:D Specify Options for Direct Monte Carlo
:H Hlp_C_PDDMCS
:C )/NOPR
:C )*GET,_Z4,CPAR,4         ! get parameter 4 defined with *CSET
:C )*IF,_z4,EQ,0,THEN
:C )KEYW,KEY1,0
:C )_ZC='CONT'
:C )*ELSEIF,_z4,EQ,-2,THEN
:C )KEYW,KEY1,0
:C )_ZC='TIME'
:C )*ELSEIF,_z4,EQ,-1,THEN
:C )KEYW,KEY1,0
:C )_ZC='INIT'
:C )*ELSEIF,_z4,EQ,1,THEN
:C )KEYW,KEY1,1
:C )_ZC='    '
:C )*ENDIF
:C )/GO
K_LN(key1)
Inp_P
Cmd_PDDMCS
  Fld_0
    K_FL(KEY1)
    Prm_ [PDDMCS]   Define Seed Value for Direct Monte Carlo
    Typ_LAB
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_'ALL '
  Fld_5
    Def_0.0
  Fld_6
    Def_0.0
  Fld_7
    Def_0
  Fld_8
    K_FL(key1)
    Typ_DEF_*PAR(_ZC)
  Fld_7
    K_FL(KEY1)
    Prm_ Seed > 0  Seed value
    Typ_INT
    Def_123457
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3
Cmd_)*DEL,_ZC
Cmd_)/GO
:E END
:! 
:N Fnc_PDDMCS_AUTO
:S   1811,   645,  1159
:T Cmd
:C )! Fnc_PDDMCS_AUTO
:A    Autostop Opt
:D Specify Autostop Parameters for Convergence
:H Hlp_C_PDDMCS
:C )/NOPR
:C )*GET,_Z1,PDS,0,ASTP,2   ! AUTOSTOP Mean value acc.
:C )*GET,_Z2,PDS,0,ASTP,3   ! AUTOSTOP St.dev. value acc.
:C )*GET,_Z3,PDS,0,ASTP,4   ! AUTOSTOP Checking frequency
:C )*GET,_Z4,CPAR,4         ! get parameter 4 defined with *CSET
:C )*IF,_z4,EQ,0,THEN
:C )KEYW,KEY1,0
:C )_ZC='CONT'
:C )*ELSEIF,_z4,EQ,-2,THEN
:C )KEYW,KEY1,0
:C )_ZC='TIME'
:C )*ELSEIF,_z4,EQ,-1,THEN
:C )KEYW,KEY1,0
:C )_ZC='INIT'
:C )*ELSEIF,_z4,EQ,1,THEN
:C )KEYW,KEY1,1
:C )_ZC='    '
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDDMCS
  Fld_0
    Prm_ [PDDMCS]  Define AUTOSTOP Options for Direct Monte Carlo
    Typ_LAB
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_'AUTO'
  Fld_5
    Prm_ ACCMEAN   Mean Value Accuracy
    Typ_REAL
    Def_*PAR(_Z1)
  Fld_6
    Prm_ ACCSTDEV  Standrd Dev. Accuracy
    Typ_REAL
    Def_*PAR(_Z2)
  Fld_7
    Prm_ CHECK     Conv Check Frequency
    Typ_INT
    Def_*PAR(_Z3)
  Fld_8
    K_FL(key1)
    Typ_DEF_*PAR(_ZC)
  Fld_8
    K_FL(KEY1)
    Prm_ Seed > 0  Seed value
    Typ_INT
    Def_123457
  Fld_0
    Prm_ Note: If AUTOSTOP is enabled the simulations will automatically
    Typ_LAB
  Fld_0
    Prm_       stop if the mean value and standard deviation of all
    Typ_LAB
  Fld_0
    Prm_       response parameters converge within the specified
    Typ_LAB
  Fld_0
    Prm_       accuracies. This check will be performed every other loop
    Typ_LAB
  Fld_0
    Prm_       as specified by the "CHECK" option. The accuracies 
    Typ_LAB
  Fld_0
    Prm_       "ACCMEAN" and "ACCSTDEV" must be greater than 0.0.
    Typ_LAB
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3
Cmd_)*DEL,_ZC
Cmd_)/GO
:E END
:! 
:N Fnc_PDDMCS_ENTRY
:S    993,   337,   649
:T Cmd
:C )! Fnc_PDDMCS_ENTRY
:A    Method Optns
:D Options for Direct Monte Carlo Sampling
:H Hlp_C_PDDMCS
:C )/NOPR
:C )*DEL,_Z1
:C )*GET,_Z1,PDS,0,NSIM     ! No of simulations to be executed
:C )*IF,_Z1,EQ,0,THEN
:C )_Z1=30
:C )*ENDIF
:C )*GET,_Z2,PDS,0,ASTP,1   ! AUTOSTOP on/off?
:C )/GO
Inp_Noapply
Cmd_)*CSET,1,4
  Fld_0
    Prm_ [PDDMCS]  Options for Direct Monte Carlo Sampling
    Typ_LAB
  Fld_2
    Prm_ NSIM > 0  Number of Simulations
    Typ_REAL
    Def_*PAR(_Z1)
  Fld_3
    Typ_DEF_'    '
  Fld_4
    Prm_ Astop     Autostop Option
    Typ_Lis_RADIOB
    Lis_Enable AUTOSTOP ,1
    Lis_Execute ALL Sims,0
    Def_*PAR(_Z2)
  Fld_5
    Prm_ Seed      Random Seed Option
    Typ_Lis_RADIOB
    Lis_Continue    CONT,0
    Lis_System Time TIME,-2
    Lis_Use 123457  INIT,-1
    Lis_Other ...       ,1
    Def_0
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2
Cmd_)*DEL,_ZC
Cmd_)/GO
Cal_Fnc_PDDMCS_AUTO,4,EQ,1,1
Cal_Fnc_PDDMCS_ALL,4,EQ,0,1
:E END
:! 
:N Fnc_PDDOEL_BBM0
:S    587,    99,   481
:T Cmd
:C )! Fnc_PDDOEL_BBM0
:D WARNING
:H Hlp_C_PDDOEL
Inp_Noapply
Cmd_)!
Fld_0
Prm_
Fld_0
Prm_                            - WARNING -
Typ_LAB
Fld_0
Prm_  The default settings for the PDDOEL,...,BBM command have been
Typ_LAB
Fld_0
Prm_  changed directly with the PDDOEL command for at least one 
Typ_LAB
Fld_0
Prm_  random input variable.
Typ_LAB
Fld_0
Prm_  Please use the PDDOEL command again to modify the 
Typ_LAB
Fld_0
Prm_  design-of-experiment settings.
Typ_LAB
Fld_0
Prm_  Press Help to get help on the command options.
Typ_LAB
:E END
:! 
:N Fnc_PDDOEL_BBM1
:S   1234,   317,   910
:T Cmd
:C )! Fnc_PDDOEL_BBM1
:A    PDDOEL options
:D DOE-Levels for a Box-Behnken Matrix Design
:H Hlp_C_PDDOEL
:C )/NOPR
:C )_Z1=0.01
:C )_Z3=0.99
:C )*GET,_Z1,PDS,0,BBML,1,LVAL,1     ! Probability level 1
:C )*GET,_Z3,PDS,0,BBML,1,LVAL,3     ! Probability level 3
:C )/GO
Inp_Noapply
Cmd_)*CSET,1,2
  Fld_0
    Prm_ [PDDOEL,...,BBM]   Design-of-Experiment Levels for a 
    Typ_LAB
  Fld_0
    Prm_                    Box-Behnken Matrix Design
    Typ_LAB
  Fld_2
    Prm_ Plow    Lower Bound Probability
    Typ_REAL
    Def_*PAR(_Z1)
  Fld_3
    Prm_ Pupp    Upper Bound Probability
    Typ_REAL
    Def_*PAR(_Z3)
  Fld_0
    Prm_
  Fld_0
    Prm_ Note: Only the default settings of the VTYP and the LOPT fields 
    Typ_LAB
  Fld_0
    Prm_       fields of the PDDOEL command are supported by the GUI.
    Typ_LAB
  Fld_0
    Prm_       If you press OK the settings will be applied to all 
    Typ_LAB
  Fld_0
    Prm_       defined random input variables. 
    Typ_LAB
  Fld_0
    Prm_       For more details please see the PDDOEL command
    Typ_LAB
  Fld_0
    Prm_       documentation under Help.
    Typ_LAB
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z3
Cmd_)/GO
Cal_Fnc_PDDOEL_BBM2
:E END
:! 
:N Fnc_PDDOEL_BBM2
:S    848,   238,   603
:T Cmd
:C )! Fnc_PDDOEL_BBM2
:A    PDDOEL options
:D DOE-Levels for a Box-Behnken Matrix Design
:H Hlp_C_PDDOEL
:C )/NOPR
:C )*GET,_ntrv,PDS,0,NTRV     ! number of random input variables
:C )/GO
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_*DO,_z1,1,_ntrv
Cmd_)/NOPR
! Exclude_from_paths
Cmd_*GET,_nam1,PDS,,VNAM,_z1,STAR,1
! Exclude_from_paths
Cmd_*GET,_nam2,PDS,,VNAM,_z1,STAR,9
! Exclude_from_paths
Cmd_*GET,_nam3,PDS,,VNAM,_z1,STAR,17
! Exclude_from_paths
Cmd_*GET,_nam4,PDS,,VNAM,_z1,STAR,25
Cmd_)/GO
Cmd_PDDOEL,%_nam1%%_nam2%%_nam3%%_nam4%,BBM,PROB,BND
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_'    '
  Fld_4
    Typ_DEF_*CPAR(2)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_*ENDDO
Cmd_)/NOPR
Cmd_)*DEL,_ntrv
Cmd_)*DEL,_nam1
Cmd_)*DEL,_nam2
Cmd_)*DEL,_nam3
Cmd_)*DEL,_nam4
Cmd_)*DEL,_Z1
Cmd_)/GO
:E END
:! 
:N Fnc_PDDOEL_CCD0
:S    587,    99,   481
:T Cmd
:C )! Fnc_PDDOEL_CCD0
:D WARNING
:H Hlp_C_PDDOEL
Inp_Noapply
Cmd_)!
Fld_0
Prm_
Fld_0
Prm_                            - WARNING -
Typ_LAB
Fld_0
Prm_  The default settings for the PDDOEL,...,CCD command have been
Typ_LAB
Fld_0
Prm_  changed directly with the PDDOEL command for at least one 
Typ_LAB
Fld_0
Prm_  random input variable.
Typ_LAB
Fld_0
Prm_  Please use the PDDOEL command again to modify the 
Typ_LAB
Fld_0
Prm_  design-of-experiment settings.
Typ_LAB
Fld_0
Prm_  Press Help to get help on the command options.
Typ_LAB
:E END
:! 
:N Fnc_PDDOEL_CCD1
:S   1234,   318,   909
:T Cmd
:C )! Fnc_PDDOEL_CCD1
:A    PDDOEL options
:D DOE-Levels for a Central Composite Design
:H Hlp_C_PDDOEL
:C )/NOPR
:C )_Z1=0.005
:C )_Z5=0.995
:C )*GET,_Z1,PDS,0,CCDL,1,LVAL,1     ! Probability level 1
:C )*GET,_Z5,PDS,0,CCDL,1,LVAL,5     ! Probability level 5
:C )/GO
Inp_Noapply
Cmd_)*CSET,1,2
  Fld_0
    Prm_ [PDDOEL,...,CCD]   Design-of-Experiment Levels for a 
    Typ_LAB
  Fld_0
    Prm_                    Central Composite Design
    Typ_LAB
  Fld_2
    Prm_ Plow    Lower Bound Probability
    Typ_REAL
    Def_*PAR(_Z1)
  Fld_3
    Prm_ Pupp    Upper Bound Probability
    Typ_REAL
    Def_*PAR(_Z5)
  Fld_0
    Prm_
  Fld_0
    Prm_ Note: Only the default settings of the VTYP and the LOPT fields 
    Typ_LAB
  Fld_0
    Prm_       fields of the PDDOEL command are supported by the GUI.
    Typ_LAB
  Fld_0
    Prm_       If you press OK the settings will be applied to all 
    Typ_LAB
  Fld_0
    Prm_       defined random input variables. 
    Typ_LAB
  Fld_0
    Prm_       For more details please see the PDDOEL command
    Typ_LAB
  Fld_0
    Prm_       documentation under Help.
    Typ_LAB
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z5
Cmd_)/GO
Cal_Fnc_PDDOEL_CCD2
:E END
:! 
:N Fnc_PDDOEL_CCD2
:S    901,   237,   657
:T Cmd
:C )! Fnc_PDDOEL_CCD2
:A    PDDOEL options
:D DOE-Levels for a Central Composite Design
:H Hlp_C_PDDOEL
:C )/NOPR
:C )*GET,_ntrv,PDS,0,NTRV     ! number of random input variables
:C )/GO
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_*DO,_z1,1,_ntrv
Cmd_)/NOPR
! Exclude_from_paths
Cmd_*GET,_nam1,PDS,,VNAM,_z1,STAR,1
! Exclude_from_paths
Cmd_*GET,_nam2,PDS,,VNAM,_z1,STAR,9
! Exclude_from_paths
Cmd_*GET,_nam3,PDS,,VNAM,_z1,STAR,17
! Exclude_from_paths
Cmd_*GET,_nam4,PDS,,VNAM,_z1,STAR,25
Cmd_)/GO
Cmd_PDDOEL,%_nam1%%_nam2%%_nam3%%_nam4%,CCD,PROB,BND
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_'    '
  Fld_4
    Typ_DEF_'    '
  Fld_5
    Typ_DEF_'    '
  Fld_6
    Typ_DEF_*CPAR(2)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_*ENDDO
Cmd_)/NOPR
Cmd_)*DEL,_ntrv
Cmd_)*DEL,_nam1
Cmd_)*DEL,_nam2
Cmd_)*DEL,_nam3
Cmd_)*DEL,_nam4
Cmd_)*DEL,_Z1
Cmd_)/GO
:E END
:! 
:N Fnc_PDEF
:S  38671,   499, 38153
:T Command
:C )! Fnc_PDEF
:A Map onto Path
:D Map Result Items onto Path
:K #(POST1+RESULTS)
:H Hlp_C_PDEF
:C )/NOPR
:C )KEYW,NOAVG,0
:C )_z1=0
:C )*get,_z1,common,,cpost1,,int,408
:C )keyw,kyavpr,_z1
:C )_z1=0
:C )*GET,_z1,common,,pathhand,,int,11
:C )*IF,_z1,GT,0,THEN
:C )KEYW,NOAVG,1
:C )*ENDIF
:C )!
:C )maxlayer = 0
:C )*GET,maxlayer,ACTIVE,,DOF,LTEM
:C )*DO,i,1,32
:C )keyw,layer%i%,0
:C )*ENDDO
:C )*DO,i,1,maxlayer
:C )keyw,layer%i%,1
:C )*ENDDO
:C )/GO
Cmd_)/NOPR
Cmd_)*CSET,1,3
 Fld_0
  Typ_Lab
  Prm_[PDEF]  Map Result Items onto Path
 Fld_2
  Prm_Lab        User label for item
  Typ_CHAR,8
 Fld_3
 K_FL((STRUCTRL)+multifld+lsdyna)
  Prm_Item,Comp  Item to be mapped
  Typ_Idx
P_LN(LINPLUS)
   Idx_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS)
   Idx_DOF solution    ,              UY,U,Y
P_LN(LINPLUS)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS)
   Idx_DOF solution    ,            USUM,U,SUM
P_LN(LINPLUS)
   Idx_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS)
   Idx_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS)
   Idx_DOF solution    ,            ROTZ,ROT,Z
P_LN(LINPLUS)
   Idx_DOF solution    ,          ROTSUM,ROT,SUM
!
P_LN(LINPLUS)
   Idx_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS)
   Idx_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS)
   Idx_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS)
   Idx_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS)
   Idx_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS)
   Idx_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS)
   Idx_Stress          ,1st principal S1,S,1
P_LN(LINPLUS)
   Idx_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS)
   Idx_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS)
   Idx_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS)
   Idx_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS)
   Idx_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS)
   Idx_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
   Idx_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS)
   Idx_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS)
   Idx_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS)
   Idx_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS)
   Idx_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS)
   Idx_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS)
   Idx_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS)
   Idx_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS)
   Idx_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS)
   Idx_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS)
   Idx_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS)
   Idx_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(FULL_ANS)
   Idx_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
   Idx_Energy          ,PlasStateVar PSV,NL,PSV
!
P_LN(LINPLUS)
   Idx_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS)
   Idx_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS)
   Idx_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS)
   Idx_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS)
   Idx_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS)
   Idx_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS)
   Idx_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS)
   Idx_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS)
   Idx_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS)
   Idx_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS)
   Idx_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
   Idx_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
   Idx_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
   Idx_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
   Idx_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
   Idx_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
   Idx_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
   Idx_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
   Idx_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
   Idx_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
   Idx_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
   Idx_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
   Idx_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
   Idx_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
   Idx_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
   Idx_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
   Idx_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
   Idx_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
   Idx_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
   Idx_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
   Idx_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
   Idx_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
   Idx_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
   Idx_Strain-other    ,Swelling    EPSW,EPSW,
!
P_LN(FULL_ANS)
   Idx_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
   Idx_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
   Idx_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
   Idx_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
   Idx_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
   Idx_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
   Idx_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
   Idx_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
   Idx_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
   Idx_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
   Idx_Elem table item ,"ETAB,"
   Idx_Elem table item ," "
   Idx_Elem table item ," "
   Idx_Elem table item ,! Enter element
   Idx_Elem table item ,! table item
   Idx_Elem table item ,! below.
!
 Fld_3
 K_FL(THERMAL+multifld+lsdyna)
  Prm_Item,Comp  Item to be mapped
  Typ_Idx
P_LN(THERMAL*FLOTRAN)
   K_LN(laytherm)
   IDX_DOF solution    ,Temperature TEMP,TEMP,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER1)
   IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER3)
   IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER4)
   IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER5)
   IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER6)
   IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER7)
   IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER8)
   IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER9)
   IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER10)
   IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER11)
   IDX_DOF solution    ,Layer Temp  TE10,TE10,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER12)
   IDX_DOF solution    ,Layer Temp  TE11,TE11,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER13)
   IDX_DOF solution    ,Layer Temp  TE12,TE12,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER14)
   IDX_DOF solution    ,Layer Temp  TE13,TE13,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER15)
   IDX_DOF solution    ,Layer Temp  TE14,TE14,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER16)
   IDX_DOF solution    ,Layer Temp  TE15,TE15,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER17)
   IDX_DOF solution    ,Layer Temp  TE16,TE16,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER18)
   IDX_DOF solution    ,Layer Temp  TE17,TE17,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER19)
   IDX_DOF solution    ,Layer Temp  TE18,TE18,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER20)
   IDX_DOF solution    ,Layer Temp  TE19,TE19,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER21)
   IDX_DOF solution    ,Layer Temp  TE20,TE20,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER22)
   IDX_DOF solution    ,Layer Temp  TE21,TE21,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER23)
   IDX_DOF solution    ,Layer Temp  TE22,TE22,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER24)
   IDX_DOF solution    ,Layer Temp  TE23,TE23,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER25)
   IDX_DOF solution    ,Layer Temp  TE24,TE24,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER26)
   IDX_DOF solution    ,Layer Temp  TE25,TE25,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER27)
   IDX_DOF solution    ,Layer Temp  TE26,TE26,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER28)
   IDX_DOF solution    ,Layer Temp  TE27,TE27,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER29)
   IDX_DOF solution    ,Layer Temp  TE28,TE28,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER30)
   IDX_DOF solution    ,Layer Temp  TE29,TE29,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER31)
   IDX_DOF solution    ,Layer Temp  TE30,TE30,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER32)
   IDX_DOF solution    ,Layer Temp  TE31,TE31,
   K_LN((THERMAL*FLOTRAN)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
!
   Idx_Elem table item ,"ETAB,"
   Idx_Elem table item ," "
   Idx_Elem table item ," "
   Idx_Elem table item ,! Enter element
   Idx_Elem table item ,! table item
   Idx_Elem table item ,! below.
!
 Fld_3
 K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
 P_FL(elecmag)
  Prm_Item,Comp  Item to be mapped
  Typ_Idx
   P_LN(THERMAL)
   Idx_DOF solution    ,Elec poten  VOLT,VOLT,
!
   Idx_Elem table item ,"ETAB,"
   Idx_Elem table item ," "
   Idx_Elem table item ," "
   Idx_Elem table item ,! Enter element
   Idx_Elem table item ,! table item
   Idx_Elem table item ,! below.
!
 Fld_3
 K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
 P_FL(ELECMAG)
  Prm_Item,Comp  Item to be mapped
  Typ_Idx
   K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
   Idx_DOF solution    ,MagScalPoten MAG,MAG,
   K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
   Idx_DOF solution    ,MagVectPoten  AX,A,X
   K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
   Idx_DOF solution    ,              AY,A,Y
   K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
   Idx_DOF solution    ,              AZ,A,Z
   K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
   Idx_DOF solution    ,            ASUM,A,SUM
   K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
   Idx_DOF solution    ,Elec poten  VOLT,VOLT,
   K_LN((vectorp+scalarp+edgeflx+edgeelc))
   Idx_DOF solution    ,Elec poten  VOLT,VOLT,
   K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
   Idx_DOF solution    ,EMF drop     EMF,EMF,
   K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
   Idx_DOF solution    ,Current     CURR,CURR,
!
   K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
   Idx_Flux & gradient ,MagFluxDens   BX,B,X
   K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
   Idx_Flux & gradient ,              BY,B,Y
   K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
   Idx_Flux & gradient ,              BZ,B,Z
   K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
   Idx_Flux & gradient ,            BSUM,B,SUM
   K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC)*NOFILTER
   Idx_Flux & gradient ,Mag field     HX,H,X
   K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC)*NOFILTER
   Idx_Flux & gradient ,              HY,H,Y
   K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC)*NOFILTER
   Idx_Flux & gradient ,              HZ,H,Z
   K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC)*NOFILTER
   Idx_Flux & gradient ,            HSUM,H,SUM
   K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
   Idx_Flux & gradient ,ElecFluxDens  DX,D,X
   K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
   Idx_Flux & gradient ,              DY,D,Y
   K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
   Idx_Flux & gradient ,              DZ,D,Z
   K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
   Idx_Flux & gradient ,            DSUM,D,SUM
   K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
   Idx_Flux & gradient ,Elec field   EFX,EF,X
   K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
   Idx_Flux & gradient ,             EFY,EF,Y
   K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
   Idx_Flux & gradient ,             EFZ,EF,Z
   K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
   Idx_Flux & gradient ,           EFSUM,EF,SUM
!
   K_LN(edgeelc*NOFILTER)
   Idx_Nodal force data,Mag force  FMAGX,FMAG,X
   K_LN(edgeelc*NOFILTER)
   Idx_Nodal force data,           FMAGY,FMAG,Y
   K_LN(edgeelc*NOFILTER)
   Idx_Nodal force data,           FMAGZ,FMAG,Z
   K_LN(edgeelc*NOFILTER)
   Idx_Nodal force data,         FMAGSUM,FMAG,SUM
!
   Idx_Elem table item ,"ETAB,"
   Idx_Elem table item ," "
   Idx_Elem table item ," "
   Idx_Elem table item ,! Enter element
   Idx_Elem table item ,! table item
   Idx_Elem table item ,! below.
!
 Fld_3
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item,Comp  Item to be mapped
  Typ_IDX
P_LN(FLOTRAN)
   Idx_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
   Idx_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
   Idx_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN)
   Idx_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN*FULL_ANS)
   Idx_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(laytherm)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
P_LN(FULL_ANS)
   Idx_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
   Idx_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
   Idx_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
   Idx_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
!
   Idx_Elem table item ,"ETAB,"
   Idx_Elem table item ," "
   Idx_Elem table item ," "
   Idx_Elem table item ,! Enter element
   Idx_Elem table item ,! table item
   Idx_Elem table item ,! below.
!
 Fld_3
 K_FL(CFD)
  Prm_Item,Comp  Item to be mapped
  Typ_IDX
P_LN(FLOTRAN)
   Idx_DOF solution    ,Displacement  UX,U,X
P_LN(FLOTRAN)
   Idx_DOF solution    ,              UY,U,Y
P_LN(FLOTRAN)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(FLOTRAN)
   Idx_DOF solution    ,            USUM,U,SUM
P_LN(FLOTRAN)
   Idx_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
   Idx_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
   Idx_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN)
   Idx_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN*FULL_ANS)
   Idx_DOF solution    ,Pressure    PRES,PRES,
P_LN(FLOTRAN)
   Idx_DOF solution    ,Turb K.E.   ENKE,ENKE,
P_LN(FLOTRAN)
   Idx_DOF solution    ,Enrg dissip ENDS,ENDS,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(laytherm)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
P_LN(FLOTRAN)
   Idx_Other quantities,Sp. Heat    SPHT,SPHT,
P_LN(FLOTRAN)
   Idx_Other quantities,Density     DENS,DENS,
P_LN(FLOTRAN)
   Idx_Other quantities,Viscosity   VISC,VISC,
P_LN(FLOTRAN)
   Idx_Other quantities,Conductivit COND,COND,
P_LN(FLOTRAN)
   Idx_Other quantities,Eff Viscos  EVIS,EVIS,
P_LN(FLOTRAN)
   Idx_Other quantities,Eff Conduct ECON,ECON,
P_LN(FLOTRAN)
   Idx_Other quantities,Total temp  TTOT,TTOT,
P_LN(FLOTRAN)
   Idx_Other quantities,Strm func2D STRM,STRM,
P_LN(FLOTRAN)
   Idx_Other quantities,PressurCoef PCOE,PCOE,
P_LN(FLOTRAN)
   Idx_Other quantities,Mach number MACH,MACH,
P_LN(FLOTRAN)
   Idx_Other quantities,Total pres  PTOT,PTOT,
P_LN(FLOTRAN)
   Idx_Other quantities,Heat flux   HFLU,HFLU,
P_LN(FLOTRAN)
   Idx_Other quantities,Film coeff  HFLM,HFLM,
P_LN(FLOTRAN)
   Idx_Other quantities,Turb law Y+ YPLU,YPLU,
P_LN(FLOTRAN)
   Idx_Other quantities,Wall shear  TAUW,TAUW,
P_LN(FLOTRAN)
   IDX_Other quantities,Turb coeff  CMUV,CMUV,
P_LN(FLOTRAN)
   IDX_Other quantities,Rad flux    RDFL,RDFL,
!
   Idx_Elem table item ,"ETAB,"
   Idx_Elem table item ," "
   Idx_Elem table item ," "
   Idx_Elem table item ,! Enter element
   Idx_Elem table item ,! table item
   Idx_Elem table item ,! below.
!
 Fld_3
 K_FL((MULTIFLD+(STRUCTRL*THERMAL*FLUID))*LSDYNA)
  Prm_Item,Comp  Item to be mapped
  Typ_IDX
P_LN(LINPLUS)
   Idx_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS)
   Idx_DOF solution    ,              UY,U,Y
P_LN(LINPLUS)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS)
   Idx_DOF solution    ,            USUM,U,SUM
P_LN(LINPLUS)
   Idx_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS)
   Idx_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS)
   Idx_DOF solution    ,            ROTZ,ROT,Z
P_LN(LINPLUS)
   Idx_DOF solution    ,          ROTSUM,ROT,SUM
!
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_DOF solution    ,MagVectPoten  AX,A,X
K_LN(LSDYNA)
   Idx_DOF solution    ,Acceleration  AX,A,X
P_LN(ELECMAG*LSDYNA)
   Idx_DOF solution    ,              AY,A,Y
P_LN(ELECMAG*LSDYNA)
   Idx_DOF solution    ,              AZ,A,Z
P_LN(ELECMAG*LSDYNA)
   Idx_DOF solution    ,            ASUM,A,SUM
P_LN(THERMAL*ELECMAG)
K_LN(lsdyna)
   Idx_DOF solution    ,Elec poten  VOLT,VOLT,
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_DOF solution    ,EMF drop     EMF,EMF,
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_DOF solution    ,Current     CURR,CURR,
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN*FULL_ANS)
K_LN(lsdyna)
   Idx_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
K_LN(lsdyna+laytherm)
 IDX_DOF solution    ,Temperature TEMP,TEMP,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER1)
 IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER3)
 IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER4)
 IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER5)
 IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER6)
 IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER7)
 IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER8)
 IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER9)
 IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER10)
 IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER11)
 IDX_DOF solution    ,Layer Temp  TE10,TE10,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER12)
 IDX_DOF solution    ,Layer Temp  TE11,TE11,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER13)
 IDX_DOF solution    ,Layer Temp  TE12,TE12,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER14)
 IDX_DOF solution    ,Layer Temp  TE13,TE13,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER15)
 IDX_DOF solution    ,Layer Temp  TE14,TE14,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER16)
 IDX_DOF solution    ,Layer Temp  TE15,TE15,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER17)
 IDX_DOF solution    ,Layer Temp  TE16,TE16,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER18)
 IDX_DOF solution    ,Layer Temp  TE17,TE17,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER19)
 IDX_DOF solution    ,Layer Temp  TE18,TE18,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER20)
 IDX_DOF solution    ,Layer Temp  TE19,TE19,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER21)
 IDX_DOF solution    ,Layer Temp  TE20,TE20,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER22)
 IDX_DOF solution    ,Layer Temp  TE21,TE21,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER23)
 IDX_DOF solution    ,Layer Temp  TE22,TE22,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER24)
 IDX_DOF solution    ,Layer Temp  TE23,TE23,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER25)
 IDX_DOF solution    ,Layer Temp  TE24,TE24,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER26)
 IDX_DOF solution    ,Layer Temp  TE25,TE25,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER27)
 IDX_DOF solution    ,Layer Temp  TE26,TE26,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER28)
 IDX_DOF solution    ,Layer Temp  TE27,TE27,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER29)
 IDX_DOF solution    ,Layer Temp  TE28,TE28,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER30)
 IDX_DOF solution    ,Layer Temp  TE29,TE29,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER31)
 IDX_DOF solution    ,Layer Temp  TE30,TE30,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER32)
 IDX_DOF solution    ,Layer Temp  TE31,TE31,
 P_LN(THERMAL*FLOTRAN*FULL_ANS)
 K_LN(lsdyna+LAYTHERM+LAYER2)
 DX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
P_LN(LINPLUS)
   Idx_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS)
   Idx_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS)
   Idx_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS)
   Idx_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS)
   Idx_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS)
   Idx_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS)
   Idx_Stress          ,1st principal S1,S,1
P_LN(LINPLUS)
   Idx_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS)
   Idx_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS)
   Idx_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS)
   Idx_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS)
   Idx_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS)
   Idx_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
   Idx_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS)
   Idx_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS)
   Idx_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS)
   Idx_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS)
   Idx_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS)
   Idx_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS)
   Idx_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,           EFSUM,EF,SUM
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
!
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Nodal force data,         FMAGSUM,FMAG,SUM
!
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Energy          ,PlasStateVar PSV,NL,PSV
!
P_LN(LINPLUS)
   Idx_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS)
   Idx_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS)
   Idx_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS)
   Idx_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS)
   Idx_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS)
   Idx_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS)
   Idx_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS)
   Idx_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS)
   Idx_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS)
   Idx_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS)
   Idx_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-other    ,Swelling    EPSW,EPSW,
!
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
   Idx_Elem table item ,"ETAB,"
   Idx_Elem table item ," "
   Idx_Elem table item ," "
   Idx_Elem table item ,! Enter element
   Idx_Elem table item ,! table item
   Idx_Elem table item ,! below.
!
Cmd_)/GO
Cmd_AVPRIN
K_CM(STRUCTRL)
 Fld_2
  Typ_Def_*GET(COMMON,,CPOST1,,INT,1)
 Fld_3
  Prm_[AVPRIN]  Eff NU for EQV strain
  Typ_REAL
  K_LN(KYAVPR)
  Def_*GET(COMMON,,CPOST1,,REAL,565)
Cmd_)/NOPR
!
Cmd_)*SET,_z1
 Fld_2
  K_FL(noavg)
  Prm_Average results across element
  Typ_Logi,No,Yes
  Def_1
 Fld_2
  K_FL(NOAVG)
  Typ_Def_0
!
Cmd_)*SET,_z2
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[/PBC]  Show boundary condition symbol 
 Fld_2
  Prm_        Show path on display
  Typ_Logi,No,Yes
  Def_0
!
Cmd_)/GO
Cal_Fnc_PDEF_2
:E END_OF_Fnc_PDEF
:! 
:N Fnc_PDEF_2
:S    348,   159,   182
:T Command
:C )! Fnc_PDEF_avg
:C )/NOPR
:C )*IF,_z1,EQ,1,THEN
:C )_z1='AVG'
:C )*ELSE
:C )_z1='NOAVG'
:C )*ENDIF
:C )/GO
Inp_P
Cmd_PDEF
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*PAR(_z1)
! Exclude_from_paths
Cmd_/PBC,PATH
 Fld_3
  Typ_Def_*PAR(_z2)
:E End
:! 
:N Fnc_PDEF_clear
:S    344,   161,   176
:T Command
:C )! Fnc_PDEF_clear
:A Clear Path Items
:D Clear Non-geometry Path Items
:H Hlp_C_PDEF
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_PDEF,CLEAR
 Fld_0
  Typ_Lab
  Prm_[PDEF],CLEAR   This function clears all path items except
 Fld_0
  Typ_Lab
  Prm_               geometry items XG, YG, ZG, S.
:E END
:! 
:N Fnc_PDEXE_ENTRYP
:S    804,   550,   247
:T Cmd
:C )! Fnc_PDEXE_ENTRYP
:D Run Probabilistic Analysis in Parallel
:A    Run Parallel
:H Hlp_C_PDEXE
:C )/NOPR
:C )*DEL,_ZC
:C )*GET,_ZC,PDS,,ANLN
:C )*IF,_ZC,EQ,'        ',THEN
:C )_Z1=0
:C )*ELSE
:C )_Z1=1
:C )*ENDIF
:C )*DEL,_Z2
:C )*DEL,_Z3
:C )*GET,_Z2,PDS,0,NTRV       ! Total no. of random variables
:C )*GET,_Z3,PDS,0,NTRP       ! Total no. of random output parameters
:C )*IF,_Z2,GE,1,THEN
:C )*IF,_Z3,GE,1,THEN
:C )_Z4=1
:C )*ELSE
:C )_Z4=0
:C )*ENDIF
:C )*ELSE
:C )_Z4=0
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)!
  Fld_2
    Typ_DEF_*PAR(_Z1)
  Fld_3
    Typ_DEF_*PAR(_Z2)
  Fld_4
    Typ_DEF_*PAR(_Z3)
  Fld_5
    Typ_DEF_*PAR(_Z4)
Cal_Fnc_PDEXE_WARN1,2,EQ,0,1
Cal_Fnc_PDEXE_WARN2,3,EQ,0,1
Cal_Fnc_PDEXE_WARN3,4,EQ,0,1
Cal_Fnc_PDEXE_PAR,5,GE,1,1
:E END
:! 
:N Fnc_PDEXE_ENTRYS
:S    800,   546,   247
:T Cmd
:C )! Fnc_PDEXE_ENTRYS
:D Run Probabilistic Analysis in Series
:A    Run Serial
:H Hlp_C_PDEXE
:C )/NOPR
:C )*DEL,_ZC
:C )*GET,_ZC,PDS,,ANLN
:C )*IF,_ZC,EQ,'        ',THEN
:C )_Z1=0
:C )*ELSE
:C )_Z1=1
:C )*ENDIF
:C )*DEL,_Z2
:C )*DEL,_Z3
:C )*GET,_Z2,PDS,0,NTRV       ! Total no. of random variables
:C )*GET,_Z3,PDS,0,NTRP       ! Total no. of random output parameters
:C )*IF,_Z2,GE,1,THEN
:C )*IF,_Z3,GE,1,THEN
:C )_Z4=1
:C )*ELSE
:C )_Z4=0
:C )*ENDIF
:C )*ELSE
:C )_Z4=0
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)!
  Fld_2
    Typ_DEF_*PAR(_Z1)
  Fld_3
    Typ_DEF_*PAR(_Z2)
  Fld_4
    Typ_DEF_*PAR(_Z3)
  Fld_5
    Typ_DEF_*PAR(_Z4)
Cal_Fnc_PDEXE_WARN1,2,EQ,0,1
Cal_Fnc_PDEXE_WARN2,3,EQ,0,1
Cal_Fnc_PDEXE_WARN3,4,EQ,0,1
Cal_Fnc_PDEXE_SER,5,GE,1,1
:E END
:! 
:N Fnc_PDEXE_MCS
:S   1326,   574,   745
:T Cmd
:C )! Fnc_PDEXE_MCS
:D Run Monte Carlo Simulations
:A    Run
:H Hlp_C_PDEXE
:C )/NOPR
:C )KEYW,KEY1,0
:C )KEYW,KEY2,0
:C )KEYW,KEY3,0
:C )*DEL,_ZC
:C )*GET,_ZC,PDS,0,SAMP     ! Label for sampling technique
:C )*IF,_ZC,EQ,'DIR     ',THEN
:C )KEYW,KEY1,1
:C )*ELSEIF,_ZC,EQ,'LHS     ',THEN
:C )KEYW,KEY2,1
:C )*ELSEIF,_ZC,EQ,'USER    ',THEN
:C )KEYW,KEY3,1
:C )*ENDIF
:C )*DEL,_Z1
:C )*GET,_Z1,PDS,0,NSIM     ! No of simulations to be executed
:C )*DEL,_Z2
:C )*GET,_Z2,PDS,0,NREP     ! No of repetitions to be executed
:C )/GO
Inp_Noapply
Cmd_)!
  Fld_0
    Prm_ M O N T E   C A R L O   S I M U L A T I O N S
    Typ_LAB
  Fld_0
    K_FL(KEY1)
    Prm_ Selected Sampling Method is DIRECT SAMPLING
    Typ_LAB
  Fld_0
    K_FL(KEY2)
    Prm_ Selected Sampling Method is LATIN HYPERCUBE
    Typ_LAB
  Fld_0
    K_FL(KEY3)
    Prm_ Selected Sampling Method is USER SPECIFIED
    Typ_LAB
  Fld_0
    Prm_ No. of repetions to be executed is %(I)_Z2%
    Typ_LAB
  Fld_0
    Prm_ No. of simulations to be executed is %(I)_Z1% per repetition
    Typ_LAB
Cmd_PDEXE
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_*CPAR(3)
  Fld_5
    Typ_DEF_*CPAR(4)
  Fld_6
    Typ_DEF_*CPAR(5)
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3  $)*DEL,_Z4
Cmd_)/GO
:E END
:! 
:N Fnc_PDEXE_PAR
:S    223,   135,    81
:T Cmd
:C )! Fnc_PDEXE_PAR
:D Run Probabilistic Analysis
:A    Run Parallel
:C )/NOPR
:C )/GO
Inp_P
! Call a Tcl/Tk window
Cmd_)~eui,'euidl::Nanny::SimulationMonitor::create'
:E END
:! 
:N Fnc_PDEXE_PAR_AF
:S    225,   139,    79
:T Cmd
:C )! Fnc_PDEXE_PAR_AF
:D Define Additional Files
:A    Addit'l Files
:C )/NOPR
:C )/GO
Inp_P
! Call a Tcl/Tk window
Cmd_)~eui,'euidl::Nanny::AdditionalFiles::create'
:E END
:! 
:N Fnc_PDEXE_PAR_HP
:S    223,   142,    74
:T Cmd
:C )! Fnc_PDEXE_PAR_HP
:D Hosts Selection and Products
:A    Host Select
:C )/NOPR
:C )/GO
Inp_P
! Call a Tcl/Tk window
Cmd_)~eui,'euidl::Nanny::HostSelect::create'
:E END
:! 
:N Fnc_PDEXE_RSM
:S   1180,   500,   673
:T Cmd
:C )! Fnc_PDEXE_RSM
:D Run Response Surface Analysis
:A    Run
:H Hlp_C_PDEXE
:C )/NOPR
:C )KEYW,KEY1,0
:C )KEYW,KEY2,0
:C )KEYW,KEY3,0
:C )*DEL,_ZC
:C )*GET,_ZC,PDS,0,SAMP     ! Label for sampling technique
:C )*IF,_ZC,EQ,'CCD     ',THEN
:C )KEYW,KEY1,1
:C )*ELSEIF,_ZC,EQ,'BBM     ',THEN
:C )KEYW,KEY2,1
:C )*ELSEIF,_ZC,EQ,'USER    ',THEN
:C )KEYW,KEY3,1
:C )*ENDIF
:C )*DEL,_Z1
:C )*GET,_Z1,PDS,0,NSIM     ! No of simulations to be executed
:C )/GO
Inp_Noapply
Cmd_)!
  Fld_0
    Prm_ R E S P O N S E   S U R F A C E   A N A L Y S I S
    Typ_LAB
  Fld_0
    K_FL(KEY1)
    Prm_ Selected Sampling Method is CENTRAL COMPOSITE DESIGN
    Typ_LAB
  Fld_0
    K_FL(KEY2)
    Prm_ Selected Sampling Method is BOX-BEHNKEN MATIRX
    Typ_LAB
  Fld_0
    K_FL(KEY3)
    Prm_ Selected Sampling Method is USER SPECIFIED
    Typ_LAB
  Fld_0
    Prm_ No. of simulations to be executed is %(I)_Z1%
    Typ_LAB
Cmd_PDEXE
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_*CPAR(3)
  Fld_5
    Typ_DEF_*CPAR(4)
  Fld_6
    Typ_DEF_*CPAR(5)
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3  $)*DEL,_Z4
Cmd_)/GO
:E END
:! 
:N Fnc_PDEXE_SER
:S    614,   217,   390
:T Cmd
:C )! Fnc_PDEXE_SER
:D Run Probabilistic Analysis
:A    Run Serial
:H Hlp_C_PDEXE
:C )/NOPR
:C )*DEL,_ZC
:C )*GET,_ZC,PDS,0,METH     ! Label for analysis method
:C )/GO
Inp_Noapply
Cmd_)*CSET,1,4
  Fld_0
    Prm_ [PDEXE]  Run Probabilistic Analysis
    Typ_LAB
  Fld_2
    Prm_ Slab     Solution Set Label
    Typ_CHAR,32,32
  Fld_3
    Typ_DEF_SER
  Fld_4
    Typ_DEF_0
  Fld_5
    Prm_ FOPT     Save Sample File Copy?
    Typ_Lis_RadioB
    LIS_No              ,NO
    LIS_Yes             ,YES
Cal_Fnc_PDEXE_SERRUN,5,ES,NO,1
Cal_Fnc_PDEXE_SERCPY,5,ES,YES,1
:E END
:! 
:N Fnc_PDEXE_SERCPY
:S    582,   223,   352
:T Cmd
:C )! Fnc_PDEXE_SERCPY
:D Run Probabilistic Analysis
:A    Run Serial
:H Hlp_C_PDEXE
:C )/NOPR
:C )*DEL,_ZC
:C )*GET,_ZC,PDS,0,METH     ! Label for analysis method
:C )/GO
Inp_Noapply
Cmd_)*CSET,1,5
  Fld_0
    Prm_ [PDEXE]  Run Probabilistic Analysis
    Typ_LAB
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_SER
  Fld_4
    Typ_DEF_0
  Fld_5
    Typ_DEF_COPY
  Fld_6
    Prm_ Fname    Copy Sample File to
    Typ_CHAR,32,32
Cmd_)!
  Fld_2
    Typ_DEF_*PAR(_ZC)
Cal_Fnc_PDEXE_MCS,2,ES,MCS,2
Cal_Fnc_PDEXE_RSM,2,ES,RSM,2
:E END
:! 
:N Fnc_PDEXE_SERRUN
:S    448,   223,   218
:T Cmd
:C )! Fnc_PDEXE_SERRUN
:D Run Probabilistic Analysis
:A    Run Serial
:H Hlp_C_PDEXE
:C )/NOPR
:C )*DEL,_ZC
:C )*GET,_ZC,PDS,0,METH     ! Label for analysis method
:C )/GO
Inp_P
Cmd_)*CSET,1,4
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_SER
  Fld_4
    Typ_DEF_0
  Fld_5
    Typ_DEF_'    '
Cmd_)!
  Fld_2
    Typ_DEF_*PAR(_ZC)
Cal_Fnc_PDEXE_MCS,2,ES,MCS,2
Cal_Fnc_PDEXE_RSM,2,ES,RSM,2
:E END
:! 
:N Fnc_PDEXE_WARN1
:S    356,    98,   251
:T Cmd
:C )! Fnc_PDEXE_WARN1
:D Warning
:H Hlp_C_PDEXE
Inp_Noapply
Cmd_)!
Fld_0
  Prm_
Fld_0
  Prm_                    - WARNING -
  Typ_LAB
Fld_0
  Prm_  The analysis file has not been specified.
  Typ_LAB
Fld_0
  Prm_  Specify an analysis file using [-Analysis File- / Assign...].
  Typ_LAB
Fld_0
  Prm_
:E END
:! 
:N Fnc_PDEXE_WARN2
:S    525,   116,   402
:T Cmd
:C )! Fnc_PDEXE_WARN2
:D Warning
:H Hlp_C_PDEXE
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_)!
Fld_0
  Prm_
Fld_0
  Prm_                    - WARNING -
  Typ_LAB
Fld_0
  Prm_  The probabilistic model is not properly defined.
  Typ_LAB
Fld_0
  Prm_  No random variables are defined yet. Define random
  Typ_LAB
Fld_0
  Prm_  variables using [-Prob Model-/   Random Varia ...]
  Typ_LAB
Fld_0
  Prm_
  Typ_LAB
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3  $)*DEL,_Z4
Cmd_)/GO
:E END
:! 
:N Fnc_PDEXE_WARN3
:S    553,   116,   430
:T Cmd
:C )! Fnc_PDEXE_WARN3
:D Warning
:H Hlp_C_PDEXE
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_)!
Fld_0
  Prm_
Fld_0
  Prm_                    - WARNING -
  Typ_LAB
Fld_0
  Prm_  The probabilistic model is not properly defined.
  Typ_LAB
Fld_0
  K_FL(key2)
  Prm_  No random output parameters defined yet. Define random
  Typ_LAB
Fld_0
  K_FL(key2)
  Prm_  output parameters using [-Prob Model-/   Random Output...]
  Typ_LAB
Fld_0
  Prm_
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3  $)*DEL,_Z4
Cmd_)/GO
:E END
:! 
:N Fnc_PDHIST
:S    959,   420,   532
:T Cmd
:C )! Fnc_PDHIST
:A    Histogram
:D Plot histogram of a probabilistic variable
:H Hlp_C_PDHIST
:C )/NOPR
:C )KEYW,KEY1,0
:C )KEYW,KEY2,0
:C )*GET,_Z1,PDS,0,NTRV       ! Total no. of random variables
:C )*IF,_Z1,GE,1,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*GET,_Z2,PDS,0,NTRP       ! Total no. of random output parameters
:C )*IF,_Z2,GE,1,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
Cmd_PDHIST
  Fld_0
    Typ_LAB
    Prm_ [PDHIST]  Plot Histogram
  Fld_2
    Prm_ Rlab      Select Results Set
    Typ_LIS
    LIS_*READ,RLMC        ! List of MCS related Result Sets
  Fld_3
    Prm_ Name      Prob Design Variable
    Typ_LIS
    K_LN(KEY1)
    LIS_*READ,RV
    K_LN(KEY2)
    LIS_*READ,RP
  Fld_4
    Prm_ NCL       No. of classes/points
    Typ_INT
  Fld_5
    Prm_ Type      Type of Histogram
    Typ_Lis_RadioB
    LIS_Relative     REL,REL
    LIS_Absolute     ABS,ABS
    LIS_Normalized  NORM,NORM
    Def_REL
:E END
:! 
:N Fnc_PDINQR_ENTRY
:S    807,   155,   645
:T Cmd
:C )! Fnc_PDINQR_ENTRY
:A    Inquire
:D Inquire about random variable
:H Hlp_C_PDINQR
:C )/NOPR
:C )/GO
Cmd_PDINQR
  Fld_0
    Typ_LAB
    Prm_ [PDINQR] Inquire about a Random Variable
  Fld_0
    Typ_LAB
    Prm_         ParR = Property of Random Variable
  Fld_2
    Typ_CHAR,32
    Prm_ ParR    Result scalar parameter
  Fld_3
    Prm_ Name    Random Variable
    Typ_LIS
    LIS_*READ,RV
  Fld_4
    Prm_ TYPE   Type of Property
    Typ_LIS_RadioB
    LIS_Mean Value      ,MEAN
    LIS_Stand Deviation ,STDV
    LIS_Prob Density(X) ,PDF
    LIS_Cum Distrib(X)  ,CDF
    LIS_Inverse CDF(P)  ,INV
  Fld_5
    Prm_ Val    X-value or Probability
    Typ_REAL
  Fld_0
    Typ_LAB
    Prm_        Note: 0.0 < Probability P < 1.0 !
Cmd_)/NOPR
Cmd_)/GO
:E END
:! 
:N Fnc_PDLHS_ALL
:S    986,   451,   528
:T Cmd
:C )! Fnc_PDLHS_ALL
:D Specify Options for Latin-Hypercube Sampling
:H Hlp_C_PDLHS
:C )/NOPR
:C )*GET,_Z4,CPAR,6         ! get parameter 6 defined with *CSET
:C )*IF,_z4,EQ,0,THEN
:C )KEYW,KEY1,0
:C )_ZC='CONT'
:C )*ELSEIF,_z4,EQ,-2,THEN
:C )KEYW,KEY1,0
:C )_ZC='TIME'
:C )*ELSEIF,_z4,EQ,-1,THEN
:C )KEYW,KEY1,0
:C )_ZC='INIT'
:C )*ELSEIF,_z4,EQ,1,THEN
:C )KEYW,KEY1,1
:C )_ZC='    '
:C )*endif
:C )/GO
K_LN(key1)
Inp_P
Cmd_PDLHS
  Fld_0
    K_FL(KEY1)
    Prm_ [PDLHS]   Define Seed Value for Latin-Hypercube Sampling
    Typ_LAB
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_*CPAR(3)
  Fld_5
    Typ_DEF_*CPAR(4)
  Fld_6
    Typ_DEF_'ALL '
  Fld_7
    Def_0.0
  Fld_8
    Def_0.0
  Fld_9
    Def_0
  Fld_10
    K_FL(key1)
    Typ_DEF_*PAR(_ZC)
  Fld_10
    K_FL(KEY1)
    Prm_ Seed > 0  Seed value
    Typ_INT
    Def_123457
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3
Cmd_)*DEL,_ZC
Cmd_)/GO
:E END
:! 
:N Fnc_PDLHS_AUTO
:S   1873,   642,  1224
:T Cmd
:C )! Fnc_PDLHS_AUTO
:A    Autostop Opt
:D Specify Autostop Parameters for Convergence
:H Hlp_C_PDLHS
:C )/NOPR
:C )*GET,_Z1,PDS,0,ASTP,2   ! AUTOSTOP Mean value acc.
:C )*GET,_Z2,PDS,0,ASTP,3   ! AUTOSTOP St.dev. value acc.
:C )*GET,_Z3,PDS,0,ASTP,4   ! AUTOSTOP Checking frequency
:C )*GET,_Z4,CPAR,6         ! get parameter 6 defined with *CSET
:C )*IF,_z4,EQ,0,THEN
:C )KEYW,KEY1,0
:C )_ZC='CONT'
:C )*ELSEIF,_z4,EQ,-2,THEN
:C )KEYW,KEY1,0
:C )_ZC='TIME'
:C )*ELSEIF,_z4,EQ,-1,THEN
:C )KEYW,KEY1,0
:C )_ZC='INIT'
:C )*ELSEIF,_z4,EQ,1,THEN
:C )KEYW,KEY1,1
:C )_ZC='    '
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDLHS
  Fld_0
    Prm_ [PDLHS]   Define AUTOSTOP Options for Latin-Hypercube Sampling
    Typ_LAB
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_*CPAR(3)
  Fld_5
    Typ_DEF_*CPAR(4)
  Fld_6
    Typ_DEF_'AUTO'
  Fld_7
    Prm_ ACCMEAN   Mean Value Accuracy
    Typ_REAL
    Def_*PAR(_Z1)
  Fld_8
    Prm_ ACCSTDEV  Standrd Dev. Accuracy
    Typ_REAL
    Def_*PAR(_Z2)
  Fld_9
    Prm_ CHECK     Conv Check Frequency
    Typ_INT
    Def_*PAR(_Z3)
  Fld_10
    K_FL(key1)
    Typ_DEF_*PAR(_ZC)
  Fld_10
    K_FL(KEY1)
    Prm_ Seed > 0  Seed value
    Typ_INT
    Def_123457
  Fld_0
    Prm_ Note: If AUTOSTOP is enabled the simulations will automatically
    Typ_LAB
  Fld_0
    Prm_       stop if the mean value and standard deviation of all
    Typ_LAB
  Fld_0
    Prm_       response parameters converge within the specified
    Typ_LAB
  Fld_0
    Prm_       accuracies. This check will be performed every other loop
    Typ_LAB
  Fld_0
    Prm_       as specified by the "CHECK" option. The accuracies 
    Typ_LAB
  Fld_0
    Prm_       "ACCMEAN" and "ACCSTDEV" must be greater than 0.0.
    Typ_LAB
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3
Cmd_)*DEL,_ZC
Cmd_)/GO
:E END
:! 
:N Fnc_PDLHS_ENTRY
:S   1304,   407,   890
:T Cmd
:C )! Fnc_PDLHS_ENTRY
:A    Method Optns
:D Options for Latin-Hypercube Sampling
:H Hlp_C_PDLHS
:C )/NOPR
:C )*DEL,_Z1
:C )*GET,_Z1,PDS,0,NSIM     ! No of simulations to be executed
:C )*IF,_Z1,EQ,0,THEN
:C )_Z1=30
:C )*ENDIF
:C )*DEL,_Z2
:C )*GET,_Z2,PDS,0,NREP     ! No of repetitions to be executed
:C )*GET,_Z3,PDS,0,ASTP,1   ! AUTOSTOP on/off?
:C )/GO
Inp_Noapply
Cmd_)*CSET,1,6
  Fld_0
    Prm_ [PDLHS]   Options for Latin Hypercube Sampling
    Typ_LAB
  Fld_2
    Prm_ NSIM > 0  Number of Simulations
    Typ_INT
    Def_*PAR(_Z1)
  Fld_3
    Prm_ NREP > 0  Number of Repetitions
    Typ_INT
    Def_*PAR(_Z2)
  Fld_4
    Prm_ ISopt     Interval Sampl Option
    Typ_Lis_RADIOB
    Lis_Random Sampling ,RAND
    Lis_Mean Value      ,MEAN
    Lis_Median Value    ,MEDI
    Def_0
  Fld_5
    Typ_DEF_'    '
  Fld_6
    Prm_ Astop     Autostop Option
    Typ_Lis_RADIOB
    Lis_Enable AUTOSTOP ,1
    Lis_Execute ALL Sims,0
    Def_*PAR(_Z3)
  Fld_7
    Prm_ Seed      Random Seed Option
    Typ_Lis_RADIOB
    Lis_Continue    CONT,0
    Lis_System Time TIME,-2
    Lis_Use 123457  INIT,-1
    Lis_Other ...       ,1
    Def_0
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2
Cmd_)*DEL,_ZC
Cmd_)/GO
Cal_Fnc_PDLHS_AUTO,6,EQ,1,1
Cal_Fnc_PDLHS_ALL,6,EQ,0,1
:E END
:! 
:N Fnc_PDMETH_ENTRY
:S    542,   239,   296
:T Cmd
:C )! Fnc_PDMETH_ENTRY
:A    Method/Tool
:D Define a Probabilistic Analysis Method
:H Hlp_C_PDMETH
:C )/NOPR
:C )*DEL,_ZC
:C )*GET,_ZC,PDS,0,METH       ! Label for analysis method
:C )/GO
Inp_Noapply
Cmd_)!
  Fld_0
    Prm_ [PDMETH] Select Probabilistic Analysis Method/Tool
    Typ_Lab
  Fld_2
    Prm_ Mname     Select Method/Tool
    Typ_Lis_RADIOB
    Lis_Monte Carlo Sims,MCS
    Lis_Response Surface,RSM
    Def_*PAR(_ZC)
Cal_Fnc_PDMETH_MCS,2,ES,MCS
Cal_Fnc_PDMETH_RSM,2,ES,RSM
:E END
:! 
:N Fnc_PDMETH_MCS
:S    786,   359,   420
:T Cmd
:C )! Fnc_PDMETH_MCS
:A Monte Carlo Sims
:D Monte Carlo Simulation
:H Hlp_C_PDMETH
:C )/NOPR
:C )*DEL,_ZC
:C )*GET,_ZC,PDS,0,METH     ! Label for analysis method
:C )*IF,_ZC,EQ,'MCS ',THEN
:C )*DEL,_ZC
:C )*GET,_ZC,PDS,0,SAMP     ! Sampling method (DIR,LHS for MCS)
:C )*ELSE
:C )_ZC='LHS '
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_PDMETH
  Fld_0
    Prm_ [PDMETH]  Settings for Monte Carlo Simulations
    Typ_LAB
  Fld_2
    Typ_DEF_MCS
  Fld_3
    Prm_ SampM    Sampling Method
    Typ_Lis_RADIOB
    Lis_Direct Sampling ,DIR
    Lis_Latin Hypercube ,LHS
    Lis_User defined    ,USER
    Def_*PAR(_ZC)
Cmd_)/NOPR
Cmd_)*DEL,_ZC
Cmd_)/GO
Cal_Fnc_PDDMCS_ENTRY,3,ES,DIR,1
Cal_Fnc_PDLHS_ENTRY,3,ES,LHS,1
Cal_Fnc_PDUSER_ENTRY,3,ES,USER,1
:E END
:! 
:N Fnc_PDMETH_RSM
:S   1779,   712,  1060
:T Cmd
:C )! Fnc_PDMETH_RSM
:A Response Surface
:D Parameters for Response Surface Analysis
:H Hlp_C_PDMETH
:C )/NOPR
:C )*DEL,_ZC
:C )*GET,_ZC,PDS,0,METH     ! Label for analysis method
:C )*IF,_ZC,EQ,'RSM ',THEN
:C )*DEL,_ZC
:C )*GET,_ZC,PDS,0,SAMP     ! Sampling method (CCD,BBM for RSM)
:C )*ELSE
:C )_ZC='CCD '
:C )*ENDIF
:C )*DEL,_Z1
:C )*GET,_Z1,PDS,0,NTRV     ! Total no. of random variables
:C )KEYW,KEY1,1
:C )KEYW,KEY2,1
:C )KEYW,KEY3,1
:C )KEYW,KEY4,1
:C )*IF,_Z1,LT,3,THEN
:C )KEYW,KEY1,0
:C )*endif
:C )*IF,_Z1,GT,12,THEN
:C )KEYW,KEY2,0
:C )*endif
:C )*IF,_Z1,LT,2,THEN
:C )KEYW,KEY3,0
:C )*endif
:C )*IF,_Z1,GT,20,THEN
:C )KEYW,KEY4,0
:C )*endif
:C )/GO
Inp_Noapply
Cmd_PDMETH
  Fld_0
    Prm_ [PDMETH]  Settings for Response Surface Analysis
    Typ_LAB
  Fld_2
    Typ_DEF_RSM
  Fld_3
    Prm_ SampM    Sampling Method
    Typ_Lis_RADIOB
    K_LN(KEY3&KEY4)
    Lis_Centrl Composite,CCD
    K_LN(KEY1&KEY2)
    Lis_Box Behnken Mtrx,BBM
    Lis_User defined    ,USER
    Def_*PAR(_ZC)
  Fld_0
    K_FL(key1)
    Prm_ NOTE: There are less than 3 random input variables.
    Typ_LAB
  Fld_0
    K_FL(key2)
    Prm_ NOTE: There are more than 12 random input variables.
    Typ_LAB
  Fld_0
    K_FL(key1|key2)
    Prm_       Hence, a Box-Behnken Matrix design is not possible.
    Typ_LAB
  Fld_0
    K_FL(key3)
    Prm_ NOTE: There are less than 2 random input variables.
    Typ_LAB
  Fld_0
    K_FL(key4)
    Prm_ NOTE: There are more than 20 random input variables.
    Typ_LAB
  Fld_0
    K_FL(key3|key4)
    Prm_       Hence, a Central Composite design is not possible.
    Typ_LAB
Cmd_)/NOPR
Cmd_)*DEL,_ZC
Cmd_)/GO
Cal_Fnc_PDCCD_ENTRY,3,ES,CCD,1
Cal_Fnc_PDBBM_ENTRY,3,ES,BBM,1
Cal_Fnc_PDUSER_ENTRY,3,ES,USER,1
:E END
:! 
:N Fnc_PDMETH_WIZ
:S    874,   290,   577
:T Cmd
:C )! Fnc_PDMETH_WIZ
:D Probabilistic Methods Wizard
:A Method Wizard
:C )/NOPR
:C )*DEL,_Z1
:C )KEYW,KEY1,0
:C )*GET,_Z1,PDS,0,NTRV       ! Total no. of random variables
:C )*IF,_Z1,GT,0,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*DEL,_Z1
:C )/GO
! --- Call a Tcl/Tk window if random input variables are defined ---
K_LN(KEY1)
Inp_P
K_LN(KEY1)
Cmd_)~eui,'euidl::pdsMethodWizard::create'
! --- give warning if NO random input variables defined ---
K_LN(key1)
Inp_Noapply
Cmd_)!
  K_CM(key1)
  Fld_0
    Prm_
  Fld_0
    Prm_  There are no random input variables defined. For the 
    Typ_LAB
  Fld_0
    Prm_  Probabilistic Design methods wizard to give meaningful
    Typ_LAB
  Fld_0
    Prm_  results you should have all necessary random input 
    Typ_LAB
  Fld_0
    Prm_  variables defined.
    Typ_LAB
  Fld_0
    Prm_
:E END
:! 
:N Fnc_PDOT
:S    967,   172,   788
:T Command
:C )! Fnc_PDOT
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Dot Product 
:D Dot Product of Path Items
:H Hlp_C_PDOT
:K #(POST1+RESULTS)
Cmd_PDOT
 Fld_0
  Typ_Lab
  Prm_       LabR = {LabX1,LabY1,LabZ1} o {LabX2,LabY2,LabZ2} 
 Fld_0
  Typ_Lab
  Prm_[PDOT]
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_0
  Typ_Lab
  Prm_       Path items in 1st vector
 Fld_3
  Prm_LabX1             X-component
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_4
  Prm_LabY1             Y-component
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_5
  Prm_LabZ1             Z-component
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
Fld_0
Prm_
 Fld_0
  Typ_Lab
  Prm_       Path items in 2nd vector
 Fld_6
  Prm_LabX2             X-component
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_7
  Prm_LabY2             Y-component
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
 Fld_8
  Prm_LabZ2             Z-component
  Typ_LIS_OPTIONB
  LIS_*READ,PATH
:E END
:! 
:N Fnc_PDPINV
:S   1102,   434,   661
:T Cmd
:C )! Fnc_PDPINV
:A    Inverse Prob
:D Print Inverse Probabilities from Probabilitic Results
:H Hlp_C_PDPINV
:C )/NOPR
:C )KEYW,KEY1,0
:C )KEYW,KEY2,0
:C )*GET,_Z1,PDS,0,NTRV       ! Total no. of random variables
:C )*IF,_Z1,GE,1,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*GET,_Z2,PDS,0,NTRP       ! Total no. of random output parameters
:C )*IF,_Z2,GE,1,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
Cmd_PDPINV
  Fld_0
    Typ_LAB
    Prm_ [PDPINV]  Print Probabilities
  Fld_2
    Prm_ Rlab      Select Results Set
    Typ_LIS
    LIS_*READ,RLMC        ! List of MCS related Result Sets
  Fld_3
    Prm_ Name      Prob Design Variable
    Typ_LIS
    K_LN(KEY1)
    LIS_*READ,RV
    K_LN(KEY2)
    LIS_*READ,RP
  Fld_4
    Prm_ PROB      Target Probability
    Typ_REAL
  Fld_5
    Typ_DEF_'    '
  Fld_6
    Prm_ CONF      Confidence Level
    Typ_REAL
    Def_0.95
  Fld_0
    Typ_LAB
    Prm_           NOTE: 0.0 < CONF < 1.0 ! Default is 0.95.
  Fld_0
    Typ_LAB
    Prm_                 Confidence bounds are suppressed for CONF<0.5.
Cal_Fnc_PDPINV_LIST
:E END
:! 
:N Fnc_PDPLOT_ENTRY
:S    599,   145,   447
:T Cmd
:C )! Fnc_PDPLOT_ENTRY
:A    Plot
:D Plot a random variable
:H Hlp_C_PDPLOT
:C )/NOPR
:C )/GO
Cmd_PDPLOT
  Fld_0
    Typ_LAB
    Prm_ [PDPLOT]  Plot a Random Variable
  Fld_2
    Prm_ Name      Random Variable
    Typ_LIS
    LIS_*READ,RV
  Fld_3
    Prm_ PLOW      Lower probability
    Typ_REAL
  Fld_4
    Prm_ PUP       Upper probability
    Typ_REAL
  Fld_0
    Typ_LAB
    Prm_           NOTE: The lower and upper probabilities are
  Fld_0
    Typ_LAB
    Prm_                 used to determine the plotting range.
Cmd_)/NOPR
Cmd_)/GO
:E END
:! 
:N Fnc_PDPROB
:S   1205,   427,   771
:T Cmd
:C )! Fnc_PDPROB
:A    Probabilities
:D Print Probabilities from Probabilitic Results
:H Hlp_C_PDPROB
:C )/NOPR
:C )KEYW,KEY1,0
:C )KEYW,KEY2,0
:C )*GET,_Z1,PDS,0,NTRV       ! Total no. of random variables
:C )*IF,_Z1,GE,1,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*GET,_Z2,PDS,0,NTRP       ! Total no. of random output parameters
:C )*IF,_Z2,GE,1,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
Cmd_PDPROB
  Fld_0
    Typ_LAB
    Prm_ [PDPROB]  Print Probabilities
  Fld_2
    Prm_ Rlab      Select Results Set
    Typ_LIS
    LIS_*READ,RLMC        ! List of MCS related Result Sets
  Fld_3
    Prm_ Name      Prob Design Variable
    Typ_LIS
    K_LN(KEY1)
    LIS_*READ,RV
    K_LN(KEY2)
    LIS_*READ,RP
  Fld_4
    Prm_ Relation  Relation Label
    Typ_LIS_RadioB
    LIS_Less than     LT,LT
    LIS_Greater than  GT,GT
  Fld_5
    Prm_ LIMIT     Limit Value
    Typ_REAL
  Fld_6
    Typ_DEF_'    '
  Fld_7
    Prm_ CONF      Confidence Level
    Typ_REAL
    Def_0.95
  Fld_0
    Typ_LAB
    Prm_           NOTE: 0.0 < CONF < 1.0 ! Default is 0.95.
  Fld_0
    Typ_LAB
    Prm_                 Confidence bounds are suppressed for CONF<0.5.
Cal_Fnc_PDPROB_LIST
:E END
:! 
:N Fnc_PDREP_OPT
:S   2068,   151,  1910
:T Cmd
:C )! Fnc_PDREP_OPT
:A Report Options
:D Options for the HTML Report
:H Hlp_C_PDROPT
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_PDROPT
  Fld_0
    Prm_[PDROPT]  Options for report as HTML file
    Typ_LAB
  Fld_0
    Typ_LAB
  Fld_2
    Prm_ RVAR  Random Variable Definitn
    Typ_LIS_OptionB
    LIS_Tables & figs   ,0
    LIS_Tables only     ,1
    LIS_Figures only    ,2
    LIS_None            ,3
    Def_0
  Fld_3
    Prm_ CORR  Correlation Definitions
    Typ_LIS_OptionB
    LIS_Print out       ,0
    LIS_Suppress print  ,1
    Def_0
  Fld_4
    Prm_ STAT  Statistics for Parameters
    Typ_LIS_OptionB
    LIS_Output only     ,0
    LIS_Input  only     ,1
    LIS_Input & Output  ,2
    LIS_None            ,3
    Def_0
  Fld_5
    Prm_ SHIS  Sample History f Output 
    Typ_LIS_OptionB
    LIS_None            ,0
    LIS_MEAN/STDEV only ,1
    LIS_MEAN/STDEV/Vals ,2
    LIS_ALL types       ,3
    Def_0
  Fld_6
    Prm_ HIST  Histograms for Parameters
    Typ_LIS_OptionB
    LIS_Output only     ,0
    LIS_Input  only     ,1
    LIS_Input & Output  ,2
    LIS_None            ,3
    Def_0
  Fld_7
    Prm_ CDF   Cum. Distr. f Parameters
    Typ_LIS_OptionB
    LIS_Output only     ,0
    LIS_Input  only     ,1
    LIS_Input & Output  ,2
    LIS_None            ,3
    Def_0
  Fld_8
    Prm_ SENS  Sensitivity Plots for ...
    Typ_LIS_OptionB
    LIS_Spearman Ranks  ,0
    LIS_Linear Pearson  ,1
    LIS_Spearman&Linear ,2
    LIS_None            ,3
    Def_0
  Fld_9
    Prm_ CMAT  Correl. Matrix between...
    Typ_LIS_OptionB
    LIS_Output/Output OO,0
    LIS_Input/Output  IO,1
    LIS_Input/Input   II,2
    LIS_Out/Out & In/Out,3
    LIS_Out/Out & In/In ,4
    LIS_In/Out  & In/In ,5
    LIS_ALL   (II/IO/OO),6
    LIS_None            ,7
    Def_0
  Fld_10
    Prm_ CONF  Confidence Level
    Typ_REAL
    Def_0.95
  Fld_0
    Typ_LAB
    Prm_       NOTE: 0.0 < CONF < 1.0 ! Default is 0.95.
  Fld_0
    Typ_LAB
    Prm_             Confidence bounds are suppressed for CONF<0.5.
Cmd_)/NOPR
Cmd_)/GO
:E END
:! 
:N Fnc_PDREP_WRT
:S    511,   174,   330
:T Cmd
:C )! Fnc_PDREP_WRT
:A Generate Report
:D Write a HTML Report about Probabilistic Analyses
:H Hlp_C_PDWRITE
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_PDWRITE
  Fld_0
    Prm_[PDWRITE]  Write a report as HTML file
    Typ_LAB
  Fld_2
    Prm_ FILE  Report file name (max 32)
    Typ_CHAR,32,32
    Def_Report
  Fld_3
    Prm_ FNAM  Your first name  (max 32)
    Typ_CHAR,32,32
  Fld_4
    Prm_ LNAM  Your last name   (max 32)
    Typ_CHAR,32,32
Cmd_)/NOPR
Cmd_)/GO
:E END
:! 
:N Fnc_PDRESU
:S   1147,   660,   480
:T Cmd
:C )! Fnc_PDRESU
:A    Resume
:D Resume Probabilistic Data
:H Hlp_C_PDRESU
:C )/NOPR
:C )*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3  $)*DEL,_Z4
:C )*DEL,_Z5  $)*DEL,_Z6  $)*DEL,_Z7  $)*DEL,_Z8
:C )*DEL,_Z9
:C )*GET,_Z9,PDS,,DATX
:C )*GET,_Z1,PDS,,DATD,,START,1
:C )*GET,_Z2,PDS,,DATD,,START,9
:C )*GET,_Z3,PDS,,DATD,,START,17
:C )*GET,_Z4,PDS,,DATD,,START,25
:C )*GET,_Z5,PDS,,DATD,,START,33
:C )*GET,_Z6,PDS,,DATD,,START,41
:C )*GET,_Z7,PDS,,DATD,,START,49
:C )*GET,_Z8,PDS,,DATD,,START,57
:C )*IF,_Z1,EQ,'        ',THEN
:C )*SET,_ZU,'*.'
:C )*SET,_ZP,'*.'
:C )*ELSE
:C )*SET,_ZU,'/*.'
:C )*SET,_ZP,'\*.'
:C )*ENDIF
:C )/GO
Fmt_H
Inp_Noapply
Cmd_PDRESU
  Fld_0
    Typ_LAB
    Prm_ [PDRESU]  Resume Probabilistic Data from File
  Fld_2
    Prm_  File to resume
    Typ_FILE
K_LN(intelnt&alphant)
  Def_*STR(%_Z1%%_Z2%%_Z3%%_Z4%%_Z5%%_Z6%%_Z7%%_Z8%%_ZU%%_Z9%)
K_LN(INTELNT|ALPHANT)
  Def_*STR(%_Z1%%_Z2%%_Z3%%_Z4%%_Z5%%_Z6%%_Z7%%_Z8%%_ZP%%_Z9%)
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3  $)*DEL,_Z4
Cmd_)*DEL,_Z5  $)*DEL,_Z6  $)*DEL,_Z7  $)*DEL,_Z8
Cmd_)*DEL,_Z9
Cmd_)*DEL,_ZU  $)*DEL,_ZP
Cmd_)/GO
:E END
:! 
:N Fnc_PDSAVE
:S   1147,   656,   484
:T Cmd
:C )! Fnc_PDSAVE
:A    Save
:D Save Probabilistic Data
:H Hlp_C_PDSAVE
:C )/NOPR
:C )*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3  $)*DEL,_Z4
:C )*DEL,_Z5  $)*DEL,_Z6  $)*DEL,_Z7  $)*DEL,_Z8
:C )*DEL,_Z9
:C )*GET,_Z9,PDS,,DATX
:C )*GET,_Z1,PDS,,DATD,,START,1
:C )*GET,_Z2,PDS,,DATD,,START,9
:C )*GET,_Z3,PDS,,DATD,,START,17
:C )*GET,_Z4,PDS,,DATD,,START,25
:C )*GET,_Z5,PDS,,DATD,,START,33
:C )*GET,_Z6,PDS,,DATD,,START,41
:C )*GET,_Z7,PDS,,DATD,,START,49
:C )*GET,_Z8,PDS,,DATD,,START,57
:C )*IF,_Z1,EQ,'        ',THEN
:C )*SET,_ZU,'*.'
:C )*SET,_ZP,'*.'
:C )*ELSE
:C )*SET,_ZU,'/*.'
:C )*SET,_ZP,'\*.'
:C )*ENDIF
:C )/GO
Fmt_H
Inp_Noapply
Cmd_PDSAVE
  Fld_0
    Typ_LAB
    Prm_ [PDSAVE]  Save Probabilistic Data to File
  Fld_2
    Prm_  File to save to
    Typ_FILE_INLINE
K_LN(intelnt&alphant)
  Def_*STR(%_Z1%%_Z2%%_Z3%%_Z4%%_Z5%%_Z6%%_Z7%%_Z8%%_ZU%%_Z9%)
K_LN(INTELNT|ALPHANT)
  Def_*STR(%_Z1%%_Z2%%_Z3%%_Z4%%_Z5%%_Z6%%_Z7%%_Z8%%_ZP%%_Z9%)
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3  $)*DEL,_Z4
Cmd_)*DEL,_Z5  $)*DEL,_Z6  $)*DEL,_Z7  $)*DEL,_Z8
Cmd_)*DEL,_Z9
Cmd_)*DEL,_ZU  $)*DEL,_ZP
Cmd_)/GO
:E END
:! 
:N Fnc_PDSCAT
:S    979,   152,   820
:T Cmd
:C )! Fnc_PDSCAT
:A    Scatter Plot
:D Scatter Plot of Random Parameters
:H Hlp_C_PDSCAT
:C )/NOPR
:C )/GO
Cmd_PDSCAT
  Fld_0
    Typ_LAB
    Prm_ [PDSCAT]  Scatter Plot of Random Parameters
  Fld_0
    Typ_LAB
    Prm_           (for Monte Carlo Simulation results only!)
  Fld_2
    Prm_ Rlab      Select Results Set
    Typ_LIS
    LIS_*READ,RLAB        ! List of all Result Sets
  Fld_3
    Prm_ Name1     Select Parameter
    Typ_LIS_OptionB
    LIS_*READ,RV
    LIS_*READ,RP
  Fld_4
    Prm_ Name2     Select Parameter
    Typ_LIS_OptionB
    LIS_*READ,RV
    LIS_*READ,RP
  Fld_5
    Prm_ Type      Type of Trendline
    Typ_LIS_RadioB
    LIS_Polynomial      ,POLY
    LIS_- None -        ,NONE
    Def_POLY
  Fld_6
    Prm_ ORDER    Order of Polynom
    Typ_INT
    Def_1
  Fld_7
    Prm_ NMAX     Max. No. Sample Points
    Typ_INT
  Fld_0
    Typ_LAB
    Prm_          (ORDER is only used for polynomial trendline.)
:E END
:! 
:N Fnc_PDSENS
:S    971,   316,   648
:T Cmd
:C )! Fnc_PDSENS
:A    Sensitivities
:D Sensitivity of a Response Parameter
:H Hlp_C_PDSENS
:C )/NOPR
:C )*GET,_Z1,PDS,0,NTRP       ! Total no. of random output parameters
:C )*IF,_Z1,GE,1,THEN
:C )KEYW,KEY1,1
:C )*ELSEIF,_Z1,EQ,0,THEN
:C )KEYW,KEY1,0
:C )*ENDIF
:C )/GO
Cmd_PDSENS
  Fld_0
    Typ_LAB
    Prm_ [PDSENS]  Plot Sensitivities of Response Parameter
  Fld_2
    Prm_ Rlab      Select Results Set
    Typ_LIS
    LIS_*READ,RLMC        ! List of MCS related Result Sets
  Fld_3
    Prm_ Name      Select Response Param
    Typ_LIS
    LIS_*READ,RP
  Fld_4
    Prm_ Chart     Type of Chart
    Typ_LIS_OptionB
    LIS_Bar chart (abs) ,BAR
    LIS_Pie chart (rel) ,PIE
    LIS_Both BAR and PIE,BOTH
    Def_BOTH
  Fld_5
    Prm_ Type      Type of Correlation
    Typ_LIS_OptionB
    LIS_Spearman Rank   ,RANK
    LIS_Pearson Linear  ,LIN
  Fld_6
    Prm_ Slevel    Significance Level
    Typ_REAL
    Def_0.025
:E END
:! 
:N Fnc_PDSHIS
:S   1262,   407,   848
:T Cmd
:C )! Fnc_PDSHIS
:A    Sampl History
:D Plot the Sampling History
:H Hlp_C_PDSHIS
:C )/NOPR
:C )KEYW,KEY1,0
:C )KEYW,KEY2,0
:C )*GET,_Z1,PDS,0,NTRV       ! Total no. of random variables
:C )*IF,_Z1,GE,1,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*GET,_Z2,PDS,0,NTRP       ! Total no. of random output parameters
:C )*IF,_Z2,GE,1,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
Cmd_PDSHIS
  Fld_0
    Typ_LAB
    Prm_ [PDSHIS]  Plot Simulation Values
  Fld_2
    Prm_ Rlab      Select Results Set
    Typ_LIS
    LIS_*READ,RLAB        ! List of Result Sets
  Fld_3
    Prm_ Name      Prob Design Variable
    Typ_LIS
    K_LN(KEY1)
    LIS_*READ,RV
    K_LN(KEY2)
    LIS_*READ,RP
  Fld_4
    Prm_ TYPE      Select Plot Type
    Typ_LIS_RadioB
    LIS_Samples         ,SAMP
    LIS_Mean values     ,MEAN
    LIS_Standard deviatn,STDV
    LIS_Minimum values  ,MIN
    LIS_Maximum values  ,MAX
  Fld_5
    Prm_ CONF      Confidence Level
    Typ_REAL
    Def_0.95
  Fld_0
    Typ_LAB
    Prm_           NOTE: 0.0 < CONF < 1.0 ! Default is 0.95.
  Fld_0
    Typ_LAB
    Prm_                 Confidence bounds are suppressed for CONF<0.5.
  Fld_0
    Typ_LAB
    Prm_                 Confidence bounds are not shown for Type=SAMP
:E END
:! 
:N Fnc_PDUSER_ENTRY
:S    372,   190,   175
:T Cmd
:C )! Fnc_PDUSER_ENTRY
:A    User File
:D User Provided File Containing Sampling Data
:H Hlp_C_PDUSER
:C )/NOPR
:C )*SET,_Z1,'*.*'
:C )/GO
Fmt_H
Inp_Noapply
Cmd_PDUSER
  Fld_0
    Typ_LAB
    Prm_ [PDUSER]  User Provided File with Sampling Data
  Fld_2
    Prm_  File with samples
    Typ_FILE
    Def_*STR(%_Z1%)
:E END
:! 
:N Fnc_PDVAR_ADDRP
:S    402,   161,   234
:T Cmd
:C )! Fnc_PDVAR_ADDRP
:A    Random Output
:D Define a Random Output Parameter
:H Hlp_C_PDVAR
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_PDVAR
  Fld_0
    Typ_LAB
    Prm_ [PDVAR]  Define a Random Output Parameter
  Fld_2
    Prm_ Name     Select Parameter
    Typ_LIS
    LIS_*READ,PARP
  Fld_3
    Typ_DEF_RESP
Cmd_)/NOPR
Cmd_)PDVAR,,RESP,STAT
Cmd_)/GO
:E END
:! 
:N Fnc_PDVAR_ADDRV
:S    984,   148,   829
:T Cmd
:C )! Fnc_PDVAR_ADDRV
:D Define a Random Variable
:H Hlp_C_PDVAR
:C )/NOPR
:C )*SET,_Z1,0
:C )/GO
Inp_Noapply
Cmd_)*CSET,1,2
  Fld_0
    Typ_LAB
    Prm_ [PDVAR] Define a Random Variable
  Fld_2
    Prm_ Name   Select a Parameter
    Typ_LIS
    LIS_*READ,PARP
  Fld_3
    Prm_ TYPE   Distribution Type
    Typ_LIS
    LIS_Gauss       GAUS,GAUS
    LIS_Trunc Gauss TGAU,TGAU
    LIS_Lognormal 1 LOG1,LOG1
    LIS_Lognormal 2 LOG2,LOG2
    LIS_Triangular  TRIA,TRIA
    LIS_Uniform     UNIF,UNIF
    LIS_Exponential EXPO,EXPO
    LIS_Beta        BETA,BETA
    LIS_Gamma       GAMA,GAMA
    LIS_Weibull     WEIB,WEIB
!
Cal_Fnc_PDDIS_GAUS,3,ES,GAUS,1
Cal_Fnc_PDDIS_TGAU,3,ES,TGAU,1
Cal_Fnc_PDDIS_LOG1,3,ES,LOG1,1
Cal_Fnc_PDDIS_LOG2,3,ES,LOG2,1
Cal_Fnc_PDDIS_TRIA,3,ES,TRIA,1
Cal_Fnc_PDDIS_UNIF,3,ES,UNIF,1
Cal_Fnc_PDDIS_EXPO,3,ES,EXPO,1
Cal_Fnc_PDDIS_BETA,3,ES,BETA,1
Cal_Fnc_PDDIS_GAMA,3,ES,GAMA,1
Cal_Fnc_PDDIS_WEIB,3,ES,WEIB,1
:E END
:! 
:N Fnc_PDVAR_EDITRV
:S   1561,   635,   919
:T Cmd
:C )! Fnc_PDVAR_EDITRV
:D Modify a Random Variable
:H Hlp_C_PDVAR
:C )/NOPR
:C )!
:C )! In "_Z1" stored the no. of the 
:C )! probabilistic design variable is stored
:C )!
:C )*DEL,_ZC1
:C )*DEL,_ZC2
:C )*DEL,_ZC3
:C )*DEL,_ZC4
:C )*DEL,_ZC5
:C )*DEL,_ZC
:C )*GET,_Z2,PDS,,VNAM,_Z1,STAR,1  ! Name of random variables 
:C )*GET,_Z3,PDS,,VNAM,_Z1,STAR,9  ! Name of random variables 
:C )*GET,_Z4,PDS,,VNAM,_Z1,STAR,17 ! Name of random variables 
:C )*GET,_Z5,PDS,,VNAM,_Z1,STAR,25 ! Name of random variables 
:C )*GET,_ZC,PDS,,VDIS,_Z1   ! Distribution type of random variables
:C )/GO
Inp_Noapply
Cmd_)*CSET,1,2
  Fld_0
    Typ_LAB
    Prm_ [PDVAR] Edit distribution type and/or parameters
  Fld_0
    Typ_LAB
    Prm_         for random variable %_Z2%%_Z3%%_Z4%%_Z5%
  Fld_2
    Typ_DEF_*STR(%_Z2%%_Z3%%_Z4%%_Z5%)
  Fld_3
    Prm_ TYPE    New Distribution Type
    Typ_LIS
    LIS_Gauss       GAUS,GAUS
    LIS_Trunc Gauss TGAU,TGAU
    LIS_Lognormal 1 LOG1,LOG1
    LIS_Lognormal 2 LOG2,LOG2
    LIS_Triangular  TRIA,TRIA
    LIS_Uniform     UNIF,UNIF
    LIS_Exponential EXPO,EXPO
    LIS_Beta        BETA,BETA
    LIS_Gamma       GAMA,GAMA
    LIS_Weibull     WEIB,WEIB
    DEF_*PAR(_ZC)
!
Cal_Fnc_PDDIS_GAUS,3,ES,GAUS,1
Cal_Fnc_PDDIS_TGAU,3,ES,TGAU,1
Cal_Fnc_PDDIS_LOG1,3,ES,LOG1,1
Cal_Fnc_PDDIS_LOG2,3,ES,LOG2,1
Cal_Fnc_PDDIS_TRIA,3,ES,TRIA,1
Cal_Fnc_PDDIS_UNIF,3,ES,UNIF,1
Cal_Fnc_PDDIS_EXPO,3,ES,EXPO,1
Cal_Fnc_PDDIS_BETA,3,ES,BETA,1
Cal_Fnc_PDDIS_GAMA,3,ES,GAMA,1
Cal_Fnc_PDDIS_WEIB,3,ES,WEIB,1
:E END
:! 
:N Fnc_PDVAR_RP
:S    241,   160,    74
:T Cmd
:C )! Fnc_PDVAR_RP
:A    Random Output
:D Define an existing parameter as random output parameter
:H Hlp_C_PDVAR
Inp_P
Cmd_)/NOPR
Cmd_)PDVAR,,RESP,STAT
Cmd_)/GO
!Cust_Cal_Fnc_PDVAR_ADDRP
:E END
:! 
:N Fnc_PDVAR_RV
:S    263,   157,    99
:T Cmd
:C )! Fnc_PDVAR_RV
:A    Random Input
:D Define an existing parameter as random input variable
:H Hlp_C_PDVAR
Inp_P
Cmd_)/NOPR
Cmd_)PDVAR,,RV,STAT
Cmd_)/GO
!Cust_Cal_Fnc_PDVAR_ADDRV
!Cust_Cal_Fnc_PDVAR_EDITRV
:E END
:! 
:N Fnc_PD_AnFile
:S   2033,   108,  1918
:T Cmd
:C )! Fnc_PD_AnFile
:A    Create
:D Create an Analysis File
Inp_Noapply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_The analysis file is an ANSYS input file that contains a
 Fld_0
  Typ_Lab
  Prm_parametrically defined model and represents a complete analysis
 Fld_0
  Typ_Lab
  Prm_sequence (preprocessing, solution and postprocessing). During
 Fld_0
  Typ_Lab
  Prm_execution of a probabilistic analysis the ANSYS PDS will loop 
 Fld_0
  Typ_Lab
  Prm_through the analysis file with varying values for the random
 Fld_0
  Typ_Lab
  Prm_input variables.
 Fld_0
  Prm_
 Fld_0
  Typ_Lab
  Prm_To create the analysis file, use one of these three methods:
 Fld_0
  Prm_
 Fld_0
  Typ_Lab
  Prm_(a)  If the analysis is currently in the ANSYS database, go to the
 Fld_0
  Typ_Lab
  Prm_     ANSYS Utility menu and pick [File > Write DB Log File...].
 Fld_0
  Typ_Lab
  Prm_     This writes commands from the database log to the specified 
 Fld_0
  Typ_Lab
  Prm_     file. (Some editing of this file might be necessary to make
 Fld_0
  Typ_Lab
  Prm_     it suitable for probabilistic analysis looping.)
 Fld_0
  Prm_
 Fld_0
  Typ_Lab
  Prm_(b)  To use the session log file as the analysis file, go to the
 Fld_0
  Typ_Lab
  Prm_     ANSYS Utility Menu and pick [List > Files > Log File].  Then
 Fld_0
  Typ_Lab
  Prm_     in the "Log File" lister window, pick [File > Save as...] and
 Fld_0
  Typ_Lab
  Prm_     specify the desired file name. This creates a copy of the
 Fld_0
  Typ_Lab
  Prm_     session log file. (Some editing of this file might be necessary
 Fld_0
  Typ_Lab
  Prm_     to make it suitable for probabilistic analysis looping.)
 Fld_0
  Prm_
 Fld_0
  Typ_Lab
  Prm_(c)  Use your system editor and build an input file (including
 Fld_0
  Typ_Lab
  Prm_     a parametrically defined model) as you would a batch file.
 Fld_0
  Prm_
 Fld_0
  Typ_Lab
  Prm_After creating the analysis file, use
 Fld_0
  Typ_Lab
  Prm_[-Analysis File- / Assign...] to specify the analysis file name.
:E END
:! 
:N Fnc_PD_NOPRM
:S    719,    89,   623
:T Cmd
:C )! Fnc_PD_NOPRM
:D NOTE
:H Hlp_C_PDANL
Inp_Noapply
Cmd_)!
Fld_0
Prm_
Fld_0
Prm_                           - NOTE -
Typ_LAB
Fld_0
Prm_  There are no active scalar parameters that can be used as
Typ_LAB
Fld_0
Prm_  random variables.  These parameters can be established
Typ_LAB
Fld_0
Prm_  by any of the following operations:
Typ_LAB
Fld_0
Prm_
Fld_0
Prm_  1.  Resume a .db file.          [Utility Menu > File]
Typ_LAB
Fld_0
Prm_  2.  Restore saved parameters.   [Utility Menu > Parameters]
Typ_LAB
Fld_0
Prm_  3.  Define analysis parameters. [Utility Menu > Parameters]
Typ_LAB
Fld_0
Prm_  4.  Read in analysis file.      [Utility Menu > File]
Typ_LAB
Fld_0
Prm_
:E END
:! 
:N Fnc_PD_STATUS
:S    145,   103,    35
:T Cmd_N
:C )! Fnc_PD_STATUS
:A    Status
:C )/NOPR
:C )! /GO
Inp_P
Cmd_)/NOPR
Cmd_STAT
Cmd_)/GO
:E END
:! 
:N Fnc_PERBC2D
:S    440,   253,   180
:T Command
:C )! Fnc_PERBC2D
:A    Periodic BCs
:D Calculate Periodic BCs for 2-D Magnetic Field Analysis
:K (PR_ELMAG*pr_set)
:K ((PREP7)+((VECTORP+ELEM2D+edgeflx+edgeelc)*NOFILTER))
:P (ELECMAG)
:H Hlp_C_PERBC2D
Inp_NoApply
Cmd_)*set,_z1
 Fld_2
  Prm_PLNOPT   Symmetry plane option
  Typ_LIS_OptionB
  LIS_Circumferential ,0
  LIS_Parallel to Y   ,1
  LIS_Parallel to X   ,2
Cal_Fnc_PERBC2DI
:E End
:! 
:N Fnc_PERBC2DI
:S    179,    51,   121
:T Command
Inp_P
Cmd_)!
 Fld_2
  Typ_def_*Par(_z1)
  Cal_Fnc_PERBC2D_0,2,eq,0
  Cal_Fnc_PERBC2D_1,2,eq,1
  Cal_Fnc_PERBC2D_2,2,eq,2
:E End
:! 
:N Fnc_PERBC2D_0
:S    874,   166,   700
:T Command
:C )! Fnc_PERBC2D_0
:A    Periodic BCs
:D Calculate Periodic BCs for 2-D Magnetic Field Analysis
:H Hlp_C_PERBC2D
Cmd_PERBC2D
 Fld_0
  Typ_Lab
  Prm_[PERBC2D]  Calc Periodic BCs for 2-D Magnetic Field Analysis
 Fld_2
  Prm_LOC1    1st node pair angle
  Typ_REAL
 Fld_3
  Prm_LOC2    2nd node pair angle
  Typ_REAL
 Fld_4
  Prm_LOCTOL  Angular tolerance (deg)
  Typ_REAL
  Def_0.001
 Fld_0
  Typ_Sep
 Fld_5
  Prm_R1      Radius of 1st node
  Typ_REAL
 Fld_6
  Prm_R2      Radius of last node
  Typ_REAL
 Fld_7
  Prm_TOLR    Radial tolerance
  Typ_REAL
  Def_0.00001
 Fld_0
  Typ_Sep
 Fld_8
  Prm_OPT   Periodic option
  Typ_LIS_OptionB
  LIS_Odd symmetry    ,0
  LIS_Even symmetry   ,1
 Fld_9
 Typ_def_*Par(_z1)
 Fld_0
 Typ_Sep
 Fld_0
  Prm_NOTE: Constraints are not applied at min + max radial locations
  Typ_Lab
:E End 
:! 
:N Fnc_PERBC2D_1
:S    882,   166,   709
:T Command
:C )! Fnc_PERBC2D_1
:A    Periodic BCs
:D Calculate Periodic BCs for 2-D Magnetic Field Analysis
:H Hlp_C_PERBC2D
Cmd_PERBC2D
 Fld_0
  Typ_Lab
  Prm_[PERBC2D]  Calc Periodic BCs for 2-D Magnetic Field Analysis
 Fld_2
  Prm_LOC1    1st node pair X coord.
  Typ_REAL
 Fld_3
  Prm_LOC2    2nd node pair X coord.
  Typ_REAL
 Fld_4
  Prm_LOCTOL  Tolerance on X coord.
  Typ_REAL
  Def_0.00001
 Fld_0
  Typ_Sep
 Fld_5
  Prm_R1      Minimum Y coordinate
  Typ_REAL
 Fld_6
  Prm_R2      Maximum Y coordinate
  Typ_REAL
 Fld_7
  Prm_TOLR    Tolerance on Y coord.
  Typ_REAL
  Def_0.00001
 Fld_0
  Typ_Sep
 Fld_8
  Prm_OPT   Periodic option
  Typ_LIS_OptionB
  LIS_Odd symmetry    ,0
  LIS_Even symmetry   ,1
 Fld_9
 Typ_def_*Par(_z1)
 Fld_0
 Typ_Sep
 Fld_0
  Prm_NOTE: Constraints are not applied at Y min + max locations
  Typ_Lab
:E End
:! 
:N Fnc_PERBC2D_2
:S    882,   166,   709
:T Command
:C )! Fnc_PERBC2D_2
:A    Periodic BCs
:D Calculate Periodic BCs for 2-D Magnetic Field Analysis
:H Hlp_C_PERBC2D
Cmd_PERBC2D
 Fld_0
  Typ_Lab
  Prm_[PERBC2D]  Calc Periodic BCs for 2-D Magnetic Field Analysis
 Fld_2
  Prm_LOC1    1st node pair Y coord.
  Typ_REAL
 Fld_3
  Prm_LOC2    2nd node pair Y coord.
  Typ_REAL
 Fld_4
  Prm_LOCTOL  Tolerance on Y coord.
  Typ_REAL
  Def_0.00001
 Fld_0
  Typ_Sep
 Fld_5
  Prm_R1      Minimum X coordinate
  Typ_REAL
 Fld_6
  Prm_R2      Maximum X coordinate
  Typ_REAL
 Fld_7
  Prm_TOLR    Tolerance on X coord.
  Typ_REAL
  Def_0.00001
 Fld_0
  Typ_Sep
 Fld_8
  Prm_OPT   Periodic option
  Typ_LIS_OptionB
  LIS_Odd symmetry    ,0
  LIS_Even symmetry   ,1
 Fld_9
 Typ_def_*Par(_z1)
 Fld_0
 Typ_Sep
 Fld_0
  Prm_NOTE: Constraints are not applied at X min + max locations
  Typ_Lab
:E End
:! 
:N Fnc_PFACT_mult
:S    878,   592,   279
:T Command
:C )! Fnc_PFACT_mult
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,6
:C )*SET,_zc(1),'BASE','NODE'
:C )*GET,_z1,common,,rancom,,int,12 ! type of repsonse spect
:C )*GET,_z2,common,,rancom,,int,26 ! Where to get correlation
:C )*GET,_z3,common,,rancom,,int,36 ! from   
:C )*IF,_z2,EQ,0,THEN
:C )*IF,_z3,EQ,0,THEN
:C )_z4=' '
:C )*ELSEIF,_z3,EQ,1,THEN
:C )_z4='SPAT'
:C )*ENDIF
:C )*ELSEIF,_z2,EQ,1,THEN
:C )_z4='WAVE'
:C )*ENDIF
:C )/GO
:A    Calculate PF
:D Calculate Participation Factors
:K #(MULTIPNT*NOFILTER)
:P (FULL_ANS)
:H Hlp_C_PFACT
Cmd_PFACT
 Fld_0
  Typ_Lab
  Prm_[PFACT]  Calculate Participation Factors
 Fld_2
  Prm_TBLNO   Table no. of PSD table
  Typ_INT
  Def_1
 Fld_3
  Prm_Excit   Base or nodal excitation
  Typ_LIS_OPTIONB
  LIS_Base excitation ,BASE
  LIS_Nodal excitation,NODE
  Def_*PAR(_zc(_z1+1))
:E END
:! 
:N Fnc_PFACT_psd
:S   1039,   590,   442
:T Command
:C )! Fnc_PFACT_psd
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,6
:C )*SET,_zc(1),'BASE','NODE'
:C )*GET,_z1,common,,rancom,,int,12 ! type of repsonse spect
:C )*GET,_z2,common,,rancom,,int,26 ! Where to get correlation
:C )*GET,_z3,common,,rancom,,int,36 ! from   
:C )*IF,_z2,EQ,0,THEN
:C )*IF,_z3,EQ,0,THEN
:C )_z4=' '
:C )*ELSEIF,_z3,EQ,1,THEN
:C )_z4='SPAT'
:C )*ENDIF
:C )*ELSEIF,_z2,EQ,1,THEN
:C )_z4='WAVE'
:C )*ENDIF
:C )/GO
:A    Calculate PF
:D Calculate Participation Factors
:K #(PSDRANDM*NOFILTER)
:P (FULL_ANS)
:H Hlp_C_PFACT
Cmd_PFACT
 Fld_0
  Typ_Lab
  Prm_[PFACT]  Calculate Participation Factors
 Fld_2
  Prm_TBLNO   Table no. of PSD table
  Typ_INT
  Def_1
 Fld_3
  Prm_Excit   Base or nodal excitation
  Typ_LIS_OPTIONB
  LIS_Base excitation ,BASE
  LIS_Nodal excitation,NODE
  Def_*PAR(_zc(_z1+1))
 Fld_4
  Prm_Parcor  Partial correlation from
  Typ_LIS_OPTIONB
  LIS_Co & quadspectra," "
  LIS_Wave propagation,WAVE
  LIS_Spatial propagat,SPAT
  Def_*PAR(_z4)
:E END
:! 
:N Fnc_PFEDEF
:S    165,   132,    26
:T Cmd_N
:C )! Fnc_PFEDEF
:A    FE Results
:K (ELECTRIC*MAGNETIC+EDGEELC)
:K #(POST1+RESULTS)
Inp_P
Cmd_)!
Cal_Fnc_PDEF
:E End
:! 
:N Fnc_PGSE_A
:S    298,   122,   169
:T Cmd_P
:C )! Fnc_PGSE_A
:A Also select facets
:D Also select facets
:H Hlp_C_PGSE
Inp_P
Cmd_PGSE
 Fld_2
  Typ_DEF_A
 Fld_3
  Typ_DEF_FACE
 Fld_5
Prm_[PGSE],A  Pick or enter facets to be added to selected set
  Typ_FACE
  Min_1
  Cnt_s
  PCN_1
  Sel_U
:E END
:! 
:N Fnc_PGSE_R
:S    273,   116,   150
:T Cmd_P
:C )! Fnc_PGSE_R
:A Reselect facets
:D Reselect facets
:H Hlp_C_PGSE
Inp_P
Cmd_PGSE
 Fld_2
  Typ_DEF_R
 Fld_3
  Typ_DEF_FACE
 Fld_5
Prm_[PGSE],R  Pick or enter facets to be reselected
  Typ_FACE
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_PGSE_S
:S    275,   112,   156
:T Cmd_P
:C )! Fnc_PGSE_S
:A Select facets
:D Select facets
:H Hlp_C_PGSE
Inp_P
Cmd_PGSE
 Fld_2
  Typ_DEF_S
 Fld_3
  Typ_DEF_FACE
 Fld_5
Prm_[PGSE],S  Pick or enter facets to be selected
  Typ_FACE
  Min_1
  Cnt_s
  PCN_1
  Sel_D
:E END
:! 
:N Fnc_PGSE_U
:S    273,   116,   150
:T Cmd_P
:C )! Fnc_PGSE_U
:A Unselect facets
:D Unselect facets
:H Hlp_C_PGSE
Inp_P
Cmd_PGSE
 Fld_2
  Typ_DEF_U
 Fld_3
  Typ_DEF_FACE
 Fld_5
Prm_[PGSE],U  Pick or enter facets to be unselected
  Typ_FACE
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_PHFDEF
:S   1272,   216,  1035
:T Command
:C )! Fnc_PHFDEF
:A    HF Near Field
:D Map High Frequency Near Field Data onto Path
:K (ELECTRIC*MAGNETIC+EDGEELC)
:K #(POST1+RESULTS)
:H Hlp_C_HFNEAR
:H Hlp_C_HFSYM
Cmd_)/NOPR
Cmd_)*CSET,1,2
 Fld_0
  Typ_Lab
  Prm_[HFNEAR]  Compute High Frequency Near Field Data
 Fld_2
  Prm_Item    HF data to be computed
   Typ_Lis_RadioB
    Lis_Electric field  ,EF
    Lis_Magnetic field  ,H
 Fld_3
  Typ_Def_'PATH'
Cmd_)*CSET,10,10
 Fld_2
  Prm_CS  Compute field components of
   Typ_Lis_OptionB
    Lis_Cartesian system,0
    Lis_Cylindric system,1
    Lis_Spherical system,2
Cmd_)/GO
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cal_Fnc_PHFDEF_2
:E END_OF_Fnc_PHFDEF
:! 
:N Fnc_PHFDEF_2
:S    173,    70,    96
:T Command
:C )! Fnc_PHFDEF_2
Inp_P
Cmd_HFNEAR
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_7
  Typ_Def_*CPAR(10)
:E End
:! 
:N Fnc_PLCAMPBELL
:S    710,   107,   596
:T Cmd
:A Plot Campbell
:D Plot Campbell diagram
:H Hlp_C_PLCAMP
Inp_NoApply
Cmd_PLCAMP
Fld_0
 Typ_Lab
 Prm_[PLCAMP] Plot Campbell diagram data
Fld_2
 Prm_Sorting of backward or forward whirl frequencies?
 Typ_Logi,No,Yes
Fld_3
 Prm_Slope of line to be plotted
 Typ_Real
Fld_4
 Prm_Unit for rotational angular velocities
 Typ_LIS_OPTIONB
 LIS_Radians per second,RDS
 LIS_Revs per minute   ,RPM
Fld_5
 Prm_Lower end of frequency range
 Typ_Real
 Def_0
Fld_6
 Prm_Rotating component name
 Typ_Lis_OptionB
 Lis_*READ,CM
Fld_7
 Prm_Plot the stability values
 Typ_LIS_OPTIONB
 LIS_Frequencies           ,0
 LIS_Stability values      ,1
 LIS_Logarithmic decrements,2
:E END
:! 
:N Fnc_PLCRACK
:S    586,   218,   361
:T Cmd
:C )! Fnc_PLCRACK
:A    Crack/Crush
:D Cracking and Crushing Locations in Concrete Elements
:H Hlp_C_PLCRACK
:K (lsdyna)
:K #(POST1+RESULTS+STRUCTRL+pmethod)
:P (FULL_ANS)
Cmd_PLCRACK
 Fld_0
  Typ_Lab
  Prm_[PLCRACK]  Plot Cracking and Crushing Locations in Solid65
 Fld_2
  Prm_Plot symbols are located at
  Typ_LIS_OPTIONB
  LIS_integration pts  ,0
  LIS_element centroid ,1
 Fld_3
  Prm_Plot crack faces for
  Typ_LIS_OPTIONB
  LIS_all cracks       ,0
  LIS_only first crack ,1
  LIS_only second crack,2
  LIS_only third crack ,3
:E End
:! 
:N Fnc_PLDISP
:S    390,   173,   196
:T Cmd
:C )! Fnc_PLDISP
:A Deformed Shape
:D Plot Deformed Shape
:H Hlp_C_PLDISP
:K (PR_STRUC*pr_set)
:K #(POST1+RESULTS)
:P (LINPLUS)
Cmd_PLDISP
 Fld_0
  Typ_Lab
  Prm_[PLDISP]  Plot Deformed Shape
 Fld_2
  Prm_KUND   Items to be plotted
  Typ_LIS_RADIOB
  LIS_Def shape only  ,0
  LIS_Def + undeformed,1
  LIS_Def + undef edge,2
:E END OF Fnc_PLDISP
:! 
:N Fnc_PLESOL
:S    209,    85,   117
:T Command
:A Element Solu
:K #(POST1+RESULTS)
Inp_P
K_LN(oldpost)
Cmd_)~eui,'euidl::post1::plotResults::contourPlot PLESOL'
Cmd_)!
K_LN(OLDPOST)
Cal_Fnc_oldPLESOL
:E END
:! 
:N Fnc_PLESOL_2
:S    298,   154,   121
:T Cmd
:C )! Fnc_PLESOL_2
:A    Element Solu
:D Contour Element Solution Data
:H Hlp_C_PLESOL
:K #(POST1+RESULTS)
Inp_P
Cmd_PLESOL
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
:E END OF Fnc_PLESOL_2
:! 
:N Fnc_PLETAB
:S    429,   155,   267
:T Cmd
:C )! Fnc_PLETAB
:A Plot Elem Table
:D Contour Plot of Element Table Data
:H Hlp_C_PLETAB
:K #(POST1+RESULTS)
Cmd_PLETAB
 Fld_0
  Typ_Lab
  Prm_[PLETAB]  Contour Element Table Data
 Fld_2
  Prm_Itlab   Item to be plotted
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_3
  Prm_Avglab  Average at common nodes?
  Typ_LIS_OPTIONB
  LIS_No  - do not avg ,NOAV
  LIS_Yes - average    ,AVG
:E END
:! 
:N Fnc_PLETAB_dummy
:S    178,   143,    28
:T Command
:C )! Fnc_PLETAB_dummy
:A    Elem Table
:H Hlp_C_PLETAB
:K (lsdyna)
:K #(POST1+RESULTS)
Inp_P
Cmd_)!
Cal_Fnc_PLETAB
:E END
:! 
:N Fnc_PLF2D
:S    696,   211,   478
:T Cmd
:C )! Fnc_PLF2D
:A    2D Flux Lines
:D Plot 2D Flux Lines
:H Hlp_C_PLF2D
:K (lsdyna)
:K #(POST1+RESULTS+MAGNETIC+ELEM2D)
:K #((edgeflx+edgeelc)*NOFILTER)
:P (ELECMAG)
Cmd_PLF2D
 Fld_0
  Typ_Lab
  Prm_[PLF2D]  Plot 2D Flux Lines
 Fld_2
  Prm_NCONT  Number of contour lines
  Typ_Int
  Def_27
 Fld_3
  Prm_OLAY  Edge outlines are based on
  Typ_LIS_OPTIONB
  LIS_Material number ,0
  LIS_Real const num  ,1
 Fld_4
  Prm_ANUM  Highest mat'l or real num
  Typ_INT
  Def_10
 Fld_5
  Prm_WIN   Window number
  Typ_LIS_OPTIONB
  LIS_Window 1        ,1
  LIS_Window 2        ,2
  LIS_Window 3        ,3
  LIS_Window 4        ,4
  LIS_Window 5        ,5
:E END
:! 
:N Fnc_PLHFFAR_1
:S    813,   157,   649
:T Command
:A    Far Field
:D Compute Far Field
:C )! Fnc_PLHFFAR
:K #(POST1+RESULTS)
:P (ELECMAG)
:H Hlp_C_PLHFFAR
Cmd_)/NOPR
Cmd_)*CSET,3,9
 Fld_0
  Typ_Lab
  Prm_[PLHFFAR]  Compute High Frequency Far Field Data
 Fld_0
  Typ_Lab
  Prm_           in Spherical Coordinate System
 Fld_2
  Prm_Phi1   Start angle: X to Y axis 
  Typ_Real
  Def_0
 Fld_3
  Prm_Phi2     End angle: X to Y axis 
  Typ_Real
  Def_0
 Fld_4
  Prm_NPhi      Number of Divisions
  Typ_Real
  Def_0
 Fld_5
  Prm_Theta1  Start angle from Z axis
  Typ_Real
  Def_0
 Fld_6
  Prm_Theta2    End angle from Z axis
  Typ_Real
  Def_0
 Fld_7
  Prm_NTheta    Number of Divisions
  Typ_Real
  Def_0
 Fld_8
  K_FL(HFFAR)
  Prm_Radius    Radius for far field
  Typ_Real
  Def_1
Cmd_)/GO
Cal_Fnc_PLHFFAR_2
:E End
:! 
:N Fnc_PLHFFAR_2
:S    342,    68,   267
:T Com
:C )! Fnc_PLHFFAR_2
Inp_P
Cmd_PLHFFAR
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Typ_Def_*CPAR(7)
 Fld_9
  Typ_Def_*CPAR(8)
 Fld_10
  K_FL(HFFAR)
  Typ_Def_*CPAR(9)
:E End
:! 
:N Fnc_PLLS
:S    683,   187,   489
:T Command
:C )! Fnc_PLLS
:A    Line Elem Res
:D Plot Line-Element Results
:H Hlp_C_PLLS
:K (lsdyna)
:K #(POST1+RESULTS+STRUCTRL)
:P (LINPLUS*THERMAL)
Cmd_PLLS
 Fld_0
  Prm_[PLLS]  Plot Line-Element Results
 Fld_2
  Prm_LabI  Elem table item at node I
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_3
  Prm_LabJ  Elem table item at node J
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_4
  Prm_Fact  Optional scale factor
  Typ_REAL
  Def_1.0
 Fld_5
 K_FL(STRUCTRL)
  Prm_KUND   Items to be plotted on
  Typ_LIS_RADIOB
  LIS_Undeformed shape,0
  LIS_Deformed shape  ,1
 Fld_6
  Prm_ViewUP Align With ViewUp Vector
  Typ_LIS_RADIOB
  LIS_NO,0
  LIS_YES,1
:E END
:! 
:N Fnc_PLNSOL
:S    207,    83,   117
:T Command
:A Nodal Solu
:K #(POST1+RESULTS)
Inp_P
K_LN(oldpost)
Cmd_)~eui,'euidl::post1::plotResults::contourPlot PLNSOL'
Cmd_)!
K_LN(OLDPOST)
Cal_Fnc_oldPLNSOL
:E END
:! 
:N Fnc_PLNSOL_2
:S    295,   151,   121
:T Cmd
:C )! Fnc_PLNSOL_2
:A    Nodal Solu
:D Contour Nodal Solution Data
:H Hlp_UI_PLNSOL
:K #(POST1+RESULTS)
Inp_P
Cmd_PLNSOL
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
:E END OF Fnc_PLNSOL_2
:! 
:N Fnc_PLORBIT
:S    128,    97,    24
:T Cmd
:A Plot orbit
:D Plot orbit diagram
:H Hlp_C_PLORB
Inp_P
Cmd_) !
Cmd_PLORB
:E END
:! 
:N Fnc_PLPAGM
:S    476,   150,   318
:T Cmd
:C )! Fnc_PLPAGM
:A    On Geometry
:D Plot of Path Items on Geometry
:H Hlp_C_PLPAGM
:K #(POST1+RESULTS)
Cmd_PLPAGM
 Fld_0
  Typ_Lab
  Prm_[PLPAGM]  Path Plot on Geometry
 Fld_2
  Prm_Item  Path items to be displayed 
  Typ_Lis
  LIS_*READ,PATH
 Fld_3
  Prm_Gscale   Scale factor offset
  Typ_Int
  Def_1
 Fld_4
  Prm_Nopt       Display options :
  Typ_LIS_RADIOB
  LIS_Without nodes   ,Blank
  LIS_With nodes      ,'NODE'
:E END 
:! 
:N Fnc_PLPATH
:S    316,   144,   151
:T Cmd
:C )! Fnc_PLPATH
:A    On Graph
:D Plot of Path Items on Graph
:H Hlp_C_PLPATH
:K #(POST1+RESULTS)
Cmd_PLPATH
 Fld_0
  Typ_Lab
  Prm_[PLPATH]  Path Plot on Graph
 Fld_2
  Prm_Lab1-6  Path items to be graphed
  Typ_MLis
  LIS_*READ,PATH
  Bnd_0.0,6.0
:E END OF Fnc_PLPATH
:! 
:N Fnc_PLPATH_dummy
:S    168,   131,    30
:T Command
:C )! Fnc_PLPATH_dummy
:A    Path Items
:H Hlp_C_PLPATH
:K #(POST1+RESULTS)
Inp_P
Cmd_)!
Cal_Fnc_PLRECALL
:E END
:! 
:N Fnc_PLRECALL
:S    320,   133,   180
:T Cmd
:C )!  Fnc_PATHRECALL
:H Hlp_C_PATH
:A Recall Path
:D Recall Path
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_PATH
 Fld_0
  Typ_Lab
  Prm_[PATH]  Define Path specifications
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Name   Recall Path by Name :
  Typ_Lis
  LIS_*READ,DPTH
Cal_Fnc_PLPATH
:E END
:! 
:N Fnc_PLSECT
:S    855,   170,   678
:T Command
:C )! Fnc_PLSECT
:A Linearized Strs
:D Path Plot of Linearized Stresses
:H Hlp_C_PLSECT
:K #(POST1+RESULTS)
:P (LINPLUS)
 Fld_0
typ_Lab
  Prm_[PLSECT]  Path Plot of Linearized Stresses
Cmd_PLSECT
 Fld_0
  Typ_Lab
  Prm_Item,Comp
 Fld_2
  Prm_    Stress item to be linearized
  Typ_LIS_OPTIONB
   LIS_X-dir stress  SX,S,X
   LIS_Y-dir stress  SY,S,Y
   LIS_Z-dir stress  SZ,S,Z
   LIS_XY-shearStrs SXY,S,XY
   LIS_YZ-shearStrs SYZ,S,YZ
   LIS_XZ-shearStrs SXZ,S,XZ
   LIS_1st prinStrs  S1,S,1
   LIS_2nd prinStrs  S2,S,2
   LIS_3rd prinStrs  S3,S,3
   LIS_Strs Intens SINT,S,INT
   LIS_von Mises   SEQV,S,EQV
Fld_0
Typ_Sep
 Fld_0
  Typ_Lab
  Prm_For axisymmetric models
 Fld_3
  Prm_  RHO  Avg radius of curvature
  Typ_REAL
  Def_Blank
 Fld_4
  Prm_  KBR  Ignore bending stresses?
  Typ_LOGI,No,Yes
:E END
:! 
:N Fnc_PLSECT_dummy
:S    191,   156,    28
:T Command
:C )! Fnc_PLSECT_dummy
:A    Lineariz Strs
:H Hlp_C_PLSECT
:K #(POST1+RESULTS+STRUCTRL)
:P (LINPLUS)
Inp_P
Cmd_)!
Cal_Fnc_PLSECT
:E END
:! 
:N Fnc_PLTRAC
:S   1748,   174,  1553
:T Cmd
:C )! Fnc_PLTRAC
:A    Plot Flow Tra
:D Plot Flow Trace
:H Hlp_C_PLTRAC
:K (lsdyna)
:K #(POST1+RESULTS+CFD)
:P (THERMAL*FLOTRAN)
Cmd_PLTRAC
 Fld_0
  Typ_Lab
  Prm_[PLTRAC]  Plot Flow Trace
 Fld_2
  Typ_Def_FLUID
 Fld_3
  Prm_Item to be contoured along trace
  Typ_IDX
  IDX_DOF solution    ,None            ," "," " 
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  IDX_DOF solution    ,Velocity      VX,V,X
  IDX_DOF solution    ,              VY,V,Y
  IDX_DOF solution    ,              VZ,V,Z
  IDX_DOF solution    ,            VSUM,V,SUM
  IDX_DOF solution    ,Pressure    PRES,PRES,
  IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
  IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
!
  IDX_Other quantities,Sp. Heat    SPHT,SPHT,
  IDX_Other quantities,Density     DENS,DENS,
  IDX_Other quantities,Viscosity   VISC,VISC,
  IDX_Other quantities,Conductivit COND,COND,
  IDX_Other quantities,SFTS Coeff  SFTS,SFTS,
  IDX_Other quantities,Eff Viscos  EVIS,EVIS,
  IDX_Other quantities,Eff Conduct ECON,ECON,
  IDX_Other quantities,Total temp  TTOT,TTOT,
  IDX_Other quantities,Strm func2D STRM,STRM,
  IDX_Other quantities,PressurCoef PCOE,PCOE,
  IDX_Other quantities,Mach number MACH,MACH,
  IDX_Other quantities,Total pres  PTOT,PTOT,
  IDX_Other quantities,Turb coeff  CMUV,CMUV,
!  
 Fld_8
  Prm_OPTION  Plot flow trace based on
  Typ_LIS_OPTIONB
  LIS_Undeformed Mesh  ,0
  LIS_Deformed Mesh    ,1
!
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_       Store trace path data in array parameters
 Fld_4
  Prm_Numtr  Valid trace point number
  Typ_Int
  Def_0
 Fld_5
  Prm_Name1  Array param. identifier
  Typ_Char,4,4
  Def_TRAC
 Fld_6
  Prm_Mxloop Max number of loops
  Typ_Int
  Def_25
:E END OF Fnc_PLTRAC
:! 
:N Fnc_PLTRAC_00
:S    422,   207,   208
:T Cmd
:C )/NOPR
:C )KEYW,PLTREM,1
:C )/GO
:A    Particle Trace
:D Plot Particle Trace
:H Hlp_C_PLTRAC
:K (lsdyna)
:K #(POST1+RESULTS+ELECTRIC*MAGNETIC)
:P (ELECMAG)
Inp_P
Cmd_PLTRAC
 Fld_2
  Typ_Def_*CPAR(72)
 Fld_5
  Typ_Def_*CPAR(75)
 Fld_6
  Typ_Def_*CPAR(76)
 Fld_7
  Typ_Def_*CPAR(77)
 Fld_8
  Typ_Def_*CPAR(78)
 Fld_10
  Typ_Def_*CPAR(73)
 Fld_11
  Typ_Def_*CPAR(74)
:E END
:! 
:N Fnc_PLTRAC_EM
:S    944,   188,   749
:T Cmd
:C )! Fnc_PLTRAC
:A    Particle Trace
:D Plot Particle Trace
:H Hlp_C_PLTRAC
:K (lsdyna)
:K #(POST1+RESULTS+ELECTRIC*MAGNETIC)
:P (ELECMAG)
Cmd_)*CSET,72,80
 Fld_2
  Prm_[PLTRAC]  Plot Particle Trace in
   Typ_Lis_RADIOB
   Lis_Electrostatics  ,'ELEC'
   Lis_Magnetostatics  ,'MAGN'
   Lis_Coupled Elec/Mag,'EMAG'
!
 Fld_3
  Prm_Escl Electric field scale factor
  Typ_Real
  Def_1
 Fld_4
  Prm_Mscl Magnetic field scale factor
  Typ_Real
  Def_1
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_       Store trace path data in array parameters
 Fld_5
  Prm_TRPNum Valid trace point number
  Typ_Int
  Def_0
 Fld_6
  Prm_Name   Array param. identifier
  Typ_Char,4,4
  Def_TRAC
!
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_       Tracing adjustment parameters
 Fld_7
  Prm_Mxloop Max number of loops
  Typ_Int
  Def_1000
 Fld_8
  Prm_Toler  Length tolerance
  Typ_Real
  Def_1.0d-8
!
Cal_Fnc_PLTRAC_00
:E END
:! 
:N Fnc_PLVAR_p26
:S    626,   151,   468
:T Command
:C )! Fnc_PLVAR_p26
:A Graph Variables
:D Graph Time-History Variables
:K #(POST26)
:H Hlp_C_PLVAR
Cmd_PLVAR
Fld_0
Typ_Lab
Prm_[PLVAR]  Graph Time-History Variables
Fld_2
Prm_NVAR1   1st variable to graph
Typ_int
Fld_3
Prm_NVAR2   2nd variable
Typ_int
Fld_4
Prm_NVAR3   3rd variable
Typ_int
Fld_5
Prm_NVAR4   4th variable
Typ_int
Fld_6
Prm_NVAR5   5th variable
Typ_int
Fld_7
Prm_NVAR6   6th variable
Typ_int
Fld_8
Prm_NVAR7   7th variable
Typ_int
Fld_9
Prm_NVAR8   8th variable
Typ_int
Fld_10
Prm_NVAR9   9th variable
Typ_int
Fld_11
Prm_NVAR10  10th variable
Typ_int
:E END
:! 
:N Fnc_PLVECT
:S   5621,   258,  5342
:T Cmd
:C )! Fnc_PLVECT
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3,2
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )_zc(1)='!','/REPLOT'
:C )/GO
:A    Predefined
:D Vector Plot of Predefined Vectors
:H Hlp_UI_plvect
:K #(POST1+RESULTS)
Cmd_)/NOPR
Cmd_)*CSET,2,4
 Fld_0
  Typ_Lab
  Prm_[PLVECT]  Vector Plot of Predefined Vectors
 Fld_2
  K_FL(STRUCTRL+multifld+lsdyna)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation    U,U
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation     ROT,ROT
!  
  P_LN(LINPLUS)
  IDX_Stress          ,Principal      S,S
!  
  P_LN(LINPLUS)
  IDX_Strain-total    ,Principal   EPTO,EPTO
!  
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Principal   EPTT,EPTT
!  
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Principal   EPEL,EPEL
!  
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Principal   EPTH,EPTH
!  
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Principal   EPPL,EPPL
!  
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Principal   EPCR,EPCR
!  
Fld_2
  K_FL(THERMAL+multifld)
  P_FL(THERMAL)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  IDX_Flux & gradient ,Thermal flux  TF,TF
  IDX_Flux & gradient ,Thermal grad  TG,TG
!  
Fld_2
  K_FL(DIFFUSN+multifld)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  IDX_Flux & gradient ,Diffusn flux  DF,DF
  IDX_Flux & gradient ,Concent grad  CG,CG
  IDX_Strain-other    ,Diffusion   EPDI,EPDI
!  
Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid)
  P_FL(ELECMAG)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  IDX_DOF solution    ,Mag vect poten A,A
!  
  IDX_Flux & gradient ,Mag flux dens  B,B
  IDX_Flux & gradient ,Mag field      H,H
  K_LN(eleccond*NOFILTER)
  IDX_Flux & gradient ,Elec flux dens D,D
  IDX_Flux & gradient ,Elec field    EF,EF
!  
  IDX_Energy          ,Poynting vect  P,P
!
  IDX_Nodal force data,Mag force   FMAG,FMAG
!  
  IDX_Current Density ,Total         JT,JT
  IDX_Current Density ,Cpl'd Source  JS,JS
  K_LN(EDGEELC*ELECCOND*NOFILTER)
  IDX_Current Density ,Conduction    JC,JC
!  
Fld_2
  K_FL(FLUID+multifld)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity       V,V
!  
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressure grad PG,PG
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux  TF,TF
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad  TG,TG
!  
Fld_2
  K_FL(CFD)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity       V,V
!  
Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID*DIFFUSN*LSDYNA))
  Prm_Item  Vector item to be plotted
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation    U,U
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation     ROT,ROT
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_DOF solution    ,Mag vect poten A,A
  K_LN(LSDYNA)
  IDX_DOF solution    ,Nodal Accel    A,A
  P_LN(FLOTRAN*LSDYNA)
  IDX_DOF solution    ,Velocity       V,V
!  
  P_LN(LINPLUS)
  IDX_Stress          ,Principal      S,S
!  
  P_LN(LINPLUS)
  IDX_Strain-total    ,Principal   EPTO,EPTO
!  
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Principal   EPTT,EPTT
!  
  P_LN(THERMAL)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Thermal flux  TF,TF
  P_LN(THERMAL)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Thermal grad  TG,TG
  K_LN(DIFFUSN)
  IDX_Flux & gradient ,Diffusn flux  DF,DF
  K_LN(DIFFUSN)
  IDX_Flux & gradient ,Concent grad  CG,CG
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Mag flux dens  B,B
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Mag field      H,H
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Elec flux dens D,D
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Elec field    EF,EF
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Pressure grad PG,PG
!  
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Nodal force data,Mag force   FMAG,FMAG
!
  K_LN(lsdyna)
  IDX_Current Density ,Total         JT,JT
  K_LN(lsdyna)
  IDX_Current Density ,Cpl'd Source  JS,JS
!
  K_LN(lsdyna+ELECCOND)
  IDX_Current Density ,Conduction    JC,JC
!  
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Energy          ,Poynting vect  P,P
!  
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Principal   EPEL,EPEL
!  
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Strain-thermal  ,Principal   EPTH,EPTH
!  
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Strain-plastic  ,Principal   EPPL,EPPL
!  
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Strain-creep    ,Principal   EPCR,EPCR
!  
  K_LN(DIFFUSN)
  IDX_Strain-other    ,Diffusion   EPDI,EPDI
!  
 Fld_0
  Typ_Sep
 Fld_3
  Prm_Mode  Vector or raster display
  Typ_Lis_RadioB
   Lis_Vector Mode,VECT
   Lis_Raster Mode,RAST
 Fld_4
  Prm_Loc  Vector location for results
  Typ_Lis_RadioB
   Lis_Elem Centroid,ELEM
   Lis_Elem Nodes   ,NODE
   Def_'ELEM'
Cmd_)*SET,_z(1,2)
 Fld_2
  Prm_Edge Element edges
  Typ_LOGI,Hidden             ,Displayed
  Def_0
!  
 Fld_0
  Typ_Sep
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/VSCALE] Scaling of Vector Arrows
 Fld_2
  Prm_WN  Window Number
  Typ_LIS_OPTIONB
  LIS_All active wind ,6
  LIS_ Window 1       ,1
  LIS_ Window 2       ,2
  LIS_ Window 3       ,3
  LIS_ Window 4       ,4
  LIS_ Window 5       ,5
 Def_1
Cmd_)*CSET,1,1
 Fld_2
  Prm_VRATIO  Scale factor multiplier
  Typ_REAL
  Def_*GET(COMMON,,D3COM,,REAL,168)
Cmd_)*SET,_z(2)
 Fld_2
  Prm_KEY     Vector scaling will be
  Typ_LIS_OPTIONB
  LIS_Magnitude based  ,0
  LIS_Uniform          ,1
  Def_*GET(COMMON,,D3COM,,INT,193)
 Fld_3
  Typ_Def_1
!
 Fld_0
  Typ_Sep
Cmd_)*SET,_z7
 Fld_2
  Prm_OPTION  Vector plot based on
  Typ_LIS_OPTIONB
  LIS_Undeformed Mesh  ,0
  LIS_Deformed Mesh    ,1
Cmd_)/GO
Cal_Fnc_Pl_/VSCALE_A
Cal_Fnc_PLVECT2
:E END OF Fnc_PLVECT
:! 
:N Fnc_PLVECT2
:S    420,   249,   149
:T Cmd
:C )! Fnc_PLVECT2
:C )/NOPR
:C )*IF,_z(1,2),EQ,0,THEN
:C ) _z1='ON'
:C )*ELSE
:C ) _z1='OFF'
:C )*ENDIF
:C )/GO
:A    Predefined
:D Vector Plot of Predefined Vectors
:H Hlp_UI_plvect
:K #(POST1+RESULTS)
Inp_P
Cmd_PLVECT
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_6
  Typ_Def_*CPAR(3)
 Fld_7
  Typ_Def_*CPAR(4)
 Fld_8
  Typ_Def_*PAR(_z1)
 Fld_9
  Typ_Def_*PAR(_z7)
:E END OF Fnc_PLVECT2
:! 
:N Fnc_PLVECT_user
:S    886,   289,   571
:T Command
:C )! Fnc_PLVECT_user
:C )/NOPR
:C )*GET,_z1,GRAPH,,DISPLAY
:C )*IF,_z1,EQ,0,THEN
:C )_z2='RAST'
:C )*ELSE
:C )_z2='VECT'
:C )*ENDIF
:C )/GO
:A    User-defined
:D Vector Plot of User-defined Vectors
:H Hlp_C_PLVECT
:K #(POST1+RESULTS)
 Fld_0
  Typ_Lab
  Prm_[PLVECT]  Vector Plot of User-defined Vectors
Cmd_PLVECT
 Fld_2
  Prm_Item  I-component of vector
  Typ_CHAR,8
 Fld_3
  Prm_Lab2  J-component of vector
  Typ_CHAR,8
 Fld_4
  Prm_Lab3  K-component of vector
  Typ_CHAR,8
 Fld_0
  Typ_Sep
 Fld_5
  Prm_LabP  User label for resultant
  Typ_CHAR,8
 Fld_6
  Prm_Mode  Vector or Raster display
  Typ_Lis_OptionB
   Lis_Raster Mode,RAST
   Lis_Vector Mode,VECT
  Def_*PAR(_z2)
 Fld_7
  Prm_Loc  Vector location for results
  Typ_Lis_OptionB
   Lis_Elem Centroid,ELEM
   Lis_Elem Nodes   ,NODE
  Def_'ELEM'
:E END OF Fnc_PLVECT_user
:! 
:N Fnc_PMGTRAN
:S   1497,   206,  1284
:T Cmd
:A Magnetics
:C )! Fnc_PMGTRAN
:D Electromagnetics Transient Postprocessing
:K #(POST26+MAGNETIC+harmonic)
:K #(edgeelc*NOFILTER)
:P (ELECMAG)
:H Hlp_C_PMGTRAN
Cmd_)/nopr
 Cmd_)*CSET,8,8
  Fld_0
   Typ_Lab
   Prm_[PMGTRAN] Electromagnetics Transient Results
  Fld_2 
   Prm_Fname   Name of Output File
   Typ_Char,8,8
   Def_
 Cmd_)*SET,_z2
  Fld_2
   Prm_FREQ    Sample Frequency
   Typ_Lis_RADIOB
   LIS_Every substep   ,0
   LIS_Every Nth substp,1
 Cmd_)*CSET,9,9
  Fld_2
   Prm_                   Value of N
   Typ_INT
  Fld_0  
   Typ_Sep
 Cmd_)*CSET,1,2
  Fld_0
  Prm_Components for Force summary
  Fld_2
  Prm_Cnam1-2  Component name(s)
  Bnd_0.0,2.0
  Typ_Mlis
  Lis_*READ,CM
  Fld_0
  Typ_Lab
  Prm_                                  (specify up to 2)
 Cmd_)*CSET,3,4
  Fld_0
  Prm_Components for Power summary
  Fld_2
  Prm_Cnam1-2  Component name(s)
  Bnd_0.0,2.0
  Typ_Mlis
  Lis_*READ,CM
  Fld_0
  Typ_Lab
  Prm_                                  (specify up to 2)
 Cmd_)*CSET,5,5
  Fld_0
  Prm_Component for Energy summary
  Fld_2
  Prm_Cnam1    Component name
  Bnd_0.0,1.0
  Typ_Mlis
  Lis_*READ,CM
  Def_ 
 Cmd_)*CSET,6,6
  Fld_0
  Prm_Component for Current summary
  Fld_2
  Prm_Cnam1    Component name
  Bnd_0.0,1.0
  Typ_Mlis
  Lis_*READ,CM
  Def_ 
 Cmd_)*CSET,7,7
  Fld_0
  Prm_Component for Inductance summary
  Fld_2
  Prm_Cnam1    Component name
  Bnd_0.0,1.0
  Typ_Mlis
  Lis_*READ,CM
  Def_ 
 Cmd_)/go
Cal_Fnc_PMGTRAN_3
:E End
:! 
:N Fnc_PMGTRAN_1
:S    482,    81,   394
:T Cmd
:C )! Fnc_PMGTRAN_1
:P (ELECMAG)
Inp_P
Cmd_PMGTRAN
 Fld_2
  Typ_Def_*STR('%_zc(8)%')
 Fld_3
  Typ_Def_1
 Fld_4
 K_FL(KEY1)
  Typ_Def_*STR('%_zc(1)%')
 Fld_5
 K_FL(KEY2)
  Typ_Def_*STR('%_zc(2)%')
 Fld_6
 K_FL(KEY3)
  Typ_Def_*STR('%_zc(3)%')
 Fld_7
 K_FL(KEY4)
  Typ_Def_*STR('%_zc(4)%')
 Fld_8
 K_FL(KEY5)
  Typ_Def_*STR('%_zc(5)%')
 Fld_9
 K_FL(KEY6)
  Typ_Def_*STR('%_zc(6)%')
 Fld_10
 K_FL(KEY7)
  Typ_Def_*STR('%_zc(7)%')
:E End
:! 
:N Fnc_PMGTRAN_2
:S    476,    68,   401
:T Cmd
:C )! Fnc_PMGTRAN_2
Inp_P
Cmd_PMGTRAN
 Fld_2
  Typ_Def_*STR('%_zc(8)%')
 Fld_3
  Typ_Def_*CPAR(9)
 Fld_4
 K_FL(KEY1)
  Typ_Def_*STR('%_zc(1)%')
 Fld_5
 K_FL(KEY2)
  Typ_Def_*STR('%_zc(2)%')
 Fld_6
 K_FL(KEY3)
  Typ_Def_*STR('%_zc(3)%')
 Fld_7
 K_FL(KEY4)
  Typ_Def_*STR('%_zc(4)%')
 Fld_8
 K_FL(KEY5)
  Typ_Def_*STR('%_zc(5)%')
 Fld_9
 K_FL(KEY6)
  Typ_Def_*STR('%_zc(6)%')
 Fld_10
 K_FL(KEY7)
  Typ_Def_*STR('%_zc(7)%')
:E End
:! 
:N Fnc_PMGTRAN_3
:S   1303,   136,  1160
:T Cmd
:C )! Fnc_PMGTRAN_3
:C )/nopr
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,9,1,1
:C )/GO
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_zc(1) 
 Fld_2
 Typ_Def_'
 Dlm_~
 Fld_3
 Typ_Def_*CPAR(1)
 Dlm_~
 Fld_4
 Typ_Def_'
Cmd_)*SET,_zc(2)
 Fld_2
 Typ_Def_'
 Dlm_~
 Fld_3
 Typ_Def_*CPAR(2)
 Dlm_~
 Fld_4
 Typ_Def_'
Cmd_)*SET,_zc(3)
 Fld_2
 Typ_Def_'
 Dlm_~
 Fld_3
 Typ_Def_*CPAR(3)
 Dlm_~
 Fld_4
 Typ_Def_'
Cmd_)*SET,_zc(4)
 Fld_2
 Typ_Def_'
 Dlm_~
 Fld_3
 Typ_Def_*CPAR(4)
 Dlm_~
 Fld_4
 Typ_Def_'
Cmd_)*SET,_zc(5)
 Fld_2
 Typ_Def_'
 Dlm_~
 Fld_3
 Typ_Def_*CPAR(5)
 Dlm_~
 Fld_4
 Typ_Def_'
Cmd_)*SET,_zc(6)
 Fld_2
 Typ_Def_'
 Dlm_~
 Fld_3
 Typ_Def_*CPAR(6)
 Dlm_~
 Fld_4
 Typ_Def_'
Cmd_)*SET,_zc(7)
 Fld_2
 Typ_Def_'
 Dlm_~
 Fld_3
 Typ_Def_*CPAR(7)
 Dlm_~
 Fld_4
 Typ_Def_'
Cmd_)*SET,_zc(8)
 Fld_2
 Typ_Def_'
 Dlm_~
 Fld_3
 Typ_Def_*CPAR(8)
 Dlm_~
 Fld_4
 Typ_Def_'
Cmd_)/NOPR
Cmd_)KEYW,key1,0,key2,0,key3,0
Cmd_)KEYW,key4,0,key5,0,key6,0
Cmd_)KEYW,key7,0,key8,0,key9,0
Cmd_)_z1=0
Cmd_)*DO,_z1,1,9
Cmd_)/NOPR
Cmd_)*IF,_zc(_z1),NE,' ',THEN
Cmd_)KEYW,KEY%_z1%,1
Cmd_)*ELSE
Cmd_)KEYW,KEY%_z1%,0
Cmd_)*ENDIF
Cmd_)*ENDDO
Cmd_)*IF,_zc(8),eq,'        ',THEN
Cmd_)_zc(8)='mg_trns'
Cmd_)*ENDIF
Cmd_)/go
 Fld_2
   Typ_Def_*PAR(_z2)
Cal_Fnc_PMGTRAN_1,2,EQ,0
Cal_Fnc_PMGTRAN_2,2,GT,0
:E End
:! 
:N Fnc_PMLOPT
:S    314,   169,   138
:T Command
:C )! Fnc_PMLOPT
:A       Define
:D Define PML Options
:K #(PREP7*SOLUTION*NOFILTER)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
 Typ_Def_*GET(ACTIVE,,KEYWORD,,HARMONIC)
Cmd_)/GO
Cal_Fnc_PMLOPTM,2,eq,0,2
Cal_Fnc_PMLOPTH,2,eq,1,2
:E END
:! 
:N Fnc_PMLOPTH
:S    949,   187,   755
:T Command
:C )! Fnc_PMLOPT
:A       Define
:D Define PML Options 
:K #(PREP7*SOLUTION*NOFILTER)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_PMLOPT
Cmd_PMLOPT
Fld_0
 Typ_Lab
 Prm_[PMLOPT]  Define Perfectly Matched Layers (PML)
Fld_2
 Prm_ESYS       Element CSYS number
 Typ_INT
 Def_*GET(active,,ESYS)
Fld_3
 Prm_Lab              PML Dimension
 Typ_LIS_RadioB
      LIS_3-D             ,THREE
      LIS_1-D             ,ONE
Fld_0
 Typ_Sep
Fld_0
 Typ_Lab
 Prm_   Reflection coefficient for propagating wave:
Fld_4
 Prm_Xminus   Wave in X<0 direction
 Typ_Real
 Def_1.0e-2.5
Fld_5
 Prm_Xplus    Wave in X>0 direction
 Typ_Real
 Def_1.0e-2.5
Fld_6
 Prm_Yminus   Wave in Y<0 direction
 Typ_Real
 Def_1.0e-2.5
Fld_7
 Prm_Yplus    Wave in Y>0 direction
 Typ_Real
 Def_1.0e-2.5
Fld_8
 Prm_Zminus   Wave in Z<0 direction
 Typ_Real
 Def_1.0e-2.5
Fld_9
 Prm_Zplus    Wave in Z>0 direction
 Typ_Real
 Def_1.0e-2.5
:E END
:! 
:N Fnc_PMLOPTM
:S    901,   186,   708
:T Command
:C )! Fnc_PMLOPT
:A       Define
:D Define PML Options
:K #(PREP7*SOLUTION*NOFILTER)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_PMLOPT
Cmd_PMLOPT
Fld_0
 Typ_Lab
 Prm_[PMLOPT]  Define Perfectly Matched Layers (PML)
Fld_2
 Prm_ESYS       Element CSYS number
 Typ_INT
 Def_*GET(active,,ESYS)
Fld_3
 Prm_Lab              PML Dimension
 Typ_LIS_RadioB
      LIS_3-D             ,THREE
      LIS_1-D             ,ONE
Fld_0
 Typ_Sep
Fld_0
 Typ_Lab
 Prm_   Attenuation factor for evanescent wave:
Fld_4
 Prm_Xminus   Wave in X<0 direction
 Typ_Real
 Def_4
Fld_5
 Prm_Xplus    Wave in X>0 direction
 Typ_Real
 Def_4
Fld_6
 Prm_Yminus   Wave in Y<0 direction
 Typ_Real
 Def_4
Fld_7
 Prm_Yplus    Wave in Y>0 direction
 Typ_Real
 Def_4
Fld_8
 Prm_Zminus   Wave in Z<0 direction
 Typ_Real
 Def_4
Fld_9
 Prm_Zplus    Wave in Z>0 direction
 Typ_Real
 Def_4
:E END
:! 
:N Fnc_PMLOPT_CL1
:S    120,    74,    39
:T Command
:C )! Fnc_PMLOPT_CL1
Inp_P
Cmd_PMLOPT,CLEAR
Cmd_PMLOPT,STAT
:E END
:! 
:N Fnc_PMLOPT_CL2
:S    162,    74,    81
:T Command
:C )! Fnc_PMLOPT_CL2
Inp_P
Cmd_PMLOPT
 Fld_2
 Typ_Def_*Par(_z1)
 Fld_3
 Typ_Def_CLEAR
Cmd_PMLOPT,STAT
:E END
:! 
:N Fnc_PMLOPT_CLE
:S    625,   193,   425
:T Command
:C )! Fnc_PMLOPT_CLE
:A       Clear
:D PML Option Clearing
:K #(PREP7*SOLUTION*NOFILTER)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_PMLOPT
Cmd_)!
Fld_0
 Typ_Lab
 Prm_[PMLOPT,CLEAR] Clear PMLOPT settings and restore defaults 
Fld_2
 Prm_  Lab    Proceed with CLEAR for
  Typ_LIS_RadioB
      LIS_All ESYS defined,1
      LIS_Particular ESYS,2
  Def_1
Cmd_)/NOPR
Cmd_)*set,_z1
Fld_0
 Typ_Lab
 Prm_  If CLEAR for particular ESYS
Fld_2
 Prm_  ESYS   Element CSYS number
 Typ_INT
 Def_*GET(active,,ESYS)
Cmd_)/GO
Cal_Fnc_PMLOPT_CL1,2,EQ,1,1
Cal_Fnc_PMLOPT_CL2,2,EQ,2,1
:E END
:! 
:N Fnc_PMLOPT_ST
:S    219,   190,    22
:T Command
:C )! Fnc_PMLOPT_ST
:A       Status
:D PML Option Status
:K #(PREP7*SOLUTION*NOFILTER)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_PMLOPT
Inp_P
Cmd_PMLOPT,STAT
:E END
:! 
:N Fnc_PMLPAR_CL0
:S    223,   193,    23
:T Command
:C )! Fnc_PMLPAR_CL0
:A       All
:D PML Parameters Clear
:K #(PREP7*SOLUTION*NOFILTER)
:K #(EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_PMLOPT
Inp_P
Cmd_PMLOPT,CLEAR
:E END
:! 
:N Fnc_PMLPAR_CL1
:S    235,   200,    28
:T Command
:C )! Fnc_PMLPAR_CL1
:A       On ESYS   
:D PML Parameters Clear
:K #(PREP7*SOLUTION*NOFILTER)
:K #(EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_PMLOPT
Inp_P
Cmd_PMLOPT,ESYS,CLEAR
:E END
:! 
:N Fnc_PMLSIZ
:S    698,   172,   519
:T Cmd_N
:C )! Fnc_PMLSIZ
:A    PML
:D Define PMA Layer size
:K #(PREP7*NOFILTER)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_PMLSIZE
Inp_NoApply
Cmd_PMLSIZE
Fld_0
 Typ_Lab
 Prm_[PMLSIZE]  Perfectly Matched Layer (PML) Region Parameters
Fld_6
 Prm_Thick   PML region thickness
 Typ_Real
 Def_0
Fld_2
 Prm_FreqB   Minimum frequency
 Typ_Real
Fld_3
 Prm_FreqE   Maximum frequency
 Typ_Real
Fld_0
 Typ_Sep
Fld_0
 Typ_Lab
 Prm_  Parameters of radiation source with respect to PML interface
Fld_4
 Prm_DistB   Minimum distance to PML
 Typ_Real
Fld_5
 Prm_DistE   Maximum distance to PML
 Typ_Real
Fld_7
 Prm_Angle Wave incident angle to PML
 Typ_Real
 Def_0
:E END
:! 
:N Fnc_POLY_PTXY
:S    154,   133,    14
:T Command
:C )! Fnc_POLY_PTXY ORPHAN
:A Irregular Poly
:D POLY & PTXY commands
:K #(PREP7)
Cmd_POLY_PTXY
:E END
:! 
:N Fnc_POWERH
:S    421,   174,   240
:T Command
:C )! Fnc_POWERH
:A    Power Loss
:D Calculate Power Loss
:K #(POST1+RESULTS+MAGNETIC+HARMONIC)
:P (ELECMAG)
:H Hlp_C_POWERH
Inp_NoApply
Cmd_POWERH
 Fld_0
  Typ_Lab
  Prm_[POWERH]  This function calculates the time-averaged (rms)
 Fld_0
  Typ_Lab
  Prm_          power loss in a conducting body for the currently
 Fld_0
  Typ_Lab
  Prm_          selected elements.
:E END
:! 
:N Fnc_PPATH_Ci0
:S    331,   141,   183
:T Cmd
:C )/NOPR
:C )*if,_zz,eq,0,then
:C )KEYW,PLWP,0
:C )*else
:C )KEYW,PLWP,1
:C )*endif
:C )/GO
Inp_P
Cmd_/VIEW
 K_CM(PLWP)
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_WP
Cmd_/REPLOT
 K_CM(PLWP)
Cmd_)!
 Fld_2
  Typ_Def_*Par(_zv)
Cal_Fnc_PPATH_WP0,2,eq,1
Cal_Fnc_PPATH_Ci1,2,eq,2
:E END
:! 
:N Fnc_PPATH_Ci1
:S    384,   159,   218
:T Cmd_P
:C )! Fnc_PPATH_Cir
:A Circular Path
:D Circular Path Points
:C )/NOPR
:C )*DEL,_X(1)
:C )*DIM,_X,,9
:C )/GO
Inp_P
Cmd_)*SET,_X(1)
 Fld_0
  Prm_Pick or enter 2 WP locations -- center and radius
  Typ_XYZ_WP
  Min_2
  Mok_2
  Rub_3
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
Cal_Fnc_PPATH_Ci2
:E END
:! 
:N Fnc_PPATH_Ci2
:S    736,   248,   481
:T Cmd
:C )! Fnc_PPATH_Cir
:A Circular Path
:D Circular Path
:C )/NOPR
:C )*get,_cs,cdsys,,num,max
:C )*if,_cs,lt,11,then
:C )_cs0=11
:C )*else
:C )_cs0=_cs+1
:C )*endif
:C )_cs=_cs0+1
:C )/GO
:H Hlp_C_PATH
Inp_NoApply
Cmd_PATH
 Fld_0
  Typ_Lab
  Prm_[PATH]  Define Path specifications
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Name    Define Path Name :
  Typ_Char,8
 Fld_3
  Typ_Def_2
 Fld_4
  Prm_nSets   Number of data sets
  Typ_Int
  Def_30
 Fld_5
  Prm_nDiv    Number of divisions
  Typ_Int
  Def_120
 Fld_0
  Typ_Lab
  Prm_        Note: The number of all path points
 Fld_0
  Typ_Lab
  Prm_              for the circle will be  nDiv+1
Cmd_CSWPLA
 Fld_2
  Typ_Def_*PAR(_cs0)
Cal_Fnc_PPATH_Ci3
:E End
:! 
:N Fnc_PPATH_Ci3
:S   1453,   606,   840
:T Cmd
:C )! Fnc_PPATH_Cir
:D Circular Path 
:C )/NOPR
:C )wpoff,_X(1)+_X(3),_X(2)
:C )cswpla,_cs
:C )*get,_X(4),cdsy,_cs,loc,X
:C )*get,_X(5),cdsy,_cs,loc,Y
:C )*get,_X(6),cdsy,_cs,loc,Z
:C )wpcsys,_zw,_cs0
:C )*DEL,_Y(1)
:C )*DEL,_Z(1)
:C )*DIM,_Y,,3
:C )*DIM,_Z,,3
:C )_Y(1)=_X(4)+1.e-6
:C )_Y(2)=_X(5)+1.e-6
:C )_Y(3)=_X(6)
:C )_Z(1)=_X(4)-1.e-6
:C )_Z(2)=_X(5)-1.e-6
:C )_Z(3)=_X(6)
:C )*get,_aYZ,cdsy,_cs0,ang,YZ
:C )*afun,deg
:C )*if,abs(cos(_aYZ)),le,1.e-3,then
:C )_Y(2)=_X(5)
:C )_Y(3)=_X(6)+1.e-6
:C )_Z(2)=_X(5)
:C )_Z(3)=_X(6)-1.e-6
:C )*endif
:C )/GO
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_WPOFF
 Fld_2
  Typ_Def_*PAR(_X(1))
 Fld_3
  Typ_Def_*PAR(_X(2))
! Exclude_from_paths
Cmd_CSWPLA
 Fld_2
  Typ_Def_*PAR(_cs)
 Fld_3
  Typ_Def_1
! Exclude_from_paths
Cmd_CSCIR
 Fld_2
  Typ_Def_*PAR(_cs)
 Fld_3
  Typ_Def_1
! Exclude_from_paths
Cmd_PPATH
 Fld_2
  Typ_Def_1
 Fld_3
  Typ_Def_0
 Fld_4
  Typ_Def_*PAR(_Y(1))
 Fld_5
  Typ_Def_*PAR(_Y(2))
 Fld_6
  Typ_Def_*PAR(_Y(3))
! Exclude_from_paths
Cmd_PPATH
 Fld_2
  Typ_Def_2
 Fld_3
  Typ_Def_0
 Fld_4
  Typ_Def_*PAR(_Z(1))
 Fld_5
  Typ_Def_*PAR(_Z(2))
 Fld_6
  Typ_Def_*PAR(_Z(3))
! Exclude_from_paths
Cmd_PMAP,'UNI '
! Exclude_from_paths
Cmd_/PBC,PATH
 Fld_2
  Typ_Def_*PAR(_zu)
Cmd_/REPLOT
! Exclude_from_paths
Cmd_WPCSYS
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_*PAR(_cs0)
! Exclude_from_paths
Cmd_CSWPLA
 Fld_2
  Typ_Def_*PAR(_cs0)
Cmd_)/GO
:E END
:! 
:N Fnc_PPATH_Lc
:S    628,   108,   513
:T Cmd
:C )!  Fnc_PPATH
:A By Location
:D By Location
:H Hlp_C_PATH
Inp_NoApply
Cmd_PATH
 Fld_0
  Typ_Lab
  Prm_[PATH]  Define Path specifications
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Name    Define Path Name :
  Typ_Char,8
 Fld_3
  Prm_nPts    Number of points
  Typ_Int
  Def_2
 Fld_4
  Prm_nSets   Number of data sets
  Typ_Int
  Def_30
 Fld_5
  Prm_nDiv    Number of divisions
  Typ_Int
  Def_20
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_NOTE: The number of specified points (nPts) must equal
 Fld_0
  Typ_Lab
  Prm_      the number of defined points (PPATH command)
Cal_Fnc_PPATH_Lc_1
:E End
:! 
:N Fnc_PPATH_Lc_1
:S    629,   120,   502
:T Cmd
:C )! Fnc_PPATH_Lc_1
:D By Location in Global Cartesian
:H Hlp_C_PPATH
Inp_NoApply
Cmd_PPATH
 Fld_0
  Typ_Lab
  Prm_[PPATH]  Create Path points in Global Cartesian Coordinate System
 Fld_2
  Prm_NPT    Path point number
  Typ_INT
  Def_Blank
 Fld_3
  Typ_Def_0
 Fld_4
  Prm_X,Y,Z  Location in Global CS
  Typ_REAL3
 Fld_7
  Prm_CS      Interpolation CS
  Typ_INT
  Def_*GET(ACTIVE,,CSYS)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_NOTE: The number of defined path points must equal
 Fld_0
  Typ_Lab
  Prm_      the number of specified points (PATH command)
Cal_Fnc_PPATH_Lc_1
:E END
:! 
:N Fnc_PPATH_NE
:S    127,    66,    54
:T Cmd
:C )! Fnc_PPATH_NE
Inp_P
Cmd_PPATH,P51X
 Fld_2
  Typ_Def_1
Cmd_PATH,STAT
:E END
:! 
:N Fnc_PPATH_Nd
:S    283,   107,   169
:T Cmd_P
:C )! Fnc_PPATH_Nd
:A By Nodes
:D By Nodes
:H Hlp_C_PPATH
Inp_P
Cmd_)!
 Fld_2
  Prm_[PPATH]  Pick or enter nodes defining the path
  Typ_NODE
  Min_2
  Cnt_s
  Pdp_1
Cmd_)*SET,_z1
 Fld_2
  Typ_Def_*FENT(2,0) 
Cal_Fnc_PPATH_Nd1
:E END
:! 
:N Fnc_PPATH_Nd1
:S    423,   103,   313
:T Cmd
:C )!  Fnc_PPATH
:A By Nodes
:D By Nodes
:H Hlp_C_PATH
Inp_NoApply
Cmd_PATH
 Fld_0
  Typ_Lab
  Prm_[PATH]  Define Path specifications
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Name    Define Path Name :
  Typ_Char,8
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Prm_nSets   Number of data sets
  Typ_Int
  Def_30
 Fld_5
  Prm_nDiv    Number of divisions
  Typ_Int
  Def_20
Cal_Fnc_PPATH_NE
:E End
:! 
:N Fnc_PPATH_WP
:S    802,   121,   674
:T Cmd
:C )! Fnc_PPATH_WP
:A On Working Plane
:D On Working Plane
:H Hlp_C_PPATH
Cmd_)/NOPR
Cmd_)*SET,_zv
 Fld_0
  Typ_Lab
  Prm_[PATH]    Create Path on Working Plane 
 Fld_2
  Prm_      Type of path to create
   Typ_Lis_RadioB
    Lis_Arbitrary path  ,1
    Lis_Circular  path  ,2
   Def_1
 Fld_0
  Typ_Sep
Cmd_)*SET,_zz
 Fld_2
  Prm_[/VIEW]   Plot Working Plane
  Typ_Logi,No,Yes
  Def_1
Cmd_)*SET,_zw
 Fld_2
  Prm_               Window number
  Typ_LIS_OPTIONB
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
   LIS_All active wind ,6
  Def_1
Cmd_)*SET,_zu
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[/PBC]  Show path on display
  Typ_Logi,No,Yes
  Def_1
Cmd_)/GO
Cal_Fnc_PPATH_Ci0
:E END
:! 
:N Fnc_PPATH_WP0
:S    299,   124,   168
:T Cmd_P
:C )! Fnc_PPATH_WP
:A On Working Plane
:D On Working Plane
:H Hlp_C_PPATH
Inp_P
Cmd_)!
 Fld_2
  Prm_[PPATH]  Pick or enter points defining the path
  Typ_XYZ
  Min_2
  Cnt_s
  Pdp_1
Cmd_)*SET,_z1
 Fld_2
  Typ_Def_*FPIK(2,0)
Cal_Fnc_PPATH_WP1
:E END
:! 
:N Fnc_PPATH_WP1
:S    444,   123,   314
:T Cmd
:C )!  Fnc_PPATH_WP1
:A On Working Plane
:D On Working Plane
:H Hlp_C_PATH
Inp_NoApply
Cmd_PATH
 Fld_0
  Typ_Lab
  Prm_[PATH]  Define Path specifications
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Name    Define Path Name :
  Typ_Char,8
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Prm_nSets   Number of data sets
  Typ_Int
  Def_30
 Fld_5
  Prm_nDiv    Number of divisions
  Typ_Int
  Def_20
Cal_Fnc_PPATH_WPE
:E End
:! 
:N Fnc_PPATH_WPE
:S    149,    68,    74
:T Cmd
:C )! Fnc_PPATH_WPE
Inp_P
Cmd_PPATH,P51X
Cmd_/PBC,PATH
 Fld_2
  Typ_Def_*PAR(_zu)
Cmd_/REPLOT
:E END
:! 
:N Fnc_PRANGE_p1
:S    448,   156,   285
:T Command
:C )! Fnc_PRANGE_p1
:A Path Range
:D Path Range for Lists and Plots
:H Hlp_C_PRANGE
:K #(POST1+RESULTS)
Cmd_PRANGE
 Fld_0
  Typ_Lab
  Prm_[PRANGE]  Path Range for Lists and Plots
 Fld_0
  Typ_Lab
  Prm_VMIN,VMAX
 Fld_3
  Prm_      Path distance range
  Typ_REAL2
 Fld_2
  Prm_LINC  Interpolation pt increment
  Typ_INT
  Def_1
 Fld_4
  Prm_Labl  X-axis variable
  Typ_Lis
  LIS_*READ,PATH
:E END
:! 
:N Fnc_PRCAMPBELL
:S    713,   109,   597
:T Cmd
:A Print Campbell
:D Print Campbell diagram
:H Hlp_C_PRCAMP
Inp_NoApply
Cmd_PRCAMP
Fld_0
 Typ_Lab
 Prm_[PRCAMP] Print Campbell diagram data
Fld_2
 Prm_Sorting of backward or forward whirl frequencies?
 Typ_Logi,No,Yes
Fld_3
 Prm_Slope of line to be plotted
 Typ_Real
Fld_4
 Prm_Unit for rotational angular velocities
 Typ_LIS_OPTIONB
 LIS_Radians per second,RDS
 LIS_Revs per minute   ,RPM
Fld_5
 Prm_Lower end of frequency range
 Typ_Real
 Def_0
Fld_6
 Prm_Rotating component name
 Typ_Lis_OptionB
 Lis_*READ,CM
Fld_7
 Prm_Plot the stability values
 Typ_LIS_OPTIONB
 LIS_Frequencies           ,0
 LIS_Stability values      ,1
 LIS_Logarithmic decrements,2
:E END
:! 
:N Fnc_PRED
:S    536,   275,   254
:T Command
:C )! Fnc_PRED
:C )/NOPR
:C )*GET,_z1,common,,stepcm,,int,6 ! predictor key
:C )/GO
:A Predictor
:D Predictor
:K #(PREP7*SOLUTION)
:K #((pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL)
:P (LINPLUS*THERMAL)
:H Hlp_C_PRED
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_2
  Prm_[PRED]  DOF solution predictor
  Typ_LIS_OPTIONB
  K_LN(NLCNTRL)
  LIS_Program Chosen  ,3
  LIS_Off             ,0
  LIS_On after 1 sbstp,1
  LIS_On for all sbstp,2
  Def_*PAR(_z1)
Cmd_)/GO
Cal_Fnc_PRED2
:E END
:! 
:N Fnc_PRED2
:S    296,   139,   150
:T Command
:C )! Fnc_PRED2
:C )/NOPR
:C )KEYW,KEY0,0,KEY1,0,KEY2,0,KEY3,0
:C )KEYW,KEY%_z2%,1
:C )/GO
Inp_P
Cmd_PRED
 Fld_2
  K_FL(KEY0)
  Typ_Def_ 
 Fld_2
  K_FL(KEY1)
  Typ_Def_ON
 Fld_2
  K_FL(KEY2)
  Typ_Def_ON,,ON
 Fld_2
  K_FL(KEY3)
  Typ_Def_-1
:E END
:! 
:N Fnc_PRERR
:S    213,   190,    16
:T Cmd_N
:C )! Fnc_PRERR
:A Percent Error
:D List Percent Error
:K ((POST1+RESULTS)+(lsdyna))
:K #(STRUCTRL*THERMAL)
:P (LINPLUS*THERMAL)
:H Hlp_C_PRERR
Inp_P
Cmd_PRERR
:E END
:! 
:N Fnc_PRESOL
:S    264,   141,   116
:T Command
:C )!Fnc_PRESOL
:A Element Solution
:K #(POST1+RESULTS)
:P (LSDYNA*LINPLUS*THERMAL*ELECMAG)
Inp_P
K_LN(oldpost)
Cmd_)~eui,'euidl::post1::listResults::listResult PRESOL'
Cmd_)!
K_LN(OLDPOST)
Cal_Fnc_oldPRESOL
:E END
:! 
:N Fnc_PRETAB
:S    665,   207,   451
:T Cmd
:C )! Fnc_PRETAB
:A List Elem Table
:D List Element Table Data
:C )/NOPR
:C )*GET,_z1,ETAB,,NCOL,MAX
:C )KEYW,KEY1,_z1
:C )/GO
:K (POST1+RESULTS)
:H Hlp_C_PRETAB
Cmd_PRETAB
 Fld_0
  Typ_Lab
  Prm_[PRETAB]  List Element Table Data
 Fld_2
  K_FL(KEY1)
  Typ_MLis
  Prm_Lab1-9  Items to be listed
  LIS_*READ,ETAB
   LIS_Items  1-10 GRP1,"GRP1"
   LIS_Items 11-20 GRP2,"GRP2"
   LIS_Items 21-30 GRP3,"GRP3"
   LIS_Items 31-40 GRP4,"GRP4"
   LIS_Items 41-50 GRP5,"GRP5"
  Bnd_0.0,9.0
 Fld_2
  K_FL(key1)
  Typ_MLis
  Prm_Lab1-9  Items to be listed
   LIS_*READ,ETAB
  Bnd_0.0,9.0
Cmd_)/NOPR
Cmd_)KEYW,key1,0
Cmd_)/GO
:E END
:! 
:N Fnc_PRETAB_dummy
:S    167,   132,    28
:T Command
:C )! Fnc_PRETAB_dummy
:A Elem Table Data
:H Hlp_C_PRETAB
:K (POST1+RESULTS)
Inp_P
Cmd_)!
Cal_Fnc_PRETAB
:E END
:! 
:N Fnc_PRI2
:S    272,   133,   132
:T Cmd_P
:C )! Fnc_PRI2
:A By Vertices
:D Prism by Vertices
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_PRI2
Inp_P
Cmd_PRI2
 Fld_2
  Typ_XYZ
  Prm_[PRI2] Pick vertices on WP (repick first pt to close) and Z depth
  Min_3
  Max_144
  Rub_101
:E END
:! 
:N Fnc_PRI2_2d
:S    301,   130,   164
:T Cmd_P
:C )! Fnc_PRI2_2d
:A By Vertices
:D Polygon by Vertices
:K #(PREP7)
:H Hlp_C_PRI2
Inp_P
Cmd_PRI2
 Fld_2
  Typ_XYZ
  Prm_[PRI2]  Pick vertices on WP (repick first point to close)
  Min_3
  Max_144
  Rub_1
 Fld_3
  Typ_DEF_0.0
 Fld_4
  Typ_DEF_0.0
:E END
:! 
:N Fnc_PRITER
:S    154,   130,    17
:T Cmd_N
:C )! Fnc_PRITER
:A Iteration Summry
:D List Iteration Summary
:K #(POST1+RESULTS)
Inp_P
Cmd_PRITER
:E END
:! 
:N Fnc_PRNLD
:S   2549,   146,  2383
:T Cmd
:C )! Fnc_PRNLD
:A Nodal Loads
:D List Nodal Loads
:H Hlp_C_PRNLD
:K (lsdyna)
:K #(POST1+RESULTS+cfd)
Cmd_PRNLD
 Fld_0
  Prm_[PRNLD]  List Nodal Loads
 Fld_2
  K_FL(STRUCTRL+multifld)
  P_FL(LINPLUS)
  Prm_Lab  Load to be listed
  Typ_LIS
  LIS_All items       ," "
  LIS_Struct force  FX,FX
  LIS_              FY,FY
  LIS_              FZ,FZ
  LIS_All struc forc F,F
  LIS_Struct moment MX,MX
  LIS_              MY,MY
  LIS_              MZ,MZ
  LIS_All struc mome M,M
!  
Fld_2
  K_FL(THERMAL+multifld)
  P_FL(THERMAL)
  Prm_Lab  Load to be listed
  Typ_LIS
  LIS_Heat flow   HEAT,HEAT
!  
Fld_2
  Prm_Lab  Load to be listed
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid)
  Typ_LIS
  LIS_All items       ," "
  P_LN(ELECMAG)
  LIS_Mag flux    FLUX,FLUX
  P_LN(ELECMAG)
  LIS_Curr segmt  CSGX,CSGX
  P_LN(ELECMAG)
  LIS_            CSGY,CSGY
  P_LN(ELECMAG)
  LIS_            CSGZ,CSGZ
  P_LN(ELECMAG)
  LIS_All curr seg CSG,CSG
  P_LN(THERMAL*ELECMAG)
  LIS_Elec currnt AMPS,AMPS
  P_LN(ELECMAG)
  LIS_Elec charge CHRG,CHRG
  P_LN(ELECMAG)
  LIS_Current     CURT,CURT
  P_LN(ELECMAG)
  LIS_Voltage drp VLTG,VLTG
!  
Fld_2
  Prm_Lab  Load to be listed
  K_FL(FLUID+multifld)
  Typ_LIS
  LIS_All items       ," "
  P_LN(FULL_ANS)
  LIS_Flow rate   FLOW,FLOW
  P_LN(THERMAL)
  LIS_Heat flow   HEAT,HEAT
!  
Fld_2
  Prm_Lab  Load to be listed
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID))
  Typ_LIS
  LIS_1st 10 items    ," "
  P_LN(LINPLUS)
  LIS_Struct force  FX,FX
  P_LN(LINPLUS)
  LIS_              FY,FY
  P_LN(LINPLUS)
  LIS_              FZ,FZ
  P_LN(LINPLUS)
  LIS_All struc forc F,F
  P_LN(LINPLUS)
  LIS_Struct moment MX,MX
  P_LN(LINPLUS)
  LIS_              MY,MY
  P_LN(LINPLUS)
  LIS_              MZ,MZ
  P_LN(LINPLUS)
  LIS_All struc mome M,M
!  
  P_LN(THERMAL)
  LIS_Heat flow   HEAT,HEAT
!  
  P_LN(ELECMAG)
  LIS_Mag flux    FLUX,FLUX
  P_LN(ELECMAG)
  LIS_Curr segmt  CSGX,CSGX
  P_LN(ELECMAG)
  LIS_            CSGY,CSGY
  P_LN(ELECMAG)
  LIS_            CSGZ,CSGZ
  P_LN(ELECMAG)
  LIS_All curr seg CSG,CSG
  P_LN(THERMAL*ELECMAG)
  LIS_Elec currnt AMPS,AMPS
  P_LN(ELECMAG)
  LIS_Elec charge CHRG,CHRG
  P_LN(ELECMAG)
  LIS_Current     CURT,CURT
  P_LN(ELECMAG)
  LIS_Voltage drp VLTG,VLTG
!  
  P_LN(FULL_ANS)
  LIS_Flow rate   FLOW,FLOW
!  
 Fld_3
  Prm_TOL  Tolerance about zero -
  Typ_real
 Fld_0
  Typ_Lab
  Prm_     - within which loads are not printed
 Fld_4
  Prm_ITEM    Selected Nodes
  Typ_LIS_OPTIONB
   LIS_ALL   , 
   LIS_Contact Only ,CONT
!  
:E END OF Fnc_PRNLD
:! 
:N Fnc_PRNSOL
:S    226,   103,   116
:T Command
:C )!Fnc_PRNSOL
:A Nodal Solution
:K #(POST1+RESULTS)
Inp_P
K_LN(oldpost)
Cmd_)~eui,'euidl::post1::listResults::listResult PRNSOL'
Cmd_)!
K_LN(OLDPOST)
Cal_Fnc_oldPRNSOL
:E END
:! 
:N Fnc_PRNSOL_2
:S    235,   143,    69
:T Cmd
:C )! Fnc_PRNSOL_2
:A Nodal Solution
:D List Nodal Solution
:H Hlp_C_PRNSOL
:K #(POST1+RESULTS)
Inp_P
Cmd_PRNSOL
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
:E END OF Fnc_PRNSOL_2
:! 
:N Fnc_PRO
:S    115,   100,     8
:T Command
:C )! Fnc_PRO ORPHAN
:A PRO
:C  
:D Ansys command PRO
Cmd_PRO
:E END
:! 
:N Fnc_PROD
:S    674,   136,   531
:T Command
:C )! Fnc_PROD
:A Multiply
:D Multiply Time-History Variables
:K #(POST26)
:H Hlp_C_PROD
Cmd_PROD
Fld_0
Typ_Lab
Prm_[PROD]        IR = (FACTA * IA) * (FACTB * IB) * (FACTC * IC)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  1st Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     1st Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_10
Prm_FACTB  2nd Factor
Typ_real
Def_1.0
Fld_4
Prm_IB     2nd Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_11
Prm_FACTC  3rd Factor
Typ_real
Def_1.0
Fld_5
Prm_IC     3rd Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_PRORBIT
:S    126,    95,    24
:T Cmd
:A Print Orbit
:D Printing orbit 
:H Hlp_C_PRORB
Inp_P
Cmd_) !
Cmd_PRORB
:E END
:! 
:N Fnc_PRPATH
:S    279,   136,   136
:T Cmd
:C )! Fnc_PRPATH
:A List Path Items
:D List Path Items
:H Hlp_C_PRPATH
:K #(POST1+RESULTS)
Cmd_PRPATH
 Fld_0
  Prm_[PRPATH]  List Path Data
 Fld_2
  Prm_Lab1-6  Path items to be listed
  Typ_MLis
  LIS_*READ,PATH
  Bnd_0.0,6.0
:E END
:! 
:N Fnc_PRPATH_dummy
:S    165,   128,    30
:T Command
:C )! Fnc_PRPATH_dummy
:A Path Items
:H Hlp_C_PRPATH
:K #(POST1+RESULTS)
Inp_P
Cmd_)!
Cal_Fnc_PRRECALL
:E END
:! 
:N Fnc_PRRECALL
:S    320,   133,   180
:T Cmd
:C )!  Fnc_PATHRECALL
:H Hlp_C_PATH
:A Recall Path
:D Recall Path
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_PATH
 Fld_0
  Typ_Lab
  Prm_[PATH]  Define Path specifications
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Name   Recall Path by Name :
  Typ_Lis
  LIS_*READ,DPTH
Cal_Fnc_PRPATH
:E END
:! 
:N Fnc_PRRSOL
:S   8259,   360,  7878
:T Cmd
:C )! Fnc_PRRSOL
:C )/nopr
:C )!
:C )maxlayer = 0
:C )*GET,maxlayer,ACTIVE,,DOF,LTEM
:C )*DO,i,1,32
:C )keyw,layer%i%,0
:C )*ENDDO
:C )*DO,i,1,maxlayer
:C )keyw,layer%i%,1
:C )*ENDDO
:C )/go
:A Reaction Solu
:D List Reaction Solution
:H Hlp_C_PRRSOL
:K (lsdyna)
:K #(POST1+RESULTS+cfd)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_PRRSOL
 Fld_0
  Prm_[PRRSOL]  List Reaction Solution
 Fld_2
  K_FL(STRUCTRL+multifld)
  P_FL(LINPLUS)
  Prm_Lab   Item to be listed
  Typ_LIS
  LIS_All items       ," "
  LIS_Struct force  FX,FX
  LIS_              FY,FY
  LIS_              FZ,FZ
  LIS_All struc forc F,F
  LIS_Struct moment MX,MX
  LIS_              MY,MY
  LIS_              MZ,MZ
  LIS_All struc mome M,M
!  
Fld_2
  K_FL(THERMAL+multifld)
  P_FL(THERMAL)
  Prm_Lab   Item to be listed
  Typ_LIS
  K_LN(laytherm)
  LIS_Heat flow   HEAT,HEAT
  K_LN(LAYTHERM+LAYER1)
  LIS_Heat flow  HBOT,HBOT
  K_LN(LAYTHERM+LAYER3)
  LIS_Heat flow   HE2,HE2
  K_LN(LAYTHERM+LAYER4)
  LIS_Heat flow   HE3,HE3
  K_LN(LAYTHERM+LAYER5)
  LIS_Heat flow   HE4,HE4
  K_LN(LAYTHERM+LAYER6)
  LIS_Heat flow   HE5,HE5
  K_LN(LAYTHERM+LAYER7)
  LIS_Heat flow   HE6,HE6
  K_LN(LAYTHERM+LAYER8)
  LIS_Heat flow   HE7,HE7
  K_LN(LAYTHERM+LAYER9)
  LIS_Heat flow   HE8,HE8
  K_LN(LAYTHERM+LAYER10)
  LIS_Heat flow   HE9,HE9
  K_LN(LAYTHERM+LAYER11)
  LIS_Heat flow   HE10,HE10
  K_LN(LAYTHERM+LAYER12)
  LIS_Heat flow   HE11,HE11
  K_LN(LAYTHERM+LAYER13)
  LIS_Heat flow   HE12,HE12
  K_LN(LAYTHERM+LAYER14)
  LIS_Heat flow   HE12,HE13
  K_LN(LAYTHERM+LAYER15)
  LIS_Heat flow   HE14,HE14
  K_LN(LAYTHERM+LAYER16)
  LIS_Heat flow   HE15,HE15
  K_LN(LAYTHERM+LAYER17)
  LIS_Heat flow   HE16,HE16
  K_LN(LAYTHERM+LAYER18)
  LIS_Heat flow   HE17,HE17
  K_LN(LAYTHERM+LAYER19)
  LIS_Heat flow   HE18,HE18
  K_LN(LAYTHERM+LAYER20)
  LIS_Heat flow   HE19,HE19
  K_LN(LAYTHERM+LAYER21)
  LIS_Heat flow   HE20,HE20
  K_LN(LAYTHERM+LAYER22)
  LIS_Heat flow   HE21,HE21
  K_LN(LAYTHERM+LAYER23)
  LIS_Heat flow   HE22,HE22
  K_LN(LAYTHERM+LAYER24)
  LIS_Heat flow   HE23,HE23
  K_LN(LAYTHERM+LAYER25)
  LIS_Heat flow   HE24,HE24
  K_LN(LAYTHERM+LAYER26)
  LIS_Heat flow   HE25,HE25
  K_LN(LAYTHERM+LAYER27)
  LIS_Heat flow   HE26,HE26
  K_LN(LAYTHERM+LAYER28)
  LIS_Heat flow   HE27,HE27
  K_LN(LAYTHERM+LAYER29)
  LIS_Heat flow   HE28,HE28
  K_LN(LAYTHERM+LAYER30)
  LIS_Heat flow   HE29,HE29
  K_LN(LAYTHERM+LAYER31)
  LIS_Heat flow   HE30,HE30
  K_LN(LAYTHERM+LAYER32)
  LIS_Heat flow   HE31,HE31
  K_LN(LAYTHERM+LAYER2)
  LIS_Heat flow  HTOP,HTOP
!  
Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid)
  Prm_Lab   Item to be listed
  Typ_LIS
  LIS_All items       ," "
  P_LN(ELECMAG)
  LIS_Mag flux    FLUX,FLUX
  P_LN(ELECMAG)
  LIS_Curr segmt  CSGX,CSGX
  P_LN(ELECMAG)
  LIS_            CSGY,CSGY
  P_LN(ELECMAG)
  LIS_            CSGZ,CSGZ
  P_LN(ELECMAG)
  LIS_All curr seg CSG,CSG
  P_LN(THERMAL*ELECMAG)
  LIS_Elec currnt AMPS,AMPS
  P_LN(ELECMAG)
  LIS_Elec charge CHRG,CHRG
  P_LN(ELECMAG)
  LIS_Current     CURT,CURT
  P_LN(ELECMAG)
  LIS_Voltage drp VLTG,VLTG
!  
Fld_2
  K_FL(FLUID+multifld)
  Prm_Lab   Item to be listed
  Typ_LIS
  LIS_All items       ," "
  P_LN(FULL_ANS)
  LIS_Flow rate   FLOW,FLOW
  K_LN(laytherm)
  LIS_Heat flow   HEAT,HEAT
  K_LN(THERMAL+LAYTHERM+LAYER1)
  LIS_Heat flow  HBOT,HBOT
  K_LN(THERMAL+LAYTHERM+LAYER3)
  LIS_Heat flow   HE2,HE2
  K_LN(THERMAL+LAYTHERM+LAYER4)
  LIS_Heat flow   HE3,HE3
  K_LN(THERMAL+LAYTHERM+LAYER5)
  LIS_Heat flow   HE4,HE4
  K_LN(THERMAL+LAYTHERM+LAYER6)
  LIS_Heat flow   HE5,HE5
  K_LN(THERMAL+LAYTHERM+LAYER7)
  LIS_Heat flow   HE6,HE6
  K_LN(THERMAL+LAYTHERM+LAYER8)
  LIS_Heat flow   HE7,HE7
  K_LN(THERMAL+LAYTHERM+LAYER9)
  LIS_Heat flow   HE8,HE8
  K_LN(THERMAL+LAYTHERM+LAYER10)
  LIS_Heat flow   HE9,HE9
  K_LN(THERMAL+LAYTHERM+LAYER11)
  LIS_Heat flow   HE10,HE10
  K_LN(THERMAL+LAYTHERM+LAYER12)
  LIS_Heat flow   HE11,HE11
  K_LN(THERMAL+LAYTHERM+LAYER13)
  LIS_Heat flow   HE12,HE12
  K_LN(THERMAL+LAYTHERM+LAYER14)
  LIS_Heat flow   HE12,HE13
  K_LN(THERMAL+LAYTHERM+LAYER15)
  LIS_Heat flow   HE14,HE14
  K_LN(THERMAL+LAYTHERM+LAYER16)
  LIS_Heat flow   HE15,HE15
  K_LN(THERMAL+LAYTHERM+LAYER17)
  LIS_Heat flow   HE16,HE16
  K_LN(THERMAL+LAYTHERM+LAYER18)
  LIS_Heat flow   HE17,HE17
  K_LN(THERMAL+LAYTHERM+LAYER19)
  LIS_Heat flow   HE18,HE18
  K_LN(THERMAL+LAYTHERM+LAYER20)
  LIS_Heat flow   HE19,HE19
  K_LN(THERMAL+LAYTHERM+LAYER21)
  LIS_Heat flow   HE20,HE20
  K_LN(THERMAL+LAYTHERM+LAYER22)
  LIS_Heat flow   HE21,HE21
  K_LN(THERMAL+LAYTHERM+LAYER23)
  LIS_Heat flow   HE22,HE22
  K_LN(THERMAL+LAYTHERM+LAYER24)
  LIS_Heat flow   HE23,HE23
  K_LN(THERMAL+LAYTHERM+LAYER25)
  LIS_Heat flow   HE24,HE24
  K_LN(THERMAL+LAYTHERM+LAYER26)
  LIS_Heat flow   HE25,HE25
  K_LN(THERMAL+LAYTHERM+LAYER27)
  LIS_Heat flow   HE26,HE26
  K_LN(THERMAL+LAYTHERM+LAYER28)
  LIS_Heat flow   HE27,HE27
  K_LN(THERMAL+LAYTHERM+LAYER29)
  LIS_Heat flow   HE28,HE28
  K_LN(THERMAL+LAYTHERM+LAYER30)
  LIS_Heat flow   HE29,HE29
  K_LN(THERMAL+LAYTHERM+LAYER31)
  LIS_Heat flow   HE30,HE30
  K_LN(THERMAL+LAYTHERM+LAYER32)
  LIS_Heat flow   HE31,HE31
  K_LN(THERMAL+LAYTHERM+LAYER2)
  LIS_Heat flow  HTOP,HTOP
! 
 Fld_0
  K_FL(DIFFUSN+multifld)
  Prm_      List diffusion rate
 Fld_2
  K_FL(DIFFUSN+multifld)
  Typ_Def_RATE
Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID))
  Prm_Lab   Item to be listed
  Typ_LIS
  LIS_1st 10 items    ," "
  P_LN(LINPLUS)
  LIS_Struct force  FX,FX
  P_LN(LINPLUS)
  LIS_              FY,FY
  P_LN(LINPLUS)
  LIS_              FZ,FZ
  P_LN(LINPLUS)
  LIS_All struc forc F,F
  P_LN(LINPLUS)
  LIS_Struct moment MX,MX
  P_LN(LINPLUS)
  LIS_              MY,MY
  P_LN(LINPLUS)
  LIS_              MZ,MZ
  P_LN(LINPLUS)
  LIS_All struc mome M,M
  P_LN(THERMAL)
  K_LN(laytherm)
  LIS_Heat flow   HEAT,HEAT
  K_LN(THERMAL+LAYTHERM+LAYER1)
  LIS_Heat flow  HBOT,HBOT
  K_LN(THERMAL+LAYTHERM+LAYER3)
  LIS_Heat flow   HE2,HE2
  K_LN(THERMAL+LAYTHERM+LAYER4)
  LIS_Heat flow   HE3,HE3
  K_LN(THERMAL+LAYTHERM+LAYER5)
  LIS_Heat flow   HE4,HE4
  K_LN(THERMAL+LAYTHERM+LAYER6)
  LIS_Heat flow   HE5,HE5
  K_LN(THERMAL+LAYTHERM+LAYER7)
  LIS_Heat flow   HE6,HE6
  K_LN(THERMAL+LAYTHERM+LAYER8)
  LIS_Heat flow   HE7,HE7
  K_LN(THERMAL+LAYTHERM+LAYER9)
  LIS_Heat flow   HE8,HE8
  K_LN(THERMAL+LAYTHERM+LAYER10)
  LIS_Heat flow   HE9,HE9
  K_LN(THERMAL+LAYTHERM+LAYER11)
  LIS_Heat flow   HE10,HE10
  K_LN(THERMAL+LAYTHERM+LAYER12)
  LIS_Heat flow   HE11,HE11
  K_LN(THERMAL+LAYTHERM+LAYER13)
  LIS_Heat flow   HE12,HE12
  K_LN(THERMAL+LAYTHERM+LAYER14)
  LIS_Heat flow   HE12,HE13  
  K_LN(THERMAL+LAYTHERM+LAYER15) 
  LIS_Heat flow   HE14,HE14
  K_LN(THERMAL+LAYTHERM+LAYER16)
  LIS_Heat flow   HE15,HE15
  K_LN(THERMAL+LAYTHERM+LAYER17)
  LIS_Heat flow   HE16,HE16
  K_LN(THERMAL+LAYTHERM+LAYER18)
  LIS_Heat flow   HE17,HE17
  K_LN(THERMAL+LAYTHERM+LAYER19)
  LIS_Heat flow   HE18,HE18
  K_LN(THERMAL+LAYTHERM+LAYER20)
  LIS_Heat flow   HE19,HE19
  K_LN(THERMAL+LAYTHERM+LAYER21)
  LIS_Heat flow   HE20,HE20
  K_LN(THERMAL+LAYTHERM+LAYER22)
  LIS_Heat flow   HE21,HE21
  K_LN(THERMAL+LAYTHERM+LAYER23)
  LIS_Heat flow   HE22,HE22
  K_LN(THERMAL+LAYTHERM+LAYER24)
  LIS_Heat flow   HE23,HE23
  K_LN(THERMAL+LAYTHERM+LAYER25)
  LIS_Heat flow   HE24,HE24
  K_LN(THERMAL+LAYTHERM+LAYER26)
  LIS_Heat flow   HE25,HE25
  K_LN(THERMAL+LAYTHERM+LAYER27)
  LIS_Heat flow   HE26,HE26
  K_LN(THERMAL+LAYTHERM+LAYER28)
  LIS_Heat flow   HE27,HE27
  K_LN(THERMAL+LAYTHERM+LAYER29)
  LIS_Heat flow   HE28,HE28
  K_LN(THERMAL+LAYTHERM+LAYER30)
  LIS_Heat flow   HE29,HE29
  K_LN(THERMAL+LAYTHERM+LAYER31)
  LIS_Heat flow   HE30,HE30
  K_LN(THERMAL+LAYTHERM+LAYER32)
  LIS_Heat flow   HE31,HE31
  K_LN(THERMAL+LAYTHERM+LAYER2)
  LIS_Heat flow  HTOP,HTOP
  P_LN(ELECMAG)
  LIS_Mag flux    FLUX,FLUX
  P_LN(ELECMAG)
  LIS_Curr segmt  CSGX,CSGX
  P_LN(ELECMAG)
  LIS_            CSGY,CSGY
  P_LN(ELECMAG)
  LIS_            CSGZ,CSGZ
  P_LN(ELECMAG)
  LIS_All curr seg CSG,CSG
  P_LN(THERMAL*ELECMAG)
  LIS_Elec currnt AMPS,AMPS
  P_LN(ELECMAG)
  LIS_Elec charge CHRG,CHRG
  P_LN(ELECMAG)
  LIS_Current     CURT,CURT
  P_LN(ELECMAG)
  LIS_Voltage drp VLTG,VLTG
  P_LN(FULL_ANS)
  LIS_Flow rate   FLOW,FLOW
  K_LN(DIFFUSN)
  LIS_Diffsn rate RATE,RATE
!  
:E END OF Fnc_PRRSOL
:! 
:N Fnc_PRSECT
:S    426,   158,   261
:T Cmd
:C )!  Fnc_PRSECT
:A List Linearized
:D List Linearized Stresses
:K (POST1+RESULTS)
:P (LINPLUS)
:H Hlp_C_PRSECT
Cmd_PRSECT
 Fld_0
  Typ_Lab
  Prm_[PRSECT]  List Linearized Stresses 
Fld_0
Typ_Sep
 Fld_0
  Typ_Lab
  Prm_For axisymmetric models
 Fld_2
  Typ_REAL
  Prm_  RHO  Avg radius of curvature
  Def_Blank
 Fld_3
  Prm_  KBR  Ignore bending stresses?
  Typ_LOGI,No,Yes
:E End
:! 
:N Fnc_PRSECT_dummy
:S    181,   146,    28
:T Command 
:C )! Fnc_PRSECT_dummy
:A Linearized Strs
:H Hlp_C_PRSECT
:K (POST1+RESULTS)
:P (LINPLUS)
Inp_P
Cmd_)!
Cal_Fnc_PRSECT
:E End
:! 
:N Fnc_PRVAR_p26
:S    463,   149,   307
:T Command
:C )! Fnc_PRVAR_p26
:A List Variables
:D List Time-History Variables
:K #(POST26)
:H Hlp_C_PRVAR
Cmd_PRVAR
Fld_0
Typ_Lab
Prm_[PRVAR]  List Time-History Variables
Fld_2
Prm_NVAR1   1st variable to list
Typ_int
Fld_3
Prm_NVAR2   2nd variable
Typ_int
Fld_4
Prm_NVAR3   3rd variable
Typ_int
Fld_5
Prm_NVAR4   4th variable
Typ_int
Fld_6
Prm_NVAR5   5th variable
Typ_int
Fld_7
Prm_NVAR6   6th variable
Typ_int
:E END
:! 
:N Fnc_PRVECT
:S   4706,   133,  4552
:T Cmd
:C )! Fnc_PRVECT
:A Vector Data
:D List Vector Data
:H Hlp_C_PRVECT
:K #(POST1+RESULTS)
Cmd_PRVECT
 Fld_0
  Prm_[PRVECT]  List Vector Data
 Fld_2
  K_FL(STRUCTRL+multifld)
  Prm_Item   Vector item to be listed
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation    U,U
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation     ROT,ROT
!
  P_LN(LINPLUS)
  IDX_Stress          ,Principal      S,S
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,Principal   EPTO,EPTO
!
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Principal   EPTT,EPTT
!
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Principal   EPEL,EPEL
!
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Strain-thermal  ,Principal   EPTH,EPTH
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Principal   EPPL,EPPL
!
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Strain-creep    ,Principal   EPCR,EPCR
!
Fld_2
  K_FL(THERMAL+multifld)
  P_FL(THERMAL)
  Prm_Item   Vector item to be listed
  Typ_IDX
  IDX_Flux & gradient ,Thermal flux  TF,TF
  IDX_Flux & gradient ,Thermal grad  TG,TG
!
Fld_2
  K_FL(DIFFUSN+multifld)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  IDX_Flux & gradient ,Diffusn flux  DF,DF
  IDX_Flux & gradient ,Concent grad  CG,CG
  IDX_Strain-other    ,Diffusion   EPDI,EPDI
!
Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid)
  P_FL(ELECMAG)
  Prm_Item  Vector item to be listed
  Typ_IDX
  K_LN((VECTORP*SCALARP+edgeflx+edgeelc+elem2d)*NOFILTER)
  IDX_DOF solution    ,Mag vect poten A,A
! 
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,Mag flux dens  B,B
  K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,Mag field      H,H
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,Elec flux dens D,D
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,Elec field    EF,EF
! 
  K_LN(EDGEELC*NOFILTER)
  IDX_Energy          ,Poynting vect  P,P
!
  K_LN(edgeelc*NOFILTER)
  IDX_Nodal force data,Mag force   FMAG,FMAG
! 
  K_LN(edgeelc*NOFILTER)
  IDX_Current Density ,Total         JT,JT
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Current Density ,Cpl'd Source  JS,JS
  K_LN(EDGEELC*ELECCOND*NOFILTER)
  IDX_Current Density ,Conduction    JC,JC
! 
Fld_2
  K_FL(FLUID+multifld)
  Prm_Item   Vector item to be listed
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity       V,V
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressure grad PG,PG
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux  TF,TF
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad  TG,TG
!
Fld_2
  K_FL(CFD)
  Prm_Item   Vector item to be listed
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity       V,V
!
Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID*DIFFUSN))
  Prm_Item   Vector item to be listed
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation    U,U
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation     ROT,ROT
  P_LN(ELECMAG)
  K_LN(lsdyna)
  K_LN((VECTORP*SCALARP+edgeflx+edgeelc+elem2d)*NOFILTER)
  IDX_DOF solution    ,Mag vect poten A,A
  K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration   A,A
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity       V,V
!
  P_LN(LINPLUS)
  IDX_Stress          ,Principal      S,S
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,Principal   EPTO,EPTO
!
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Principal   EPTT,EPTT
!
  P_LN(THERMAL)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Thermal flux  TF,TF
  P_LN(THERMAL)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Thermal grad  TG,TG
  K_LN(DIFFUSN)
  IDX_Flux & gradient ,Diffusn flux  DF,DF
  K_LN(DIFFUSN)
  IDX_Flux & gradient ,Concent grad  CG,CG
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Mag flux dens  B,B
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Mag field      H,H
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Elec flux dens D,D
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Elec field    EF,EF
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Pressure grad PG,PG
!
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Energy          ,Poynting vect  P,P
!
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Nodal force data,Mag force   FMAG,FMAG
!
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Current Density ,Total         JT,JT
  K_LN(lsdyna)
  IDX_Current Density ,Cpl'd Source  JS,JS
  P_LN(ELECMAG)
  K_LN(lsdyna+ELECCOND)
  IDX_Current Density ,Conduction    JC,JC
!
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Principal   EPEL,EPEL
!
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Strain-thermal  ,Principal   EPTH,EPTH
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Principal   EPPL,EPPL
!
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Strain-creep    ,Principal   EPCR,EPCR
!
  K_LN(DIFFUSN)
  IDX_Strain-other    ,Diffusion   EPDI,EPDI
!
:E END OF Fnc_PRVECT
:! 
:N Fnc_PSDFRQ_eras
:S    391,   131,   253
:T Command
:C )! Fnc_PSDFRQ_eras
:D Erase Spectral Tables
:H Hlp_C_PSDFRQ
:P (FULL_ANS)
Cmd_)/nopr
Cmd_)*set,_z1
 Fld_2
  Prm_[PSDFRQ]  Erase spectral tables
  Typ_LIS_RADIOB
  LIS_All tables      ,1
  LIS_Table number N  ,2
  Def_2
Cmd_)*CSET,1,1
 Fld_2
  Prm_                 Table number N
  Typ_INT
  Def_0
Cmd_)/go
Cal_Fnc_PSDFRQ_eras2
:E END
:! 
:N Fnc_PSDFRQ_eras2
:S    224,   161,    56
:T Command
:C )! Fnc_PSDFRQ_eras2
:C )/nopr
:C )KEYW,KEY1,0
:C )*if,_z1,eq,1,then
:C )KEYW,KEY1,1
:C )*endif
:C )/go
Inp_P
Cmd_PSDFRQ
 Fld_2
  K_FL(key1)
  Typ_Def_*CPAR(1)
:E END
:! 
:N Fnc_PSDFRQ_erasP
:S    195,   155,    33
:T Command
:C )! Fnc_PSDFRQ_erasP
:A    Erase Tables
:D Erase PSD Tables
:K #(PSDRANDM*NOFILTER)
:P (FULL_ANS)
Inp_P
Cmd_)!
Cal_Fnc_PSDFRQ_eras
:E END
:! 
:N Fnc_PSDGRAPH
:S    481,   188,   286
:T Command
:C )! Fnc_PSDGRAPH
:A    Graph PSD Tables
:D Graph PSD Tables
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:P (FULL_ANS)
:H Hlp_C_PSDGRAPH
Cmd_)PSDGRAPH
 Fld_0
  Typ_Lab
  Prm_[PSDGRAPH]  Graph Frequencies vs PSD Values
 Fld_0
  Typ_Lab
  Prm_Identify the PSD table
 Fld_2
  Prm_    1st PSD table number
  Typ_INT
 Fld_0
  Typ_Lab
  Prm_For cospectral and quadspectral values:
 Fld_3
  Prm_    2nd PSD table number
  Typ_INT
:E END
:! 
:N Fnc_PSDRES
:S   1141,   469,   665
:T Command
:C )! Fnc_PSDRES
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),'OFF','ABS','REL'
:C )*GET,_z1,common,,rancom,,int,50 ! disp soln key      
:C )_z1=_z1+1
:C )*GET,_z2,common,,rancom,,int,51 ! velo soln key      
:C )_z2=_z2+1
:C )*GET,_z3,common,,rancom,,int,52 ! acel soln key      
:C )_z3=_z3+1
:C )/GO
:A    Calc Controls
:D PSD Calculation Controls
:K #(PSDRANDM*NOFILTER)
:P (FULL_ANS)
:H Hlp_C_PSDRES
Inp_NoApply
Cmd_PSDRES
 Fld_0
  Typ_Lab
  Prm_[PSDRES]  PSD Calculation Controls
 Fld_2
  Typ_Def_DISP
 Fld_3
  Prm_Displacement solution   (DISP)
  Typ_LIS_OPTIONB
  LIS_Relative to base,REL
  LIS_Absolute        ,ABS
  LIS_Do not calculate,OFF
  Def_*PAR(_zc(_z1))
!
Cmd_PSDRES
 Fld_2
  Typ_Def_VELO
 Fld_3
  Prm_Velocity solution       (VELO)
  Typ_LIS_OPTIONB
  LIS_Relative to base,REL
  LIS_Absolute        ,ABS
  LIS_Do not calculate,OFF
  Def_*PAR(_zc(_z2))
!
Cmd_PSDRES
 Fld_2
  Typ_Def_ACEL
 Fld_3
  Prm_Acceleration solution   (ACEL)
  Typ_LIS_OPTIONB
  LIS_Relative to base,REL
  LIS_Absolute        ,ABS
  LIS_Do not calculate,OFF
  Def_*PAR(_zc(_z3))
:E END
:! 
:N Fnc_PSDSPL
:S    550,   163,   380
:T Command
:C )! Fnc_PSDSPL
:A Spatial Correlat
:D Spatial Correlation
:K #(PSDRANDM*NOFILTER)
:P (FULL_ANS)
:H Hlp_C_PSDSPL
Inp_NoApply
Cmd_PSDSPL
 Fld_0
  Typ_Lab
  Prm_[PSDSPL]  Spatial Correlation
 Fld_2
  Prm_TBLNO   PSD table number
  Typ_INT
  Def_1
 Fld_0
  Typ_Lab
  Prm_Distance range within which partial correlation occurs
 Fld_3
  Prm_  RMIN  Minimum distance
  Typ_REAL
  Def_*GET(common,,rancom,,real,31)
 Fld_4
  Prm_  RMAX  Maximum distance
  Typ_REAL
  Def_*GET(common,,rancom,,real,41)
:E END
:! 
:N Fnc_PSDUNIT_psd
:S   1419,   601,   811
:T Command
:C )! Fnc_PSDUNIT_psd
:C )/NOPR
:C )*GET,_z1,common,,rancom,,int,1  ! type of repsonse spect
:C )*GET,_z2,common,,soptcm,,int,43 ! mode comb method
:C )*DEL,_zc
:C )*DIM,_zc,char,13
:C )*SET,_zc(1),'DISP','VELO','ACEL','ACCG','PRES','FORC'
:C )*SET,_zc(7),' ',' ',' ',' ',' ',' ','PSD'
:C )*GET,_z11,common,,soptcm,,real,3 ! z1 to z3 excittion dir
:C )*GET,_z12,common,,soptcm,,real,4
:C )*GET,_z13,common,,soptcm,,real,5
:C )/GO
:A    Settings
:D Settings for PSD Analysis
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:P (LINPLUS)
:H Hlp_C_PSDUNIT
Inp_NoApply
Cmd_PSDUNIT
P_CM(FULL_ANS)
 Fld_0
  Typ_Lab
  Prm_      Settings for PSD Analysis
Fld_0
Typ_SEP
 Fld_3
  Prm_[PSDUNIT]  Type of response spct
  Typ_LIS_OPTIONB
  LIS_Acceleration    ,ACEL
  LIS_Accel (g**2/Hz) ,ACCG
  LIS_Velocity        ,VELO
  LIS_Displacement    ,DISP
  LIS_Force spectrum  ,FORC
  LIS_Pressure spct   ,PRES
 Def_*PAR(_zc(_z1))
 Fld_2
  Prm_           Table number
  Typ_INT
  Def_1
 Fld_4
  Prm_           GVALUE
  Typ_Real
  Def_386.4
 Fld_0
  Typ_Lab
  Prm_               - valid only for Accel (g**2/Hz)
!
Cmd_SED
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[SED] Excitation direction in global Cartesian
 Fld_2
  Prm_SEDX, SEDY, SEDZ
  Typ_REAL3
  Def_*PAR(_z11),*PAR(_z12),*PAR(_z13)
 Fld_5
  Prm_Component name of excited nodes
  Typ_Lis_OptionB
  LIS_None,,
  LIS_*READ,NDCM
:E END
:! 
:N Fnc_PSDVAL_psd
:S    395,   199,   189
:T Command
:C )! Fnc_PSDVAL_psd
:A    PSD vs Freq
:D Table for PSD vs Frequency
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:P (FULL_ANS)
:H Hlp_UI_psdvalmul
Inp_NoApply
Cmd_)/NOPR
 Fld_0
  Typ_Lab
  Prm_[PSDVAL] [PSDFRQ]  PSD vs Frequency Table
Cmd_)*CSET,101,101
 Fld_2
  Prm_    Table number to be defined
  Typ_INT
  Def_1
Cal_Fnc_PSDVAL_psd1
:E END
:! 
:N Fnc_PSDVAL_psd1
:S   3645,   176,  3462
:T Command
:D PSD vs Frequency Table
:P (FULL_ANS)
:C )! Fnc_PSDVAL_psd1
:C )/NOPR
:C )*GET,_z1,CPAR,101
:C )/GO
:H Hlp_UI_psdvalmul
Cmd_)/NOPR
 Fld_0
  Typ_Lab
  Prm_[PSDVAL] [PSDFRQ]  PSD vs Frequency Table No. %(I)_z1%
 Fld_0
  Typ_Lab
  Prm_    Enter up to 50 values of       Frequency     PSD Value
Cmd_)*CSET,1,4
 Fld_2
  Prm_                   FREQ1, PSD1
  Typ_real2
 Fld_4
  Prm_                   FREQ2, PSD2
  Typ_real2
Cmd_)*CSET,5,8
 Fld_2
  Prm_                   FREQ3, PSD3
  Typ_real2
 Fld_4
  Prm_                   FREQ4, PSD4
  Typ_real2
Cmd_)*CSET,9,12
 Fld_2
  Prm_                   FREQ5, PSD5
  Typ_real2
 Fld_4
  Prm_                   FREQ6, PSD6
  Typ_real2
Cmd_)*CSET,13,16
 Fld_2
  Prm_                   FREQ7, PSD7
  Typ_real2
 Fld_4
  Prm_                   FREQ8, PSD8
  Typ_real2
Cmd_)*CSET,17,20
 Fld_2
  Prm_                   FREQ9, PSD9
  Typ_real2
 Fld_4
  Prm_                  FREQ10, PSD10
  Typ_real2
Cmd_)*CSET,21,24
 Fld_2
  Prm_                  FREQ11, PSD11
  Typ_real2
 Fld_4
  Prm_                  FREQ12, PSD12
  Typ_real2
Cmd_)*CSET,25,28
 Fld_2
  Prm_                  FREQ13, PSD13
  Typ_real2
 Fld_4
  Prm_                  FREQ14, PSD14
  Typ_real2
Cmd_)*CSET,29,32
 Fld_2
  Prm_                  FREQ15, PSD15
  Typ_real2
 Fld_4
  Prm_                  FREQ16, PSD16
  Typ_real2
Cmd_)*CSET,33,36
 Fld_2
  Prm_                  FREQ17, PSD17
  Typ_real2
 Fld_4
  Prm_                  FREQ18, PSD18
  Typ_real2
Cmd_)*CSET,37,40
 Fld_2
  Prm_                  FREQ19, PSD19
  Typ_real2
 Fld_4
  Prm_                  FREQ20, PSD20
  Typ_real2
Cmd_)*CSET,41,44
 Fld_2
  Prm_                  FREQ21, PSD21
  Typ_real2
 Fld_4
  Prm_                  FREQ22, PSD22
  Typ_real2
Cmd_)*CSET,45,48
 Fld_2
  Prm_                  FREQ23, PSD23
  Typ_real2
 Fld_4
  Prm_                  FREQ24, PSD24
  Typ_real2
Cmd_)*CSET,49,52
 Fld_2
  Prm_                  FREQ25, PSD25
  Typ_real2
 Fld_4
  Prm_                  FREQ26, PSD26
  Typ_real2
Cmd_)*CSET,53,56
 Fld_2
  Prm_                  FREQ27, PSD27
  Typ_real2
 Fld_4
  Prm_                  FREQ28, PSD28
  Typ_real2
Cmd_)*CSET,57,60
 Fld_2
  Prm_                  FREQ29, PSD29
  Typ_real2
 Fld_4
  Prm_                  FREQ30, PSD30
  Typ_real2
Cmd_)*CSET,61,64
 Fld_2
  Prm_                  FREQ31, PSD31
  Typ_real2
 Fld_4
  Prm_                  FREQ32, PSD32
  Typ_real2
Cmd_)*CSET,65,68
 Fld_2
  Prm_                  FREQ33, PSD33
  Typ_real2
 Fld_4
  Prm_                  FREQ34, PSD34
  Typ_real2
Cmd_)*CSET,69,72
 Fld_2
  Prm_                  FREQ35, PSD35
  Typ_real2
 Fld_4
  Prm_                  FREQ36, PSD36
  Typ_real2
Cmd_)*CSET,73,76
 Fld_2
  Prm_                  FREQ37, PSD37
  Typ_real2
 Fld_4
  Prm_                  FREQ38, PSD38
  Typ_real2
Cmd_)*CSET,77,80
 Fld_2
  Prm_                  FREQ39, PSD39
  Typ_real2
 Fld_4
  Prm_                  FREQ40, PSD40
  Typ_real2
Cmd_)*CSET,81,84
 Fld_2
  Prm_                  FREQ41, PSD41
  Typ_real2
 Fld_4
  Prm_                  FREQ42, PSD42
  Typ_real2
Cmd_)*CSET,85,88
 Fld_2
  Prm_                  FREQ43, PSD43
  Typ_real2
 Fld_4
  Prm_                  FREQ44, PSD44
  Typ_real2
Cmd_)*CSET,89,92
 Fld_2
  Prm_                  FREQ45, PSD45
  Typ_real2
 Fld_4
  Prm_                  FREQ46, PSD46
  Typ_real2
Cmd_)*CSET,93,96
 Fld_2
  Prm_                  FREQ47, PSD47
  Typ_real2
 Fld_4
  Prm_                  FREQ48, PSD48
  Typ_real2
Cmd_)*CSET,97,100
 Fld_2
  Prm_                  FREQ49, PSD49
  Typ_real2
 Fld_4
  Prm_                  FREQ50, PSD50
  Typ_real2
Cmd_)/GO
Cal_Fnc_PSDVAL_psd2
:E END
:! 
:N Fnc_PSDVAL_psd2
:S    242,   202,    33
:T Command
:P (FULL_ANS)
:C )! Fnc_PSDVAL_psd2
:C )/nopr
:C )_z1=0
:C )*do,_z1,1,99,2
:C )/nopr
:C )*GET,_z9,CPAR,_z1
:C )*if,_z9,eq,0,exit
:C )*enddo
:C )/go
Inp_P
Cmd_)!
Cal_Fnc_PSDVAL_psd3
:E END
:! 
:N Fnc_PSDVAL_psd3
:S   3274,  1395,  1872
:T Command
:P (FULL_ANS)
:C )! Fnc_PSDVAL_psd3
:C )/nopr
:C )*if,_z1,le,11,then
:C ) keyw,key1,1,key2,0,key3,0,key4,0
:C ) keyw,key5,0,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,21,then
:C ) keyw,key1,1,key2,1,key3,0,key4,0
:C ) keyw,key5,0,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,31,then
:C ) keyw,key1,1,key2,1,key3,1,key4,0
:C ) keyw,key5,0,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,41,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,0,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,51,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,61,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,71,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,1,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,81,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,1,key8,1
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,91,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,1,key8,1
:C ) keyw,key9,1,key10,0
:C )*elseif,_z1,le,99,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,1,key8,1
:C ) keyw,key9,1,key10,1
:C )*endif
:C )/go
Inp_P
Cmd_PSDFRQ
K_CM(KEY1)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_4
  Typ_Def_*CPAR(1)
 Fld_5
  Typ_Def_*CPAR(3)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(7)
 Fld_8
  Typ_Def_*CPAR(9)
Cmd_PSDFRQ
K_CM(KEY2)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_4
  Typ_Def_*CPAR(11)
 Fld_5
  Typ_Def_*CPAR(13)
 Fld_6
  Typ_Def_*CPAR(15)
 Fld_7
  Typ_Def_*CPAR(17)
 Fld_8
  Typ_Def_*CPAR(19)
Cmd_PSDFRQ
K_CM(KEY3)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_4
  Typ_Def_*CPAR(21)
 Fld_5
  Typ_Def_*CPAR(23)
 Fld_6
  Typ_Def_*CPAR(25)
 Fld_7
  Typ_Def_*CPAR(27)
 Fld_8
  Typ_Def_*CPAR(29)
Cmd_PSDFRQ
K_CM(KEY4)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_4
  Typ_Def_*CPAR(31)
 Fld_5
  Typ_Def_*CPAR(33)
 Fld_6
  Typ_Def_*CPAR(35)
 Fld_7
  Typ_Def_*CPAR(37)
 Fld_8
  Typ_Def_*CPAR(39)
Cmd_PSDFRQ
K_CM(KEY5)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_4
  Typ_Def_*CPAR(41)
 Fld_5
  Typ_Def_*CPAR(43)
 Fld_6
  Typ_Def_*CPAR(45)
 Fld_7
  Typ_Def_*CPAR(47)
 Fld_8
  Typ_Def_*CPAR(49)
Cmd_PSDFRQ
K_CM(KEY6)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_4
  Typ_Def_*CPAR(51)
 Fld_5
  Typ_Def_*CPAR(53)
 Fld_6
  Typ_Def_*CPAR(55)
 Fld_7
  Typ_Def_*CPAR(57)
 Fld_8
  Typ_Def_*CPAR(59)
Cmd_PSDFRQ
K_CM(KEY7)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_4
  Typ_Def_*CPAR(61)
 Fld_5
  Typ_Def_*CPAR(63)
 Fld_6
  Typ_Def_*CPAR(65)
 Fld_7
  Typ_Def_*CPAR(67)
 Fld_8
  Typ_Def_*CPAR(69)
Cmd_PSDFRQ
K_CM(KEY8)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_4
  Typ_Def_*CPAR(71)
 Fld_5
  Typ_Def_*CPAR(73)
 Fld_6
  Typ_Def_*CPAR(75)
 Fld_7
  Typ_Def_*CPAR(77)
 Fld_8
  Typ_Def_*CPAR(79)
Cmd_PSDFRQ
K_CM(KEY9)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_4
  Typ_Def_*CPAR(81)
 Fld_5
  Typ_Def_*CPAR(83)
 Fld_6
  Typ_Def_*CPAR(85)
 Fld_7
  Typ_Def_*CPAR(87)
 Fld_8
  Typ_Def_*CPAR(89)
Cmd_PSDFRQ
K_CM(KEY10)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_4
  Typ_Def_*CPAR(91)
 Fld_5
  Typ_Def_*CPAR(93)
 Fld_6
  Typ_Def_*CPAR(95)
 Fld_7
  Typ_Def_*CPAR(97)
 Fld_8
  Typ_Def_*CPAR(99)
Cal_Fnc_PSDVAL_psd4
:E END
:! 
:N Fnc_PSDVAL_psd4
:S   1951,    90,  1854
:T Command
:P (FULL_ANS)
:C )! Fnc_PSDVAL_psd4
Inp_P
Cmd_PSDVAL
K_CM(KEY1)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(4)
 Fld_5
  Typ_Def_*CPAR(6)
 Fld_6
  Typ_Def_*CPAR(8)
 Fld_7
  Typ_Def_*CPAR(10)
Cmd_PSDVAL
K_CM(KEY2)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(12)
 Fld_4
  Typ_Def_*CPAR(14)
 Fld_5
  Typ_Def_*CPAR(16)
 Fld_6
  Typ_Def_*CPAR(18)
 Fld_7
  Typ_Def_*CPAR(20)
Cmd_PSDVAL
K_CM(KEY3)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(22)
 Fld_4
  Typ_Def_*CPAR(24)
 Fld_5
  Typ_Def_*CPAR(26)
 Fld_6
  Typ_Def_*CPAR(28)
 Fld_7
  Typ_Def_*CPAR(30)
Cmd_PSDVAL
K_CM(KEY4)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(32)
 Fld_4
  Typ_Def_*CPAR(34)
 Fld_5
  Typ_Def_*CPAR(36)
 Fld_6
  Typ_Def_*CPAR(38)
 Fld_7
  Typ_Def_*CPAR(40)
Cmd_PSDVAL
K_CM(KEY5)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(42)
 Fld_4
  Typ_Def_*CPAR(44)
 Fld_5
  Typ_Def_*CPAR(46)
 Fld_6
  Typ_Def_*CPAR(48)
 Fld_7
  Typ_Def_*CPAR(50)
Cmd_PSDVAL
K_CM(KEY6)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(52)
 Fld_4
  Typ_Def_*CPAR(54)
 Fld_5
  Typ_Def_*CPAR(56)
 Fld_6
  Typ_Def_*CPAR(58)
 Fld_7
  Typ_Def_*CPAR(60)
Cmd_PSDVAL
K_CM(KEY7)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(62)
 Fld_4
  Typ_Def_*CPAR(64)
 Fld_5
  Typ_Def_*CPAR(66)
 Fld_6
  Typ_Def_*CPAR(68)
 Fld_7
  Typ_Def_*CPAR(70)
Cmd_PSDVAL
K_CM(KEY8)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(72)
 Fld_4
  Typ_Def_*CPAR(74)
 Fld_5
  Typ_Def_*CPAR(76)
 Fld_6
  Typ_Def_*CPAR(78)
 Fld_7
  Typ_Def_*CPAR(80)
Cmd_PSDVAL
K_CM(KEY9)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(82)
 Fld_4
  Typ_Def_*CPAR(84)
 Fld_5
  Typ_Def_*CPAR(86)
 Fld_6
  Typ_Def_*CPAR(88)
 Fld_7
  Typ_Def_*CPAR(90)
Cmd_PSDVAL
K_CM(KEY10)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(92)
 Fld_4
  Typ_Def_*CPAR(94)
 Fld_5
  Typ_Def_*CPAR(96)
 Fld_6
  Typ_Def_*CPAR(98)
 Fld_7
  Typ_Def_*CPAR(100)
:E END
:! 
:N Fnc_PSDWAV
:S    746,   485,   254
:T Command
:C )! Fnc_PSDWAV
:C )/NOPR
:C )*GET,_z1,common,,rancom,,real,1   ! z1-z3  x,y,z velo of wave    
:C )*GET,_z2,common,,rancom,,real,11
:C )*GET,_z3,common,,rancom,,real,21
:C )*GET,_z4,common,,rancom,,real,51  ! z4-z6 coeff of coherency func
:C )*GET,_z5,common,,rancom,,real,61
:C )*GET,_z6,common,,rancom,,real,71
:C )/GO
:A Traveling Wave
:D Partial Correlation by Traveling Wave
:K #(PSDRANDM*NOFILTER)
:P (FULL_ANS)
:H Hlp_C_PSDWAV
Cmd_PSDWAV
 Fld_0
  Typ_Lab
  Prm_[PSDWAV]  Partial Correlation by Traveling Wave
 Fld_2
  Prm_TBLNO   PSD table number
  Typ_INT
  Def_1
 Fld_0
  Prm_VX,VY,VZ
 Fld_3
  Prm_    X,Y,Z velocities of the wave
  Typ_REAL3
  Def_*PAR(_z1),*PAR(_z2),*PAR(_z3)
:E END
:! 
:N Fnc_PSME_a2n
:S    628,   109,   512
:D Mesh Pretension Section
:T Cmd
:C )! Fnc_PSME_a2n
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_AREA
 Fld_6
  Typ_Def_*PAR(_z1)
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_10
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_PSME_a2on
:S    815,   111,   697
:D Mesh Pretension Section
:T Cmd
:C )! Fnc_PSME_a2on
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_AREA
 Fld_6
  Typ_Def_*PAR(_z1)
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_10
  Typ_Def_*PAR(_z2)
 Fld_11
  Prm_TOL    Tolerance
  Typ_REAL
 Fld_12
  Prm_TYPE   PRETS179 TYPE
  Typ_INT
 Fld_13
  Prm_ECOMP  Elem component
  Typ_CHAR,8
 Fld_14
  Prm_NCOMP  Node component
  Typ_CHAR,8
:E END
:! 
:N Fnc_PSME_a2ov
:S    830,   111,   712
:D Mesh Pretension Section
:T Cmd
:C )! Fnc_PSME_a2ov
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_AREA
 Fld_6
  Typ_Def_*PAR(_z1)
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_9
  Prm_VALUE  Coord value
  Typ_REAL
 Fld_11
  Prm_TOL    Tolerance
  Typ_REAL
 Fld_12
  Prm_TYPE   PRETS179 TYPE
  Typ_INT
 Fld_13
  Prm_ECOMP  Elem component
  Typ_CHAR,8
 Fld_14
  Prm_NCOMP  Node component
  Typ_CHAR,8
:E END
:! 
:N Fnc_PSME_an
:S    424,   144,   273
:T Cmd_P
:C )! Fnc_PSME_an
:A Elements in Area   
:D Mesh Pretension Section
:K #(PREP7)
:H Hlp_C_PSMESH
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[PSME]  Pick or enter area containing mesh to be separated
  Typ_AREA
  Min_1
  Cnt_1
  PFM_2
Cmd_)*SET,_z2
 Fld_2
  Prm_[PSME]  Pick or enter node on separation plane
  Typ_NODE
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_a2n
:E END
:! 
:N Fnc_PSME_aon
:S    427,   146,   274
:T Cmd_P
:C )! Fnc_PSME_aon
:A Elements in Area   
:D Mesh Pretension Section
:K #(PREP7)
:H Hlp_C_PSMESH
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[PSME]  Pick or enter area containing mesh to be separated
  Typ_AREA
  Min_1
  Cnt_1
  PFM_2
Cmd_)*SET,_z2
 Fld_2
  Prm_[PSME]  Pick or enter node on separation plane
  Typ_NODE
  Min_0
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_a2on
:E END
:! 
:N Fnc_PSME_aov
:S    318,   146,   165
:T Cmd_P
:C )! Fnc_PSME_aov
:A Elements in Area   
:D Mesh Pretension Section
:K #(PREP7)
:H Hlp_C_PSMESH
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[PSME]  Pick or enter area containing mesh to be separated
  Typ_AREA
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_a2ov
:E END
:! 
:N Fnc_PSME_e2n
:S    624,   132,   485
:T Command
:C )! Fnc_PSME_e2n
:A Picked Elements
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_P51X
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_10
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_PSME_e2on
:S    811,   134,   670
:T Command
:C )! Fnc_PSME_e2on
:A Picked Elements
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_P51X
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_10
  Typ_Def_*PAR(_z2)
 Fld_11
  Prm_TOL    Tolerance
  Typ_REAL
 Fld_12
  Prm_TYPE   PRETS179 TYPE
  Typ_INT
 Fld_13
  Prm_ECOMP  Elem component
  Typ_CHAR,8
 Fld_14
  Prm_NCOMP  Node component
  Typ_CHAR,8
:E END
:! 
:N Fnc_PSME_e2ov
:S    826,   134,   685
:T Command
:C )! Fnc_PSME_e2ov
:A Picked Elements
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_P51X
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_9
  Prm_VALUE  Coord value
  Typ_REAL
 Fld_11
  Prm_TOL    Tolerance
  Typ_REAL
 Fld_12
  Prm_TYPE   PRETS179 TYPE
  Typ_INT
 Fld_13
  Prm_ECOMP  Elem component
  Typ_CHAR,8
 Fld_14
  Prm_NCOMP  Node component
  Typ_CHAR,8
:E END
:! 
:N Fnc_PSME_e2p
:S    310,   132,   171
:T Command
:C )! Fnc_PSME_e2p
:A Picked Elements
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Inp_NoApply
Cmd_)!
 Fld_2
  Prm_[PSME]  Divide mesh at
  Typ_LIS_RadioB
  LIS_Node            ,0
  LIS_Value           ,1
Cal_Fnc_PSME_e3p,2,EQ,0
Cal_Fnc_PSME_e2ov,2,EQ,1
:E END
:! 
:N Fnc_PSME_e3p
:S    324,   164,   153
:T Cmd_P
:C )! Fnc_PSME_e3p
:C )! Node for PSME command below
:A Picked Elements
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_2
  Prm_[PSME]  Pick or enter node on separation plane
  Typ_NODE
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_e2on
:E END
:! 
:N Fnc_PSME_en
:S    435,   166,   262
:T Cmd_P
:C )! Fnc_PSME_en
:C )! Elements for PSME command below
:A Picked Elements
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Inp_P
Cmd_)!
 Fld_3
  Typ_ELEM
  Prm_[PSME]  Pick or enter elements to be separated
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_2
  Prm_[PSME]  Pick or enter node on separation plane
  Typ_NODE
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_e2n
:E END
:! 
:N Fnc_PSME_eon
:S    438,   168,   263
:T Cmd_P
:C )! Fnc_PSME_eon
:C )! Elements for PSME command below
:A Picked Elements
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Inp_P
Cmd_)!
 Fld_3
  Typ_ELEM
  Prm_[PSME]  Pick or enter elements to be separated
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_2
  Prm_[PSME]  Pick or enter node on separation plane
  Typ_NODE
  Min_0
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_e2on
:E END
:! 
:N Fnc_PSME_eov
:S    309,   168,   134
:T Cmd_P
:C )! Fnc_PSME_eov
:C )! Elements for PSME command below
:A Picked Elements
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Inp_P
Cmd_)!
 Fld_3
  Typ_ELEM
  Prm_[PSME]  Pick or enter elements to be separated
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_PSME_e2ov
:E END
:! 
:N Fnc_PSME_ep
:S    306,   166,   133
:T Cmd_P
:C )! Fnc_PSME_ep
:C )! Elements for PSME command below
:A Picked Elements
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Inp_P
Cmd_)!
 Fld_3
  Typ_ELEM
  Prm_[PSME]  Pick or enter elements to be separated
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_PSME_e2p
:E END
:! 
:N Fnc_PSME_l2n
:S    628,   109,   512
:D Mesh Pretension Section
:T Cmd
:C )! Fnc_PSME_l2n
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_LINE
 Fld_6
  Typ_Def_*PAR(_z1)
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_10
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_PSME_l2on
:S    815,   111,   697
:D Mesh Pretension Section
:T Cmd
:C )! Fnc_PSME_l2on
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_LINE
 Fld_6
  Typ_Def_*PAR(_z1)
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_10
  Typ_Def_*PAR(_z2)
 Fld_11
  Prm_TOL    Tolerance
  Typ_REAL
 Fld_12
  Prm_TYPE   PRETS179 TYPE
  Typ_INT
 Fld_13
  Prm_ECOMP  Elem component
  Typ_CHAR,8
 Fld_14
  Prm_NCOMP  Node component
  Typ_CHAR,8
:E END
:! 
:N Fnc_PSME_l2ov
:S    830,   111,   712
:D Mesh Pretension Section
:T Cmd
:C )! Fnc_PSME_l2ov
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_LINE
 Fld_6
  Typ_Def_*PAR(_z1)
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_9
  Prm_VALUE  Coord value
  Typ_REAL
 Fld_11
  Prm_TOL    Tolerance
  Typ_REAL
 Fld_12
  Prm_TYPE   PRETS179 TYPE
  Typ_INT
 Fld_13
  Prm_ECOMP  Elem component
  Typ_CHAR,8
 Fld_14
  Prm_NCOMP  Node component
  Typ_CHAR,8
:E END
:! 
:N Fnc_PSME_ln
:S    424,   144,   273
:T Cmd_P
:C )! Fnc_PSME_ln
:A Elements in Line   
:D Mesh Pretension Section
:K #(PREP7)
:H Hlp_C_PSMESH
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[PSME]  Pick or enter line containing mesh to be separated
  Typ_LINE
  Min_1
  Cnt_1
  PFM_2
Cmd_)*SET,_z2
 Fld_2
  Prm_[PSME]  Pick or enter node on separation plane
  Typ_NODE
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_l2n
:E END
:! 
:N Fnc_PSME_lon
:S    427,   146,   274
:T Cmd_P
:C )! Fnc_PSME_lon
:A Elements in Line   
:D Mesh Pretension Section
:K #(PREP7)
:H Hlp_C_PSMESH
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[PSME]  Pick or enter line containing mesh to be separated
  Typ_LINE
  Min_1
  Cnt_1
  PFM_2
Cmd_)*SET,_z2
 Fld_2
  Prm_[PSME]  Pick or enter node on separation plane
  Typ_NODE
  Min_0
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_l2on
:E END
:! 
:N Fnc_PSME_lov
:S    318,   146,   165
:T Cmd_P
:C )! Fnc_PSME_lov
:A Elements in Line   
:D Mesh Pretension Section
:K #(PREP7)
:H Hlp_C_PSMESH
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[PSME]  Pick or enter line containing mesh to be separated
  Typ_LINE
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_l2ov
:E END
:! 
:N Fnc_PSME_sel2n
:S    628,   137,   484
:T Command
:C )! Fnc_PSME_sel2n
:A Selected Element
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_ALL
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_10
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_PSME_sel2on
:S    815,   139,   669
:T Command
:C )! Fnc_PSME_sel2on
:A Selected Element
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_ALL
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_10
  Typ_Def_*PAR(_z2)
 Fld_11
  Prm_TOL    Tolerance
  Typ_REAL
 Fld_12
  Prm_TYPE   PRETS179 TYPE
  Typ_INT
 Fld_13
  Prm_ECOMP  Elem component
  Typ_CHAR,8
 Fld_14
  Prm_NCOMP  Node component
  Typ_CHAR,8
:E END
:! 
:N Fnc_PSME_seln
:S    335,   167,   161
:T Cmd_P
:C )! Fnc_PSME_seln
:C )! Node for PSME command below
:A Selected Element
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_2
  Prm_[PSME]  Pick or enter node on separation plane
  Typ_NODE
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_sel2n
:E END
:! 
:N Fnc_PSME_selon
:S    338,   169,   162
:T Cmd_P
:C )! Fnc_PSME_selon
:C )! Node for PSME command below
:A Selected Element
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_2
  Prm_[PSME]  Pick or enter node on separation plane
  Typ_NODE
  Min_0
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_sel2on
:E END
:! 
:N Fnc_PSME_selov
:S    828,   137,   684
:C )! Fnc_PSME_selov
:T Command
:A Selected Element
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_ALL
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_9
  Prm_VALUE  Coord value
  Typ_REAL
 Fld_11
  Prm_TOL    Tolerance
  Typ_REAL
 Fld_12
  Prm_TYPE   PRETS179 TYPE
  Typ_INT
 Fld_13
  Prm_ECOMP  Elem component
  Typ_CHAR,8
 Fld_14
  Prm_NCOMP  Node component
  Typ_CHAR,8
:E END
:! 
:N Fnc_PSME_v2n
:S    655,   136,   512
:T Command
:C )! Fnc_PSME_v2n
:A    Elem in volu    
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_VOLU
 Fld_6
  Typ_Def_*PAR(_z1)
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_10
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_PSME_v2on
:S    842,   138,   697
:T Command
:C )! Fnc_PSME_v2on
:A    Elem in volu    
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_VOLU
 Fld_6
  Typ_Def_*PAR(_z1)
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_10
  Typ_Def_*PAR(_z2)
 Fld_11
  Prm_TOL    Tolerance
  Typ_REAL
 Fld_12
  Prm_TYPE   PRETS179 TYPE
  Typ_INT
 Fld_13
  Prm_ECOMP  Elem component
  Typ_CHAR,8
 Fld_14
  Prm_NCOMP  Node component
  Typ_CHAR,8
:E END
:! 
:N Fnc_PSME_v2ov
:S    857,   138,   712
:T Command
:C )! Fnc_PSME_v2ov
:A    Elem in volu    
:D Mesh Pretension Section
:H Hlp_C_PSMESH
Cmd_PSMESH
 Fld_0
  Typ_Lab
  Prm_[PSMESH]  Define and Mesh Pretension Section
 Fld_2
  Prm_SECID  Section number
  Typ_INT
 Fld_3
  Prm_NAME   Section name
  Typ_CHAR,8
 Fld_4
  Prm_p0     Pretension node
  Typ_INT
 Fld_5
  Typ_Def_VOLU
 Fld_6
  Typ_Def_*PAR(_z1)
 Fld_7
  Prm_KCN    Separation coord system 
  Typ_LIS_OptionB
  LIS_*READ,CSYS
 Fld_8
  Prm_KDIR   Separatn surface norml to
  Typ_LIS_OptionB
  LIS_X-axis          ,X
  LIS_Y-axis          ,Y
  LIS_Z-axis          ,Z
 Fld_9
  Prm_VALUE  Coord value
  Typ_REAL
 Fld_11
  Prm_TOL    Tolerance
  Typ_REAL
 Fld_12
  Prm_TYPE   PRETS179 TYPE
  Typ_INT
 Fld_13
  Prm_ECOMP  Elem component
  Typ_CHAR,8
 Fld_14
  Prm_NCOMP  Node component
  Typ_CHAR,8
:E END
:! 
:N Fnc_PSME_vn
:S    426,   144,   275
:T Cmd_P
:C )! Fnc_PSME_vn
:A Elements in Volu   
:D Mesh Pretension Section
:K #(PREP7)
:H Hlp_C_PSMESH
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[PSME]  Pick or enter volume containing mesh to be separated
  Typ_VOLU
  Min_1
  Cnt_1
  PFM_2
Cmd_)*SET,_z2
 Fld_2
  Prm_[PSME]  Pick or enter node on separation plane
  Typ_NODE
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_v2n
:E END
:! 
:N Fnc_PSME_von
:S    429,   146,   276
:T Cmd_P
:C )! Fnc_PSME_von
:A Elements in Volu   
:D Mesh Pretension Section
:K #(PREP7)
:H Hlp_C_PSMESH
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[PSME]  Pick or enter volume containing mesh to be separated
  Typ_VOLU
  Min_1
  Cnt_1
  PFM_2
Cmd_)*SET,_z2
 Fld_2
  Prm_[PSME]  Pick or enter node on separation plane
  Typ_NODE
  Min_0
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_v2on
:E END
:! 
:N Fnc_PSME_vov
:S    320,   146,   167
:T Cmd_P
:C )! Fnc_PSME_vov
:A Elements in Volu   
:D Mesh Pretension Section
:K #(PREP7)
:H Hlp_C_PSMESH
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[PSME]  Pick or enter volume containing mesh to be separated
  Typ_VOLU
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_PSME_v2ov
:E END
:! 
:N Fnc_PSecLd
:S    310,   113,   190
:T Command
:C )! Fnc_PSecLd
:A 1 Pretensn Sectn
:D Pretension Section Load
Inp_NoApply
Cmd_)/NOPR
Cmd_)*Cset,1,1
 Fld_0
  Typ_Lab
  Prm_Pretension Section Load
 Fld_2
  Prm_     Specify pretension section number
  Typ_LIS
  LIS_*READ,PTSC
Cmd_)/GO
Cal_Fnc_PSecLd_2
:E End
:! 
:N Fnc_PSecLdAll
:S    758,   133,   618
:T Command
:C )! Fnc_PSecLdAll
:A All Pret Sectns
:D Pretension Section Load
:H Hlp_C_SLOAD
 Fld_0
  Typ_Lab
  Prm_[SLOAD]  Loads for All Pretension Sections
! 
Cmd_SLOAD
 Fld_2
  Prm_Pretension Section Number  SECID
  Typ_Def_ALL
 Fld_3
  Typ_Def_9
 Fld_4
  Prm_Behavior before LSLOAD     KINIT
  Typ_LIS_RadioB
  LIS_Tied together   ,LOCK
  LIS_Axial sliding   ,SLID
  LIS_0.1% of force   ,TINY
 Fld_5
  Prm_Meaning of FDVALUE           KFD
  Typ_LIS_RadioB
  LIS_Pretension force,FORCE
  LIS_Relative motion ,DISP
 Fld_0
  Typ_Lab
  Prm_
 Fld_6
  Prm_Pretension Value         FDVALUE
  Typ_REAL
 Fld_7
  Prm_LoadStep to apply FDVALUE LSLOAD
  Typ_INT
 Fld_8
  Prm_LS to lock pretens force  LSLOCK
  Typ_INT
:E END
:! 
:N Fnc_PSecLdDel
:S    461,   227,   227
:T Command
:C )! Fnc_PSecLdDel
:C /NOPR
:C *DEL,_PA1
:C *DIM,_PA1,ARRAY,10,1,1
:C *DO,_I,1,10
:C _PA1(_I) = 0.0
:C *ENDDO
:A    Section
:D Delete Pretension Section Loads
:H Hlp_C_SLOAD
Inp_NoApply
! Exclude_from_paths
Cmd_*SET,_PA1(1)
 Fld_0
  Typ_Lab
  Prm_[SLOAD]  Delete Loads from Pretension Sections
 Fld_2
  Prm_     Specify up to 10 sections
  Typ_MLis
  LIS_*READ,PTSC
  Bnd_1.0,10.0
Cal_Fnc_PSecLdDelEX
:E END
:! 
:N Fnc_PSecLdDelAll
:S    367,   172,   188
:T Command
:C )! Fnc_PSecLdDelAll
:A All Section Lds
:D Delete All Pretension Section Loads
:K #(PREP7*SOLUTION)
:H Hlp_C_SLOAD
Inp_NoApply
Cmd_SLOAD,ALL,DELETE
Fld_0
 Typ_Lab
 Prm_[SLOAD]  This function deletes all loads for pretension sections 
Fld_0
 Typ_Lab
 Prm_              having selected pretension nodes !
:E END
:! 
:N Fnc_PSecLdDelEX
:S    343,   323,    13
:T Cmd
:C )! Fnc_PSecLdDelEX
:C CM,_PC1,NODE
:C NSEL,NONE
:C *DO,_I,1,10
:C *IF,_PA1(_I),GT,0,THEN
:C *GET,_J,SCTN,_PA1(_I),3
:C NSEL,A,,,_J
:C *ENDIF
:C *ENDDO
:C *DEL,_PA1
:C _I = 
:C _J = 
:C /GO
:C SLOAD,ALL,DELETE
:C /NOPR
:C CMSEL,S,_PC1
:C CMDEL,_PC1
:C /GO
:H Hlp_C_SLOAD
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_PSecLdM
:S    425,   206,   212
:T Command
:C )! Fnc_PSecLdM
:C /NOPR
:C *DEL,_PA1
:C *DIM,_PA1,ARRAY,10,1,1
:C *DO,_I,1,10
:C _PA1(_I) = 0.0
:C *ENDDO
:A >1 Pret Section
:D Pretension Section Loads
Inp_NoApply
! Exclude_from_paths
Cmd_*SET,_PA1(1)
 Fld_0
  Typ_Lab
  Prm_Pretension Section Loads
 Fld_2
  Prm_     Specify up to 10 sections
  Typ_MLis
  LIS_*READ,PTSC
  Bnd_1.0,10.0
Cmd_)/GO
Cal_Fnc_PSecLdM_2
:E End
:! 
:N Fnc_PSecLdM_2
:S    960,   134,   819
:T Command
:C )! Fnc_PSecLdM_2
:H Hlp_C_SLOAD
:A >1 Pret Section
:D Pretension Section Loads
 Fld_0
  Typ_Lab
  Prm_[SLOAD]  Loads for Pretension Sections
! 
Cmd_/NOPR
Cmd_CM,_PC1,NODE
Cmd_NSEL,NONE
Cmd_*DO,_I,1,10
Cmd_*IF,_PA1(_I),GT,0,THEN
Cmd_*GET,_J,SCTN,_PA1(_I),3
Cmd_NSEL,A,,,_J
Cmd_*ENDIF
Cmd_*ENDDO
Cmd_*DEL,_PA1
Cmd__I = 
Cmd__J = 
Cmd_/GO
Cmd_SLOAD
 Fld_2
  Typ_Def_ALL
 Fld_3
  Typ_Def_9
 Fld_4
  Prm_Behavior before LSLOAD     KINIT
  Typ_LIS_RadioB
  LIS_Tied together   ,LOCK
  LIS_Axial sliding   ,SLID
  LIS_0.1% of force   ,TINY
 Fld_5
  Prm_Meaning of FDVALUE           KFD
  Typ_LIS_RadioB
  LIS_Pretension force,FORCE
  LIS_Relative motion ,DISP
 Fld_0
  Typ_Lab
  Prm_
 Fld_6
  Prm_Pretension Value         FDVALUE
  Typ_REAL
 Fld_7
  Prm_LoadStep to apply FDVALUE LSLOAD
  Typ_INT
 Fld_8
  Prm_LS to lock pretens force  LSLOCK
  Typ_INT
!
Cmd_/NOPR
Cmd_CMSEL,S,_PC1
Cmd_CMDEL,_PC1
Cmd_/GO
:E END
:! 
:N Fnc_PSecLd_2
:S   1285,   603,   675
:T Command
:C )! Fnc_PSecLd_2
:C )/NOPR
:C )*GET,_z1,CPAR,1
:C )_z7=
:C )_z9=
:C )_z10=
:C )_z11=
:C )_z12=
:C )_z13=
:C )*GET,_z7,SCTN,_z1,7
:C )*GET,_z9,SCTN,_z1,9
:C )*IF,_z9,EQ,1,THEN
:C )_z9='LOCK'
:C )*ELSEIF,_z9,EQ,2,THEN
:C )_z9='SLID'
:C )*ELSEIF,_z9,EQ,3,THEN
:C )_z9='TINY'
:C )*ENDIF
:C )*GET,_z10,SCTN,_z1,10
:C )*IF,_z10,EQ,1,THEN
:C )_z10='FORC'
:C )*ELSEIF,_z10,EQ,2,THEN
:C )_z10='DISP'
:C )*ENDIF
:C )*GET,_z11,SCTN,_z1,11
:C )*GET,_z12,SCTN,_z1,12
:C )*GET,_z13,SCTN,_z1,13
:C )/GO
:H Hlp_C_SLOAD
:A 1 Pretensn Sectn
:D Pretension Section Load
 Fld_0
  Typ_Lab
  Prm_[SLOAD]  Load or Modify Section %(I)_z1% %(I)_z7%
! 
Cmd_SLOAD
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_9
 Fld_4
  Prm_Behavior before LSLOAD     KINIT
  Typ_LIS_RadioB
  LIS_Tied together   ,LOCK
  LIS_Axial sliding   ,SLID
  LIS_0.1% of force   ,TINY
  Def_*PAR(_z9)
 Fld_5
  Prm_Meaning of FDVALUE           KFD
  Typ_LIS_RadioB
  LIS_Pretension force,FORC
  LIS_Relative motion ,DISP
  Def_*PAR(_z10)
 Fld_0
  Typ_Lab
  Prm_
 Fld_6
  Prm_Pretension Value         FDVALUE
  Typ_REAL
  Def_*PAR(_z11)
 Fld_7
  Prm_LoadStep to apply FDVALUE LSLOAD
  Typ_INT
  Def_*PAR(_z12)
 Fld_8
  Prm_LS to lock pretens force  LSLOCK
  Typ_INT
  Def_*PAR(_z13)
:E END
:! 
:N Fnc_PVECT
:S    486,   136,   343
:T Command
:C )! Fnc_PVECT
:A Unit Vector
:D Define Unit Vector
:H Hlp_C_PVECT
:K #(POST1+RESULTS)
Cmd_PVECT
 Fld_0
  Typ_Lab
  Prm_[PVECT]
 Fld_2
  Prm_Oper   Type of vector
  Typ_LIS_OPTIONB
  LIS_Unit normal     ,NORM
  LIS_Unit tangent    ,TANG
  LIS_Position vector ,RADI
 Fld_3
  Prm_LabXR  User label for X-comp
  Typ_CHAR,8
 Fld_4
  Prm_LabYR  User label for Y-comp
  Typ_CHAR,8
 Fld_5
  Prm_LabZR  User label for Z-comp
  Typ_CHAR,8
:E END
:! 
:N Fnc_Perturb
:S   1078,   236,   835
:T Command
:C )! Fnc_Perturb
:A Perturb
:D Perturb
:C )/nopr
:C )/go
:K (lsdyna)
:K #((PREP7*SOLUTION)+(STATIC*SUBSTRUC*(TRNSIENT+FULL)*HARMONIC)+cfd)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_PERTURB
Inp_NoApply
Cmd_PERTURB
 Fld_0
  Typ_Lab
  Prm_[PERTURB]  Linear perturbation analysis options
 Fld_2
  Prm_      Type of Analysis
  Typ_Lis_OptionB
   Lis_Static          ,STATIC
   Lis_Modal           ,MODAL
   Lis_Buckling        ,BUCKLE
   Lis_Harmonic        ,HARMONIC
   Lis_Off             ,OFF
 Fld_3
  Prm_      Material properties
  Typ_Lis_OptionB
   Lis_Program chosen  ,AUTO
   Lis_Tangent         ,TANGENT
   Def_AUTO
 Fld_4
  Prm_      Contact status
  Typ_Lis_OptionB
   Lis_Sliding allowed ,CURRENT
   Lis_No sliding      ,STICKING
   Lis_Bonded          ,BONDED
 Fld_5
  Prm_      Mechanical loads
  Typ_Lis_OptionB
   Lis_Keep all         ,ALLKEEP
   Lis_Keep disp+inertia,INERKEEP
   Lis_Keep disp only   ,PARKEEP
   Lis_Delete all       ,NOKEEP
   Def_INERKEEP
Cmd_)/NOPR
Cmd_)KEYW,PERTBSLV,1
Cmd_)/GO
Cal_REFRESH
:E END
:! 
:N Fnc_Phys_clear
:S    242,   120,   115
:T Command
:C )! Fnc_Phys_clear
:A    Clear
:D Physics Clear
:H Hlp_C_PHYSICS
Inp_NoApply
Cmd_PHYSICS,CLEAR
 Fld_0
  Typ_Lab
  Prm_[PHYSICS,CLEAR]  This function will clear physics environment
:E END
:! 
:N Fnc_Phys_dele
:S    363,   155,   201
:T Command
:C )! Fnc_Phys_dele
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A    Delete
:D Physics Delete
:H Hlp_C_PHYSICS
Cmd_PHYSICS
 Fld_0
  Typ_Lab
  Prm_[PHYSICS,DELE]  Delete physics file from database
 Fld_2
   Typ_Def_DELETE
 Fld_3
  Prm_Delete Physics file with Title
  Typ_Lis
    Lis_*READ,TITL
    Def_*PAR(_zx)
:E END
:! 
:N Fnc_Phys_list
:S    149,   119,    23
:T Command
:C )! Fnc_Phys_list
:A    List
:D Physics Listing
:H Hlp_C_PHYSICS
Inp_P
Cmd_PHYSICS,LIST
:E END
:! 
:N Fnc_Phys_rea1
:S    180,   105,    68
:T Command
:C )! Fnc_Phys_rea1
:D Physics Read
:H Hlp_C_PHYSICS
Inp_P
Cmd_PHYSICS
 Fld_2
   Typ_Def_READ
 Fld_3
   Typ_Def_*CPAR(1)
:E END
:! 
:N Fnc_Phys_rea2
:S    316,   148,   161
:T Command
:C )! Fnc_Phys_rea2
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A Read
:D Physics Read
:H Hlp_C_PHYSICS
Cmd_PHYSICS
 Fld_0
  Typ_Lab
  Prm_[PHYSICS,READ]  Read physics file
 Fld_2
   Typ_Def_READ
 Fld_4
  Prm_Fname   Physics file to read
  Typ_File
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_Phys_read
:S    414,   116,   291
:T Command
:C )! Fnc_Phys_read
:A    Read
:D Physics Read
:H Hlp_C_PHYSICS
Cmd_)*CSET,1,1
 Fld_0
  Typ_Lab
  Prm_[PHYSICS,READ]  Read physics file
 Fld_2
  Prm_Read Physics file with Title
  Typ_Lis
    Lis_*READ,TITL
Cmd_)!
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Logi,No ,Yes
  Prm_Browse through defined files?
  Def_0
Cal_Fnc_Phys_rea1,2,eq,0,2
Cal_Fnc_Phys_rea2,2,eq,1,2
:E END
:! 
:N Fnc_Phys_stat
:S    152,   120,    25
:T Command
:C )! Fnc_Phys_stat
:A    Status
:D Physics Status
:H Hlp_C_PHYSICS
Inp_P
Cmd_PHYSICS,STATUS
:E END
:! 
:N Fnc_Phys_writ
:S    380,   118,   255
:T Command
:C )! Fnc_Phys_writ
:A    Write
:D Physics Write
:H Hlp_C_PHYSICS
Cmd_PHYSICS,WRITE
 Fld_0
  Typ_Lab
  Prm_[PHYSICS,WRITE]  Write physics file
 Fld_2
  Prm_Title  Physics file title
  Typ_Char
 Fld_3
  Prm_Fname  File name
  Typ_Char
 Fld_4
  Prm_Fext   File extension
  Typ_Char
 Fld_5
  Prm_Dir    Directory
  Typ_Char
:E END
:! 
:N Fnc_Pick_Beam
:S   1185,   734,   444
:T Cmd
:C )! Fnc_Pick_Beam
:C )/NOPR
:C )*DEL,_zc
:C )*DEL,_zp
:C )*SET,_zc,'/*.SECT*'
:C )*SET,_zp,'\*.SECT*'
:C )_z1=sectinqr(0,14)
:C )_z1=_z1+1
:C )*GET,_z2,common,,sectionc,,chr8,5
:C )*IF,_z2,NE,'OFF',THEN
:C )*GET,_z3,common,,sectionc,,chr8,7
:C )*GET,_z4,common,,sectionc,,chr8,9
:C )*GET,_z5,common,,sectionc,,chr8,11
:C )*GET,_z6,common,,sectionc,,chr8,13
:C )*GET,_z7,common,,sectionc,,chr8,15
:C )*GET,_z8,common,,sectionc,,chr8,17
:C )*GET,_z9,common,,sectionc,,chr8,19
:C )*ELSE
:C )*SET,_z2,' '
:C )*SET,_z3,' '
:C )*SET,_z4,' '
:C )*SET,_z5,' '
:C )*SET,_z6,' '
:C )*SET,_z7,' '
:C )*SET,_z8,' '
:C )*SET,_z9,'.'
:C )*ENDIF
:A Edit Custom
:D Pick Section Data
:H Hlp_C_SDELETE
Inp_NoApply
Cmd_)/NOPR
Cmd_)/PNUM,MAT,1
Cmd_)CUPLOT
 Fld_0
  Typ_Lab
  Prm_Read a file containing User Defined Mesh
 Fld_2
  Prm_FILE    Section library file
  Typ_FILE
K_LN(intelnt+alphant)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zc%)
K_LN(INTELNT*ALPHANT)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zp%)
 Fld_5
  Typ_Def_MESH
Cmd_)KEYW,STEP1,0
Cmd_)_BSAVE=0
Cmd_)!~eui,'euidl::element::SectionControl::filter'
Cmd_)/GO
:E END
:! 
:N Fnc_Pick_Beam_db
:S    536,   235,   294
:T Cmd
:C )! Fnc_Pick_Beam
:C )/NOPR
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A Edit Common
:D Pick Section Data
:H Hlp_C_SDELETE
Inp_NoApply
Cmd_)/NOPR
Cmd_)/PNUM,MAT,1
Cmd_)COPLOT
 Fld_0
  Typ_Lab
  Prm_Pick Section Data Database to make Composite
 Fld_2
  Prm_Section ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
Cmd_)_BSAVE=0
Cmd_)!~eui,'euidl::element::SectionControl::filter'
Cmd_)/GO
:E END
:! 
:N Fnc_Pick_Mats
:S    346,   169,   170
:T Cmd_P
:C )! Fnc_Pick_Mats
:C )! Elements for EMODIF command below
:A Modify Material
:D Modify Elem Material
:H Hlp_C_EMODIF
Inp_P
Cmd_)/NOPR
Cmd_)!
  Fld_2
Prm_[EMODIF]  Pick or enter elements to be modified
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)_BSAVE=0
Cmd_)/GO
!Cal_Fnc_Pick_Mats2
:E END
:! 
:N Fnc_Pick_Mats2
:S    364,    90,   267
:C )! Fnc_Pick_Mats2
:T Command
:H Hlp_C_EMODIF
Inp_NoApply
Cmd_)/NOPR
Cmd_)EMODIF
 Fld_0
  Typ_Lab
  Prm_[EMODIF]  Modify Element Attributes
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_MAT
 Fld_4
  Prm_MAT   Material number
  Typ_INT
Cmd_)EPLOT
Cmd_)_BSAVE=0
Cmd_)~eui,'euidl::element::SectionControl::filter'
Cmd_)/GO
:E END
:! 
:N Fnc_PiezoT0
:S    466,   225,   234
:T Command
:D Real Constants for CIRCU%_e0% - Piezo Transducer
:H Hlp_UI_cirr
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=5
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Piezo transducer
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_Def_0.0
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_PiezoTr
:S    249,   116,   126
:T Cmd_P
:A   Piezo Transd
:D   Piezo Transducer
:H Hlp_G_ELE94
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Piezo Transducer]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_216
Cal_Fnc_PiezoT0
:E END
:! 
:N Fnc_PipeAdd
:S    258,   136,   115
:T Cmd
:C )! Fnc_PipeAdd
:A    Add
:D Add Pipe Section
:K #(PREP7*SOLUTION)
:K (PR_STRUC*pr_set)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_Add Pipe Section with ID
  Typ_INT
Cmd_)/GO
Cal_Fnc_PipeAddEdit2
:E END
:! 
:N Fnc_PipeAddEdit2
:S    619,   519,    93
:T Cmd
:C )! Fnc_PipeAddEdit2
:C )/NOPR
:C )_zc3 = '    '
:C )_z2=sectinqr(_z1,1)
:C )*if,_z2,eq,1,then
:C )*get,_zc3,pipe,_z1,type
:C )*if,_zc3,ne,'PIPE',then
:C )_z2=-1
:C )*endif
:C )*endif
:C )*if,_z2,eq,-1,then
:C )*create,ansuitmp
:C )*msg,ui,
:C )Section %_z1% is not a PIPE section. Please &
:C )delete this section first via the SDELETE &
:C )command.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C )/GO
:A    Add / Edit
:D Add or Edit Pipe Section
:K #(PREP7*SOLUTION)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z2
Fld_2
Typ_Def_*PAR(_z2)
Cmd_)/GO
Cal_Fnc_PipeAddEdit3,2,NE,-1
:E END
:! 
:N Fnc_PipeAddEdit3
:S   2324,   951,  1366
:T Cmd
:C )! Fnc_PipeAddEdit3
:C )/NOPR
:C )KEYW,PIPEEXIS,_z2
:C )_z11=0
:C )_z12=0
:C )_z13=0
:C )_z14=0
:C )_z15=0
:C )_z16=0
:C )_z17=0
:C )_z18=0
:C )_z20=0
:C )_z21=0
:C )_z22=0
:C )_z31=0
:C )_zcname=''
:C )*if,_z2,eq,1,then
:C )*GET,_zcname,pipe,_z1,name
:C )*GET,_z11,pipe,_z1,data,1
:C )*GET,_z12,pipe,_z1,data,2
:C )*GET,_z13,pipe,_z1,data,3
:C )*GET,_z14,pipe,_z1,data,4
:C )*GET,_z15,pipe,_z1,data,5
:C )*GET,_z16,pipe,_z1,data,6
:C )*GET,_z17,pipe,_z1,data,7
:C )*GET,_z18,pipe,_z1,data,8
:C )*get,_z22,pipe,_z1,prop,addm
:C )*get,_z20,pipe,_z1,prop,offy
:C )*get,_z21,pipe,_z1,prop,offz
:C )*endif
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )KEYW,MPLIST,0
:C )_z6=MPINQR(0,0,12)
:C )*IF,_z6,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )/GO
:D Add or Edit Pipe Section
:H Hlp_C_SECTYPE
:H Hlp_C_SECDATA
:H Hlp_C_SECOFFSET
:H Hlp_C_SECCONTROL
Cmd_SECTYPE
 Fld_0
 K_FL(PIPEEXIS)
  Typ_Lab
  Prm_[SECTYPE]  Edit Pipe Section %(I)_z1%
 Fld_0
 K_FL(pipeexis)
  Typ_Lab
  Prm_[SECTYPE]  Add Pipe Section %(I)_z1%
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_PIPE
 Fld_5
  Prm_          Section Name
  Typ_CHAR
  Def_*PAR(_zcname)
Cmd_SECDATA
 Fld_0
  Typ_Lab
  Prm_[SECDATA] Section Data
 Fld_2
  Prm_  Pipe diameter
  Typ_REAL
  Def_*PAR(_z11)
 Fld_3
  Prm_  Wall thickness
  Typ_REAL
  Def_*PAR(_z12)
 Fld_4
  Prm_  Circumferential divisions
  Typ_INT
  Def_*PAR(_z13)
 Fld_5
  Prm_  Composite shell ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_None,0
  LIS_*READ,SECT
  Def_*PAR(_z14)
 Fld_6
  Prm_  Radial divisions (non-comp)
  Typ_LIS_OPTIONB
  LIS_1,1
  LIS_3,3
  LIS_5,5
  LIS_7,7
  LIS_9,9
  Def_*PAR(_z15)
 Fld_7
  Prm_  Internal fluid material
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_None,0
  LIS_*READ,MAT
  Def_*PAR(_z16)
 Fld_8
  Prm_  Insulation material
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_None,0
  LIS_*READ,MAT
  Def_*PAR(_z17)
 Fld_9
  Prm_  Insulation thickness
  Typ_REAL
  Def_*PAR(_z18)
Cmd_SECOFFSET
 Fld_2
  Prm_[SECOFFSET] Offset node to
  Typ_REAL2
  Def_*PAR(_z20),*PAR(_z21)
Cmd_SECCONTROL
 Fld_0
  Typ_Lab
  Prm_[SECCONTROL] Section control
 Fld_2
  Prm_  Added Mass (Mass/Length)  
  Typ_Real
  Def_*PAR(_z22)
:E END
:! 
:N Fnc_PipeEdit
:S    481,   277,   197
:T Cmd
:C )! Fnc_PipeEdit
:C )/NOPR
:C )*get,_z1,active,,sect
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A    Edit
:D Edit Pipe Section
:K #(PREP7*SOLUTION)
:K (PR_STRUC*pr_set)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_Edit Pipe Section with ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
Cmd_)/GO
Cal_Fnc_PipeAddEdit2
:E END
:! 
:N Fnc_PipeFactors
:S    641,   308,   326
:T Cmd
:C )! Fnc_PipeFactors
:C )/NOPR
:C )*get,_z1,common,,sectionc,,int,6
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A  Flexibility Factors
:D Pipe Flexibility Factors
:K (PR_STRUC*pr_set)
:H Hlp_C_SFLEX
Inp_NoApply
! Exclude_from_paths
Cmd_SCURRENT
 Fld_0
 K_FL(BETA)
  Typ_Lab
  Prm_Flexibility and Stress Intensification Factors
 Fld_0
 K_FL(beta)
  Typ_Lab
  Prm_Flexibility Factors
 Fld_2
  Prm_Section ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
Cal_Fnc_PipeFactors2,2,NE,0
:E END
:! 
:N Fnc_PipeFactors2
:S   1071,   486,   578
:T Cmd
:C )! Fnc_PipeFactors2
:C )/NOPR
:C )*GET,_z41,pipe,_z1,sflex,1
:C )*GET,_z42,pipe,_z1,sflex,2
:C )*GET,_z43,pipe,_z1,sflex,3
:C )*GET,_z44,pipe,_z1,sflex,4
:C )*GET,_z45,pipe,_z1,sflex,5
:C )*GET,_z46,pipe,_z1,sflex,6
:C )*GET,_z51,pipe,_z1,ssif,1
:C )*GET,_z52,pipe,_z1,ssif,2
:C )*GET,_z53,pipe,_z1,ssif,3
:C )*GET,_z54,pipe,_z1,ssif,4
:C )/GO
:A  Flexibility Factors
:D Pipe Flexibility Factors
:K (PR_STRUC*pr_set)
:H Hlp_C_SFLEX
Inp_NoApply
Cmd_SFLEX
 Fld_0
  Typ_Lab
  Prm_[SFLEX] Stiffness factors
 Fld_2
  Prm_ Axial
  Typ_REAL
  Def_*PAR(_z41)
 Fld_3
  Prm_ Y and Z bending
  Typ_REAL2
  Def_*PAR(_z42),*PAR(_z43)
 Fld_5
  Prm_ Torsion
  Typ_REAL
  Def_*PAR(_z44)
 Fld_6
  Prm_ Y and Z transverse shear
  Typ_REAL2
  Def_*PAR(_z45),*PAR(_z46)
Cmd_SSIF
K_CM(BETA)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[SSIF] Stress intensification factors
 Fld_2
  Prm_  Y Bending at node I and J
  Typ_REAL2
  Def_*PAR(_z51),*PAR(_z52)
 Fld_4
  Prm_  Z Bending at node I and J
  Typ_REAL2
  Def_*PAR(_z53),*PAR(_z54)
:E END
:! 
:N Fnc_Pl_/ANGLE
:S   1154,   276,   871
:T Cmd
:C )! Fnc_Pl_/ANGLE
:H Hlp_C_/ANGLE
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,4
:C )*DEL,_zc
:C )*DIM,_zc,char,8
:C )_zc(1)='ZS','YS','XS','ZM','YM','XM'
:C )_zc(7)='!','/REPLOT'
:C )!
:C )/GO
:A Angle of Rotation
:D Angle of Rotation
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/ANGLE]  Angle of Rotation
 Fld_2
  Prm_WN         Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
!
Cmd_)*CSET,1,1
 Fld_2
  Prm_THETA     Angle in degrees
  Typ_REAL
Cmd_)*SET,_z(2)
 Fld_3
  Prm_KINCR     Relative/absolute
  Typ_LIS_OPTIONB
   LIS_Absolute angle  ,0
   LIS_Relative angle  ,1
 Fld_2
  Prm_Axis      Axis of rotation
  Typ_LIS_OPTIONB
   LIS_Screen Z        ,1
   LIS_Screen Y        ,2
   LIS_Screen X        ,3
   LIS_Global Cartes Z ,4
   LIS_Global Cartes Y ,5
   LIS_Global Cartes X ,6
!
 Fld_0
  Typ_Sep
!
 Fld_4
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,7
   LIS_Replot          ,8
  Def_8
Cal_Fnc_Pl_/ANGLE_A
:E End
:! 
:N Fnc_Pl_/ANGLE_A
:S    378,   167,   204
:T Cmd
:C )! Fnc_Pl_/ANGLE_A
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
!
Cmd_/ANGLE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*PAR(_zc(_z(2)))
 Fld_5
  Typ_Def_*PAR(_z(3))
!
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(4)))
:E End
:! 
:N Fnc_Pl_/DIST
:S   1080,   249,   824
:T Cmd
:C )! Fnc_Pl_/DIST
:H Hlp_C_/DIST
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,5
:C )*DEL,_zc
:C )*DIM,_zc,char,4
:C )_zc(1)='AUTO','USER'
:C )_zc(3)='!','/REPLOT'
:C )!
:C )/GO
:A Magnification
:D Magnification
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/DIST]  Magnification
 Fld_2
  Prm_WN     Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_3
  Prm_DVAL   Distance to focus point
  Typ_Lis_RadioB
  Lis_Auto calculated  ,1
  Lis_Keep previous    ,2
  Lis_User specified   ,99
Cmd_)*CSET,1,1
 Fld_2
  Prm_       User specified distance
  Typ_Real
Cmd_)*SET,_z(3)
 Fld_2
  Prm_KFACT  Interpret distance as
  Typ_Lis_OptionB
   Lis_Dist to focus   ,0
   Lis_Dist multiplier ,1
 Fld_0
  Typ_Sep
 Fld_3
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,3
   LIS_Replot          ,4
  Def_4
Cal_Fnc_Pl_/DIST_A,3,LE,2,2
Cal_Fnc_Pl_/DIST_B,3,GE,99,2
:E END
:! 
:N Fnc_Pl_/DIST_A
:S    345,   165,   173
:T Cmd
:C )! Fnc_Pl_/DIST_A
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
Cmd_/DIST
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_zc(_z(2)))
 Fld_4
  Typ_Def_*PAR(_z(3))
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(4)))
:E End
:! 
:N Fnc_Pl_/DIST_B
:S    337,   165,   165
:T Cmd
:C )! Fnc_Pl_/DIST_B
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
Cmd_/DIST
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*PAR(_z(3))
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(4)))
:E End
:! 
:N Fnc_Pl_/DSCALE
:S   1886,  1084,   795
:T Cmd
:C )! Fnc_Pl_/DSCALE
:A Displacement Scaling
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3
:C )*DEL,_zc
:C )*DIM,_zc,char,6
:C )*GET,_z11,COMMON,,D3COM,,INT,150  ! Get value of kyusau
:C )_z12=BTEST(_z11,11)
:C )_zc(1)='AUTO','1.0','OFF'
:C )_zc(5)='!','/REPLOT'
:C )*GET,_z8,GRAPH,,DSCALE,DMULT      ! Get DMULT value from database
:C )_z7=_z8*1e30                      ! Adjust for 1e-10 *if tolerance
:C )*GET,_z10,COMMON,,SOPTCM,,INT,2   ! Get value of nlgeom
:C )*IF,_z7,EQ,1.0,THEN
:C ) _z9=3                            ! Scaling off (1e-30)
:C )*ELSEIF,_z8,EQ,0.0,THEN
:C ) _z9=1                            ! Automatic scaling
:C )*ELSEIF,_z12,EQ,1.0,THEN
:C ) _z9=1                            ! Automatic scaling
:C )*ELSEIF,_z8,EQ,1.0,THEN
:C ) _z9=2                            ! True (1.0) scaling
:C )*ELSE
:C ) _z9=99                           ! Specified or last used
:C )*ENDIF
:C )*IF,_z10,EQ,1.0,THEN
:C ) _z9=2                            ! True (1.0) scaling
:C )*ENDIF
:C )/GO
:D Displacement Display Scaling
:H Hlp_C_/DSCALE
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/DSCALE]  Scaling of Displacement Displays
 Fld_0
  Prm_
 Fld_2
  Prm_WN     Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_0
  Typ_Sep
 Fld_3
  Prm_DMULT  Displacement scale factor
  Typ_LIS_RADIOB
  LIS_Auto calculated ,1
  LIS_1.0 (true scale),2
  LIS_0.0 (off)       ,3
  LIS_User specified  ,99
  Def_*PAR(_z9)
Cmd_)*CSET,1,1
 Fld_2
  Prm_           User specified factor
  Typ_REAL
  Def_*PAR(_z8)
Cmd_)*SET,_z(3)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,5
   LIS_Replot          ,6
  Def_6
Cmd_)/GO
Cal_Fnc_Pl_/DSCALE_A
:E END
:! 
:N Fnc_Pl_/DSCALE_A
:S    498,   297,   194
:T Cmd
:C )! Fnc_Pl_/DSCALE_A
:C )/NOPR
:C )*IF,_z(1),EQ,6,THEN
:C )  _z1='ALL'
:C )*ELSE
:C )  _z1=_z(1)
:C )*ENDIF
:C )!
:C )KEYW,KEY1,0
:C )*IF,_z(2),EQ,99,THEN
:C )  KEYW,KEY1,1                ! Set KEY1=1 if user specified value
:C )*ENDIF
:C )/GO
Inp_P
Rmk_
Cmd_/DSCALE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
 K_LN(key1)
  Typ_Def_*PAR(_zc(_z(2)))
 K_LN(KEY1)
  Typ_Def_*CPAR(1)
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(3)))
:E End
:! 
:N Fnc_Pl_/FACET
:S    561,   306,   248
:T Cmd
:C )! Fnc_Pl_/FACET
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,4
:C )*GET,_z1,common,,d3com,,int,120
:C )*IF,_z1,eq,-1,then
:C )_z1=3
:C )*ENDIF
:C )*SET,_zc(1),'NORML','FINE','WIRE','COARSE'
:C )/GO
:H Hlp_C_/FACET
:A Solid Model Facets
:D Solid Model Facets
Cmd_/FACET
 Fld_0
  Typ_Lab
  Prm_[/FACET]
 Fld_2
  Prm_Style of area and volume plots
  Typ_LIS_OPTIONB
   LIS_Normal Faceting ,NORML
   LIS_Wireframe       ,WIRE
   LIS_Fine            ,FINE
   LIS_Coarse          ,COARSE
   Def_*PAR(_zc(_z1+1))
:E END
:! 
:N Fnc_Pl_/FOCUS
:S   1277,   357,   913
:T Cmd
:C )! Fnc_Pl_/FOCUS
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,7
:C )*DEL,_zc
:C )*DIM,_zc,char,5
:C )_zc(1)='AUTO','USER','P'
:C )_zc(4)='!','/REPLOT'
:C )!
:C )*GET,_z(5),GRAPH,_z(1),FOCUS,X
:C )*GET,_z(6),GRAPH,_z(1),FOCUS,Y
:C )*GET,_z(7),GRAPH,_z(1),FOCUS,Z
:C )/GO
:A Focus Point
:D Focus Point
:H Hlp_C_/FOCUS
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/FOCUS]  Focus Point
 Fld_2
  Prm_WN        Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_3
  Prm_XF        Focus point location
  Typ_LIS_RADIOB
  LIS_Auto calculated  ,1
  LIS_Keep previous    ,2
  LIS_Pick             ,3
  LIS_User specified   ,99
Cmd_)*CSET,1,3
 Fld_2
  Prm_XF,YF,ZF  User specified locat
  Typ_REAL3
Cmd_)*SET,_z(3)
 Fld_2
  Prm_KTRANS    Interpret distance as
  Typ_LIS_OPTIONB
   LIS_Glob Cart coords,0
   LIS_Screen increment,1
   LIS_Model increments,2
 Fld_0
  Typ_Sep
 Fld_3
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,4
   LIS_Replot          ,5
  Def_5
Cal_Fnc_Pl_/FOCUS_A,3,LE,2,2
Cal_Fnc_Pl_/FOCUS_B,3,EQ,3,2
Cal_Fnc_Pl_/FOCUS_C,3,GE,99,2
:E END
:! 
:N Fnc_Pl_/FOCUS_A
:S    348,   167,   174
:T Cmd
:C )! Fnc_Pl_/FOCUS_A
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
Cmd_/FOCUS
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_zc(_z(2)))
 Fld_6
  Typ_Def_*PAR(_z(3))
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(4)))
:E End
:! 
:N Fnc_Pl_/FOCUS_B
:S    396,   213,   176
:T Cmd
:C )! Fnc_Pl_/FOCUS_B
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
:A Focus Point
:D Focus Point
:H Hlp_C_/FOCUS
Inp_P
Cmd_/FOCUS
 Fld_2
  Typ_DEF_*PAR(_z1)
 Fld_3
Prm_Pick focus location
  Typ_XYZ
  Min_1
  Max_1
  PFM_2
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(4)))
:E End
:! 
:N Fnc_Pl_/FOCUS_C
:S    392,   167,   218
:T Cmd
:C )! Fnc_Pl_/FOCUS_C
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
Cmd_/FOCUS
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*CPAR(2)
 Fld_5
  Typ_Def_*CPAR(3)
 Fld_6
  Typ_Def_*PAR(_z(3))
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(4)))
:E End
:! 
:N Fnc_Pl_/GFO
:S    831,   497,   327
:T Cmd
:H Hlp_C_/GFORMAT
:C )/NOPR
:C )*DEL,_z1
:C )*DEL,_z2
:C )*DEL,_z3
:C )*DEL,_z4
:C )_z1=zgforiqr(1)
:C )*if,_z1,EQ,0,then
:C )    _z2='DEFA'
:C )    _z3=12
:C )    _z4=4
:C )*else
:C )    *if,_z1,EQ,1,then
:C )        _z2='E   '
:C )    *elseif,_z1,EQ,2,then
:C )        _z2='F   '
:C )    *else
:C )        _z2='G   '
:C )    *endif
:C )    _z3=zgforiqr(2)
:C )    _z4=zgforiqr(3)
:C )*endif
:C )/GO
:A Floating Point Format
:D Floating Point Format
Cmd_/GFORMAT
 Fld_0
  Typ_Lab
  Prm_[/GFORMAT] Floating Point Format
 Fld_2
  Prm_Ftype  FORTRAN Format
  Typ_LIS_OPTIONB
   LIS_(Gw.d)   ,G
   LIS_(Fw.d)   ,F
   LIS_(Ew.d)   ,E
   LIS_Automatic,DEFA
  Def_*PAR(_z2)
 Fld_3
  Prm_NWIDTH       w
  Typ_REAL
  Def_*PAR(_z3)
 Fld_4
  Prm_DSIGNF       d
  Typ_REAL
  Def_*PAR(_z4)
:E END
:! 
:N Fnc_Pl_/GRESUME
:S    292,   193,    92
:T Cmd
:C )! Fnc_Pl_/GRESUME
:C )/NOPR
:C )*DEL,_zx
:C )*DIM,_zx,char,10,3,2
:C )/GO
:H Hlp_C_/GRESUME
:A Restore Plot Ctrls
:D Restore Plot Controls
Fmt_H
Cmd_/GRESUME
 Fld_2
  Prm_[/GRESU] Restore plot ctrls from
  Typ_FILE
  Def_*PAR(_zx)
:E End
:! 
:N Fnc_Pl_/GSAVE
:S    285,   181,    97
:T Cmd
:C )! Fnc_Pl_/GSAVE
:C )/NOPR
:C )*DEL,_zx
:C )*DIM,_zx,char,10,3,2
:C )/GO
:H Hlp_C_/GSAVE
:A Save Plot Ctrls
:D Save Plot Controls
Fmt_H
Cmd_/GSAVE
 Fld_2
  Prm_[/GSAVE] Save plot ctrls on file
  Typ_FILE_INLINE
  Def_*PAR(_zx)
:E End
:! 
:N Fnc_Pl_/LIGHT
:S   1016,   224,   785
:T Cmd
:C )! Fnc_Pl_/LIGHT
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,11
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,6
:C )_zc(1)='1','2','3','4','5','ALL'
:A Light Source
:D Light Source
:H Hlp_C_/LIGHT
Inp_NoApply
Cmd_)*SET,_z(1)
 Fld_0
  K_FL(X3D)
  Typ_Lab
  Prm_[/LIGHT]  Light Source for 3-D Devices
 Fld_0
  K_FL(x3d)
  Typ_Lab
  Prm_[/LIGHT]  Light Source for 2-D Devices (requires Z-buffering)
!
 Fld_2
  Prm_WN  Window number
  Typ_LIS_OPTIONB
   LIS_ Window 1       ,1
   LIS_ Window 2       ,2
   LIS_ Window 3       ,3
   LIS_ Window 4       ,4
   LIS_ Window 5       ,5
   LIS_All active wind ,6
  Def_6
 Fld_3
  K_FL(X3D)
  Prm_NUM  Type of light source
  Typ_LIS_OPTIONB
   LIS_Ambient         ,0
   LIS_Directional     ,1
 Fld_3
  K_FL(x3d)
  Prm_NUM  Type of light source
  Typ_LIS_OPTIONB
   LIS_None            ,10
   LIS_Directional     ,11
Cmd_)/GOPR
!
Cal_Fnc_Pl_/LIGHT1,3,EQ,0,1
Cal_Fnc_Pl_/LIGHT2,3,EQ,1,1
Cal_Fnc_Pl_/LIGHT3,3,EQ,10,1
Cal_Fnc_Pl_/LIGHT4,3,EQ,11,1
:E END
:! 
:N Fnc_Pl_/LIGHT1
:S    608,   192,   409
:T Cmd
:C )! Fnc_Pl_/LIGHT1
:C )/NOPR
:C )*IF,_z(1),EQ,6,THEN
:C )_zz1=1
:C )*ELSE
:C )_zz1=_z(1)
:C )*ENDIF
:C )/GOP
:D Light Source
:H Hlp_C_/LIGHT
Cmd_/LIGHT
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*PAR(_z(2))
 Fld_0
  Typ_Lab
  Prm_[/LIGHT]  Ambient Light Source for 3-D Devices
 Fld_4
  Prm_INT       Light intensity factor
  Typ_REAL
  Def_*GET(COMMON,,D3LCOM,,REAL,_zz1)
 Fld_0
  Typ_Sep
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Prm_[/REPLOT]  Replot upon OK/Apply?
  Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
:E END
:! 
:N Fnc_Pl_/LIGHT2
:S   1087,   528,   552
:T Cmd
:C )! Fnc_Pl_/LIGHT2
:D Light Source
:H Hlp_C_/LIGHT
:C )/NOPR
:C )*IF,_z(1),EQ,6,THEN
:C )_zz1=1
:C )*ELSE
:C )_zz1=_z(1)
:C )*ENDIF
:C )*GET,_z1,common,,d3lcom,,real,(6+(_zz1-1)*9)   ! z1 to 3 light source
:C )*GET,_z2,common,,d3lcom,,real,(7+(_zz1-1)*9)   ! coords   ! coords
:C )*GET,_z3,common,,d3lcom,,real,(8+(_zz1-1)*9)
:C )*GET,_z4,common,,d3lcom,,real,(3*(_zz1-1)+66)  ! intensity factor
:C )*GET,_z5,common,,d3lcom,,real,(3*(_zz1-1)+51)  ! reflectance factor
:C )/GOP
Cmd_/LIGHT
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*PAR(_z(2))
 Fld_0
  Typ_Lab
  Prm_[/LIGHT]  Directional Light Source for 3-D Devices
 Fld_4
  Prm_INT     Light intensity factor
  Typ_REAL
  Def_*PAR(_z4)
 Fld_5
  Prm_XV,YV,ZV  Light source coord
  Typ_real3
  Def_*PAR(_z1),*PAR(_z2),*PAR(_z3)
 Fld_8
  Prm_REFL    Light reflectance factor
  Typ_real
  Def_*PAR(_z5)
 Fld_0
  Typ_Sep
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Prm_[/REPLOT]  Replot upon OK/Apply?
  Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
:E END
:! 
:N Fnc_Pl_/LIGHT3
:S    175,   102,    66
:T Cmd
:C )! Fnc_Pl_/LIGHT3
:D Light Source
:H Hlp_C_/LIGHT
Inp_P
Cmd_/LIGHT
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_0
:E END
:! 
:N Fnc_Pl_/LIGHT4
:S    789,   374,   408
:T Cmd
:C )! Fnc_Pl_/LIGHT4
:D Light Source
:H Hlp_C_/LIGHT
:C )/NOPR
:C )*IF,_z(1),EQ,6,THEN
:C )_zz1=1
:C )*ELSE
:C )_zz1=_z(1)
:C )*ENDIF
:C )*GET,_z1,common,,d3lcom,,real,(6+(_zz1-1)*9)   ! z1 to 3 light source
:C )*GET,_z2,common,,d3lcom,,real,(7+(_zz1-1)*9)   ! coords
:C )*GET,_z3,common,,d3lcom,,real,(8+(_zz1-1)*9)
:C )/GO
Cmd_/LIGHT
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*PAR(_z(2))
 Fld_0
  Typ_Lab
  Prm_[/LIGHT]  Directional Light Source for 2-D Devices
 Fld_5
  Prm_XV,YV,ZV  Light source coord
  Typ_real3
  Def_*PAR(_z1),*PAR(_z2),*PAR(_z3)
 Fld_0
  Typ_Sep
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Prm_[/REPLOT]  Replot upon OK/Apply?
  Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
:E END
:! 
:N Fnc_Pl_/NORMAL
:S    883,   242,   634
:T Cmd
:C )! Fnc_Pl_/NORMAL
:H Hlp_C_/NORMAL
:A Shell Normals
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )_zc(1)='!','/REPLOT'
:C )/GO
:D Shell Elements by their Normals
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/NORMAL]  Display of Shell Elements by their Normals
 Fld_2
  Prm_WN      Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_3
  Prm_KEY  Area elements to be plotted
  Typ_LIS_OPTIONB
  LIS_All              ,0
  LIS_Normals facing   ,1
  LIS_Normals away     ,-1
 Fld_0
  Typ_Sep
 Fld_4
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,1
   LIS_Replot          ,2
  Def_2
Cmd_)/GO
Cal_Fnc_Pl_/NORMAL_A
:E END
:! 
:N Fnc_Pl_/NORMAL_A
:S    317,   169,   141
:T Cmd
:C )! Fnc_Pl_/NORMAL_A
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
Cmd_/NORMAL
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z(2))
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(3)))
:E End
:! 
:N Fnc_Pl_/SEG
:S    183,    85,    91
:T Cmd
:A To Segment Memory
:C )! Fnc_Pl_/SEG
Inp_P
Cmd_)!
K_LN(intelnt+alphant)
Cal_Fnc_Pl_/SEG1
K_LN(INTELNT*ALPHANT)
Cal_Fnc_Pl_/SEG2
:E End
:! 
:N Fnc_Pl_/SEG1
:S    436,   136,   293
:T Cmd
:C )! Fnc_Pl_/SEG
:H Hlp_C_/SEG
:A To Segment Memory
:D Redirect Plots to Segment Memory
Cmd_/SEG
 Fld_2
  Prm_[/SEG]  Segment storage options
  Typ_LIS_RADIOB
   LIS_Stop storing    ,OFF
   LIS_Store single    ,SINGL
   LIS_Store multiple  ,MULTI
Cmd_/SEG
 Fld_2
  Prm_        At termination
  Typ_LIS_RADIOB
   LIS_Delete segments ,NOSAV
   LIS_Save segments   ,SAVE
   Def_NOSAV
:E End
:! 
:N Fnc_Pl_/SEG2
:S    743,   388,   348
:T Command
:H Hlp_C_/SEG
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,5
:C )*DEL,_zc
:C )*DIM,_zc,char,4
:C )*GET,_zc(1),ACTIVE,,JOBNAM,,START,1
:C )*GET,_zc(2),ACTIVE,,JOBNAM,,START,9
:C )*GET,_zc(3),ACTIVE,,JOBNAM,,START,17
:C )*GET,_zc(4),ACTIVE,,JOBNAM,,START,25
:C )/GO
:D Redirect Plots to Animation File (NT Specific)
:! /SEG,[OFF|MULTI],AVINAM,DELAY
Cmd_)*SET,_z(1)
Fld_2
  Prm_[/SEG]  Segment storage options
  Typ_LIS_RADIOB
   LIS_Stop storing    ,1
   LIS_Store multiple  ,2
Cmd_)*CSET,1,1
Fld_2
  Prm_AVINAM  Name of animation file
  Typ_CHAR,32,32
  Def_*STR(%_zc(1)%%_zc(2)%%_zc(3)%%_zc(4)%)
Cmd_)*SET,_z(2)
Fld_2
  Prm_DELAY  Time delay during anim
  Typ_REAL
  Def_0.015
Cal_Fnc_Pl_/SEG2A
:E End
:! 
:N Fnc_Pl_/SEG2A
:S    307,   180,   120
:T Command
:C )/NOPR
:C )KEYW,_zpc,0
:C )*IF,_z(1),EQ,1,THEN
:C ) _z1='OFF'
:C ) KEYW,_zpc,1
:C )*ELSE
:C ) _z1='MULTI'
:C )*ENDIF
:C )/GO
Inp_P
Cmd_/SEG
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*PAR(_z(2))
Cmd_/SEG,PC
K_CM(_ZPC)
:E End
:! 
:N Fnc_Pl_/SHOW
:S    932,   202,   723
:T Cmd
:C )! Fnc_Pl_/SHOW
:H Hlp_UI_slshow
:C )/NOPR
:C )*DEL,_CMAP
:C )_CMAP=1
:C )*DEL,_rl1
:C )_rl1=0
:C )/GOPR
:A To GRPH File
:D Redirect Plots to GRPH File
Cmd_)/NOPR
Cmd_)*SET,_ZVECT
 Fld_2
  Typ_Def_*GET(GRAPH,,DISPLAY)
Cmd_)/GOPR
Cmd_/SHOW
 Fld_2
  Prm_[/SHOW]  Redirect plots to GRPH file
  Typ_FILE_INLINE
  Def_file.grph
! Exclude_from_paths
Cmd_/DEVICE,VECTOR
 Fld_2
  Prm_[/DEVI]  Vector mode (wireframe)
  Typ_LOGI,Off             ,On
  Def_*GET(GRAPH,,DISPLAY)
Cmd_/GFILE
 Fld_0
  Typ_Lab
  Prm_          - for Z-buffered plots written to file
 Fld_2
  Prm_[/GFILE]  Pixel resolution -
  Typ_INT
  Def_*GET(COMMON,,D3COM,,INT,126)
Fld_0
 Typ_Sep
! Exclude_from_paths
Cmd_)!
Fld_2
 Prm_[/REPLOT] Replot upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Replot          ,0
  LIS_Replot/Close    ,1
  LIS_Do not replot   ,2
  Def_1
!
Cal_Fnc_Pl_/SHOW2,2,EQ,0
Cal_Fnc_Pl_/SHOW3,2,EQ,1
:E End
:! 
:N Fnc_Pl_/SHOW2
:S    640,   231,   402
:T Cmd
:C )! Fnc_Pl_/SHOW2
:A To File
:C )/NOPR
:C )*IF,_rl1,EQ,1,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_CMAP,EQ,0,THEN
:C )KEYW,KEY1,0
:C )*ENDIF
:C )/GOPR
:D Redirect Plots to GRPH File
Inp_P
Cmd_)/NOPR
K_CM(KEY1)
Cmd_/CMAP,_TEMPCMAP_,CMP,,SAVE
K_CM(KEY1)
Cmd_/RGB,INDEX,100,100,100,0
K_CM(KEY1)
Cmd_/RGB,INDEX,0,0,0,15
K_CM(KEY1)
Cmd_)/GOPR
! Exclude_from_paths
Cmd_/REPLOT
Cmd_)/NOPR
K_CM(KEY1)
Cmd_/CMAP,_TEMPCMAP_,CMP
K_CM(KEY1)
Cmd_/DELETE,_TEMPCMAP_,CMP
K_CM(KEY1)
Cmd_)/GOPR
! Exclude_from_paths
Cmd_/SHOW,TERM
! Exclude_from_paths
Cmd_/DEVICE,VECTOR
 Fld_2
  Typ_Def_*PAR(_ZVECT)
:E End
:! 
:N Fnc_Pl_/SHOW3
:S    657,   247,   403
:T Cmd
:C )! Fnc_Pl_/SHOW3
:C )/NOPR
:C )KEYW,KEY1,0
:C )*IF,_rl1,EQ,1,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_CMAP,EQ,0,THEN
:C )KEYW,KEY1,0
:C )*ENDIF
:C )/GOPR
:A To File
:D Redirect Plots to GRPH File
Inp_P
Cmd_)/NOPR
K_CM(KEY1)
Cmd_/CMAP,_TEMPCMAP_,CMP,,SAVE
K_CM(KEY1)
Cmd_/RGB,INDEX,100,100,100,0
K_CM(KEY1)
Cmd_/RGB,INDEX,0,0,0,15
K_CM(KEY1)
Cmd_)/GOPR
! Exclude_from_paths
Cmd_/REPLOT
Cmd_)/NOPR
K_CM(KEY1)
Cmd_/CMAP,_TEMPCMAP_,CMP
K_CM(KEY1)
Cmd_/DELETE,_TEMPCMAP_,CMP
K_CM(KEY1)
Cmd_)/GOPR
! Exclude_from_paths
Cmd_/SHOW,CLOSE
! Exclude_from_paths
Cmd_/DEVICE,VECTOR
 Fld_2
  Typ_Def_*PAR(_ZVECT)
:E End
:! 
:N Fnc_Pl_/TRLCY
:S    627,   272,   348
:T Cmd
:C )! Fnc_Pl_/TRLCY
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,6
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,8
:C )_zc(1)='ELEM','AREA','VOLU','CURVE','CM','ISURF'
:C )_zc(7)='!','/REPLOT'
:C )/GO
:D Translucency
:A Translucency
:H Hlp_C_/TRLCY
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Typ_Lab
Prm_[/TRLCY]...Translucency
!
Fld_2
Prm_Lab     Apply translucency to
Typ_LIS_OPTIONB
LIS_Elements        ,1
LIS_Areas           ,2
LIS_Volumes         ,3
LIS_Graphs          ,4
LIS_Named component ,5
LIS_Isosurfaces     ,6
!
Cal_Fnc_Pl_Trans1,2,LE,4
Cal_Fnc_Pl_Trans2,2,EQ,5
Cal_Fnc_Pl_Trans3,2,EQ,6
:E END
:! 
:N Fnc_Pl_/TRLZCAP
:S    341,   228,   106
:T Cmd_P
:C )! Fnc_Pl_/TRLZCAP
:C )/NOPR
:C )*GET,_z1,common,,d3com2,,int,13  ! zcap/q-slice translucency key
:C )_z1=0.001*_z1
:C )/GOPR
:D Capped/Q-Slice Translucency
:H Hlp_C_/TRLCY
Cmd_/TRLCY
 Fld_2
  Typ_Def_ZCAP
 Fld_3
  Typ_Real
  Prm_TLEVEL  Translucency level (0-1)
  Def_*PAR(_z1)
:E END
:! 
:N Fnc_Pl_/UDOCCN
:S    882,   187,   688
:T Cmd
:C )! Fnc_Pl_/UDOCCN
:C )/NOPR
:C )*DEL,_zz1
:C )*DEL,_zz3
:C )_zz1='CNTR'
:C )/GOPR
:A Contour Legend
:D Contour Legend
:H Hlp_C_UDOC_sl
Cmd_/UDOC
 Fld_0
  Typ_Lab
  Prm_[/UDOC]      Contour Legend
 Fld_2
  Prm_WN           Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,ALL
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_3
  Typ_Def_*PAR(_zz1)
 Fld_4
  Prm_Loc          Location
  Typ_LIS_OptionB
   LIS_Bottom of Window,BOTT
   LIS_Top of Window   ,TOP
   LIS_Right of Window ,RIGH
   LIS_Left of Window  ,LEFT
   LIS_Off             ,OFF
Cmd_)/NOPR
Cmd_)*SET,_zz3
 Fld_2
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,7
   LIS_Replot          ,8
  Def_8
Cmd_)/GOPR
Cal_Fnc_Pl_/UDOCZZ
:E End
:! 
:N Fnc_Pl_/UDOCTX
:S   1144,   131,  1006
:T Cmd
:C )! Fnc_Pl_/UDOCTX
:C )*DEL,_zz3
:A Text Legend
:D Text Legend
:H Hlp_C_UDOC_sl
Cmd_/UDOC
 Fld_0
  Typ_Lab
  Prm_[/UDOC]      Text Legend
 Fld_2
  Prm_WN           Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,ALL
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_3
  Prm_Class        Legend Class
  Typ_LIS_OPTIONB
   LIS_Type Info       ,TYPE
   LIS_Date            ,DATE
   LIS_MultiWindow Info,GWIN
   LIS_Type Info(extra),TYP2
   LIS_Numberd Entities,INUM
   LIS_Boundary Cond.  ,BCDC
   LIS_PLVECT Info     ,VECT
   LIS_Surface Cond.   ,SURF
   LIS_Body Loads      ,BODY
   LIS_Plot Status     ,PSTA
   LIS_View Info       ,VIEW
   LIS_Miscellaneous   ,MISC
 Fld_4
  Prm_Loc          Location
  Typ_LIS_OptionB
   LIS_Left of Window  ,LEFT
   LIS_Right of Window ,RIGHT
   LIS_Off             ,OFF
Cmd_)/NOPR
Cmd_)*SET,_zz3
 Fld_2
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,7
   LIS_Replot          ,8
  Def_8
Cmd_)/GOPR
Cal_Fnc_Pl_/UDOCZZ
:E End
:! 
:N Fnc_Pl_/UDOCZZ
:S    309,   252,    50
:T Cmd
:C )/NOPR
:C )*DEL,_zz
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )_zc(1)='!','/REPLOT'
:C )*if,_zz3,EQ,7,then
:C )  _zz=1
:C )*else
:C )  _zz=2
:C )*endif
:C )/GOPR
:A User Legend Replot
:D User Legend Replot
Inp_P
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_zz))
:E End
:! 
:N Fnc_Pl_/VCONE
:S   1023,   263,   753
:T Cmd
:C )! Fnc_Pl_/VCONE
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,4
:C )*DEL,_zc
:C )*DIM,_zc,char,6
:C )_zc(1)='45','30','15','0'
:C )_zc(5)='!','/REPLOT'
:C )!
:C )/GO
:A Perspective View
:D Perspective View
:H Hlp_C_/VCONE
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/VCONE]  Perspective View
 Fld_2
  Prm_WN     Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_3
  Prm_PHI   Perspective angle
  Typ_LIS_RADIOB
  LIS_45 degrees       ,1
  LIS_30 degrees       ,2
  LIS_15 degrees       ,3
  LIS_No perspective   ,4
  LIS_Specified angle  ,99
Cmd_)*CSET,1,1
 Fld_2
  Prm_      Specified angle
  Typ_REAL
 Fld_0
  Typ_Sep
Cmd_)*SET,_z(3)
Fld_2
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,5
   LIS_Replot          ,6
  Def_6
Cal_Fnc_Pl_/VCONE_A,3,LE,4,2
Cal_Fnc_Pl_/VCONE_B,3,GE,99,2
:E END
:! 
:N Fnc_Pl_/VCONE_A
:S    319,   167,   145
:T Cmd
:C )! Fnc_Pl_/VCONE_A
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
Cmd_/VCONE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_zc(_z(2)))
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(3)))
:E End
:! 
:N Fnc_Pl_/VCONE_B
:S    311,   167,   137
:T Cmd
:C )! Fnc_Pl_/VCONE_B
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
Cmd_/VCONE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*CPAR(1)
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(3)))
:E End
:! 
:N Fnc_Pl_/VSCALE
:S    993,   241,   745
:T Cmd
:C )! Fnc_Pl_/VSCALE
:H Hlp_C_/VSCALE
:A
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )_zc(1)='!','/REPLOT'
:C )/GO
:A Vector Arrow Scaling
:D Vector Arrow Scaling
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/VSCALE]  Scaling of Vector Arrows
 Fld_2
  Prm_WN      Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
Cmd_)*CSET,1,1
 Fld_2
  Prm_VRATIO  Scale factor multiplier
  Typ_REAL
  Def_*GET(COMMON,,D3COM,,REAL,168)
Cmd_)*SET,_z(2)
 Fld_2
  Prm_KEY     Vector scaling will be
  Typ_LIS_OPTIONB
  LIS_Magnitude based  ,0
  LIS_Uniform          ,1
  Def_*GET(COMMON,,D3COM,,INT,193)
 Fld_0
  Typ_Sep
 Fld_3
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,1
   LIS_Replot          ,2
  Def_2
Cmd_)/GO
Cal_Fnc_Pl_/VSCALE_A
:E END
:! 
:N Fnc_Pl_/VSCALE_A
:S    343,   169,   167
:T Cmd
:C )! Fnc_Pl_/VSCALE_A
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
Cmd_/VSCALE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*PAR(_z(2))
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(3)))
:E End
:! 
:N Fnc_Pl_/XFRM
:S    321,   126,   188
:T Cmd
:C )! Fnc_Pl_/XFRM
:C )/go
:D Rotational Center
:B Fnc_Pl_/XFRM
:H Hlp_C_/XFRM
Cmd_/XFRM
 Fld_0
  Typ_Lab
  Prm_[/XFRM]   Rotational Center
 Fld_2
  Typ_DEF_XYZ
 Fld_3
  Prm_X1,Y1,Z1  Center of Rotation
  Typ_REAL3
 Fld_6
  Prm_X2,Y2,Z2  Axis of Rotation
  Typ_REAL3
:E END
:! 
:N Fnc_Pl_ANCMERR
:S    366,   353,     6
:T Cmd
:C )! Fnc_Pl_ANCMERR
:H Hlp_C_ANIM
:A Animation Error
:D Animation Error
:C )/nopr
:C )*create,ansuitmp
:C )*msg,UI
:C )Cyclic Animation is only possible in POST1 with a SET command %/&
:C )issued and the number of sectors is greater than 1. %/&
:C )Command Ignored.
:C )*end
:C )/input,ansuitmp
:C )/go
Inp_P
:E End
:! 
:N Fnc_Pl_ANCNTR
:S    213,   115,    91
:T Cmd
:A Deformed Results
:D Animate Nodal Solution Data
:H Hlp_C_ANCNTR
Inp_P
Cmd_)!
K_LN(POST1+RESULTS)
Cal_Fnc_Pl_ANCNTR0
K_LN(post1*results)
Cal_Fnc_Pl_ANIMERR
:E End
:! 
:N Fnc_Pl_ANCNTR0
:S  30809,   143, 30659
:T Cmd
:A    Nodal Solu
:D Animate Nodal Solution Data
:H Hlp_C_ANCNTR
:K #(POST1+RESULTS)
:C )/nopr
Inp_NoApply
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_Animation data
 Fld_2
  Typ_INT
  Prm_No. of frames to create
  Def_10
Cmd_)*SET,_z2
 Fld_2
  Typ_REAL
  Prm_Time delay (seconds)
K_LN(intelnt+alphant)
  Def_0.1
K_LN(INTELNT*ALPHANT)
  Def_0.5
 Fld_0
  Typ_Sep
Cmd_)/GOPR
Cmd_PLNSOL
 Fld_0
  Typ_Lab
  Prm_[PLNSOL]  Contour Nodal Solution Data
 Fld_2
  K_FL(LSDYNA)
  Prm_Display Type
  Typ_IDX
  IDX_DOF solution    ,Translation   UX,U,X
  IDX_DOF solution    ,              UY,U,Y
  IDX_DOF solution    ,              UZ,U,Z
  IDX_DOF solution    ,            USUM,U,SUM
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  IDX_DOF solution    ,            ROTY,ROT,Y
  IDX_DOF solution    ,            ROTZ,ROT,Z
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  IDX_DOF solution    ,Acceleration  AX,A,X
  IDX_DOF solution    ,              AY,A,Y
  IDX_DOF solution    ,              AZ,A,Z
  IDX_DOF solution    ,            ASUM,A,SUM
  IDX_DOF solution    ,Velocity      VX,V,X
  IDX_DOF solution    ,              VY,V,Y
  IDX_DOF solution    ,              VZ,V,Z
  IDX_DOF solution    ,            VSUM,V,SUM
!
  IDX_Stress          ,X-direction   SX,S,X
  IDX_Stress          ,Y-direction   SY,S,Y
  IDX_Stress          ,Z-direction   SZ,S,Z
  IDX_Stress          ,XY-shear     SXY,S,XY
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  IDX_Stress          ,1st principal S1,S,1
  IDX_Stress          ,2nd principal S2,S,2
  IDX_Stress          ,3rd principal S3,S,3
  IDX_Stress          ,Intensity   SINT,S,INT
  IDX_Stress          ,von Mises   SEQV,S,EQV
!
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
!
 Fld_2
  K_FL((STRUCTRL*LSDYNA)+multifld)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,WARP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress        GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO
!
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Failure Criteria,Max Stress     SMAX,FAIL,SMAX
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Failure Criteria,Tsai-Wu Index  TWSI,FAIL,TWSI
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Failure Criteria,Tsai-Wu Ratio  TWSR,FAIL,TWSR
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Failure Criteria,Max Strain     EMAX,FAIL,EMAX
!
 Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,TEMP
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE10,TE10
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE11,TE11
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE12,TE12
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE13,TE13
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE14,TE14
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE15,TE15
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE16,TE16
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE17,TE17
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE18,TE18
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE19,TE19
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE20,TE20
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE21,TE21
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE22,TE22
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE23,TE23
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE24,TE24
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE25,TE25
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE26,TE26
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE27,TE27
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE28,TE28
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE29,TE29
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE30,TE30
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE31,TE31
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP
!
!
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,A,SUM
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,CURR,
!
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,B,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,B,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,B,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,H,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,H,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,H,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,H,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,D,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,D,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,D,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,EF,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,EF,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
!
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,FMAG,Y
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
  P_LN(ELECMAG)
  IDX_Current Density ,Conducting   JCX,JC,X
  P_LN(ELECMAG)
  IDX_Current Density ,             JCY,JC,Y
  P_LN(ELECMAG)
  IDX_Current Density ,             JCZ,JC,Z
  P_LN(ELECMAG)
  IDX_Current Density ,           JCSUM,JC,SUM
!
 Fld_2
  K_FL(FLUID+lsdyna+multifld)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
 Fld_2
  K_FL(CFD+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Displacement  UX,U,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
  P_LN(FLOTRAN)
  IDX_Other quantities,Density     DENS,DENS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Viscosity   VISC,VISC,
  P_LN(FLOTRAN)
  IDX_Other quantities,Conductivit COND,COND,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Viscos  EVIS,EVIS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Conduct ECON,ECON,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total temp  TTOT,TTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Strm func2D STRM,STRM,
  P_LN(FLOTRAN)
  IDX_Other quantities,PressurCoef PCOE,PCOE,
  P_LN(FLOTRAN)
  IDX_Other quantities,Mach number MACH,MACH,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total pres  PTOT,PTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Heat flux   HFLU,HFLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Film coeff  HFLM,HFLM,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb law Y+ YPLU,YPLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Wall shear  TAUW,TAUW,
!
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,WARP,
  K_LN(lsdyna)
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,A,X
  K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration  AX,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,A,SUM
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,CURR,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  K_LN(lsdyna)
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PRES,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,B,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,B,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,B,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,H,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,H,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,H,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,H,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,D,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,D,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,D,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,EF,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,EF,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,FMAG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO
Cal_Fnc_Pl_ANCNTR2
:E END
:! 
:N Fnc_Pl_ANCNTR2
:S    173,    95,    71
:T Command
:A Animation data
:D Enter Animation data
Inp_P
Cmd_ANCNTR
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_Pl_ANCYC
:S    376,   265,   104
:C )! Fnc_Pl_ANCYC
:C )/nopr
:C )*GET,_z1,common,,cpost1,,int,405
:C )KEYW,CYCLIC,0
:C )*IF,_z1,gt,1,then
:C )KEYW,CYCLIC,1
:C )*ENDIF
:C )/go
:T Cmd
:A Cyclic Wave Mode Shape
:D Animate Cyclic Wave Mode Shape
:H Hlp_C_ANCYC
Inp_P
Cmd_)!
K_LN(POST1+RESULTS+CYCLIC)
Cal_Fnc_Pl_ANCYC0
K_LN(post1*results*cyclic)
Cal_Fnc_Pl_ANCMERR
:E End
:! 
:N Fnc_Pl_ANCYC0
:S  32287,   206, 32074
:T Cmd
:C )! Fnc_Pl_ANCYC
:A Cyclic Wave Mode Shape
:D Animate Cyclic Wave Mode Shape
:H Hlp_C_ANCYC
:K (PR_STRUC*pr_set)
:K #(POST1+RESULTS)
:P (LINPLUS)
:C )/nopr
Inp_NoApply
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_Animation data
 Fld_2
  Typ_INT
  Prm_No. of frames to create
  Def_18
Cmd_)*SET,_z2
 Fld_2
  Typ_REAL
  Prm_Time delay (seconds)
K_LN(intelnt+alphant)
  Def_0.1
K_LN(INTELNT*ALPHANT)
  Def_0.5
 Fld_0
  Typ_Sep
Cmd_)*SET,_z3
 Fld_2
  Prm_Animation Mode
  Typ_LIS_RADIOB
  LIS_FWD-REV-FWD,0
  LIS_FWD-RES-FWD,1
  Def_1
 Fld_0
  Typ_Sep
Cmd_)*CSET,1,3
 Fld_0
  Typ_Lab
  Prm_Nodal Solution Data
 Fld_2
  K_FL((STRUCTRL*LSDYNA)+multifld)
  Prm_Display Type
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  P_LN(LINPLUS)
  IDX_DOF solution    ,Def + undeformed,PLDI,1
  P_LN(LINPLUS)
  IDX_DOF solution    ,Def + undef edge,PLDI,2
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,PLNS,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,PLNS,WARP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,PLNS,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,PLNS,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,PLNS,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,PLNS,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,PLNS,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,PLNS,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,PLNS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,PLNS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,PLNS,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,PLNS,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,PLNS,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,PLNS,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,PLNS,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,PLNS,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,PLNS,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,PLNS,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,PLNS,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,PLNS,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,PLNS,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,PLNS,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,PLNS,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,PLNS,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,PLNS,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,PLNS,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,PLNS,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,PLNS,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,PLNS,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,PLNS,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,PLNS,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,PLNS,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,PLNS,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,PLNS,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,PLNS,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,PLNS,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,PLNS,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,PLNS,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,PLNS,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,PLNS,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,PLNS,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,PLNS,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,PLNS,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,PLNS,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,PLNS,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,PLNS,EPSW,
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Status      STAT,PLNS,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Penetration PENE,PLNS,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Gap         GAP ,PLNS,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Pressure    PRES,PLNS,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fric Stress SFRI,PLNS,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,TotalStress STOT,PLNS,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,SlidingDist SLID,PLNS,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Heat flux   FLUX,PLNS,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Chattering  CNOS,PLNS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fluid Pres  FPRS,PLNS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Status      STAT,PLES,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Penetration PENE,PLES,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Gap         GAP ,PLES,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Pressure    PRES,PLES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fric Stress SFRI,PLES,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,TotalStress STOT,PLES,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,SlidingDist SLID,PLES,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Heat flux   FLUX,PLES,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Chattering  CNOS,PLES,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element   ,Fluid Pres  FPRS,PLES,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-nodal TOPO,PLNS,TOPO
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-elmnt TOPO,PLES,TOPO
!
 Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TBOT,PLNS,TBOT
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE2 , PLNS,TE2 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE3 , PLNS,TE3 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE4 , PLNS,TE4 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE5 , PLNS,TE5 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE6 , PLNS,TE6 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE7 , PLNS,TE7 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE8 , PLNS,TE8 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 , PLNS,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE10, PLNS,TE10
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE11, PLNS,TE11
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE12, PLNS,TE12
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE13, PLNS,TE13
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE14, PLNS,TE14
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE15, PLNS,TE15
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE16, PLNS,TE16
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE17, PLNS,TE17
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE18, PLNS,TE18
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE19, PLNS,TE19
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE20, PLNS,TE20
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE21, PLNS,TE21
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE22, PLNS,TE22
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE23, PLNS,TE23
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE24, PLNS,TE24
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE25, PLNS,TE25
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE26, PLNS,TE26
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE27, PLNS,TE27
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE28, PLNS,TE28
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE29, PLNS,TE29
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE30, PLNS,TE30
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE31, PLNS,TE31
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TTOP, PLNS,TTOP
!
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,PLNS,MAG,
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,PLNS,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,PLNS,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,PLNS,VOLT,
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,PLNS,EMF,
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,PLNS,CURR,
!
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,PLNS,B,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,PLNS,B,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,PLNS,B,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,PLNS,B,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,PLNS,H,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,PLNS,H,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,PLNS,H,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,PLNS,H,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,PLNS,D,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,PLNS,D,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,PLNS,D,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,PLNS,D,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,PLNS,EF,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,PLNS,EF,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,PLNS,EF,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,PLNS,EF,SUM
!
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,PLNS,FMAG,X
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,PLNS,FMAG,Y
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,PLNS,FMAG,Z
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,PLNS,FMAG,SUM
!
 Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
 Fld_2
  K_FL(CFD+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Turb K.E.   ENKE,PLNS,ENKE,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Enrg dissip ENDS,PLNS,ENDS,
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
  P_LN(FLOTRAN)
  IDX_Other quantities,Density     DENS,PLNS,DENS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Viscosity   VISC,PLNS,VISC,
  P_LN(FLOTRAN)
  IDX_Other quantities,Conductivit COND,PLNS,COND,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Viscos  EVIS,PLNS,EVIS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Conduct ECON,PLNS,ECON,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total temp  TTOT,PLNS,TTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Strm func2D STRM,PLNS,STRM,
  P_LN(FLOTRAN)
  IDX_Other quantities,PressurCoef PCOE,PLNS,PCOE,
  P_LN(FLOTRAN)
  IDX_Other quantities,Mach number MACH,PLNS,MACH,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total pres  PTOT,PLNS,PTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Heat flux   HFLU,PLNS,HFLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Film coeff  HFLM,PLNS,HFLM,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb law Y+ YPLU,PLNS,YPLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Wall shear  TAUW,PLNS,TAUW,
!
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  P_LN(LINPLUS)
  IDX_DOF solution    ,Def + undeformed,PLDI,1
  P_LN(LINPLUS)
  IDX_DOF solution    ,Def + undef edge,PLDI,2
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,PLNS,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,PLNS,WARP,
  K_(lsdyna)
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  K_(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,PLNS,MAG,
  K_(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,PLNS,A,X
  K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration  AX,PLNS,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,PLNS,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,PLNS,VOLT,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,PLNS,EMF,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,PLNS,CURR,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  K_LN(lsdyna)
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,PLNS,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,PLNS,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,PLNS,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,PLNS,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,PLNS,B,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,PLNS,B,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,PLNS,B,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,PLNS,B,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,PLNS,H,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,PLNS,H,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,PLNS,H,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,PLNS,H,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,PLNS,D,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,PLNS,D,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,PLNS,D,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,PLNS,D,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,PLNS,EF,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,PLNS,EF,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,PLNS,EF,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,PLNS,EF,SUM
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,PLNS,FMAG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,PLNS,FMAG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,PLNS,FMAG,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,PLNS,FMAG,SUM
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,PLNS,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,PLNS,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,PLNS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,PLNS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,PLNS,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,PLNS,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,PLNS,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,PLNS,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,PLNS,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,PLNS,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,PLNS,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,PLNS,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,PLNS,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,PLNS,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,PLNS,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,PLNS,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,PLNS,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,PLNS,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,PLNS,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,PLNS,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,PLNS,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,PLNS,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,PLNS,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,PLNS,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,PLNS,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,PLNS,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,PLNS,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,PLNS,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,PLNS,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,PLNS,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,PLNS,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,PLNS,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,PLNS,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,PLNS,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,PLNS,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,PLNS,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,PLNS,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,PLNS,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,PLNS,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,PLNS,EPSW,
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Status      STAT,PLNS,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Penetration PENE,PLNS,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Gap         GAP ,PLNS,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Pressure    PRES,PLNS,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fric Stress SFRI,PLNS,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,TotalStress STOT,PLNS,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,SlidingDist SLID,PLNS,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Heat flux   FLUX,PLNS,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Chattering  CNOS,PLNS,CONT,CNOS
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Status      STAT,PLES,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Penetration PENE,PLES,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Gap         GAP ,PLES,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Pressure    PRES,PLES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fric Stress SFRI,PLES,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,TotalStress STOT,PLES,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,SlidingDist SLID,PLES,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Heat flux   FLUX,PLES,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Chattering  CNOS,PLES,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fluid Pres  FPRS,PLES,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-nodal TOPO,PLNS,TOPO
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-elmnt TOPO,PLES,TOPO
Cmd_)/GOPR
Cal_Fnc_Pl_ANCYC2
:E END
:! 
:N Fnc_Pl_ANCYC2
:S    287,    94,   186
:T Command
:A Animation data
:D Enter Animation data
Inp_P
Cmd_PLNSOL
 Fld_1
  Typ_Def_*CPAR(1)
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_*CPAR(3)
Cmd_ANCYC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z3)
 Fld_4
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_Pl_ANDATA
:S    210,   112,    91
:T Cmd
:A Animate Over Results
:D Animate Over Results
:H Hlp_C_ANDATA
Inp_P
Cmd_)!
K_LN(POST1+RESULTS)
Cal_Fnc_Pl_ANDATA0
K_LN(post1*results)
Cal_Fnc_Pl_ANIMERR
:E End
:! 
:N Fnc_Pl_ANDATA0
:S  34788,   215, 34566
:T Cmd
:A Animate Over Results
:D Animate Over Results
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,array,10
:C )/GO
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*FLOTRAN)
:H Hlp_UI_ANIMRES
Inp_NoApply
Fld_0
 K_FL(lsdyna)
  Typ_Lab
  Prm_[ANDATA]  Animate result data (stored results only, no interpolation)
Fld_0
 K_FL(LSDYNA)
  Typ_Lab
  Prm_[ANDATA / ANMRES]  Animate result data 
Fld_0
 K_FL(LSDYNA)
  Typ_Lab
  Prm_                    (stored results only, no interpolation)
Cmd_)/NOPR
Cmd_)*SET,_z3
 Fld_2
 Prm_Model result data
  Typ_Lis_RadioB
   Lis_Current Load Stp,0
   Lis_Load Step Range,1
   Lis_Result Set Range,2
   K_LN(LSDYNA)
   Lis_File Range,3
Cmd_)*SET,_z(1)
 Fld_2
  Typ_INT2
  Prm_Range Minimum, Maximum
Cmd_)*SET,_z6
 Fld_2
  Typ_INT
  Prm_Increment result set
  Def_1
Cmd_)*SET,_z10
 K_CM(LSDYNA)
 Fld_2
  Typ_INT
  Prm_Increment file set
  Def_1
Cmd_)*SET,_z7
 Fld_2
  Typ_LOGI," "," "
  Prm_Include last SBST for each LDST
  Def_0
Cmd_)*SET,_z8
 Fld_2
  Typ_LOGI,Off,On
  Prm_Auto contour scaling
  Def_1
Cmd_)*SET,_z1
 Fld_2
  Typ_REAL
  Prm_Animation time delay (sec)
K_LN(intelnt+alphant)
  Def_0.1
K_LN(INTELNT*ALPHANT)
  Def_0.5
 Fld_0
  Typ_Sep
Cmd_)*CSET,1,3
 Fld_0
  Typ_Lab
  Prm_[PLDI,PLNS,PLVE,PLES]
 Fld_2
  K_FL(LSDYNA)
  Prm_Contour data for animation
  Typ_IDX
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  IDX_DOF solution    ,              UY,PLNS,U,Y
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  IDX_DOF solution    ,Acceleration  AX,PLNS,A,X
  IDX_DOF solution    ,              AY,PLNS,A,Y
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  IDX_DOF solution    ,              VY,PLNS,V,Y
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
!
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  IDX_Stress          ,1st principal S1,PLNS,S,1
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
!
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
!
 Fld_2
  K_FL((STRUCTRL)+multifld+lsdyna)
  Prm_Contour data for animation
  Typ_IDX
  IDX_Use Last Display," "             ,-999,-999
  P_LN(LINPLUS)
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,PLNS,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,PLNS,WARP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,PLNS,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,PLNS,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,PLNS,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,PLNS,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,PLNS,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,PLNS,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,PLNS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,PLNS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,PLNS,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,PLNS,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,PLNS,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,PLNS,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,PLNS,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,PLNS,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,PLNS,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,PLNS,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,PLNS,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,PLNS,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,PLNS,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,PLNS,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,PLNS,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,PLNS,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,PLNS,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,PLNS,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,PLNS,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,PLNS,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,PLNS,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,PLNS,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,PLNS,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,PLNS,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,PLNS,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,PLNS,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,PLNS,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,PLNS,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,PLNS,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,PLNS,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,PLNS,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,PLNS,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,PLNS,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,PLNS,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,PLNS,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,PLNS,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,PLNS,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,PLNS,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Status      STAT,PLNS,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Penetration PENE,PLNS,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Gap         GAP ,PLNS,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Pressure    PRES,PLNS,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fric Stress SFRI,PLNS,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,TotalStress STOT,PLNS,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,SlidingDist SLID,PLNS,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Heat flux   FLUX,PLNS,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Chattering  CNOS,PLNS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact_nodal   ,Fluid Pres  FPRS,PLNS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Status      STAT,PLES,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Penetration PENE,PLES,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Gap         GAP ,PLES,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Pressure    PRES,PLES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fric Stress SFRI,PLES,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,TotalStress STOT,PLES,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,SlidingDist SLID,PLES,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Heat flux   FLUX,PLES,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Chattering  CNOS,PLES,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact_element ,Fluid Pres  FPRS,PLES,CONT,FPRS
!
 Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TBOT, PLNS,TBOT
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE2 , PLNS,TE2 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE3 , PLNS,TE3 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE4 , PLNS,TE4 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE5 , PLNS,TE5 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE6 , PLNS,TE6 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE7 , PLNS,TE7 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE8 , PLNS,TE8 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 , PLNS,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE10, PLNS,TE10
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE11, PLNS,TE11
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE12, PLNS,TE12
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE13, PLNS,TE13
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE14, PLNS,TE14
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE15, PLNS,TE15
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE16, PLNS,TE16
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE17, PLNS,TE17
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE18, PLNS,TE18
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE19, PLNS,TE19
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE20, PLNS,TE20
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE21, PLNS,TE21
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE22, PLNS,TE22
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE23, PLNS,TE23
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE24, PLNS,TE24
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE25, PLNS,TE25
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE26, PLNS,TE26
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE27, PLNS,TE27
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE28, PLNS,TE28
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE29, PLNS,TE29
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE30, PLNS,TE30
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE31, PLNS,TE31
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TTOP, PLNS,TTOP
!
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,PLNS,MAG,
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,PLNS,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,PLNS,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,PLNS,VOLT,
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,PLNS,EMF,
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,PLNS,CURR,
!
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,PLNS,B,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,PLNS,B,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,PLNS,B,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,PLNS,B,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,PLNS,H,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,PLNS,H,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,PLNS,H,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,PLNS,H,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,PLNS,D,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,PLNS,D,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,PLNS,D,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,PLNS,D,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,PLNS,EF,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,PLNS,EF,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,PLNS,EF,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,PLNS,EF,SUM
!
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,PLNS,FMAG,X
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,PLNS,FMAG,Y
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,PLNS,FMAG,Z
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,PLNS,FMAG,SUM
!
 Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
 Fld_2
  K_FL(CFD+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_Mesh            ,Deformed shape  ,PLDI
  P_LN(FLOTRAN)
  IDX_Mesh            ,Def+ undeformed ,PLDI,1
  P_LN(FLOTRAN)
  IDX_Mesh            ,Def+ undef edge ,PLDI,2
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Displacement  UX,PLNS,U,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UY,PLNS,U,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Turb K.E.   ENKE,PLNS,ENKE,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Enrg dissip ENDS,PLNS,ENDS,
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
  P_LN(FLOTRAN)
  IDX_Vector plot     ,Velocity       V,PLVE,V
  P_LN(FLOTRAN)
  IDX_Vector plot     ,Def mesh + Vel V,PLVE,'V,,,,,,,1'
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
  P_LN(FLOTRAN)
  IDX_Other quantities,Density     DENS,PLNS,DENS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Viscosity   VISC,PLNS,VISC,
  P_LN(FLOTRAN)
  IDX_Other quantities,Conductivit COND,PLNS,COND,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Viscos  EVIS,PLNS,EVIS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Conduct ECON,PLNS,ECON,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total temp  TTOT,PLNS,TTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Strm func2D STRM,PLNS,STRM,
  P_LN(FLOTRAN)
  IDX_Other quantities,PressurCoef PCOE,PLNS,PCOE,
  P_LN(FLOTRAN)
  IDX_Other quantities,Mach number MACH,PLNS,MACH,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total pres  PTOT,PLNS,PTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Heat flux   HFLU,PLNS,HFLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Film coeff  HFLM,PLNS,HFLM,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb law Y+ YPLU,PLNS,YPLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Wall shear  TAUW,PLNS,TAUW,
!
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,PLNS,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,PLNS,WARP,
  K_LN(lsdyna)
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,PLNS,MAG,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,PLNS,A,X
  K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration  AX,PLNS,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,PLNS,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,PLNS,VOLT,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,PLNS,EMF,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,PLNS,CURR,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  K_LN(lsdyna)
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,PLNS,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,PLNS,NL,SEPL
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,PLNS,NL,SRAT
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,PLNS,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,PLNS,B,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,PLNS,B,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,PLNS,B,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,PLNS,B,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,PLNS,H,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,PLNS,H,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,PLNS,H,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,PLNS,H,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,PLNS,D,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,PLNS,D,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,PLNS,D,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,PLNS,D,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,PLNS,EF,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,PLNS,EF,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,PLNS,EF,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,PLNS,EF,SUM
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,PLNS,FMAG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,PLNS,FMAG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,PLNS,FMAG,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,PLNS,FMAG,SUM
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,PLNS,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,PLNS,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,PLNS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,PLNS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,PLNS,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,PLNS,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,PLNS,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,PLNS,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,PLNS,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,PLNS,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,PLNS,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,PLNS,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,PLNS,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,PLNS,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,PLNS,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,PLNS,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,PLNS,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,PLNS,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,PLNS,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,PLNS,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,PLNS,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,PLNS,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,PLNS,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,PLNS,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,PLNS,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,PLNS,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,PLNS,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,PLNS,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,PLNS,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,PLNS,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,PLNS,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,PLNS,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,PLNS,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,PLNS,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,PLNS,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,PLNS,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,PLNS,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,PLNS,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,PLNS,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,PLNS,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Status      STAT,PLNS,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Penetration PENE,PLNS,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Gap         GAP ,PLNS,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Pressure    PRES,PLNS,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fric Stress SFRI,PLNS,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,TotalStress STOT,PLNS,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,SlidingDist SLID,PLNS,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Heat flux   FLUX,PLNS,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Chattering  CNOS,PLNS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact_nodal   ,Fluid Pres  FPRS,PLNS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Status      STAT,PLES,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Penetration PENE,PLES,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Gap         GAP ,PLES,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Pressure    PRES,PLES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fric Stress SFRI,PLES,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,TotalStress STOT,PLES,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,SlidingDist SLID,PLES,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Heat flux   FLUX,PLES,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Chattering  CNOS,PLES,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact_element ,Fluid Pres  FPRS,PLES,CONT,FPRS
Cmd_)/GO
!
Cal_Fnc_Pl_ANDATA2
:E END
:! 
:N Fnc_Pl_ANDATA2
:S   1146,   412,   727
:T Command
:A HIDDEN
:D Enter Animation data
:C )/NOPR
:C )KEYW,USEFILES,0
:C )*IF,_z3,EQ,3,THEN
:C )KEYW,USEFILES,1
:C )*ENDIF
:C )KEYW,LASTDISP,0
:C )*GET,_z9,CPAR,1
:C )*IF,_z9,EQ,-999,THEN
:C )KEYW,LASTDISP,1
:C )_z9=1
:C )*ELSE
:C )_z9=0
:C )*ENDIF
:C )*GET,_z5,PARM,_z,TYPE
:C )*IF,_z5,EQ,-1,THEN
:C )*DIM,_z,,10
:C )_z(1) = 0.0
:C )_z(2) = 0.0
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)*IF,_z9,EQ,0,THEN
Cmd_)INNS
 K_CM(lastdisp)
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_*CPAR(3)
Cmd_)/GO
 K_CM(lastdisp)
Cmd_PLNS
 K_CM(lastdisp)
 Fld_1
  Typ_Def_*CPAR(1)
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_*CPAR(3)
Cmd_)/NOPR
Cmd_)*ENDIF
Cmd_)/GO
Cmd_ANDATA
 K_CM(usefiles)
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_Def_*PAR(_z3)
 Fld_5
  Typ_Def_*PAR(_z(1))
 Fld_6
  Typ_Def_*PAR(_z(2))
 Fld_7
  Typ_Def_*PAR(_z6)
 Fld_8
  Typ_Def_*PAR(_z7)
 Fld_9
  Typ_Def_*PAR(_z8)
Cmd_ANMRES
 K_CM(USEFILES)
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z(1))
 Fld_4
  Typ_Def_*PAR(_z(2))
 Fld_5
  Typ_Def_*PAR(_z10)
 Fld_6
  Typ_Def_*PAR(_z8)
 Fld_7
  Typ_Def_*PAR(_z6)
Cmd_)/NOPR
Cmd_)INNS,PREV
Cmd_)/GO
:E END
:! 
:N Fnc_Pl_ANDSCL
:S    206,   108,    91
:T Cmd
:A Deformed Shape
:D Animate Deformed Shape
:H Hlp_C_ANDSCL
Inp_P
Cmd_)!
K_LN(POST1+RESULTS)
Cal_Fnc_Pl_ANDSCL0
K_LN(post1*results)
Cal_Fnc_Pl_ANIMERR
:E End
:! 
:N Fnc_Pl_ANDSCL0
:S    694,   201,   486
:T Cmd
:C )! Fnc_Pl_ANDSCL
:A Animate Deformed Shape
:D Animate Deformed Shape
:H Hlp_C_ANDSCL
:K (PR_STRUC*pr_set)
:K #(POST1+RESULTS)
:P (LINPLUS)
:C )/nopr
Inp_NoApply
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_Animation data
 Fld_2
  Typ_INT
  Prm_No. of frames to create
  Def_10
Cmd_)*SET,_z2
 Fld_2
  Typ_REAL
  Prm_Time delay (seconds)
K_LN(intelnt+alphant)
  Def_0.1
K_LN(INTELNT*ALPHANT)
  Def_0.5
 Fld_0
  Typ_Sep
Cmd_)/GOPR
Cmd_PLDISP
 Fld_0
  Typ_Lab
  Prm_[PLDISP]  Plot Deformed Shape
 Fld_2
  Prm_KUND   Items to be plotted
  Typ_LIS_RADIOB
  LIS_Def shape only  ,0
  LIS_Def + undeformed,1
  LIS_Def + undef edge,2
Cal_Fnc_Pl_ANDSCL2
:E END
:! 
:N Fnc_Pl_ANDSCL2
:S    173,    95,    71
:T Command
:A Animation data
:D Enter Animation data
Inp_P
Cmd_ANDSCL
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_Pl_ANDYNA
:S    208,   110,    91
:T Cmd
:A Dynamic Results
:D Animate Dynamic Results
:H Hlp_C_ANDYNA
Inp_P
Cmd_)!
K_LN(POST1+RESULTS)
Cal_Fnc_Pl_ANDYNA0
K_LN(post1*results)
Cal_Fnc_Pl_ANIMERR
:E End
:! 
:N Fnc_Pl_ANDYNA0
:S  36139,   248, 35884
:T Cmd
:A Dynamic Results
:D Animate Dynamic Results
:H Hlp_C_ANDYNA
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*FLOTRAN)
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,4
:C )*GET,_LDST,ACTIVE,,SET,LSTP
:C )SET,_LDST,LAST
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_0
  Typ_Lab
  Prm_Animation data
 Fld_2
  Typ_REAL
  Prm_Time delay (seconds)
K_LN(intelnt+alphant)
  Def_0.1
K_LN(INTELNT*ALPHANT)
  Def_0.5
Cmd_)*SET,_z(1)
 Fld_2
  Typ_INT3
  Prm_Min,Max,Increment of Substeps
  Def_1,*GET(ACTIVE,,SET,SBST),1
Cmd_)*SET,_z(4)
 Fld_2
  Typ_LOGI,No,Yes
  Prm_Auto Contour Scaling
  Def_1
 Fld_0
  Typ_Sep
Cmd_)/GOPR
Cmd_)*CSET,1,3
 Fld_0
  Typ_Lab
  Prm_Nodal Solution Data
 Fld_2
  K_FL(LSDYNA)
  Prm_Display Type
  Typ_IDX
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  IDX_DOF solution    ,              UY,PLNS,U,Y
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  IDX_DOF solution    ,Acceleration  AX,PLNS,A,X
  IDX_DOF solution    ,              AY,PLNS,A,Y
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  IDX_DOF solution    ,              VY,PLNS,V,Y
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
!
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  IDX_Stress          ,1st principal S1,PLNS,S,1
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
!
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
!
 Fld_2
  K_FL(STRUCTRL+lsdyna+multifld)
  Prm_Display Type
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,PLNS,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,PLNS,WARP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,PLNS,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,PLNS,NL,SEPL
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,PLNS,NL,SRAT
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,PLNS,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,PLNS,NL,PLWK
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,PLNS,NL,PSV
!
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,PLNS,SEND,ELAS
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,PLNS,SEND,PLAS
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,PLNS,SEND,CREE
!
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,PLNS,BFE,TEMP
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,PLNS,EPTH,X
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,PLNS,EPTH,Y
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,PLNS,EPTH,Z
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,PLNS,EPTH,XY
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,PLNS,EPTH,YZ
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,PLNS,EPTH,XZ
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,PLNS,EPTH,1
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,PLNS,EPTH,2
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,PLNS,EPTH,3
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,PLNS,EPTH,INT
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,PLNS,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,PLNS,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,PLNS,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,PLNS,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,PLNS,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,PLNS,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,PLNS,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,PLNS,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,PLNS,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,PLNS,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,PLNS,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,PLNS,NL,EPEQ
!
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,PLNS,EPCR,X
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,PLNS,EPCR,Y
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,PLNS,EPCR,Z
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,PLNS,EPCR,XY
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,PLNS,EPCR,YZ
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,PLNS,EPCR,XZ
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,PLNS,EPCR,1
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,PLNS,EPCR,2
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,PLNS,EPCR,3
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,PLNS,EPCR,INT
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,PLNS,EPCR,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,PLNS,EPSW,
!
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Status      STAT,PLNS,CONT,STAT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Penetration PENE,PLNS,CONT,PENE
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Gap         GAP ,PLNS,CONT,GAP
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Pressure    PRES,PLNS,CONT,PRES
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fric Stress SFRI,PLNS,CONT,SFRI
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,TotalStress STOT,PLNS,CONT,STOT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,SlidingDist SLID,PLNS,CONT,SLID
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Heat flux   FLUX,PLNS,CONT,FLUX
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Chattering  CNOS,PLNS,CONT,CNOS
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fluid Pres  FPRS,PLNS,CONT,FPRS
!
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Status      STAT,PLES,CONT,STAT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Penetration PENE,PLES,CONT,PENE
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Gap         GAP ,PLES,CONT,GAP
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Pressure    PRES,PLES,CONT,PRES
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fric Stress SFRI,PLES,CONT,SFRI
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,TotalStress STOT,PLES,CONT,STOT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,SlidingDist SLID,PLES,CONT,SLID
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Heat flux   FLUX,PLES,CONT,FLUX
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Chattering  CNOS,PLES,CONT,CNOS
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fluid Pres  FPRS,PLES,CONT,FPRS
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket element  ,Stress         GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket element  ,Total closure  GKD   X, GKD,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket element  ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket element  ,Therm closure  GKTH  X,GKTH,X
!
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-nodal TOPO,PLNS,TOPO
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-elmnt TOPO,PLES,TOPO
!
  P_LN(LINPLUS)
  IDX_Failure Criteria,Max Stress     SMAX,FAIL,SMAX
  P_LN(LINPLUS)
  IDX_Failure Criteria,Tsai-Wu Index  TWSI,FAIL,TWSI
  P_LN(LINPLUS)
  IDX_Failure Criteria,Tsai-Wu Ratio  TWSR,FAIL,TWSR
  P_LN(LINPLUS)
  IDX_Failure Criteria,Max Strain     EMAX,FAIL,EMAX
!
 Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TBOT , PLNS,TBOT
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE1 , PLNS,TE1 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE2 , PLNS,TE2 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE3 , PLNS,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 , PLNS,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 , PLNS,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 , PLNS,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 , PLNS,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 , PLNS,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE10, PLNS,TE10
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE11, PLNS,TE11
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE12, PLNS,TE12
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE13, PLNS,TE13
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE14, PLNS,TE14
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE15, PLNS,TE15
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE16, PLNS,TE16
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE17, PLNS,TE17
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE18, PLNS,TE18
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE19, PLNS,TE19
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE20, PLNS,TE20
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE21, PLNS,TE21
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE22, PLNS,TE22
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE23, PLNS,TE23
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE24, PLNS,TE24
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE25, PLNS,TE25
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE26, PLNS,TE26
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE27, PLNS,TE27
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE28, PLNS,TE28
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE29, PLNS,TE29
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE30, PLNS,TE30
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE31, PLNS,TE31
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TTOP, PLNS,TTOP
!
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+lsdyna+structrl+thermal+fluid)
  Prm_Display Type
  Typ_IDX
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,PLNS,MAG,
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,PLNS,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,PLNS,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,PLNS,VOLT,
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,PLNS,EMF,
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,PLNS,CURR,
!
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,PLNS,B,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,PLNS,B,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,PLNS,B,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,PLNS,B,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,PLNS,H,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,PLNS,H,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,PLNS,H,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,PLNS,H,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,PLNS,D,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,PLNS,D,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,PLNS,D,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,PLNS,D,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,PLNS,EF,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,PLNS,EF,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,PLNS,EF,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,PLNS,EF,SUM
!
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,PLNS,FMAG,X
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,PLNS,FMAG,Y
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,PLNS,FMAG,Z
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,PLNS,FMAG,SUM
!
 Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
 Fld_2
  K_FL(CFD+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Turb K.E.   ENKE,PLNS,ENKE,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Enrg dissip ENDS,PLNS,ENDS,
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
  P_LN(FLOTRAN)
  IDX_Other quantities,Density     DENS,PLNS,DENS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Viscosity   VISC,PLNS,VISC,
  P_LN(FLOTRAN)
  IDX_Other quantities,Conductivit COND,PLNS,COND,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Viscos  EVIS,PLNS,EVIS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Conduct ECON,PLNS,ECON,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total temp  TTOT,PLNS,TTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Strm func2D STRM,PLNS,STRM,
  P_LN(FLOTRAN)
  IDX_Other quantities,PressurCoef PCOE,PLNS,PCOE,
  P_LN(FLOTRAN)
  IDX_Other quantities,Mach number MACH,PLNS,MACH,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total pres  PTOT,PLNS,PTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Heat flux   HFLU,PLNS,HFLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Film coeff  HFLM,PLNS,HFLM,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb law Y+ YPLU,PLNS,YPLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Wall shear  TAUW,PLNS,TAUW,
!
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,PLNS,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,PLNS,WARP,
  K_LN(lsdyna)
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,PLNS,MAG,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,PLNS,A,X
  K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration  AX,PLNS,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,PLNS,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,PLNS,VOLT,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,PLNS,EMF,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,PLNS,CURR,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  K_LN(lsdyna)
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,PLNS,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,PLNS,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,PLNS,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,PLNS,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Status      STAT,PLNS,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Penetration PENE,PLNS,CONT,PENE
  K_LN(lsdyna*PROFS)
  P_LN(FULL_ANS)
  IDX_Contact-nodal   ,Gap         GAP ,PLNS,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Pressure    PRES,PLNS,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fric Stress SFRI,PLNS,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,TotalStress STOT,PLNS,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,SlidingDist SLID,PLNS,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Heat flux   FLUX,PLNS,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Chattering  CNOS,PLNS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fluid Pres  FPRS,PLNS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Status      STAT,PLES,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Penetration PENE,PLES,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Gap         GAP ,PLES,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Pressure    PRES,PLES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fric Stress SFRI,PLES,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,TotalStress STOT,PLES,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,SlidingDist SLID,PLES,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Heat flux   FLUX,PLES,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Chattering  CNOS,PLES,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fluid Pres  FPRS,PLES,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-nodal TOPO,PLNS,TOPO
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-elmnt TOPO,PLES,TOPO
!
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,PLNS,B,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,PLNS,B,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,PLNS,B,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,PLNS,B,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,PLNS,H,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,PLNS,H,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,PLNS,H,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,PLNS,H,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,PLNS,D,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,PLNS,D,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,PLNS,D,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,PLNS,D,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,PLNS,EF,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,PLNS,EF,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,PLNS,EF,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,PLNS,EF,SUM
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,PLNS,FMAG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,PLNS,FMAG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,PLNS,FMAG,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,PLNS,FMAG,SUM
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,PLNS,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,PLNS,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,PLNS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,PLNS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,PLNS,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,PLNS,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,PLNS,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,PLNS,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,PLNS,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,PLNS,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,PLNS,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,PLNS,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,PLNS,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,PLNS,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,PLNS,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,PLNS,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,PLNS,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,PLNS,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,PLNS,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,PLNS,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,PLNS,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,PLNS,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,PLNS,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,PLNS,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,PLNS,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,PLNS,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,PLNS,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,PLNS,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,PLNS,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,PLNS,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,PLNS,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,PLNS,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,PLNS,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,PLNS,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,PLNS,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,PLNS,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,PLNS,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,PLNS,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,PLNS,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,PLNS,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Status      STAT,PLNS,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Penetration PENE,PLNS,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Gap         GAP ,PLNS,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Pressure    PRES,PLNS,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fric Stress SFRI,PLNS,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,TotalStress STOT,PLNS,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,SlidingDist SLID,PLNS,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Heat flux   FLUX,PLNS,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Chattering  CNOS,PLNS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fluid Pres  FPRS,PLNS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Status      STAT,PLES,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Penetration PENE,PLES,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Gap         GAP ,PLES,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Pressure    PRES,PLES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fric Stress SFRI,PLES,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,TotalStress STOT,PLES,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,SlidingDist SLID,PLES,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Heat flux   FLUX,PLES,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Chattering  CNOS,PLES,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fluid Pres  FPRS,PLES,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-nodal TOPO,PLNS,TOPO
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-elmnt TOPO,PLES,TOPO
Cal_Fnc_Pl_ANDYNA2
:E END
:! 
:N Fnc_Pl_ANDYNA2
:S    428,    95,   326
:T Command
:A Animation data
:D Enter Animation data
Inp_P
Cmd_)INNS
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_*CPAR(3)
Cmd_PLNSOL
 Fld_1
  Typ_Def_*CPAR(1)
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_*CPAR(3)
Cmd_ANDYNA
 Fld_2
  Typ_Def_*PAR(_z2)
 Fld_4
  Typ_Def_*PAR(_z(1))
 Fld_5
  Typ_Def_*PAR(_z(2))
 Fld_6
  Typ_Def_*PAR(_z(3))
 Fld_7
  Typ_Def_*PAR(_z(4))
Cmd_)INNS,PREV
:E END
:! 
:N Fnc_Pl_ANHARM
:S    259,   161,    91
:T Cmd
:A Time-harmonic
:D Animate Time-harmonic Solution Over Time
:C )/NOPR
:C )KEYW,ANHARM,1
:C )/GO
:H Hlp_C_ANTIME
Inp_P
Cmd_)!
K_LN(POST1+RESULTS)
Cal_Fnc_Pl_ANTIME0
K_LN(post1*results)
Cal_Fnc_Pl_ANIMERR
:E End
:! 
:N Fnc_Pl_ANIM
:S    441,   134,   300
:T Cmd
:C )! Fnc_Pl_ANIM
:H Hlp_C_ANIM
:A Replay with Options
:D Replay Animation with Options
Cmd_ANIM
 Fld_0
  Typ_Lab
  Prm_[ANIM]  Replay Animation Sequence
 Fld_2
  Typ_INT
  Prm_NCYCL  No. of Animation Sequence
  Def_5
 Fld_3
  Prm_KCYCL  Type of cycling
  Typ_LIS_OPTIONB
  LIS_Forward & back  ,0
  LIS_Forward only    ,1
 Fld_4
  Prm_DELAY  Time delay during anim
  Typ_REAL
  Def_0.015
:E End
:! 
:N Fnc_Pl_ANIMERR
:S    307,   294,     6
:T Cmd
:C )! Fnc_Pl_ANIMERR
:H Hlp_C_ANIM
:A Animation Error
:D Animation Error
:C )/nopr
:C )*create,ansuitmp
:C )*msg,UI
:C )Animation is only possible in POST1 with a SET command issued. %/&
:C )Command Ignored.
:C )*end
:C )/input,ansuitmp
:C )/go
Inp_P
:E End
:! 
:N Fnc_Pl_ANISOS
:S    200,   102,    91
:T Cmd
:A Isosurfaces
:D Animate Isosurfaces
:H Hlp_C_ANCNTR
Inp_P
Cmd_)!
K_LN(POST1+RESULTS)
Cal_Fnc_Pl_ANISOS0
K_LN(post1*results)
Cal_Fnc_Pl_ANIMERR
:E End
:! 
:N Fnc_Pl_ANISOS0
:S  28578,   135, 28436
:T Cmd
:A    Nodal Solu
:D Animate Isosurfaces
:H Hlp_C_ANISOS
:K #(POST1+RESULTS)
:C )/nopr
Inp_NoApply
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_Animation data
 Fld_2
  Typ_INT
  Prm_No. of frames to create
  Def_9
Cmd_)*SET,_z2
 Fld_2
  Typ_REAL
  Prm_Time delay (seconds)
K_LN(intelnt+alphant)
  Def_0.1
K_LN(INTELNT*ALPHANT)
  Def_0.5
 Fld_0
  Typ_Sep
Cmd_)/GOPR
Cmd_PLNSOL
 Fld_0
  Typ_Lab
  Prm_[PLNSOL]  Contour Nodal Solution Data
 Fld_2
  K_FL(STRUCTRL+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,WARP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO
!
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Failure Criteria,Max Stress     SMAX,FAIL,SMAX
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Failure Criteria,Tsai-Wu Index  TWSI,FAIL,TWSI
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Failure Criteria,Tsai-Wu Ratio  TWSR,FAIL,TWSR
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Failure Criteria,Max Strain     EMAX,FAIL,EMAX
!
 Fld_2
  K_FL(THERMAL+multifld+lsdyna))
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE10,TE10
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE11,TE11
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE12,TE12
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE13,TE13
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE14,TE14
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE15,TE15
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE16,TE16
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE17,TE17
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE18,TE18
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE19,TE19
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE20,TE20
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE21,TE21
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE22,TE22
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE23,TE23
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE24,TE24
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE25,TE25
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE26,TE26
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE27,TE27
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE28,TE28
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE29,TE29
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE30,TE30
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE31,TE31
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP
!
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,A,SUM
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,CURR,
!
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,B,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,B,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,B,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,H,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,H,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,H,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,H,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,D,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,D,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,D,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,EF,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,EF,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
!
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,FMAG,Y
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
 Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
 Fld_2
  K_FL(CFD+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Displacement  UX,U,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
  P_LN(FLOTRAN)
  IDX_Other quantities,Density     DENS,DENS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Viscosity   VISC,VISC,
  P_LN(FLOTRAN)
  IDX_Other quantities,Conductivit COND,COND,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Viscos  EVIS,EVIS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Conduct ECON,ECON,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total temp  TTOT,TTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Strm func2D STRM,STRM,
  P_LN(FLOTRAN)
  IDX_Other quantities,PressurCoef PCOE,PCOE,
  P_LN(FLOTRAN)
  IDX_Other quantities,Mach number MACH,MACH,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total pres  PTOT,PTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Heat flux   HFLU,HFLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Film coeff  HFLM,HFLM,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb law Y+ YPLU,YPLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Wall shear  TAUW,TAUW,
!
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,WARP,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(lsdyna)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,A,X
  K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration  AX,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,A,SUM
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,CURR,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  K_LN(lsdyna)
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PRES,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,B,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,B,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,B,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,H,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,H,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,H,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,H,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,D,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,D,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,D,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,EF,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,EF,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,FMAG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
  K_LN(lsdyna)
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO
Cal_Fnc_Pl_ANISOS2
:E END
:! 
:N Fnc_Pl_ANISOS2
:S    173,    95,    71
:T Command
:A Animation data
:D Enter Animation data
Inp_P
Cmd_ANISOS
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_Pl_ANMODE
:S    198,   100,    91
:T Cmd
:A Mode Shape
:D Animate Mode Shape
:H Hlp_C_ANMODE
Inp_P
Cmd_)!
K_LN(POST1+RESULTS)
Cal_Fnc_Pl_ANMODE0
K_LN(post1*results)
Cal_Fnc_Pl_ANIMERR
:E End
:! 
:N Fnc_Pl_ANMODE0
:S  34093,   193, 33893
:T Cmd
:C )! Fnc_Pl_ANMODE
:A Animate Mode Shape
:D Animate Mode Shape
:H Hlp_C_ANMODE
:K (PR_STRUC*pr_set)
:K #(POST1+RESULTS)
:P (LINPLUS)
:C )/nopr
Inp_NoApply
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_Animation data
 Fld_2
  Typ_INT
  Prm_No. of frames to create
  Def_10
Cmd_)*SET,_z2
 Fld_2
  Typ_REAL
  Prm_Time delay (seconds)
K_LN(intelnt+alphant)
  Def_0.1
K_LN(INTELNT*ALPHANT)
  Def_0.5
 Fld_0
  Typ_Sep
Cmd_)*SET,_z3
 Fld_2
  Prm_Acceleration Type
  Typ_LIS_RADIOB
  LIS_Linear,0
  LIS_Sinusoidal,1
 Fld_0
  Typ_Sep
Cmd_)*CSET,1,3
 Fld_0
  Typ_Lab
  Prm_Nodal Solution Data
 Fld_2
  K_FL(LSDYNA)
  Prm_Display Type
  Typ_IDX
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  IDX_DOF solution    ,Def + undeformed,PLDI,1
  IDX_DOF solution    ,Def + undef edge,PLDI,2
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  IDX_DOF solution    ,              UY,PLNS,U,Y
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  IDX_DOF solution    ,Acceleration  AX,PLNS,A,X
  IDX_DOF solution    ,              AY,PLNS,A,Y
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  IDX_DOF solution    ,              VY,PLNS,V,Y
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
!
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  IDX_Stress          ,1st principal S1,PLNS,S,1
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
!
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
!
 Fld_2
  K_FL(STRUCTRL+multifld+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  P_LN(LINPLUS)
  IDX_DOF solution    ,Def + undeformed,PLDI,1
  P_LN(LINPLUS)
  IDX_DOF solution    ,Def + undef edge,PLDI,2
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,PLNS,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,PLNS,WARP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,PLNS,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,PLNS,NL,SEPL
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,PLNS,NL,SRAT
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,PLNS,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,PLNS,NL,PLWK
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,PLNS,NL,PSV
!
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,PLNS,SEND,ELAS
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,PLNS,SEND,PLAS
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,PLNS,SEND,CREE
!
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,PLNS,BFE,TEMP
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,PLNS,EPTH,X
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,PLNS,EPTH,Y
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,PLNS,EPTH,Z
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,PLNS,EPTH,XY
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,PLNS,EPTH,YZ
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,PLNS,EPTH,XZ
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,PLNS,EPTH,1
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,PLNS,EPTH,2
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,PLNS,EPTH,3
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,PLNS,EPTH,INT
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,PLNS,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,PLNS,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,PLNS,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,PLNS,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,PLNS,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,PLNS,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,PLNS,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,PLNS,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,PLNS,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,PLNS,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,PLNS,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,PLNS,NL,EPEQ
!
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,PLNS,EPCR,X
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,PLNS,EPCR,Y
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,PLNS,EPCR,Z
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,PLNS,EPCR,XY
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,PLNS,EPCR,YZ
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,PLNS,EPCR,XZ
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,PLNS,EPCR,1
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,PLNS,EPCR,2
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,PLNS,EPCR,3
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,PLNS,EPCR,INT
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,PLNS,EPCR,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,PLNS,EPSW,
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Status      STAT,PLNS,CONT,STAT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Penetration PENE,PLNS,CONT,PENE
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Gap         GAP ,PLNS,CONT,GAP
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Pressure    PRES,PLNS,CONT,PRES
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fric Stress SFRI,PLNS,CONT,SFRI
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,TotalStress STOT,PLNS,CONT,STOT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,SlidingDist SLID,PLNS,CONT,SLID
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Heat flux   FLUX,PLNS,CONT,FLUX
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Chattering  CNOS,PLNS,CONT,CNOS
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fluid Pres  FPRS,PLNS,CONT,FPRS
!
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Status      STAT,PLES,CONT,STAT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Penetration PENE,PLES,CONT,PENE
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Gap         GAP ,PLES,CONT,GAP
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Pressure    PRES,PLES,CONT,PRES
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fric Stress SFRI,PLES,CONT,SFRI
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,TotalStress STOT,PLES,CONT,STOT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,SlidingDist SLID,PLES,CONT,SLID
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Heat flux   FLUX,PLES,CONT,FLUX
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Chattering  CNOS,PLES,CONT,CNOS
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fluid Pres  FPRS,PLES,CONT,FPRS
!
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-nodal TOPO,PLNS,TOPO
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-elmnt TOPO,PLES,TOPO
!
 Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TBOT,PLNS,TBOT
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE2 , PLNS,TE2 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE3 , PLNS,TE3 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE4 , PLNS,TE4 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE5 , PLNS,TE5 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE6 , PLNS,TE6 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE7 , PLNS,TE7 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE8 , PLNS,TE8 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 , PLNS,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE10, PLNS,TE10
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE11, PLNS,TE11
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE12, PLNS,TE12
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE13, PLNS,TE13
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE14, PLNS,TE14
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE15, PLNS,TE15
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE16, PLNS,TE16
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE17, PLNS,TE17
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE18, PLNS,TE18
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE19, PLNS,TE19
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE20, PLNS,TE20
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE21, PLNS,TE21
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE22, PLNS,TE22
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE23, PLNS,TE23
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE24, PLNS,TE24
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE25, PLNS,TE25
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE26, PLNS,TE26
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE27, PLNS,TE27
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE28, PLNS,TE28
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE29, PLNS,TE29
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE30, PLNS,TE30
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE31, PLNS,TE31
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TTOP, PLNS,TTOP
!
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,PLNS,MAG,
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,PLNS,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,PLNS,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,PLNS,VOLT,
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,PLNS,EMF,
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,PLNS,CURR,
!
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,PLNS,B,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,PLNS,B,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,PLNS,B,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,PLNS,B,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,PLNS,H,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,PLNS,H,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,PLNS,H,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,PLNS,H,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,PLNS,D,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,PLNS,D,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,PLNS,D,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,PLNS,D,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,PLNS,EF,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,PLNS,EF,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,PLNS,EF,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,PLNS,EF,SUM
!
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,PLNS,FMAG,X
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,PLNS,FMAG,Y
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,PLNS,FMAG,Z
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,PLNS,FMAG,SUM
!
 Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
 Fld_2
  K_FL(CFD+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Turb K.E.   ENKE,PLNS,ENKE,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Enrg dissip ENDS,PLNS,ENDS,
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
  P_LN(FLOTRAN)
  IDX_Other quantities,Density     DENS,PLNS,DENS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Viscosity   VISC,PLNS,VISC,
  P_LN(FLOTRAN)
  IDX_Other quantities,Conductivit COND,PLNS,COND,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Viscos  EVIS,PLNS,EVIS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Conduct ECON,PLNS,ECON,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total temp  TTOT,PLNS,TTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Strm func2D STRM,PLNS,STRM,
  P_LN(FLOTRAN)
  IDX_Other quantities,PressurCoef PCOE,PLNS,PCOE,
  P_LN(FLOTRAN)
  IDX_Other quantities,Mach number MACH,PLNS,MACH,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total pres  PTOT,PLNS,PTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Heat flux   HFLU,PLNS,HFLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Film coeff  HFLM,PLNS,HFLM,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb law Y+ YPLU,PLNS,YPLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Wall shear  TAUW,PLNS,TAUW,
!
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  P_LN(LINPLUS)
  IDX_DOF solution    ,Def + undeformed,PLDI,1
  P_LN(LINPLUS)
  IDX_DOF solution    ,Def + undef edge,PLDI,2
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,PLNS,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,PLNS,WARP,
  K_(lsdyna)
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  K_(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,PLNS,MAG,
  K_(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,PLNS,A,X
  K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration  AX,PLNS,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,PLNS,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,PLNS,VOLT,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,PLNS,EMF,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,PLNS,CURR,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  K_LN(lsdyna)
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,PLNS,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,PLNS,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,PLNS,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,PLNS,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,PLNS,B,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,PLNS,B,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,PLNS,B,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,PLNS,B,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,PLNS,H,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,PLNS,H,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,PLNS,H,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,PLNS,H,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,PLNS,D,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,PLNS,D,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,PLNS,D,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,PLNS,D,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,PLNS,EF,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,PLNS,EF,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,PLNS,EF,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,PLNS,EF,SUM
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,PLNS,FMAG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,PLNS,FMAG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,PLNS,FMAG,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,PLNS,FMAG,SUM
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,PLNS,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,PLNS,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,PLNS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,PLNS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,PLNS,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,PLNS,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,PLNS,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,PLNS,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,PLNS,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,PLNS,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,PLNS,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,PLNS,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,PLNS,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,PLNS,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,PLNS,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,PLNS,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,PLNS,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,PLNS,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,PLNS,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,PLNS,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,PLNS,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,PLNS,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,PLNS,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,PLNS,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,PLNS,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,PLNS,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,PLNS,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,PLNS,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,PLNS,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,PLNS,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,PLNS,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,PLNS,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,PLNS,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,PLNS,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,PLNS,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,PLNS,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,PLNS,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,PLNS,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,PLNS,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,PLNS,EPSW,
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Status      STAT,PLNS,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Penetration PENE,PLNS,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Gap         GAP ,PLNS,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Pressure    PRES,PLNS,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fric Stress SFRI,PLNS,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,TotalStress STOT,PLNS,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,SlidingDist SLID,PLNS,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Heat flux   FLUX,PLNS,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Chattering  CNOS,PLNS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fluid Pres  FPRS,PLNS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Status      STAT,PLES,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Penetration PENE,PLES,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Gap         GAP ,PLES,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Pressure    PRES,PLES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fric Stress SFRI,PLES,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,TotalStress STOT,PLES,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,SlidingDist SLID,PLES,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Heat flux   FLUX,PLES,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Chattering  CNOS,PLES,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fluid Pres  FPRS,PLES,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-nodal TOPO,PLNS,TOPO
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Tplgy-elmnt TOPO,PLES,TOPO
Cmd_)/GOPR
Cal_Fnc_Pl_ANMODE2
:E END
:! 
:N Fnc_Pl_ANMODE2
:S    289,    95,   187
:T Command
:A Animation data
:D Enter Animation data
Inp_P
Cmd_PLNSOL
 Fld_1
  Typ_Def_*CPAR(1)
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_*CPAR(3)
Cmd_ANMODE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z2)
 Fld_5
  Typ_Def_*PAR(_z3)
:E END
:! 
:N Fnc_Pl_ANPLTR
:S    204,   106,    91
:T Cmd
:A Particle Flow
:D Animate Trace DIsplay
:H Hlp_C_ANFLOW
Inp_P
Cmd_)!
K_LN(POST1+RESULTS)
Cal_Fnc_Pl_ANPLTR0
K_LN(post1*results)
Cal_Fnc_Pl_ANIMERR
:E End
:! 
:N Fnc_Pl_ANPLTR0
:S   2142,   246,  1889
:T Cmd
:C )! Fnc_PLTRAC
:C )/nopr
:C )_z7=0
:A    Plot Flow Tra
:D Plot Flow Trace
:D Animate Flow Trace
:H Hlp_C_ANFLOW
:K (lsdyna)
:K #(POST1+RESULTS+CFD*ELECTRIC*MAGNETIC)
:P (THERMAL*FLOTRAN*ELECMAG)
Inp_NoApply
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_Animation data
 Fld_2
  Typ_INT
  Prm_No. of frames to create
  Def_10
Cmd_)*SET,_z2
 Fld_2
  Typ_REAL
  Prm_Time delay (seconds)
  Def_0
Cmd_)*SET,_z3
 Fld_2
  Typ_REAL
  Prm_Particle Spacing factor
  Def_1
Cmd_)*SET,_z4
 Fld_2
  Typ_REAL
  Prm_Particle Size factor
  Def_1
Cmd_)*SET,_z5
 Fld_2
  Typ_REAL
  Prm_Particle Length Fraction
  Def_0.2
Cmd_)*SET,_z6
 Fld_2
  K_FL(CFD)
  Prm_Mxloop Max number of loops
  Typ_Int
  Def_25
 Fld_2
  K_FL(cfd)
  Prm_Mxloop Max number of loops
  Typ_Int
  Def_1000
 Fld_0
  Typ_Sep
Cmd_)*CSET,1,2
K_CM(CFD+electric+magnetic)
 Fld_0
  Typ_Lab
  Prm_[PLTRAC]  Plot Flow Trace
 Fld_2
  Prm_Item to be contoured along trace
  Typ_IDX
  IDX_DOF solution    ,None            ," "
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  IDX_DOF solution    ,Velocity      VX,V,X
  IDX_DOF solution    ,              VY,V,Y
  IDX_DOF solution    ,              VZ,V,Z
  IDX_DOF solution    ,            VSUM,V,SUM
  IDX_DOF solution    ,Pressure    PRES,PRES,
  IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
  IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
!
  IDX_Other quantities,Density     DENS,DENS,
  IDX_Other quantities,Viscosity   VISC,VISC,
  IDX_Other quantities,Conductivit COND,COND,
  IDX_Other quantities,Eff Viscos  EVIS,EVIS,
  IDX_Other quantities,Eff Conduct ECON,ECON,
  IDX_Other quantities,Total temp  TTOT,TTOT,
  IDX_Other quantities,Strm func2D STRM,STRM,
  IDX_Other quantities,PressurCoef PCOE,PCOE,
  IDX_Other quantities,Mach number MACH,MACH,
  IDX_Other quantities,Total pres  PTOT,PTOT,
!
Cmd_)*SET,_z7
K_CM(CFD+electric+magnetic)
 Fld_2
 Typ_Def_1
!
Cmd_)*CSET,1,1
K_CM(cfd+ELECTRIC*MAGNETIC+pltrem)
 Fld_2
  Prm_[PLTRAC] Plot particle trace in
  Typ_LIS_RadioB
   Lis_Electrostatics  ,'ELEC'
   Lis_Magnetostatics  ,'MAGN'
   Lis_Coupled Elec/Mag,'EMAG'
Cmd_)/GOPR
!
Cal_Fnc_Pl_ANPLTR1
:E END
:! 
:N Fnc_Pl_ANPLTR1
:S   1097,   542,   548
:T Command
:A Animation data
:D Enter Animation data
:C )/NOPR
:C )*IF,_z7,EQ,1,THEN
:C )PLNS,V,SUM
:C )*GET,_VMAX,COMMON,,D3COM,,REAL,292
:C )_VT4=.005
:C )*ELSE
:C )*GET,_VT1,COMMON,,TRPCOM,,REAL,1
:C )*GET,_VT2,COMMON,,TRPCOM,,REAL,2
:C )*GET,_VT3,COMMON,,TRPCOM,,REAL,3
:C )_VMAX=SQRT(_VT1**2+_VT2**2+_VT3**2)
:C )_VT4=.02
:C )*ENDIF
:C )*GET,_NDIS,GRAPH,,NDIS
:C )*IF,_VMAX,GT,0.0,THEN
:C )_z3 = .3*_z3*_NDIS/_VMAX
:C )_z4 = _VT4*_z4*_NDIS
:C )*ELSE
:C )_z3=1.0
:C )_z4=1.0
:C )*ENDIF
:C )/GOPR
Inp_P
Cmd_PLTRAC
K_CM(CFD+electric+magnetic)
 Fld_2
  Typ_Def_FLUID
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*CPAR(2)
 Fld_7
  Typ_Def_*PAR(_z6)
Cmd_PLTRAC
K_CM(cfd+ELECTRIC*MAGNETIC+pltrem)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_7
  Typ_Def_*PAR(_z6)
Cmd_PLTRAC
K_CM(cfd+ELECTRIC*MAGNETIC+PLTREM)
 Fld_2
  Typ_Def_*CPAR(72)
 Fld_7
  Typ_Def_*PAR(_z6)
 Fld_10
  Typ_Def_*CPAR(73)
 Fld_11
  Typ_Def_*CPAR(74)
Cmd_ANFLOW
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z2)
 Fld_6
  Typ_Def_*PAR(_z3)
 Fld_7
  Typ_Def_*PAR(_z4)
 Fld_8
  Typ_Def_*PAR(_z5)
:E END
:! 
:N Fnc_Pl_ANQCNT
:S    233,   135,    91
:T Cmd
:C )! Fnc_Pl_ANQCNT
:A Q-Slice Contours
:D Animate Nodal Solution Data
:H Hlp_C_ANCNTR
Inp_P
Cmd_)!
K_LN(POST1+RESULTS)
Cal_Fnc_Pl_ANQCNT0
K_LN(post1*results)
Cal_Fnc_Pl_ANIMERR
:E End
:! 
:N Fnc_Pl_ANQCNT0
:S  28076,   320, 27749
:T Cmd
:C )! Fnc_Pl_ANQCNT0
:C )/NOPR
:C )! If pgr file is active then nodes are not available
:C )*GET,_z1,RSET,,PGR
:C )KEYW,PGRFILE,_z1
:C )*CSET,1,1,0
:C )*CSET,2,2,0
:C )*CSET,3,3,0
:C )/GO
:A    Nodal Solu
:D Animate Nodal Solution Data
:H Hlp_C_ANCUT
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_Animation data
 Fld_2
  Typ_INT
  Prm_No. of frames to create
  Def_10
Cmd_)*SET,_z2
 Fld_2
  Typ_REAL
  Prm_Time delay (seconds)
K_LN(intelnt+alphant)
  Def_0.1
K_LN(INTELNT*ALPHANT)
  Def_0.5
Cmd_)*SET,_z3
 Fld_2
  Typ_REAL
  Prm_Q-Slice working plane offset
  Def_0.1
Cmd_)*SET,_z4
 Fld_2
  Typ_LOGI,No,Yes
  Prm_Topological Effect
Cmd_)*SET,_z5
 Fld_2
  Typ_REAL
  Prm_Topological offset
  Def_0.1
 Fld_0
  Typ_Sep
Cmd_)/GOPR
Cmd_PLNSOL
 Fld_0
  Typ_Lab
  Prm_[PLNSOL]  Contour Nodal Solution Data
 Fld_2
  K_FL((STRUCTRL+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,WARP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO
!
 Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE10,TE10
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE11,TE11
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE12,TE12
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE13,TE13
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE14,TE14
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE15,TE15
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE16,TE16
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE17,TE17
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE18,TE18
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE19,TE19
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE20,TE20
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE21,TE21
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE22,TE22
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE23,TE23
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE24,TE24
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE25,TE25
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE26,TE26
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE27,TE27
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE28,TE28
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE29,TE29
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE30,TE30
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE31,TE31
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP
!
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,A,SUM
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,CURR,
!
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,B,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,B,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,B,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,H,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,H,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,H,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,H,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,D,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,D,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,D,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,EF,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,EF,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
!
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,FMAG,Y
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
  P_LN(ELECMAG)
  IDX_Current Density ,Conducting   JCX,JC,X
  P_LN(ELECMAG)
  IDX_Current Density ,             JCY,JC,Y
  P_LN(ELECMAG)
  IDX_Current Density ,             JCZ,JC,Z
  P_LN(ELECMAG)
  IDX_Current Density ,           JCSUM,JC,SUM
!
 Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
 Fld_2
  K_FL(CFD+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Displacement  UX,U,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
  P_LN(FLOTRAN)
  IDX_Other quantities,Density     DENS,DENS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Viscosity   VISC,VISC,
  P_LN(FLOTRAN)
  IDX_Other quantities,Conductivit COND,COND,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Viscos  EVIS,EVIS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Conduct ECON,ECON,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total temp  TTOT,TTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Strm func2D STRM,STRM,
  P_LN(FLOTRAN)
  IDX_Other quantities,PressurCoef PCOE,PCOE,
  P_LN(FLOTRAN)
  IDX_Other quantities,Mach number MACH,MACH,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total pres  PTOT,PTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Heat flux   HFLU,HFLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Film coeff  HFLM,HFLM,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb law Y+ YPLU,YPLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Wall shear  TAUW,TAUW,
!
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,WARP,
  K_LN(lsdyna)
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,A,X
  K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration  AX,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,A,SUM
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,CURR,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  K_LN(lsdyna)
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PRES,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,B,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,B,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,B,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,H,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,H,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,H,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,H,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,D,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,D,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,D,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,EF,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,EF,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,FMAG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO
Cmd_)!
K_LN(pgrfile)
Cal_Fnc_Pl_ANQCNT2
K_LN(PGRFILE)
Cal_Fnc_Pl_ANQCNT3
:E END
:! 
:N Fnc_Pl_ANQCNT2
:S    255,    95,   153
:T Cmd_P
:C )! Fnc_Pl_ANQCNT2
:D Align WP with Nodes
Inp_P
Cmd_)*CSET,1,3
 Fld_2
  Prm_Pick or enter 3 nodes - origin, sweep direction, Y axis
  Typ_NODE
  Min_1
  MOK_3
  PFM_2
  Rub_54
Cal_Fnc_Pl_ANQCNT3
:E END
:! 
:N Fnc_Pl_ANQCNT3
:S    353,   116,   230
:T Command
:A Animation data
:C )! Fnc_Pl_ANQCNT3
:D Enter Animation data
Inp_P
Cmd_ANCUT
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z2)
 Fld_5
  Typ_Def_*PAR(_z3)
 Fld_6
  Typ_Def_*PAR(_z4)
 Fld_7
  Typ_Def_*PAR(_z5)
 Fld_8
  Typ_Def_*CPAR(1)
 Fld_9
  Typ_Def_*CPAR(2)
 Fld_10
  Typ_Def_*CPAR(3)
:E END
:! 
:N Fnc_Pl_ANQVEC
:S    218,   120,    91
:T Cmd
:A Q-Slice Vectors
:D Vector Plot of Predefined Vectors
:H Hlp_C_ANCNTR
Inp_P
Cmd_)!
K_LN(POST1+RESULTS)
Cal_Fnc_Pl_ANQVEC0
K_LN(post1*results)
Cal_Fnc_Pl_ANIMERR
:E End
:! 
:N Fnc_Pl_ANQVEC0
:S   3749,   421,  3321
:T Cmd
:C )! Fnc_Pl_ANQVEC
:C )/NOPR
:C )*GET,_z1,GRAPH,,DISPLAY
:C )*IF,_z1,EQ,0,THEN
:C )_z2='RAST'
:C )*ELSE
:C )_z2='VECT'
:C )*ENDIF
:C )! If pgr file is active then nodes are not available
:C )*GET,_z1,RSET,,PGR
:C )KEYW,PGRFILE,_z1
:C )*CSET,1,1,0
:C )*CSET,2,2,0
:C )*CSET,3,3,0
:C )/GO
:A    Predefined
:D Q-slice Animation of Vectors
:H Hlp_C_ANCUT
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_zz1
 Fld_0
  Typ_Lab
  Prm_Animation data
 Fld_2
  Typ_INT
  Prm_No. of frames to create
  Def_10
Cmd_)*SET,_zz2
 Fld_2
  Typ_REAL
  Prm_Time delay (seconds)
K_LN(intelnt+alphant)
  Def_0.1
K_LN(INTELNT*ALPHANT)
  Def_0.5
Cmd_)*SET,_zz3
 Fld_2
  Typ_REAL
  Prm_Q-Slice Working Plane offset
  Def_0.1
 Fld_0
  Typ_Sep
Cmd_)/GOPR
Cmd_PLVECT
 Fld_0
  Typ_Lab
  Prm_[PLVECT]  Vector Plot of Predefined Vectors
 Fld_2
  K_FL(STRUCTRL+multifld)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation    U,U
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation     ROT,ROT
!
Fld_2
  K_FL(THERMAL+multifld)
  P_FL(THERMAL)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  IDX_Flux & gradient ,Thermal flux  TF,TF
  IDX_Flux & gradient ,Thermal grad  TG,TG
!
Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid)
  P_FL(ELECMAG)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  K_LN((VECTORP*SCALARP+edgeflx+edgeelc+elem2d)*NOFILTER)
  IDX_DOF solution    ,Mag vect poten A,A
!
  IDX_Flux & gradient ,Mag flux dens  B,B
  IDX_Flux & gradient ,Mag field      H,H
  IDX_Flux & gradient ,Elec flux dens D,D
  IDX_Flux & gradient ,Elec field    EF,EF
!
  IDX_Nodal force data,Mag force   FMAG,FMAG
!
Fld_2
  K_FL(FLUID+multifld)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity       V,V
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressure grad PG,PG
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux  TF,TF
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad  TG,TG
!
Fld_2
  K_FL(CFD)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity       V,V
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressure grad PG,PG
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux  TF,TF
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad  TG,TG
!
Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID*LSDYNA))
  Prm_Item  Vector item to be plotted
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation    U,U
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation     ROT,ROT
  P_LN(ELECMAG+(lsdyna))
  K_LN((VECTORP*SCALARP+edgeflx+edgeelc+elem2d)*NOFILTER)
  IDX_DOF solution    ,Mag vect poten A,A
  K_LN(LSDYNA)
  IDX_DOF solution    ,Nodal Accel    A,A
  P_LN(FLOTRAN*LSDYNA)
  IDX_DOF solution    ,Velocity       V,V
!
  P_LN(THERMAL+lsdyna)
  IDX_Flux & gradient ,Thermal flux  TF,TF
  P_LN(THERMAL+lsdyna)
  IDX_Flux & gradient ,Thermal grad  TG,TG
  P_LN(ELECMAG+lsdyna)
  IDX_Flux & gradient ,Mag flux dens  B,B
  P_LN(ELECMAG+lsdyna)
  IDX_Flux & gradient ,Mag field      H,H
  P_LN(ELECMAG+lsdyna)
  IDX_Flux & gradient ,Elec flux dens D,D
  P_LN(ELECMAG+lsdyna)
  IDX_Flux & gradient ,Elec field    EF,EF
  P_LN(FULL_ANS+lsdyna)
  IDX_Flux & gradient ,Pressure grad PG,PG
!
  P_LN(ELECMAG+lsdyna)
  IDX_Nodal force data,Mag force   FMAG,FMAG
!
 Fld_0
  Typ_Sep
 Fld_6
  Prm_Mode  Vector or Raster display
  Typ_Lis_OptionB
   Lis_Raster Mode,RAST
   Lis_Vector Mode,VECT
  Def_*PAR(_z2)
 Fld_7
  Prm_Loc  Vector location for results
  Typ_Lis_OptionB
   Lis_Elem Nodes   ,NODE
   Lis_Elem Centroid,ELEM
 Fld_8
  Prm_Edge Element edges
  Typ_Lis_OptionB
   Lis_Edges only   ,ON
   Lis_Elem Outlines,OFF
Cmd_)!
K_LN(pgrfile)
Cal_Fnc_Pl_ANQVEC2
K_LN(PGRFILE)
Cal_Fnc_Pl_ANQVEC3
:E END
:! 
:N Fnc_Pl_ANQVEC2
:S    234,    74,   153
:T Cmd_P
:D Align WP with Nodes
Inp_P
Cmd_)*CSET,1,3
 Fld_2
  Prm_Pick or enter 3 nodes - origin, sweep direction, Y axis
  Typ_NODE
  Min_1
  MOK_3
  PFM_2
  Rub_54
Cal_Fnc_Pl_ANQVEC3
:E END
:! 
:N Fnc_Pl_ANQVEC3
:S    281,    95,   179
:T Command
:A Animation data
:D Enter Animation data
Inp_P
Cmd_ANCUT
 Fld_2
  Typ_Def_*PAR(_zz1)
 Fld_3
  Typ_Def_*PAR(_zz2)
 Fld_5
  Typ_Def_*PAR(_zz3)
 Fld_8
  Typ_Def_*CPAR(1)
 Fld_9
  Typ_Def_*CPAR(2)
 Fld_10
  Typ_Def_*CPAR(3)
:E END
:! 
:N Fnc_Pl_ANRESU
:S    583,   402,   174
:T Cmd
:C )/NOPR
:C )*SET,_z1,'*.anim'
:C )*SET,_z2,'*.avi'
:C )*IF,d2inqr(46),NE,2,THEN
:C )   *GET,_z3,ACTIVE,,KEYWORD,,WIN32
:C )   *GET,_z4,ACTIVE,,KEYWORD,,WIN32C
:C )   *IF,_z3,NE,1,THEN
:C )      *IF,_z4,NE,1,THEN
:C )         *SET,_z2,'*.anim'
:C )      *ENDIF
:C )   *ENDIF
:C )*ENDIF
:C )/GO
:A Restore Animation
:D Restore Animation
:H Hlp_C_/ANFILE
Fmt_H
Cmd_/ANFILE
 Fld_2
  Typ_Def_RESUME
 Fld_3
  Prm_Restore Animation from
  Typ_FILE
K_LN(intelnt+alphant)
  Def_*PAR(_z1)
K_LN(INTELNT*ALPHANT)
  Def_*PAR(_z2)
Cmd_ANIM
:E END
:! 
:N Fnc_Pl_ANSAVE
:S    580,   396,   177
:T Cmd
:C )/NOPR
:C )*SET,_z1,'*.anim'
:C )*SET,_z2,'*.avi'
:C )*IF,d2inqr(46),NE,2,THEN
:C )   *GET,_z3,ACTIVE,,KEYWORD,,WIN32
:C )   *GET,_z4,ACTIVE,,KEYWORD,,WIN32C
:C )   *IF,_z3,NE,1,THEN
:C )      *IF,_z4,NE,1,THEN
:C )         *SET,_z2,'*.anim'
:C )      *ENDIF
:C )   *ENDIF
:C )*ENDIF
:C )/GO
:A Save Animation
:D Save Animation
:H Hlp_C_/ANFILE
Fmt_H
Inp_NoApply
Cmd_/ANFILE
 Fld_2
  Typ_Def_SAVE
 Fld_3
  Prm_Save Animation to
  Typ_FILE_INLINE
K_LN(intelnt+alphant)
  Def_*PAR(_z1)
K_LN(INTELNT*ALPHANT)
  Def_*PAR(_z2)
:E END
:! 
:N Fnc_Pl_ANTIME
:S    240,   142,    91
:T Cmd
:A Animate Over Time
:D Animate Over Time
:C )/NOPR
:C )KEYW,ANHARM,0
:C )/GO
:H Hlp_C_ANTIME
Inp_P
Cmd_)!
K_LN(POST1+RESULTS)
Cal_Fnc_Pl_ANTIME0
K_LN(post1*results)
Cal_Fnc_Pl_ANIMERR
:E End
:! 
:N Fnc_Pl_ANTIME0
:S  33732,   202, 33523
:T Cmd
:A Animate Over Time
:D Animate Over Time
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,10
:C )/GO
:H Hlp_C_ANTIME
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*FLOTRAN)
Inp_NoApply
Fld_0
K_FL(anharm)
  Typ_Lab
  Prm_[ANTIME]  Animate over time (interpolation of results)
Fld_0
K_FL(ANHARM)
  Typ_Lab
  Prm_[ANHARM]  Animate Time-harmonic solution over time
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  K_FL(anharm)
  Typ_INT
  Prm_Number of animination frames
  Def_10
 Fld_2
  K_FL(ANHARM)
  Typ_INT
  Prm_Number of animination frames
  Def_12
 Fld_0
  K_FL(ANHARM)
  Prm_        (per cycle)
Cmd_)*SET,_z4
K_CM(anharm)
 Fld_2
 Prm_Model result data
  Typ_Lis_RadioB
   Lis_Current Load Stp,"0"
   K_LN(lsdyna)
   Lis_Load Step Range,"1"
   Lis_Time Range,"2"
Cmd_)*SET,_z(1)
K_CM(anharm)
 Fld_2
  Typ_INT2
  Prm_Range Minimum, Maximum
Cmd_)*SET,_z3
K_CM(anharm)
 Fld_2
  Typ_LOGI,Off,On
  Prm_Auto contour scaling
  Def_1
Cmd_)*SET,_z2
 Fld_2
  Typ_REAL
  Prm_Animation time delay (sec)
K_LN(intelnt+alphant)
  Def_0.1
K_LN(INTELNT*ALPHANT)
  Def_0.5
 Fld_0
  Typ_Sep
Cmd_)*CSET,1,3
 Fld_0
  Typ_Lab
  Prm_[PLDI,PLNS,PLVE,PLES]
 Fld_2
  K_FL(LSDYNA)
  Prm_Contour data for animation
  Typ_IDX
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  IDX_DOF solution    ,              UY,PLNS,U,Y
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  IDX_DOF solution    ,Acceleration  AX,PLNS,A,X
  IDX_DOF solution    ,              AY,PLNS,A,Y
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  IDX_DOF solution    ,              VY,PLNS,V,Y
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
!
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  IDX_Stress          ,1st principal S1,PLNS,S,1
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
!
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
!
 Fld_2
  K_FL(STRUCTRL+multifld+lsdyna)
  Prm_Contour data for animation
  Typ_IDX
  IDX_Use Last Display," "             ,-999,-999
  P_LN(LINPLUS)
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,PLNS,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,PLNS,WARP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,PLNS,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,PLNS,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,PLNS,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,PLNS,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,PLNS,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,PLNS,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,PLNS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,PLNS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,PLNS,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,PLNS,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,PLNS,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,PLNS,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,PLNS,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,PLNS,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,PLNS,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,PLNS,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,PLNS,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,PLNS,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,PLNS,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,PLNS,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,PLNS,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,PLNS,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,PLNS,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,PLNS,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,PLNS,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,PLNS,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,PLNS,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,PLNS,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,PLNS,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,PLNS,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,PLNS,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,PLNS,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,PLNS,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,PLNS,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,PLNS,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,PLNS,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,PLNS,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,PLNS,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,PLNS,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,PLNS,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,PLNS,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,PLNS,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,PLNS,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,PLNS,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Status      STAT,PLNS,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Penetration PENE,PLNS,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Gap         GAP ,PLNS,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Pressure    PRES,PLNS,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fric Stress SFRI,PLNS,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,TotalStress STOT,PLNS,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,SlidingDist SLID,PLNS,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Heat flux   FLUX,PLNS,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Chattering  CNOS,PLNS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact_nodal   ,Fluid Pres  FPRS,PLNS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Status      STAT,PLES,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Penetration PENE,PLES,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Gap         GAP ,PLES,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Pressure    PRES,PLES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fric Stress SFRI,PLES,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,TotalStress STOT,PLES,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,SlidingDist SLID,PLES,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Heat flux   FLUX,PLES,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Chattering  CNOS,PLES,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact_element ,Fluid Pres  FPRS,PLES,CONT,FPRS
!
 Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TBOT, PLNS,TBOT
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE2 , PLNS,TE2 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE3 , PLNS,TE3 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE4 , PLNS,TE4 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE5 , PLNS,TE5 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE6 , PLNS,TE6 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE7 , PLNS,TE7 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE8 , PLNS,TE8 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 , PLNS,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE10, PLNS,TE10
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE11, PLNS,TE11
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE12, PLNS,TE12
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE13, PLNS,TE13
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE14, PLNS,TE14
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE15, PLNS,TE15
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE16, PLNS,TE16
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE17, PLNS,TE17
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE18, PLNS,TE18
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE19, PLNS,TE19
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE20, PLNS,TE20
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE21, PLNS,TE21
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE22, PLNS,TE22
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE23, PLNS,TE23
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE24, PLNS,TE24
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE25, PLNS,TE25
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE26, PLNS,TE26
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE27, PLNS,TE27
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE28, PLNS,TE28
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE29, PLNS,TE29
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE30, PLNS,TE30
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE31, PLNS,TE31
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TTOP, PLNS,TOP
!
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,PLNS,MAG,
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,PLNS,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,PLNS,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,PLNS,VOLT,
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,PLNS,EMF,
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,PLNS,CURR,
!
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,PLNS,B,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,PLNS,B,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,PLNS,B,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,PLNS,B,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,PLNS,H,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,PLNS,H,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,PLNS,H,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,PLNS,H,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,PLNS,D,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,PLNS,D,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,PLNS,D,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,PLNS,D,SUM
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,PLNS,EF,X
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,PLNS,EF,Y
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,PLNS,EF,Z
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,PLNS,EF,SUM
!
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,PLNS,FMAG,X
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,PLNS,FMAG,Y
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,PLNS,FMAG,Z
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,PLNS,FMAG,SUM
!
 Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
 Fld_2
  K_FL(CFD+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_Mesh            ,Deformed shape  ,PLDI
  P_LN(FLOTRAN)
  IDX_Mesh            ,Def+ undeformed ,PLDI,1
  P_LN(FLOTRAN)
  IDX_Mesh            ,Def+ undef edge ,PLDI,2
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Displacement  UX,PLNS,U,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UY,PLNS,U,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Turb K.E.   ENKE,PLNS,ENKE,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Enrg dissip ENDS,PLNS,ENDS,
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
  P_LN(FLOTRAN)
  IDX_Vector plot     ,Velocity       V,PLVE,V
  P_LN(FLOTRAN)
  IDX_Vector plot     ,Def mesh + Vel V,PLVE,'V,,,,,,,1'
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Display Type
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Deformed Shape  ,PLDI
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,PLNS,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,PLNS,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,PLNS,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,PLNS,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,PLNS,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,PLNS,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,PLNS,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,PLNS,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,PLNS,WARP,
  K_LN(lsdyna)
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,PLNS,TEMP,
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,PLNS,MAG,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,PLNS,A,X
  K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration  AX,PLNS,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,PLNS,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,PLNS,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,PLNS,A,SUM
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,PLNS,VOLT,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,PLNS,EMF,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,PLNS,CURR,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,PLNS,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,PLNS,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,PLNS,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,PLNS,V,SUM
  K_LN(lsdyna)
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PLNS,PRES,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,PLNS,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,PLNS,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,PLNS,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,PLNS,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,PLNS,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,PLNS,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,PLNS,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,PLNS,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,PLNS,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,PLNS,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,PLNS,S,EQV
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,PLNS,NL,SEPL
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,PLNS,NL,SRAT
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,PLNS,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,PLNS,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,PLNS,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,PLNS,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,PLNS,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,PLNS,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,PLNS,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,PLNS,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,PLNS,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,PLNS,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,PLNS,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,PLNS,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,PLNS,B,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,PLNS,B,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,PLNS,B,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,PLNS,B,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,PLNS,H,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,PLNS,H,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,PLNS,H,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,PLNS,H,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,PLNS,D,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,PLNS,D,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,PLNS,D,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,PLNS,D,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,PLNS,EF,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,PLNS,EF,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,PLNS,EF,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,PLNS,EF,SUM
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PLNS,PG,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PLNS,PG,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PLNS,PG,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PLNS,PG,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,PLNS,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,PLNS,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,PLNS,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,PLNS,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,PLNS,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,PLNS,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,PLNS,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,PLNS,TG,SUM
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,PLNS,FMAG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,PLNS,FMAG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,PLNS,FMAG,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,PLNS,FMAG,SUM
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,PLNS,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,PLNS,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,PLNS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,PLNS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,PLNS,SEND,CREE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,PLNS,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,PLNS,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,PLNS,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,PLNS,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,PLNS,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,PLNS,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,PLNS,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,PLNS,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,PLNS,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,PLNS,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,PLNS,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,PLNS,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,PLNS,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,PLNS,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,PLNS,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,PLNS,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,PLNS,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,PLNS,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,PLNS,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,PLNS,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,PLNS,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,PLNS,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,PLNS,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,PLNS,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,PLNS,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,PLNS,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,PLNS,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,PLNS,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,PLNS,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,PLNS,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,PLNS,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,PLNS,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,PLNS,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,PLNS,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,PLNS,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,PLNS,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,PLNS,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,PLNS,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,PLNS,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,PLNS,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,PLNS,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,PLNS,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,PLNS,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,PLNS,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,PLNS,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,PLNS,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,PLNS,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Status      STAT,PLNS,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Penetration PENE,PLNS,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Gap         GAP ,PLNS,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Pressure    PRES,PLNS,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Fric Stress SFRI,PLNS,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,TotalStress STOT,PLNS,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,SlidingDist SLID,PLNS,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Heat flux   FLUX,PLNS,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-nodal   ,Chattering  CNOS,PLNS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact_nodal   ,Fluid Pres  FPRS,PLNS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Status      STAT,PLES,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Penetration PENE,PLES,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  Idx_Contact-element ,Gap         GAP ,PLES,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Pressure    PRES,PLES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Fric Stress SFRI,PLES,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,TotalStress STOT,PLES,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,SlidingDist SLID,PLES,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Heat flux   FLUX,PLES,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact-element ,Chattering  CNOS,PLES,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact_element ,Fluid Pres  FPRS,PLES,CONT,FPRS
!
Cmd_)/GO
Cal_Fnc_Pl_ANTIME2
:E END
:! 
:N Fnc_Pl_ANTIME2
:S    870,   317,   546
:T Command
:A Animation data
:D Enter Animation data
:C )/NOPR
:C )KEYW,LASTDISP,0
:C )*GET,_z9,CPAR,1
:C )*IF,_z9,EQ,-999,THEN
:C )KEYW,LASTDISP,1
:C )*ENDIF
:C )*GET,_z8,PARM,_z,TYPE
:C )*IF,_z8,EQ,-1,THEN
:C )*DIM,_z,,10
:C )_z(1) = 0.0
:C )_z(2) = 0.0
:C )/GO
:C )*ENDIF
Inp_P
Cmd_)/NOPR
Cmd_)INNS
 K_CM(lastdisp)
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_*CPAR(3)
Cmd_)/GO
 K_CM(lastdisp)
Cmd_PLNS
 K_CM(lastdisp)
 Fld_1
  Typ_Def_*CPAR(1)
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_*CPAR(3)
Cmd_)/NOPR
Cmd_)/GO
Cmd_ANHARM
K_CM(ANHARM)
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z2)
Cmd_ANTIME
K_CM(anharm)
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z2)
 Fld_5
  Typ_Def_*PAR(_z3)
 Fld_6
  Typ_Def_*PAR(_z4)
 Fld_7
  Typ_Def_*PAR(_z(1))
 Fld_8
  Typ_Def_*PAR(_z(2))
Cmd_)/NOPR
Cmd_)INNS,PREV
Cmd_)/GO
:E END
:! 
:N Fnc_Pl_AutoFit
:S    647,   183,   457
:T Cmd
:C )! Fnc_Pl_AutoFit
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )!
:C )/GO
:A Automatic Fit Mode
:D Automatic Fit Mode
:H Hlp_UI_autofit
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/USER] [/AUTO]  Automatic Fit
 Fld_2
  Prm_WN     Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_3
  Prm_Automatic fit mode
  Typ_LIS_RADIOB
   LIS_Enabled         ,1
   LIS_Disabled        ,0
  Def_*GET(GRAPH,_z(1),MODE)
Cmd_)/GO
Cal_Fnc_Pl_AutoFit_A
:E END
:! 
:N Fnc_Pl_AutoFit_A
:S    378,   246,   125
:T Cmd
:C )! Fnc_Pl_AutoFit_A
:C )/nopr
:C )*IF,_z(2),EQ,0,THEN
:C )_z1='/USER'
:C )*ELSE
:C )_z1='/AUTO'
:C )*ENDIF
:C )*if,_z(1),EQ,6,then
:C )  _z2='ALL'
:C )*else
:C )  _z2=_z(1)
:C )*endif
:C )/go
Inp_P
! Cust_Cmd_/USER
! Cust_Cmd_/AUTO
! Exclude_from_paths
Cmd_/AUTO
 Fld_1
  Typ_Def_*PAR(_z1)
 Fld_2
  Typ_Def_*PAR(_z2)
:E End
:! 
:N Fnc_Pl_BCMERR
:S    331,   318,     6
:T Cmd
:C )! Fnc_Pl_BCMERR
:H Hlp_C_/RGB
:A Banded Contour Map Error
:D Banded Contour Map Error
:C )/nopr
:C )*create,ansuitmp
:C )*msg,UI
:C )Use banded contour map only if /SHO,X11C or /SHO,WIN32C are in effect. %/&
:C )Command Ignored.
:C )*end
:C )/input,ansuitmp
:C )/go
Inp_P
:E End
:! 
:N Fnc_Pl_BCM_OK
:S    948,   310,   631
:T Cmd
:C )! Fnc_Pl_BCM_OK
:A Banded Contour Map
:D Banded Contour Map
:H Hlp_C_/RGB
:C )/NOPR
:C )*GET,_z1,common,,d2cnmp,,int,1   ! no. of contours
:C )*IF,_z1,le,0,then
:C )*GET,_z1,common,,d3com,,int,78   ! no. of contours specified in nvctur(1)
:C )*ENDIF
:C )/GO
Fld_0
Typ_Lab
Prm_[/RGB]  Banded Contour Map
Cmd_/RGB
 Fld_2
  Typ_Def_CNTR
 Fld_3
  Prm_RED    Percent Red
  Typ_INT
  Def_60
 Fld_4
  Prm_GRN    Percent Green
  Typ_INT
  Def_60
 Fld_5
  Prm_BLU    Percent Blue
  Typ_INT
  Def_60
 Fld_6
  Prm_N1     First contour index
  Typ_INT
  Def_1
 Fld_7
  Prm_N2     Final contour index
  Typ_INT
  Def_*PAR(_z1)
 Fld_8
  Prm_INC    Increment
  Typ_INT
  Def_4
 Fld_9
  Prm_NCONT  Number of contours in map
  Typ_INT
  Def_*PAR(_z1)
!
Fld_0
Typ_Sep
!
Cmd_!
 Fld_1
 Prm_[/REPLOT]  Replot Upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
 Def_/REPLOT
:E END
:! 
:N Fnc_Pl_BandCntrClr
:S    680,   218,   455
:T Cmd
:C )! Fnc_Pl_BandCntrClr
:A Banded Contour Colors
:D Banded Contour Colors
:H Hlp_C_/COLOR
:C )/NOPR
:C )*GET,_z1,common,,d3com,,int,78    ! no. of contours
:C )/GO
Fld_0
Typ_Lab
Prm_[/COLOR]  Banded Contour Colors
!
Cmd_/COL
 Fld_2
  Typ_Def_CNTR
 Fld_3
  Prm_Band Color
  Typ_COLOR
  Def_14
 Fld_4
  Prm_N1     First contour index
  Typ_INT
  Def_1
 Fld_5
  Prm_N2     Final contour index
  Typ_INT
  Def_*PAR(_z1)
 Fld_6
  Prm_INC    Increment
  Typ_INT
  Def_4
!
Fld_0
Typ_Sep
!
Cmd_!
 Fld_1
 Prm_[/REPLOT]  Replot Upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
 Def_/REPLOT
:E END
:! 
:N Fnc_Pl_BandCntrMap
:S    205,   111,    87
:T Cmd
:A Banded Contour Map
:D Banded Contour Map
:H Hlp_C_/RGB
Inp_P
Cmd_)!
K_LN(X11C*WIN32C)
Cal_Fnc_Pl_BCM_OK
K_LN(X11*WIN32*X3D)
Cal_Fnc_Pl_BCMERR
:E End
:! 
:N Fnc_Pl_ClrBC
:S   4796,  1382,  3407
:T Cmd
:C )! Fnc_Pl_ClrBC
:A BC Colors
:D Boundary Condition Colors
:H Hlp_C_/COLOR
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,26
:C )*GET,_z(1),common,,pbccom,,int,121  ! BC label colors  U
:C )*GET,_z(2),common,,pbccom,,int,122  ! ROT
:C )*GET,_z(3),common,,pbccom,,int,123  ! TEMP
:C )*GET,_z(4),common,,pbccom,,int,124  ! PRES
:C )*GET,_z(5),common,,pbccom,,int,125  ! V
:C )*GET,_z(6),common,,pbccom,,int,126  ! ENKE
:C )*GET,_z(7),common,,pbccom,,int,127  ! ENDS
:C )*GET,_z(8),common,,pbccom,,int,128  ! VOLT
:C )*GET,_z(9),common,,pbccom,,int,129  ! MAG
:C )*GET,_z(10),common,,pbccom,,int,130 ! A
:C )*GET,_z(11),common,,pbccom,,int,131 ! F
:C )*GET,_z(12),common,,pbccom,,int,132 ! M
:C )*GET,_z(13),common,,pbccom,,int,133 ! HEAT
:C )*GET,_z(14),common,,pbccom,,int,134 ! FLOW
:C )*GET,_z(15),common,,pbccom,,int,135 !
:C )*GET,_z(16),common,,pbccom,,int,136 ! AMPS
:C )*GET,_z(17),common,,pbccom,,int,137 ! FLUX
:C )*GET,_z(18),common,,pbccom,,int,138 ! CSG
:C )*GET,_z(19),common,,pbccom,,int,139 ! MAST
:C )*GET,_z(20),common,,pbccom,,int,140 ! CP
:C )*GET,_z(21),common,,pbccom,,int,141 ! CE
:C )*GET,_z(22),common,,pbccom,,int,142 ! NFOR
:C )*GET,_z(23),common,,pbccom,,int,143 ! NMOM
:C )*GET,_z(24),common,,pbccom,,int,144 ! RFOR
:C )*GET,_z(25),common,,pbccom,,int,145 ! RMOM
:C )*GET,_z(26),common,,pbccom,,int,146 ! PATH
:C )/GO
Fld_0
Typ_Lab
Prm_[/COLOR]  Color Assignments for Boundary Condition Symbols
!
Cmd_!
P_CM(LINPLUS)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_U
Fld_3
Prm_U      Applied translations
Typ_COLOR
Def_*PAR(_z(1)+1)
!
Cmd_!
P_CM(LINPLUS)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_ROT
Fld_3
Prm_ROT    Applied rotations
Typ_COLOR
Def_*PAR(_z(2)+1)
!
Cmd_!
P_CM(THERMAL)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_TEMP
Fld_3
Prm_TEMP   Applied temperature DOFs
Typ_COLOR
Def_*PAR(_z(3)+1)
!
Cmd_!
P_CM(FLOTRAN)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_PRES
Fld_3
Prm_PRES   Applied pressure DOFs
Typ_COLOR
Def_*PAR(_z(4)+1)
!
Cmd_!
P_CM(FLOTRAN)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_V
Fld_3
Prm_V      Applied velocities
Typ_COLOR
Def_*PAR(_z(5)+1)
!
Cmd_!
P_CM(FLOTRAN)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_ENKE
Fld_3
Prm_ENKE   Applied turb K.E. DOFs
Typ_COLOR
Def_*PAR(_z(6)+1)
!
Cmd_!
P_CM(FLOTRAN)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_ENDS
Fld_3
Prm_ENDS   Applied energy dissip DOF
Typ_COLOR
Def_*PAR(_z(7)+1)
!
Cmd_!
P_CM(THERMAL*ELECMAG)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_VOLT
Fld_3
Prm_VOLT   Applied voltages
Typ_COLOR
Def_*PAR(_z(8)+1)
!
Cmd_!
P_CM(ELECMAG)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_MAG
Fld_3
Prm_MAG    Applied scalar mag poten
Typ_COLOR
Def_*PAR(_z(9)+1)
!
Cmd_!
P_CM(ELECMAG)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_A
Fld_3
Prm_A      Applied vector mag poten
Typ_COLOR
Def_*PAR(_z(10)+1)
!
Fld_0
Typ_Sep
!
Cmd_!
P_CM(LINPLUS)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_F
Fld_3
Prm_F      Applied forces
Typ_COLOR
Def_*PAR(_z(11)+1)
!
Cmd_!
P_CM(LINPLUS)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_M
Fld_3
Prm_M      Applied moments
Typ_COLOR
Def_*PAR(_z(12)+1)
!
Cmd_!
P_CM(THERMAL)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_HEAT
Fld_3
Prm_HEAT   Applied heat flows
Typ_COLOR
Def_*PAR(_z(13)+1)
!
Cmd_!
P_CM(FLOTRAN)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_FLOW
Fld_3
Prm_FLOW   Applied fluid flows
Typ_COLOR
Def_*PAR(_z(14)+1)
!
Cmd_!
P_CM(ELECMAG)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_AMPS
Fld_3
Prm_AMPS   Applied currents
Typ_COLOR
Def_*PAR(_z(16)+1)
!
Cmd_!
P_CM(ELECMAG)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_FLUX
Fld_3
Prm_FLUX   Applied magnetic fluxes
Typ_COLOR
Def_*PAR(_z(17)+1)
!
Cmd_!
P_CM(ELECMAG)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_CSG
Fld_3
Prm_CSG    Applied mag curr segments
Typ_COLOR
Def_*PAR(_z(18)+1)
!
Fld_0
Typ_Sep
!
Cmd_/COLOR
P_CM(LINPLUS)
Fld_2
Typ_Def_MAST
Fld_3
Prm_MAST   Master DOFs
Typ_COLOR
Def_*PAR(_z(19)+1)
!
Cmd_/COLOR
P_CM(LINPLUS)
Fld_2
Typ_Def_CP
Fld_3
Prm_CP     Coupled nodes
Typ_COLOR
Def_*PAR(_z(20)+1)
!
Cmd_/COLOR
P_CM(LINPLUS)
Fld_2
Typ_Def_CE
Fld_3
Prm_CE     Nodes in constraint eqs
Typ_COLOR
Def_*PAR(_z(21)+1)
!
Fld_0
Typ_Sep
!
Cmd_/COLOR
P_CM(LINPLUS)
Fld_2
Typ_Def_NFOR
Fld_3
Prm_NFOR   Postproc nodal "forces"
Typ_COLOR
Def_*PAR(_z(22)+1)
!
Cmd_!
P_CM(LINPLUS)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_NMOM
Fld_3
Prm_NMOM   Postproc nodal moments
Typ_COLOR
Def_*PAR(_z(23)+1)
!
Cmd_/COLOR
P_CM(LINPLUS)
Fld_2
Typ_Def_RFOR
Fld_3
Prm_RFOR   Postproc reaction "force"
Typ_COLOR
Def_*PAR(_z(24)+1)
!
Cmd_!
P_CM(LINPLUS)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_RMOM
Fld_3
Prm_RMOM   Postproc reaction moments
Typ_COLOR
Def_*PAR(_z(25)+1)
!
Cmd_!
P_CM(LINPLUS)
Fld_1
Typ_Def_/COLOR
Fld_2
Typ_Def_PATH
Fld_3
Prm_PATH   Postproc path geometry
Typ_COLOR
Def_*PAR(_z(26)+1)
!
Fld_0
Typ_Sep
!
Cmd_!
 Fld_1
 Prm_[/REPLOT]  Replot Upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
 Def_/REPLOT
:E END
:! 
:N Fnc_Pl_ClrComp
:S    499,   126,   351
:T Cmd
:C )! Fnc_Pl_ClrComp
:A Component Colors
:D Component Colors
:H Hlp_C_/COLOR
Fld_0
Typ_Lab
Prm_[/COLOR]  Color Assignments for Components
Cmd_/COLOR
Fld_2
Typ_Def_CM
Fld_4
Prm_CM     Component name
Typ_LIS
LIS_*READ,CM
Fld_3
Prm_Clab   Color to be assigned
Typ_COLOR
Def_7
!
Fld_0
Typ_Sep
!
Cmd_!
 Fld_1
 Prm_[/REPLOT]  Replot Upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
 Def_/REPLOT
:E END OF Fnc_ClrComp
:! 
:N Fnc_Pl_ClrEntit1
:S   1015,   679,   329
:T Cmd
:C )! Fnc_Pl_ClrEntit1
:C )/NOPR
:C )*IF,_z(7),EQ,1,THEN
:C )_z1='/REPLOT'
:C )*ELSE
:C )_z1='!'
:C )*ENDIF
:C )*IF,_z(1),EQ,1,THEN
:C ) KEYW,KEY1,0
:C )*ELSE
:C ) KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_z(2),EQ,1,THEN
:C ) _z2='ELEM'
:C )*ELSEIF,_z(2),EQ,2,THEN
:C ) _z2='LINE'
:C )*ELSEIF,_z(2),EQ,3,THEN
:C ) _z2='AREA'
:C )*ELSEIF,_z(2),EQ,4,THEN
:C ) _z2='VOLU'
:C )*ELSEIF,_z(2),EQ,5,THEN
:C ) _z2='ISURF'
:C )*ENDIF
:C )*IF,_z(1),EQ,2,THEN
:C ) KEYW,KEY2,1
:C )*ELSE
:C ) KEYW,KEY2,0
:C )*ENDIF
:C )*GET,_z(4),CPAR,1
:C )KEYW,KEY4,_z(4)
:C )*GET,_z(5),CPAR,2
:C )KEYW,KEY5,_z(5)
:C )*GET,_z(6),CPAR,3
:C )KEYW,KEY6,_z(6)
:C )/GO
Inp_P
Cmd_/COLOR
K_CM(KEY1)
 Fld_2
  Typ_Def_*PAR(_z2)
 Fld_3
 K_FL(KEY2)
  Typ_Def_*PAR(_z3)
 Fld_3
 K_FL(key2)
  Typ_Def_*STR( )
 Fld_4
 K_FL(KEY2+KEY4)
  Typ_Def_*PAR(_z(4))
 Fld_5
 K_FL(KEY2+KEY5)
  Typ_Def_*PAR(_z(5))
 Fld_6
 K_FL(KEY2+KEY6)
  Typ_Def_*PAR(_z(6))
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_z1)
:E End
:! 
:N Fnc_Pl_ClrEntity
:S   1297,   227,  1063
:T Cmd
:C )! Fnc_Pl_ClrEntity
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,7
:C )*GET,_z1,common,,d2com,,int,25 ! OUTL color
:C )_z2=1
:C )/GO
:A Entity Colors
:D Entity Colors
:H Hlp_C_/COLOR
Fld_0
Typ_Lab
Prm_[/COLOR]  Color Assignments for Entities
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Prm_Color assignment will use
  Typ_Lis_OptionB
   Lis_Current colors  ,1
   Lis_User-specified  ,2
   Lis_Default colors  ,3
  Def_*PAR(_z2)
!
Cmd_)*SET,_z(2)
 Fld_2
  Typ_Lis_RadioB
   Lis_Elements  ,1
   Lis_Lines     ,2
   Lis_Areas     ,3
   Lis_Volumes   ,4
   Lis_Isosurface,5
  Def_*PAR(_z2)
  Prm_Lab   Entity to assign color to
!
Cmd_)*SET,_z3
 Fld_2
  Typ_Def_'
  Dlm_~
 Fld_3
  Prm_Clab  User-specified color
  Typ_Color
  Dlm_~
 Fld_4
  Typ_Def_'
Cmd_)*CSET,1,3
 Fld_2
  Prm_N1,N2,NINC   Entity range
  Typ_Int3
  Def_Blank,Blank,Blank
Fld_0
 Typ_Sep
!
Cmd_)/GO
Cmd_/COLOR
 Fld_0
  Typ_Lab
  Prm_[/COLOR,OUTL]  Outline color to use for elements, areas, and volumes.
 Fld_2
  Typ_Def_OUTL
 Fld_3
  Prm_                 Outline color
  Typ_COLOR
  Def_*PAR(_z1+1)
Fld_0
 Typ_Sep
!
Cmd_)/NOPR
Cmd_)*SET,_z(7)
 Fld_2
 Prm_[/REPLOT]  Replot Upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Do not replot   ,0
  LIS_Replot          ,1
 Def_1
Cmd_)/GO
Cal_Fnc_Pl_ClrEntit1
:E END
:! 
:N Fnc_Pl_ClrGraph
:S   2727,   831,  1889
:T Cmd
:C )! Fnc_Pl_ClrGraph
:A Graph Colors
:D Graph Colors
:H Hlp_C_/COLOR
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,10
:C )*GET,_z1,common,,grcom,,int,1    ! Bakground colr
:C )*GET,_z2,common,,grcom,,int,2    ! Grid line colr
:C )*GET,_z3,common,,grcom,,int,42   ! Axis Label colr
:C )*GET,_z4,COMMON,,GRCOM,,INT,66   ! Axes color
:C )*GET,_z5,COMMON,,GRCOM,,INT,67   ! X axis number color
:C )*GET,_z(1),common,,grcom,,int,22 ! Curve 1 to 10 color
:C )*GET,_z(2),common,,grcom,,int,23
:C )*GET,_z(3),common,,grcom,,int,24
:C )*GET,_z(4),common,,grcom,,int,25
:C )*GET,_z(5),common,,grcom,,int,26
:C )*GET,_z(6),common,,grcom,,int,27
:C )*GET,_z(7),common,,grcom,,int,28
:C )*GET,_z(8),common,,grcom,,int,29
:C )*GET,_z(9),common,,grcom,,int,30
:C )*GET,_z(10),common,,grcom,,int,31
:C )/GO
Fld_0
Typ_Lab
Prm_[/COLOR]  Color Assignments for Graphs
!
Cmd_/COLOR
Fld_2
Typ_Def_GRBAK
Fld_3
Prm_GRBAK      Graph background
Typ_COLOR
Def_*PAR(_z1+1)
!
Cmd_/COLOR
Fld_2
Typ_Def_GRID
Fld_3
Prm_GRID       Graph grid lines
Typ_COLOR
Def_*PAR(_z2+1)
!
Cmd_/COLOR
Fld_2
Typ_Def_AXLAB
Fld_3
Prm_AXLAB      Graph X-Y axis labels
Typ_COLOR
Def_*PAR(_z3+1)
!
Cmd_/COLOR
Fld_2
Typ_Def_AXES
Fld_3
Prm_AXES       Graph Axes
Typ_COLOR
Def_*PAR(_z4+1)
!
Cmd_/COLOR
Fld_2
Typ_Def_AXNU
Fld_3
Prm_AXNU       Graph X axis numbers
Typ_COLOR
Def_*PAR(_z5+1)
!
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_CURVE      Graph curve number 1
Typ_COLOR
Def_*PAR(_z(1)+1)
Fld_4
Typ_Def_1
!
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_                 curve number 2
Typ_COLOR
Def_*PAR(_z(2)+1)
Fld_4
Typ_Def_2
!
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_                 curve number 3
Typ_COLOR
Def_*PAR(_z(3)+1)
Fld_4
Typ_Def_3
!
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_                 curve number 4
Typ_COLOR
Def_*PAR(_z(4)+1)
Fld_4
Typ_Def_4
!
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_                 curve number 5
Typ_COLOR
Def_*PAR(_z(5)+1)
Fld_4
Typ_Def_5
!
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_                 curve number 6
Typ_COLOR
Def_*PAR(_z(6)+1)
Fld_4
Typ_Def_6
!
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_                 curve number 7
Typ_COLOR
Def_*PAR(_z(7)+1)
Fld_4
Typ_Def_7
!
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_                 curve number 8
Typ_COLOR
Def_*PAR(_z(8)+1)
Fld_4
Typ_Def_8
!
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_                 curve number 9
Typ_COLOR
Def_*PAR(_z(9)+1)
Fld_4
Typ_Def_9
!
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_                curve number 10
Typ_COLOR
Def_*PAR(_z(10)+1)
Fld_4
Typ_Def_10
!
Fld_0
Typ_Sep
!
Cmd_!
 Fld_1
 Prm_[/REPLOT]  Replot Upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
 Def_/REPLOT
:E END
:! 
:N Fnc_Pl_ClrMap
:S    269,   172,    73
:T Cmd
:C )! Fnc_Pl_ClrMap
:C )/NOPR
:C )*DEL,_zx
:C )*SET,_zx,'*.cmap'
:C )/GO
:A Load Color Map
:D Load Color Map
:H Hlp_C_/CMAP
Fmt_H
Cmd_/CMAP
Fld_2
Prm_[/CMAP]  Color map file
Typ_FILE
Def_*PAR(_zx)
:E END OF Fnc_Pl_ClrMap
:! 
:N Fnc_Pl_ClrMapSave
:S    286,   180,    99
:T Cmd
:C )! Fnc_Pl_ClrMapSave
:C )/NOPR
:C )*DEL,_zx
:C )*SET,_zx,'*.cmap'
:C )/GO
:A Save Color Map
:D Save Color Map
:H Hlp_C_/CMAP
Fmt_H
Cmd_/CMAP
Fld_2
Prm_[/CMAP]  Color map file
Typ_FILE_INLINE
Def_*PAR(_zx)
Fld_5
Typ_Def_SAVE
:E END
:! 
:N Fnc_Pl_ClrNumber
:S   2140,   631,  1502
:T Cmd
:C )! Fnc_Pl_ClrNumber
:A Numbered Item Colors
:D Numbered Item Colors
:H Hlp_C_/COLOR
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,11
:C )*GET,_z(1),common,,d2com,,int,26 ! colors for items numbered
:C )*GET,_z(2),common,,d2com,,int,27 ! 1 to 11
:C )*GET,_z(3),common,,d2com,,int,28
:C )*GET,_z(4),common,,d2com,,int,29
:C )*GET,_z(5),common,,d2com,,int,30
:C )*GET,_z(6),common,,d2com,,int,31
:C )*GET,_z(7),common,,d2com,,int,32
:C )*GET,_z(8),common,,d2com,,int,33
:C )*GET,_z(9),common,,d2com,,int,34
:C )*GET,_z(10),common,,d2com,,int,35
:C )*GET,_z(11),common,,d2com,,int,36
:C )/GO
Fld_0
Typ_Lab
Prm_[/COLOR]  Color Assignments for Discretely Numbered Items
!
Cmd_/COLOR
Fld_2
Typ_Def_NUM
Fld_3
Prm_NUM        Items numbered   1
Typ_COLOR
Def_*PAR(_z(1)+1)
Fld_4
Typ_Def_1
!
Cmd_/COLOR
Fld_2
Typ_Def_NUM
Fld_3
Typ_COLOR
Def_*PAR(_z(2)+1)
Prm_           Items numbered   2
Fld_4
Typ_Def_2
!
Cmd_/COLOR
Fld_2
Typ_Def_NUM
Fld_3
Typ_COLOR
Def_*PAR(_z(3)+1)
Prm_           Items numbered   3
Fld_4
Typ_Def_3
!
Cmd_/COLOR
Fld_2
Typ_Def_NUM
Fld_3
Prm_           Items numbered   4
Typ_COLOR
Def_*PAR(_z(4)+1)
Fld_4
Typ_Def_4
!
Cmd_/COLOR
Fld_2
Typ_Def_NUM
Fld_3
Prm_           Items numbered   5
Typ_COLOR
Def_*PAR(_z(5)+1)
Fld_4
Typ_Def_5
!
Cmd_/COLOR
Fld_2
Typ_Def_NUM
Fld_3
Prm_           Items numbered   6
Typ_COLOR
Def_*PAR(_z(6)+1)
Fld_4
Typ_Def_6
!
Cmd_/COLOR
Fld_2
Typ_Def_NUM
Fld_3
Prm_           Items numbered   7
Typ_COLOR
Def_*PAR(_z(7)+1)
Fld_4
Typ_Def_7
!
Cmd_/COLOR
Fld_2
Typ_Def_NUM
Fld_3
Prm_           Items numbered   8
Typ_COLOR
Def_*PAR(_z(8)+1)
Fld_4
Typ_Def_8
!
Cmd_/COLOR
Fld_2
Typ_Def_NUM
Fld_3
Prm_           Items numbered   9
Typ_COLOR
Def_*PAR(_z(9)+1)
Fld_4
Typ_Def_9
!
Cmd_/COLOR
Fld_2
Typ_Def_NUM
Fld_3
Prm_           Items numbered   10
Typ_COLOR
Def_*PAR(_z(10)+1)
Fld_4
Typ_Def_10
!
Cmd_/COLOR
Fld_2
Typ_Def_NUM
Fld_3
Prm_           Items numbered   11
Typ_COLOR
Def_*PAR(_z(11)+1)
Fld_4
Typ_Def_11
!
Fld_0
Typ_Sep
!
Cmd_!
 Fld_1
 Prm_[/REPLOT]  Replot Upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
 Def_/REPLOT
:E END
:! 
:N Fnc_Pl_ClrStress
:S   2994,  1525,  1462
:T Cmd
:C )! Fnc_Pl_ClrStress
:A Contour Colors
:D Contour Colors
:H Hlp_C_/COLOR
:C )/NOPR
:C )*GET,_z1,common,,ptcolrcm,,int,1
:C )*GET,_z2,common,,ptcolrcm,,int,2
:C )*GET,_z3,common,,ptcolrcm,,int,3
:C )*GET,_z4,common,,ptcolrcm,,int,4
:C )*GET,_z5,common,,ptcolrcm,,int,5
:C )*GET,_z6,common,,ptcolrcm,,int,6
:C )*GET,_z7,common,,ptcolrcm,,int,7
:C )*GET,_z8,common,,ptcolrcm,,int,8
:C )*GET,_z9,common,,ptcolrcm,,int,9
:C )*GET,_z10,common,,ptcolrcm,,int,10
:C )*GET,_z11,common,,ptcolrcm,,int,11
:C )!
:C )*IF,_z1,lt,0,then
:C )_z1=13
:C )*ELSEIF,_z1,gt,15,then
:C )_z1=13
:C )*ENDIF
:C )!
:C )*IF,_z2,lt,0,then
:C )_z2=13
:C )*ELSEIF,_z2,gt,15,then
:C )_z2=13
:C )*ENDIF
:C )!
:C )*IF,_z3,lt,0,then
:C )_z3=4
:C )*ELSEIF,_z3,gt,15,then
:C )_z3=4
:C )*ENDIF
:C )!
:C )*IF,_z4,lt,0,then
:C )_z4=5
:C )*ELSEIF,_z4,gt,15,then
:C )_z4=5
:C )*ENDIF
:C )!
:C )*IF,_z5,lt,0,then
:C )_z5=6
:C )*ELSEIF,_z5,gt,15,then
:C )_z5=6
:C )*ENDIF
:C )!
:C )*IF,_z6,lt,0,then
:C )_z6=7
:C )*ELSEIF,_z6,gt,15,then
:C )_z6=7
:C )*ENDIF
:C )!
:C )*IF,_z7,lt,0,then
:C )_z7=8
:C )*ELSEIF,_z7,gt,15,then
:C )_z7=8
:C )*ENDIF
:C )!
:C )*IF,_z8,lt,0,then
:C )_z8=9
:C )*ELSEIF,_z8,gt,15,then
:C )_z8=9
:C )*ENDIF
:C )!
:C )*IF,_z9,lt,0,then
:C )_z9=10
:C )*ELSEIF,_z9,gt,15,then
:C )_z9=10
:C )*ENDIF
:C )!
:C )*IF,_z10,lt,0,then
:C )_z10=11
:C )*ELSEIF,_z10,gt,15,then
:C )_z10=11
:C )*ENDIF
:C )!
:C )*IF,_z11,lt,0,then
:C )_z11=12
:C )*ELSEIF,_z11,gt,15,then
:C )_z11=12
:C )*ENDIF
:C )!
:C )/GO
Fld_0
Typ_Lab
Prm_[/COLOR]  Color Assignments for Contours
!
Cmd_/COLOR
 Fld_2
  Typ_Def_SMIN
 Fld_3
  Prm_SMIN       Color below contours
  Typ_COLOR
  Def_*PAR(_z1+1)
!
Cmd_/COLOR
 Fld_2
  Typ_Def_CNTR
 Fld_3
  Prm_Contour Number 1
  Typ_COLOR
  Def_*PAR(_z3+1)
 Fld_4
  Typ_Def_1
!
Cmd_/COLOR
 Fld_2
  Typ_Def_CNTR
 Fld_3
  Prm_Contour Number 2
  Typ_COLOR
  Def_*PAR(_z4+1)
 Fld_4
  Typ_Def_2
!
Cmd_/COLOR
 Fld_2
  Typ_Def_CNTR
 Fld_3
  Prm_Contour Number 3
  Typ_COLOR
  Def_*PAR(_z5+1)
 Fld_4
  Typ_Def_3
!
Cmd_/COLOR
 Fld_2
  Typ_Def_CNTR
 Fld_3
  Prm_Contour Number 4
  Typ_COLOR
  Def_*PAR(_z6+1)
 Fld_4
  Typ_Def_4
!
Cmd_/COLOR
 Fld_2
  Typ_Def_CNTR
 Fld_3
  Prm_Contour Number 5
  Typ_COLOR
  Def_*PAR(_z7+1)
 Fld_4
  Typ_Def_5
!
Cmd_/COLOR
 Fld_2
  Typ_Def_CNTR
 Fld_3
  Prm_Contour Number 6
  Typ_COLOR
  Def_*PAR(_z8+1)
 Fld_4
  Typ_Def_6
!
Cmd_/COLOR
 Fld_2
  Typ_Def_CNTR
 Fld_3
  Prm_Contour Number 7
  Typ_COLOR
  Def_*PAR(_z9+1)
 Fld_4
  Typ_Def_7
!
Cmd_/COLOR
 Fld_2
  Typ_Def_CNTR
 Fld_3
  Prm_Contour Number 8
  Typ_COLOR
  Def_*PAR(_z10+1)
 Fld_4
  Typ_Def_8
!
Cmd_/COLOR
 Fld_2
  Typ_Def_CNTR
 Fld_3
  Prm_Contour Number 9
  Typ_COLOR
  Def_*PAR(_z11+1)
 Fld_4
  Typ_Def_9
!
Cmd_/COLOR
 Fld_2
  Typ_Def_SMAX
 Fld_3
  Typ_COLOR
  Def_*PAR(_z2+1)
  Prm_SMAX       Color above contours
!
Fld_0
Typ_Sep
!
Cmd_!
 Fld_1
 Prm_[/REPLOT]  Replot Upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
 Def_/REPLOT
:E END
:! 
:N Fnc_Pl_ClrWindow
:S   1130,   340,   783
:T Cmd
:C )! Fnc_Pl_ClrWindow
:A Window Colors
:D Window Colors
:H Hlp_C_/COLOR
:C )/NOPR
:C )*GET,_z1,common,,d3com,,int,43 ! color for win 1 to 5
:C )*GET,_z2,common,,d3com,,int,44
:C )*GET,_z3,common,,d3com,,int,45
:C )*GET,_z4,common,,d3com,,int,46
:C )*GET,_z5,common,,d3com,,int,47
:C )/GO
Fld_0
Typ_Lab
Prm_[/COLOR]  Color Assignments for Windows
!
Cmd_/COLOR
Fld_2
Typ_Def_WBAK
Fld_3
Prm_WBAK   Background of window 1
Typ_COLOR
Def_*PAR(_z1+1)
Fld_4
Typ_Def_1
!
Cmd_/COLOR
Fld_2
Typ_Def_WBAK
Fld_3
Prm_                     window 2
Typ_COLOR
Def_*PAR(_z2+1)
Fld_4
Typ_Def_2
!
Cmd_/COLOR
Fld_2
Typ_Def_WBAK
Fld_3
Prm_                     window 3
Typ_COLOR
Def_*PAR(_z3+1)
Fld_4
Typ_Def_3
!
Cmd_/COLOR
Fld_2
Typ_Def_WBAK
Fld_3
Prm_                     window 4
Typ_COLOR
Def_*PAR(_z4+1)
Fld_4
Typ_Def_4
!
Cmd_/COLOR
Fld_2
Typ_Def_WBAK
Fld_3
Prm_                     window 5
Typ_COLOR
Def_*PAR(_z5+1)
Fld_4
Typ_Def_5
!
Fld_0
Typ_Sep
!
Cmd_!
 Fld_1
 Prm_[/REPLOT]  Replot Upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
 Def_/REPLOT
:E END
:! 
:N Fnc_Pl_ContLab
:S   1266,   479,   780
:T Cmd
:C )! Fnc_Pl_ContLab
:H Hlp_C_/CLABEL
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,4
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )_zc(1)='!','/REPLOT'
:C )*GET,_z1,common,,d3com,,int,83 ! cont lab key or no.
:C )*IF,_z1,GT,1,THEN
:C )_z2=99
:C )*ELSE
:C )*IF,_z1,EQ,1,THEN
:C )_z2=0
:C )*ELSE
:C )_z2=_z1
:C )*ENDIF
:C )*ENDIF
:C )*IF,_z1,LE,1,THEN
:C )_z3=1
:C )*ELSE
:C )_z3=_z1
:C )*ENDIF
:C )/GO
:A Contour Labeling
:D Contour Labeling Options
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/CLABEL]  Contour Labeling Options for Vector Mode
 Fld_2
  Prm_WN     Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_3
  Prm_KEY  Vector mode contour labels
  Typ_LIS_RADIOB
   LIS_On              ,0
   LIS_Off             ,-1
   LIS_On every Nth ele,99
   Def_*PAR(_z2)
Cmd_)*CSET,1,1
 Fld_2
  Prm_                            N =
  Typ_INT
  Def_*PAR(_z3)
 Fld_0
  Typ_Sep
Cmd_)*SET,_z(4)
 Fld_2
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,1
   LIS_Replot          ,2
  Def_2
Cal_Fnc_Pl_ContLab_A,3,LE,1,2
Cal_Fnc_Pl_ContLab_C,3,EQ,99,2
:E END
:! 
:N Fnc_Pl_ContLab_A
:S    317,   169,   141
:T Cmd
:C )! Fnc_Pl_ContLab_A
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
Cmd_/CLABEL
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z(2))
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(4)))
:E End
:! 
:N Fnc_Pl_ContLab_C
:S    314,   169,   138
:T Cmd
:C )! Fnc_Pl_ContLab_C
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
Cmd_/CLABEL
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*CPAR(1)
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(4)))
:E End
:! 
:N Fnc_Pl_ContNon
:S   1806,   703,  1096
:T Cmd
:C )! Fnc_Pl_ContNon
:H Hlp_C_/CVAL
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,11
:C )! key for active command /cont=0 /cval=1
:C )*GET,_z9,common,,d3com,,int,179
:C )*IF,_z9,EQ,1,THEN
:C )*GET,_z1,common,,d3com,,real,251 ! explicit contour vals
:C )*GET,_z2,common,,d3com,,real,252
:C )*GET,_z3,common,,d3com,,real,253
:C )*GET,_z4,common,,d3com,,real,254
:C )*GET,_z5,common,,d3com,,real,255
:C )*GET,_z6,common,,d3com,,real,256
:C )*GET,_z7,common,,d3com,,real,257
:C )*GET,_z8,common,,d3com,,real,258
:C )*ELSE
:C )_z1=0
:C )_z2=0
:C )_z3=0
:C )_z4=0
:C )_z5=0
:C )_z6=0
:C )_z7=0
:C )_z8=0
:C )*ENDIF
:C )/GO
:A Non-uniform Contours
:D Non-uniform Contours
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/CVAL]  Non-uniform Contours
 Fld_2
  Prm_WN  Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_0
  Typ_Lab
  Prm_    Contour values
Cmd_)*CSET,1,5
 Fld_3
  Prm_                         V1
  Typ_REAL
   Def_*PAR(_z1)
 Fld_4
  Prm_                         V2
  Typ_REAL
   Def_*PAR(_z2)
 Fld_5
  Prm_                         V3
  Typ_REAL
   Def_*PAR(_z3)
 Fld_6
  Prm_                         V4
  Typ_REAL
   Def_*PAR(_z4)
Cmd_)*CSET,6,9
 Fld_2
  Prm_                         V5
  Typ_REAL
   Def_*PAR(_z5)
 Fld_3
  Prm_                         V6
  Typ_REAL
   Def_*PAR(_z6)
 Fld_4
  Prm_                         V7
  Typ_REAL
   Def_*PAR(_z7)
 Fld_5
  Prm_                         V8
  Typ_REAL
   Def_*PAR(_z8)
Fld_0
Typ_Sep
Cmd_)*SET,_z(10)
 Fld_2
 Prm_[/REPLOT]  Replot Upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Do not replot   ,0
  LIS_Replot          ,1
 Def_1
Cmd_)/GO
Cal_Fnc_Pl_ContNon1
:E END
:! 
:N Fnc_Pl_ContNon1
:S    553,   243,   303
:T Cmd
:C )! Fnc_Pl_ContNon1
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )*IF,_z(10),EQ,1,THEN
:C )_z2='/REPLOT'
:C )*ELSE
:C )_z2='!'
:C )*ENDIF
:C )/GO
Inp_P
Cmd_/CVAL
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Typ_Def_*CPAR(7)
 Fld_9
  Typ_Def_*CPAR(8)
 Fld_10
  Typ_Def_*CPAR(9)
! Exclude_from_paths
Cmd_!
Fld_1
Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_Pl_ContStyl1
:S    220,    82,   131
:T Cmd
:C )! Fnc_Pl_ContStyl1
:C )/go
Inp_P
Cmd_/CTYPE
 Fld_2
  Typ_Def_*PAR(_z(1))
Cmd_/SSCALE,ALL,0
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(2)))
:E END
:! 
:N Fnc_Pl_ContStyl2
:S    220,    82,   131
:T Cmd
:C )! Fnc_Pl_ContStyl2
:C )/go
Inp_P
Cmd_/CTYPE
 Fld_2
  Typ_Def_*PAR(_z(1))
Cmd_/SSCALE,ALL,0
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(2)))
:E END
:! 
:N Fnc_Pl_ContStyl3
:S    689,   134,   548
:T Cmd
:C )! Fnc_Pl_ContStyl3
:C )/go
:H Hlp_C_/CTYPE
:D Particle Gradient Specifications
Cmd_)/NOPR
Cmd_)*CSET,3,4
 Fld_0
  Typ_Lab
  Prm_[/CTYPE]  Particle Gradient Specifications
 Fld_2
  Prm_DOTD  Maximum dot density
  Typ_INT
  Def_*GET(COMMON,,D3COM2,,REAL,9)
 Fld_3
  Prm_DOTS  Dot size
  Typ_REAL
  Def_*GET(COMMON,,D3COM2,,REAL,8)
Cmd_)*SET,_z(5)
K_CM(X3D)
 Fld_2
  Prm_DSHP  Dot shape
  Typ_Lis_OptionB
   Lis_2-D circle      ,0
   Lis_3-D polyhedron  ,1
   Lis_3-D sphere      ,99
  Def_*GET(COMMON,,D3COM2,,INT,18)
Cmd_)*CSET,6,6
K_CM(X3D)
 Fld_2
  Prm_      Number of sphere divisions
  Typ_INT
Cmd_)/GO
Cal_Fnc_Pl_ContStyl6
:E END
:! 
:N Fnc_Pl_ContStyl4
:S    419,   131,   281
:T Cmd
:C )! Fnc_Pl_ContStyl4
:C )/go
:H Hlp_C_/CTYPE
:D Gradient Triad Specifications
Cmd_/CTYPE
 Fld_0
  Typ_Lab
  Prm_[/CTYPE]  Gradient Triad Specifications
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_6
  Prm_TLEN  Maximum triad length
  Typ_REAL
  Def_*GET(COMMON,,D3COM2,,REAL,10)
 Fld_0
  Typ_Lab
  Prm_
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(2)))
:E END
:! 
:N Fnc_Pl_ContStyl5
:S    463,   129,   327
:T Cmd
:C )! Fnc_Pl_ContStyl5
:C )/go
:H Hlp_C_/SSCALE
:D Topographic Specifications
Cmd_/SSCALE
 Fld_0
  Typ_LAB
  Prm_[/SSCALE]  Topographic Specifications
 Fld_2
  Prm_WN     Window number
  Typ_LIS_OPTIONB
  LIS_Window 1        ,1
  LIS_Window 2        ,2
  LIS_Window 3        ,3
  LIS_Window 4        ,4
  LIS_Window 5        ,5
  LIS_All active wind ,ALL
 Fld_3
  Prm_SMULT  Contour multiplier
  Typ_REAL
:E END
:! 
:N Fnc_Pl_ContStyl6
:S    367,   169,   191
:T Cmd
:C )! Fnc_Pl_ContStyl6
:C )*IF,_z(5),EQ,0,THEN
:C )*CSET,6,6,0
:C )*ELSEIF,_z(5),EQ,1,THEN
:C )*CSET,6,6,1
:C )*ENDIF
Inp_P
Cmd_/CTYPE
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Typ_Def_*CPAR(3)
 Fld_4
  Typ_Def_*CPAR(4)
 Fld_5
  Typ_Def_*CPAR(6)
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(2)))
:E END
:! 
:N Fnc_Pl_ContStyle
:S    805,   231,   567
:T Cmd
:C )! Fnc_Pl_ContStyle
:H Hlp_UI_contstyle
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,6
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )_zc(1)='!','/REPLOT'
:C )/GO
:A Contour Style
:D Contour Style
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/CTYPE] [/SSCALE]  Contour Style
 Fld_2
  Prm_   Style of contour plot
  Typ_LIS_OPTIONB
   LIS_Normal          ,0
   LIS_Isosurface      ,1
   LIS_Particle grad   ,2
   LIS_Gradient triad  ,3
   LIS_Topographic     ,4
  Def_*GET(COMMON,,D3COM,,INT,70)
 Fld_3
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,1
   LIS_Replot          ,2
  Def_2
Cal_Fnc_Pl_ContStyl1,2,EQ,0
Cal_Fnc_Pl_ContStyl2,2,EQ,1
Cal_Fnc_Pl_ContStyl3,2,EQ,2
Cal_Fnc_Pl_ContStyl4,2,EQ,3
Cal_Fnc_Pl_ContStyl5,2,EQ,4
:E END
:! 
:N Fnc_Pl_ContUni
:S   1514,   567,   940
:T Cmd
:C )! Fnc_Pl_ContUni
:H Hlp_C_/CONTOUR
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,8
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,2
:C )_zc(1)='AUTO','USER'
:C )*GET,_z1,common,,d3com,,int,78    ! no. of contours
:!  active command /cont=0  ,/cval=1
:C )*GET,_z5,common,,d3com,,int,179
:C )*GET,_z2,common,,d3com,,real,251  ! min cont val
:C )*IF,_z5,EQ,0,THEN
:C )*GET,_z3,common,,d3com,,real,252  ! cont val inc
:C )_z4=_z2+(_z3*_z1)
:C )*ELSE
:C )_z2=' '
:C )_z3=' '
:C )_z4=' '
:C )*ENDIF
:C )/GO
:A Uniform Contours
:D Uniform Contours
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/CONT]  Uniform Contours
 Fld_2
  Prm_WN     Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
Cmd_)*CSET,1,1
 Fld_2
  Prm_NCONT  Number of contours
  Typ_INT
  Def_*PAR(_z1)
Cmd_)*SET,_z(3)
 Fld_2
  Prm_Contour intervals
  Typ_LIS_RADIOB
  LIS_Auto calculated ,1
  LIS_Freeze previous ,2
  LIS_User specified  ,99
 Fld_0
  Typ_Lab
  Prm_       User specified intervals
Cmd_)*CSET,4,6
 Fld_2
  Prm_VMIN   Min contour value
  Typ_REAL
 Fld_3
  Prm_VMAX   Max contour value
  Typ_REAL
 Fld_4
  Prm_VINC   Contour value incr
  Typ_REAL
Fld_0
Typ_Sep
Cmd_)*SET,_z(7)
 Fld_2
 Prm_[/REPLOT]  Replot Upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Do not replot   ,0
  LIS_Replot          ,1
 Def_1
Cal_Fnc_Pl_ContUni_A,2,LE,2,4
Cal_Fnc_Pl_ContUni_B,2,EQ,99,4
:E END
:! 
:N Fnc_Pl_ContUni_A
:S    405,   244,   154
:T Cmd
:C )! Fnc_Pl_ContUni_A
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )*IF,_z(7),EQ,1,THEN
:C )_z2='/REPLOT'
:C )*ELSE
:C )_z2='!'
:C )*ENDIF
:C )/GO
Inp_P
Cmd_/CONT
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*PAR(_zc(_z(3)))
! Exclude_from_paths
Cmd_!
Fld_1
Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_Pl_ContUni_B
:S    737,   532,   198
:T Cmd
:C )! Fnc_Pl_ContUni_B
:C )/NOPR
:C )*GET,_z(6),CPAR,6
:C )*GET,_z(5),CPAR,5
:C )*GET,_z(4),CPAR,4
:C )*IF,_z(7),EQ,1,THEN
:C )_z2='/REPLOT'
:C )*ELSE
:C )_z2='!'
:C )*ENDIF
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )_z7=0
:C )*IF,_z(6),EQ,0,THEN
:C )*CSET,6,6,
:C )_z7=_z7+1
:C )*ENDIF
:C )*IF,_z(5),EQ,0,THEN
:C )_z7=_z7+1
:C )*ENDIF
:C )*IF,_z(4),EQ,0,THEN
:C )_z7=_z7+1
:C )*ENDIF
:C )*IF,_z7,EQ,3,THEN
:C )*CSET,4,5, ,
:C )*ENDIF
:C )/GO
Inp_P
Cmd_/CONT
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*CPAR(4)
 Fld_5
  Typ_Def_*CPAR(6)
 Fld_6
  Typ_Def_*CPAR(5)
! Exclude_from_paths
Cmd_!
Fld_1
Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_Pl_Device
:S   2510,   620,  1883
:T Cmd
:C )! Fnc_Pl_Device
:C )/NOPR
:C )*get,_z1,ACTIVE,,KEYWORD,,X11
:C )*get,_z2,ACTIVE,,KEYWORD,,X11C
:C )*if,_z1,EQ,1,then
:C )_z3='X11'
:C )*elseif,_z2,EQ,1,then
:C )_z3='X11C'
:C )*endif
:C )*get,_z1,ACTIVE,,KEYWORD,,WIN32
:C )*get,_z2,ACTIVE,,KEYWORD,,WIN32C
:C )*if,_z1,EQ,1,then
:C )_z3='WIN32'
:C )*elseif,_z2,EQ,1,then
:C )_z3='WIN32C'
:C )*endif
:C )_z4 = d2inqr(46)
:C )*IF,_z4,EQ,2,THEN
:C )*SET,_z5,'AVI'
:C )*ELSE
:C )*SET,_z5,'BMP'
:C )*ENDIF
:C )*get,_z6,COMMON,,D3COM2,,INT,33
:C )_z6=BTEST(_z6,0)
:C )/GO
:A Device Options
:D Device Options
:H Hlp_UI_device
Cmd_/SHOW
K_CM(X11*X11C)
 Fld_2
  Prm_[/SHOW]  Use extra colors for
  Typ_LIS_OPTIONB
   LIS_Shading      X11,X11
   LIS_Contours    X11C,X11C
  Def_*PAR(_z3)
Cmd_/SHOW
K_CM(WIN32*WIN32C)
 Fld_2
  Prm_[/SHOW]  Use extra colors for
  Typ_LIS_OPTIONB
   LIS_Shading    WIN32,WIN32
   LIS_Contours  WIN32C,WIN32C
  Def_*PAR(_z3)
!
 Fld_0
  Typ_Sep
!
Cmd_/DEVICE,VECTOR
 Fld_2
  Prm_[/DEVI]  Vector mode (wireframe)
  Typ_LOGI,Off             ,On
  Def_*GET(GRAPH,,DISPLAY)
!
Cmd_/DEVICE,BBOX
 Fld_2
  Prm_         BBOX(Faster PREP7 EPLO)
  Typ_LOGI,Off             ,On
  Def_*PAR(_z6)
!
Cmd_/DEVICE,DITHER
K_CM(x3d)
 Fld_2
  Prm_         Dithering
  Typ_LOGI,Off             ,On
  Def_*GET(COMMON,,D2COM,,INT,64)
!
Cmd_/DEVICE,ANIM
K_CM(WIN32*WIN32C)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_         Animation mode
  Typ_LIS_RADIOB
   LIS_AVI file ,AVI
   LIS_Bitmaps  ,BMP
  Def_*PAR(_z5)
!
 Fld_0
  K_FL(X3D)
  Typ_Sep
!
Cmd_/DV3D,DGEN
K_CM(X3D)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[/DV3D]  Local manipulation mode
  Typ_LIS_RADIOB
   LIS_Normal          ,0
   LIS_Wireframe       ,1
!
Cmd_/DV3D,ANIM
K_CM(X3D)
 Fld_2
  Prm_         Animation mode
  Typ_LIS_RADIOB
  K_LN(INTELNT*ALPHANT)
   LIS_AVI file        ,2
   LIS_Display Lists   ,0
  K_LN(INTELNT*ALPHANT)
   LIS_Bitmaps         ,1
  K_LN(intelnt+alphant)
   LIS_Pixmaps         ,1
  Def_*PAR(_z4)
!
Cmd_/UIS,DYNA
K_CM(x3d)
 Fld_2
  Prm_[/UIS] Dynamic Mode Preview
   Typ_Lis_OptionB
    Lis_Model Outline   ,0
    Lis_Bounding Box    ,1
    Def_*GET(COMMON,,D2COM,,INT,69)
!
Cmd_/UIS,ZPIC
 Fld_2
  Prm_[/UIS] Coincident Pick Traversal
   Typ_Lis_OptionB
    Lis_Back to Front      ,-1
    Lis_Entity Number Order,0
    Lis_Front to Back      ,1
    Def_*GET(COMMON,,D3COM2,,INT,39)
Cmd_!
 Fld_0
  Typ_Sep
 Fld_1
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,!
   LIS_Replot          ,/REPLOT
  Def_/REPLOT
:E END
:! 
:N Fnc_Pl_Edge
:S   1237,   214,  1016
:T Cmd
:C )! Fnc_Pl_Edge
:H Hlp_UI_edge
:A Edge Options
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,5
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )_zc(1)='!','/REPLOT'
:C )/GO
:D Edge Options
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/EDGE] [/GLINE]  Edge Options
 Fld_2
  Prm_WN        Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[/EDGE]  Element outlines for  non-contour/contour  plots
 Fld_3
  Prm_                                      .
  Typ_LIS_OPTIONB
   LIS_All / Edge Only ,0
   LIS_Edge Only / All ,1
  Def_*GET(COMMON,,D3COM,,INT,16)
Cmd_)*CSET,3,3
 Fld_2
  Prm_          Edge tolerance angle
  Typ_REAL
  Def_*GET(COMMON,,D3COM,,REAL,173)
Cmd_)*SET,_z(4)
 Fld_2
  Prm_[/GLINE]  Element outline style
  Typ_LIS_OPTIONB
   LIS_Solid           ,0
   LIS_Dashed          ,1
   LIS_None            ,-1
  Def_*GET(GRAPH,_z(1),GLINE)
 Fld_0
  Typ_Sep
 Fld_3
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,1
   LIS_Replot          ,2
  Def_3
Cmd_)/GO
Cal_Fnc_Pl_Edge_A
:E END
:! 
:N Fnc_Pl_Edge_A
:S    402,   163,   232
:T Cmd
:C )! Fnc_Pl_Edge_A
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
Cmd_/EDGE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z(2))
 Fld_4
  Typ_Def_*CPAR(3)
Cmd_/GLINE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z(4))
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(5)))
:E End
:! 
:N Fnc_Pl_Graph0
:S    168,    68,    93
:T Cmd
:C )! Fnc_Pl_Graph0
Inp_P
Cmd_)/NOPR
Fld_2
Typ_Def_*PAR(_z(4))
Cal_Fnc_Pl_Graph1,2,LT,0
Cal_Fnc_Pl_Graph2,2,GT,0
:E END
:! 
:N Fnc_Pl_Graph1
:S    188,    76,   105
:T Cmd
:C )! Fnc_Pl_Graph1
:C )/go
Inp_P
! X-DEFAULT
Cmd_)/NOPR
Fld_2
Typ_Def_*PAR(_z(7))
Cal_Fnc_Pl_Graph3,2,LT,0
Cal_Fnc_Pl_Graph4,2,GT,0
:E END
:! 
:N Fnc_Pl_Graph10
:S    283,    70,   206
:T Cmd
:C )! Fnc_Pl_Graph10
Inp_P
! X-USER SELECT, Y-USER SELECT
Fld_0
Cmd_/XRANGE
 Fld_2
  Typ_Def_*CPAR(5)
 Fld_3
  Typ_Def_*CPAR(6)
Cmd_/YRANGE
 Fld_2
  Typ_Def_*CPAR(8)
 Fld_3
  Typ_Def_*CPAR(9)
 Fld_4
  Typ_Def_*PAR(_zc(_z(10)))
:E END
:! 
:N Fnc_Pl_Graph2
:S    189,    76,   106
:T Cmd
:C )! Fnc_Pl_Graph2
:C )/go
Inp_P
! X-USER SELECT
Cmd_)!
Fld_2
Typ_Def_*PAR(_z(7))
Cal_Fnc_Pl_Graph9,2,LT,0
Cal_Fnc_Pl_Graph10,2,GT,0
:E END
:! 
:N Fnc_Pl_Graph3
:S    172,    76,    89
:T Cmd
:C )! Fnc_Pl_Graph3
:C )/go
Inp_P
Fld_0
Cmd_/XRANGE,DEFAULT
Cmd_/YRANGE,DEFAULT,
  Fld_2
  Typ_Def_*PAR(_zc(_z(10)))
:E END
:! 
:N Fnc_Pl_Graph4
:S    241,    76,   158
:T Cmd
:C )! Fnc_Pl_Graph4
:C )/go
Inp_P
! X-DEFAULT, Y-USER SELECT
Fld_0
Cmd_/XRANGE,DEFAULT
Cmd_/YRANGE
 Fld_2
  Typ_Def_*CPAR(8)
 Fld_3
  Typ_Def_*CPAR(9)
 Fld_4
  Typ_Def_*PAR(_zc(_z(10)))
:E END
:! 
:N Fnc_Pl_Graph9
:S    234,    68,   159
:T Cmd
:C )! Fnc_Pl_Graph9
Inp_P
! X-USER SELECT, Y-DEFAULT
Fld_0
Cmd_/XRANGE
 Fld_2
  Typ_Def_*CPAR(5)
 Fld_3
  Typ_Def_*CPAR(6)
Cmd_/YRANGE,DEFAULT,
 Fld_2
  Typ_Def_*PAR(_zc(_z(10)))
:E END
:! 
:N Fnc_Pl_Hidden
:S   2035,   346,  1682
:T Cmd
:C )! Fnc_Pl_Hidden
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,6
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )_zc(1)='!','/REPLOT'
:C )*GET,_z1,COMMON,,D3COM,,INT,133
:C )*IF,_z1,EQ,1,THEN
:C ) _z1='POWER'
:C )*ELSE
:C ) _z1='FULL'
:C )*ENDIF
:C )/GO
:A Hidden-Line Options
:D Hidden-Line Options
:H Hlp_UI_hidden
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/TYPE] [/SHADE]  Hidden-Line Options
 Fld_2
  Prm_WN        Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_0
  Typ_Sep
Cmd_)*SET,_z(2)
 Fld_2
  Prm_[/TYPE]   Type of Plot
  Typ_LIS_OPTIONB
   LIS_Centroid hidden ,2
   LIS_Face hidden     ,3
   LIS_Precise hidden  ,4
   LIS_Z-buffered      ,6
   LIS_Capped hidden   ,5
   LIS_Capped Z-buffer ,7
   LIS_Section         ,1
   LIS_Q-Slice Z-buffer,8
   LIS_Q-Slice Precise ,9
   LIS_Non-hidden      ,0
  Def_*GET(GRAPH,1,TYPE)
Cmd_)*SET,_z(5)
 Fld_2
  Prm_[/CPLANE]  Cutting plane is
  Typ_LIS_OptionB
   LIS_Normal to view  ,0
   LIS_Working plane   ,1
  Def_*GET(COMMON,,D3COM,,INT,91)
 Fld_0
  Typ_Lab
  Prm_           (for section and capped displays only)
Cmd_)*SET,_z(3)
 Fld_2
  Prm_[/SHADE]  Type of shading
  Typ_LIS_OPTIONB
   LIS_Facet           ,0
   LIS_Gouraud         ,1
   LIS_Phong           ,2
  Def_*GET(COMMON,,D3COM,,INT,121)
Cmd_)*SET,_z(6)
 Fld_2
  Prm_[/HBC]    Hidden BCs are
  Typ_LIS_OptionB
   LIS_Displayed       ,0
   LIS_Not Displayed   ,1
  Def_*GET(GRAPH,1,HBCS)
 Fld_0
  Typ_Sep
Cmd_/GRAPHICS
 Fld_0
  Typ_Lab
  Prm_[/GRAPHICS]  Used to control the way a model is displayed
 Fld_2
  Prm_    Graphic display method is
  Typ_Lis_OptionB
   Lis_Full model      ,FULL
   Lis_PowerGraphics   ,POWER
   Def_*PAR(_z1)
 Fld_0
  Typ_Sep
Cmd_)*SET,_z(4)
 Fld_2
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,1
   LIS_Replot          ,2
  Def_2
Cmd_)/GO
Cal_Fnc_Pl_Hidden_A
:E End
:! 
:N Fnc_Pl_Hidden_A
:S    498,   167,   324
:T Cmd
:C )! Fnc_Pl_Hidden_A
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
Cmd_/TYPE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z(2))
Cmd_/CPLANE
 Fld_2
  Typ_Def_*PAR(_z(5))
Cmd_/SHADE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z(3))
Cmd_/HBC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z(6))
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(4)))
Cal_REFRESH
:E End
:! 
:N Fnc_Pl_Hpgl
:S   1551,   192,  1352
:T Cmd
:C )! Fnc_Pl_Hpgl
:H Hlp_C_HPGL
:C )/NOPR
:C )*DEL,_CMAP
:C )_CMAP=1
:C )*DEL,_rl1
:C )_rl1=0
:C )/GOPR
:A To HPGL File
:D Redirect Plots to HPGL
Cmd_)/NOPR
Cmd_)*SET,_ZVECT
 Fld_2
  Typ_Def_*GET(GRAPH,,DISPLAY)
Cmd_)/GOPR
Cmd_/SHOW,HPGL
Cmd_HPGL
 Fld_2
  Typ_Def_MODEL
 Fld_3
  Prm_[HPGL]  Model number -
  Typ_Lis_OptionB
   Lis_7475            ,7475
   Lis_7550            ,7550
   Lis_7580            ,7580
   Lis_7585            ,7585
   Lis_7586            ,7586
   Lis_ColorPro        ,COLORPRO
   Lis_DraftPro        ,DRAFTPRO
   Lis_Draftmaster     ,Draftmaster
Cmd_HPGL
 Fld_2
  Typ_Def_PAPER
 Fld_3
  Prm_[HPGL] Paper Size/Orientation
  Typ_Lis_OptionB
   Lis_A               ,A
   Lis_B               ,B
   Lis_C               ,C
   Lis_D               ,D
   Lis_E               ,E
   Lis_A4              ,A4
   Lis_A3              ,A3
   Lis_A2              ,A2
   Lis_A1              ,A1
   Lis_A0              ,A0
   Lis_Carch           ,Carch
   Lis_Darch           ,Darch
   Lis_Earch           ,Earch
 Fld_4
  Prm_      Orientation
  Typ_Lis_RadioB
   Lis_Horizontal      ,HORIZ
   Lis_Vertical        ,VERT
Cmd_HPGL
 Fld_2
  Typ_Def_COLOR
 Fld_3
  Prm_         Color
  Typ_Lis_RadioB
   Lis_Color           ,ON
   Lis_Monochromatic   ,OFF
!
Fld_0
 Typ_Sep
! Exclude_from_paths
Cmd_)!
Fld_2
 Prm_[/REPLOT] Replot upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Replot          ,0
  LIS_Replot/Close    ,1
  LIS_Do not replot   ,2
  Def_1
!
Cal_Fnc_Pl_/SHOW2,2,EQ,0
Cal_Fnc_Pl_/SHOW3,2,EQ,1
:E End
:! 
:N Fnc_Pl_Hpgl2
:S   1589,   196,  1386
:T Cmd
:C )! Fnc_Pl_Hpgl2
:H Hlp_C_HPGL
:C )/NOPR
:C )*DEL,_CMAP
:C )_CMAP=1
:C )*DEL,_rl1
:C )_rl1=0
:C )/GOPR
:A To HPGL2 File
:D Redirect Plots to HPGL2
Cmd_)/NOPR
Cmd_)*SET,_ZVECT
 Fld_2
  Typ_Def_*GET(GRAPH,,DISPLAY)
Cmd_)/GOPR
Cmd_/SHOW,HPGL2
Cmd_HPGL
 Fld_2
  Typ_Def_MODEL
 Fld_3
  Prm_[HPGL]  Model number -
  Typ_Lis_OptionB
   Lis_Hpraster        ,HPRASTER
   Lis_7475            ,7475
   Lis_7550            ,7550
   Lis_7580            ,7580
   Lis_7585            ,7585
   Lis_7586            ,7586
   Lis_ColorPro        ,COLORPRO
   Lis_DraftPro        ,DRAFTPRO
   Lis_Draftmaster     ,Draftmaster
Cmd_HPGL
 Fld_2
  Typ_Def_PAPER
 Fld_3
  Prm_[HPGL] Paper Size/Orientation
  Typ_Lis_OptionB
   Lis_A               ,A
   Lis_B               ,B
   Lis_C               ,C
   Lis_D               ,D
   Lis_E               ,E
   Lis_A4              ,A4
   Lis_A3              ,A3
   Lis_A2              ,A2
   Lis_A1              ,A1
   Lis_A0              ,A0
   Lis_Carch           ,Carch
   Lis_Darch           ,Darch
   Lis_Earch           ,Earch
 Fld_4
  Prm_      Orientation
  Typ_Lis_RadioB
   Lis_Horizontal      ,HORIZ
   Lis_Vertical        ,VERT
Cmd_HPGL
 Fld_2
  Typ_Def_COLOR
 Fld_3
  Prm_         Color
  Typ_Lis_RadioB
   Lis_Color           ,ON
   Lis_Monochromatic   ,OFF
!
Fld_0
 Typ_Sep
! Exclude_from_paths
Cmd_)!
Fld_2
 Prm_[/REPLOT] Replot upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Replot          ,0
  LIS_Replot/Close    ,1
  LIS_Do not replot   ,2
  Def_1
!
Cal_Fnc_Pl_/SHOW2,2,EQ,0
Cal_Fnc_Pl_/SHOW3,2,EQ,1
:E End
:! 
:N Fnc_Pl_IMMED
:S    725,   135,   583
:T Cmd
:C )! Fnc_Pl_IMMED
:H Hlp_C_IMMED
:A Immediate Display
:D Immediate Display of Geometry
K_LN(prep7)
Inp_P
Cmd_IMMED
K_CM(PREP7)
 Fld_2
  Typ_LOGI,Off             ,On
  K_FL(PREP7)
  Def_*GET(COMMON,,D3COM,,INT,50)
  Prm_[IMMED]  Immediate geom display
 Fld_0
  Typ_Lab
  K_FL(PREP7)
  Prm_         (while in preprocessing only)
! The command was called outside of PREP7
Cmd_)*CSET,100,100,'WARN'
K_CM(prep7)
Cmd_)*CSET,110,110,'Immediate display is valid only '
K_CM(prep7)
Cmd_)*CSET,111,111,' in preprocessing (PREP7)       '
K_CM(prep7)
Cmd_)_z1='NOPOP'
K_CM(prep7)
Cmd_)!
  Fld_2
  K_FL(PREP7)
   Typ_Def_1
  Fld_2
  K_FL(prep7)
   Typ_Def_0
!
Cal_Fnc_Message,2,EQ,0
:E END
:! 
:N Fnc_Pl_JPEG
:S   1419,   203,  1209
:T Cmd
:C )! Fnc_Pl_JPEG
:H Hlp_C_JPEG
:H Hlp_C_/GFILE
:C )/NOPR
:C )*DEL,_CMAP
:C )_CMAP=1
:C )*DEL,_rl1
:C )_rl1=0
:C )/GOPR
:A To File
:D Redirect Plots to JPEG
Cmd_)/NOPR
Cmd_)*SET,_ZVECT
 Fld_2
  Typ_Def_*GET(GRAPH,,DISPLAY)
Cmd_)/GOPR
Cmd_/SHOW,JPEG,
 Fld_2
  Prm_      Vector Mode (wireframe)
  Typ_LOGI,Off             ,On
  Def_0
Cmd_JPEG
 Fld_2
  Typ_Def_QUAL
 Fld_3
  Prm_      Quality(1 - 100)
  Typ_INT
  Def_75
Cmd_JPEG
 Fld_2
  Typ_Def_ORIENT
 Fld_3
  Prm_         Orientation
  Typ_Lis_RadioB
   Lis_Horizontal      ,HORIZ
   Lis_Vertical        ,VERT
Cmd_JPEG
 Fld_2
  Typ_Def_COLOR
 Fld_3
  Prm_           Color
  Typ_Lis_RadioB
   Lis_Color           ,2
   Lis_Monochromatic   ,1
Cmd_JPEG
 Fld_2
  Typ_Def_TMOD
 Fld_3
  Prm_         Text mode
  Typ_Lis_RadioB
   Lis_Bitmaps         ,1
   Lis_Line strokes    ,0
Cmd_)/NOPR
Cmd_)*SET,_rl1
 Fld_0
  Typ_Lab
  Prm_ - The following forces background to white / foreground to black
 Fld_2
  Prm_Force White BG and Black FG
  Typ_LOGI,Off             ,On
  Def_0
Cmd_)/GOPR
Cmd_/GFILE
 Fld_2
  Prm_[/GFILE]  Pixel resolution
  Typ_INT
  Def_*GET(COMMON,,D3COM,,INT,126)
!
Fld_0
 Typ_Sep
! Exclude_from_paths
Cmd_)!
Fld_2
 Prm_[/REPLOT] Replot upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Replot          ,0
  LIS_Replot/Close    ,1
  LIS_Do not replot   ,2
  Def_1
!
Cal_Fnc_Pl_/SHOW2,2,EQ,0
Cal_Fnc_Pl_/SHOW3,2,EQ,1
:E End
:! 
:N Fnc_Pl_ModAxes
:S   4872,  1438,  3427
:T Cmd
:C )!Fnc_Pl_Graph
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,15
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,18
:C )*GET,_z1,COMMON,,GRCOM,,INT,20   ! gropt,fill key
:C )*GET,_z2,COMMON,,GRCOM,,INT,47   ! gropt,ascal key
:C )*GET,_z3,COMMON,,D3COM,,INT,116  ! gropt,logx key
:C )*GET,_z4,COMMON,,D3COM,,INT,117  ! gropt,logy key
:C )*GET,_z5,COMMON,,GRCOM,,INT,10   ! gropt,axnm key
:C )*GET,_z6,COMMON,,GRCOM,,INT,44   ! gropt,rev  key
:C )_z6x=0
:C )_z6y=0
:C )*IF,_z6,EQ,1,THEN
:C )_z6x=1
:C )*ELSEIF,_z6,EQ,2,THEN
:C )_z6y=1
:C )*ELSEIF,_z6,EQ,3,THEN
:C )_z6x=1
:C )_z6y=1
:C )*ENDIF
:C )*GET,_z7,COMMON,,GRCOM,,INT,68   ! gropt,divy key
:C )*IF,_z7,EQ,0,THEN
:C )    _zdvx='    '
:C )*ELSE
:C )    _zdvx=chrval(_z7)
:C )*ENDIF
:C )*GET,_z7,COMMON,,GRCOM,,INT,69   ! gropt,divy key
:C )*IF,_z7,EQ,0,THEN
:C )    _zdvy='    '
:C )*ELSE
:C )    _zdvy=chrval(_z7)
:C )*ENDIF
:C )_zc(1) = '1','2','3','4','5','6','ALL','OFF','ON','FRONT'
:C )! X-Axis label for the AXLAB command
:C )*GET,_zc(11),COMMON,,GRCOM,,CHAR,1
:C )*GET,_zc(12),COMMON,,GRCOM,,CHAR,2
:C )*GET,_zc(13),COMMON,,GRCOM,,CHAR,3
:C )*GET,_zc(14),COMMON,,GRCOM,,CHAR,4
:C )! Y-Axis label for the AXLAB command
:C )*GET,_zc(15),COMMON,,GRCOM,,CHAR,5
:C )*GET,_zc(16),COMMON,,GRCOM,,CHAR,6
:C )*GET,_zc(17),COMMON,,GRCOM,,CHAR,7
:C )*GET,_zc(18),COMMON,,GRCOM,,CHAR,8
:C )/GO
:A Modify Axes
:D Axes Modifications for Graph Plots
:H Hlp_UI_modaxes
!
Cmd_/AXLAB,X
 Fld_2
  Prm_[/AXLAB]  X-axis label
  Typ_CHAR,32,33
  Def_*STR(%#_zc(11)%%#_zc(12)%%#_zc(13)%%#_zc(14)%)
Cmd_/AXLAB,Y
 Fld_2
  Prm_[/AXLAB]  Y-axis label
  Typ_CHAR,32,33
  Def_*STR(%#_zc(15)%%#_zc(16)%%#_zc(17)%%#_zc(18)%)
!
Cmd_/GTHK,AXIS
 Fld_2
  Prm_[/GTHK]   Thickness of axes
  Typ_LIS_OPTIONB
  LIS_Single          ,1
  LIS_Double          ,2
  LIS_Triple          ,3
  LIS_Four times      ,4
  LIS_Five times      ,5
  LIS_Six times       ,6
  LIS_Seven times     ,7
  LIS_Eight times     ,8
  LIS_Nine times      ,9
  LIS_Ten times       ,10
  Def_*GET(common,,grcom,,int,15)
!
Fld_0
Typ_Sep
!
Cmd_/GRTYP
 Fld_2
  Prm_[/GRTYP]  Number of Y-axes
  Typ_LIS_OptionB
  LIS_Single Y-axis   ,0
  LIS_2-D Multi Y-axes,2
  LIS_3-D Multi Y-axes,3
  Def_*GET(common,,grcom,,int,19)
!
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_5
  Prm_[/XRANGE]  X-axis range
  Typ_LIS_RADIOB
  LIS_Auto calculated ,-1
  LIS_Specified range ,1
  Def_-1
Cmd_)*CSET,5,6
 Fld_2
  Prm_XMIN,XMAX  Specified X range
  Typ_real2
  Def_Blank,Blank
!
Cmd_)*SET,_z(7)
 Fld_0
  Prm_
 Fld_2
  Prm_[/YRANGE]  Y-axis range
  Typ_LIS_RADIOB
  LIS_Auto calculated ,-1
  LIS_Specified range ,1
  Def_-1
Cmd_)*CSET,8,9
 Fld_2
  Prm_YMIN,YMAX  Specified Y range -
  Typ_real2
  Def_Blank,Blank
Cmd_)*SET,_z(10)
 Fld_2
  Prm_NUM        - for Y-axis number
  Typ_LIS_OPTIONB
  LIS_1               ,1
  LIS_2 (multi only)  ,2
  LIS_3 (multi only)  ,3
  LIS_4 (3-D multi)   ,4
  LIS_5 (3-D multi)   ,5
  LIS_6 (3-D multi)   ,6
  LIS_All             ,7
  Def_1
!
Cmd_)/GO
!
Cmd_/GROPT,ASCAL
 Fld_2
  Prm_[/GROPT],ASCAL  Y ranges for -
  Typ_LIS_OPTIONB
  LIS_Individual calcs,ON
  LIS_All same as base,OFF
  Def_*PAR(_zc(_z2+8))
!
Fld_0
Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_[/GROPT]  Axis Controls
Cmd_/GROPT,LOGX
 Fld_2
  Prm_LOGX      X-axis scale
  Typ_LIS_OPTIONB
  LIS_Linear          ,OFF
  LIS_Logarithmic     ,ON
  Def_*PAR(_zc(_z3+8))
!
Cmd_/GROPT,LOGY
 Fld_2
  Prm_LOGY      Y-axis scale
  Typ_LIS_OPTIONB
  LIS_Linear          ,OFF
  LIS_Logarithmic     ,ON
  Def_*PAR(_zc(_z4+8))
!
Cmd_/GROPT,AXDV
 Fld_2
  Prm_AXDV      Axis divisions
  Typ_LOGI,Off             ,On
  Def_*GET(COMMON,,GRCOM,,INT,9)
!
Cmd_/GROPT,AXNM
 Fld_2
  Prm_AXNM      Axis scale numbering
  Typ_LIS_OPTIONB
  LIS_Off              ,OFF
  LIS_On - back plane  ,ON
  LIS_On - front plane ,FRONT
  Def_*PAR(_zc(_z5+8))
!
Cmd_/GROPT,AXNSC
 Fld_2
  Prm_AXNSC     Axis number size fact
  Typ_real
  Def_*GET(COMMON,,GRCOM,,REAL,48)
!
Cmd_/GROPT,DIG1
 Fld_2
  Prm_DIG1      Signif digits before -
  Typ_int
  Def_*GET(COMMON,,GRCOM,,INT,5)
!
Cmd_/GROPT,DIG2
 Fld_2
  Prm_DIG2      - and after decimal pt.
  Typ_int
  Def_*GET(COMMON,,GRCOM,,INT,48)
!
Cmd_/GROPT,XAXO
 Fld_2
  Prm_XAXO X-axis offset [0.0-1.0]
  Typ_real
  Def_*GET(COMMON,,D3COM2,,REAL,1)
!
Cmd_/GROPT,YAXO
 Fld_2
  Prm_YAXO Y-axes offset [0.0-1.0]
  Typ_real
  Def_*GET(COMMON,,D3COM2,,REAL,1)
!
Cmd_/GROPT,DIVX
 Fld_2
  Prm_NDIV Number of X-axis divisions
  Typ_Char
  Def_*Par(_zdvx)
!
Cmd_/GROPT,DIVY
 Fld_2
  Prm_NDIV Number of Y-axes divisions
  Typ_Char
  Def_*Par(_zdvy)
!
Cmd_/GROPT,REVX
 Fld_2
  Prm_REVX Reverse order X-axis values
  Typ_Logi,No,Yes
  Def_*Par(_z6x)
!
Cmd_/GROPT,REVY
 Fld_2
  Prm_REVY Reverse order Y-axis values
  Typ_Logi,No,Yes
  Def_*Par(_z6y)
!
Cmd_/GROPT,LTYP
 Fld_2
  Prm_LTYP Graph plot text style
  Typ_Logi,System derived,ANSYS generated
  Def_*GET(COMMON,,GRCOM,,INT,7)
Cal_Fnc_Pl_Graph0
:E END
:! 
:N Fnc_Pl_ModCurv
:S   1933,   704,  1222
:T Cmd
:C )!Fnc_Pl_ModCurv
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,18
:C )*GET,_z1,COMMON,,GRCOM,,INT,20   ! gropt,fill key
:C )_zc(1) = '1','2','3','4','5','6','ALL','OFF','ON','FRONT'
:C )! X-Axis label for the AXLAB command
:C )*GET,_zc(11),COMMON,,GRCOM,,CHAR,1
:C )*GET,_zc(12),COMMON,,GRCOM,,CHAR,2
:C )*GET,_zc(13),COMMON,,GRCOM,,CHAR,3
:C )*GET,_zc(14),COMMON,,GRCOM,,CHAR,4
:C )! Y-Axis label for the AXLAB command
:C )*GET,_zc(15),COMMON,,GRCOM,,CHAR,5
:C )*GET,_zc(16),COMMON,,GRCOM,,CHAR,6
:C )*GET,_zc(17),COMMON,,GRCOM,,CHAR,7
:C )*GET,_zc(18),COMMON,,GRCOM,,CHAR,8
:C )/GO
:A Modify Curve
:D Curve Modifications for Graph Plots
:H Hlp_UI_modcurv
Cmd_/GTHK,CURVE
 Fld_2
  Prm_[/GTHK]   Thickness of curves
  Typ_LIS_OPTIONB
  LIS_Null            ,-1
  LIS_Single          ,1
  LIS_Double          ,2
  LIS_Triple          ,3
  LIS_Four times      ,4
  LIS_Five times      ,5
  LIS_Six times       ,6
  LIS_Seven times     ,7
  LIS_Eight times     ,8
  LIS_Nine times      ,9
  LIS_Ten times       ,10
  Def_*GET(common,,grcom,,int,18)
!
Cmd_/GROPT,FILL
 Fld_2
  Prm_[/GROPT],FILL  Area under curve
  Typ_LIS_OPTIONB
  LIS_Not filled      ,OFF
  LIS_Filled w/ color ,ON
   Def_*PAR(_zc(_z1+8))
!
Cmd_/GROPT,CURL
 Fld_2
  Prm_[/GROPT],CURL  Curve labels
  Typ_LIS_OPTIONB
  LIS_Near Curve      ,0
  LIS_In Legend       ,1
  Def_*GET(common,,d3com2,,int,76)
!
Fld_0
Typ_Sep
!
Cmd_/GCOLUMN
 Fld_0
  Typ_Lab
  Prm_[/GCOLUMN] Specify string label
 Fld_2
  Prm_CURVE number (1-10)
  Typ_Int
  Def_1
 Fld_3
  Prm_LABEL for curve
  Typ_Char
!
Fld_0
Typ_Sep
!
Cmd_/GMARKER
 Fld_0
  Typ_Lab
  Prm_[/GMARKER] Specify marker type for curve
 Fld_2
  Prm_CURVE number (1-10)
  Typ_Int
  Def_1
 Fld_3
  Prm_KEY to define marker type
  Typ_Lis_OptionB
  Lis_None,0
  Lis_Triangles,1
  Lis_Squares  ,2
  Lis_Diamonds ,3
  Lis_Crosses  ,4
 Fld_4
  Prm_Increment (1-255)
  Typ_Int
  Def_1
:E END
:! 
:N Fnc_Pl_ModGrid
:S    920,   158,   755
:T Cmd
:C )!Fnc_Pl_ModGrid
:C )/NOPR
:C )/GO
:A Modify Grid
:D Grid Modifications for Graph Plots
:H Hlp_UI_modgrid
!
Cmd_/GRID
 Fld_2
  Prm_[/GRID]   Type of grid
  Typ_LIS_OPTIONB
  LIS_None            ,0
  LIS_X and Y lines   ,1
  LIS_X lines only    ,2
  LIS_Y lines only    ,3
  Def_*GET(COMMON,,D3COM,,INT,94)
!
Cmd_/GTHK,GRID
 Fld_2
  Prm_[/GTHK]   Thickness of grid
  Typ_LIS_OPTIONB
  LIS_Single          ,1
  LIS_Double          ,2
  LIS_Triple          ,3
  LIS_Four times      ,4
  LIS_Five times      ,5
  LIS_Six times       ,6
  LIS_Seven times     ,7
  LIS_Eight times     ,8
  LIS_Nine times      ,9
  LIS_Ten times       ,10
  Def_*GET(common,,grcom,,int,17)
!
Cmd_/GROPT,CGRID
 Fld_2
  Prm_[/GROPT],CGRID  Display grid -
  Typ_LOGI,Off             ,On
  Def_*GET(COMMON,,GRCOM,,INT,12)
Fld_0
Typ_Lab
Prm_                - superimposed on filled curves
:E END
:! 
:N Fnc_Pl_Number
:S   2929,  1010,  1912
:T Cmd
:C )! Fnc_Pl_Number
:C )/NOPR
:C )*GET,_z1,COMMON,,D3COM,,INT,97  ! elem number key
:C )*GET,_z2,COMMON,,D3COM,,INT,98  ! mat num key
:C )*GET,_z3,COMMON,,D3COM,,INT,99  ! type num key
:C )*GET,_z4,COMMON,,D3COM,,INT,100 ! real key
:C )*GET,_z5,COMMON,,D3COM,,INT,109 ! esys key
:C )*GET,_z6,COMMON,,D3COM,,INT,101 ! loca key
:C )*GET,_z8,COMMON,,D3COM,,INT,111 ! sect key
:C )*GET,_z9,COMMON,,D3COM,,INT,113 ! part key
:C )*IF,_z1,EQ,1,THEN
:C )_z7=1
:C )*ELSEIF,_z2,EQ,1,THEN
:C )_z7=2
:C )*ELSEIF,_z3,EQ,1,THEN
:C )_z7=3
:C )*ELSEIF,_z4,EQ,1,THEN
:C )_z7=4
:C )*ELSEIF,_z5,EQ,1,THEN
:C )_z7=5
:C )*ELSEIF,_z6,EQ,1,THEN
:C )_z7=6
:C )*ELSEIF,_z8,EQ,1,THEN
:C )_z7=9
:C )*ELSEIF,_z9,EQ,1,THEN
:C )_z7=10
:C )*ELSE
:C )_z7=0
:C )*ENDIF
:C )*DEL,_zc
:C )*DIM,_zc,char,10
:C )*SET,_zc(1),'ELEM','MAT','TYPE','REAL','ESYS','LOC','!','/REPLOT'
:C )*SET,_zc(9),'SECT','PART'
:C )*DEL,_z
:C )*DIM,_z,,2
:C )/GO
:A Numbering
:D Plot Numbering Controls
:H Hlp_UI_number
Cmd_/PNUM
 Fld_0
  Typ_Lab
  Prm_[/PNUM]  Plot Numbering Controls
 Fld_2
  Typ_DEF_KP
 Fld_3
  Typ_LOGI,Off,On
  Prm_KP    Keypoint numbers
  Def_*GET(COMMON,,D3COM,,INT,104)
Cmd_/PNUM
 Fld_2
  Typ_DEF_LINE
 Fld_3
  Typ_LOGI,Off,On
  Prm_LINE  Line numbers
  Def_*GET(COMMON,,D3COM,,INT,105)
Cmd_/PNUM
 Fld_2
  Typ_DEF_AREA
 Fld_3
  Typ_LOGI,Off,On
  Prm_AREA  Area numbers
  Def_*GET(COMMON,,D3COM,,INT,106)
Cmd_/PNUM
 Fld_2
  Typ_DEF_VOLU
 Fld_3
  Typ_LOGI,Off,On
  Prm_VOLU  Volume numbers
  Def_*GET(COMMON,,D3COM,,INT,107)
Cmd_/PNUM
 Fld_2
  Typ_DEF_NODE
 Fld_3
  Typ_LOGI,Off,On
  Prm_NODE  Node numbers
  Def_*GET(COMMON,,D3COM,,INT,96)
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Prm_      Elem / Attrib numbering
  Typ_LIS_OPTIONB
LIS_No numbering    ,0
LIS_Element numbers ,1
LIS_Material numbers,2
LIS_Element type num,3
LIS_Real const num  ,4
LIS_Section numbers ,9
LIS_Element CS num  ,5
K_LN(lsdyna)
LIS_Wavefront order ,6
K_LN(LSDYNA)
LIS_Part numbers    ,10
  Def_*PAR(_z7)
Cmd_)/GO
Cmd_/PNUM
 Fld_2
  Typ_DEF_TABN
 Fld_3
  Typ_LOGI,Off,On
  Prm_TABN  Table Names
  Def_*GET(COMMON,,D3COM,,INT,110)
Cmd_/PNUM
 Fld_2
  Typ_DEF_SVAL
 Fld_3
  Typ_LOGI,Off,On
  Prm_SVAL  Numeric contour values
  Def_*GET(COMMON,,D3COM,,INT,108)
Cmd_/PNUM
K_CM(PMETHOD)
 Fld_2
  Typ_DEF_EXCL
 Fld_3
  Typ_LOGI,Off,On
  Prm_PXCL  Excluded p-elements
  Def_*GET(COMMON,,D3COM,,INT,102)
Cmd_/PNUM
K_CM(PARPERF)
 Fld_2
  Typ_DEF_DOMA
 Fld_3
  Typ_LOGI,Off,On
  Prm_DOMA  Domain numbers
  Def_*GET(COMMON,,D3COM,,INT,112)
Cmd_/NUMBER
 Fld_0
 Typ_Sep
 Fld_2
  Prm_[/NUM]  Numbering shown with
  Typ_LIS_OPTIONB
LIS_Colors & numbers,0
LIS_Colors only     ,1
LIS_Numbers only    ,2
LIS_No color/numbers,-1
  Def_*GET(COMMON,,D3COM,,INT,30)
Cmd_)/NOPR
Cmd_)*SET,_z(2)
Fld_0
Typ_Sep
 Fld_2
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,7
   LIS_Replot          ,8
  Def_8
Cmd_)/GO
Cal_Fnc_Pl_Number2
:E END
:! 
:N Fnc_Pl_Number2
:S    387,   247,   133
:T Cmd
:C )! Fnc_Pl_Number2
:C )/NOPR
:C )*IF,_z(1),EQ,0,THEN
:C )_z1=0
:C )*IF,_z7,EQ,0,THEN
:C )_z2='ELEM'
:C )*ELSE
:C )_z2=_zc(_z7)
:C )*ENDIF
:C )*ELSE
:C )_z2=_zc(_z(1))
:C )_z1=1
:C )*ENDIF
:C )/GO
Inp_P
Cmd_/PNUM
Fld_2
 Typ_Def_*PAR(_z2)
Fld_3
 Typ_Def_*PAR(_z1)
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(2)))
:E END
:! 
:N Fnc_Pl_Orient
:S   1399,   426,   966
:T Cmd
:C )! Fnc_Pl_Orient
:H Hlp_UI_orient
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,10
:C )*DEL,_zc
:C )*DIM,_zc,char,14
:C )_zc(1)='X','-X','Y','-Y','Z','-Z'
:C )_zc(7)='ZS','YS','XS','ZM','YM','XM'
:C )_zc(13)='!','/REPLOT'
:C )!
:C )*get,_z(2),GRAPH,_z(1),VIEW,X
:C )*get,_z(3),GRAPH,_z(1),VIEW,Y
:C )*get,_z(4),GRAPH,_z(1),VIEW,Z
:C )!
:C )/GO
:A Viewing Direction
:D Viewing Direction
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/VIEW] [/VUP] Viewing Direction
 Fld_2
  Prm_WN         Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
!
 Fld_0
  Typ_Sep
!
Cmd_)*CSET,2,4
 Fld_0
  Typ_Lab
  Prm_[/VIEW]  View direction
 Fld_2
  Prm_XV,YV,ZV  Coords of view point
  Typ_REAL3
  Def_*PAR(_z(2)),*PAR(_z(3)),*PAR(_z(4))
!
 Fld_0
  Typ_Sep
!
Cmd_)*SET,_z(5)
 Fld_2
  Prm_[/VUP]  Coord axis orientation
  Typ_LIS_OPTIONB
   LIS_X-axis up       ,0
   LIS_X-axis down     ,1
   LIS_Y-axis up       ,2
   LIS_Y-axis down     ,3
   LIS_Z-axis up       ,4
   LIS_Z-axis down     ,5
  Def_*GET(COMMON,,D3COM,,INT,174)
!
 Fld_0
  Typ_Sep
!
Cmd_)*SET,_z(7)
 Fld_4
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,13
   LIS_Replot          ,14
  Def_14
Cmd_)/GO
Cal_Fnc_Pl_Orient_A
:E End
:! 
:N Fnc_Pl_Orient_A
:S    440,   167,   266
:T Cmd
:C )! Fnc_Pl_Orient_A
:C )/NOPR
:C )*if,_z(1),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(1)
:C )*endif
:C )/GO
Inp_P
!
Cmd_/VIEW
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
!
Cmd_/VUP
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_zc(_z(5)+1))
!
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(9)))
:E End
:! 
:N Fnc_Pl_PNG
:S   1759,   200,  1552
:T Cmd
:C )! Fnc_Pl_PNG
:H Hlp_C_PNGR
:H Hlp_C_/GFILE
:C )/NOPR
:C )*DEL,_CMAP
:C )_CMAP=1
:C )*DEL,_rl1
:C )_rl1=0
:C )/GOPR
:A To File
:D Redirect Plots to PNG
Cmd_)/NOPR
Cmd_)*SET,_ZVECT
 Fld_2
  Typ_Def_*GET(GRAPH,,DISPLAY)
Cmd_)/GOPR
Cmd_/SHOW,PNG,
 Fld_2
  Prm_        Vector Mode (wireframe)
  Typ_LOGI,Off             ,On
  Def_0
Cmd_PNGR
 Fld_2
  Typ_Def_COMP
 Fld_3
  Prm_             Compression
  Typ_Lis_RadioB
   Lis_Compressed      ,1
   Lis_Uncompressed    ,0
 Fld_4
  Prm_        Speed/Compress Level
  Typ_LIS_OPTIONB
   Lis_Default         ,-1
   Lis_1 (fastest),1
   Lis_2          ,2
   Lis_3          ,3
   Lis_4          ,4
   Lis_5          ,5
   Lis_6          ,6
   Lis_7          ,7
   Lis_8          ,8
   Lis_9 (slowest),9
Cmd_PNGR
 Fld_2
  Typ_Def_ORIENT
 Fld_3
  Prm_             Orientation
  Typ_Lis_RadioB
   Lis_Horizontal      ,HORIZ
   Lis_Vertical        ,VERT
Cmd_PNGR
 Fld_2
  Typ_Def_COLOR
 Fld_3
  Prm_                Color
  Typ_Lis_RadioB
   Lis_Color           ,2
   Lis_Monochromatic   ,1
Cmd_PNGR
 Fld_2
  Typ_Def_TMOD
 Fld_3
  Prm_              Text mode
  Typ_Lis_RadioB
   Lis_Bitmaps         ,1
   Lis_Line strokes    ,0
Cmd_)/NOPR
Cmd_)*SET,_rl1
 Fld_0
  Typ_Lab
  Prm_ - The following forces background to white / foreground to black
 Fld_2
  Prm_Force White BG and Black FG
  Typ_LOGI,Off             ,On
  Def_0
Cmd_)/GOPR
Cmd_/GFILE
 Fld_2
  Prm_[/GFILE]  Pixel resolution
  Typ_INT
  Def_*GET(COMMON,,D3COM,,INT,126)
!
Fld_0
 Typ_Sep
! Exclude_from_paths
Cmd_)!
Fld_2
 Prm_[/REPLOT] Replot upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Replot          ,0
  LIS_Replot/Close    ,1
  LIS_Do not replot   ,2
  Def_1
!
Cal_Fnc_Pl_/SHOW2,2,EQ,0
Cal_Fnc_Pl_/SHOW3,2,EQ,1
:E End
:! 
:N Fnc_Pl_Pscr
:S   2849,   374,  2468
:T Cmd
:C )! Fnc_Pl_Pscr
:H Hlp_UI_pscr
:C )/NOPR
:C )*DEL,_z1
:C )*DEL,_z
:C )*DIM,_z,,13
:C )*DEL,_zc
:C )*DIM,_zc,char,7
:C )*DEL,_zp
:C )*DIM,_zp,,2
:C )_zc(1)='!','/REPLOT'
:C )_zc(3)='COLOR','TIFF','EPSI','LAND','PORT'
:C )*DEL,_CMAP
:C )_CMAP=1
:C )*DEL,_rl1
:C )_rl1=0
:C )/GOPR
:C )!
:A To PSCR File
:D Redirect Plots to PSCR
Cmd_)/NOPR
Cmd_)*SET,_ZVECT
 Fld_2
  Typ_Def_*GET(GRAPH,,DISPLAY)
Cmd_)/GOPR
Cmd_/SHOW,PSCR
Cmd_PSCR,HIRES
 Fld_0
  Typ_Lab
  Prm_          - Hi-resolution turns off Z-buffering
 Fld_2
  Prm_[PSCR]  Hi-resolution output
  Typ_LOGI,Off             ,On
Cmd_/DEVICE,VECTOR
 Fld_2
  Prm_[/DEVI]  Vector mode (wireframe)
  Typ_LOGI,Off             ,On
  Def_*GET(GRAPH,,DISPLAY)
Cmd_)/NOPR
Cmd_)*SET,_rl1
 Fld_0
  Typ_Lab
  Prm_ - The following forces background to white / foreground to black
 Fld_2
  Prm_   Force White BG and Black FG
  Typ_LOGI,Off             ,On
  Def_1
Cmd_)/GOPR
Cmd_/GFILE
 Fld_0
  Typ_Lab
  Prm_          - for Z-buffered plots written to file
 Fld_2
  Prm_[/GFILE]  Pixel resolution -
  Typ_INT
  Def_*GET(COMMON,,D3COM,,INT,126)
Cmd_)/NOPR
!
Cmd_)*CSET,1,1
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[PSCR]       Paper Size
  Typ_Lis_OptionB
   Lis_A               ,A
   Lis_B               ,B
   Lis_C               ,C
   Lis_D               ,D
   Lis_E               ,E
   Lis_A4              ,A4
   Lis_A3              ,A3
   Lis_A2              ,A2
   Lis_A1              ,A1
   Lis_A0              ,A0
! Exclude_from_paths
Cmd_)*SET,_z(1)
 Fld_2
  Typ_Lab
  Prm_[PSCR]       Orientation
  Typ_Lis_OptionB
  Lis_Landscape        ,1
  Lis_Portrait         ,2
  Lis_User Supplied    ,99
  Def_1
 Fld_3
  Prm_[PSCR]        Color
  Typ_Lis_OptionB
  Lis_Monochromatic    ,0
  Lis_Shaded Mono      ,3
  Lis_16 Color         ,1
  Lis_256+ Color       ,2
  Def_2
!
Cmd_)*SET,_z(3)
 Fld_3
  Prm_[PSCR]       Preview Style
  Typ_Lis_OptionB
   Lis_None            ,0
   Lis_Wireframe       ,1
   Lis_Shaded Solid    ,2
 Fld_2
  Prm_             Preview Type
  Typ_Lis_OptionB
   Lis_Tiff Preview    ,4
   Lis_Epsi Preview    ,5
!
Cmd_)*SET,_z1
 Fld_2
  Prm_[PSCR]   Line Width (1-99)
  Typ_Int
  Def_3
 Fld_0
  Typ_Sep
!
Cmd_)*CSET,4,5
 Fld_0
  Typ_Lab
   Prm_ User Supplied Values
 Fld_2
  Typ_Def_TRANX
 Fld_3
  Prm_[PSCR]       Tranx
  Typ_Real
  Def_592
Cmd_)*CSET,6,7
 Fld_2
  Typ_Def_TRANY
 Fld_3
  Prm_[PSCR]       Trany
  Typ_Real
  Def_18
!
Cmd_)*CSET,8,9
 Fld_2
  Typ_Def_ROT
 Fld_3
  Prm_[PSCR] Rotational Angle (Deg)
  Typ_Real
  Def_90
!
Cmd_)*CSET,10,11
 Fld_2
  Typ_Def_SCAL
 Fld_3
  Prm_[PSCR] Scale Factor
  Typ_Real
  Def_.238
!
Fld_0
 Typ_Sep
!
! Exclude_from_paths
Cmd_)*SET,_z(5)
Fld_2
 Prm_[/REPLOT] Replot upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Replot          ,0
  LIS_Replot/Close    ,1
  LIS_Do not replot   ,2
  Def_1
Cal_Fnc_Pl_Pscr_A
:E End
:! 
:N Fnc_Pl_Pscr_A
:S    962,   325,   630
:T Cmd
:C )! Fnc_Pl_Pscr_A
:C )/NOPR
:C )*DEL,_zx
:C )*IF,_z(5),EQ,1,THEN
:C )_z2='/REPLOT'
:C )*ELSE
:C )_z2='!'
:C )*ENDIF
:C )*IF,_z(1),EQ,1,THEN
:C )_zx=_zc(6)
:C )KEYW,KEY1,1
:C )*ELSEIF,_z(1),EQ,2,THEN
:C )_zx=_zc(7)
:C )KEYW,KEY1,1
:C )*ELSE
:C )KEYW,KEY1,0
:C )*ENDIF
:C )/GO
Inp_P
Cmd_PSCR,PAPER
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*PAR(_zx)
Cmd_PSCR
 Fld_2
  Typ_Def_*PAR(_zc(3))
 Fld_3
  Typ_Def_*PAR(_z(2))
Cmd_PSCR
 Fld_2
  Typ_Def_*PAR(_zc(_z(3)))
 Fld_3
  Typ_Def_*PAR(_z(4))
Cmd_PSCR,LWID
 Fld_2
  Typ_Def_*PAR(_z1)
Cmd_PSCR
K_CM(key1)
 Fld_2
  Typ_Def_*CPAR(4)
 Fld_3
  Typ_Def_*CPAR(5)
Cmd_PSCR
K_CM(key1)
 Fld_2
  Typ_Def_*CPAR(6)
 Fld_3
  Typ_Def_*CPAR(7)
Cmd_PSCR
K_CM(key1)
 Fld_2
  Typ_Def_*CPAR(8)
 Fld_3
  Typ_Def_*CPAR(9)
Cmd_PSCR
K_CM(key1)
 Fld_2
  Typ_Def_*CPAR(10)
 Fld_3
  Typ_Def_*CPAR(11)
Cmd_)!
Fld_2
  Typ_Def_*PAR(_z(5))
Cal_Fnc_Pl_/SHOW2,2,EQ,0
Cal_Fnc_Pl_/SHOW3,2,EQ,1
:E End
:! 
:N Fnc_Pl_QUALITY
:S   2735,   264,  2464
:T Cmd
:C )! Fnc_Pl_QUALITY
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,11
:C )*DEL,_zr
:C )*DIM,_zr,,11
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )_zc(1)='!','/REPLOT'
:C )/GO
:A Best Quality Plot
:D Best Quality Plot
:H Hlp_UI_QUALITY
Cmd_)/NOPR
Cmd_)*SET,_zr(1)
 Fld_2
  Prm_Plot by
  Typ_LIS_OPTIONB
   LIS_Materials        ,1
   LIS_Type             ,2
   LIS_Real             ,3
   LIS_Items(entities ) ,4
   Def_1
 Fld_3
 Prm_Show differences by
 Typ_LIS_OPTIONB
   LIS_Bright Colors   ,0
   LIS_Muted Colors    ,1
   LIS_Textures        ,2
   LIS_Translucency    ,3
   Def_0
 Fld_4
 Prm_Element Tesselation Res.
 Typ_LIS_OPTIONB
   LIS_Coarse          ,0
   LIS_Normal          ,1
   LIS_Fine            ,2
   Def_0
 Fld_5
 Prm_Solid Tesselation Res.
 Typ_LIS_OPTIONB
   LIS_Coarse          ,0
   LIS_Normal          ,1
   LIS_Fine            ,2
   Def_0
 Fld_0
  Typ_Sep
Cmd_)*SET,_z(3)
 Fld_2
  Prm_Type of Background 
  Typ_LIS_RADIOB
   LIS_No      Backgrnd,0
   LIS_Shaded  Backgrnd,1
   LIS_Texture Backgrnd,2
   Def_1
Cmd_)*SET,_z(1)
 Fld_2
  Prm_Shaded Background Style
  Typ_LIS_OPTIONB
   Lis_Left to Right,0
   Lis_Top to Bottom,1
   Lis_Right to Left,2
   Lis_Bottom to Top,3
  Def_0
Cmd_)*SET,_z(2)
 Fld_2
  Prm_Shaded Background Color
  Typ_LIS_OPTIONB
   Lis_Magenta-Red  ,1
   Lis_Magenta      ,2
   Lis_Blue-Magenta ,3
   Lis_Blue         ,4
   Lis_Cyan-Blue    ,5
   Lis_Cyan         ,6
   Lis_Green-Cyan   ,7
   Lis_Green        ,8
   Lis_Yellow-Green ,9
   Lis_Yellow       ,10
   Lis_Orange       ,11
   Lis_Red          ,12
   Lis_Dark Gray    ,13
  Def_4
Cmd_)*SET,_z(4)
 Fld_2
  Prm_Background Texture 
  Typ_LIS_OPTIONB
   LIS_Aluminum        ,1
   LIS_Aluminum brushed,2
   LIS_Steel with bumps,3
   LIS_Steel embossed  ,4
   LIS_Steel pattern   ,6
   LIS_Steel riveted   ,7
   LIS_Steel scratched ,8
   LIS_Steel etched    ,11
   LIS_Iron            ,5
   LIS_Iron - grainy   ,13
   LIS_Gold            ,31
   LIS_Brass           ,32
   LIS_Silver          ,33
   LIS_Tin             ,9
   LIS_Metal           ,10
   LIS_Metal - hot     ,12
   LIS_Metal - rusty   ,14
   LIS_Brick           ,15
   LIS_Block           ,16
   LIS_Wood            ,17
   LIS_Wood - light    ,18
   LIS_Wood - walnut   ,19
   LIS_Plastic - red   ,37
   LIS_Plastic - green ,39
   LIS_Plastic - blue  ,36
   LIS_Plastic - ivory ,35
   LIS_Plastic - yellow,38
   LIS_Plastic - brown ,40
   LIS_Plastic - black ,34
   LIS_Plastic hard red,22
   LIS_Plast hard blue ,20
   LIS_Plast hard Lblue,21
  Def_16
Cmd_)*SET,_rl1,0
Cmd_)*SET,_zr(5)
 Fld_2
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,1
   LIS_Replot          ,2
  Def_2
Cmd_)/GOPR
Cal_Fnc_PBAKQTY
:E END
:! 
:N Fnc_Pl_QUALITY1
:S    391,   111,   273
:T Cmd
:C )! Fnc_Pl_QUALITY1
:D Best Quality Plot
:H Hlp_UI_QUALITY
Inp_P
Cmd_QUALITY
 Fld_2
  Typ_Def_*PAR(_zr(1))
 Fld_3
  Typ_Def_*PAR(_zr(2))
 Fld_4
  Typ_Def_*PAR(_zr(3))
 Fld_5
  Typ_Def_*PAR(_zr(4))
 Fld_6
  Typ_Def_*PAR(_zzz)
 Fld_7
  Typ_Def_*PAR(_rl1)
! Exclude_from_paths
Cmd_)/GOPR
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_zr(5)))
:E END
:! 
:N Fnc_Pl_Size
:S   2483,   710,  1766
:T Cmd
:C )! Fnc_Pl_Size
:C )/NOPR
:C )*DEL,_zcf
:C )*DIM,_zcf,,2
:C )*DEL,_zdf
:C )*DIM,_zdf,,2
:C )*GET,_zdf(1),COMMON,,D3COM2,,INT,70
:C )*GET,_zdf(2),COMMON,,D3COM2,,INT,71
:C )*DEL,_z
:C )*DIM,_z,,8
:C )*DEL,_zc
:C )*DIM,_zc,char,4
:C )*GET,_z10,common,,d3com,,int,132   ! PGrLevel (for /EFACET)
:C )*IF,_z10,LE,0,THEN
:C )_z10=1
:C )*ELSEIF,_z10,GE,3,THEN
:C )_z10=4
:C )*ENDIF
:C )_zc(1)='OFF','ON'
:C )_zc(3)='!','/REPLOT'
:C )*get,_z1,GRAPH,,SHRINK
:C )_z2=(nint((_z1*100)/5))*5
:C )_z3=1
:C )*get,_z4,common,,d3com,,REAL,178  ! eshape key
:C )*if,_z4,ne,0,then
:C )_z5=1
:C )*else
:C )_z5=0
:C )*endif
:C )/GO
:A Size and Shape
:D Size and Shape
:H Hlp_UI_size
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
 K_FL(pmethod)
  Prm_[/SHRINK]  Shrink entities by
  Typ_LIS_OPTIONB
   LIS_0 percent       ,0
   LIS_5 percent       ,5
   LIS_10 percent      ,10
   LIS_15 percent      ,15
   LIS_20 percent      ,20
   LIS_25 percent      ,25
   LIS_30 percent      ,30
   LIS_35 percent      ,35
   LIS_40 percent      ,40
   LIS_45 percent      ,45
   LIS_50 percent      ,50
  Def_*PAR(_z2)
 Fld_3
  Prm_[/ESHAPE]  Display of element
  Typ_LOGI,Off             ,On
  Def_*PAR(_z5)
Cmd_)*CSET,3,3
 Fld_0
  Typ_Lab
  Prm_          shapes based on real
 Fld_0
  Typ_Lab
  Prm_          constant descriptions
 Fld_2
  Prm_SCALE   Real constant multiplier
  Typ_REAL
  Def_*GET(COMMON,,D3COM,,REAL,178)
 Fld_0
  Typ_Sep
Cmd_)*SET,_z(8)
 Fld_2
  Prm_[/EFACET]  Facets/element edge
  Typ_Lis_OPTIONB
   Lis_ 1 facet/edge  ,1
   Lis_ 2 facets/edge ,2
   Lis_ 4 facets/edge ,4
  Def_*PAR(_z10)
!
Cmd_)*SET,_z(4)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[/RATIO]  Distortion of Geometry
 Fld_2
  Prm_WN        Window number
  Typ_LIS_OPTIONB
   LIS_All active wind ,6
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_*PAR(_z3)
Cmd_)*CSET,5,6
 Fld_2
  Prm_RATOX     X distortion ratio
  Typ_REAL
  Def_*GET(GRAPH,_z3,RATIO,X)
 Fld_3
  Prm_RATOY     Y distortion ratio
  Typ_REAL
  Def_*GET(GRAPH,_z3,RATIO,Y)
Cmd_)*SET,_zcf(1)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[/CFORMAT]  Component/Parameter Format
 Fld_2
  Prm_NFIRST, NLAST Widths
  Typ_REAL2
  Def_*PAR(_zdf(1)),*PAR(_zdf(2))
Cmd_)*SET,_z(7)
Fld_0
  Typ_Sep
 Fld_2
  Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,3
   LIS_Replot          ,4
  Def_4
Cmd_)/GO
Cal_Fnc_Pl_Size_A
:E END
:! 
:N Fnc_Pl_Size_A
:S    713,   330,   376
:T Cmd
:C )! Fnc_Pl_Size_A
:C )/NOPR
:C )*if,_z(4),EQ,6,then
:C )  _z1='ALL'
:C )*else
:C )  _z1=_z(4)
:C )*endif
:C )*IF,_z(2),EQ,0,THEN
:C )*CSET,3,3,0.0
:C )*ENDIF
:C )*GET,_z(3),CPAR,3
:C )*IF,_z(2),EQ,1.0,THEN
:C )*IF,_z(3),EQ,0.0,THEN
:C )*CSET,3,3,1.0
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_P
Cmd_/SHRINK
K_CM(pmethod)
 Fld_2
  Typ_Def_*PAR(_z(1)/100)
Cmd_/ESHAPE
 Fld_2
  Typ_Def_*CPAR(3)
Cmd_/EFACET
 Fld_2
  Typ_Def_*PAR(_z(8))
Cmd_/RATIO
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*CPAR(5)
 Fld_4
  Typ_Def_*CPAR(6)
Cmd_/CFORMAT
 Fld_2
  Typ_Def_*PAR(_zcf(1))
 Fld_3
  Typ_Def_*PAR(_zcf(2))
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z(7)))
:E END
:! 
:N Fnc_Pl_Symbols
:S   9347,  4728,  4612
:T Cmd
:C )! Fnc_Pl_Symbols
:C )/NOPR
:C )*DEL,_z1
:C )*DEL,_z
:C )*DIM,_z,,15
:C )*DEL,_zbf
:C )*DIM,_zbf,,20
:C )*DEL,_zsf
:C )*DIM,_zsf,,18
:C )*DEL,_zsc
:C )*DIM,_zsc,,15
:C )*DEL,_zicf
:C )*DIM,_zicf,,2
:C )*DEL,_z11
:C )!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
:C )! Set up defaults for /PSF
:C )*GET,_zsf(1) ,COMMON,,PBCCOM,,INT,181  ! PRES
:C )*GET,_zsf(2) ,COMMON,,PBCCOM,,INT,182  ! CONV
:C )*GET,_zsf(3) ,COMMON,,PBCCOM,,INT,183  ! HFLU
:C )*GET,_zsf(4) ,COMMON,,PBCCOM,,INT,184  ! FSI
:C )*GET,_zsf(5) ,COMMON,,PBCCOM,,INT,185  ! IMPD
:C )*GET,_zsf(6) ,COMMON,,PBCCOM,,INT,186  ! MXWF
:C )*GET,_zsf(7) ,COMMON,,PBCCOM,,INT,187  ! INF
:C )*GET,_zsf(8) ,COMMON,,PBCCOM,,INT,188  ! CHRG
:C )*GET,_zsf(9) ,COMMON,,PBCCOM,,INT,189  ! MCI
:C )*GET,_zsf(10),COMMON,,PBCCOM,,INT,190  ! RAD
:C )*GET,_zsf(11),COMMON,,PBCCOM,,INT,191  ! PORT
:C )*GET,_zsf(12),COMMON,,PBCCOM,,INT,192  ! FSIN
:C )*GET,_zsf(13),COMMON,,PBCCOM,,INT,193  ! RDSF
:C )*GET,_zsf(14),COMMON,,PBCCOM,,INT,194  ! SHLD
:C )*GET,_zsf(15),COMMON,,PBCCOM,,INT,195  ! VFRC
:C )*GET,_zsf(18),COMMON,,PBCCOM,,INT,198  ! BLI
:C )*GET,_zsc(1) ,COMMON,,PBCCOM,,INT,211  ! PRES - NORM, TANX, YANY
:C )*GET,_zsc(2) ,COMMON,,PBCCOM,,INT,212  ! CONV - HCOE, TBUL
:C )*GET,_zsc(10),COMMON,,PBCCOM,,INT,220  ! RAD  - EMIS, TAMB
:C )*GET,_zsc(13),COMMON,,PBCCOM,,INT,223  ! RDSF - EMSS, ENCL
:C )*GET,_zsc(14),COMMON,,PBCCOM,,INT,224  ! SHLD - COND, MUR
:C )*GET,_zsc(15),COMMON,,PBCCOM,,INT,225  ! VFRC - BNDR, WETT
:C )_zsfn=0      ! initialize Item to 'None'  (DEFA)
:C )_zsfo=1      ! initialize KEY  to 'Face outlines'
:C )*if,_zsf(1),NE,0,then    !
:C )*if,_zsc(1),EQ,0,then
:C )_zsc(1)=1
:C )*endif
:C )_zsfn=0+_zsc(1)
:C )_zsfo=_zsf(1)
:C )*elseif,_zsf(2),NE,0,then
:C )_zsfn=8+_zsc(2)
:C )_zsfo=_zsf(2)
:C )*elseif,_zsf(3),NE,0,then
:C )_zsfn=10
:C )_zsfo=_zsf(3)
:C )*elseif,_zsf(4),NE,0,then
:C )_zsfn=11
:C )_zsfo=_zsf(4)
:C )*elseif,_zsf(5),NE,0,then
:C )_zsfn=12
:C )_zsfo=_zsf(5)
:C )*elseif,_zsf(6),NE,0,then
:C )_zsfn=13
:C )_zsfo=_zsf(6)
:C )*elseif,_zsf(7),NE,0,then
:C )_zsfn=14
:C )_zsfo=_zsf(7)
:C )*elseif,_zsf(8),NE,0,then
:C )_zsfn=15
:C )_zsfo=_zsf(8)
:C )*elseif,_zsf(9),NE,0,then
:C )_zsfn=16
:C )_zsfo=_zsf(9)
:C )*elseif,_zsf(10),NE,0,then
:C )*if,_zsc(10),EQ,0,then
:C )_zsc(10)=1
:C )*endif
:C )_zsfn=17+_zsc(10)
:C )_zsfo=_zsf(10)
:C )*elseif,_zsf(11),NE,0,then
:C )_zsfn=20
:C )_zsfo=_zsf(11)
:C )*elseif,_zsf(12),NE,0,then
:C )_zsfn=21
:C )_zsfo=_zsf(12)
:C )*elseif,_zsf(13),NE,0,then
:C )*if,_zsc(13),EQ,0,then
:C )_zsc(13)=1
:C )*endif
:C )_zsfn=22+_zsc(13)
:C )_zsfo=_zsf(13)
:C )*elseif,_zsf(14),NE,0,then
:C )*if,_zsc(14),EQ,0,then
:C )_zsc(14)=1
:C )*endif
:C )_zsfn=25+_zsc(14)
:C )_zsfo=_zsf(14)
:C )*elseif,_zsf(15),NE,0,then
:C )*if,_zsc(15),EQ,0,then
:C )_zsc(15)=1
:C )*endif
:C )_zsfn=28+_zsc(15)
:C )_zsfo=_zsf(15)
:C )*elseif,_zsf(18),NE,0,then
:C )_zsfn=31
:C )_zsfo=_zsf(18)
:C )*endif
:C )!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
:C )! Set up defaults for /PBF
:C )*get,_zbf(1),COMMON,,PBCCOM,,INT,271  ! /PBF,TEMP
:C )*get,_zbf(2),COMMON,,PBCCOM,,INT,272  ! /PBF,FLUE
:C )*get,_zbf(3),COMMON,,PBCCOM,,INT,273  ! /PBF,HGEN
:C )*get,_zbf(4),COMMON,,PBCCOM,,INT,275  ! /PBF,JS
:C )*get,_zbf(5),COMMON,,PBCCOM,,INT,276  ! /PBF,MVDI
:C )*get,_zbf(6),COMMON,,PBCCOM,,INT,274  ! /PBF,CHRGD
:C )*get,_zbf(7),COMMON,,PBCCOM,,INT,277  ! /PBF,VLTG
:C )*get,_zbf(8),COMMON,,PBCCOM,,INT,278  ! /PBF,FORC
:C )*get,_zbf(9),COMMON,,PBCCOM,,INT,279  ! /PBF,JSX
:C )*get,_zbf(10),COMMON,,PBCCOM,,INT,280 ! /PBF,JSY
:C )*get,_zbf(11),COMMON,,PBCCOM,,INT,281 ! /PBF,JSZ
:C )*get,_zbf(12),COMMON,,PBCCOM,,INT,282 ! /PBF,PHASE
:C )*get,_zbf(13),COMMON,,PBCCOM,,INT,283 ! /PBF,EF
:C )*get,_zbf(14),COMMON,,PBCCOM,,INT,284 ! /PBF,H
:C )*get,_zbf(15),COMMON,,PBCCOM,,INT,285 ! /PBF,PORT
:C )*get,_zbf(16),COMMON,,PBCCOM,,INT,286 ! /PBF,FVIN
:C )*get,_zbf(17),COMMON,,PBCCOM,,INT,287 ! /PBF,LUMP
:C )!
:C )_zbfn=1      ! initialize Item to 'None'  (DEFA)
:C )*if,_zbf(1),NE,0,then
:C )  _zbfn=2
:C )*elseif,_zbf(2),NE,0,then
:C )  _zbfn=3
:C )*elseif,_zbf(3),NE,0,then
:C )  _zbfn=4
:C )*elseif,_zbf(4),NE,0,then
:C )  _zbfn=5
:C )*elseif,_zbf(5),NE,0,then
:C )  _zbfn=6
:C )*elseif,_zbf(6),NE,0,then
:C )  _zbfn=7
:C )*elseif,_zbf(7),NE,0,then
:C )  _zbfn=8
:C )*elseif,_zbf(8),NE,0,then
:C )  _zbfn=9
:C )*elseif,_zbf(13),NE,0,then
:C )  _zbfn=10
:C )*elseif,_zbf(14),NE,0,then
:C )  _zbfn=11
:C )*elseif,_zbf(15),NE,0,then
:C )  _zbfn=12
:C )*elseif,_zbf(12),NE,0,then
:C )  _zbfn=13
:C )*elseif,_zbf(16),NE,0,then
:C )  _zbfn=14
:C )*elseif,_zbf(17),NE,0,then
:C )  _zbfn=15
:C )*endif
:C )/GO
:A Symbols
:D Symbols
:H Hlp_UI_symbols
Inp_NoApply
Cmd_)/NOPR
!
Cmd_)*SET,_z(1)
 Fld_2
  Prm_[/PBC] Boundary condition symbol
   Typ_LIS_RADIOB
    LIS_All BC+Reaction ,1
    LIS_All Applied BCs ,2
    LIS_All Reactions   ,4
    LIS_None            ,0
    LIS_For Individual: ,3
Cmd_)*SET,_z(11)
 Fld_2
   Typ_LOGI,Applied BC's,Applied BC's
   Prm_Individual symbol set dialog(s)
   Def_1
 Fld_3
   Typ_LOGI,Reactions,Reactions
   Prm_       to be displayed:
   Def_1
 Fld_4
   Typ_LOGI,Miscellaneous,Miscellaneous
   Prm_
   Def_1
 Fld_0
  Typ_Sep
!
Cmd_EDFPLOT
K_CM(LSDYNA)
 Fld_2
  Prm_[EDFPLOT]  LS-DYNA Load Symbols
  Typ_Lis_RadioB
  Lis_Show  , 1
  Lis_Hide  , 0
  Def_1
!
 Fld_0
K_FL(LSDYNA)
  Typ_Sep
!
Cmd_)*SET,_zsfn
Fld_2
 Prm_[/PSF]  Surface Load Symbols
  Typ_LIS_OPTIONB
   LIS_None                 ,0
   LIS_Pressures            ,1
   LIS_Tan-X Pressures      ,2
   LIS_Tan-Y Pressures      ,3
   LIS_Pressures(imag)      ,4
   LIS_Tan-X Pressures(imag),5
   LIS_Tan-Y Pressures(imag),6
   LIS_Convect FilmCoef     ,8
   LIS_Convect BulkTemp     ,9
   LIS_Heat Fluxes          ,10
   LIS_Acous-Struc Intr     ,11
   LIS_Impedences           ,12
   LIS_Maxwell Surfaces     ,13
   LIS_Ext surf flag        ,14
   LIS_Elect surf charg     ,15
   LIS_Mag circ intf        ,16
   LIS_Emis Radiation       ,18
   LIS_Tamb Radiation       ,19
   LIS_Exterior Port        ,20
   LIS_Field Surface Intr   ,21
   LIS_RDSF Emissivity      ,23
   LIS_RDSF Enclosure       ,24
   LIS_Shield Cond          ,26
   LIS_Shield Rel Perm      ,27
   LIS_VFRC Boundary        ,29
   LIS_VFRC Wetting         ,30
   LIS_Boundary layer flag  ,31
   Def_*PAR(_zsfn)
!
Cmd_)*SET,_zsfsh
Fld_2
 Prm_       Visibility key for shells
  Typ_LOGI,Off             ,On
  Def_*GET(COMMON,,D3COM2,,INT,32)
!
!
Cmd_)*SET,_zsfcl
Fld_2
 Prm_       Plot symbols in color
  Typ_LOGI,Off             ,On
  Def_*GET(COMMON,,D3COM2,,INT,41)
!
Cmd_)*SET,_zsfo
Fld_2
 Prm_       Show pres and convect as
  Typ_LIS_OPTIONB
   LIS_Face outlines   ,1
   LIS_Arrows          ,2
   LIS_Contours        ,3
   Def_*PAR(_zsfo)
!
Fld_0
Typ_Sep
!
Cmd_)*SET,_zbfn
Fld_2
 Prm_[/PBF]  Body Load Symbols
  Typ_LIS_OPTIONB
   LIS_None            ,1
   P_LN(LINPLUS)
   LIS_Structural temps,2
   P_LN(LINPLUS)
   LIS_Fluences        ,3
   P_LN(THERMAL*FLOTRAN)
   LIS_Heat gen rates  ,4
   P_LN(ELECMAG)
   LIS_Current density ,5
   P_LN(ELECMAG)
   LIS_Current phase   ,13
   P_LN(ELECMAG)
   LIS_Mag virt displac,6
   P_LN(ELECMAG)
   LIS_Elect charge den,7
   K_LN(VFED)
   P_LN(ELECMAG)
   LIS_Voltage drop    ,8
   K_LN(CFD)
   P_LN(FLOTRAN)
   LIS_Fluid force     ,9
   P_LN(ELECMAG)
   LIS_Electric field  ,10
   P_LN(ELECMAG)
   LIS_Magnetic field  ,11
   P_LN(ELECMAG)
   LIS_Interior port   ,12
   LIS_Field Volume Intr,14
   LIS_Lump parameters ,15
  Def_*PAR(_zbfn)
!
Cmd_)*SET,_zbfo
Fld_2
 Prm_        Show curr and fields as
  Typ_LIS_OPTIONB
   LIS_Contours        ,1
   LIS_Arrows          ,2
   Def_*PAR(_zbfo)
!
Fld_0
 Typ_Sep
!
Fld_0
 Prm_[/PSYMB] Other Symbols
  Typ_Lab
!
Cmd_)*SET,_z(2)
Fld_2
 Prm_CS   Local coordinate system
  Typ_LOGI,Off             ,On
  Def_*GET(COMMON,,D3COM,,INT,142)
!
Fld_3
 Prm_NDIR Nodal coordinate system
  Typ_LOGI,Off             ,On
   Def_*GET(COMMON,,D3COM,,INT,139)
!
Fld_4
 Prm_ESYS Element coordinate sys
  Typ_LOGI,Off             ,On
   Def_*GET(COMMON,,D3COM,,INT,143)
!
Fld_5
 Prm_LDIV  Line element divisions
  Typ_LIS_OPTIONB
   LIS_None            ,-1
   LIS_Meshed          ,0
   LIS_LESIZE          ,1
   Def_*GET(COMMON,,D3COM2,,INT,42)
!
Fld_6
 Prm_LDIR Line direction
  Typ_LOGI,Off             ,On
   Def_*GET(COMMON,,D3COM,,INT,141)
!
Fld_7
 Prm_ADIR Area direction
  Typ_LOGI,Off             ,On
   Def_*GET(COMMON,,D3COM2,,INT,56)
!
Fld_8
 Prm_ECON Element mesh constraints
  Typ_LOGI,Off             ,On
   Def_*GET(COMMON,,D3COM,,INT,134)
!
Fld_9
 Prm_XNODE Extra node at element
  Typ_LOGI,Off             ,On
   Def_*GET(COMMON,,D3COM2,,INT,55)
!
Cmd_)*SET,_z11
Fld_2
 Prm_DOT  Larger node/kp symbols
  Typ_LOGI,Off             ,On
   Def_*GET(COMMON,,D3COM,,INT,136)
!
Cmd_)*CSET,10,11
Fld_2
 K_FL(PMETHOD)
 Prm_PCONV P Convergence location
  Typ_LOGI,Off             ,On
   Def_*GET(COMMON,,D3COM,,INT,162)
!
Fld_3
 Prm_LAYR Orientation of layer number
  Typ_INT
   Def_*GET(COMMON,,D3COM2,,INT,22)
!
Cmd_)*SET,_z13
Fld_2
 Prm_FBCS Force symbol common scale
  Typ_LOGI,Off             ,On
   Def_*GET(COMMON,,D3COM2,,INT,60)
!
Fld_0
Typ_Sep
!
Cmd_)*SET,_zrep
Fld_2
 Prm_[/REPLOT] Replot upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_Do not replot   ,1
   LIS_Replot          ,2
   Def_2
!
Cmd_)/GO
Cal_Fnc_Pl_Symbols2
:E END
:! 
:N Fnc_Pl_Symbols2
:S   3460,  2443,  1010
:T Cmd
:C )! Fnc_Pl_Symbols2
:C )/NOPR
:C )KEYW,KVECT,0
:C )*if,_zbfn,ge,10,then
:C )*if,_zbfn,le,15,then
:C )KEYW,KVECT,1
:C )*endif
:C )*elseif,_zbfn,eq,5,then
:C )KEYW,KVECT,1
:C )*endif
:C )*DEL,_zcsf
:C )*DEL,_zcbf
:C )*DEL,_zcrep
:C )*DIM,_zcsf,CHAR,34
:C )*DIM,_zcbf,CHAR,15
:C )*DIM,_zcrep,CHAR,2
:C )_zcsf(1) ='    ','DEFA','PRES','NORM','TANX','TANY','CONV','HCOE',
:C )_zcsf(9) ='TBUL','HFLU','FSI ','IMPD','MXWF','INF ','CHRG','MCI'
:C )_zcsf(17)='RAD ','EMIS','TAMB','PORT','FSIN','RDSF','EMSS','ENCL'
:C )_zcsf(25)='SHLD','COND','MUR ','VFRC','BNDR','WETT','INRM','ITNX','ITNY'
:C )_zcsf(34)='BLI '
:C )_zcbf(1) ='DEFA','TEMP','FLUE','HGEN','JS','MVDI','CHRGD','VLTG'
:C )_zcbf(9) ='FORC','EF','H','PORT','PHASE','FVIN','LUMP'
:C )_zcrep(1)='!   ','/REP'
:C )!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
:C )!  Establish /PSF Item and Comp label pointers for PRES and CONV
:C )_zsfc=1                ! initialize Comp to 'blank'
:C )*if,_zsfn,LE,0,then
:C )_zsfn=2                ! initialize Item to 'blank'
:C )*elseif,_zsfn,LE,6,then
:C )   *if,_zsfn,GE,4,then
:C )       _zsfc=_zsfn+27   ! Move component label pointer from Item into Comp
:C )       _zsfn=3          ! Establish Item label pointer
:C )   *else
:C )       _zsfc=_zsfn+3    ! Move component label pointer from Item into Comp
:C )       _zsfn=3          ! Establish Item label pointer
:C )   *endif
:C )*elseif,_zsfn,LE,9,then
:C )_zsfc=_zsfn      ! Move component label pointer from Item into Comp
:C )_zsfn=7          ! Establish Item label pointer
:C )*elseif,_zsfn,LE,16,then
:C )*elseif,_zsfn,LE,19,then
:C )_zsfc=_zsfn      ! Move component label pointer from Item into Comp
:C )_zsfn=17         ! Establish Item label pointer
:C )*elseif,_zsfn,LE,21,then
:C )*elseif,_zsfn,LE,24,then
:C )_zsfc=_zsfn      ! Move component label pointer from Item into Comp
:C )_zsfn=22         ! Establish Item label pointer
:C )*elseif,_zsfn,LE,27,then
:C )_zsfc=_zsfn      ! Move component label pointer from Item into Comp
:C )_zsfn=25         ! Establish Item label pointer
:C )*elseif,_zsfn,LE,30,then
:C )_zsfc=_zsfn      ! Move component label pointer from Item into Comp
:C )_zsfn=28         ! Establish Item label pointer
:C )*elseif,_zsfn,EQ,31,then
:C )_zsfn=34         ! Establish Item label pointer BLI
:C )*endif
:C )!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Inp_P
!
Cmd_)/GOPR
Cmd_/PSF
 Fld_2
  Typ_Def_*PAR(_zcsf(_zsfn))
 Fld_3
  Typ_Def_*PAR(_zcsf(_zsfc))
 Fld_4
  Typ_Def_*PAR(_zsfo)
 Fld_5
  Typ_Def_*PAR(_zsfsh)
 Fld_6
  Typ_Def_*PAR(_zsfcl)
!
Cmd_/PBF
 Fld_2
  Typ_Def_*PAR(_zcbf(_zbfn))
 Fld_4
  K_LN(kvect)
  Typ_Def_1
  K_LN(KVECT)
  Typ_Def_*PAR(_zbfo)
!
Cmd_/PSYMB,CS
 Fld_2
  Typ_Def_*PAR(_z(2))
!
Cmd_/PSYMB,NDIR
 Fld_2
  Typ_Def_*PAR(_z(3))
!
Cmd_/PSYMB,ESYS
 Fld_2
  Typ_Def_*PAR(_z(4))
!
Cmd_/PSYMB,LDIV
 Fld_2
  Typ_Def_*PAR(_z(5))
!
Cmd_/PSYMB,LDIR
 Fld_2
  Typ_Def_*PAR(_z(6))
!
Cmd_/PSYMB,ADIR
 Fld_2
  Typ_Def_*PAR(_z(7))
!
Cmd_/PSYMB,ECON
 Fld_2
  Typ_Def_*PAR(_z(8))
!
Cmd_/PSYMB,XNODE
 Fld_2
  Typ_Def_*PAR(_z(9))
!
Cmd_/PSYMB,DOT
 Fld_2
  Typ_Def_*PAR(_z11)
!
Cmd_/PSYMB,PCONV
 Fld_2
  Typ_Def_*CPAR(10)
!
Cmd_/PSYMB,LAYR
 Fld_2
  Typ_Def_*CPAR(11)
!
Cmd_/PSYMB,FBCS
 Fld_2
  Typ_Def_*PAR(_z13)
!
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(1))
!
Cal_Fnc_Pl_Symbols3,2,LE,1
Cal_Fnc_Pl_Symbols4,2,EQ,2
Cal_Fnc_Pl_Symbols5,2,EQ,3
Cal_Fnc_Pl_Symbols6,2,EQ,4
:E END
:! 
:N Fnc_Pl_Symbols3
:S    199,    72,   120
:T Cmd
:C )! Fnc_Pl_Symbols3
Inp_P
Cmd_/PBC,ALL
 Fld_3
  Typ_Def_*PAR(_z(1))
!
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zcrep(_zrep))
:E END
:! 
:N Fnc_Pl_Symbols4
:S    328,    72,   249
:T Cmd
:C )! Fnc_Pl_Symbols4
Inp_P
Cmd_/PBC,ALL,,1
P_LN(LINPLUS)
Cmd_/PBC,NFOR,,0
P_LN(LINPLUS)
Cmd_/PBC,NMOM,,0
P_LN(LINPLUS)
Cmd_/PBC,RFOR,,0
P_LN(LINPLUS)
Cmd_/PBC,RMOM,,0
P_LN(LINPLUS)
Cmd_/PBC,PATH,,0
!
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zcrep(_zrep))
:E END
:! 
:N Fnc_Pl_Symbols5
:S    345,   214,   124
:T Cmd
:C )/NOPR
:C )*IF,_z(11),EQ,1,THEN
:C )_z1=1
:C )*ELSEIF,_z(12),EQ,1,THEN
:C )_z1=2
:C )*ELSEIF,_z(13),EQ,1,THEN
:C )_z1=3
:C )*ENDIF
:C )/GO
:C )! Fnc_Pl_Symbols5
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z1)
Cal_Fnc_Pl_Symbols5a,2,EQ,1
Cal_Fnc_Pl_Symbols5b,2,EQ,2
Cal_Fnc_Pl_Symbols5c,2,EQ,3
:E END
:! 
:N Fnc_Pl_Symbols5a
:S   5446,   264,  5175
:T Cmd
:C )/NOPR
:C )KEYW,KEY1,0
:C )*IF,_z(12),EQ,1,THEN
:C )_z1=2
:C )*ELSEIF,_z(13),EQ,1,THEN
:C )_z1=3
:C )*ELSE
:C )KEYW,KEY1,1
:C )*ENDIF
:C )/GO
:C )! Fnc_Pl_Symbols5a
:D Applied Boundary Conditions
:H Hlp_C_/PBC
Inp_NoApply
Cmd_/PBC,U
K_CM(pr_set*PR_FLUID*PR_STRUC*(PMETHOD+PR_STRUC))
P_CM(LINPLUS)
Fld_0
Typ_Lab
Prm_[/PBC]  Individual boundary condition symbols
!
Fld_3
 Prm_U      Applied translations
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,1)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,ROT
K_CM(pr_set*PR_STRUC*(PMETHOD+PR_STRUC))
P_CM(LINPLUS)
Fld_3
Prm_ROT    Applied rotations
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,2)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,TEMP
K_CM(pr_set*PR_FLUID*PR_THERM*PR_CFD)
P_CM(FLOTRAN*THERMAL)
Fld_3
Prm_TEMP   Applied temperature DOFs
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,3)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,PRES
K_CM(pr_set*PR_FLUID*PR_CFD)
P_CM(FLOTRAN)
Fld_3
Prm_PRES   Applied pressure DOFs
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,4)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,V
K_CM(pr_set*PR_FLUID*PR_CFD)
P_CM(FLOTRAN)
Fld_3
Prm_V      Applied velocities
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,5)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,ENKE
K_CM(pr_set*PR_FLUID*PR_CFD)
P_CM(FLOTRAN)
Fld_3
Prm_ENKE   Applied turb K.E. DOFs
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,6)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,ENDS
K_CM(pr_set*PR_FLUID*PR_CFD)
P_CM(FLOTRAN)
Fld_3
Prm_ENDS   Applied energy dissip DOF
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,7)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,VOLT
K_CM(pr_set*PR_ELMAG*PR_THERM)
P_CM(THERMAL*ELECMAG)
Fld_3
Prm_VOLT   Applied voltages
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,8)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,MAG
K_CM(pr_set*PR_ELMAG)
P_CM(ELECMAG)
Fld_3
Prm_MAG    Applied scalar mag poten
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,9)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,A
K_CM(pr_set*PR_ELMAG)
P_CM(ELECMAG)
Fld_3
Prm_A      Applied vector mag poten
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,10)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,CHRG
K_CM(pr_set*PR_ELMAG)
P_CM(ELECMAG)
Fld_3
Prm_CHRG   Applied electric charge
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,27)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Fld_0
Typ_Sep
!
Cmd_/PBC,F
K_CM(pr_set**PR_STRUC*(PMETHOD+PR_STRUC)*PR_FLUID)
P_CM(LINPLUS)
Fld_3
Prm_F      Applied forces
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,11)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,M
K_CM(pr_set*PR_STRUC*(PMETHOD+PR_STRUC))
P_CM(LINPLUS)
Fld_3
Prm_M      Applied moments
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,12)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,HEAT
K_CM(pr_set*PR_THERM)
P_CM(THERMAL)
Fld_3
Prm_HEAT   Applied heat flows
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,13)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,FLOW
K_CM(pr_set*PR_FLUID*PR_CFD)
P_CM(FLOTRAN)
Fld_3
Prm_FLOW   Applied fluid flows
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,14)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,AMPS
K_CM(pr_set*PR_ELMAG*PR_THERM)
P_CM(ELECMAG)
Fld_3
Prm_AMPS   Applied currents
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,16)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,FLUX
K_CM(pr_set*PR_ELMAG)
P_CM(ELECMAG)
Fld_3
Prm_FLUX   Applied magnetic fluxes
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,17)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,CSG
K_CM(pr_set*PR_ELMAG)
P_CM(ELECMAG)
Fld_3
Prm_CSG    Applied mag curr segments
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,18)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
! Exclude_from_paths
Cmd_/REPLOT
K_CM(KEY1)
 Fld_1
  Typ_Def_*PAR(_zcrep(_zrep))
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z1)
Cal_Fnc_Pl_Symbols5b,2,EQ,2
Cal_Fnc_Pl_Symbols5c,2,EQ,3
:E End
:! 
:N Fnc_Pl_Symbols5b
:S   1801,   207,  1587
:T Cmd
:C )/NOPR
:C )KEYW,KEY1,0
:C )*IF,_z(13),EQ,1,THEN
:C )_z1=3
:C )*ELSE
:C )KEYW,KEY1,1
:C )*ENDIF
:C )/GO
:C )! Fnc_Pl_Symbols5b
:D Reactions
:H Hlp_C_/PBC
Inp_NoApply
Cmd_/PBC,NFOR
K_CM(pr_set*PR_FLUID*PR_STRUC*(PMETHOD+PR_STRUC))
P_CM(LINPLUS)
Fld_0
Typ_Lab
Prm_[/PBC]  Individual Reaction Symbols
!
Fld_3
Prm_NFOR   Postproc nodal "forces"
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,22)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,NMOM
K_CM(pr_set*PR_STRUC*(PMETHOD+PR_STRUC)*LSDYNA)
P_CM(LINPLUS)
Fld_3
Prm_NMOM   Postproc nodal moments
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,23)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,RFOR
P_CM(LINPLUS)
Fld_3
Prm_RFOR   Postproc reaction "force"
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,24)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Cmd_/PBC,RMOM
K_CM(pr_set*PR_STRUC*(PMETHOD+PR_STRUC)*LSDYNA)
P_CM(LINPLUS)
Fld_3
Prm_RMOM   Postproc reaction moments
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,25)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
Fld_0
Typ_Sep
!
Cmd_/PBC,PATH
Fld_3
Prm_PATH   Postproc path geometry
  Typ_LIS_OptionB
   LIS_Off             ,0
   LIS_Symbol          ,1
   LIS_Symbol+Value    ,2
Def_*GET(COMMON,,PBCCOM,,INT,26)
Fld_4
 Prm_   Range(min,max,abs)
  Typ_REAL3
!
! Exclude_from_paths
Cmd_/REPLOT
K_CM(KEY1)
 Fld_1
  Typ_Def_*PAR(_zcrep(_zrep))
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z1))
Cal_Fnc_Pl_Symbols5c,2,EQ,3
:E End
:! 
:N Fnc_Pl_Symbols5c
:S   1036,   105,   924
:T Cmd
:C )! Fnc_Pl_Symbols5c
:D Miscellaneous
:H Hlp_C_/PBC
Inp_NoApply
Fld_0
Typ_Lab
Prm_[/PBC]  Miscellaneous Boundary Conditions
!
Cmd_/PBC,MAST
P_CM(LINPLUS)
Fld_3
 Prm_MAST   Master DOFs
  Typ_LOGI,Off         ,On
  Def_*GET(COMMON,,PBCCOM,,INT,19)
!
Cmd_/PBC,CP
P_CM(LINPLUS)
Fld_3
 Prm_CP     Coupled Nodes
  Typ_LOGI,Off         ,On
  Def_*GET(COMMON,,PBCCOM,,INT,20)
!
Cmd_/PBC,CE
P_CM(LINPLUS)
Fld_3
 Prm_CE     Nodes in constraint eqs
  Typ_LOGI,Off         ,On
  Def_*GET(COMMON,,PBCCOM,,INT,21)
!
Cmd_/PBC,ACEL
P_CM(LINPLUS)
Fld_3
 Prm_ACEL   Applied acceleration
  Typ_LOGI,Off         ,On
  Def_*GET(COMMON,,PBCCOM,,INT,28)
!
Cmd_/PBC,OMEG
P_CM(LINPLUS)
Fld_3
 Prm_OMEG   Applied angular velocity
  Typ_LOGI,Off         ,On
  Def_*GET(COMMON,,PBCCOM,,INT,29)
!
Cmd_/PBC,PATH
P_CM(LINPLUS)
Fld_3
 Prm_PATH   Display all defined paths
  Typ_LOGI,Off         ,On
  Def_*GET(COMMON,,PBCCOM,,INT,27)
!
!
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zcrep(_zrep))
:E End
:! 
:N Fnc_Pl_Symbols6
:S    328,    72,   249
:T Cmd
:C )! Fnc_Pl_Symbols6
Inp_P
Cmd_/PBC,ALL,,0
P_LN(LINPLUS)
Cmd_/PBC,NFOR,,1
P_LN(LINPLUS)
Cmd_/PBC,NMOM,,1
P_LN(LINPLUS)
Cmd_/PBC,RFOR,,1
P_LN(LINPLUS)
Cmd_/PBC,RMOM,,1
P_LN(LINPLUS)
Cmd_/PBC,PATH,,1
!
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zcrep(_zrep))
:E END
:! 
:N Fnc_Pl_TIFF
:S   1510,   203,  1300
:T Cmd
:C )! Fnc_Pl_TIFF
:H Hlp_C_TIFF
:H Hlp_C_/GFILE
:C )/NOPR
:C )*DEL,_CMAP
:C )_CMAP=1
:C )*DEL,_rl1
:C )_rl1=0
:C )/GOPR
:A To File
:D Redirect Plots to TIFF
Cmd_)/NOPR
Cmd_)*SET,_ZVECT
 Fld_2
  Typ_Def_*GET(GRAPH,,DISPLAY)
Cmd_)/GOPR
Cmd_/SHOW,TIFF,
 Fld_2
  Prm_      Vector Mode (wireframe)
  Typ_LOGI,Off             ,On
  Def_0
Cmd_TIFF
 Fld_0
  Typ_Lab
   Prm_[TIFF] Tagged Image Format File
 Fld_2
  Typ_Def_COMP
 Fld_3
  Prm_      Compression
  Typ_Lis_RadioB
   Lis_Compressed      ,1
   Lis_Uncompressed    ,0
Cmd_TIFF
 Fld_2
  Typ_Def_ORIENT
 Fld_3
  Prm_      Orientation
  Typ_Lis_RadioB
   Lis_Horizontal      ,HORIZ
   Lis_Vertical        ,VERT
Cmd_TIFF
 Fld_2
  Typ_Def_COLOR
 Fld_3
  Prm_        Color
  Typ_Lis_RadioB
   Lis_Color           ,2
   Lis_Monochromatic   ,1
Cmd_TIFF
 Fld_2
  Typ_Def_TMOD
 Fld_3
  Prm_      Text mode
  Typ_Lis_RadioB
   Lis_Bitmaps         ,1
   Lis_Line strokes    ,0
Cmd_)/NOPR
Cmd_)*SET,_rl1
 Fld_0
  Typ_Lab
  Prm_ - The following forces background to white / foreground to black
 Fld_2
  Prm_Force White BG and Black FG
 Typ_LOGI,Off             ,On
  Def_0
Cmd_)/GOPR
Cmd_/GFILE
 Fld_2
  Prm_[/GFILE]  Pixel resolution
  Typ_INT
  Def_*GET(COMMON,,D3COM,,INT,126)
!
Fld_0
 Typ_Sep
! Exclude_from_paths
Cmd_)!
Fld_2
 Prm_[/REPLOT] Replot upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Replot          ,0
  LIS_Replot/Close    ,1
  LIS_Do not replot   ,2
  Def_1
!
Cal_Fnc_Pl_/SHOW2,2,EQ,0
Cal_Fnc_Pl_/SHOW3,2,EQ,1
:E End
:! 
:N Fnc_Pl_Trans1
:S    962,   496,   459
:T Cmd
:C )! Fnc_Pl_Trans1
:D Translucency
:B Fnc_Pl_Trans
:C )/NOPR
:C )*IF,_z(1),EQ,1,THEN
:C )*GET,_z1,ELEM,,num,min
:C )_z(2)=ELMIQR(_z1,-11)/1000000
:!
:C )*ELSEIF,_z(1),EQ,2,THEN
:C )*GET,_z1,AREA,,num,min
:C )_z(2)=ARINQR(_z1,-16)/1000000
:!
:C )*ELSEIF,_z(1),EQ,3,THEN
:C )*GET,_z1,VOLU,,num,min
:C )_z(2)=VLINQR(_z1,-12)/1000000
:!
:C )*ELSEIF,_z(1),EQ,4,THEN
:C )*GET,_z(2),common,,grcom,,int,32 ! trans level
:C )*ENDIF
:C )/GO
:H Hlp_C_/TRLCY
Cmd_/TRLCY
Fld_0
Typ_Lab
Prm_[/TRLCY]   Entity Translucency
  Fld_3
   Prm_TLEVEL  Translucency level (0-1)
   Typ_Real
   Def_*PAR(_z(2))
  Fld_2
   Typ_Def_*PAR(_zc(_z(1)))
Fld_0
Typ_Lab
Prm_Range of entities or graphs to be shown translucent (defaults to ALL)
Fld_4
Prm_N1,N2,NINC
Typ_int3
Def_ALL
Fld_0
Typ_Sep
! Exclude_from_paths
Cmd_/REPLOT
Fld_1
Prm_[/REPLOT]  Replot upon OK/Apply?
Typ_LIS_OPTIONB
LIS_Do not replot   ,!
LIS_Replot          ,/REPLOT
:E END
:! 
:N Fnc_Pl_Trans2
:S    605,   124,   474
:T Cmd
:C )! Fnc_Pl_Trans2
:C )/go
:D Translucency
:B Fnc_Pl_Trans
:H Hlp_C_/TRLCY
Cmd_/TRLCY
 Fld_0
  Typ_Lab
  Prm_[/TRLCY]   Component Translucency
 Fld_2
  Typ_Def_*PAR(_zc(5))
 Fld_3
  Prm_TLEVEL  Translucency level (0-1)
  Typ_Real
  Def_0.0
 Fld_0
  Typ_Lab
  Prm_
 Fld_4
  Prm_N1  Name of component to be -
  Typ_LIS
  LIS_*READ,CM
 Fld_0
  Typ_Lab
  Prm_    - shown translucent
Cmd_)!
 Fld_0
  Typ_Sep
!
! Exclude_from_paths
Cmd_/REPLOT
Fld_1
Prm_[/REPLOT]  Replot upon OK/Apply?
Typ_LIS_OPTIONB
LIS_Do not replot   ,!
LIS_Replot          ,/REPLOT
:E END
:! 
:N Fnc_Pl_Trans3
:S    535,   201,   327
:T Cmd
:C )! Fnc_Pl_Trans3
:C )/NOPR
:C )*GET,_z1,common,,d3com,,real,299  ! vvtran variable in d3com
:C )/GOPR
:D Translucency
:B Fnc_Pl_Trans
:H Hlp_C_/TRLCY
Cmd_/TRLCY
 Fld_0
  Typ_Lab
  Prm_[/TRLCY]   Isosurface Translucency
 Fld_2
  Typ_Def_*PAR(_zc(6))
 Fld_3
  Typ_Real
  Prm_TLEVEL  Translucency level (0-1)
  Def_*PAR(_z1)
!
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Prm_[/REPLOT]  Replot upon OK/Apply?
  Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
:E END
:! 
:N Fnc_Pl_VRML
:S    451,   189,   255
:T Cmd
:C )! Fnc_Pl_/SHOW
:H Hlp_C_/SHOW
:C )/NOPR
:C )*DEL,_CMAP
:C )_CMAP=1
:C )*DEL,_rl1
:C )_rl1=0
:C )/GOPR
:A To File
:D Redirect Plots to VRML
Cmd_)/NOPR
Cmd_)*SET,_ZVECT
 Fld_2
  Typ_Def_*GET(GRAPH,,DISPLAY)
Cmd_)/GOPR
Cmd_/SHOW,VRML
! Exclude_from_paths
Cmd_)!
Fld_2
 Prm_[/REPLOT] Replot upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Replot          ,0
  LIS_Do not replot   ,1
Cal_Fnc_Pl_/SHOW2,2,LE,0
:E End
:! 
:N Fnc_Pl_WinCopy
:S    566,   137,   404
:T Cmd
:C )! Fnc_Pl_WinCopy
:A Copy Window Specs
:D Copy Window Specfications
:H Hlp_C_/WINDOW
Fld_0
Typ_Lab
Prm_[/WINDOW]  Copy Window Specifications
Cmd_/WINDOW
Fld_7
Prm_NCOPY  Copy window specs from
Typ_LIS_OPTIONB
LIS_ Window 1       ,1
LIS_ Window 2       ,2
LIS_ Window 3       ,3
LIS_ Window 4       ,4
LIS_ Window 5       ,5
Fld_2
Prm_WN     to window number
Typ_LIS_OPTIONB
LIS_ Window 1       ,1
LIS_ Window 2       ,2
LIS_ Window 3       ,3
LIS_ Window 4       ,4
LIS_ Window 5       ,5
:E END OF Fnc_Pl_WinCopy
:! 
:N Fnc_Pl_WinDele
:S    392,   121,   249
:T Cmd
:C )! Fnc_Pl_WinDele
:A Delete Window
:D Delete Window
:H Hlp_C_/WINDOW
Fld_0
Typ_Lab
Cmd_/WINDOW
Fld_2
Prm_[/WINDOW]  Window to be deleted
Typ_LIS_OPTIONB
LIS_ All active wind,ALL
LIS_ Window 1       ,1
LIS_ Window 2       ,2
LIS_ Window 3       ,3
LIS_ Window 4       ,4
LIS_ Window 5       ,5
Def_1
Fld_3
Typ_Def_DELE
:E END OF Fnc_WinDele
:! 
:N Fnc_Pl_WinLay
:S   1029,   302,   720
:T Cmd
:C )! Fnc_Pl_WinLay
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,6
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,12
:C )_zc(1)='SQUA','FULL','TOP','BOT','LEFT','RIGH','LTOP','RTOP'
:C )_zc(9)='LBOT','RBOT','!','/REPLOT'
:C )/GO
:A Window Layout
:D Window Layout
:H Hlp_C_/WINDOW
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_0
Typ_Lab
Prm_[/WINDOW]  Window Layout
Fld_2
Prm_WN  Window number
Typ_LIS_OPTIONB
LIS_ Window 1       ,1
LIS_ Window 2       ,2
LIS_ Window 3       ,3
LIS_ Window 4       ,4
LIS_ Window 5       ,5
Fld_3
Prm_    Window geometry
Typ_LIS_OPTIONB
LIS_Square          ,1
LIS_Full            ,2
LIS_Top half        ,3
LIS_Bottom half     ,4
LIS_Left half       ,5
LIS_Right half      ,6
LIS_Top left quarter,7
LIS_Top right qtr   ,8
LIS_Bottom left qtr ,9
LIS_Bottom right qtr,10
LIS_Picked          ,11
!
Fld_0
Typ_Sep
!
Fld_7
Prm_[/REPLOT]  Replot upon OK/Apply?
Typ_LIS_OPTIONB
LIS_ Do not replot  ,11
LIS_ Replot         ,12
Def_12
!
Cal_Fnc_Pl_WinPick1,3,LE,10
Cal_Fnc_Pl_WinPick2,3,EQ,11
:E END
:! 
:N Fnc_Pl_WinOnOff
:S   1332,   637,   669
:T Cmd
:C )! Fnc_Pl_WinOnOff
:C )/NOPR
:C )*get,_z1,GRAPH,1,ACTIVE
:C )*get,_z2,GRAPH,2,ACTIVE
:C )*get,_z3,GRAPH,3,ACTIVE
:C )*get,_z4,GRAPH,4,ACTIVE
:C )*get,_z5,GRAPH,5,ACTIVE
:C )*if,_z1,EQ,1,then
:C )_z1='ON'
:C )*else
:C )_z1='OFF'
:C )*endif
:C )*if,_z2,EQ,1,then
:C )_z2='ON'
:C )*else
:C )_z2='OFF'
:C )*endif
:C )*if,_z3,EQ,1,then
:C )_z3='ON'
:C )*else
:C )_z3='OFF'
:C )*endif
:C )*if,_z4,EQ,1,then
:C )_z4='ON'
:C )*else
:C )_z4='OFF'
:C )*endif
:C )*if,_z5,EQ,1,then
:C )_z5='ON'
:C )*else
:C )_z5='OFF'
:C )*endif
:C )/GO
:A Window On or Off
:D Window On or Off
:H Hlp_C_/WINDOW
Fld_0
Typ_Lab
Prm_[/WINDOW]  Window On or Off
Cmd_/WINDOW,1
Fld_2
Prm_           Window 1
Typ_LIS_OPTIONB
LIS_  On            ,ON
LIS_  Off           ,OFF
Def_*PAR(_z1)
!
Cmd_/WINDOW,2
Fld_2
Prm_           Window 2
Typ_LIS_OPTIONB
LIS_  On            ,ON
LIS_  Off           ,OFF
Def_*PAR(_z2)
!
Cmd_/WINDOW,3
Fld_2
Prm_           Window 3
Typ_LIS_OPTIONB
LIS_  On            ,ON
LIS_  Off           ,OFF
Def_*PAR(_z3)
!
Cmd_/WINDOW,4
Fld_2
Prm_           Window 4
Typ_LIS_OPTIONB
LIS_  On            ,ON
LIS_  Off           ,OFF
Def_*PAR(_z4)
!
Cmd_/WINDOW,5
Fld_2
Prm_           Window 5
Typ_LIS_OPTIONB
LIS_  On            ,ON
LIS_  Off           ,OFF
Def_*PAR(_z5)
:E END OF Fnc_Pl_WinOnOff
:! 
:N Fnc_Pl_WinOpts
:S   3467,  1478,  1982
:T Cmd
:C )! Fnc_Pl_WinOpts
:A Window Options
:D Window Options
:H Hlp_UI_windopts
:C )/NOPR
:C )*GET,_z1,common,,d3com,,int,74   ! triad,lab keys
:C )*GET,_z2,common,,d3com,,real,242 ! ....
:C )_z2=nint(_z2*10)/10
:C )*GET,_z3,common,,d3com,,real,243 ! ....
:C )_z3=nint(_z3*10)/10
:C )*IF,_z1,EQ,0,THEN
:C )_z4='OFF'
:C )*ELSEIF,_z1,EQ,1,THEN
:C )*IF,_z2,EQ,0,THEN
:C )_z4='ORIG'
:C )*ELSEIF,_z2,EQ,.1,THEN
:C )*IF,_z3,EQ,.1,THEN
:C )_z4='LBOT'
:C )*ELSEIF,_z3,EQ,.9,THEN
:C )_z4='LTOP'
:C )*ENDIF
:C )*ELSEIF,_z2,EQ,.9,THEN
:C )*IF,_z3,EQ,.1,THEN
:C )_z4='RBOT'
:C )*ELSEIF,_z3,EQ,.9,THEN
:C )_z4='RTOP'
:C )*ENDIF
:C )*ENDIF
:C )*ENDIF
:! get d3com data here since keys are reversed
:C )*GET,_z5, common,,d3com,,int,158  ! plopts,info     --- kplof(3)
:C )*GET,_z9, common,,d3com2,,int,6   ! auto legend key --- kleg_auto
:C )*GET,_z10,common,,d3com2,,int,65  ! plopts,info,3   --- key_dmod
:C )*IF,_z10,EQ,0,THEN
:C )    *IF,_z5,EQ,0,THEN
:C )        _z5=1
:C )    *ELSE
:C )        _z5=0
:C )    *ENDIF
:C )*ELSE
:C )    _z5=3
:C )*ENDIF
:C )*IF,_z9,EQ,1,THEN
:C )_z5=2
:C )*ENDIF
:C )*GET,_z6,common,,d3com,,int,157  ! plopts,fram
:C )*IF,_z6,EQ,0,THEN
:C )_z6=1
:C )*ELSE
:C )_z6=0
:C )*ENDIF
:C )*GET,_z7,common,,d3com,,int,159  ! plopts,titl
:C )*IF,_z7,EQ,0,THEN
:C )_z7=1
:C )*ELSE
:C )_z7=0
:C )*ENDIF
:C )*GET,_z8,common,,d3com,,int,35  ! plopts,minm
:C )*IF,_z8,EQ,0,THEN
:C )_z8=1
:C )*ELSE
:C )_z8=0
:C )*ENDIF
:C )/GO
Cmd_/PLOPTS,INFO
Fld_0
Typ_Lab
Prm_[/PLOPTS]  Window Options
!
Fld_2
Prm_INFO   Display of legend
Typ_LIS_OPTIONB
LIS_Legend OFF      ,0
LIS_Legend ON       ,1
LIS_Auto  Legend    ,2
LIS_Multi Legend    ,3
   Def_*PAR(_z5)
!
Cmd_/PLOPTS,LEG1
Fld_2
Prm_LEG1   Legend header
Typ_LOGI,Off        ,On
   Def_*GET(COMMON,,D3COM2,,INT,23)
!
Cmd_/PLOPTS,LEG2
Fld_2
Prm_LEG2   View portion of legend
Typ_LOGI,Off        ,On
   Def_*GET(COMMON,,D3COM2,,INT,24)
!
Cmd_/PLOPTS,LEG3
Fld_2
Prm_LEG3   Contour legend
Typ_LOGI,Off        ,On
   Def_*GET(COMMON,,D3COM2,,INT,25)
!
Cmd_/PLOPTS,FRAME
Fld_2
Prm_FRAME  Window frame
Typ_LOGI,Off        ,On
   Def_*PAR(_z6)
!
Cmd_/PLOPTS,TITLE
Fld_2
Prm_TITLE  Title
Typ_LOGI,Off        ,On
   Def_*PAR(_z7)
!
Cmd_/PLOPTS,MINM
Fld_2
Prm_MINM   Min-Max symbols
Typ_LOGI,Off        ,On
   Def_*PAR(_z8)
!
Cmd_/PLOPTS,FILE
Fld_2
Prm_FILE   Jobname
Typ_LOGI,Off        ,On
   Def_*GET(COMMON,,D3COM2,,INT,77)
!
Cmd_/PLOPTS,LOGO
Fld_2
Prm_LOGO   ANSYS logo display
Typ_LIS_OPTIONB
LIS_Text in legend  ,0
LIS_Graphical logo  ,1
   Def_*GET(COMMON,,D3COM2,,INT,28)
!
Cmd_/PLOPTS,WINS
Fld_2
Prm_WINS   Automatic window sizing -
Typ_LOGI,Off        ,On
   Def_*GET(COMMON,,D3COM2,,INT,2)
Fld_0
Typ_Lab
Prm_       - when entire legend turned on or off
!
Cmd_/PLOPTS,WP
Fld_2
Prm_WP     WP drawn as part of plot?
Typ_LOGI,No         ,Yes
   Def_*GET(COMMON,,D3COM,,INT,138)
!
Cmd_/PLOPTS,DATE
Fld_2
Prm_DATE   DATE/TIME display
Typ_LIS_OPTIONB
    LIS_No Date or Time,0
    LIS_Date Only      ,1
    LIS_Date and Time  ,2
   Def_*GET(COMMON,,D3COM2,,INT,69)
!
Fld_0
Typ_Sep
!
Cmd_/TRIAD
Fld_2
Prm_[/TRIAD]  Location of triad
Typ_LIS_OPTIONB
LIS_At global origin,ORIG
LIS_At bottom left  ,LBOT
LIS_At bottom right ,RBOT
LIS_At top left     ,LTOP
LIS_At top right    ,RTOP
LIS_Not shown       ,OFF
Def_*PAR(_z4)
Fld_0
!
Typ_Sep
Cmd_!
 Fld_1
 Prm_[/REPLOT]  Replot Upon OK/Apply?
 Typ_LIS_OPTIONB
  LIS_Do not replot   ,!
  LIS_Replot          ,/REPLOT
 Def_/REPLOT
:E END
:! 
:N Fnc_Pl_WinPick1
:S    259,    97,   136
:T Cmd
:C )! Fnc_Pl_WinPick1
:C )/go
:H Hlp_C_/WINDOW
Inp_P
Cmd_/WINDOW
Fld_2
Typ_Def_*PAR(_z(1))
Fld_3
Typ_Def_*PAR(_zc(_z(2)))
!
! Exclude_from_paths
Cmd_)!
Fld_1
Typ_Def_*PAR(_zc(_z(6)))
:E END OF Fnc_Pl_WinPick1
:! 
:N Fnc_Pl_WinPick2
:S    346,   124,   215
:T Cmd
:C )! Fnc_Pl_WinPick2
:C )/go
:D Pick window coordinates
:H Hlp_C_/WINDOW
Inp_P
Cmd_/WINDOW
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
Prm_Pick window coordinates
  Typ_XYZ_SCREEN
  Min_2
  Max_2
  PFM_2
  Rub_2
 Fld_4
  Typ_Def_PICK
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_zc(_z(6)))
:E END
:! 
:N Fnc_Planar_Sym
:S    446,   152,   287
:T Cmd
:C )! Fnc_Planar_sym
:A Planar Symmetry
:D Specify Planar Symmetry
:K #(PREP7*SOLUTION)
:H Hlp_C_RSYMM
Inp_NoApply
Cmd_RSYMM,DEFINE
Fld_0
 Typ_Lab
 Prm_[RSYMM] Define Planar Symmetry 
Fld_2
 Prm_CS  Coordinate System Id
 Typ_LIS_OptionB
 LIS_*READ,CSYS
Fld_3
 Prm_AXIS  Symmetry Plane 
 Typ_LIS_OptionB
 Lis_ XY Plane           , Z
 Lis_ YZ Plane           , X
 Lis_ XZ Plane           , Y
:E END
:! 
:N Fnc_Plt_Dio_2
:S    304,   205,    92
:T Cmd
:A Hidden
:C )! Fnc_Plt_Dio_2
:C )/nopr
:C )*get,_z2,elem,_z1,attr,type
:C )*get,_z3,etyp,_z2,attr,enam
:C )*get,_z4,etyp,_z2,attr,kop1
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z3)
Cal_Fnc_Plt_Dio_3,2,ne,125
Cal_Fnc_Plt_Dio_4,2,eq,125
:E END
:! 
:N Fnc_Plt_Dio_3
:S    281,   261,    13
:T Cmd
:A Hidden (Error Trap)
:C )! Fnc_Plt_Dio_3
:C )*create,ansuitmp
:C )*msg,warn,_z3
:C )The selected element is not CIRCU125. %/&
:C )Current-Voltage plotting is not valid.
:C )*end
:C )/input,ansuitmp
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_Plt_Dio_4
:S    732,   637,    88
:T Cmd
:A Hidden
:C )! Fnc_Plt_Dio_4
:C )/nopr
:C )*get,_z10,elem,_z1,attr,real
:C )*get,_zrf,rcon,_z10,const,4
:C )*get,_zvf,rcon,_z10,const,5
:C )*get,_zrb,rcon,_z10,const,6
:C )_zrf=abs(_zrf)
:C )_zvf=abs(_zvf)
:C )_zrb=abs(_zrb)
:C )*if,_zrf,le,1.e-12,then
:C )_zrf=1.e-12
:C )*endif
:C )*if,_zrb,le,1.e-12,then
:C )_zrb=1.e+12
:C )*endif
:C )*if,_z4,eq,1,then
:C )*get,_zrz,rcon,_z10,const,7
:C )*get,_zvz,rcon,_z10,const,8
:C )_zvz=-abs(_zvz)
:C )_zrz=abs(_zrz)
:C )*if,abs(_zvz),le,1.e-12,then
:C )_z4=0
:C )*elseif,_zrz,le,1.e-12,then
:C )_z4=0
:C )*endif
:C )*endif
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z4)
Cal_Fnc_Plt_Dio_5,2,eq,0
Cal_Fnc_Plt_Dio_6,2,eq,1
:E END
:! 
:N Fnc_Plt_Dio_5
:S    683,   522,   154
:T Cmd
:A Hidden
:D Plotting IV for Simple Diode
:C )! Fnc_Plt_Dio_5
:C )/nopr
:C )_z6=30
:C )_z8=_z6/3
:C )_zs=1.0
:C )*del,_xt
:C )*del,_yt
:C )*dim,_xt,array,_z6+1
:C )*dim,_yt,table,_z6+1
:C )_zv1=-_zvf
:C )_z9=_zvf*_zs/_z8
:C )*if,_zvf,eq,0,then
:C )_zv1=-_z8
:C )_z9=0.5*_zs
:C )*endif
:C )*do,_z7,1,_z6+1
:C )_xt(_z7)=_zv1
:C )*if,_z7,le,_z8+_z8+1,then
:C )_yt(_z7)=_xt(_z7)/_zrb
:C )*else
:C )_yt(_z7)=(_xt(_z7)-_zvf)/_zrf+_zvf/_zrb
:C )*endif
:C )_zv1=_zv1+_z9
:C )*enddo
Inp_P
Cmd_)wpstyl,,,,,,,,0
Cmd_)/grid,1
Cmd_)/axlab,x,Voltage
Cmd_)/axlab,y,Current
Cmd_)/gcolumn,1,Current
Cmd_)/auto
Cmd_)*vplot,_xt(1),_yt(1)
Cmd_)/GO
:E END
:! 
:N Fnc_Plt_Dio_6
:S    791,   630,   154
:T Cmd
:A Hidden
:D Plotting IV for Zener Diode
:C )! Fnc_Plt_Dio_6
:C )/nopr
:C )_z6=40
:C )_z8=_z6/4
:C )_zs=1.0
:C )*del,_xt
:C )*del,_yt
:C )*dim,_xt,array,_z6+1
:C )*dim,_yt,table,_z6+1
:C )_z9=abs(_zvz)*_zs/_z8
:C )_f9=abs(_zvf-_zvz)*0.5*_zs/_z8
:C )_zv1=_zvz+_zvz
:C )*do,_z7,1,_z6+1
:C )_xt(_z7)=_zv1
:C )*if,_z7,le,_z8,then
:C )_yt(_z7)=(_xt(_z7)-_zvz)/_zrz+_zvz/_zrb
:C )_zv1=_zv1+_z9
:C )*else
:C )*if,_z7,le,_z8+_z8+_z8+1,then
:C )_yt(_z7)=_xt(_z7)/_zrb
:C )_zv1=_zv1+_f9
:C )*else
:C )_yt(_z7)=(_xt(_z7)-_zvf)/_zrf+_zvf/_zrb
:C )_zv1=_zv1+_f9
:C )*endif
:C )*endif
:C )*enddo
Inp_P
Cmd_)wpstyl,,,,,,,,0
Cmd_)/grid,1
Cmd_)/axlab,x,Voltage
Cmd_)/axlab,y,Current
Cmd_)/gcolumn,1,Current
Cmd_)/auto
Cmd_)*vplot,_xt(1),_yt(1)
Cmd_)/GO
:E END
:! 
:N Fnc_Plt_Diode
:S    280,   125,   148
:T Cmd_P
:A    Diode VI
:D Select Element for Plot
:C )! Fnc_Plt_Diode
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_ELEM
  Prm_[]  Pick 1 Element - Plot Current-Voltage
  Pfm_2
  Min_1
  Mok_1
Cmd_)/GO
Cal_Fnc_Plt_Dio_2
:E END
:! 
:N Fnc_Plt_EMT
:S    277,   122,   148
:T Cmd_P
:A    EMT CDISP
:D Select Element for Plot
:C )! Fnc_Plt_EMT
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_ELEM
  Prm_[]  Pick 1 Element - Plot Capacitance-Gap
  Pfm_2
  Min_1
  Mok_1
Cmd_)/GO
Cal_Fnc_Plt_EMT_2
:E END
:! 
:N Fnc_Plt_EMT_1
:S    278,   258,    13
:T Cmd
:A Hidden (Error Trap)
:C )! Fnc_Plt_EMT_1
:C )*create,ansuitmp
:C )*msg,warn
:C )The input GAP values must be positive. %/&
:C )Capacitance-gap plotting is not valid.
:C )*end
:C )/input,ansuitmp
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_Plt_EMT_2
:S    434,   237,   190
:T Cmd
:A Hidden
:C )! Fnc_Plt_EMT_2
:C )/nopr
:C )*get,_z2,elem,_z1,attr,type
:C )*get,_z3,etyp,_z2,attr,enam
:C )*get,_z4,etyp,_z2,attr,kop1
:C )*get,_z5,etyp,_z2,attr,kop3
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z3)
Fld_3
 Typ_Def_*PAR(_z4)
Fld_4
 Typ_Def_*PAR(_z5)
Cal_Fnc_Plt_EMT_3,2,ne,126
Cal_Fnc_Plt_EMT_4,3,ne,0
Cal_Fnc_Plt_EMT_5,4,eq,0
Cal_Fnc_Plt_EMT_6,4,eq,1
:E END
:! 
:N Fnc_Plt_EMT_3
:S    281,   261,    13
:T Cmd
:A Hidden (Error Trap)
:C )! Fnc_Plt_EMT_3
:C )*create,ansuitmp
:C )*msg,warn,_z3
:C )The selected element is not TRANS126. %/&
:C )Capacitance-gap plotting is not valid.
:C )*end
:C )/input,ansuitmp
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_Plt_EMT_4
:S    291,   271,    13
:T Cmd
:A Hidden (Error Trap)
:C )! Fnc_Plt_EMT_4
:C )*create,ansuitmp
:C )*msg,warn
:C )The selected TRANS126 element is not a EMT element. %/&
:C )Capacitance-gap plotting is not valid.
:C )*end
:C )/input,ansuitmp
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_Plt_EMT_5
:S    414,   127,   280
:T Cmd
:D Capacitance vs. Gap Plot
:C )/nopr
:C )*del,_z
:C )*dim,_z,,20
:P (ELECMAG)
Cmd_)*SET,_z(1)
Fld_0
Typ_Lab
Prm_Capacitance(Cap) vs. gap(x) function display range
Fld_0
Typ_Lab
Prm_Cap = C0/x + C1 + C2*x + C3*x**2 + C4*x**3
 Fld_2
  Typ_Real
  Prm_Minimum gap value
 Fld_3
  Typ_Real
  Prm_Maximum gap value
Cal_Fnc_Plt_EMT_1,2,le,0
Cal_Fnc_Plt_EMT_7,2,gt,0
:E END
:! 
:N Fnc_Plt_EMT_6
:S    666,   514,   145
:T Cmd
:A Hidden
:C )! Fnc_Plt_EMT_6
:C )/nopr
:C )_z6=20
:C )*del,_zt
:C )*dim,_zt,array,_z6
:C )*get,_z10,elem,_z1,attr,real
:C )_z8=5
:C )*do,_z7,1,_z6
:C )_z8=_z8+2
:C )*get,_zt(_z7),rcon,_z10,const,_z8  
:C )*if,_zt(_z7),le,0.0d0,then
:C )_z6=_z7-1
:C )*exit
:C )*endif
:C )*enddo
:C )*del,_xt
:C )*del,_yt
:C )*dim,_xt,array,_z6
:C )*dim,_yt,table,_z6
:C )_z9=6
:C )*do,_z7,1,_z6
:C )_z9=_z9+2
:C )*get,_yt(_z7),rcon,_z10,const,_z9  
:C )_xt(_z7)=_zt(_z7)
:C )*enddo
Inp_P
Cmd_)wpstyl,,,,,,,,0
Cmd_)/axlab,x,Gap
Cmd_)/axlab,y,Capacitance
Cmd_)/gcolumn,1,Capacitance
Cmd_)/auto
Cmd_)*vplot,_xt(1),_yt(1)
Cmd_)/GO
:E END
:! 
:N Fnc_Plt_EMT_7
:S    716,   572,   137
:T Cmd
:A Hidden
:C )! Fnc_Plt_EMT_7
:C )/nopr
:C )*get,_z10,elem,_z1,attr,real
:C )*get,_z(3),rcon,_z10,const,7 
:C )*get,_z(4),rcon,_z10,const,8 
:C )*get,_z(5),rcon,_z10,const,9 
:C )*get,_z(6),rcon,_z10,const,10 
:C )*get,_z(7),rcon,_z10,const,11
:C )_z6=101
:C )_z(9)=abs(_z(2)-_z(1))/(_z6-1)
:C )*del,_xt
:C )*del,_yt
:C )*dim,_xt,array,_z6
:C )*dim,_yt,table,_z6
:C )_z9=_z(1)
:C )*do,_z7,1,_z6
:C )_z8=_z(3)/_z9+_z(4)+_z(5)*_z9+_z(6)*_z9*_z9
:C )_yt(_z7)=_z8+_z(7)*_z9*_z9*_z9
:C )_xt(_z7)=_z9
:C )_z9=_z9+_z(9)
:C )*enddo
Inp_P
Cmd_)wpstyl,,,,,,,,0
Cmd_)/axlab,x,Gap
Cmd_)/axlab,y,Capacitance
Cmd_)/gcolumn,1,Cap
Cmd_)/auto
Cmd_)*vplot,_xt(1),_yt(1)
Cmd_)/GO
:E END
:! 
:N Fnc_Plt_Spr_2
:S    334,   237,    90
:T Cmd
:A Hidden
:C )! Fnc_Plt_Spr_2
:C )/nopr
:C )*get,_z2,elem,_z1,attr,type
:C )*get,_z3,etyp,_z2,attr,enam
:C )*get,_z4,etyp,_z2,attr,kop1
:C )*get,_z5,etyp,_z2,attr,kop3
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z3)
Cal_Fnc_Plt_Spr_3,2,ne,39
Cal_Fnc_Plt_Spr_6,2,eq,39
:E END
:! 
:N Fnc_Plt_Spr_3
:S    284,   264,    13
:T Cmd
:A Hidden (Error Trap)
:C )! Fnc_Plt_Spr_3
:C )*create,ansuitmp
:C )*msg,warn,_z3
:C )The selected element is not COMBIN39. %/&
:C )Force-displacement plotting is not valid.
:C )*end
:C )/input,ansuitmp
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_Plt_Spr_6
:S    724,   575,   142
:T Cmd
:A Hidden
:C )! Fnc_Plt_Spr_6
:C )/nopr
:C )_z6=20
:C )*del,_zt
:C )*dim,_zt,array,_z6
:C )*get,_z10,elem,_z1,attr,real
:C )_z9=1
:C )_z8=-1
:C )*do,_z7,1,_z6
:C )_z8=_z8+2
:C )*get,_zt(_z7),rcon,_z10,const,_z8
:C )*if,_zt(_z7),eq,0.0d0,then
:C )*if,_z9,eq,0.0d0,then
:C )_z6=_z7-2
:C )*exit
:C )*endif
:C )*endif
:C )_z9=_zt(_z7)
:C )*enddo
:C )*del,_xt
:C )*del,_yt
:C )*dim,_xt,array,_z6
:C )*dim,_yt,table,_z6
:C )_z9=0
:C )*do,_z7,1,_z6
:C )_z9=_z9+2
:C )*get,_yt(_z7),rcon,_z10,const,_z9
:C )_xt(_z7)=_zt(_z7)
:C )*enddo
Inp_P
Cmd_)wpstyl,,,,,,,,0
Cmd_)/axlab,x,Displacement
Cmd_)/axlab,y,Force
Cmd_)/gcolumn,1,Force
Cmd_)/auto
Cmd_)*vplot,_xt(1),_yt(1)
Cmd_)/GO
:E END
:! 
:N Fnc_Plt_Spring
:S    286,   128,   151
:T Cmd_P
:A    Spring FD
:D Select Element for Plot
:C )! Fnc_Plt_Spring
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_ELEM
  Prm_[]  Pick 1 Element - Plot Force-Displacement
  Pfm_2
  Min_1
  Mok_1
Cmd_)/GO
Cal_Fnc_Plt_Spr_2
:E END
:! 
:N Fnc_PreSecModNam
:S    402,   159,   236
:T Command
:C )! Fnc_PreSecModNam
:A    Modify Name
:D Modify Pretension Section Name
:H Hlp_C_SECMODIF
:T Command
Rmk_
 Fld_0
  Typ_Lab
  Prm_[SECMODIF]  Modify Pretension Section Name
Cmd_SECMODIF
 Fld_2
  Prm_     Specify pretension section
  Typ_LIS_OPTIONB
  LIS_*READ,PTSC
 Fld_3
  Typ_Def_NAME
 Fld_4
  Prm_NAME   New section name
  Typ_CHAR,8
:E END
:! 
:N Fnc_PreSecModNor
:S    463,   162,   294
:T Command
:C )! Fnc_PreSecModNor
:A    Modify Normal
:D Modify Pretension Section Normal Direction
:H Hlp_C_SECMODIF
Inp_NoApply
Cmd_)/NOPR
Cmd_)*Cset,1,2
 Fld_0
  Typ_Lab
  Prm_[SECMODIF]  Modify Pretension Section Normal
 Fld_2
  Prm_     Specify pretension section
  Typ_LIS_OPTIONB
  LIS_*READ,PTSC
 Fld_3
  Prm_     Specify coordinate system
  Typ_LIS_OptionB
  LIS_*READ,CSYS
Cmd_)/GO
Cal_Fnc_PreSecMod_2
:E End
:! 
:N Fnc_PreSecMod_2
:S    928,   465,   456
:T Command
:C )! Fnc_PreSecMod_2
:C )/NOPR
:C )*GET,_z1,CPAR,1
:C )*IF,_z1,LT,1,THEN
:C )_z1=1
:C )*ENDIF
:C )*GET,_z2,CPAR,2
:C )*IF,_z2,LT,0,THEN
:C )_z2=0
:C )*ENDIF
:C )_z4=
:C )_z5=
:C )_z6=
:C )_z7='    '
:C )*GET,_z4,SCTN,_z1,4,_z2
:C )*GET,_z5,SCTN,_z1,5,_z2
:C )*GET,_z6,SCTN,_z1,6,_z2
:C )*GET,_z7,SCTN,_z1,7
:C )/GO
:A    Modify Normal
:D Modify Pretension Section Normal Direction
:H Hlp_C_SECMODIF
:T Command
Cmd_SECMODIF
 Fld_0
  Prm_[SECMODIF]
 Fld_0
  Prm_Modify section %(I)_z1% %(I)_z7%  normal
 Fld_0
  Prm_   in coordinate system %(I)_z2%
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_NORM
 Fld_4
  Prm_          X component of normal dir  NX 
  Typ_REAL
  Def_*PAR(_z4)
 Fld_5
  Prm_          Y component of normal dir  NY 
  Typ_REAL
  Def_*PAR(_z5)
 Fld_6
  Prm_          Z component of normal dir  NZ 
  Typ_REAL
  Def_*PAR(_z6)
 Fld_7
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_Pref_Msg1
:S   1035,   137,   891
:T Command
:A Preferences
:C )! Fnc_Pref_Msg1
:C )/NOPR
:C )_z9=1
:C )/GO
:D Preference Message
Inp_NoApply
!
Cmd_)!
 Fld_0
  K_FL(KEY1*KEY2+key8)
  Typ_Lab
  Prm_Disciplines other than structural were chosen in Preferences.
 Fld_0
  K_FL(KEY8+key1+key2)
  Typ_Lab
  Prm_Disciplines other than electric were chosen in Preferences.
 Fld_0
  K_FL(KEY1+key8)
  Typ_Lab
  Prm_This p-Method can only be used with the structural discipline.
 Fld_0
  K_FL(KEY2+key8)
  Typ_Lab
  Prm_LS-DYNA explicit can only be used with the structural discipline.
 Fld_0
  K_FL(KEY8)
  Typ_Lab
  Prm_This p-Method can only be used with the electric discipline.
 Fld_0
  K_FL(KEY1*KEY2+key8)
  Typ_Lab
  Prm_Do you wish to continue with a structural discipline only?
 Fld_0
  K_FL(KEY8+key1+key2)
  Typ_Lab
  Prm_Do you wish to continue with a electric discipline only?
 Fld_2
  Prm_                                blank
  Typ_Logi,No,Yes
  Def_*PAR(_z9)
Cal_Fnc_Preferences,2,EQ,0
Cal_Fnc_Prefer_exec2,2,EQ,1
:E END
:! 
:N Fnc_Pref_Msg2
:S    453,   137,   309
:T Command
:A Preferences
:C )! Fnc_Pref_Msg2
:C )/NOPR
:C )_z9=1
:C )/GO
:D Preference Message
Inp_NoApply
!
Cmd_)/NOPR
Cmd_)*SET,_z8
K_CM(KEY3)
 Fld_0
  Typ_Lab
  Prm_No disciplines were chosen in Preferences.
 Fld_0
  Typ_Lab
  Prm_Do you wish to continue with all disciplines selected?
 Fld_2
  Prm_                                blank
  Typ_Logi,No,Yes
  Def_*PAR(_z9)
Cmd_)/GO
Cal_Fnc_Prefer_exec2
:E END
:! 
:N Fnc_Pref_Success
:S   1215,    93,  1115
:T Command
:A Preferences
:C )! Fnc_Pref_Success
Inp_P
! Exclude_from_paths
Cmd_/COM,
! Exclude_from_paths
Cmd_/COM,Preferences for GUI filtering have not been set, all areas
 K_CM(KEY1)
! Exclude_from_paths
Cmd_/COM,of the GUI based on preferences will be accessible.
 K_CM(KEY1)
! Exclude_from_paths
Cmd_/COM,Preferences for GUI filtering have been set to display:
 K_CM(key1)
! Exclude_from_paths
Cmd_/COM,  Structural
 K_CM(PR_STRUC+lsdyna+pmethod)
! Exclude_from_paths
Cmd_/COM,  Structural with LS-DYNA Explicit
 K_CM(PR_STRUC+(LSDYNA*(LSDYNA+ED)))
! Exclude_from_paths
Cmd_/COM,  Structural with p-Method elements
 K_CM(PR_STRUC+PMETHOD)
! Exclude_from_paths
Cmd_/COM,  Electric with p-Method elements
 K_CM(PR_ELMAG+PMETHOD)
! Exclude_from_paths
Cmd_/COM,  Thermal
 K_CM(PR_THERM)
! Exclude_from_paths
Cmd_/COM,  ANSYS Fluid
 K_CM(PR_FLUID)
! Exclude_from_paths
Cmd_/COM,  FLOTRAN CFD
 K_CM(PR_CFD)
! Exclude_from_paths
Cmd_/COM,  Magnetic-Nodal
 K_CM(MAGNOD)
! Exclude_from_paths
Cmd_/COM,  Magnetic-Edge
 K_CM(MAGEDG)
! Exclude_from_paths
Cmd_/COM,  High Frequency
 K_CM(MAGHFE)
! Exclude_from_paths
Cmd_/COM,  Electric
 K_CM(MAGELC+pmethod)
Cal_REFRESH
:E END
:! 
:N Fnc_Prefer_exec
:S   1153,  1038,   108
:T Command
:A Preferences
:C )! Fnc_Prefer_exec
:C )/NOPR
:C )KEYW,KEY2,0,KEY3,0
:C )_z2=_z(4,5)+_z(4,2)+_z(4,3)+_z(4,4) ! Is an ELECMAG subset turned on
:C )_z4=_z(4,2)+_z(4,3)+_z(4,4)         ! Other than  Electric 
:C )*IF,_z2,GE,1,THEN                   ! Set ELECMAG TRUE if a subset is TRUE
:C )   _z(4,1)=1
:C )*else
:C )   _z(4,1)=0
:C )*endif
:C )_z2=1                         ! Initialize PR_SET to 1
:C )_z3=_z(1)+_z(2)+_z(3)+_z(4,1)+_z(5) ! Number of disciplines that are set
:C )_z5=_z(2)+_z(3)+_z(4,1)+_z(5)       ! Check if only Structural is set
:C )_z4=_z(1)+_z(2)+_z(3)+_z(5)+_z4     ! Check if only Electric is set
:C )*if,_z1,EQ,1,then          ! Check if h-Method
:C )*if,_z3,EQ,0,then
:C )     KEYW,KEY3,1      ! Give a message dialog
:C )*endif
:C )*elseif,_z1,EQ,3,then      ! Displaying LS-DYNA only, if so
:C )*if,_z5,GE,1,then          ! Check to see if disciplines other than Struc
:C )     KEYW,KEY2,1           ! Give a message dialog
:C )*endif
:C )*endif
:C )/GO
Inp_P
Cmd_)!
K_LN(KEY2)
Cal_Fnc_Pref_Msg1
K_LN(KEY3)
Cal_Fnc_Pref_Msg2
K_LN(key2+key3)
Cal_Fnc_Prefer_exec2
:E END
:! 
:N Fnc_Prefer_exec2
:S   3275,  2382,   886
:T Command
:A Preferences
:C )! Fnc_Prefer_exec2
:C )/NOPR
:C )KEYW,KEY1,0
:C )KEYW,KEY8,0
:C )*if,_z1,EQ,1,then          ! Check if h-Method
:C )   _z(6)=0        !LS-DYNA
:C )   _z4='OFF'      !P-METHOD
:C )*if,_z3,EQ,0,then
:C )*if,_z8,EQ,1,then
:C )   _z(1)=1        ! Structural
:C )   _z(2)=1        ! Thermal
:C )   _z(3)=1        ! Fluid
:C )   _z(4)=1        ! ElecMag
:C )   _z(4,2)=1         !   MagNod
:C )   _z(4,3)=1         !   MagEdg
:C )   _z(4,4)=1         !   MagHfe
:C )   _z(4,5)=1         !   MagElc
:C )   _z(5)=1        !FLOTRAN
:C )   _z3=_z(1)+_z(2)+_z(3)+_z(4,1)+_z(5) ! Number of disciplines that are set
:C )*else
:C )  KEYW,KEY1,1
:C )  _z2=0           ! Initialize PR_SET to 0
:C )*endif
:C )*endif
:C )*if,_z3,GE,1,then          ! Set PR_MULTI to > 0 if 2 or more discipline
:C )      _z3=_z3-1            !  are set and to 0 if only 1 is set
:C )*endif
:C )*elseif,_z1,EQ,2,then      ! Check if displaying p-Method Struc
:C )   _z(1)=1        ! Structural
:C )   _z(2)=0        ! Thermal
:C )   _z(3)=0        ! Fluid
:C )   _z(4)=0        ! ElecMag
:C )   _z(4,2)=0         !   MagNod
:C )   _z(4,3)=0         !   MagEdg
:C )   _z(4,4)=0         !   MagHfe
:C )   _z(4,5)=0         !   MagElc
:C )   _z(5)=0        !FLOTRAN
:C )   _z(6)=0        !LS-DYNA
:C )   _z3=0          !PR_MULTI
:C )   _z4='ON'       !P-METHOD
:C )*elseif,_z1,EQ,4,then      ! Check if displaying p-Method Electr
:C )   _z(1)=0        ! Structural
:C )   _z(2)=0        ! Thermal
:C )   _z(3)=0        ! Fluid
:C )   _z(4)=1        ! ElecMag
:C )   _z(4,2)=0         !   MagNod
:C )   _z(4,3)=0         !   MagEdg
:C )   _z(4,4)=0         !   MagHfe
:C )   _z(4,5)=1         !   MagElc
:C )   _z(4,1)=1        ! ElecMag
:C )   _z(5)=0        !FLOTRAN
:C )   _z(6)=0        !LS-DYNA
:C )   _z3=0          !PR_MULTI
:C )   _z4='ON'       !P-METHOD
:C )*elseif,_z1,EQ,3,then       ! Displaying LS-DYNA only, if so
:C )   _z(1)=1        ! Structural
:C )   _z(2)=0        ! Thermal
:C )   _z(3)=0        ! Fluid
:C )   _z(4)=0        ! ElecMag
:C )   _z(4,2)=0         !   MagNod
:C )   _z(4,3)=0         !   MagEdg
:C )   _z(4,4)=0         !   MagHfe
:C )   _z(4,5)=0         !   MagElc
:C )   _z(5)=0        !FLOTRAN
:C )   _z(6)=1        !LS-DYNA
:C )   _z3=0          !PR_MULTI
:C )   _z4='OFF'      !P-METHOD
:C )*endif
:C )/GO
Inp_P
!
! Exclude_from_paths
Cmd_/NOPR
 K_CM(debug)
Cmd_KEYW,PR_SET
  Fld_2
  Typ_Def_*PAR(_z2)
Cmd_KEYW,PR_STRUC
P_CM(LINPLUS)
  Fld_2
  Typ_Def_*PAR(_z(1))
Cmd_KEYW,PR_THERM
P_CM(THERMAL)
  Fld_2
  Typ_Def_*PAR(_z(2))
Cmd_KEYW,PR_FLUID
P_CM(FULL_ANS)
  Fld_2
  Typ_Def_*PAR(_z(3))
Cmd_KEYW,PR_ELMAG
P_CM(ELECMAG)
  Fld_2
  Typ_Def_*PAR(_z(4,1))
Cmd_KEYW,MAGNOD
P_CM(ELECMAG)
  Fld_2
  Typ_Def_*PAR(_z(4,2))
Cmd_KEYW,MAGEDG
P_CM(ELECMAG)
  Fld_2
  Typ_Def_*PAR(_z(4,3))
Cmd_KEYW,MAGHFE
P_CM(ELECMAG)
  Fld_2
  Typ_Def_*PAR(_z(4,4))
Cmd_KEYW,MAGELC
P_CM(ELECMAG)
  Fld_2
  Typ_Def_*PAR(_z(4,5))
!
Cmd_KEYW,PR_MULTI
  Fld_2
  Typ_Def_*PAR(_z3)
!
Cmd_KEYW,PR_CFD
P_CM(FLOTRAN)
  Fld_2
  Typ_Def_*PAR(_z(5))
!
Cmd_KEYW,LSDYNA
P_CM(LSDYNA*ED)
  Fld_2
  Typ_Def_*PAR(_z(6))
!
Cmd_KEYW,PR_DYNA
P_CM(LSDYNA*ED)
  Fld_2
  Typ_Def_*PAR(_z(6))
!
! Exclude_from_paths
Cmd_/GO
Cal_Fnc_Pref_Success
:E End
:! 
:N Fnc_Preferences
:S   2179,   366,  1806
:T Command
:C )! Fnc_Preferences
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,9,5
:C )*GET,_z2,ACTIVE,,KEYWORD,,LSDYNA
:C )*GET,_z3,ACTIVE,,KEYWORD,,PR_DYNA
:C )*IF,_z2,EQ,1,THEN
:C )   _z1=3
:C )*ELSEIF,_z3,EQ,1
:C )   _z1=3
:C )*ELSE
:C )   _z1=1
:C )*ENDIF
:C )/GO
:A Preferences
:H Hlp_C_KEYW
:D Preferences for GUI Filtering
Inp_NoApply
Cmd_)/NOPR
Fld_0
 Typ_Lab
 Prm_[KEYW] Preferences for GUI Filtering
Fld_0
  Typ_Lab
  Prm_Individual discipline(s) to show in the GUI
Cmd_)*SET,_z(1)
P_CM(LINPLUS*LSDYNA)
 Fld_2
  Prm_                                blank
  Typ_Logi,Structural,Structural
  Def_*GET(ACTIVE,,KEYWORD,,PR_STRUC)
!
Cmd_)*set,_z(2)
P_CM(THERMAL)
Fld_2
  Prm_                                blank
  Typ_LOGI,Thermal,Thermal
  Def_*GET(ACTIVE,,KEYWORD,,PR_THERM)
!
Cmd_)*set,_z(3)
P_CM(FULL_ANS)
Fld_2
  Prm_                                blank
  Typ_LOGI,ANSYS Fluid,ANSYS Fluid
  Def_*GET(ACTIVE,,KEYWORD,,PR_FLUID)
!
Cmd_)*set,_z(5)
P_CM(FLOTRAN)
Fld_2
  Prm_                                blank
  Typ_LOGI,FLOTRAN CFD,FLOTRAN CFD
  Def_*GET(ACTIVE,,KEYWORD,,PR_CFD)
!
Cmd_)*set,_z(4,2)
P_CM(ELECMAG)
 Fld_0
  Typ_Lab
  Prm_                 Electromagnetic:
!
 Fld_2
  Prm_                                blank
  Typ_LOGI,Magnetic-Nodal,Magnetic-Nodal
  Def_*GET(ACTIVE,,KEYWORD,,MAGNOD)
!
Cmd_)*set,_z(4,3)
P_CM(ELECMAG+E3)
 Fld_2
  Prm_                                blank
  Typ_LOGI,Magnetic-Edge,Magnetic-Edge
  Def_*GET(ACTIVE,,KEYWORD,,MAGEDG)
!
Cmd_)*set,_z(4,4)
P_CM(ELECMAG+E3)
 Fld_2
  Prm_                                blank
  Typ_LOGI,High Frequency,High Frequency
  Def_*GET(ACTIVE,,KEYWORD,,MAGHFE)
!
Cmd_)*set,_z(4,5)
P_CM(ELECMAG)
 Fld_2
  Prm_                                blank
  Typ_LOGI,Electric,Electric
  Def_*GET(ACTIVE,,KEYWORD,,MAGELC)
!
Cmd_)!
Fld_0
 Typ_Lab
 Prm_Note: If no individual disciplines are selected they will all show.
!
Fld_0
 Typ_Sep
!
Cmd_)*SET,_z1
P_CM(LINPLUS*LSDYNA*ELECMAG*ED)
 Fld_2
  Prm_Discipline options
   Typ_Lis_RadioB
   P_LN(LINPLUS*ELECMAG)
   Lis_h-Method,1
   P_LN(LSDYNA*ED)
   Lis_LS-DYNA Explicit,3
   Def_*PAR(_z1)
Cmd_)/GO
Cal_Fnc_Prefer_exec
:E END
:! 
:N Fnc_Preintegrate
:S    318,   116,   195
:T Cmd
:C )! Fnc_Preintegrate
:A    Pre-integrated
:K #(PREP7*SOLUTION)
Inp_P
! Cust_Cmd_SECTYPE
! Cust_Cmd_SSPA
! Cust_Cmd_SSPB
! Cust_Cmd_SSPD
! Cust_Cmd_SSPE
! Cust_Cmd_SSMT
! Cust_Cmd_SSBT
! Cust_Cmd_SSPM
Cmd_)~eui,'::euidl::element::shell::preintegrate::create'
:E End
:! 
:N Fnc_QDVAL
:S    522,   200,   315
:T Command
:C )! Fnc_QDVAL
:A Quadspectral
:D Table of Quadspectral Values vs Frequencies
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:P (FULL_ANS)
:H Hlp_UI_qdval
Inp_NoApply
Cmd_)/NOPR
 Fld_0
  Typ_Lab
  Prm_[QDVAL] [PSDFRQ]  Table of Quadspectral Values vs Frequencies
Cmd_)*CSET,101,102
 Fld_0
  Typ_Lab
  Prm_Identify the two PSD tables being correlated
 Fld_2
  Prm_    1st PSD table number
  Typ_INT
 Fld_3
  Prm_    2nd PSD table number
  Typ_INT
Cmd_)/GO
Cal_Fnc_QDVAL1
:E END
:! 
:N Fnc_QDVAL1
:S   3772,   264,  3501
:T Command
:C )! Fnc_QDVAL1
:A Quadspectral
:C )/NOPR
:C )*get,_z1,cpar,101
:C )*get,_z2,cpar,102
:C )/GO
:D Table of Quadspectral Values vs Frequencies
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:P (FULL_ANS)
:H Hlp_UI_qdval
Cmd_)/NOPR
Cmd_)*CSET,1,4
 Fld_0
  Typ_Lab
  Prm_[QDVAL] [PSDFRQ]  Table of Quadspectral Values vs Frequencies
 Fld_0
  Typ_Lab
  Prm_                  for PSD Table Numbers %(I)_z1% and %(I)_z2%
 Fld_0
  Typ_Lab
  Prm_    Enter up to 50 values of       Frequency    Quadspectrum
 Fld_2
  Prm_                   FREQ1, QD1
  Typ_real2
 Fld_4
  Prm_                   FREQ2, QD2
  Typ_real2
Cmd_)*CSET,5,8
 Fld_2
  Prm_                   FREQ3, QD3
  Typ_real2
 Fld_4
  Prm_                   FREQ4, QD4
  Typ_real2
Cmd_)*CSET,9,12
 Fld_2
  Prm_                   FREQ5, QD5
  Typ_real2
 Fld_4
  Prm_                   FREQ6, QD6
  Typ_real2
Cmd_)*CSET,13,16
 Fld_2
  Prm_                   FREQ7, QD7
  Typ_real2
 Fld_4
  Prm_                   FREQ8, QD8
  Typ_real2
Cmd_)*CSET,17,20
 Fld_2
  Prm_                   FREQ9, QD9
  Typ_real2
 Fld_4
  Prm_                  FREQ10, QD10
  Typ_real2
Cmd_)*CSET,21,24
 Fld_2
  Prm_                  FREQ11, QD11
  Typ_real2
 Fld_4
  Prm_                  FREQ12, QD12
  Typ_real2
Cmd_)*CSET,25,28
 Fld_2
  Prm_                  FREQ13, QD13
  Typ_real2
 Fld_4
  Prm_                  FREQ14, QD14
  Typ_real2
Cmd_)*CSET,29,32
 Fld_2
  Prm_                  FREQ15, QD15
  Typ_real2
 Fld_4
  Prm_                  FREQ16, QD16
  Typ_real2
Cmd_)*CSET,33,36
 Fld_2
  Prm_                  FREQ17, QD17
  Typ_real2
 Fld_4
  Prm_                  FREQ18, QD18
  Typ_real2
Cmd_)*CSET,37,40
 Fld_2
  Prm_                  FREQ19, QD19
  Typ_real2
 Fld_4
  Prm_                  FREQ20, QD20
  Typ_real2
Cmd_)*CSET,41,44
 Fld_2
  Prm_                  FREQ21, QD21
  Typ_real2
 Fld_4
  Prm_                  FREQ22, QD22
  Typ_real2
Cmd_)*CSET,45,48
 Fld_2
  Prm_                  FREQ23, QD23
  Typ_real2
 Fld_4
  Prm_                  FREQ24, QD24
  Typ_real2
Cmd_)*CSET,49,52
 Fld_2
  Prm_                  FREQ25, QD25
  Typ_real2
 Fld_4
  Prm_                  FREQ26, QD26
  Typ_real2
Cmd_)*CSET,53,56
 Fld_2
  Prm_                  FREQ27, QD27
  Typ_real2
 Fld_4
  Prm_                  FREQ28, QD28
  Typ_real2
Cmd_)*CSET,57,60
 Fld_2
  Prm_                  FREQ29, QD29
  Typ_real2
 Fld_4
  Prm_                  FREQ30, QD30
  Typ_real2
Cmd_)*CSET,61,64
 Fld_2
  Prm_                  FREQ31, QD31
  Typ_real2
 Fld_4
  Prm_                  FREQ32, QD32
  Typ_real2
Cmd_)*CSET,65,68
 Fld_2
  Prm_                  FREQ33, QD33
  Typ_real2
 Fld_4
  Prm_                  FREQ34, QD34
  Typ_real2
Cmd_)*CSET,69,72
 Fld_2
  Prm_                  FREQ35, QD35
  Typ_real2
 Fld_4
  Prm_                  FREQ36, QD36
  Typ_real2
Cmd_)*CSET,73,76
 Fld_2
  Prm_                  FREQ37, QD37
  Typ_real2
 Fld_4
  Prm_                  FREQ38, QD38
  Typ_real2
Cmd_)*CSET,77,80
 Fld_2
  Prm_                  FREQ39, QD39
  Typ_real2
 Fld_4
  Prm_                  FREQ40, QD40
  Typ_real2
Cmd_)*CSET,81,84
 Fld_2
  Prm_                  FREQ41, QD41
  Typ_real2
 Fld_4
  Prm_                  FREQ42, QD42
  Typ_real2
Cmd_)*CSET,85,88
 Fld_2
  Prm_                  FREQ43, QD43
  Typ_real2
 Fld_4
  Prm_                  FREQ44, QD44
  Typ_real2
Cmd_)*CSET,89,92
 Fld_2
  Prm_                  FREQ45, QD45
  Typ_real2
 Fld_4
  Prm_                  FREQ46, QD46
  Typ_real2
Cmd_)*CSET,93,96
 Fld_2
  Prm_                  FREQ47, QD47
  Typ_real2
 Fld_4
  Prm_                  FREQ48, QD48
  Typ_real2
Cmd_)*CSET,97,100
 Fld_2
  Prm_                  FREQ49, QD49
  Typ_real2
 Fld_4
  Prm_                  FREQ50, QD50
  Typ_real2
Cmd_)/GO
Cal_Fnc_QDVAL2
:E END
:! 
:N Fnc_QDVAL2
:S    217,   182,    28
:T Command
:P (FULL_ANS)
:C )! Fnc_QDVAL2
:C )/nopr
:C )_z1=0
:C )*do,_z1,1,99,2
:C )*get,_z9,cpar,_z1
:C )*if,_z9,eq,0,exit
:C )*enddo
:C )/go
Inp_P
Cmd_)!
Cal_Fnc_QDVAL3
:E END
:! 
:N Fnc_QDVAL3
:S   3539,  1385,  2147
:T Command
:P (FULL_ANS)
:C )! Fnc_QDVAL3
:C )/nopr
:C )*if,_z1,le,11,then
:C ) keyw,key1,1,key2,0,key3,0,key4,0
:C ) keyw,key5,0,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,21,then
:C ) keyw,key1,1,key2,1,key3,0,key4,0
:C ) keyw,key5,0,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,31,then
:C ) keyw,key1,1,key2,1,key3,1,key4,0
:C ) keyw,key5,0,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,41,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,0,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,51,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,61,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,71,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,1,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,81,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,1,key8,1
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,91,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,1,key8,1
:C ) keyw,key9,1,key10,0
:C )*elseif,_z1,le,99,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,1,key8,1
:C ) keyw,key9,1,key10,1
:C )*endif
:C )/go
Inp_P
Cmd_PSDFRQ
K_CM(KEY1)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(1)
 Fld_5
  Typ_Def_*CPAR(3)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(7)
 Fld_8
  Typ_Def_*CPAR(9)
Cmd_PSDFRQ
K_CM(KEY2)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(11)
 Fld_5
  Typ_Def_*CPAR(13)
 Fld_6
  Typ_Def_*CPAR(15)
 Fld_7
  Typ_Def_*CPAR(17)
 Fld_8
  Typ_Def_*CPAR(19)
Cmd_PSDFRQ
K_CM(KEY3)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(21)
 Fld_5
  Typ_Def_*CPAR(23)
 Fld_6
  Typ_Def_*CPAR(25)
 Fld_7
  Typ_Def_*CPAR(27)
 Fld_8
  Typ_Def_*CPAR(29)
Cmd_PSDFRQ
K_CM(KEY4)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(31)
 Fld_5
  Typ_Def_*CPAR(33)
 Fld_6
  Typ_Def_*CPAR(35)
 Fld_7
  Typ_Def_*CPAR(37)
 Fld_8
  Typ_Def_*CPAR(39)
Cmd_PSDFRQ
K_CM(KEY5)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(41)
 Fld_5
  Typ_Def_*CPAR(43)
 Fld_6
  Typ_Def_*CPAR(45)
 Fld_7
  Typ_Def_*CPAR(47)
 Fld_8
  Typ_Def_*CPAR(49)
Cmd_PSDFRQ
K_CM(KEY6)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(51)
 Fld_5
  Typ_Def_*CPAR(53)
 Fld_6
  Typ_Def_*CPAR(55)
 Fld_7
  Typ_Def_*CPAR(57)
 Fld_8
  Typ_Def_*CPAR(59)
Cmd_PSDFRQ
K_CM(KEY7)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(61)
 Fld_5
  Typ_Def_*CPAR(63)
 Fld_6
  Typ_Def_*CPAR(65)
 Fld_7
  Typ_Def_*CPAR(67)
 Fld_8
  Typ_Def_*CPAR(69)
Cmd_PSDFRQ
K_CM(KEY8)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(71)
 Fld_5
  Typ_Def_*CPAR(73)
 Fld_6
  Typ_Def_*CPAR(75)
 Fld_7
  Typ_Def_*CPAR(77)
 Fld_8
  Typ_Def_*CPAR(79)
Cmd_PSDFRQ
K_CM(KEY9)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(81)
 Fld_5
  Typ_Def_*CPAR(83)
 Fld_6
  Typ_Def_*CPAR(85)
 Fld_7
  Typ_Def_*CPAR(87)
 Fld_8
  Typ_Def_*CPAR(89)
Cmd_PSDFRQ
K_CM(KEY10)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(91)
 Fld_5
  Typ_Def_*CPAR(93)
 Fld_6
  Typ_Def_*CPAR(95)
 Fld_7
  Typ_Def_*CPAR(97)
 Fld_8
  Typ_Def_*CPAR(99)
Cal_Fnc_QDVAL4
:E END
:! 
:N Fnc_QDVAL4
:S   2213,    80,  2126
:T Command
:P (FULL_ANS)
:C )! Fnc_QDVAL4
Inp_P
Cmd_QDVAL
K_CM(KEY1)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(2)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(6)
 Fld_7
  Typ_Def_*CPAR(8)
 Fld_8
  Typ_Def_*CPAR(10)
Cmd_QDVAL
K_CM(KEY2)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(12)
 Fld_5
  Typ_Def_*CPAR(14)
 Fld_6
  Typ_Def_*CPAR(16)
 Fld_7
  Typ_Def_*CPAR(18)
 Fld_8
  Typ_Def_*CPAR(20)
Cmd_QDVAL
K_CM(KEY3)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(22)
 Fld_5
  Typ_Def_*CPAR(24)
 Fld_6
  Typ_Def_*CPAR(26)
 Fld_7
  Typ_Def_*CPAR(28)
 Fld_8
  Typ_Def_*CPAR(30)
Cmd_QDVAL
K_CM(KEY4)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(32)
 Fld_5
  Typ_Def_*CPAR(34)
 Fld_6
  Typ_Def_*CPAR(36)
 Fld_7
  Typ_Def_*CPAR(38)
 Fld_8
  Typ_Def_*CPAR(40)
Cmd_QDVAL
K_CM(KEY5)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(42)
 Fld_5
  Typ_Def_*CPAR(44)
 Fld_6
  Typ_Def_*CPAR(46)
 Fld_7
  Typ_Def_*CPAR(48)
 Fld_8
  Typ_Def_*CPAR(50)
Cmd_QDVAL
  K_FL(KEY6)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(52)
 Fld_5
  Typ_Def_*CPAR(54)
 Fld_6
  Typ_Def_*CPAR(56)
 Fld_7
  Typ_Def_*CPAR(58)
 Fld_8
  Typ_Def_*CPAR(60)
Cmd_QDVAL
K_CM(KEY7)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(62)
 Fld_5
  Typ_Def_*CPAR(64)
 Fld_6
  Typ_Def_*CPAR(66)
 Fld_7
  Typ_Def_*CPAR(68)
 Fld_8
  Typ_Def_*CPAR(70)
Cmd_QDVAL
K_CM(KEY8)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(72)
 Fld_5
  Typ_Def_*CPAR(74)
 Fld_6
  Typ_Def_*CPAR(76)
 Fld_7
  Typ_Def_*CPAR(78)
 Fld_8
  Typ_Def_*CPAR(80)
Cmd_QDVAL
K_CM(KEY9)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(82)
 Fld_5
  Typ_Def_*CPAR(84)
 Fld_6
  Typ_Def_*CPAR(86)
 Fld_7
  Typ_Def_*CPAR(88)
 Fld_8
  Typ_Def_*CPAR(90)
Cmd_QDVAL
K_CM(KEY10)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(92)
 Fld_5
  Typ_Def_*CPAR(94)
 Fld_6
  Typ_Def_*CPAR(96)
 Fld_7
  Typ_Def_*CPAR(98)
 Fld_8
  Typ_Def_*CPAR(100)
:E END
:! 
:N Fnc_QESOL
:S   2718,   139,  2559
:T Cmd
:A Element Solu
:D Query Element Solution Data
:H Hlp_UI_QESOL
:K (lsdyna)
:K #(POST1+RESULTS)
Cmd_)*CSET,1,2
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_Query Element Solution Data
 Fld_2
  K_FL(STRUCTRL+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_Idx
P_LN(LINPLUS*ELECMAG)
   Idx_Energy          ,Strain enrg SENE,SENE,
P_LN(LINPLUS)
   Idx_Energy          ,Kinetc enrg KENE,KENE,
P_LN(FULL_ANS)
   Idx_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
   Idx_Energy          ,PlasStateVar PSV,NL,PSV
!  
P_LN(LINPLUS)
K_LN(powrgrph)
   Idx_Error estimation,StruErrEnrg SERR,SERR,
P_LN(LINPLUS)
K_LN(powrgrph)
   Idx_Error estimation,Strs deviat SDSG,SDSG,
!
Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  P_FL(THERMAL)
  Prm_Item,Comp   Item to be contoured
  Typ_Idx
   Idx_Energy          ,Therm enrg  TENE,TENE,
!  
   Idx_Error estimation,TherErrEnrg TERR,TERR,
   Idx_Error estimation,Grad deviat TDSG,TDSG,
!  
Fld_2
  K_FL((ELECTRIC*MAGNETIC)+lsdyna+structrl+thermal+fluid)
  Prm_Item,Comp   Item to be contoured
  Typ_Idx
P_LN(LINPLUS*ELECMAG)
   Idx_Energy          ,Mag energy  SENE,SENE,
P_LN(THERMAL*ELECMAG)
   Idx_Energy          ,Joule heat JHEAT,JHEAT,
P_LN(LINPLUS*ELECMAG)
   Idx_Energy          ,Elec energy SENE,SENE,
Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_Idx
P_LN(LINPLUS*ELECMAG)
   Idx_Energy          ,Flow energy SENE,SENE,
!  
Fld_2
  K_FL(CFD+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_Idx
P_LN(LINPLUS*ELECMAG)
   Idx_Energy          ,Flow energy SENE,SENE,
!  
Fld_2
  K_FL(MULTIFLD+(LSDYNA*STRUCTRL*THERMAL*FLUID))
  Prm_Item,Comp   Item to be contoured
  Typ_Idx
P_LN(LINPLUS*ELECMAG)
   Idx_Energy          ,Strain enrg SENE,SENE,
P_LN(LINPLUS)
   Idx_Energy          ,Kinetc enrg KENE,KENE,
P_LN(FULL_ANS)
   Idx_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Energy          ,PlasStateVar PSV,NL,PSV
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Energy          ,Therm enrg  TENE,TENE,
P_LN(LINPLUS*ELECMAG)
K_LN(lsdyna)
   Idx_Energy          ,Mag energy  SENE,SENE,
P_LN(THERMAL*ELECMAG)
K_LN(lsdyna)
   Idx_Energy          ,Joule heat JHEAT,JHEAT,
P_LN(LINPLUS*ELECMAG)
K_LN(lsdyna)
   Idx_Energy          ,Elec energy SENE,SENE,
P_LN(LINPLUS*ELECMAG)
K_LN(lsdyna)
   Idx_Energy          ,Flow energy SENE,SENE,
!  
P_LN(LINPLUS)
K_LN(powrgrph)
   Idx_Error estimation,StruErrEnrg SERR,SERR,
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Error estimation,TherErrEnrg TERR,TERR,
P_LN(LINPLUS)
K_LN(powrgrph)
   Idx_Error estimation,Strs deviat SDSG,SDSG,
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Error estimation,Grad deviat TDSG,TDSG,
!
Cal_Fnc_QESOL_2
:E End of Fnc_QESOL
:! 
:N Fnc_QESOL_2
:S    238,   106,   125
:T Cmd
:A Hidden
:D Query Element Solution Results
:H Hlp_UI_QUERY
Inp_P
Cmd_)!
 Fld_2
  Prm_Pick points to view subgrid results
  Typ_RESU
   IT1_ELEM
   IT2_*CPAR(1)
   IT3_*CPAR(2)
  Cnt_s
:E End
:! 
:N Fnc_QGSOL
:S  23333,   141, 23172
:T Cmd
:A Subgrid Solu
:D Query Subgrid Solution Data
:H Hlp_UI_QSSOL
:K (POWRGRPH)
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_)*CSET,1,2
 Fld_0
  Typ_Lab
  Prm_Query Subgrid Solution Data
 Fld_2
  K_FL(STRUCTRL+multifld+lsdyna)
  Prm_Item,Comp   Item to be viewed
  Typ_Idx
P_LN(LINPLUS)
   Idx_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS)
   Idx_DOF solution    ,              UY,U,Y
P_LN(LINPLUS)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS)
   Idx_DOF solution    ,            USUM,U,SUM
P_LN(LINPLUS)
   Idx_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS)
   Idx_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS)
   Idx_DOF solution    ,            ROTZ,ROT,Z
P_LN(LINPLUS)
   Idx_DOF solution    ,          ROTSUM,ROT,SUM
!
P_LN(LINPLUS)
   Idx_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS)
   Idx_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS)
   Idx_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS)
   Idx_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS)
   Idx_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS)
   Idx_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS)
   Idx_Stress          ,1st principal S1,S,1
P_LN(LINPLUS)
   Idx_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS)
   Idx_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS)
   Idx_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS)
   Idx_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS)
   Idx_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS)
   Idx_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
   Idx_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS)
   Idx_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS)
   Idx_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS)
   Idx_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS)
   Idx_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS)
   Idx_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS)
   Idx_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS)
   Idx_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS)
   Idx_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS)
   Idx_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS)
   Idx_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS)
   Idx_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(FULL_ANS)
   Idx_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
   Idx_Energy          ,PlasStateVar PSV,NL,PSV
!
P_LN(LINPLUS)
   Idx_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS)
   Idx_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS)
   Idx_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS)
   Idx_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS)
   Idx_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS)
   Idx_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS)
   Idx_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS)
   Idx_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS)
   Idx_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS)
   Idx_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS)
   Idx_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
   Idx_Strain-thermal  ,Applied ele temp,BFE,TEMP
P_LN(LINPLUS)
   Idx_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
   Idx_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
   Idx_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
   Idx_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
   Idx_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
   Idx_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
   Idx_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
   Idx_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
   Idx_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
   Idx_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
   Idx_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
   Idx_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
   Idx_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
   Idx_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
   Idx_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
   Idx_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
   Idx_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
   Idx_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
   Idx_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
   Idx_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
   Idx_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
   Idx_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
   Idx_Strain-other    ,Swelling    EPSW,EPSW,
!
P_LN(FULL_ANS)
   Idx_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
   Idx_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
   Idx_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
   Idx_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
   Idx_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
   Idx_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
   Idx_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
   Idx_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
   Idx_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
   Idx_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
 Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Item,Comp   Item to be viewed
  Typ_Idx
P_LN(THERMAL*FLOTRAN)
   Idx_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  Prm_Item,Comp   Item to be viewed
  Typ_Idx
P_LN(ELECMAG)
   Idx_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
   Idx_DOF solution    ,MagVectPoten  AX,A,X
P_LN(ELECMAG)
   Idx_DOF solution    ,              AY,A,Y
P_LN(ELECMAG)
   Idx_DOF solution    ,              AZ,A,Z
P_LN(ELECMAG)
   Idx_DOF solution    ,            ASUM,A,SUM
P_LN(THERMAL*ELECMAG)
   Idx_DOF solution    ,Elec poten  VOLT,VOLT,
!
P_LN(ELECMAG)
   Idx_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
   Idx_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
   Idx_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
   Idx_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
   Idx_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
   Idx_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
   Idx_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
   Idx_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
   Idx_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
   Idx_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
   Idx_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
   Idx_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
   Idx_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
   Idx_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
   Idx_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
   Idx_Flux & gradient ,           EFSUM,EF,SUM
!
P_LN(ELECMAG)
   Idx_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
   Idx_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
   Idx_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
   Idx_Nodal force data,         FMAGSUM,FMAG,SUM
!
 Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item,Comp   Item to be viewed
  Typ_Idx
P_LN(FLOTRAN)
   Idx_DOF solution    ,Displacement  UX,U,X
P_LN(FLOTRAN)
   Idx_DOF solution    ,              UY,U,Y
P_LN(FLOTRAN)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(FLOTRAN)
   Idx_DOF solution    ,            USUM,U,SUM
P_LN(FLOTRAN)
   Idx_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
   Idx_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
   Idx_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN)
   Idx_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN*FULL_ANS)
   Idx_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
   Idx_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(FULL_ANS)
   Idx_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
   Idx_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
   Idx_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
   Idx_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
!
 Fld_2
  K_FL(CFD+lsdyna)
  Prm_Item,Comp   Item to be viewed
  Typ_Idx
P_LN(FLOTRAN)
   Idx_DOF solution    ,Displacement  UX,U,X
P_LN(FLOTRAN)
   Idx_DOF solution    ,              UY,U,Y
P_LN(FLOTRAN)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(FLOTRAN)
   Idx_DOF solution    ,            USUM,U,SUM
P_LN(FLOTRAN)
   Idx_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
   Idx_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
   Idx_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN)
   Idx_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN)
   Idx_DOF solution    ,Pressure    PRES,PRES,
P_LN(FLOTRAN)
   Idx_DOF solution    ,Turb K.E.   ENKE,ENKE,
P_LN(FLOTRAN)
   Idx_DOF solution    ,Enrg dissip ENDS,ENDS,
P_LN(THERMAL*FLOTRAN)
   Idx_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(FULL_ANS)
   Idx_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
   Idx_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
   Idx_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
   Idx_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
!
P_LN(FLOTRAN)
   Idx_Other quantities,Density     DENS,DENS,
P_LN(FLOTRAN)
   Idx_Other quantities,Viscosity   VISC,VISC,
P_LN(FLOTRAN)
   Idx_Other quantities,Conductivit COND,COND,
P_LN(FLOTRAN)
   Idx_Other quantities,Eff Viscos  EVIS,EVIS,
P_LN(FLOTRAN)
   Idx_Other quantities,Eff Conduct ECON,ECON,
P_LN(FLOTRAN)
   Idx_Other quantities,Total temp  TTOT,TTOT,
P_LN(FLOTRAN)
   Idx_Other quantities,Strm func2D STRM,STRM,
P_LN(FLOTRAN)
   Idx_Other quantities,PressurCoef PCOE,PCOE,
P_LN(FLOTRAN)
   Idx_Other quantities,Mach number MACH,MACH,
P_LN(FLOTRAN)
   Idx_Other quantities,Total pres  PTOT,PTOT,
P_LN(FLOTRAN)
   Idx_Other quantities,Heat flux   HFLU,HFLU,
P_LN(FLOTRAN)
   Idx_Other quantities,Film coeff  HFLM,HFLM,
P_LN(FLOTRAN)
   Idx_Other quantities,Turb law Y+ YPLU,YPLU,
P_LN(FLOTRAN)
   Idx_Other quantities,Wall shear  TAUW,TAUW,
P_LN(FLOTRAN)
   Idx_Other quantities,Rad flux    RDFL,RDFL,
!
 Fld_2
  K_FL(MULTIFLD+(LSDYNA*STRUCTRL*THERMAL*FLUID))
  Prm_Item,Comp   Item to be viewed
  Typ_Idx
P_LN(LINPLUS*LSDYNA)
   Idx_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS*LSDYNA)
   Idx_DOF solution    ,              UY,U,Y
P_LN(LINPLUS*LSDYNA)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS*LSDYNA)
   Idx_DOF solution    ,            USUM,U,SUM
P_LN(LINPLUS*LSDYNA)
   Idx_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS*LSDYNA)
   Idx_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS*LSDYNA)
   Idx_DOF solution    ,            ROTZ,ROT,Z
P_LN(LINPLUS*LSDYNA)
   Idx_DOF solution    ,          ROTSUM,ROT,SUM
P_LN(THERMAL*FLOTRAN)
K_LN(lsdyna)
   Idx_DOF solution    ,Temperature TEMP,TEMP,
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_DOF solution    ,MagVectPoten  AX,A,X
K_LN(LSDYNA)
   Idx_DOF solution    ,Acceleration  AX,A,X
P_LN(ELECMAG*LSDYNA)
   Idx_DOF solution    ,              AY,A,Y
P_LN(ELECMAG*LSDYNA)
   Idx_DOF solution    ,              AZ,A,Z
P_LN(ELECMAG*LSDYNA)
   Idx_DOF solution    ,            ASUM,A,SUM
P_LN(THERMAL*ELECMAG)
K_LN(lsdyna)
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,Displacement  UX,U,X
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,              UY,U,Y
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,            USUM,U,SUM
K_LN(lsdyna)
   Idx_DOF solution    ,Elec poten  VOLT,VOLT,
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN*FULL_ANS*LSDYNA)
   Idx_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
K_LN(lsdyna)
   Idx_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,1st principal S1,S,1
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS*LSDYNA)
   Idx_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS*LSDYNA)
   Idx_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,           EFSUM,EF,SUM
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
!
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Nodal force data,         FMAGSUM,FMAG,SUM
!
P_LN(FULL_ANS*LSDYNA)
   Idx_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS*LSDYNA)
   Idx_Energy          ,PlasStateVar PSV,NL,PSV
!
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,Applied ele temp,BFE,TEMP
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-other    ,Swelling    EPSW,EPSW,
!
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Fluid Pres  FPRS,CONT,FPRS
Cal_Fnc_QGSOL_2
:E End of Fnc_QGSOL
:! 
:N Fnc_QGSOL_2
:S    229,    97,   125
:T Cmd
:A Hidden
:D Query Subgrid Results
:H Hlp_UI_QUERY
Inp_P
Cmd_)!
 Fld_2
  Prm_Pick points to view subgrid results
  Typ_RESU
   IT1_GRID
   IT2_*CPAR(1)
   IT3_*CPAR(2)
  Cnt_s
:E End
:! 
:N Fnc_QNSOL
:S  23271,   137, 23114
:T Cmd
:A Nodal Solu
:D Query Nodal Solution Data
:H Hlp_UI_QNSOL
:K #(POST1+RESULTS)
:K (powrgrph)
Inp_NoApply
Cmd_)*CSET,1,2
 Fld_0
  Typ_Lab
  Prm_Query Nodal Solution Data
 Fld_2
  K_FL(STRUCTRL+multifld+lsdyna)
  Prm_Item,Comp   Item to be viewed
  Typ_Idx
P_LN(LINPLUS)
   Idx_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS)
   Idx_DOF solution    ,              UY,U,Y
P_LN(LINPLUS)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS)
   Idx_DOF solution    ,            USUM,U,SUM
P_LN(LINPLUS)
   Idx_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS)
   Idx_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS)
   Idx_DOF solution    ,            ROTZ,ROT,Z
P_LN(LINPLUS)
   Idx_DOF solution    ,          ROTSUM,ROT,SUM
!
P_LN(LINPLUS)
   Idx_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS)
   Idx_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS)
   Idx_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS)
   Idx_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS)
   Idx_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS)
   Idx_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS)
   Idx_Stress          ,1st principal S1,S,1
P_LN(LINPLUS)
   Idx_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS)
   Idx_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS)
   Idx_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS)
   Idx_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS)
   Idx_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS)
   Idx_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
   Idx_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS)
   Idx_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS)
   Idx_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS)
   Idx_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS)
   Idx_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS)
   Idx_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS)
   Idx_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS)
   Idx_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS)
   Idx_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS)
   Idx_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS)
   Idx_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS)
   Idx_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(FULL_ANS)
   Idx_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
   Idx_Energy          ,PlasStateVar PSV,NL,PSV
!
P_LN(LINPLUS)
   Idx_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS)
   Idx_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS)
   Idx_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS)
   Idx_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS)
   Idx_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS)
   Idx_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS)
   Idx_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS)
   Idx_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS)
   Idx_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS)
   Idx_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS)
   Idx_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
   Idx_Strain-thermal  ,Applied ele temp,BFE,TEMP
P_LN(LINPLUS)
   Idx_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
   Idx_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
   Idx_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
   Idx_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
   Idx_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
   Idx_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
   Idx_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
   Idx_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
   Idx_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
   Idx_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
   Idx_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS)
   Idx_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
   Idx_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
   Idx_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
   Idx_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
   Idx_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
   Idx_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
   Idx_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
   Idx_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
   Idx_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
   Idx_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
   Idx_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
   Idx_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
   Idx_Strain-other    ,Swelling    EPSW,EPSW,
!
P_LN(FULL_ANS)
   Idx_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
   Idx_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
   Idx_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
   Idx_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
   Idx_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
   Idx_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
   Idx_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
   Idx_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
   Idx_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
   Idx_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
 Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Item,Comp   Item to be viewed
  Typ_Idx
P_LN(THERMAL*FLOTRAN)
   Idx_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  Prm_Item,Comp   Item to be viewed
  Typ_Idx
P_LN(ELECMAG)
   Idx_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
   Idx_DOF solution    ,MagVectPoten  AX,A,X
P_LN(ELECMAG)
   Idx_DOF solution    ,              AY,A,Y
P_LN(ELECMAG)
   Idx_DOF solution    ,              AZ,A,Z
P_LN(ELECMAG)
   Idx_DOF solution    ,            ASUM,A,SUM
P_LN(THERMAL*ELECMAG)
   Idx_DOF solution    ,Elec poten  VOLT,VOLT,
!
P_LN(ELECMAG)
   Idx_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
   Idx_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
   Idx_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
   Idx_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
   Idx_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
   Idx_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
   Idx_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
   Idx_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
   Idx_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
   Idx_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
   Idx_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
   Idx_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
   Idx_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
   Idx_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
   Idx_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
   Idx_Flux & gradient ,           EFSUM,EF,SUM
!
P_LN(ELECMAG)
   Idx_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
   Idx_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
   Idx_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
   Idx_Nodal force data,         FMAGSUM,FMAG,SUM
!
 Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item,Comp   Item to be viewed
  Typ_Idx
P_LN(FLOTRAN)
   Idx_DOF solution    ,Displacement  UX,U,X
P_LN(FLOTRAN)
   Idx_DOF solution    ,              UY,U,Y
P_LN(FLOTRAN)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(FLOTRAN)
   Idx_DOF solution    ,            USUM,U,SUM
P_LN(FLOTRAN)
   Idx_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
   Idx_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
   Idx_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN)
   Idx_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN*FULL_ANS)
   Idx_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
   Idx_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(FULL_ANS)
   Idx_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
   Idx_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
   Idx_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
   Idx_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
!
 Fld_2
  K_FL(CFD+lsdyna)
  Prm_Item,Comp   Item to be viewed
  Typ_Idx
P_LN(FLOTRAN)
   Idx_DOF solution    ,Displacement  UX,U,X
P_LN(FLOTRAN)
   Idx_DOF solution    ,              UY,U,Y
P_LN(FLOTRAN)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(FLOTRAN)
   Idx_DOF solution    ,            USUM,U,SUM
P_LN(FLOTRAN)
   Idx_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
   Idx_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
   Idx_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN)
   Idx_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN)
   Idx_DOF solution    ,Pressure    PRES,PRES,
P_LN(FLOTRAN)
   Idx_DOF solution    ,Turb K.E.   ENKE,ENKE,
P_LN(FLOTRAN)
   Idx_DOF solution    ,Enrg dissip ENDS,ENDS,
P_LN(THERMAL*FLOTRAN)
   Idx_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(FULL_ANS)
   Idx_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
   Idx_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
   Idx_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
   Idx_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
!
P_LN(FLOTRAN)
   Idx_Other quantities,Density     DENS,DENS,
P_LN(FLOTRAN)
   Idx_Other quantities,Viscosity   VISC,VISC,
P_LN(FLOTRAN)
   Idx_Other quantities,Conductivit COND,COND,
P_LN(FLOTRAN)
   Idx_Other quantities,Eff Viscos  EVIS,EVIS,
P_LN(FLOTRAN)
   Idx_Other quantities,Eff Conduct ECON,ECON,
P_LN(FLOTRAN)
   Idx_Other quantities,Total temp  TTOT,TTOT,
P_LN(FLOTRAN)
   Idx_Other quantities,Strm func2D STRM,STRM,
P_LN(FLOTRAN)
   Idx_Other quantities,PressurCoef PCOE,PCOE,
P_LN(FLOTRAN)
   Idx_Other quantities,Mach number MACH,MACH,
P_LN(FLOTRAN)
   Idx_Other quantities,Total pres  PTOT,PTOT,
P_LN(FLOTRAN)
   Idx_Other quantities,Heat flux   HFLU,HFLU,
P_LN(FLOTRAN)
   Idx_Other quantities,Film coeff  HFLM,HFLM,
P_LN(FLOTRAN)
   Idx_Other quantities,Turb law Y+ YPLU,YPLU,
P_LN(FLOTRAN)
   Idx_Other quantities,Wall shear  TAUW,TAUW,
P_LN(FLOTRAN)
   Idx_Other quantities,Rad flux    RDFL,RDFL,
!
 Fld_2
  K_FL(MULTIFLD+(LSDYNA*STRUCTRL*THERMAL*FLUID))
  Prm_Item,Comp   Item to be viewed
  Typ_Idx
P_LN(LINPLUS)
   Idx_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS)
   Idx_DOF solution    ,              UY,U,Y
P_LN(LINPLUS)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS)
   Idx_DOF solution    ,            USUM,U,SUM
P_LN(LINPLUS)
   Idx_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS)
   Idx_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS)
   Idx_DOF solution    ,            ROTZ,ROT,Z
P_LN(LINPLUS)
   Idx_DOF solution    ,          ROTSUM,ROT,SUM
P_LN(THERMAL*FLOTRAN)
K_LN(lsdyna)
   Idx_DOF solution    ,Temperature TEMP,TEMP,
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_DOF solution    ,MagVectPoten  AX,A,X
K_LN(LSDYNA)
   Idx_DOF solution    ,Acceleration  AX,A,X
P_LN(ELECMAG*LSDYNA)
   Idx_DOF solution    ,              AY,A,Y
P_LN(ELECMAG*LSDYNA)
   Idx_DOF solution    ,              AZ,A,Z
P_LN(ELECMAG*LSDYNA)
   Idx_DOF solution    ,            ASUM,A,SUM
P_LN(THERMAL*ELECMAG)
K_LN(lsdyna)
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,Displacement  UX,U,X
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,              UY,U,Y
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,              UZ,U,Z
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,            USUM,U,SUM
K_LN(lsdyna)
   Idx_DOF solution    ,Elec poten  VOLT,VOLT,
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN*LSDYNA)
   Idx_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN*FULL_ANS*LSDYNA)
   Idx_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
K_LN(lsdyna)
   Idx_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,1st principal S1,S,1
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS*LSDYNA)
   Idx_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS*LSDYNA)
   Idx_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS*LSDYNA)
   Idx_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Flux & gradient ,           EFSUM,EF,SUM
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
   Idx_Flux & gradient ,           TGSUM,TG,SUM
!
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
K_LN(lsdyna)
   Idx_Nodal force data,         FMAGSUM,FMAG,SUM
!
P_LN(FULL_ANS*LSDYNA)
   Idx_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS*LSDYNA)
   Idx_Energy          ,PlasStateVar PSV,NL,PSV
!
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS*LSDYNA)
   Idx_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,Applied ele temp,BFE,TEMP
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
K_LN(lsdyna)
   Idx_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS*LSDYNA)
   Idx_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Strain-other    ,Swelling    EPSW,EPSW,
!
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
K_LN(lsdyna)
   Idx_Contact         ,Fluid Pres  FPRS,CONT,FPRS
Cal_Fnc_QNSOL_2
:E End of Fnc_QNSOL
:! 
:N Fnc_QNSOL_2
:S    225,    95,   123
:T Cmd
:A Hidden
:D Query Nodal Results
:H Hlp_UI_QUERY
Inp_P
Cmd_)!
 Fld_2
  Prm_Pick points to view nodal results
  Typ_RESU
   IT1_NODE
   IT2_*CPAR(1)
   IT3_*CPAR(2)
  Cnt_s
:E End
:! 
:N Fnc_QUAD
:S    452,   174,   271
:T Cmd_P
:C )! Fnc_QUAD
:A Quadratic Fill
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,3
:C )/GO
:D Quad Line of Nodes
:K #(PREP7)
:H Hlp_C_QUAD
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
Prm_[QUAD]  Pick or enter the 2 end nodes for quadratic fill
  Typ_NODE
  Min_2
  Cnt_2
  PCN_0
  PFM_2
 Fld_4
Prm_Pick or enter the guiding node for quadratic fill
  Typ_NODE
  Min_1
  Cnt_1
  PCN_0
  PFM_2
Cmd_)/GO
Cal_Fnc_QUAD2
:E END
:! 
:N Fnc_QUAD2
:S    616,   124,   473
:T Command
:C )! Fnc_QUAD2
:D Create Quadratic Line of Nodes
:K #(PREP7)
:H Hlp_C_QUAD
Cmd_QUAD
 Fld_2
  Prm_NODE1  Starting node
  Typ_INT
  Def_*PAR(_z(1))
 Fld_3
  Prm_NINTR  Guiding node
  Typ_INT
  Def_*PAR(_z(3))
 Fld_4
  Prm_NODE2  Ending node
  Typ_INT
  Def_*PAR(_z(2))
 Fld_5
  Prm_NFILL  Number of nodes to fill
  Typ_INT
  Def_*PAR(abs(_z(2)-_z(1))-1)
 Fld_6
  Prm_NSTRT  1st fill-in node no.   
  Typ_INT
  Def_Blank
 Fld_7
  Prm_NINC   Inc. between filled nodes
  Typ_INT
  Def_Blank
 Fld_8
  Prm_PKFAC  Peak location factor
  Typ_REAL
  Def_0.5
:E End_OF_Fnc_QUAD
:! 
:N Fnc_QUADFREE
:S    378,   293,    78
:T Cmd
:C )!Fnc_QUADFREE
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0
:C )*GET,_z1,common,,cfprp7,,int,110
:C )*GET,_z2,common,,cfprp7,,int,107
:C )*IF,_z1,ne,0,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_z2,ne,0,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
:H Hlp_C_AMESH
Inp_P
Cmd_MSHAPE,0,2D
K_CM(KEY1)
Cmd_MSHKEY,0
K_CM(KEY2)
Cmd_)!
Cal_Fnc_AMESH
:E END
:! 
:N Fnc_QUADMAP34
:S    380,   295,    78
:T Cmd
:C )!Fnc_QUADMAP34
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0
:C )*GET,_z1,common,,cfprp7,,int,110
:C )*GET,_z2,common,,cfprp7,,int,107
:C )*IF,_z1,ne,0,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_z2,ne,1,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
:H Hlp_C_AMESH
Inp_P
Cmd_MSHAPE,0,2D
K_CM(KEY1)
Cmd_MSHKEY,1
K_CM(KEY2)
Cmd_)!
Cal_Fnc_AMESH
:E END
:! 
:N Fnc_QUADMAPA
:S    358,   274,    77
:T Cmd
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0
:C )*GET,_z1,common,,cfprp7,,int,110
:C )*GET,_z2,common,,cfprp7,,int,107
:C )*IF,_z1,ne,0,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_z2,ne,1,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
:H Hlp_C_AMAP
Inp_P
Cmd_MSHAPE,0,2D
K_CM(KEY1)
Cmd_MSHKEY,1
K_CM(KEY2)
Cmd_)!
Cal_Fnc_AMAP
:E END
:! 
:N Fnc_QUASISTAT
:S    353,   197,   149
:T Command
:C )! Fnc_QUASISTAT
:A Quasi-Static
:D Quasi-Static Radiation Solution Option
:K #((PREP7*SOLUTION)+((THERMAL+RADSURF)*NOFILTER))
:H Hlp_C_QSOPT
Cmd_QSOPT
 Fld_0
  Typ_Lab
  Prm_[QSOPT] Quasi static radiation options
 Fld_2
  Typ_LIS_RADIOB
  LIS_OFF        ,OFF
  LIS_ON         ,ON
  Def_OFF
:E END
:! 
:N Fnc_QUOT
:S    548,   132,   409
:T Command
:C )! Fnc_QUOT
:A Divide
:D Divide Time-History Variables
:K #(POST26)
:H Hlp_C_QUOT
Cmd_QUOT
Fld_0
Typ_Lab
Prm_[QUOT]        IR = (FACTA * IA) / (FACTB * IB)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  1st Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     1st Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_10
Prm_FACTB  2nd Factor
Typ_real
Def_1.0
Fld_4
Prm_IB     2nd Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_R
:S    254,   129,   118
:T Cmd
:C )! Fnc_R
:A Add/Edit/Delete
:D Real Constants
:H Hlp_UI_RealCons
:K #(PREP7*SOLUTION)
Inp_P
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
! Cust_Cal_Fnc_rcon_nnn[0-168]
! Cust_Cmd_R
! Cust_Cmd_RDELE
:E End
:! 
:N Fnc_RACE
:S    752,   225,   520
:T Command
:C )! Fnc_RACE
:A Racetrack Coil
:D "Racetrack" Current Source for 3-D Magnetic Analysis
:K (PREP7+(PR_ELMAG*pr_set))
:K #((edgeflx+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_RACE
Cmd_RACE
 Fld_0
  Typ_Lab
  Prm_[RACE]  "Racetrack" Current Source for 3-D Magnetic Analysis
 Fld_2
  Prm_XC      X-loc of vertical leg
  Typ_REAL
 Fld_3
  Prm_YC      Y-loc of horizontal leg
  Typ_REAL
 Fld_4
  Prm_RAD     Radius of curvature    
  Typ_REAL
 Fld_0
  Typ_Sep
 Fld_5
  Prm_TCUR    Total current flow
  Typ_REAL
 Fld_6
  Prm_DY      In-plane thickness
  Typ_REAL
 Fld_7
  Prm_DZ      Out-of-plane thickness
  Typ_REAL
 Fld_10
  Dlm_'
 Fld_11
  Prm_Cname   Component name 
  Typ_Char,32,32
  Dlm_'
 Fld_12
:E END
:! 
:N Fnc_RADAR
:S   1199,   236,   956
:T Command
:A    RCS
:D Compute Radar Cross Section
:C )! Fnc_RADAR
:C )/NOPR
:C )KEYW,HFFAR,0
:C )/GO
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PLHFFAR
:H Hlp_C_HFSYM
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_2
  Typ_Def_'RCS'
Cmd_)*CSET,2,2
 Fld_0
  Typ_Lab
  Prm_[PLHFFAR]  Compute Radar Cross Section 
 Fld_2
  Prm_Lab     Polarization option
   Typ_Lis
    Lis_None            ,NONE
    Lis_Phi-phi         ,PP
    Lis_Phi-theta       ,PT
    Lis_Theta-phi       ,TP
    Lis_Theta-theta     ,TT
Cmd_)/GO
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cal_Fnc_PLHFFAR_1
:E End
:! 
:N Fnc_RADAR_L
:S   1199,   238,   954
:T Command
:A    RCS
:D Compute Radar Cross Section
:C )! Fnc_RADAR
:C )/NOPR
:C )KEYW,HFFAR,0
:C )/GO
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PRHFFAR
:H Hlp_C_HFSYM
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_2
  Typ_Def_'RCS'
Cmd_)*CSET,2,2
 Fld_0
  Typ_Lab
  Prm_[PRHFFAR]  Compute Radar Cross Section 
 Fld_2
  Prm_Lab     Polarization option
   Typ_Lis
    Lis_None            ,NONE
    Lis_Phi-phi         ,PP
    Lis_Phi-theta       ,PT
    Lis_Theta-phi       ,TP
    Lis_Theta-theta     ,TT
Cmd_)/GO
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cal_Fnc_HFFAR_1
:E End
:! 
:N Fnc_RADAR_N
:S   1237,   260,   970
:T Command
:A    RCS Normalized
:D Compute Normalized Radar Cross Section
:C )! Fnc_RADAR
:C )/NOPR
:C )KEYW,HFFAR,0
:C )/GO
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PLHFFAR
:H Hlp_C_HFSYM
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_2
  Typ_Def_'RCSNORM'
Cmd_)*CSET,2,2
 Fld_0
  Typ_Lab
  Prm_[PLHFFAR]  Compute Normalized Radar Cross Section
 Fld_2
  Prm_Lab     Polarization option
   Typ_Lis
    Lis_None            ,NONE
    Lis_Phi-phi         ,PP
    Lis_Phi-theta       ,PT
    Lis_Theta-phi       ,TP
    Lis_Theta-theta     ,TT
Cmd_)/GO
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cal_Fnc_PLHFFAR_1
:E End
:! 
:N Fnc_RADAR_NL
:S   1236,   261,   968
:T Command
:A    RCS Normalized
:D Compute Normalized Radar Cross Section
:C )! Fnc_RADAR
:C )/NOPR
:C )KEYW,HFFAR,0
:C )/GO
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PRHFFAR
:H Hlp_C_HFSYM
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_2
  Typ_Def_'RCSNORM'
Cmd_)*CSET,2,2
 Fld_0
  Typ_Lab
  Prm_[PRHFFAR]  Compute Normalized Radar Cross Section
 Fld_2
  Prm_Lab     Polarization option
   Typ_Lis
    Lis_None            ,NONE
    Lis_Phi-phi         ,PP
    Lis_Phi-theta       ,PT
    Lis_Theta-phi       ,TP
    Lis_Theta-theta     ,TT
Cmd_)/GO
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cal_Fnc_HFFAR_1
:E End
:! 
:N Fnc_RADOPT
:S    900,   171,   722
:T Command
:C )! Fnc_RADOPT
:A Radiosity Opts 
:D Radiosity Options
:K ((PREP7*SOLUTION)+(RADSURF+THERMAL)*NOFILTER)
:H Hlp_C_RADOPT
Cmd_RADOPT
 Fld_0
  Typ_Lab
  Prm_[RADOPT] Radiosity Solver Options
 Fld_2
  Prm_FLUXRELX Heat flux relax. factor
  Typ_REAL
  Def_0.1
 Fld_3
  Prm_FLUXTOL  Convergence tolerance
  Typ_REAL
  Def_0.1
 Fld_4
  Prm_SOLVER   Solver option
  Typ_Lis_OptionB
   Lis_Direct Solver   ,0
   Lis_Iterative Solver,1
   Lis_Jacobi Solver   ,2
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_      Iterative Solver Options
 Fld_5
  Prm_MAXITR   Maximum iteration number
  Typ_Int
  Def_100
 Fld_6
  Prm_TOLER    Convergence tolerance
  Typ_REAL
  Def_0.1
 Fld_7
  Prm_OVERRELX  Over relaxation factor
  Typ_REAL
  Def_0.1
 Fld_0
  Typ_Lab
  Prm_      Full Solver Options
 Fld_12
  Prm_MAXFLUXITER   Maximum iteration number
  Typ_Int
  Def_0
:E END
:! 
:N Fnc_RAPPND
:S    342,    99,   236
:T Command
:A Write Results
:D Write Results
:H Hlp_C_RAPPND
Inp_NoApply
Cmd_RAPPND
 Fld_0
  Typ_Lab
  Prm_[RAPPND]  Appends current results to results file
 Fld_2
  Typ_Lab
  Prm_ LSTEP Load step number
  Typ_INT 
  Def_1
 Fld_3
  Typ_Lab 
  Prm_ TIME  Time associated with load step
  Typ_REAL 
:E END
:! 
:N Fnc_RBE3
:S    346,   171,   168
:T Cmd_P
:C )! Fnc_RBE3
:C )! Node for RBE3 command below
:A Dist F/M at Mstr
:D Dist F/M at Master 
:K (PREP7+STRUCTRL)
:H Hlp_C_RBE3
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
  Fld_2
  Typ_NODE
  Prm_[RBE3]  Pick or enter master node for force/moment distribution
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_RBE3_a
:E END
:! 
:N Fnc_RBE3_a
:S    507,   149,   351
:T Command
:C )! Fnc_RBE3_a
:A Dist F/M at Mstr
:D Distribute Force/Moment at Master
:K #(PREP7)
:H Hlp_C_RBE3
Cmd_RBE3
 Fld_0
  Typ_Lab
  Prm_[RBE3]  Define Force/Moment Distribution
 Fld_2
  Typ_INT
  Prm_MASTER Node where F/M applied
  Def_*PAR(_z1)
 Fld_3
  Prm_DOF   Degree-of-freedom label
  Typ_Lis_OptionB
   Lis_*READ,DOF
   Lis_ALL
 Fld_4
  Prm_SLAVES List of Slave Array Param
  Typ_CHAR,32
 Fld_5
  Prm_WTFACT Weight Factor Array Param
  Typ_CHAR,32
:E END
:! 
:N Fnc_RBREAD
:S    639,   161,   471
:T Cmd
:C )! Fnc_RBREAD
:A RBDOUT file
:D Read data from the RBDOUT file
:K (LSDYNA*FULL_ANS)
:K #(POST26)
:H Hlp_C_EDREAD
Cmd_EDREAD
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab
   Prm_[EDREAD] Read RBDOUT file data into variables for postprocessing
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Variable reference number
   Typ_INT
   Def_2
 Fld_3
   Typ_Char
   Typ_Def_RBDOUT
 Fld_4
   Prm_Read data for rigid body number...
   Typ_Int
 Fld_5
   Prm_From load step
   Typ_Int
 Fld_6
   Prm_To load step
   Typ_Int
 Fld_0
  Typ_Lab
  Prm_                       - The default is for all load steps
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_RCREAD
:S    628,   162,   459
:T Cmd
:C )! Fnc_RCREAD
:A RCFORC file
:D Read data from the RCFORC file 
:K (LSDYNA*FULL_ANS)
:K #(POST26)
:H Hlp_C_EDREAD
Cmd_EDREAD
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab
   Prm_[EDREAD] Read RCFORC file data into variables for postprocessing
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Variable ref no.
   Typ_INT
   Def_2
 Fld_3
   Typ_Char
   Typ_Def_RCFORC
 Fld_4
   Prm_Read data for contact number...
   Typ_Int
 Fld_5
   Prm_From load step
   Typ_Int
 Fld_6
   Prm_To load step
   Typ_Int
 Fld_0
  Typ_Lab
  Prm_                       - The default is for all load steps
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_REAL_p26
:S    501,   193,   301
:T Command
:C )! Fnc_REAL_p26
:A Real Part
:D Real Part of Time-History Variable
:K (lsdyna)
:K #(POST26+HARMONIC)
:P (LINPLUS*ELECMAG)
:H Hlp_C_REALVAR
Cmd_REALVAR
Fld_0
Typ_Lab
Prm_[REALVAR]           IR = Real Part of (FACTA * IA)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_RECTNG
:S    355,   145,   203
:T Command
:C )! Fnc_RECTNG
:A By Dimensions
:D Create Rectangle by Dimensions
:K #(PREP7)
:H Hlp_C_RECTNG
Cmd_RECTNG
 Fld_0
  Typ_Lab
  Prm_[RECTNG]  Create Rectangle by Dimensions
 Fld_2
  Prm_X1,X2  X-coordinates
  Typ_REAL2
  Def_Blank,Blank
 Fld_4
  Prm_Y1,Y2  Y-coordinates
  Typ_REAL2
  Def_Blank,Blank
:E END
:! 
:N Fnc_REFLCOE1
:S    235,   102,   126
:T Cmd
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,1,1,1
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_zc(1)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(1)
  Dlm_'
 Fld_4
  Typ_Lab
Cmd_)/GO
Cal_Fnc_REFLCOE2
:E End
:! 
:N Fnc_REFLCOE2
:S    215,    47,   161
:T Cmd
Inp_P
Cmd_REFLCOEF
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z2)
 Fld_4
  Typ_Def_*PAR(_z3)
 Fld_5
  Typ_Def_*PAR(_z4)
 Fld_6
  Typ_Def_*STR('%_zc(1)%')
:E End
:! 
:N Fnc_REFLCOEF
:S    791,   204,   580
:T Command
:C )! Fnc_REFLCOEF
:A    Refl Coeff
:D Calculate  Reflection Coefficients
:K #((POST1+RESULTS+EDGEELC+HARMONIC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_REFLCOEF
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[REFLCOEF]  For coaxial waveguide this function calculates  
 Fld_0
  Typ_Lab
  Prm_                  reflection coefficient data 
Cmd_)*SET,_z1
 Fld_2
  Prm_Portin    Input port number
  Typ_Real
  Def_1
!
Cmd_)*SET,_z2
 Fld_2
  Prm_Voltin    Input port voltage
  Typ_Real
  Def_0
!
Cmd_)*SET,_z3
 Fld_2
  Prm_Phasin    Voltage phase angle
  Typ_Real
  Def_0
!
Cmd_)*SET,_z4
 Fld_2
  Prm_Pdist     Propagation distance
  Typ_Real
  Def_0
!
Cmd_)*CSET,1,1
 Fld_2
  Prm_Vpathy    Propagation path name
  Typ_Lis
  LIS_*READ,DPTH
Cal_Fnc_REFLCOE1
:E END
:! 
:N Fnc_REFRESH
:S    110,    78,    25
:T FINISH
:C )! Fnc_REFRESH
:A REFRESH
Inp_P
Cmd_)!
Cal_REFRESH
:E End
:! 
:N Fnc_RESCONTROL
:S   1286,   330,   949
:T Command
:C )! Fnc_RESCONTROL
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,11
:C )*del,_z
:C )*dim,_z,,5
:C )_zc(1)='NONE','ALL ','LAST'
:C )_zc(4)='NONE','ALL ','LAST'
:C )/go
:A Restart Control
:D Multi-Frame Restart Control
:P (FULL_ANS)
:K #(STATIC*(TRNSIENT+FULL))
:H Hlp_C_RESCONTROL
Cmd_)/NOPR
Cmd_)*SET,_zc(11)
 Fld_0
  Typ_Lab
  Prm_[RESCONTROL]  Controls for Multi-Frame Restart
 Fld_2
  Prm_Action
  Typ_LIS_OPTIONB
  LIS_Define          ,'DEFINE'
  LIS_File Summary    ,'FILE_Sum'
  LIS_Current Status  ,'STATUS'
  LIS_Clean up files  ,'NORESTAR'
  LIS_Linear Perturb  ,'LINEAR'
  Def_DEFINE
Cmd_)*SET,_z(1)
 Fld_2
  Prm_LDSTEP  Load Step
  Typ_LIS_RADIOB
  LIS_None            ,1
  LIS_All             ,2
  LIS_Last load step  ,3
  LIS_Load step number,4
  Def_3
 Fld_3
  Prm_                   Value of N
  Typ_INT
  Def_Blank
 Fld_4
  Prm_FREQ   File write frequency
  Typ_LIS_RADIOB
  LIS_None            ,4
  LIS_All             ,5
  LIS_Last substep    ,6
  LIS_Every Nth substp,7
  Def_6
 Fld_5
  Prm_                   Value of N
  Typ_INT
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_             (Use negative N for equally spaced data)
 Fld_6
  Prm_Number of files to write
  Typ_INT
  Def_Blank
Cmd_)/GO
Cal_Fnc_RESCONTROL_2
:E END
:! 
:N Fnc_RESCONTROL_2
:S    838,   440,   391
:T Command
:C )! Fnc_RESCONTROL_2
:C )/nopr
:C )KEYW,DEFINE,0
:C )KEYW,NUMFREQ,0
:C )KEYW,NUMSUB,0
:C )*IF,_zc(11),EQ,'DEFINE',THEN
:C )KEYW,DEFINE,1
:C )*ENDIF
:C )*IF,_zc(11),EQ,'STATUS',THEN
:C )KEYW,DEFINE,1
:C )*ENDIF
:C )*IF,_z(1),EQ,4,THEN
:C )KEYW,NUMSUB,1
:C )*ENDIF
:C )*IF,_z(3),EQ,7,THEN
:C )KEYW,NUMFREQ,1
:C )*ENDIF
:C )/go
:A Restart Control
:D Restart Control
:H Hlp_C_RESCONTROL
Inp_P
Cmd_RESCONTROL
K_CM(define)
 Fld_2
  Typ_Def_*PAR(_zc(11))
Cmd_RESCONTROL,DEFINE
K_CM(DEFINE)
 Fld_2
 K_FL(NUMSUB)
  Typ_Def_*PAR(_z(2))
 Fld_2
 K_FL(numsub)
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
 K_FL(NUMFREQ)
  Typ_Def_*PAR(_z(4))
 Fld_3
 K_FL(numfreq)
  Typ_Def_*PAR(_zc(_z(3)))
 Fld_4
  Typ_Def_*PAR(_z(5))
Cmd_)/NOPR
Cmd_)KEYW,NUMSUB,0
Cmd_)KEYW,NUMFREQ,0
Cmd_)KEYW,DEFINE,0
Cmd_)/GO
:E END
:! 
:N Fnc_RESET_p1
:S    426,   143,   276
:T Command
:C )! Fnc_RESET_p1
:A Reset
:D Reset POST1 Specfications
:H Hlp_C_RESET
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_RESET
Fld_0
 Typ_Lab
  Prm_[RESET]  This function resets all POST1 specifications
Fld_0
 Typ_Lab
  Prm_         to initial defaults and erases all element table items,
Fld_0
 Typ_Lab
  Prm_         path items, fatigue data, and load case pointers!
Cal_REFRESH
:E END
:! 
:N Fnc_RESET_p26
:S    382,   118,   257
:T Command
:C )! Fnc_RESET_p26
:A Reset Postproc
:K #(POST26)
:H Hlp_C_RESET
Inp_NoApply
Cmd_RESET
Fld_0
 Typ_Lab
  Prm_[RESET]  This function resets all POST26 specifications
Fld_0
 Typ_Lab
  Prm_         to initial defaults, erases all variables defined,
Fld_0
 Typ_Lab
  Prm_         and zeroes the data storage space.
Cal_REFRESH
:E END
:! 
:N Fnc_RESP
:S    769,   166,   596
:T Command
:C )! Fnc_RESP
:A Generate Spectrm
:D Generate a Response Spectrum
:K (lsdyna)
:K #(POST26)
:P (LINPLUS)
:H Hlp_C_RESP
Cmd_RESP
Fld_0
Typ_Lab
Prm_[RESP]  Generate a Response Spectrum
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_3
Prm_LFTAB  Freq table variable no.
Typ_int
Def_Blank
Fld_4
Prm_LDTAB  Displ time-hist var. no.
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_5
Prm_ITYPE  Type of response spectrum
Typ_LIS_OPTIONB
LIS_Displacement    ,1
LIS_Velocity        ,2
LIS_Acceleration    ,3
Fld_6
Prm_RATIO  Visc/Critical damp ratio
Typ_real
Def_Blank
Fld_7
Prm_DTIME  Integration time step
Typ_real
Def_Blank
Fld_0
Prm_ 
Fld_8
Prm_TMN,TMX  Range of time-history
Typ_real2
Def_Blank,Blank
:E END
:! 
:N Fnc_RFORCE
:S   1269,  1233,    29
:T Command
:C )! Fnc_RFORCE
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,15,2
:C )*SET,_zc(1,1),'F','F','F','M','M','M','HEAT','FLUX'
:C )*SET,_zc(1,2),'X','Y','Z','X','Y','Z','    ','    '
:C )*SET,_zc(9,1),'CSG','CSG','CSG','FLOW','AMPS'
:C )*SET,_zc(9,2),'X','Y','Z','    ','    '
:C )*SET,_zc(14,1),'CURT','VLTG'
:C )*SET,_zc(14,2),'    ','    '
:C )*GET,_z2,common,,cpst26,,chr4,_z1+420  ! label
:C )*IF,_z2,EQ,'FX',THEN
:C )_z2='F'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'FY',THEN
:C )_z2='F'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'FZ',THEN
:C )_z2='F'
:C )_z3='Z'
:C )*ELSEIF,_z2,EQ,'MX',THEN
:C )_z2='M'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'MY',THEN
:C )_z2='M'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'MZ',THEN
:C )_z2='M'
:C )_z3='Z'
:C )*ELSEIF,_z2,EQ,'CSGX',THEN
:C )_z2='CSG'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'CSGY',THEN
:C )_z2='CSG'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'CSGZ',THEN
:C )_z2='CSG'
:C )_z3='Z'
:C )*ELSE
:C )_z2=_z2
:C )_z3='   '
:C )*ENDIF
:C )_z4=0
:C )*DO,_z4,1,15
:C )/NOPR
:C )*IF,_zc(_z4,1),EQ,_z2,THEN
:C )*IF,_zc(_z4,2),EQ,_z3,EXIT
:C )*ENDIF
:C )*ENDDO
:C )*DEL,_z
:C )*DIM,_z,,5
:C )/GO
:A Reaction Force
:D Define Reaction Force Variable
:K #(POST26)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_RFORCE
Inp_p
Cmd_)!
Cal_Fnc_RFORCE1
:E END
:! 
:N Fnc_RFORCE1
:S    390,   244,   139
:T Command
:C )! Fnc_RFORCE1
:C )/NOPR
:C )*IF,_z4,EQ,15,THEN
:C )*IF,_zc(15,1),NE,_z2,THEN
:C )_z4=1
:C )*ENDIF
:C )*ENDIF
:C )/GO
:A Reaction Force
:D Define Reaction Force 
:K #(POST26)
:H Hlp_C_RFORCE
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z5
 Fld_2
  Prm_[NSOL] Pick node for time history
  Typ_NODE
  Min_0
  Cnt_1
  Pfm_2
Cmd_)/GO
Cal_Fnc_RFORCE1A
:E END
:! 
:N Fnc_RFORCE1A
:S   2122,   138,  1977
:T Command
:C )! Fnc_RFORCE1A
:A Reaction Force
:D Define Reaction Force Variable
:H Hlp_C_RFORCE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,3
 Fld_0
  Typ_LAB
  Prm_[RFORCE] Define Reaction Force Variable
 Fld_2
  Prm_NVAR  Ref number of variable
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Prm_NODE  Node number
  Typ_INT
  Def_*PAR(_z5)
 Fld_4
  Typ_CHAR
  Prm_Name  User-specified label
  Def_*GET(COMMON,,CPST26,,CHAR,_z1)
Cmd_)*SET,_z(3)
 Fld_2
K_FL(STRUCTRL+multifld)
P_FL(LINPLUS)
  Prm_Item,Comp  Data item
  Typ_LIS
LIS_Struct force  FX,1
LIS_              FY,2
LIS_              FZ,3
LIS_Struct moment MX,4
LIS_              MY,5
LIS_              MZ,6
Def_*PAR(_z4)
!
 Fld_2
K_FL(THERMAL+multifld) 
P_FL(THERMAL)
  Prm_Item,Comp  Data item
  Typ_LIS
LIS_Heat flow   HEAT,7
Def_*PAR(_z4)
!
 Fld_2
K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid) 
P_FL(ELECMAG)
  Prm_Item,Comp  Data item
  Typ_LIS
LIS_Mag flux    FLUX,8
LIS_Curr segmt  CSGX,9
LIS_            CSGY,10
LIS_            CSGZ,11
LIS_Elec currnt AMPS,13
LIS_Current     CURT,14
LIS_Voltage drp VLTG,15
Def_*PAR(_z4)
!
 Fld_2
K_FL(FLUID+multifld) 
  Prm_Item,Comp  Data item
  Typ_LIS
P_LN(FULL_ANS)
LIS_Flow rate   FLOW,12
P_LN(THERMAL)
LIS_Heat flow   HEAT,7
Def_*PAR(_z4)
!
 Fld_2
K_FL(CFD) 
  Prm_Item,Comp  Data item
  Typ_LIS
P_LN(FULL_ANS)
LIS_Flow rate   FLOW,12
P_LN(THERMAL)
LIS_Heat flow   HEAT,7
Def_*PAR(_z4)
!
 Fld_2
K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)) 
  Prm_Item,Comp  Data item
  Typ_LIS
P_LN(LINPLUS)
LIS_Struct force  FX,1
P_LN(LINPLUS)
LIS_              FY,2
P_LN(LINPLUS)
LIS_              FZ,3
P_LN(LINPLUS)
LIS_Struct moment MX,4
P_LN(LINPLUS)
LIS_              MY,5
P_LN(LINPLUS)
LIS_              MZ,6
!
P_LN(THERMAL)
LIS_Heat flow   HEAT,7
!
P_LN(ELECMAG)
LIS_Mag flux    FLUX,8
P_LN(ELECMAG)
LIS_Curr segmt  CSGX,9
P_LN(ELECMAG)
LIS_            CSGY,10
P_LN(ELECMAG)
LIS_            CSGZ,11
P_LN(ELECMAG*FULL_ANS)
LIS_Elec currnt AMPS,13
P_LN(ELECMAG)
LIS_Current     CURT,14
P_LN(ELECMAG)
LIS_Voltage drp VLTG,15
!
P_LN(FULL_ANS)
LIS_Flow rate   FLOW,12
Def_*PAR(_z4)
!
Cal_Fnc_RFORCE_A
:E End
:! 
:N Fnc_RFORCE1e
:S   2259,   254,  1998
:T Command
:C )! Fnc_RFORCE1e
:C )/NOPR
:C )*IF,_z4,EQ,15,THEN
:C )*IF,_zc(15,1),NE,_z2,THEN
:C )_z4=1
:C )*ENDIF
:C )*ENDIF
:C )/GO
:A Reaction Force
:D Define Reaction Force Variable
:K #(POST26)
:H Hlp_C_RFORCE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,3
 Fld_0
  Typ_LAB
  Prm_[RFORCE] Define Reaction Force Variable
 Fld_2
  Prm_NVAR  Ref number of variable
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Prm_NODE  Node number
  Typ_INT
  Def_*GET(COMMON,,CPST26,,INT,_z1)
 Fld_4
  Typ_CHAR
  Prm_Name  User-specified label
  Def_*GET(COMMON,,CPST26,,CHAR,_z1)
Cmd_)*SET,_z(3)
 Fld_2
K_FL(STRUCTRL+multifld)
P_FL(LINPLUS)
  Prm_Item,Comp  Data item
  Typ_LIS
LIS_Struct force  FX,1
LIS_              FY,2
LIS_              FZ,3
LIS_Struct moment MX,4
LIS_              MY,5
LIS_              MZ,6
Def_*PAR(_z4)
!
 Fld_2
K_FL(THERMAL+multifld) 
P_FL(THERMAL)
  Prm_Item,Comp  Data item
  Typ_LIS
LIS_Heat flow   HEAT,7
Def_*PAR(_z4)
!
 Fld_2
K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid) 
P_FL(ELECMAG)
  Prm_Item,Comp  Data item
  Typ_LIS
LIS_Mag flux    FLUX,8
LIS_Curr segmt  CSGX,9
LIS_            CSGY,10
LIS_            CSGZ,11
LIS_Elec currnt AMPS,13
LIS_Current     CURT,14
LIS_Voltage drp VLTG,15
Def_*PAR(_z4)
!
 Fld_2
K_FL(FLUID+multifld) 
  Prm_Item,Comp  Data item
  Typ_LIS
P_LN(FULL_ANS)
LIS_Flow rate   FLOW,12
P_LN(THERMAL)
LIS_Heat flow   HEAT,7
Def_*PAR(_z4)
!
 Fld_2
K_FL(CFD) 
  Prm_Item,Comp  Data item
  Typ_LIS
P_LN(FULL_ANS)
LIS_Flow rate   FLOW,12
P_LN(THERMAL)
LIS_Heat flow   HEAT,7
Def_*PAR(_z4)
!
 Fld_2
K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)) 
  Prm_Item,Comp  Data item
  Typ_LIS
P_LN(LINPLUS)
LIS_Struct force  FX,1
P_LN(LINPLUS)
LIS_              FY,2
P_LN(LINPLUS)
LIS_              FZ,3
P_LN(LINPLUS)
LIS_Struct moment MX,4
P_LN(LINPLUS)
LIS_              MY,5
P_LN(LINPLUS)
LIS_              MZ,6
!
P_LN(THERMAL)
LIS_Heat flow   HEAT,7
!
P_LN(ELECMAG)
LIS_Mag flux    FLUX,8
P_LN(ELECMAG)
LIS_Curr segmt  CSGX,9
P_LN(ELECMAG)
LIS_            CSGY,10
P_LN(ELECMAG)
LIS_            CSGZ,11
P_LN(ELECMAG*FULL_ANS)
LIS_Elec currnt AMPS,13
P_LN(ELECMAG)
LIS_Current     CURT,14
P_LN(ELECMAG)
LIS_Voltage drp VLTG,15
!
P_LN(FULL_ANS)
LIS_Flow rate   FLOW,12
Def_*PAR(_z4)
!
Cal_Fnc_RFORCE_Ae
:E End
:! 
:N Fnc_RFORCE_A
:S    290,    70,   213
:T Command
:C )! Fnc_RFORCE_A
Inp_P
Cmd_)/GO
Cmd_RFORCE
Fld_2
Typ_Def_*CPAR(1)
Fld_3
Typ_Def_*CPAR(2)
Fld_4
Typ_Def_*PAR(_zc(_z(3),1))
Fld_5
Typ_Def_*PAR(_zc(_z(3),2))
Fld_6
Typ_Def_*CPAR(3)
Cmd_)/NOPR
Cmd_)DEFINE
Cmd_)STAT,,,, ,,,,1
Cmd_)/GO
:E END
:! 
:N Fnc_RFORCE_Ae
:S    292,    72,   213
:T Command
:C )! Fnc_RFORCE_Ae
Inp_P
Cmd_)/GO
Cmd_RFORCE
Fld_2
Typ_Def_*CPAR(1)
Fld_3
Typ_Def_*CPAR(2)
Fld_4
Typ_Def_*PAR(_zc(_z(3),1))
Fld_5
Typ_Def_*PAR(_zc(_z(3),2))
Fld_6
Typ_Def_*CPAR(3)
Cmd_)/NOPR
Cmd_)DEFINE
Cmd_)STAT,,,, ,,,,1
Cmd_)/GO
:E END
:! 
:N Fnc_RFORCE_e
:S   1274,  1237,    30
:T Command
:C )! Fnc_RFORCE_e
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,15,2
:C )*SET,_zc(1,1),'F','F','F','M','M','M','HEAT','FLUX'
:C )*SET,_zc(1,2),'X','Y','Z','X','Y','Z','    ','    '
:C )*SET,_zc(9,1),'CSG','CSG','CSG','FLOW','AMPS'
:C )*SET,_zc(9,2),'X','Y','Z','    ','    '
:C )*SET,_zc(14,1),'CURT','VLTG'
:C )*SET,_zc(14,2),'    ','    '
:C )*GET,_z2,common,,cpst26,,chr4,_z1+420  ! label
:C )*IF,_z2,EQ,'FX',THEN
:C )_z2='F'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'FY',THEN
:C )_z2='F'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'FZ',THEN
:C )_z2='F'
:C )_z3='Z'
:C )*ELSEIF,_z2,EQ,'MX',THEN
:C )_z2='M'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'MY',THEN
:C )_z2='M'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'MZ',THEN
:C )_z2='M'
:C )_z3='Z'
:C )*ELSEIF,_z2,EQ,'CSGX',THEN
:C )_z2='CSG'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'CSGY',THEN
:C )_z2='CSG'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'CSGZ',THEN
:C )_z2='CSG'
:C )_z3='Z'
:C )*ELSE
:C )_z2=_z2
:C )_z3='   '
:C )*ENDIF
:C )_z4=0
:C )*DO,_z4,1,15
:C )/NOPR
:C )*IF,_zc(_z4,1),EQ,_z2,THEN
:C )*IF,_zc(_z4,2),EQ,_z3,EXIT
:C )*ENDIF
:C )*ENDDO
:C )*DEL,_z
:C )*DIM,_z,,5
:C )/GO
:A Reaction Force
:D Define Reaction Force Variable
:K #(POST26)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_RFORCE
Inp_p
Cmd_)!
Cal_Fnc_RFORCE1e
:E END
:! 
:N Fnc_RLIST
:S    295,   140,   148
:T Cmd
:C )! Fnc_RLIST
:A Specified Real Constants
:D List Specified Real Constant Sets
:H Hlp_C_RLIST
Cmd_RLIST
 Fld_0
  Typ_Lab
  Prm_[RLIST]  List Specified Real Constant Sets
 Fld_2
  Prm_NSET1,NSET2,NINC  Range of sets
  Typ_INT3
  Def_1,blank,1
:E End
:! 
:N Fnc_RMANL
:S    592,   162,   423
:T Cmd
:C )! Fnc_RMANL
:C )/NOPR
:C )_z1='*.db'
:C )/GOPR
:A  Model Features
:D Define model for ROM analysis
:H Hlp_C_RMANL
Fmt_H
Inp_Noapply
 Cmd_)*CSET,1,6
 Fld_0
  Prm_[RMANL]  Assign model database
  Typ_Lab
 Fld_2
   Prm_        Database file
   Typ_FILE
   Def_*PAR(_z1)
 Fld_5
   Prm_Dimn    Model Dimensionality
   Typ_Lis_OptionB
    Lis_2D Model,2
    Lis_3D Model,3
    Def_2
 Fld_6
   Prm_Oper    Primary operating direction
   Typ_Lis_OptionB
    Lis_X-direction,X
    Lis_Y-direction,Y
    Lis_Z-direction,Z
    Def_X
Cal_Fnc_RMANL2
:E END
:! 
:N Fnc_RMANL2
:S    200,    47,   146
:T Cmd_P
Inp_P
Cmd_RMANL
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
:E END
:! 
:N Fnc_RMANL3
:S    235,    47,   181
:T Cmd_P
Inp_P
Cmd_RMANL
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
Cmd_/INP
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
:E END
:! 
:N Fnc_RMFLVEC
:S    364,   190,   167
:T Command
:C )! Fnc_RMFLVEC
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Extract Eigv
:D Extract Thin Film Eigenvectors
:K #(POST1+MODAL+TFILM)
:H Hlp_C_RMFLVEC
Cmd_RMFLVEC
 Fld_0
  Typ_Lab
  Prm_[RMFLVEC]   This command extracts modal displacements
 Fld_0
  Typ_Lab
  Prm_           for all nodes contained in component 'FLUN'
:E END
:! 
:N Fnc_RMLVSCALE
:S   1118,   561,   550
:T Command
:C )! Fnc_RMLVSCALE
:C )/NOPR
:C )keyw,kelc1,0
:C )keyw,kelc2,0
:C )keyw,kelc3,0
:C )keyw,kelc4,0
:C )keyw,kelc5,0
:C )*GET,_zr9,rom,,eloa
:C )*if,_zr9,ge,1,then
:C )keyw,kelc1,1
:C )*endif
:C )*if,_zr9,ge,2,then
:C )keyw,kelc2,1
:C )*endif
:C )*if,_zr9,ge,3,then
:C )keyw,kelc3,1
:C )*endif
:C )*if,_zr9,ge,4,then
:C )keyw,kelc4,1
:C )*endif
:C )*if,_zr9,ge,5,then
:C )keyw,kelc5,1
:C )*endif
:C )/GO
:A For ROM
:D Apply Load Vector for ROM Use Pass
:K (lsdyna)
:K #(ROMES+PREP7*SOLUTION)
:H Hlp_C_RMLVSCALE
Cmd_RMLVSCALE
Fld_0
 Typ_Lab
 Prm_[RMLVSCALE]  Apply Load Vector for ROM Use Pass
Fld_2
 Prm_Nload  Number of Load Cases
 Typ_Int
Fld_3
 K_FL(KELC1)
 Prm_FACT1  Case 1 scale factor 
 Typ_REAL
 Def_*GET(rom,1,rmlv)
Fld_4
 K_FL(KELC2)
 Prm_FACT2  Case 2 scale factor 
 Typ_REAL
 Def_*GET(rom,2,rmlv)
Fld_5
 K_FL(KELC3)
 Prm_FACT3  Case 3 scale factor 
 Typ_REAL
 Def_*GET(rom,3,rmlv)
Fld_6
 K_FL(KELC4)
 Prm_FACT4  Case 4 scale factor 
 Typ_REAL
 Def_*GET(rom,4,rmlv)
Fld_7
 K_FL(KELC5)
 Prm_FACT5  Case 5 scale factor 
 Typ_REAL
 Def_*GET(rom,5,rmlv)
:E END
:! 
:N Fnc_RMLVSCALE_dele
:S    352,   190,   155
:T Command
:C )! Fnc_RMLVSCALE_dele
:A For ROM
:D Delete Load Vector for ROM Use Pass
:K (lsdyna)
:K #(ROMES+PREP7*SOLUTION)
:H Hlp_C_RMLVSCALE
Inp_NoApply
Cmd_RMLVSCALE,'DELE'
Fld_0
 Typ_Lab
 Prm_[RMLVSCALE]  This function deletes the load vector in a
Fld_0
 Typ_Lab
 Prm_             ROM Use Pass
:E END
:! 
:N Fnc_RMNDISP
:S    516,   204,   305
:T Command
:C )! Fnc_RMNDISP
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Extract NP DISP
:D Extract Neutral Plane Displacements to a file
:K #(POST1+RESULTS)
:H Hlp_C_RMNDISP
Cmd_RMNDISP
 Fld_0
  Typ_Lab
  Prm_[RMNDISP]  Extract Neutral Plane Displacements to a file
 Fld_2
  Prm_LoadT  Select Load Type
  Typ_Lis_RadioB
  Lis_Test load,'TLOAD'
  Lis_Element load,'ELOAD'
 Fld_3
  Prm_Loc  Append to Element Load file
  Typ_Lis_RadioB
  Lis_No,'WRITE'
  Lis_Yes,'APPEND'
  Def_No
:E END
:! 
:N Fnc_RMNEVEC
:S    376,   199,   170
:T Command
:C )! Fnc_RMNEVEC
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Extract NP Eigv
:D Extract Neutral Plane Eigenvectors
:K #(POST1+RESULTS+MODAL)
:H Hlp_C_RMNEVEC
Cmd_RMNEVEC
 Fld_0
  Typ_Lab
  Prm_[RMNEVEC]  This command extracts the eigenvectors at a
 Fld_0
  Typ_Lab
  Prm_           neutral plane of model from a Modal Analysis.
:E END
:! 
:N Fnc_RMRESU
:S    266,   160,    99
:T Cmd
:C )! Fnc_RMRESU
:C )/NOPR
:C )_z1='*.rom'
:C )/GOPR
:A  Resume
:D Resume ROM Database from File
:H Hlp_C_RMRESUME
Inp_Noapply
Cmd_RMRESU
  Fld_2
   Prm_ [RMRESU]  Resume ROM Database 
   Typ_FILE
   Def_*PAR(_z1)
:E END
:! 
:N Fnc_RMSAVE
:S    263,   152,   104
:T Cmd
:C )! Fnc_RMSAVE
:C )/NOPR
:C )_z1='*.rom'
:C )/GOPR
:A  Save
:D Save ROM Database to File
:H Hlp_C_RMSAVE
Inp_Noapply
Cmd_RMSAVE
  Fld_2
   Prm_ [RMSAVE]  Save ROM Database 
   Typ_FILE_INLINE
   Def_*PAR(_z1)
:E END
:! 
:N Fnc_RMXPORT
:S    233,   117,   109
:T Cmd
:C )! Fnc_RMXPORT
:A  VHDL-AMS 
:D Export to VHDL-AMS
:H Hlp_C_RMXPORT
Inp_Noapply
Cmd_RMXPORT
  Fld_0
   Prm_[RMXPORT]  Export ROM data to external VHDL-AMS simulator.
   Typ_Lab
:E END
:! 
:N Fnc_ROMBRS
:S    268,   164,    97
:T Cmd
:A   Database
:D Electrostatic-Structural ROM Element
:H Hlp_C_RMRESUME
:C )/nopr
:C )_z1='*.rom'
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_RMRESU
 Fld_2
   Prm_ [RMRESU]  Resume ROM Database
   Typ_FILE
   Def_*PAR(_z1)
:E END
:! 
:N Fnc_ROMELM
:S    699,   257,   435
:T Cmd_N
:A   ElecStruc
:D Circuit Building Setup
:C )! Fnc_Cir_WP
:C )/NOPR
:C )*DEL,_z1
:C )KEYW,EXELM,0
:C )*DEL,_z77
:C )*get,_z77,elem,,count
:C )*if,_z77,gt,0,then
:C )KEYW,EXELM,1
:C )*endif
:C )/GO
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_wpstyl,0.01,0.01,,,,,1,1
 K_CM(wprept)
! Exclude_from_paths
Cmd_wpstyl,,,,,,,,1
 K_CM(WPREPT)
Cmd_)*get,_z1,graph,,number
Cmd_)/pnum,mat,1
Cmd_)/number,1
Cmd_)keyw,wprept,1
! Exclude_from_paths
Cmd_/view,all,wp
! Exclude_from_paths
Cmd_/dist,all,0.2
! Exclude_from_paths
Cmd_nplot
 K_CM(exelm)
! Exclude_from_paths
Cmd_eplot
 K_CM(EXELM)
Cmd_)/number,_z1
Cmd_)/UI,WPSE
! Cust_Cmd_WPSTYL
Cal_Fnc_ROMELM_0
:E END
:! 
:N Fnc_ROMELM_0
:S    266,   133,   126
:T Cmd_P
:A   ElecStruc
:D Electrostatic-Structural ROM Element
:H Hlp_E_S4.144
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[ROM144]  Pick 1 WP locations
  Min_1
  Mok_1
  Pwr_1
  Pfm_1
  Rub_217
Cal_Fnc_MeROMBD_1
:E END
:! 
:N Fnc_ROM_VSweep
:S    727,   158,   562
:T Command
:C )! Fnc_ROM_VSweep
:A  Voltage Sweep
:D Perform a ROM Voltage Sweep 
:K (lsdyna+ROMES)
:H Hlp_C_DCVSWP
Inp_NoApply
Cmd_DCVSWP
 Fld_0
  Typ_Lab
  Prm_[DCVSWP]  ROM Voltage Sweep
 Fld_2
  Prm_Option  Sweep Option
  Typ_Lis_RadioB
  Lis_Sweep to Vmax,'GV'
  Lis_Sweep to Pull-in,'PI'
 Fld_3
  Prm_elem   Element Number
  Typ_Int
  DEF_Blank
 Fld_4
  Prm_cnum   Conductor number
  Typ_Int
  DEF_Blank
 Fld_5
  Prm_vmax   Maximum Voltage
  Typ_REAL
  DEF_Blank
 Fld_6
  Prm_vinc1  Voltage inc. for Vmax
  Typ_REAL
  DEF_Blank
 Fld_7
  Prm_vinc2  Voltage inc. for Pull-in
  Typ_REAL
  DEF_1
 Fld_8
  Prm_gap    Create gap elements
  Typ_Lis_RadioB
  LIS_Yes,0
  LIS_No,1
:E END
:! 
:N Fnc_RPOLY
:S    333,   135,   191
:T Command
:C )! Fnc_RPOLY
:A By Side Length
:D Polygon by Side Length
:K #(PREP7)
:H Hlp_C_RPOLY
Cmd_RPOLY
 Fld_0
  Typ_Lab
  Prm_[RPOLY]  Create Polygon by Side Length
 Fld_2
  Typ_INT
  Prm_NSIDES  Number of sides
  Def_3
 Fld_3
  Typ_REAL
  Prm_LSIDE   Length of each side
  Def_Blank
:E END
:! 
:N Fnc_RPOLY_major
:S    370,   158,   205
:T Command
:C )! Fnc_RPOLY_major
:A By Circumscr Rad
:D Polygon by Circumscribed Radius
:K #(PREP7)
:H Hlp_C_RPOLY
Cmd_RPOLY
 Fld_0
  Typ_Lab
  Prm_[RPOLY]  Create Polygon by Circumscribed Radius
 Fld_2
  Typ_INT
  Prm_NSIDES  Number of sides
  Def_3
 Fld_4
  Typ_REAL
  Prm_MAJRAD  Major (circumscr) radius
  Def_Blank
:E END
:! 
:N Fnc_RPOLY_minor
:S    362,   154,   201
:T Command
:C )! Fnc_RPOLY_minor
:A By Inscribed Rad
:D Polygon by Inscribed Radius
:K #(PREP7)
:H Hlp_C_RPOLY
Cmd_RPOLY
 Fld_0
  Typ_Lab
  Prm_[RPOLY]  Create Polygon by Inscribed Radius
 Fld_2
  Typ_INT
  Prm_NSIDES  Number of sides
  Def_3
 Fld_5
  Typ_REAL
  Prm_MINRAD  Minor (inscribed) radius
  Def_Blank
:E END
:! 
:N Fnc_RPR4
:S    425,   131,   287
:T Cmd_P
:C )! Fnc_RPR4
:A Triangular
:D Triangular Prism
:H Hlp_C_RPR4
:K #(PREP7)
:P (mdl2d)
Inp_P
Cmd_RPR4
 Fld_0
  Typ_XYZ_WP
  Prm_[RPR4] Pick 3 WP locations -- center, vertex (radius + theta), Z depth
  Min_3
  Max_3
  Rub_113
 Fld_2
  Typ_DEF_3
 Fld_3
  Typ_Def_*PICK(1)
 Fld_4
  Typ_Def_*PICK(2)
 Fld_5
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
 Fld_7
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_RPR4_2d
:S    384,   123,   254
:T Cmd_P
:C )! Fnc_RPR4_2d
:A Triangle
:D Triangular Area
:K #(PREP7)
:H Hlp_C_RPR4
Inp_P
Cmd_RPR4
 Fld_0
  Typ_XYZ_WP
  Prm_[RPR4] Pick 2 WP locations -- center and vertex (radius + theta)
  Min_2
  Max_2
  Rub_13
 Fld_2
  Typ_DEF_3
 Fld_3
  Typ_Def_*PICK(1)
 Fld_4
  Typ_Def_*PICK(2)
 Fld_5
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
:E END
:! 
:N Fnc_RPR4_4
:S    421,   127,   287
:T Cmd_P
:C )! Fnc_RPR4_4
:A Square
:D Square Prism
:H Hlp_C_RPR4
:K #(PREP7)
:P (mdl2d)
Inp_P
Cmd_RPR4
 Fld_0
  Typ_XYZ_WP
  Prm_[RPR4] Pick 3 WP locations -- center, vertex (radius + theta), Z depth
  Min_3
  Max_3
  Rub_114
 Fld_2
  Typ_DEF_4
 Fld_3
  Typ_Def_*PICK(1)
 Fld_4
  Typ_Def_*PICK(2)
 Fld_5
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
 Fld_7
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_RPR4_4_2d
:S    393,   132,   254
:T Cmd_P
:C )! Fnc_RPR4_4_2d
:A Square
:D Square Area
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_RPR4
Inp_P
Cmd_RPR4
 Fld_0
  Typ_XYZ_WP
  Prm_[RPR4] Pick 2 WP locations -- center and vertex (radius + theta)
  Min_2
  Max_2
  Rub_14
 Fld_2
  Typ_DEF_4
 Fld_3
  Typ_Def_*PICK(1)
 Fld_4
  Typ_Def_*PICK(2)
 Fld_5
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
:E END
:! 
:N Fnc_RPR4_5
:S    418,   124,   287
:T Cmd_P
:C )! Fnc_RPR4_5
:A Pentagonal
:D Pentagonal Prism 
:H Hlp_C_RPR4
:P (mdl2d)
Inp_P
Cmd_RPR4
 Fld_0
  Typ_XYZ_WP
  Prm_[RPR4] Pick 3 WP locations -- center, vertex (radius + theta), Z depth
  Min_3
  Max_3
  Rub_115
 Fld_2
  Typ_DEF_5
 Fld_3
  Typ_Def_*PICK(1)
 Fld_4
  Typ_Def_*PICK(2)
 Fld_5
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
 Fld_7
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_RPR4_5_2d
:S    376,   115,   254
:T Cmd_P
:C )! Fnc_RPR4_5_2d
:A Pentagon
:D Pentagonal Area
:H Hlp_C_RPR4
Inp_P
Cmd_RPR4
 Fld_0
  Typ_XYZ_WP
  Prm_[RPR4] Pick 2 WP locations -- center and vertex (radius + theta)
  Min_2
  Max_2
  Rub_15
 Fld_2
  Typ_DEF_5
 Fld_3
  Typ_Def_*PICK(1)
 Fld_4
  Typ_Def_*PICK(2)
 Fld_5
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
:E END
:! 
:N Fnc_RPR4_6
:S    415,   121,   287
:T Cmd_P
:C )! Fnc_RPR4_6
:A Hexagonal
:D Hexagonal Prism
:H Hlp_C_RPR4
:P (mdl2d)
Inp_P
Cmd_RPR4
 Fld_0
  Typ_XYZ_WP
  Prm_[RPR4] Pick 3 WP locations -- center, vertex (radius + theta), Z depth
  Min_3
  Max_3
  Rub_116
 Fld_2
  Typ_DEF_6
 Fld_3
  Typ_Def_*PICK(1)
 Fld_4
  Typ_Def_*PICK(2)
 Fld_5
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
 Fld_7
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_RPR4_6_2d
:S    374,   113,   254
:T Cmd_P
:C )! Fnc_RPR4_6_2d
:A Hexagon
:D Hexagonal Area
:H Hlp_C_RPR4
Inp_P
Cmd_RPR4
 Fld_0
  Typ_XYZ_WP
  Prm_[RPR4] Pick 2 WP locations -- center and vertex (radius + theta)
  Min_2
  Max_2
  Rub_16
 Fld_2
  Typ_DEF_6
 Fld_3
  Typ_Def_*PICK(1)
 Fld_4
  Typ_Def_*PICK(2)
 Fld_5
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
:E END
:! 
:N Fnc_RPR4_7
:S    417,   123,   287
:T Cmd_P
:C )! Fnc_RPR4_7
:A Septagonal
:D Septagonal Prism
:H Hlp_C_RPR4
:P (mdl2d)
Inp_P
Cmd_RPR4
 Fld_0
  Typ_XYZ_WP
  Prm_[RPR4] Pick 3 WP locations -- center, vertex (radius + theta), Z depth
  Min_3
  Max_3
  Rub_117
 Fld_2
  Typ_DEF_7
 Fld_3
  Typ_Def_*PICK(1)
 Fld_4
  Typ_Def_*PICK(2)
 Fld_5
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
 Fld_7
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_RPR4_7_2d
:S    376,   115,   254
:T Cmd_P
:C )! Fnc_RPR4_7_2d
:A Septagon
:D Septagonal Area
:H Hlp_C_RPR4
Inp_P
Cmd_RPR4
 Fld_0
  Typ_XYZ_WP
  Prm_[RPR4] Pick 2 WP locations -- center and vertex (radius + theta)
  Min_2
  Max_2
  Rub_17
 Fld_2
  Typ_DEF_7
 Fld_3
  Typ_Def_*PICK(1)
 Fld_4
  Typ_Def_*PICK(2)
 Fld_5
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
:E END
:! 
:N Fnc_RPR4_8
:S    415,   121,   287
:T Cmd_P
:C )! Fnc_RPR4_8
:A Octagonal
:D Octagonal Prism
:H Hlp_C_RPR4
:P (mdl2d)
Inp_P
Cmd_RPR4
 Fld_0
  Typ_XYZ_WP
  Prm_[RPR4] Pick 3 WP locations -- center, vertex (radius + theta), Z depth
  Min_3
  Max_3
  Rub_118
 Fld_2
  Typ_DEF_8
 Fld_3
  Typ_Def_*PICK(1)
 Fld_4
  Typ_Def_*PICK(2)
 Fld_5
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
 Fld_7
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_RPR4_8_2d
:S    374,   113,   254
:T Cmd_P
:C )! Fnc_RPR4_8_2d
:A Octagon
:D Octagonal Area
:H Hlp_C_RPR4
Inp_P
Cmd_RPR4
 Fld_0
  Typ_XYZ_WP
  Prm_[RPR4] Pick 2 WP locations -- center and vertex (radius + theta)
  Min_2
  Max_2
  Rub_18
 Fld_2
  Typ_DEF_8
 Fld_3
  Typ_Def_*PICK(1)
 Fld_4
  Typ_Def_*PICK(2)
 Fld_5
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
:E END
:! 
:N Fnc_RPRISM
:S    406,   147,   252
:T Command
:C )! Fnc_RPRISM
:A By Side Length
:D Prism by Side Length
:K #(PREP7)
:H Hlp_C_RPRISM
:P (mdl2d)
Cmd_RPRISM
 Fld_0
  Typ_Lab
  Prm_[RPRISM]  Create Prism by Side Length
 Fld_2
  Typ_REAL2
  Prm_Z1,Z2   Z-coordinates
  Def_0,Blank
 Fld_4
  Typ_INT
  Prm_NSIDES  Number of sides
  Def_3
 Fld_5
  Typ_REAL
  Prm_LSIDE   Length of each side
  Def_Blank
:E END
:! 
:N Fnc_RPRISM_major
:S    443,   170,   266
:T Command
:C )! Fnc_RPRISM_major
:A By Circumscr Rad
:D Prism by Circumscribed Radius
:K #(PREP7)
:H Hlp_C_RPRISM
:P (mdl2d)
Cmd_RPRISM
 Fld_0
  Typ_Lab
  Prm_[RPRISM]  Create Prism by Circumscribed Radius
 Fld_2
  Typ_REAL2
  Prm_Z1,Z2   Z-coordinates
  Def_0,Blank
 Fld_4
  Typ_INT
  Prm_NSIDES  Number of sides
  Def_3
 Fld_6
  Typ_REAL
  Prm_MAJRAD  Major (circumscr) radius
  Def_Blank
:E END
:! 
:N Fnc_RPRISM_minor
:S    435,   166,   262
:T Command
:C )! Fnc_RPRISM_minor
:A By Inscribed Rad
:D Prism by Inscribed Radius
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_RPRISM
Cmd_RPRISM
 Fld_0
  Typ_Lab
  Prm_[RPRISM]  Create Prism by Inscribed Radius
 Fld_2
  Typ_REAL2
  Prm_Z1,Z2   Z-coordinates
  Def_0,Blank
 Fld_4
  Typ_INT
  Prm_NSIDES  Number of sides
  Def_3
 Fld_7
  Typ_REAL
  Prm_MINRAD  Minor (inscribed) radius
  Def_Blank
:E END
:! 
:N Fnc_RPRT_GEN
:S    166,   110,    49
:T Cmd
:C )!  Fnc_RPRT_GEN
:A    Report Generator
:D Report Generator
Inp_P
Cmd_)~eui,'euidl::report::toolbar::create'
:E END
:! 
:N Fnc_RPSD
:S    369,   334,    28
:T Command
:C )! Fnc_RPSD
:C )/NOPR
:C )*DEL,_z1
:C )*DO,_z1,1,200
:C )/NOPR
:C )*GET,_z2,common,,cpst26,,int,(612+_z1) ! variable number to be used next
:C )*IF,_z2,EQ,0,EXIT
:C )*ENDDO
:C )/GO
:A Calc Resp PSD 
:D Calculate Response PSD
:K (lsdyna)
:K #((POST26+PSDRANDM)*NOFILTER)
:P (FULL_ANS)
Inp_P
Cmd_)!
Cal_Fnc_RPSD_1
:E END
:! 
:N Fnc_RPSD_1
:S    796,   157,   632
:T Command
:C )! Fnc_RPSD_1
:A Calc Resp PSD 
:D Calculate Response PSD
:K #((POST26+PSDRANDM)*NOFILTER)
:H Hlp_C_RPSD
Cmd_RPSD
Fld_0
 Typ_Lab
 Prm_[RPSD]  Calculate Response PSD
Fld_2
 Prm_IR     Reference  number of -
 Typ_INT
 Def_*PAR(_z1)
Fld_0
 Typ_Lab
 Prm_       - resulting variable
Fld_3
 Prm_IA,IB  Ref no. of variables -
 Typ_Int2
 Def_Blank,Blank
Fld_0
 Typ_Lab
 Prm_       - to be operated on
Fld_5
 Prm_ITYPE  Type of response PSD
 Typ_Lis_OptionB
  Lis_Displacement,1
  Lis_Velocity,    2
  Lis_Acceleration,3
  Def_1
Fld_6
 Prm_DATUM  Ref w.r.t. which -
 Typ_Lis_OptionB
  Lis_Absolute value,1
  Lis_Relative to base,2
  Def_2
Fld_0
 Typ_Lab
 Prm_       - resp PSD is calculated
Fld_7
 Prm_NAME   User-specified label
 Typ_Char
 Def_
:E END
:! 
:N Fnc_RSFIT1
:S   1141,   165,   969
:T Cmd
:C )! Fnc_RSFIT1
:A    Fit Resp Surf
:D Fit a Response Surface for an Output Parameter
:H Hlp_C_RSFIT
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_)*CSET,1,6
  Fld_0
    Typ_LAB
    Prm_ [RSFIT]  Fit a Response Surface for an Output Parameter
  Fld_2
    Prm_ RSlab    Response Surface Set
    Typ_CHAR,32,32
  Fld_3
    Prm_ Slab     Solution Set Label
    Typ_LIS
    LIS_*READ,SLAB  ! List of solution set labels
  Fld_4
    Prm_ Name     Random Output Parametr
    Typ_LIS
    LIS_*READ,RP
  Fld_5
    Prm_ Rmod     Regression Model
    Typ_LIS_OptionB
    Lis_Linear Terms    ,LIN
    Lis_Quadr. no Xterms,QUAD
    Lis_Quadr. w. Xterms,QUAX
    Def_QUAX
  Fld_6
    Prm_ Ytrans   Output Transformation
    Typ_LIS_OptionB
    Lis_NO Transformatn ,0
    Lis_Exponential     ,1
    Lis_Logarithm Base A,2
    Lis_Logarithm Naturl,3
    Lis_Logarithm 10    ,4
    Lis_Square Root     ,5
    Lis_Y to the Power  ,6
    Lis_Box-Cox Transf. ,7
    Def_0
  Fld_7
    Prm_ Xfilt    Filter Regress. Terms
    Typ_LIS_OptionB
    Lis_NO Filtering    ,0
    Lis_ForwStepwRegress,1
    Def_1
Cal_Fnc_RSFIT2
:E END
:! 
:N Fnc_RSFIT2
:S   1810,   872,   931
:T Cmd
:C )! Fnc_RSFIT
:A    Fit Resp Surf
:D Fit a Response Surface for an Output Parameter
:H Hlp_C_RSFIT
:C )/NOPR
:C )*GET,_Z1,CPAR,5         ! get parameter 5 defined with *CSET
:C )KEYW,KEY1,0
:C )KEYW,KEY2,0
:C )KEYW,KEY3,0
:C )_ZC1=
:C )*IF,_Z1,EQ,0,THEN
:C )_ZC1='NONE'
:C )*ELSEIF,_Z1,EQ,1,THEN
:C )_ZC1='EXP'
:C )*ELSEIF,_Z1,EQ,2,THEN
:C )KEYW,KEY1,1
:C )_ZC1='LOGA'
:C )*ELSEIF,_Z1,EQ,3,THEN
:C )_ZC1='LOGN'
:C )*ELSEIF,_Z1,EQ,4,THEN
:C )_ZC1='LOG1'
:C )*ELSEIF,_Z1,EQ,5,THEN
:C )_ZC1='SQRT'
:C )*ELSEIF,_Z1,EQ,6,THEN
:C )KEYW,KEY2,1
:C )_ZC1='POW'
:C )*ELSEIF,_Z1,EQ,7,THEN
:C )KEYW,KEY3,1
:C )_ZC1='BOX'
:C )*endif
:C )*GET,_Z1,CPAR,6         ! get parameter 6 defined with *CSET
:C )_ZC2=
:C )KEYW,KEY4,0
:C )*IF,_Z1,EQ,0,THEN
:C )_ZC2='NONE'
:C )*ELSEIF,_Z1,EQ,1,THEN
:C )KEYW,KEY4,1
:C )_ZC2='FSR'
:C )*endif
:C )/GO
K_LN(key1&key2&key3&key4)
Inp_P
K_LN(KEY1|KEY2|KEY3|KEY4)
Inp_Noapply
Cmd_RSFIT
  Fld_0
    Typ_LAB
    Prm_ [RSFIT]  Fit a Response Surface for an Output Parameter
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_*CPAR(3)
  Fld_5
    Typ_DEF_*CPAR(4)
  Fld_6
    Typ_DEF_*PAR(_ZC1)
  Fld_7
    K_FL(key1&key2&key3)
    Typ_DEF_*PAR(0.0)
  Fld_7
    K_FL(KEY1)
    Prm_ Yval     Logarithm Basis
    Typ_REAL
    Def_1.0
  Fld_7
    K_FL(KEY2)
    Prm_ Yval     Power Value
    Typ_REAL
    Def_1.0
  Fld_7
    K_FL(KEY3)
    Prm_ Yval     Step Length for Lambda
    Typ_REAL
    Def_0.1
  Fld_8
    Typ_DEF_*PAR(_ZC2)
  Fld_9
    K_FL(key4)
    Typ_DEF_*PAR(0.0)
  Fld_9
    K_FL(KEY4)
    Prm_ CONF     Confidence Level
    Typ_REAL
    Def_0.95
  Fld_0
    K_FL(KEY4)
    Typ_LAB
    Prm_          NOTE: 0.0 < CONF < 1.0 ! Default is 0.95.
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_ZC1  $)*DEL,_ZC2
Cmd_)/GO
:E END
:! 
:N Fnc_RSFIT_ENTRY
:S    352,   227,   118
:T Cmd
:C )! Fnc_RSFIT_ENTRY
:A    Fit Resp Surf
:D Fit a Response Surface for an Output Parameter
:H Hlp_C_RSFIT
:C )/NOPR
:C )*GET,_Z1,PDS,,NSOL       ! No. of solution sets
:C )/GO
Inp_P
Cmd_)!
  Fld_2
    Typ_DEF_*PAR(_Z1)
Cmd_)/NOPR  $)*DEL,_Z1   $)/GO
Cal_Fnc_RS_NOSOLSET,2,LE,0,1
Cal_Fnc_RSFIT1
:E END
:! 
:N Fnc_RSOUT
:S    856,   217,   632
:T Cmd
:C )! Fnc_RSOUT
:A    Write Sim Dat
:D Write Monte Carlo Simulations on Response Surfaces fo File
:H Hlp_C_RSOUT
:C )/NOPR
:C )*SET,_ZU,'*.dat'
:C )*SET,_ZP,'*.dat'
:C )/GO
Fmt_H
Inp_Noapply
Cmd_RSOUT
  Fld_0
    Typ_LAB
    Prm_ [RSOUT]   Write Response Surface Simulation Data to File
  Fld_2
    Prm_ RSlab     Response Surface Set
    Typ_LIS
    LIS_*READ,RSSL  ! List of Response Surface Set Labels
  Fld_3
    Prm_ Name      Select Parameter
    Typ_LIS
    LIS_ALL,ALL
    LIS_*READ,RP
  Fld_4
    Prm_ SORT      Sort Ascending Order
    Typ_Lis_RadioB
    LIS_NO  Write as is,NO
    LIS_YES Sort ascend,YES
    DEF_NO
  Fld_5
    Prm_  File to save to
    Typ_FILE_INLINE
K_LN(intelnt&alphant)
  Def_*STR(%_ZU%)
K_LN(INTELNT|ALPHANT)
  Def_*STR(%_ZP%)
Cmd_)/NOPR  $)*DEL,_ZU   $)*DEL,_ZP   $)/GO
:E END
:! 
:N Fnc_RSPLOT
:S   1196,   167,  1022
:T Cmd
:C )! Fnc_RSPLOT
:A    Plt Resp Surf
:D Plot a Response Surface for an Output Parameter
:H Hlp_C_RSPLOT
:C )/NOPR
:C )/GO
Cmd_RSPLOT
  Fld_0
    Typ_LAB
    Prm_ [RSPLOT] Plot a Response Surface for an Output Parameter
  Fld_2
    Prm_ RSlab    Response Surface Set
    Typ_LIS
    LIS_*READ,RSSL  ! List of Response Surface Set Labels
  Fld_3
    Prm_ YName    Random Output Parametr
    Typ_LIS
    LIS_*READ,RP
  Fld_4
    Prm_ X1Name   Random Input Parameter
    Typ_LIS_OptionB
    LIS_*READ,RV
  Fld_5
    Prm_ X2Name   Random Input Parameter
    Typ_LIS_OptionB
    LIS_*READ,RV
  Fld_6
    Prm_ Type     Type of Plot
    Typ_Lis_RADIOB
    Lis_2D Contour  Plot,2D
    Lis_3D Topology Plot,3D
    Def_3D
  Fld_7
    Prm_ NPTS     No. Axis Grid Points
    Typ_INT
    Def_20
  Fld_8
    Prm_ PLOW     Lower probability
    Typ_REAL
  Fld_9
    Prm_ PUP      Upper probability
    Typ_REAL
  Fld_0
    Typ_LAB
    Prm_          NOTE: The lower and upper probabilities are
  Fld_0
    Typ_LAB
    Prm_                used to determine the plotting range for
  Fld_0
    Typ_LAB
    Prm_                random variables that have no bounds.
:E END
:! 
:N Fnc_RSPLOT_ENTRY
:S    360,   236,   117
:T Cmd
:C )! Fnc_RSPLOT_ENTRY
:A    Plt Resp Surf
:D Plot a Response Surface for an Output Parameter
:H Hlp_C_RSPLOT
:C )/NOPR
:C )*GET,_Z1,PDS,,NRSS       ! No. of response surf sets
:C )/GO
Inp_P
Cmd_)!
  Fld_2
    Typ_DEF_*PAR(_Z1)
Cmd_)/NOPR  $)*DEL,_Z1   $)/GO
Cal_Fnc_RS_NORSSET,2,LE,0,1
Cal_Fnc_RSPLOT
:E END
:! 
:N Fnc_RSPRNT1
:S    661,   170,   484
:T Cmd
:C )! Fnc_RSPRNT1
:A    Prn Resp Surf
:D Print a Response Surface for an Output Parameter
:H Hlp_C_RSPRNT
:C )/NOPR
:C )/GO
Cmd_)*CSET,1,3
  Fld_0
    Typ_LAB
    Prm_ [RSPRNT] Print a Response Surface for an Output Parameter
  Fld_2
    Prm_ RSlab    Response Surface Set
    Typ_LIS
    LIS_*READ,RSSL  ! List of Response Surface Set Labels
  Fld_3
    Prm_ YName    Random Output Parametr
    Typ_LIS
    LIS_*READ,RP
  Fld_4
    Prm_ Xout      Extended Print Info
    Typ_Lis_RadioB
    LIS_NO  Stand. Print,NO
    LIS_YES Extend Print,YES
    DEF_NO
Cal_Fnc_RSPRNT2,4,ES,NO,1
Cal_Fnc_RSPRNT3,4,ES,YES,1
:E END
:! 
:N Fnc_RSPRNT2
:S    281,   170,   104
:T Cmd
:C )! Fnc_RSPRNT2
:A    Prn Resp Surf
:D Print a Response Surface for an Output Parameter
:H Hlp_C_RSPRNT
:C )/NOPR
:C )/GO
Inp_P
Cmd_RSPRNT
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_*CPAR(3)
:E END
:! 
:N Fnc_RSPRNT3
:S    605,   170,   428
:T Cmd
:C )! Fnc_RSPRNT3
:A    Prn Resp Surf
:D Print a Response Surface for an Output Parameter
:H Hlp_C_RSPRNT
:C )/NOPR
:C )/GO
Cmd_RSPRNT
  Fld_0
    Typ_LAB
    Prm_ [RSPRNT] Print a Response Surface for an Output Parameter
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_*CPAR(3)
  Fld_5
    Prm_ CONF      Confidence Level
    Typ_REAL
    Def_0.95
  Fld_0
    Typ_LAB
    Prm_           NOTE: 0.0 < CONF < 1.0 ! Default is 0.95.
  Fld_0
    Typ_LAB
    Prm_                 Confidence bounds are suppressed for CONF<0.5.
:E END
:! 
:N Fnc_RSPRNT_ENTRY
:S    362,   237,   118
:T Cmd
:C )! Fnc_RSPRNT_ENTRY
:A    Prn Resp Surf
:D Print a Response Surface for an Output Parameter
:H Hlp_C_RSPRNT
:C )/NOPR
:C )*GET,_Z1,PDS,,NRSS       ! No. of response surf sets
:C )/GO
Inp_P
Cmd_)!
  Fld_2
    Typ_DEF_*PAR(_Z1)
Cmd_)/NOPR  $)*DEL,_Z1   $)/GO
Cal_Fnc_RS_NORSSET,2,LE,0,1
Cal_Fnc_RSPRNT1
:E END
:! 
:N Fnc_RSSIMS
:S   1561,   359,  1195
:T Cmd
:C )! Fnc_RSSIMS
:A    RS Simulation
:D Generate Monte Carlo Simulations on Response Surfaces
:H Hlp_C_RSSIMS
:C )/NOPR
:C )_Z1=10000
:C )KEYW,KEY1,0
:C )*GET,_Z2,PARM,_PDS_MCS_LOOPS,TYPE
:C )*IF,_Z2,EQ,0,THEN
:C )*IF,_PDS_MCS_LOOPS,GT,_Z1,THEN
:C )_Z1=_PDS_MCS_LOOPS
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_Noapply
Cmd_)*CSET,1,2
  Fld_0
    Typ_LAB
    Prm_ [RSSIMS]  Post-Samples on Response Surfaces
  Fld_2
    Prm_ RSlab     Response Surface Set
    Typ_LIS
    LIS_*READ,RSSL  ! List of Response Surface Set Labels
  Fld_3
    Prm_ NSIM      No. of simulations
    Typ_INT
    DEF_*PAR(_Z1)
  Fld_4
    Prm_ Seed      Random Seed Option
    Typ_Lis_RADIOB
    Lis_Continue    CONT,0
    Lis_System Time TIME,-2
    Lis_Use 123457  INIT,-1
    Lis_Other ...       ,1
    Def_0
  Fld_0
    Typ_LAB
    Prm_ NOTE: Simulations are appended to previously
  Fld_0
    Typ_LAB
    Prm_       existing ones, resulting in a total number of
  Fld_0
    Typ_LAB
    Prm_       "Nold+NSIM" simulations for the selected solution set.
  Fld_0
    K_FL(KEY1)
    Typ_LAB
    Prm_ NOTE: The number of simulations in the NSIM field has been
  Fld_0
    K_FL(KEY1)
    Typ_LAB
    Prm_       increased from the default value of 10000 due to your
  Fld_0
    K_FL(KEY1)
    Typ_LAB
    Prm_       specifications in the probabilistic methods wizard.
Cmd_)/NOPR  $)*DEL,_Z1   $)*DEL,_Z2   $)/GO
Cal_Fnc_RSSIMS_CONT,4,EQ,0,1
Cal_Fnc_RSSIMS_TIME,4,EQ,-2,1
Cal_Fnc_RSSIMS_INIT,4,EQ,-1,1
Cal_Fnc_RSSIMS_SEED,4,EQ,1,1
:E END
:! 
:N Fnc_RSSIMS_CONT
:S    213,   106,   100
:T Cmd
:C )! Fnc_RSSIMS_CONT
:H Hlp_C_RSSIMS
:C )/NOPR
:C )/GO
Inp_P
Cmd_RSSIMS
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_CONT
:E END
:! 
:N Fnc_RSSIMS_ENTRY
:S    366,   242,   117
:T Cmd
:C )! Fnc_RSSIMS_ENTRY
:A    RS Simulation
:D Generate Monte Carlo Simulations on Response Surfaces
:H Hlp_C_RSSIMS
:C )/NOPR
:C )*GET,_Z1,PDS,,NRSS       ! No. of response surf sets
:C )/GO
Inp_P
Cmd_)!
  Fld_2
    Typ_DEF_*PAR(_Z1)
Cmd_)/NOPR  $)*DEL,_Z1   $)/GO
Cal_Fnc_RS_NORSSET,2,LE,0,1
Cal_Fnc_RSSIMS
:E END
:! 
:N Fnc_RSSIMS_INIT
:S    270,   163,   100
:T Cmd
:C )! Fnc_RSSIMS_INIT
:D Generate Monte Carlo Simulations on Response Surfaces
:H Hlp_C_RSSIMS
:C )/NOPR
:C )/GO
Inp_P
Cmd_RSSIMS
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_INIT
:E END
:! 
:N Fnc_RSSIMS_SEED
:S    521,   145,   369
:T Cmd
:C )! Fnc_RSSIMS_SEED
:A    Seed value
:D Specify Seed Value
:H Hlp_C_RSSIMS
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_RSSIMS
  Fld_0
    Prm_ [RSSIMS]  Define Seed Value for Monte Carlo Simulations
    Typ_LAB
  Fld_0
    Prm_           on the Response Surface(s)
    Typ_LAB
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Prm_ Seed > 0  Seed value
    Typ_INT
    Def_123457
Cmd_)/NOPR
Cmd_)*DEL,_Z1  $)*DEL,_Z2  $)*DEL,_Z3
Cmd_)*DEL,_ZC
Cmd_)/GO
:E END
:! 
:N Fnc_RSSIMS_TIME
:S    270,   163,   100
:T Cmd
:C )! Fnc_RSSIMS_TIME
:D Generate Monte Carlo Simulations on Response Surfaces
:H Hlp_C_RSSIMS
:C )/NOPR
:C )/GO
Inp_P
Cmd_RSSIMS
  Fld_2
    Typ_DEF_*CPAR(1)
  Fld_3
    Typ_DEF_*CPAR(2)
  Fld_4
    Typ_DEF_TIME
:E END
:! 
:N Fnc_RS_NORSSET
:S    654,   136,   511
:T Cmd
:C )! Fnc_RS_NORSSET
:D There are NO Response Surfaces available yet
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_)!
  Fld_0
    Prm_
  Fld_0
    Prm_                   - NOTE -
    Typ_LAB
  Fld_0
    Prm_  There are no response surface sets defined yet.
    Typ_LAB
  Fld_0
    Prm_  You need to fit a response surface first using the
    Typ_LAB
  Fld_0
    Prm_  RSFIT command [-Response Surf- / Fit Resp Surf...]
    Typ_LAB
  Fld_0
    Prm_  or resume a probabilistic database that includes a
    Typ_LAB
  Fld_0
    Prm_  response surface set [-Prob Database-/ Resume...].
    Typ_LAB
  Fld_0
    Prm_
:E END
:! 
:N Fnc_RS_NOSOLSET
:S    575,   134,   434
:T Cmd
:C )! Fnc_RS_NOSOLSET
:D There are NO Solution Sets available yet
:C )/NOPR
:C )/GO
Inp_Noapply
Cmd_)!
  Fld_0
    Prm_
  Fld_0
    Prm_                   - NOTE -
    Typ_LAB
  Fld_0
    Prm_  There are no solution sets defined yet.
    Typ_LAB
  Fld_0
    Prm_  You need to perform a probabilistic analysis first
    Typ_LAB
  Fld_0
    Prm_  [  Run >] or resume a probabilistic database that includes
    Typ_LAB
  Fld_0
    Prm_  a probabilistic analysis [-Prob Database-/ Resume...].
    Typ_LAB
  Fld_0
    Prm_
:E END
:! 
:N Fnc_RTHICK
:S    589,   167,   415
:T Command
:C )! Fnc_RTHICK
:A Thickness Func
:D Function of Shell Thickness vs Node Number
:K #(PREP7*SOLUTION)
:H Hlp_C_RTHICK
Inp_NoApply
Cmd_RTHICK
 Fld_0
  Typ_Lab
  Prm_[RTHICK]  Function of Shell Thickness vs Node Number
 Fld_2
  Prm_Par   Name of array parameter
  Typ_CHAR,32,32
 Fld_3
  Prm_IPOS  Real positn of node I thck
  Typ_Int
  Def_1
 Fld_4
  Prm_JPOS  Real positn of node J thck
  Typ_Int
  Def_2
 Fld_5
  Prm_KPOS  Real positn of node K thck
  Typ_Int
  Def_3
 Fld_6
  Prm_LPOS  Real positn of node L thck
  Typ_Int
  Def_4
:E END
:! 
:N Fnc_RZN_CreateCM
:S    485,    78,   400
:T Cmd
:A Create Rezone Component
Inp_NoApply
Fld_0
 Typ_Lab
 Prm_A component of the currently selected elements will be created.  This
Fld_0
 Typ_Lab
 Prm_component can then be read in rezoning as the new regions to remesh.
! Exclude_from_paths
Cmd_CM,REZONE_CM,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,REZONE_CM
Cmd_)~eui,'apdl::noerr 1'
Cmd_)~eui,'catch {ans_sendcommand CMWRITE,[ansys::getJobname]_rez,cm}'
Cmd_)~eui,'apdl::noerr 0'
:E END
:! 
:N Fnc_RZN_DESIZE
:S    118,    83,    28
:T Cmd
:A Default Element Sizing Options
Inp_P
Cmd_)!
Cal_Fnc_DESIZE
:E END
:! 
:N Fnc_RZN_DONE
:S    313,   105,   201
:T Cmd
:A Finish
:D Complete the Rezoning Process
:K #(REMESHRZ)
Inp_NoApply
Fld_0
 Typ_Lab
 Prm_[REMESH,FINISH] This operation will transfer all boundary conditions and
Fld_0
 Typ_Lab
 Prm_loads from the original mesh to the new mesh.
Cmd_REMESH,FINISH
Cal_REFRESH
:E End
:! 
:N Fnc_RZN_Finish
:S    282,   105,   170
:T Cmd
:A Cancel
:D Cancel the rezoning process
:K #(REMESHRZ)
Inp_NoApply
Fld_0
 Typ_Lab
 Prm_This operation will allow you to get back to the start operation.
Cmd_REMESH,FINISH
Cmd_)KEYW,REMESHRZ,0
Cmd_)KEYW,MAPSRDRZ,0
Cal_REFRESH
:E End
:! 
:N Fnc_RZN_KSCON
:S    107,    73,    27
:T Cmd
:A Skew Mesh at Keypoint
Inp_P
Cmd_)!
Cal_Fnc_KSCON
:E END
:! 
:N Fnc_RZN_LCCAT
:S    103,    69,    27
:T Cmd
:A Concatenate Lines
Inp_P
Cmd_)!
Cal_Fnc_LCCAT
:E END
:! 
:N Fnc_RZN_LCCAT_del
:S    199,   125,    67
:T Cmd
:A Delete Concatenated Lines
:D Delete Concatenated Lines
:K #(REMESHRZ)
Inp_NoApply
Fld_0
 Typ_Lab
 Prm_WHAT DOES THIS OPERATION DO
Cmd_)!
:E End
:! 
:N Fnc_RZN_LCOMB
:S    171,    97,    67
:T Cmd
:A Combine Lines
:D Combine Lines
:K #(REMESHRZ)
Inp_NoApply
Fld_0
 Typ_Lab
 Prm_WHAT DOES THIS OPERATION DO
Cmd_)!
:E End
:! 
:N Fnc_RZN_MshrOpts
:S    114,    77,    30
:T Cmd
:A Global Meshing Options
Inp_P
Cmd_)!
Cal_Fnc_MshrOpts
:E END
:! 
:N Fnc_RZN_ReadFile
:S    462,   233,   222
:T Command
:C )! Fnc_RZN_ReadFile
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),' '
:C )/GO
:A Read Mesh
:D Read Third Party Mesh
:K #(SOLUTION)
:K #(REMESHRZ)
:H Hlp_C_REMESH
Cmd_REMESH
 Fld_2
  Typ_Def_READ
 Fld_3
  Typ_FILE
  Prm_[REMESH]  Read third party mesh
  Def_*PAR(_zc(1))
 Fld_6
  Prm_New mesh option
  Typ_Lis_OptionB
  Lis_Regenerate all  ,REGE
  Lis_Keep old mesh   ,KEEP
  Def_REGE
:E End
:! 
:N Fnc_RZN_SelCM
:S    514,   117,   390
:T Cmd_N
:A Select Rezone Component
:D Select Rezone Component
:K #(REZNCM)
Inp_NoApply
Fld_0
 Typ_Lab
 Prm_Rezoning requires contiguous elements to be selected. If the component
Fld_0
 Typ_Lab
 Prm_doesn't have contiguous elements you must create multiple zones.  These
Fld_0
 Typ_Lab
 Prm_must be created one at a time.
Cmd_)~eui,'catch {ans_sendcommand /INPUT,[ansys::getJobname]_rez,cm}'
! Exclude_from_paths
Cmd_CMSEL,S,REZONE_CM
! Exclude_from_paths
Cmd_EPLOT
:E End
:! 
:N Fnc_RZN_SelElem
:S    308,   117,   184
:T Cmd
:A Select Rezone Elements
:D Select Rezone Elements
:K #(SOLUTION)
Inp_NoApply
Fld_0
 Typ_Lab
 Prm_Rezoning requires contiguous elements to be selected. Use the
Fld_0
 Typ_Lab
 Prm_selection tool to select the elements for a given zone.
Cmd_)/UI,SELE
:E End
:! 
:N Fnc_RZN_SelNode
:S    446,   121,   318
:T Cmd
:A Select Nodes to Maintain
:D Select Nodes to Maintain
:K #(SOLUTION)
Inp_NoApply
Fmt_H
Fld_0
 Typ_Lab
 Prm_The nodes chosen will not be modified during the rezoning process.  The
Fld_0
 Typ_Lab
 Prm_node number and location will be maintained when creating the mesh.
! Exclude_from_paths
Cmd_CM,_RZ_NODE,NODE
! Exclude_from_paths
Cmd_NSEL,S,EXT
! Exclude_from_paths
Cal_Fnc_RZN_SelNode2
:E End
:! 
:N Fnc_RZN_SelNode2
:S    433,   140,   286
:T Cmd_P
:C )! Fnc_N_p
:A Maintain Node Information
:D Maintain Node Information
:K #(SOLUTION)
Inp_P
! Exclude_from_paths
Cmd_NSEL
 Fld_2
   Typ_Def_R
 Fld_5
  Prm_[NSEL]  Select the nodes to maintain during rezoning.
  Typ_NODE
  Min_1
  Cnt_s
  PFM_1
! Exclude_from_paths
Cmd_CM,_ndnocmb_rzn,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_RZ_NODE
! Exclude_from_paths
Cmd_CMDEL,_RZ_NODE
:E End
:! 
:N Fnc_RZN_Solve
:S    457,   109,   341
:T Cmd
:A Map Results
:D Map Results to the new mesh
:K #(MAPSRDRZ)
Inp_NoApply
Fld_0
 Typ_Lab
 Prm_[MAPSOLVE]  Map the results from previous mesh to new mesh
Cmd_MAPSOLVE
 Fld_2
   Typ_Int
   Prm_Maximum number of substeps for -
   Def_5
Fld_0
 Typ_Lab
   Prm_     rebalancing residuals
Cmd_)~eui,'apdl::noerr 1'
Cmd_)~eui,'catch {ans_sendcommand /DELE,[ansys::getJobname]_rez,cm}'
Cmd_)~eui,'apdl::noerr 0'
:E End
:! 
:N Fnc_RZN_SplitEl2
:S    364,   156,   201
:T Cmd_P
:C )! Fnc_RZN_SplitEl2
:A Picked Elements
:D Split element for rezoning
:K #(REMESHRZ)
:H Hlp_C_REMESH
Inp_P
! Exclude_from_paths
Cmd_CM,_RZN_CM,ELEM
! Exclude_from_paths
Cmd_ESEL
 Fld_5
  Typ_ELEM
  Prm_[PSME]  Pick or enter elements to be separated
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_RZN_SplitEl3
:E END
:! 
:N Fnc_RZN_SplitEl3
:S    343,   167,   169
:T Cmd_P
:C )! Fnc_RZN_SplitEl3
:A Split element for rezoning
:D Split element for rezoning
:K #(REMESHRZ)
:H Hlp_C_REMESH
Inp_P
Cmd_REMESH
 Fld_2
  Typ_Def_SPLIT
 Fld_6
  Typ_Def_TRAN
 Fld_7
  Typ_Def_*CPAR(1)
! Exclude_from_paths
Cmd_CMSEL,A,_RZN_CM
! Exclude_from_paths
Cmd_CMDELE,_RZN_CM
:E END
:! 
:N Fnc_RZN_SplitElm
:S    387,   149,   231
:T Cmd
:A Select and Split Elems
:D Select and Split Elems
:K #(SOLUTION)
:K #(REMESHRZ)
:H Hlp_C_REMESH
Inp_NoApply
Cmd_)*CSET,1,1
 Fld_0
  Typ_Lab
  Prm_[REMESH]  Split elements into quads
 Fld_2
  Prm_Split mesh option
  Typ_Lis_OptionB
  Lis_Minimize degenerates,QUAD
  Lis_Transition zones    ,DEGE
  Def_QUAD
Cal_Fnc_RZN_SplitEl2
:E End
:! 
:N Fnc_RZN_Start
:S    209,   120,    82
:T Cmd
:A Start
:D Start the Rezoning Process
:K #(SOLUTION&remeshrz&mapsrdrz)
Inp_P
! Cust_Cmd_REZONE
! Cust_Cmd_REMESH
Cmd_)~eui,'euidl::rezone::rezoneCmdGUI'
:E End
:! 
:N Fnc_R_solu
:S    165,   132,    26
:T Command
:C )! Fnc_R_solu
:A Change RealConst
:D Change Real Constants
:K #(PREP7*SOLUTION)
Inp_P
Cmd_)!
Cal_Men_Real
:E END
:! 
:N Fnc_R_too
:S    256,   144,   105
:T Cmd
:C )! Fnc_R
:A Real Constants
:K (LSDYNA)
:D Real Constants
:H Hlp_UI_RealCons
:K #(PREP7*SOLUTION)
Inp_P
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
! Cust_Cal_Fnc_rcon_nnn[0-169]
! Cust_Cmd_RDELE
:E End
:! 
:N Fnc_RadOpt12
:S   2524,   626,  1891
:T Command
:C )/NOPR
:C )*del,_z
:C )*del,_z1
:C )*del,_z2
:C )*del,_z3
:C )*del,_z4
:C )*dim,_z,,14
:C )*del,_zc
:C )*dim,_zc,char,5
:C )_zc(1)='STAT','DELE','OFF ','NEW ','READ'
:C )*GET,_z1,common,,radfcm,,real,1385
:C )*GET,_z2,active,,keyw,,CFD
:C )*IF,_z1,GT,.0001,THEN
:C )  *IF,_z2,EQ,1,THEN
:C )  _z1=0.0001
:C )  *ENDIF
:C )*ENDIF
:C )! RS_MaxIter
:C )*GET,_z2,common,,radfcm,,int,56
:C )*IF,_z2,EQ,0,THEN
:C )  _z2=1000
:C )*ENDIF
:C )/GO
:C )! Fnc_RadOpt12
:K (AUX12*PR_CFD*PR_THERM*(RADSURF+THERMAL)*CFD)
:A    Solution Opt 
:D Radiation Solution Options
:H Hlp_UI_radopts
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Typ_REAL
  Prm_[STEF]  Stefan-Boltzmann Const.
  Def_*GET(common,,radfcm,,real,1)
Cmd_)*SET,_z(2)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[TOFFST] Temperature difference-
  Typ_REAL
  Def_*GET(common,,soptcm,,real,1)
 Fld_0
  Typ_Lab
  Prm_         - between absolute zero and zero of active temp scale
Cmd_)*SET,_z(3)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[RADOPT] Radiosity Solver Options
 Fld_2
  Prm_    Radiation flux relax. factor
  Typ_REAL
  Def_*GET(common,,radfcm,,real,1381)
Cmd_)*SET,_z(4)
 Fld_2
  Prm_         Convergence tolerance
  Typ_REAL
  K_LN(AUX12*(PR_THERM+pr_cfd)*(THERMAL+cfd))
  Def_*PAR(_z1)
  K_LN((PR_CFD+pr_therm)*(CFD+thermal))
  Def_*PAR(_z1)
Cmd_)*SET,_z(6)
 Fld_2
  Prm_            Radiosity solver 
  Typ_Lis_OptionB
   Lis_Iterative Solver,0
   Lis_Direct Solver   ,1
   Lis_Jacobi Solver   ,2
   Def_*GET(common,,radfcm,,int,73)
 Fld_0
  Typ_Lab
  Prm_       Additional Options for Iterative Solver 
Cmd_)*SET,_z(7)
 Fld_2
  Prm_       Maximum no. of iterations
  Typ_Int
  Def_*PAR(_z2)
Cmd_)*SET,_z(8)
 Fld_2
  Prm_              Convergence toler.
  Typ_REAL
  Def_*GET(common,,radfcm,,real,1382)
Cmd_)*SET,_z(9)
 Fld_2
  Prm_              Over-relax. factor
  Typ_REAL
  Def_*GET(common,,radfcm,,real,1383)
 Fld_0
  Typ_Lab
  Prm_       Additional Options for Full Solver 
Cmd_)*SET,_z(14)
 Fld_2
  Prm_       Maximum no. of iterations
  Typ_Int
  Def_*GET(common,,radfcm,,int,111)
 Fld_0
  Typ_Sep
Cmd_)*SET,_z3
 Fld_2
  Prm_[SPCTEMP/SPCNOD]  Space option
  Typ_LIS_OptionB
   LIS_Temperature,1
   LIS_Space Node ,2
Cmd_)*SET,_z4
 Fld_2
  Prm_                         Value 
  Typ_REAL
  Def_0
Cmd_)*SET,_z1
 Fld_2
  Prm_               Enclosure option
  Typ_LIS_OptionB
   LIS_Define,0
   LIS_List all ,1
   LIS_Delete all,2
Cmd_)*SET,_z2
 Fld_2
  Prm_If "Define"- enter Encl. number
  Typ_INT
  Def_1
Cal_Fnc_RadOpt12_0
:E END
:! 
:N Fnc_RadOpt12_0
:S    970,   350,   613
:T Command
:C )! Fnc_RadOpt12_0
:C )/NOPR
:C )keyw,kennum,0
:C )keyw,kenode,0
:C )*if,_z1,eq,0,then
:C )keyw,kennum,1
:C )*endif
:C )*if,_z3,eq,2,then
:C )keyw,kenode,1
:C )*endif
:C )*get,_z5,parm,_z2,type
:C )*if,_z5,eq,-1,then
:C )_z2=1
:C )*endif
:C )/GO
:K (AUX12*PR_CFD*PR_THERM*(RADSURF+THERMAL)*CFD)
Inp_P
Cmd_STEF
 Fld_2
  Typ_Def_*PAR(_z(1))
Cmd_TOFFST
 Fld_2
  Typ_Def_*PAR(_z(2))
Cmd_RADOPT
 Fld_2
  Typ_Def_*PAR(_z(3))
 Fld_3
  Typ_Def_*PAR(_z(4))
 Fld_4
  Typ_Def_*PAR(_z(6))
 Fld_5
  Typ_Def_*PAR(_z(7))
 Fld_6
  Typ_Def_*PAR(_z(8))
 Fld_7
  Typ_Def_*PAR(_z(9))
 Fld_12
  Typ_Def_*PAR(_z(14))
Cmd_SPCTEMP
 K_CM(kenode)
 Fld_2
  K_FL(KENNUM)
  Typ_Def_*PAR(_z2)
 Fld_2
  K_FL(kennum)
  Typ_Def_*PAR(_zc(_z1))
 Fld_3
  K_FL(KENNUM)
  Typ_Def_*PAR(_z4)
Cmd_SPCNOD
 K_CM(KENODE)
 Fld_2
  K_FL(KENNUM)
  Typ_Def_*PAR(_z2)
 Fld_2
  K_FL(kennum)
  Typ_Def_*PAR(_zc(_z1))
 Fld_3
  K_FL(KENNUM)
  Typ_Def_*PAR(_z4)
:E END
:! 
:N Fnc_RadOpt13
:S   1462,   325,  1130
:T Command
:C )/NOPR
:C )*del,_z
:C )*dim,_z,,10
:C )*del,_zc
:C )*dim,_zc,char,8
:C )_zc(1)='STAT','DELE','OFF ','NEW ','READ','NONE','BINA','ASCI'
:C )/GO
:C )! Fnc_RadOpt13
:K (AUX12*PR_CFD*PR_THERM*(RADSURF+THERMAL)*CFD)
:A    View Factor
:D View Factor Options
:H Hlp_UI_viewopts
Cmd_)/NOPR
Cmd_)*SET,_z(5)
 Fld_0
  Typ_Lab
  Prm_[HEMIOPT]  3D View Factor Options
 Fld_2
  Prm_           Hemicube resolution
  Typ_REAL
  Def_10
Cmd_)*SET,_z(3)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[V2DOPT]   2D View Factor Options
 Fld_2
  Prm_           Type of geometry
  Typ_Lis_OptionB
   Lis_Plane        ,0
   Lis_Axisymmetric ,1
   Def_0
Cmd_)*SET,_z(4)
 Fld_2
  Prm_         Number of divisions
  Typ_Real
  Def_20
 Fld_0
  Typ_Lab
  Prm_         - for axisymmetric
Cmd_)*SET,_z(6)
 Fld_2
  Prm_           Type of procedure
  Typ_Lis_OptionB
   Lis_Hidden  ,0
   Lis_Non-hidden ,1
   Def_0
Cmd_)*SET,_z(7)
 Fld_2
  Prm_       Number of sampling zones
  Typ_Real
  Def_200
 Fld_0
  Typ_Lab
  Prm_        - for hidden procedure
Cmd_)*SET,_z(8)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[VFOPT]   View factor options
  Typ_LIS_OptionB
   LIS_Compute and save ,3
   LIS_Recompute and save ,4
   LIS_Read from file ,5
   LIS_Compute and not save ,6
   Def_3
 Fld_3
  Prm_          File format options
  Typ_LIS_OptionB
   LIS_Binary          ,7
   LIS_Ascii           ,8
   Def_7
Cal_Fnc_RadOpt13_0,2,ne,5
Cal_Fnc_RadOpt13_1,2,eq,5
:E END
:! 
:N Fnc_RadOpt13_0
:S    341,    82,   252
:T Command
:C )/GO
:C )! Fnc_RadOpt12_0
Inp_P
Cmd_HEMIOPT
 Fld_2
  Typ_Def_*PAR(_z(5))
Cmd_V2DOPT
 Fld_2
  Typ_Def_*PAR(_z(3))
 Fld_3
  Typ_Def_*PAR(_z(4))
 Fld_4
  Typ_Def_*PAR(_z(6))
 Fld_5
  Typ_Def_*PAR(_z(7))
Cmd_VFOPT
 Fld_2
  Typ_Def_*PAR(_zc(_z(8)))
 Fld_6
  Typ_Def_*PAR(_zc(_z(9)))
:E END
:! 
:N Fnc_RadOpt13_1
:S    435,   120,   308
:T Command
:C )/GO
:C )! Fnc_RadOpt13_1
:D View Factor Options
:H Hlp_C_VFOPT
Cmd_HEMIOPT
 Fld_2
  Typ_Def_*PAR(_z(5))
Cmd_V2DOPT
 Fld_2
  Typ_Def_*PAR(_z(3))
 Fld_3
  Typ_Def_*PAR(_z(4))
 Fld_4
  Typ_Def_*PAR(_z(6))
 Fld_5
  Typ_Def_*PAR(_z(7))
Cmd_VFOPT
 Fld_2
  Typ_Def_*PAR(_zc(_z(8)))
 Fld_3
  Prm_Fname,Ext,Dir  View Factor file
  Typ_FILE_INLINE
Fld_6
  Typ_Def_*PAR(_zc(_z(9)))
:E END
:! 
:N Fnc_RaiseSectMen
:S    175,    91,    77
:T Cmd
:C )! Fnc_RaiseSectMen
:H Hlp_C_EREFINE
Inp_P
Cmd_)/NOPR
Cmd_)~eui,'euidl::element::SectionControl::filter'
Cmd_)/GO
:E END
:! 
:N Fnc_ReadOpts_p1
:S    316,   203,   106
:T Command
:C )! Fnc_ReadOpts_p1
:C )/NOPR
:C )*DEL,_zx
:C )*SET,_zx,'*.r*'
:C )/GO
:A Data & File Opts
:D Data and File Options
:K #(POST1)
:H Hlp_UI_readopts
Inp_P
! Cust_Cmd_INRES
! Cust_Cmd_FILE
! Cust_Cmd_CMSFILE
Cmd_)~eui,'::euidl::post1::readOptions::create'
:E END
:! 
:N Fnc_RebarNorm
:S    186,   131,    48
:T Cmd
:C )! Fnc_RebarNorm
:C )/nopr
:C )ALLSEL
:C )/TRLCY,ELEM,0,ALL
:A Normal
:D Normal
Inp_P
! Exclude_from_paths
Cmd_/REPLOT
Cmd_)/GO
:E END
:! 
:N Fnc_RebarOnly
:S    491,   436,    48
:T Cmd
:C )! Fnc_RebarOnly
:C )/nopr
:C )*create,ansuitmp
:C )_z1=etyiqr(0,14)
:C )*do,_z2,1,_z1,1
:C )_ztyp=etyiqr(_z2,-2)
:C )_zrebar=0
:C )*if,_ztyp,eq,264,or,_ztyp,eq,265,then
:C )_zrebar=1
:C )*elseif,_ztyp,eq,263,then
:C )_zrebar=1
:C )*endif
:C )*if,_zrebar,eq,0,then
:C )esel,u,type,,_z2
:C )*endif
:C )*enddo
:C )/TRLCY,ELEM,0,ALL
:C )*end
:C )/inp,ansuitmp
:A Reinf Only
:D Reinf Only
Inp_P
! Exclude_from_paths
Cmd_/REPLOT
Cmd_)/GO
:E END
:! 
:N Fnc_RebarPlus
:S    496,   441,    48
:T Cmd
:C )! Fnc_RebarPlus
:C )/nopr
:C )*create,ansuitmp
:C )ALLSEL
:C )_z1=etyiqr(0,14)
:C )*do,_z2,1,_z1,1
:C )_ztyp=etyiqr(_z2,-2)
:C )esel,s,type,,_z2
:C )*if,_ztyp,eq,264,or,_ztyp,eq,265,then
:C )/TRLCY,ELEM,0,ALL
:C )*elseif,_ztyp,eq,263,then
:C )/TRLCY,ELEM,0,ALL
:C )*else
:C )/TRLCY,ELEM,0.9,ALL
:C )*endif
:C )*enddo
:C )ALLSEL
:C )*end
:C )/inp,ansuitmp
:A Reinf + Model
:D Reinf + Model
Inp_P
! Exclude_from_paths
Cmd_/REPLOT
Cmd_)/GO
:E END
:! 
:N Fnc_ReduceGui
:S    233,   167,    59
:T Cmd_N
:C )! Fnc_ReduceGui
:A Abridged Menu
:D Abridged Menu
:K ((STATIC*TRNSIENT*BUCKLING*MODAL)+SIMPLOFF)
:H Hlp_C_ESSOLV
Inp_P
Cmd_)/NOPR
Cmd_)KEYW,SIMPLOFF,0
Cmd_)/GO
Cal_REFRESH
:E END
:! 
:N Fnc_ReduceMatGui
:S    217,   151,    59
:T Cmd_N
:C )! Fnc_ReduceMatGui
:A Abridged Menu
:D Abridged Menu
:K (cfd+pr_cfd+UNABRMAT)
:H Hlp_C_ESSOLV
Inp_P
Cmd_)/NOPR
Cmd_)KEYW,UNABRMAT,0
Cmd_)/GO
Cal_REFRESH
:E END
:! 
:N Fnc_ReinfAddEdit
:S    363,   156,   200
:T Cmd
:C )! Fnc_ReinfAddEdit
:C )/NOPR
:C )*get,_z1,active,,sect
:C )/GO
:A    Add / Edit
:K #(PREP7*SOLUTION)
Inp_P
! Cust_Cmd_SECTYPE
! Cust_Cmd_SECDATA
Cmd_)~eui
 Fld_2
  Typ_Def_'
  Dlm_~
 Fld_3
  Typ_Def_::euidl::element::reinf::section::create
  Dlm_
 Fld_4
  Typ_Def_*PAR(_z1)
  Dlm_~
 Fld_5
  Typ_Def_'
:E End
:! 
:N Fnc_RemoveDialogs
:S    232,   212,    13
:T Cmd_N
:C )! Fnc_RemoveDialogs
:A Hidden
:C )! This will remove any dialogs currently on the screen.
:C )! Mainly used by EUIDL to negate an Apply in a pick dialog.
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_Restart
:S   1449,   544,   898
:T Command
:C )! Fnc_Restart
:A Restart
:D Restart
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'BUCKLING','MODAL','HARMONIC','TRANSIEN'
:C )*set,_zc(7),'SUBSTRUC','SPECTRUM','','STATIC'
:C )*get,_z1,active,,antype
:C )*if,_z1,eq,4,then
:C ) RESCONTROL,GUI
:C )*endif
:C )*if,_z1,eq,0,then
:C ) _z1=10
:C ) RESCONTROL,GUI
:C )*endif
:C )*set,_z2,_zc(_z1)
:C )/go
:K (lsdyna)
:K #((PREP7*SOLUTION)+(STATIC*SUBSTRUC*(TRNSIENT+FULL)*HARMONIC)+cfd)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_ANTYPE
Inp_NoApply
Cmd_ANTYPE,,REST
 Fld_0
  Typ_Lab
  K_LN((static+trnsient)*SINGLFRM)
  Prm_[ANTYPE]  Restarting an Analysis
  K_LN((STATIC*TRNSIENT)+singlfrm)
  Prm_[ANTYPE]  Restarting an Analysis from
 Fld_2
 K_FL((STATIC*TRNSIENT)+singlfrm)
  Prm_      Load Step Number
  Typ_INT
 Fld_3
 K_FL((STATIC*TRNSIENT)+singlfrm)
  Prm_      Sub Step Number
  Typ_INT
 Fld_4
 K_FL((STATIC*TRNSIENT)+singlfrm)
  Prm_      Action
  Typ_Lis_OptionB
   Lis_Continue        ,0
   Lis_End Load Step   ,1
   Lis_Create .rst file,2
   Lis_Perturb         ,4
 Fld_0
  Prm_
 Fld_0
  Typ_Lab
  Prm_  Current analysis type          %_z2%
Cmd_)!
 K_CM(static+trnsient)
 Fld_0
  Prm_
 Fld_0
  Typ_Lab
  Prm_  Press OK to specify a restart run.  Files Jobname.EMAT
 Fld_0
  Typ_Lab
  Prm_  and Jobname.ESAV (or OSAV) must be available.
Cmd_)/NOPR
Cmd_)KEYW,SINGLFRM,0
Cmd_)/GO
Cal_Fnc_Perturb,4,eq,4,1
Cal_REFRESH,4,ne,4,1
:E END
:! 
:N Fnc_ResultView
:S    131,    71,    53
:T Command
:A Results Viewer
Inp_P
Cmd_)~eui,'::euidl::post1::resultView::create'
:E END
:! 
:N Fnc_RetBox
:S    799,   108,   684
:T Command
:C )! Fnc_RetBox
:D Return box
:P (FLOTRAN)
:H Hlp_C_%_z8%
Inp_NoApply
Cmd_)/NOPR
Cmd_)!
 Fld_0
  Typ_LAB
  K_LN(SPCLD+trbld+velld+disld)
  Prm_[%_z8%] Apply Mass Fraction Constraints on %_z7%
  K_LN(spcld+TRBLD+velld+disld)
  Prm_[%_z8%] Apply Turbulence Constraints on %_z7%
  K_LN(spcld+trbld+disld+VELLD)
  Prm_[%_z8%] Apply Velocity Constraints on %_z7%
  K_LN(spcld+trbld+DISLD+velld)
  Prm_[%_z8%] Apply Displacement Constraints on %_z7%
 Fld_2
 Prm_Use the same selection again?
   Typ_Logi,No,Yes
   Def_0
Cmd_)!
Fld_0
K_FL(KTABN)
  Prm_Note: Before closing this box
Fld_0
K_FL(KTABN)
  Prm_      - edit previous table
Fld_0
K_FL(KTABN)
  Prm_      and close it's widget !
Cmd_)/GO
Cal_Fnc_RetBox_0,2,eq,0,2
Cal_Fnc_RetBox_1,2,eq,1,2
:E END
:! 
:N Fnc_RetBox_0
:S    139,    70,    62
:T Command
:C )! Fnc_RetBox_0
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_RetBox_1
:S    270,    98,   165
:T Command
:C )/NOPR
:C )_z2=2
:C )/GO
:C )! Fnc_RetBox_1
Inp_P
Cmd_)/GO
K_LN(SPCLD+trbld+velld+disld)
Cal_Fnc_Spec_VZ
K_LN(spcld+trbld+VELLD*FRCLD*DISLD)
Cal_Fnc_FloVelo
K_LN(spcld+velld+frcld+disld+TRBLD)
Cal_Fnc_FloTurb
:E END
:! 
:N Fnc_RomAAC2
:S    286,   126,   153
:T Command
:C )! Fnc_RomAAC2
:C )/NOPR
:C )_zch1='CAP12'
:C )_z1=1
:C )_z2=2
:C )/GOPR
Inp_P
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch1)
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_Def_*PAR(_z2)
Cmd_)/NOPR
Cmd_)_z1=
Cmd_)_z2=
Cmd_)_zch1=
Cmd_)/GOPR
:E END
:! 
:N Fnc_RomAAC3
:S    552,   172,   373
:T Command
:C )! Fnc_RomAAC3
:C )/NOPR
:C )_zch1='CAP12'
:C )_zch2='CAP13'
:C )_zch3='CAP23'
:C )_z1=1
:C )_z2=2
:C )_z3=3
:C )/GOPR
Inp_P
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch1)
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_Def_*PAR(_z2)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch2)
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_Def_*PAR(_z3)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch3)
 Fld_3
  Typ_Def_*PAR(_z2)
 Fld_4
  Typ_Def_*PAR(_z3)
Cmd_)/NOPR
Cmd_)_z1=
Cmd_)_z2=
Cmd_)_z3=
Cmd_)_zch1=
Cmd_)_zch2=
Cmd_)_zch3=
Cmd_)/GOPR
:E END
:! 
:N Fnc_RomAAC4
:S    939,   234,   698
:T Cmd_P
:C )! Fnc_RomAAC4
:C )/NOPR
:C )_zch1='CAP12'
:C )_zch2='CAP13'
:C )_zch3='CAP14'
:C )_zch4='CAP23'
:C )_zch5='CAP24'
:C )_zch6='CAP34'
:C )_z1=1
:C )_z2=2
:C )_z3=3
:C )_z4=4
:C )/GOPR
Inp_P
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch1)
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_Def_*PAR(_z2)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch2)
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_Def_*PAR(_z3)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch3)
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_Def_*PAR(_z4)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch4)
 Fld_3
  Typ_Def_*PAR(_z2)
 Fld_4
  Typ_Def_*PAR(_z3)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch5)
 Fld_3
  Typ_Def_*PAR(_z2)
 Fld_4
  Typ_Def_*PAR(_z4)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch6)
 Fld_3
  Typ_Def_*PAR(_z3)
 Fld_4
  Typ_Def_*PAR(_z4)
Cmd_)/NOPR
Cmd_)_z1=
Cmd_)_z2=
Cmd_)_z3=
Cmd_)_z4=
Cmd_)_zch1=
Cmd_)_zch2=
Cmd_)_zch3=
Cmd_)_zch4=
Cmd_)_zch5=
Cmd_)_zch6=
Cmd_)/GOPR
:E END
:! 
:N Fnc_RomAAC5
:S   1454,   317,  1130
:T Cmd_P
:C )! Fnc_RomAAC5
:C )/NOPR
:C )_zch1='CAP12'
:C )_zch2='CAP13'
:C )_zch3='CAP14'
:C )_zch4='CAP15'
:C )_zch5='CAP23'
:C )_zch6='CAP24'
:C )_zch7='CAP25'
:C )_zch8='CAP34'
:C )_zch9='CAP35'
:C )_zch10='CAP45'
:C )_z1=1
:C )_z2=2
:C )_z3=3
:C )_z4=4
:C )_z5=5
:C )/GOPR
Inp_P
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch1)
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_Def_*PAR(_z2)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch2)
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_Def_*PAR(_z3)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch3)
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_Def_*PAR(_z4)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch4)
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_Def_*PAR(_z5)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch5)
 Fld_3
  Typ_Def_*PAR(_z2)
 Fld_4
  Typ_Def_*PAR(_z3)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch6)
 Fld_3
  Typ_Def_*PAR(_z2)
 Fld_4
  Typ_Def_*PAR(_z4)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch7)
 Fld_3
  Typ_Def_*PAR(_z2)
 Fld_4
  Typ_Def_*PAR(_z5)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch8)
 Fld_3
  Typ_Def_*PAR(_z3)
 Fld_4
  Typ_Def_*PAR(_z4)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch9)
 Fld_3
  Typ_Def_*PAR(_z3)
 Fld_4
  Typ_Def_*PAR(_z5)
Cmd_RMCAP
 Fld_2
  Typ_Def_*PAR(_zch10)
 Fld_3
  Typ_Def_*PAR(_z4)
 Fld_4
  Typ_Def_*PAR(_z5)
Cmd_)/NOPR
Cmd_)_zch1=
Cmd_)_zch2=
Cmd_)_zch3=
Cmd_)_zch4=
Cmd_)_zch5=
Cmd_)_zch6=
Cmd_)_zch7=
Cmd_)_zch8=
Cmd_)_zch9=
Cmd_)_zch10=
Cmd_)_z1=
Cmd_)_z2=
Cmd_)_z3=
Cmd_)_z4=
Cmd_)_z5=
Cmd_)/GOPR
:E END
:! 
:N Fnc_RomAddAllCap
:S    370,   129,   234
:T Cmd
:C )! Fnc_RomAddAllCap
:A All Capacitances
:D All Capacitances
:H Hlp_C_RMCAP
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_[RMCAP] Define all possible lumped capacitances
 Fld_2
  Prm_CTOT  Total number of conductors
  Typ_INT
  Def_2
Cal_Fnc_RomAAC2,2,eq,2
Cal_Fnc_RomAAC3,2,eq,3
Cal_Fnc_RomAAC4,2,eq,4
Cal_Fnc_RomAAC5,2,eq,5
:E END
:! 
:N Fnc_RomAddSingCap
:S    353,   135,   211
:T Cmd
:C )! Fnc_RomAddSingCap
:A Single Capacitance
:D Single Capacitance
:H Hlp_C_RMCAP
Cmd_RMCAP
 Fld_0
  Typ_Lab
  Prm_[RMCAP] Define lumped capacitance
 Fld_2
  Prm_RefName Reference Name
  Typ_CHAR,8
 Fld_3
  Prm_C1      First Conductor
  Typ_INT
 Fld_4
  Prm_C2      Second Conductor
  Typ_INT
:E END
:! 
:N Fnc_RomCapList
:S    138,   113,    18
:T Cmd
:C )! Fnc_RMCLIST
:A List
:D List capacitances
:H Hlp_C_RMCLIST
Inp_P
Cmd_RMCLIST
:E END
:! 
:N Fnc_RomDefMN
:S    244,   118,   119
:T Cmd_P
:C )! Fnc_RomDefMN
:A  Define
:D Define Master Node
:H Hlp_C_RMASTER
Inp_P
Cmd_RMASTER
 Fld_2
  Prm_[RMASTER]  Pick or enter Master Node for ROM
  Typ_NODE
  Min_1
  Cnt_1
  PCN_1
  PFM_1
:E END
:! 
:N Fnc_RomDefRS2
:S    176,    70,    99
:T Cmd_P
:C )! Fnc_RomDefRS2
Inp_P
Cmd_RMROPTIONS
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
:E END
:! 
:N Fnc_RomDefineRS
:S    923,   398,   518
:T Cmd
:C )! Fnc_RomDefineRS
:C )/nopr
:C )*get,_nmodes,rom,,nmod
:C )*if,_nmodes,gt,0,then
:C )romord=
:C )*dim,romord,array,_nmodes
:C )*do,_i,1,_nmodes
:C )*get,_nstep,rom,_i,rmns
:C )*if,_nstep,gt,0,then
:C )romord(_i)=_nstep-1
:C )*endif
:C )*enddo
:C )*endif
:C )_nmodes=
:C )_i=
:C )/gopr
:A  Options
:D Define Response Surface
:H Hlp_C_RMROPTIONS
Cmd_)*CSET,1,4
  Fld_0
   Prm_[RMROPTIONS]  Define Response Surface
   Typ_Lab
  Fld_2
   Prm_RefName  of ROM Function 
   Typ_Lis
   Lis_*READ,RMAL
  Fld_3
   Prm_Type     of Fitting Function
   Typ_Lis_RadioB
   LIS_Lagrange        ,LAGR
   LIS_Pascal          ,PASC
   LIS_Reduced Lagrange,REDL
   LIS_Reduced Pascal  ,REDP
  Fld_4
   Prm_Invert  data prior to fitting
   Typ_Lis_RadioB
   LIS_No ,0
   LIS_Yes,1
  Fld_0
   Prm_Note: Invert option recommended for capacitance functions
   Typ_Lab
Cal_Fnc_RomDefRS2
:E END
:! 
:N Fnc_RomDelCap
:S    254,   116,   131
:T Cmd
:C )! Fnc_RomDelCap
:A Delete 
:D Delete Capacitance
:H Hlp_C_RMCAP
Cmd_RMCAP
 Fld_0
  Typ_Lab
  Prm_[RMCAP] Delete lumped capacitance
 Fld_2
  Prm_RefName Reference Name
  Typ_Lis
   Lis_*READ,RMCA
:E END
:! 
:N Fnc_RomDelMN
:S    253,   118,   128
:T Cmd_P
:C )! Fnc_RomDelMN
:A  Delete
:D Delete Master Node
:H Hlp_C_RMASTER
Inp_P
Cmd_)!
Fld_2
 Prm_[RMASTER]  Pick or enter Master Node to delete
 Typ_NODE
 Min_1
 Cnt_1
 PCN_1
 PFM_1
Cal_Fnc_RomDelMN_1
:E END
:! 
:N Fnc_RomDelMN_1
:S    296,   152,   137
:T Cmd
:C )! Fnc_RomDelMN
:C )/NOPR
:C )_zx='DEL'
:C )/GOPR
:A  Delete
:D Delete Master Node
:H Hlp_C_RMASTER
Inp_P
Cmd_RMASTER
  Fld_0
   Prm_[RMASTER]  Delete Master Node for ROM
   Typ_Lab
  Fld_2
   Typ_Def_'P51X'
  Fld_3
   Typ_Def_*PAR(_zx)
:E END
:! 
:N Fnc_RomElementLoad
:S    747,   186,   554
:T Cmd
:C )! Fnc_RomElementLoad
:C )/NOPR
:C )_z1=2**(-100)
:C )/GOPR
:A  Element Load
:D Define and Run Element Load File
:H Hlp_C_RMELOAD
Cmd_RMELOAD
  Fld_0
   Prm_[RMELOAD]  Define and run element load file
   Typ_Lab
  Fld_0
   Prm_           Provide a file containing the definition (LSWRITE) and
   Typ_Lab
  Fld_0
   Prm_           solution (LSSOLVE) of different load cases. During a ROM
   Typ_Lab
  Fld_0
   Prm_           use pass (ROM144) those loads can be applied as element 
   Typ_Lab
  Fld_0
   Prm_           loads using the command RMLVSCALE.  
   Typ_Lab
 Fld_2
   Prm_ Choose the desired file
   Typ_FILE
   Def_*PAR(_z1)
 Fld_5
   Prm_ Number of element loads
   Typ_INT
:E END
:! 
:N Fnc_RomFitRS
:S    258,   138,   113
:T Cmd
:C )! Fnc_RomFitRS
:A  Fit Functions
:D Fit ROM Functions to Polynomials
:H Hlp_C_RMRGENER
Inp_Noapply
Cmd_RMRGENERATE
  Fld_0
   Prm_[RMRGENERATE]  Compute Fit Functions for response surfaces
   Typ_Lab
:E END
:! 
:N Fnc_RomListMN
:S    139,   114,    18
:T Cmd
:C )! Fnc_RomDelMN
:A  List
:D List Master Nodes
:H Hlp_C_RMALIST
Inp_P
Cmd_RMALIST
:E END
:! 
:N Fnc_RomModalAnalysis
:S    482,   145,   330
:T Cmd
:C )! Fnc_RomModalAnalysis
:A  Run Modal Anal.
:D Run Modal Analysis
:H Hlp_C_RMMANALYSIS
Inp_Noapply
Cmd_RMMANALYSIS
  Fld_0
   Prm_[RMMANALYSIS]  Execute modal analysis for ROM-tool based on 
   Typ_Lab
  Fld_0
   Prm_               mechanical domain.
  Fld_2
   Prm_ Nmode     Total number of modes 
   Typ_INT
   Def_6
  Fld_3
   Prm_ Pstress   Include pre-stress effects
   Typ_Lis_RadioB
   LIS_No ,0
   LIS_Yes,1
:E END
:! 
:N Fnc_RomModeList
:S    147,   122,    18
:T Cmd
:C )! Fnc_RMMLIST
:A  List
:D Status of Mode Selection
:H Hlp_C_RMMLIST
Inp_P
Cmd_RMMLIST
:E END
:! 
:N Fnc_RomModeList2
:S    149,   124,    18
:T Cmd
:C )! Fnc_RMMLIST
:A Status
:D Status of Mode Selection
:H Hlp_C_RMMLIST
Inp_P
Cmd_RMMLIST
:E END
:! 
:N Fnc_RomModeS2
:S    713,   140,   566
:T Cmd
:C )! Fnc_RomModeS2
:C )/NOPR
:C )/GO
:D Define and Edit Modal Parameters
:H Hlp_C_RMMRANGE
Cmd_RMMRANGE
  Fld_0
   Prm_[RMMRANGE]  Parameters for %_z2% mode %(I)_z1%
   Typ_Lab
  Fld_2
   Typ_Def_*Par(_z1)
  Fld_3
   Typ_Def__z2
  Fld_4
   Prm_ Min  Lower Bound for Fit Range
   Typ_REAL
   Def_*GET(rom,_z1,rmli,1)
  Fld_5
   Prm_ Max  Upper Bound for Fit Range
   Typ_REAL
   Def_*GET(rom,_z1,rmli,2)
  Fld_6
   Prm_ Nstep  Number of discret steps
   Typ_INT
   Def_*GET(rom,_z1,rmns)
  Fld_7
   Prm_ Damp       Modal Damping Ratio
   Typ_REAL
   Def_*GET(rom,_z1,rmda)
  Fld_8
   Prm_ Scale     Modal Scaling Factor
   Typ_REAL
   Def_*GET(rom,_z1,rmsc)
:E END
:! 
:N Fnc_RomModeSAuto
:S    579,   135,   437
:T Cmd
:C )! Fnc_RomModeSAuto
:A  Select
:D Mode Selection for ROM Tool
:H Hlp_C_RMMSELECT
Inp_Noapply
Cmd_RMMSELECT
  Fld_0
   Prm_[RMMSELECT]  Select Modes
   Typ_Lab
  Fld_2
   Prm_ Nmode   Number of modes
   Typ_INT
  Fld_3
   Prm_ Method  Method for Selection
   Typ_Lis_RadioB
   LIS_Auto - using Test Load,'TMOD'
   LIS_First Nmode eigenmodes,'NMOD'
  Fld_0
   Typ_Sep
  Fld_0
   Prm_       Total Deflection Range
   Typ_Lab
  Fld_4
   Prm_ Dmin    Lower Bound
   Typ_REAL
  Fld_5
   Prm_ Dmax    Upper Bound
   Typ_REAL
:E END
:! 
:N Fnc_RomModeSManual
:S    503,   141,   355
:T Cmd
:C )! Fnc_RomModeSManual
:A  Edit
:D Define and Edit Modal Parameters
:H Hlp_C_RMMRANGE
Cmd_)/NOPR
! Exclude_from_paths
Cmd_*SET,_z1
  Fld_0
   Prm_[RMMRANGE]  Define Modal Parameters
   Typ_Lab
  Fld_2
   Prm_ Mode    Mode Number
   Typ_INT
! Exclude_from_paths
Cmd_*SET,_z2
  Fld_2
   Prm_ Key     Mode Classification
   Typ_Lis_RadioB
   LIS_Dominant,'DOMINANT'
   LIS_Relevant,'RELEVANT'
   LIS_Unused ,'UNUSED'
Cmd_)/GO
Cal_Fnc_RomModeS2
:E END
:! 
:N Fnc_RomPlotRS
:S    627,   121,   499
:T Cmd
:C )! Fnc_RomPlotRS
:A  Plot 
:D Plot Response Surface 
:H Hlp_C_RMRPLOT
Cmd_RMRPLOT
  Fld_0
   Prm_[RMRPLOT]  Plot response surface of ROM function or its derivatives
   Typ_Lab
  Fld_0
   Prm_           with respect to the dominant mode(s).
   Typ_Lab
  Fld_2
   Prm_RefName    of ROM function
   Typ_Lis
   Lis_*READ,RMAL
  Fld_3
   Prm_Type       of data to be plotted
   Typ_Lis_RadioB
   LIS_Resp Surf,FUNC
   LIS_1st derivative,FIRST
   LIS_2nd derivative,SECOND
  Fld_4
   Prm_Mode1      1st dom. mode
   Typ_INT
  Fld_5
   Prm_Mode2      2nd dom. mode
   Typ_INT
:E END
:! 
:N Fnc_RomPolyOrder
:S   1713,   807,   899
:T Cmd
:C )! Fnc_RomPolyOrder
:C )/NOPR
:C )keyw,kelc1,0
:C )keyw,kelc2,0
:C )keyw,kelc3,0
:C )keyw,kelc4,0
:C )keyw,kelc5,0
:C )keyw,kelc6,0
:C )keyw,kelc7,0
:C )keyw,kelc8,0
:C )keyw,kelc9,0
:C )*GET,_zr9,rom,,nmod
:C )*if,_zr9,ge,1,then
:C )keyw,kelc1,1
:C )*endif
:C )*if,_zr9,ge,2,then
:C )keyw,kelc2,1
:C )*endif
:C )*if,_zr9,ge,3,then
:C )keyw,kelc3,1
:C )*endif
:C )*if,_zr9,ge,4,then
:C )keyw,kelc4,1
:C )*endif
:C )*if,_zr9,ge,5,then
:C )keyw,kelc5,1
:C )*endif
:C )*if,_zr9,ge,6,then
:C )keyw,kelc6,1
:C )*endif
:C )*if,_zr9,ge,7,then
:C )keyw,kelc7,1
:C )*endif
:C )*if,_zr9,ge,8,then
:C )keyw,kelc8,1
:C )*endif
:C )*if,_zr9,ge,9,then
:C )keyw,kelc9,1
:C )*endif
:C )/GO
:A  Poly Order
:D Define Polynomial Orders for ROM Functions
:H Hlp_C_RMPORDER
Inp_Noapply
Cmd_RMPORDER
  Fld_0
   Prm_[RMPORDER] Define Polynomial Orders for ROM Functions 
   Typ_Lab
  Fld_2
 K_FL(KELC1)
   Prm_Ord1    Order for mode 1
   Typ_Int
   Def_*GET(rom,1,rmpo)
  Fld_3
 K_FL(KELC2)
   Prm_Ord2    Order for mode 2
   Typ_Int
   Def_*GET(rom,2,rmpo)
  Fld_4
 K_FL(KELC3)
   Prm_Ord3    Order for mode 3
   Typ_Int
   Def_*GET(rom,3,rmpo)
  Fld_5
 K_FL(KELC4)
   Prm_Ord4    Order for mode 4
   Typ_Int
   Def_*GET(rom,4,rmpo)
  Fld_6
 K_FL(KELC5)
   Prm_Ord5    Order for mode 5
   Typ_Int
   Def_*GET(rom,5,rmpo)
  Fld_7
 K_FL(KELC6)
   Prm_Ord6    Order for mode 6
   Typ_Int
   Def_*GET(rom,6,rmpo)
  Fld_8
 K_FL(KELC7)
   Prm_Ord7    Order for mode 7
   Typ_Int
   Def_*GET(rom,7,rmpo)
  Fld_9
 K_FL(KELC8)
   Prm_Ord8    Order for mode 8
   Typ_Int
   Def_*GET(rom,8,rmpo)
  Fld_10
 K_FL(KELC9)
   Prm_Ord9    Order for mode 9
   Typ_Int
   Def_*GET(rom,9,rmpo)
:E END
:! 
:N Fnc_RomRSStatus
:S    317,   134,   176
:T Cmd
:C )! Fnc_RomRSStatus
:A  Status 
:D Status of Response Surface 
:H Hlp_C_RMRSTATUS
Cmd_RMRSTATUS
  Fld_0
   Prm_[RMRSTATUS]  Print status of response surface for ROM function
   Typ_Lab
  Fld_2
   Prm_RefName      of ROM function
   Typ_Lis
   Lis_*READ,RMAL
:E END
:! 
:N Fnc_RomRunSamples
:S    705,   142,   556
:T Cmd
:C )! Fnc_RomRunSamples
:A  Compute Points
:D Run Sample point generator
:H Hlp_C_RMSMPLE
Inp_Noapply
Cmd_RMSMPLE
  Fld_0
   Prm_[RMSMPLE]  Sample point generator 
   Typ_Lab
  Fld_2
   Prm_Nlgeom    Large Deflection Flag
   Typ_LOGI,Off,On
  Fld_3
   Prm_Cap     Capacitance calculation method
   Typ_Lis_RadioB
   LIS_Charge-voltage based,'CHARGE'
   LIS_Use CMATRIX macro,'CMATRIX'
  Fld_4
   Prm_Seqslv  Structural analysis
   Typ_Lis_OptionB
   LIS_Sparse solver,'SPARSE'
   LIS_PCG solver,'PCG'
  Fld_5
   Prm_Eeqslv  Electrostatic analysis
   Typ_Lis_OptionB
   LIS_Sparse solver,'SPARSE'
   LIS_JCG solver,'JCG'
   LIS_ICCG solver,'ICCG'
:E END
:! 
:N Fnc_RomTestLoad
:S    944,   174,   763
:T Cmd
:C )! Fnc_RomTestLoad
:C )/NOPR
:C )_z1=2**(-100)
:C )/GOPR
:A  Test Load
:D Define and Run Test Load File
:H Hlp_C_RMRTEST
Cmd_RMRTEST
  Fld_0
   Prm_[RMRTEST]  Define and run test load file
   Typ_Lab
  Fld_0
   Prm_           Provide a file containing a test load, which covers the
   Typ_Lab
  Fld_0
   Prm_           expected load situation and the expected deformation 
   Typ_Lab
  Fld_0 
   Prm_           state of the microstructure. This test load is necessary 
   Typ_Lab
  Fld_0
   Prm_           for automated mode selection but is not obligatory. It is
   Typ_Lab
  Fld_0
   Prm_           intended to support unskilled users in finding proper shape
   Typ_Lab
  Fld_0
   Prm_           functions (eigenmodes) and a useful amplitude range of each 
   Typ_Lab
  Fld_0
   Prm_           mode.   
   Typ_Lab
 Fld_2
   Prm_ Choose the desired file
   Typ_FILE
   Def_*PAR(_z1)
:E END
:! 
:N Fnc_RotCoriolis
:S    429,   158,   264
:T Cmd
:C )! Fnc_RotCoriolis
:A Coriolis
:D Applies the Coriolis effect to a rotating structure.
:H Hlp_C_CORIOLIS
Inp_NoApply
Cmd_CORIOLIS
Fld_0
 Typ_Lab
 Prm_Applies the Coriolis effect to a rotating structure.
Fld_2
 Prm_Coriolis effect
 Typ_Logi,Off,On
Fld_5
 Prm_Reference frame
 Typ_LIS_OPTIONB
 LIS_Rotating,0
 LIS_Stationary,1 
Fld_6
 Prm_Damping effect
 Typ_Logi,Off,On
:E END
:! 
:N Fnc_Rot_Dam_1
:S    745,   235,   503
:T Command
:D Real Constants for 14 - Linear Rotar Damper
:H Hlp_E_S4.14
:H Hlp_C_R
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(3)=0
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=14
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Linear Rotational Damper
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_4
  Typ_REAL
  Prm_Damping coefficient         CV1
Cmd_)/NOPR
Cmd_)*SET,_z(4)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select DOF set
  Typ_LIS_RadioB
   LIS_Torsional ROTX  ,4
   LIS_Torsional ROTY  ,5
   LIS_Torsional ROTZ  ,6
   LIS_ROTX ROTY ROTZ  ,15
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E END
:! 
:N Fnc_Rot_Dam_2
:S    812,   243,   562
:T Command
:D Real Constants for 14 - Nonlinear Rotational Damper
:H Hlp_E_S4.14
:H Hlp_C_R
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(3)=1
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=14
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Nonlinear Rotational Damper
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_4
  Typ_REAL
  Prm_Damping coefficient         CV1
 Fld_5
  Typ_REAL
  Prm_Nonlinear damping coeff     CV2
Cmd_)/NOPR
Cmd_)*SET,_z(4)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select DOF set
  Typ_LIS_RadioB
   LIS_Torsional ROTX  ,4
   LIS_Torsional ROTY  ,5
   LIS_Torsional ROTZ  ,6
   LIS_ROTX ROTY ROTZ  ,15
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E END
:! 
:N Fnc_Rot_Dam_No
:S    271,   125,   139
:T Cmd_P
:A    Nonlin Rotary
:D Nonlinear Rotar Damper
:H Hlp_E_S4.14
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Nonlinear Torsional Damper]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_1214
Cal_Fnc_Rot_Dam_2
:E END
:! 
:N Fnc_Rot_Damper
:S    264,   122,   135
:T Cmd_P
:A    Linear Rotary
:D Linear Rotar Damper
:H Hlp_E_S4.14
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Linear Torsional Damper]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_214
Cal_Fnc_Rot_Dam_1
:E END
:! 
:N Fnc_Rot_Spr_1
:S    745,   235,   503
:T Command
:D Real Constants for 14 - Linear Rotar Spring
:H Hlp_E_S4.14
:H Hlp_C_R
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(3)=0
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=14
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Linear Rotational Spring
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Spring constant               K
Cmd_)/NOPR
Cmd_)*SET,_z(4)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select DOF set
  Typ_LIS_RadioB
   LIS_Torsional ROTX  ,4
   LIS_Torsional ROTY  ,5
   LIS_Torsional ROTZ  ,6
   LIS_ROTX ROTY ROTZ  ,15
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E END
:! 
:N Fnc_Rot_Spr_2
:S    777,   243,   527
:T Command
:D Real Constants for 39 - Nonlinear Rotational Spring
:H Hlp_E_S4.39
:H Hlp_C_R
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(3)=0
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=39
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Nonlinear Rotational Spring
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)*SET,_z(4)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Elem behavior compress load
   Typ_LIS_RadioB
   LIS_On compres curve,0
   LIS_No comprs resist,1
   LIS_Tens then comprs,2
Cmd_)*SET,_z(44)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select DOF set
  Typ_LIS_RadioB
   LIS_Torsional ROTX  ,4
   LIS_Torsional ROTY  ,5
   LIS_Torsional ROTZ  ,6
   LIS_ROTX ROTY ROTZ  ,15
Cmd_)/GO
Cal_Fnc_NonlinRC
:E END
:! 
:N Fnc_Rot_Spr_No
:S    278,   131,   140
:T Cmd_P
:A    Nonlin Rotary
:D Nonlinear Rotar Spring
:H Hlp_E_S4.39
:P (ELECMAG+profs)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Nonlinear Rotational Spring]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_1209
Cal_Fnc_Rot_Spr_2
:E END
:! 
:N Fnc_Rot_Spring
:S    250,   115,   128
:T Cmd_P
:A    Linear Rotary
:D Rotar Spring
:H Hlp_E_S4.14
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Torsional Spring]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_209
Cal_Fnc_Rot_Spr_1
:E END
:! 
:N Fnc_RunStatFil
:S    237,   196,    34
:T Cmd_N
:C )! Fnc_RunStatFil
:C )! The purpose of this block is to make the conversion
:C )! from UIDL to EUIDL function properly
:A Run Stat
:K runstat
Inp_P
! Exclude_from_paths
Cmd_)!
:E END
:! 
:N Fnc_SABS
:S    515,   172,   336
:T Command
:C )! Fnc_SABS
:A Abs Value Option
:D Absolute Value Option for Element Table Calculations
:K #(POST1+RESULTS)
:H Hlp_C_SABS
Inp_NoApply
Cmd_SABS
 Fld_0
  Typ_Lab
  Prm_[SABS]  Absolute Value Option for Element Table Calculations
 Fld_2
  Prm_KEY  Use absolute values?
  Typ_LOGI,No              ,Yes
  Def_*GET(common,,cpost1,,int,89)
 Fld_0
  Typ_Lab
  Prm_(Valid for Sum of Each Item, Add Items,
 Fld_0
  Typ_Lab
  Prm_ Multiply, Find Maximum, Find Minimum)
:E END
:! 
:N Fnc_SADD
:S    744,   167,   558
:T Command
:C )! Fnc_SADD
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Add Items
:D Add Element Table Items
:H Hlp_C_SADD
:K #(POST1+RESULTS)
Cmd_SADD
 Fld_0
  Typ_Lab
  Prm_[SADD]           LabR = (FACT1 * Lab1) + (FACT2 * Lab2) + CONST
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_  
 Fld_5
  Prm_FACT1  1st Factor
  Typ_REAL
  Def_1
 Fld_3
  Prm_Lab1   1st Element table item
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
Fld_0
Prm_  
 Fld_6
  Prm_FACT2  2nd Factor
  Typ_REAL
  Def_1
 Fld_4
  Prm_Lab2   2nd Element table item
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
  LIS_- none -                        ,"  "
Fld_0
Prm_  
 Fld_7
  Prm_CONST  Constant
  Typ_REAL
:E End_OF_Fnc_SADD
:! 
:N Fnc_SALLOW
:S    300,   159,   134
:T Command
:C )! Fnc_SALLOW
:A    Constant
:D Constant Allowable Stress
:K #(POST1+RESULTS)
:P (LINPLUS)
:H Hlp_C_SALLOW
Inp_NoApply
Cmd_SALLOW
 Fld_2
  Typ_Lab
  Prm_[SALLOW]  Allowable stress
  Typ_REAL
  Def_*GET(common,,cpost1,,real,1)
 Fld_0
  Prm_ 
:E END
:! 
:N Fnc_SALLOW_reset
:S    148,   124,    17
:T Cmd_N
:C )! Fnc_SALLOW_reset
:A    Reset Stress
:P (LINPLUS)
:H Hlp_C_SALLOW
Inp_P
Cmd_SALLOW
:E END
:! 
:N Fnc_SBCTRAN
:S    472,   201,   264
:T Command
:C )! Fnc_SBCTRAN
:A    All Solid Lds
:D Transfer All Solid Model Loads to FE Model
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SBCTRAN
Inp_NoApply
Cmd_SBCTRAN
 Fld_0
  Typ_Lab
  Prm_[SBCTRAN]  This function transfers solid model loads from 
 Fld_0
  Typ_Lab
  Prm_           currently selected keypoints, lines, and areas 
 Fld_0
  Typ_Lab
  Prm_           to currently selected nodes and elements.
:E END
:! 
:N Fnc_SCENERGY
:S    266,   132,   127
:T Cmd
:C )! Fnc_SCENERGY
:A    Co-Energy
:K #(POST1+RESULTS+MAGNETIC+edgeelc)
:P (ELECMAG)
Inp_P
Cmd_)!
K_LN(POST1+RESULTS+MAGNETIC+harmonic)
Cal_Fnc_SCENERGY_S
K_LN(POST1+RESULTS+MAGNETIC+HARMONIC)
Cal_Fnc_SCENERGY_H
:E End
:! 
:N Fnc_SCENERGY_H
:S    328,    99,   222
:T Cmd
:C )!Fnc_SCENERGY_H
:P (ELECMAG)
:H Hlp_C_SENERGY
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[SENERGY]  This function calculates the stored magnetic
 Fld_0
  Typ_Lab
  Prm_           co-energy for the currently selected elements.
Cmd_SENERGY
 Fld_2
  Typ_Def_1
 Fld_3
  Typ_Def_1
:E END
:! 
:N Fnc_SCENERGY_S
:S    328,    99,   222
:T Cmd
:C )!Fnc_SCENERGY_S
:P (ELECMAG)
:H Hlp_C_SENERGY
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[SENERGY]  This function calculates the stored magnetic
 Fld_0
  Typ_Lab
  Prm_           co-energy for the currently selected elements.
Cmd_SENERGY
 Fld_2
  Typ_Def_1
 Fld_3
  Typ_Def_0
:E END
:! 
:N Fnc_SCLIST
:S    351,   133,   211
:T Cmd
:C )! Fnc_SCLIST
:A Specified Section Numbers
:D List Specified Sections
:H Hlp_C_SLIST
Cmd_SLIST
 Fld_0
  Typ_Lab
  Prm_[SLIST]  List Specified Sections
 Fld_2
  Prm_NSET1,NSET2,NINC  Section range 
  Typ_INT3
  Def_1,blank,1
 Fld_3
  Prm_[SLIST]  Brief Mode
  Typ_LOGI,Off             ,On
  Def_0
:E End
:! 
:N Fnc_SDELETE
:S    856,   233,   616
:T Cmd
:C )! Fnc_SDELETE
:C )/NOPR
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A Delete Section
:D Delete Section Data
:H Hlp_C_SDELETE
Cmd_SDELETE
 Fld_0
  Typ_Lab
  Prm_[SDELETE] Delete Section Data from Database
 Fld_2
  Prm_First Section ID [SFIRST]
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
 Fld_3
  Prm_Last Section ID  [SLAST]
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
 Fld_4
  Prm_Increment in ID  [SINC]
  Typ_INT
 Fld_5
  Prm_Pretension cleanup KNOCLEAN
  Typ_LIS_RadioB
  LIS_Allow cleanup   ,0
  LIS_Suppress cleanup,1
 Fld_6
  Prm_Element associativity
  Typ_LIS_OPTIONB
  LIS_Do not check    ,NOCHECK
  LIS_Warnings        ,WARN
  LIS_Check           ,CHECK
  Def_NOCHECK
:E END
:! 
:N Fnc_SE
:S    475,   189,   279
:T Command
:C )! Fnc_SE
:A   From .SUB File
:D Read in Superelement From Matrix File (.SUB)
:K #((PREP7)+(cfd*NOFILTER))
:P (THERMAL*FULL_ANS)
:H Hlp_C_SE
Cmd_SE
Fld_0
 Typ_Lab
 Prm_[SE]  Read in Superelement From Matrix File (.SUB)
Fld_2
 Prm_File   Jobname of matrix file
 Typ_CHAR,32,32
Fld_5
 Prm_TOLER  Tolerance for coincidence
 Typ_REAL
 Def_.0001
Fld_0
 Typ_Lab
 Prm_       - of use pass nodes and master nodes on matrix file
:E END
:! 
:N Fnc_SECCONreinf
:S    691,   278,   406
:T Cmd
:C )! Fnc_SECCONreinf
:C )/NOPR
:C )*get,_z1,common,,sectionc,,int,6
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A    Sect Control
:D Section Control
:H Hlp_C_SECCONTROL
! Exclude_from_paths
Cmd_SCURRENT
 Fld_0
  Typ_Lab
  Prm_Section Control Parameter
 Fld_2
  Prm_Section ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
 Fld_0
  Typ_Sep
Cmd_SECCONTROL
 Fld_2
  Prm_Reinforcing behavior   TENSKEY
  Typ_LIS_OPTIONB
  LIS_Tension + Comp  ,0
  LIS_Tension only    ,1
  LIS_Compression only,-1
  Def_*GET(common,,sectionc,,real,53)
:E END
:! 
:N Fnc_SECPLOTbeam
:S    744,   298,   439
:T Cmd
:C )! Fnc_SECPLOTbeam
:C )/NOPR
:C )*get,_z1,common,,sectionc,,int,6
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A    Plot Section
:D Plot Beam Section
:K (PR_STRUC*pr_set)
:H Hlp_C_SECPLOT
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_2
  Prm_[SECPLOT] Plot Section with ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
Cmd_)*SET,_z3
 Fld_2
  Prm_    Show section mesh?
  Typ_LIS_OptionB
  LIS_No              ,0
  LIS_Yes             ,1
  LIS_Node numbers    ,2
  LIS_Cell numbers    ,3
  LIS_Material numbers,4
  LIS_Mat colors only ,5
  LIS_RST order       ,6
  Def_0
Cmd_)/GO
Cal_Fnc_SECPLOTfit
:E END
:! 
:N Fnc_SECPLOTfit
:S    364,   196,   161
:T Cmd
:C )! Fnc_SECPLOTfit
:C )/NOPR
:C )KEYW,SECPFIT,0
:C )*IF,_z3,GE,3,THEN
:C )KEYW,SECPFIT,1
:C )*ENDIF
:C )/GO
:A Section Plot
:K #(PREP7*SOLUTION)
Inp_P
! Exclude_from_paths
Cmd_/AUTO,FIT
K_CM(SECPFIT)
Cmd_SECPLOT
 Fld_2
  Typ_Def_*PAR(_z2)
 Fld_3
  Typ_Def_*PAR(_z3)
Cmd_)/NOPR
Cmd_)KEYW,SECPFIT,0
Cmd_)/GO
:E END
:! 
:N Fnc_SECPLOTpipe
:S    744,   298,   439
:T Cmd
:C )! Fnc_SECPLOTpipe
:C )/NOPR
:C )*get,_z1,common,,sectionc,,int,6
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A    Plot Section
:D Plot Pipe Section
:K (PR_STRUC*pr_set)
:H Hlp_C_SECPLOT
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_2
  Prm_[SECPLOT] Plot Section with ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
Cmd_)*SET,_z3
 Fld_2
  Prm_    Show section mesh?
  Typ_LIS_OptionB
  LIS_No              ,0
  LIS_Yes             ,1
  LIS_Node numbers    ,2
  LIS_Cell numbers    ,3
  LIS_Material numbers,4
  LIS_Mat colors only ,5
  LIS_RST order       ,6
  Def_0
Cmd_)/GO
Cal_Fnc_SECPLOTfit
:E END
:! 
:N Fnc_SECPLOTrein2
:S    353,   123,   223
:T Cmd
:C )! Fnc_SECPLOTrein2
:C )/GO
:A    Plot Section
:D Plot Reinf Section
Inp_P
! Exclude_from_paths
Cmd_/DEVICE,VECTOR
 Fld_2
  Typ_Def_*CPAR(5)
! Exclude_from_paths
Cmd_/AUTO,FIT
Cmd_SECPLOT
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
:E END
:! 
:N Fnc_SECPLOTreinf
:S    901,   280,   614
:T Cmd
:C )! Fnc_SECPLOTreinf
:C )/NOPR
:C )*get,_z1,common,,sectionc,,int,6
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A    Plot Section
:D Plot Reinf Section
:H Hlp_C_SECPLOT
Cmd_)/NOPR
Cmd_)*CSET,1,5
 Fld_2
  Prm_[SECPLOT] Plot Section with ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
 Fld_3
  Typ_INT2
  Prm_REIN1,REIN2  Reinforcing range
  Def_Blank,Blank
 Fld_5
  Prm_Overlay with solid or Shell ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_None ,'    '
  LIS_Solid ,'SOLI'
  LIS_*READ,SECT
  Def_'    '
 Fld_6
  Prm_[/DEVI]  Vector mode (wireframe)
  Typ_LOGI,Off             ,On
  Def_*GET(GRAPH,,DISPLAY)
 Fld_0
  Typ_Lab
  Prm_         Vector mode On displays layer orientations
Cmd_)/GO
Cal_Fnc_SECPLOTrein2
:E END
:! 
:N Fnc_SECPLOTshel
:S    507,   278,   222
:T Cmd
:C )! Fnc_SECPLOTshel
:C )/NOPR
:C )*get,_z1,common,,sectionc,,int,6
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A    Plot Section
:D Plot Shell Section
:H Hlp_C_SECPLOT
Cmd_SECPLOT
 Fld_2
  Prm_[SECPLOT] Plot Section with ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
 Fld_3
  Typ_INT2
  Prm_LAYR1,LAYR2      Range of layers
  Def_Blank,Blank
:E END
:! 
:N Fnc_SEDLIS
:S    417,   167,   243
:T Cmd
:C )!  Fnc_SEDLIS
:A Superelem DOF
:D List Superelement DOF Solution
:K ((POST1)+(lsdyna))
:P (FULL_ANS)
:H Hlp_C_SEDLIST
Cmd_SEDLIST
 Fld_0
  Typ_Lab
  Prm_[SEDLIST]  List Superelement DOF Solution
 Fld_2
  Typ_CHAR
  Prm_Sename  Name or no. of superelem
 Fld_3
  Prm_KOPT    Data to be listed
  Typ_LIS_OPTIONB
   LIS_Summary only    ,0
   LIS_Full contents   ,1
:E End
:! 
:N Fnc_SEEXP
:S    649,   170,   472
:T Command
:C )! Fnc_SEEXP
:A Expand Superelem
:D Expand Superelement
:K #((PREP7*SOLUTION)+(SUBSTRUC))
:P (FULL_ANS)
:H Hlp_C_SEEXP
Inp_NoApply
Cmd_SEEXP
 Fld_0
  Typ_Lab
  Prm_[SEEXP]  Expand Superelement
 Fld_2
  Prm_Sename  Name of matrix file -
  Typ_CHAR
 Fld_0
  Typ_Lab
  Prm_        - created by the substructure generation pass (Sename.SUB)
 Fld_3
  Prm_Usefil  Name of DOF solu file -
  Typ_CHAR
 Fld_0
  Typ_Lab
  Prm_        - created by the substructure use pass (Usefil.DSUB)
 Fld_4
  Prm_Imagky  For harmonic solution
  Typ_LIS_OptionB
  LIS_Use real compon ,OFF
  LIS_Use imagin comp ,ON
:E END
:! 
:N Fnc_SEGEN
:S    440,   172,   261
:T Command
:C )! Fnc_SEGEN
:A Automatic
:D Automatic Superelement Generation
:K #(PREP7*SOLUTION)
:P (THERMAL*FULL_ANS)
:H Hlp_C_SEGEN
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_[SEGEN]  Automatic superelement generation
 Fld_2
  Prm_Generate during SOLVE?
  Typ_Lis_RadioB
   Lis_No     ,0
   Lis_Yes    ,1
   Lis_Preview,2
Cal_Fnc_SEGEN_2a,2,eq,0
Cal_Fnc_SEGEN_2b,2,eq,1
Cal_Fnc_SEGEN_2c,2,eq,2
:E END
:! 
:N Fnc_SEGEN_2a
:S    236,   192,    37
:T Command
:C )! Fnc_SEGEN_2a
:A Superelement Generation
:D Automatic Superelement Generation
:K #(PREP7*SOLUTION)
:P (THERMAL*FULL_ANS)
:H Hlp_C_SEGEN
Inp_P
Cmd_SEGEN
 Fld_2
  Typ_Def_OFF
:E END
:! 
:N Fnc_SEGEN_2b
:S    507,   192,   308
:T Command
:C )! Fnc_SEGEN_2b
:A Superelement Generation
:D Automatic Superelement Generation
:K #(PREP7*SOLUTION)
:P (THERMAL*FULL_ANS)
:H Hlp_C_SEGEN
Inp_NoApply
Cmd_SEGEN
 Fld_0
  Typ_Lab
  Prm_[SEGEN]  Automatic superelement generation
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_AUTO
 Fld_3
  Prm_Number of superelements
  Typ_INT
  Def_10
 Fld_4
  Typ_Lis_OptionB
  Prm_Master DOF 
  Lis_Automatic      ,NO 
  Lis_User-defined   ,YES
  Def_NO
 Fld_5
  Typ_Def_GEN
:E END
:! 
:N Fnc_SEGEN_2c
:S    509,   192,   310
:T Command
:C )! Fnc_SEGEN_2c
:A Superelement Generation
:D Automatic Superelement Generation
:K #(PREP7*SOLUTION)
:P (THERMAL*FULL_ANS)
:H Hlp_C_SEGEN
Inp_NoApply
Cmd_SEGEN
 Fld_0
  Typ_Lab
  Prm_[SEGEN]  Automatic superelement generation
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_AUTO
 Fld_3
  Prm_Number of superelements
  Typ_INT
  Def_10
 Fld_4
  Typ_Lis_OptionB
  Prm_Master DOF
  Lis_Automatic      ,NO
  Lis_User-defined   ,YES
  Def_NO
 Fld_5
  Typ_Def_PREVIEW
:E END
:! 
:N Fnc_SELIST
:S    458,   136,   315
:T Cmd
:C )! Fnc_SELIST
:A Superelem Data
:D List Superelement Data
:H Hlp_C_SELIST
:P (FULL_ANS)
Cmd_SELIST
 Fld_0
  Typ_Lab
  Prm_[SELIST]  List Superelement Data
 Fld_2
  Typ_CHAR,8
  Prm_Sename  Name or no. of superelem
  Def_*GET(ACTIVE,,JOBNAME)
 Fld_3
  Prm_KOPT    Data to be listed
  Typ_LIS_OPTIONB
   LIS_Summary only    ,0
   LIS_No load vect/mtx,1
   LIS_No matrices     ,2
   LIS_Full contents   ,3
:E End
:! 
:N Fnc_SENERGY
:S    276,   144,   125
:T Cmd
:C )! Fnc_SENERGY
:A    Energy
:K #(POST1+RESULTS+MAGNETIC)
:K #((edgeelc)*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
K_LN(POST1+RESULTS+MAGNETIC+harmonic)
Cal_Fnc_SENERGY_S
K_LN(POST1+RESULTS+MAGNETIC+HARMONIC)
Cal_Fnc_SENERGY_H
:E End
:! 
:N Fnc_SENERGY_H
:S    323,    97,   219
:T Cmd
:C )!Fnc_SENERGY_H
:P (ELECMAG)
:H Hlp_C_SENERGY
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[SENERGY]  This function calculates the stored magnetic
 Fld_0
  Typ_Lab
  Prm_           energy for the currently selected elements.
Cmd_SENERGY
 Fld_2
  Typ_Def_0
 Fld_3
  Typ_Def_1
:E END
:! 
:N Fnc_SENERGY_S
:S    323,    97,   219
:T Cmd
:C )!Fnc_SENERGY_S
:P (ELECMAG)
:H Hlp_C_SENERGY
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[SENERGY]  This function calculates the stored magnetic
 Fld_0
  Typ_Lab
  Prm_           energy for the currently selected elements.
Cmd_SENERGY
 Fld_2
  Typ_Def_0
 Fld_3
  Typ_Def_0
:E END
:! 
:N Fnc_SEQ_Sequen
:S    431,   163,   261
:T Command
:C )! Fnc_SEQ_Sequen
:A Sequential method
:D Sequential method
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFSORDER
Inp_NoApply
 Fld_0
  Typ_Lab
 Prm_ Select solution order for sequential method
Cmd_)*CSET,1,2
 Fld_2
  Prm_ Select order
   Typ_LIS_OptionB
   LIS_Solve Ansys First,ANS
   LIS_Solve CFX First,CFX
Cmd_)/GO
Cal_Fnc_ANSYS_1st,2,es,ANS,1
Cal_Fnc_CFX_1st,2,es,CFX,1
:E END
:! 
:N Fnc_SEQ_Simul
:S    397,   142,   248
:T Command
:C )! Fnc_SEQ_Simul
:A Simul
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFPS
:H Hlp_C_MFSORDER
Inp_P
Fld_0
  Typ_lab
Cmd_MFCL
 Fld_0
 Fld_2
   Typ_Def_MFPS
Cmd_MFPS
 Fld_0
 Fld_2
  Typ_Def_group1
 Fld_3
  Typ_Def_ANSYS
 Fld_4
  Typ_Def_CFX
Cmd_MFSO
 Fld_0
 Fld_2
  Typ_Def_group1
 Fld_0
Cmd_MFRE
 Fld_2
 Typ_Def_ALL
 Fld_3
  Typ_Def_*PAR(_z1)
:E END
:! 
:N Fnc_SESYMM
:S    713,   206,   500
:T Command
:C )! Fnc_SESYMM
:C )*SET,_zx,'*'
:A   By Reflection
:D Create Superelement by Reflection
:K #((PREP7)+(cfd*NOFILTER))
:P (THERMAL*FULL_ANS)
:H Hlp_C_SESYMM
Cmd_SESYMM
Fld_0
 Typ_Lab
 Prm_[SESYMM]  Create Superelement by Reflecting Existing Superelement
Fld_2
 Prm_Sename  Name of existing superel
 Typ_CHAR,32,32
Fld_0
 Typ_Lab
 Prm_        (i.e., jobname of existing superelement matrix file)
Fld_3
 Prm_Ncomp   Reflect superelem about
 Typ_LIS_OptionB
 LIS_Y-Z plane      X,X
 LIS_X-Z plane      Y,Y
 LIS_X-Y plane      Z,Z
Fld_4
 Prm_INC     Node increment
 Typ_INT
 Def_Blank
Fld_5
 Typ_FILE_INLINE
 Prm_File  Name of new superelem file
 Def_*PAR(_zx)
:E END
:! 
:N Fnc_SETFGAP
:S    486,   166,   313
:T Command
:C )! Fnc_SETFGAP
:A ThinFilm
:D Define Real constant sets for FLUID136
:K #(PREP7*SOLUTION+TFILM)
:H Hlp_C_SETFGAP
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_[SETFGAP]  Define unique real constant set for each FLUID136 element
 Fld_2
  Prm_Selected elements specification
  Typ_LIS
   Lis_Create new sets ,0
   Lis_Update sets after solution,1
   Lis_Update only GAP after solution,2
Cmd_)/GO
Cal_Fnc_SETFGAP_1
:E End
:! 
:N Fnc_SETFGAP_1
:S   1344,   463,   874
:T Command
:C )! Fnc_SETFGAP_1
:C )/NOPR
:C )keyw,lodstp,0
:C )keyw,gaponl,0
:C )*if,_z1,gt,0,then
:C )keyw,lodstp,1
:C )*if,_z1,gt,1,then
:C )keyw,gaponl,1
:C )*endif
:C )*endif
:C )_el9=0
:C )_el9=elnext(_el9)
:C )*GET,_RC_SET,ELEM,_el9,ATTR,REAL
:C )*GET,_z5,rcon,_RC_SET,CONST,5
:C )*GET,_z6,rcon,_RC_SET,CONST,6
:C )/GO
:A ThinFilm
:D Define Real constant set for FLUID136
:K #(PREP7*SOLUTION+TFILM)
:H Hlp_C_SETFGAP
Inp_NoApply
Cmd_SETFGAP
 Fld_0
  Typ_Lab
  K_LN(lodstp)
  Prm_[SETFGAP]  Create Real Constant set for each FLUID136 element
  K_LN(LODSTP)
  Prm_[SETFGAP]  Update Real Constant set for each FLUID136 element
Fld_2
K_FL(lodstp)
Prm_Gap separation               GAP
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Fld_3
Typ_Def_*PAR(_z1)
!
Fld_4
K_FL(LODSTP)
Typ_Def_1
!
Fld_5
K_FL(gaponl)
Prm_Ambient pressure            PAMB
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
!
Fld_6
K_FL(gaponl)
Prm_Accommodation factors  ACF1,ACF2
Typ_Real2
Def_*PAR(_z5),*PAR(_z6)
!
Fld_8
K_FL(gaponl)
Prm_Ref.pressure for free path  PREF
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
!
Fld_9
K_FL(gaponl)
Prm_Mean free path at ref. pres. MFP
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
!
 Fld_0
 K_FL(LODSTP)
  Typ_Sep
 Fld_0
 K_FL(LODSTP)
  Typ_Lab
  Prm_Note: Gap separation is updated from the solution results
:E END
:! 
:N Fnc_SETMOD
:S   3748,   622,  3119
:T Command
:C )! Fnc_SETMOD
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3,1
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,50
:C )_zc(1)=' ',' ','ANEL',' ',' ','BISO',' ','MOONEY',' '
:C )_zc(10)='PLAW','DISC','FOAM','FOAM',' ','FOAM','FOAM'
:C )_zc(17)='PLAW','EVISC','PLAW',' ','PLAW'
:C )_zc(22)='PLAW','PLAW','PLAW'
:C )_zc(25)='HONE','COMP',' ','PLAW',' ','EOS ','EOS '
:C )_zc(32)='EOS ','BKIN','EOS ','EOS ','EOS ','EOS ',
:C )_zc(38)='EOS ',' ','CONCR','PLAW','EOS '
:C )*if,_MP_NEXT,le,0,then
:C )_MP_NEXT=1
:C )*endif
:C )/GO
:A Define MAT Model
:D Explicit Dynamics Material Models
:H Hlp_UI_mpadd
Cmd_)/NOPR
 Fld_0
  Typ_Lab
  Prm_
Cmd_)*SET,_z(2)
 Fld_2
  Prm_Define material model using MAT num...
  Typ_Lis_OptionB
  Lis_*READ,MAT
  Def_*PAR(_MP_NEXT)
!
Fld_0
 Typ_Lab
 Prm_
!
Cmd_)*SET,_z(1)
 Fld_2
  K_FL(ED*LSDYNA)
  P_FL(FULL_ANS)
  Typ_IDX
  IDX_Linear Elastic       ,Isotropic              ,1
  IDX_Linear Elastic       ,Orthotropic            ,2
  IDX_Linear Elastic       ,Anisotropic            ,3
  IDX_Nonlin Elastic       ,BLATZ-KO Rubber        ,5
  IDX_Nonlin Elastic       ,Mooney-Rivlin          ,8
  IDX_Nonlin Elastic       ,Viscoelastic           ,18
  IDX_Plasticity           ,Bilinear Isotrop       ,6
  IDX_Plasticity           ,Transvrs Anisotr       ,10
  IDX_Plasticity           ,Rate Sensitive         ,17
  IDX_Plasticity           ,Plastic Kinemat        ,19
  IDX_Plasticity           ,Bilinear Kinemat       ,33
  IDX_Plasticity           ,Power Law              ,21
  IDX_Plasticity           ,3-Param Barlat         ,22
  IDX_Plasticity           ,Barlat Anisotro        ,23
  IDX_Plasticity           ,Rate Dependent         ,24
  IDX_Plasticity           ,Piecewise Linear       ,28
  IDX_Plasticity           ,Hydrodynamic           ,41
  IDX_Foam                 ,Closed Cell            ,12
  IDX_Foam                 ,Viscous                ,13
  IDX_Foam                 ,Low Density            ,15
  IDX_Foam                 ,Crushable              ,16
  IDX_Foam                 ,Honeycomb              ,25
  IDX_Composite            ,Damage                 ,26
  IDX_Concrete             ,Damage                 ,40
  IDX_EOS                  ,J.Cook-Lin. Poly       ,30
  IDX_EOS                  ,J.Cook-Gruneisen       ,31
  IDX_EOS                  ,J.Cook-Tabulated       ,34
  IDX_EOS                  ,Null-Lin.Poly          ,32
  IDX_EOS                  ,Null-Gruneisen         ,29
  IDX_EOS                  ,Null-Tabulated         ,35
  IDX_EOS                  ,Zer/Arm-Lin. Poly      ,36
  IDX_EOS                  ,Zer/Arm-Gruneisen      ,37
  IDX_EOS                  ,Zer/Arm-Tabulated      ,38
  IDX_EOS                  ,Bamman                 ,42
  IDX_Discrete             ,Linear Elas Sprng      ,43
  IDX_Discrete             ,Linear Visc Dampr      ,44
  IDX_Discrete             ,Elastoplast Sprng      ,45
  IDX_Discrete             ,Nonlin Elas Sprng      ,46
  IDX_Discrete             ,Nonlin Visc Dampr      ,47
  IDX_Discrete             ,Genl Nonlin Sprng      ,48
  IDX_Discrete             ,Maxwl Visco Sprng      ,49
  IDX_Discrete             ,Inelastic Spring       ,50
  IDX_Other                ,Rigid                  ,7
  IDX_Other                ,Cable                  ,27
  IDX_Other                ,Fluid                  ,39
  Def_*PAR(_z(1))
!
Cmd_)_MODTYP = _z(1)
Cmd_)_MPACT = _z(2)
Cmd_)MPMOD,_MPACT,_MODTYP
Cmd_)_PREDEF = 1
Cmd_)_TYPE = _zc(_z(1))
!
Cmd_)*IF,_z(1),NE,1,THEN
Cmd_)*IF,_z(1),NE,2,THEN
Cmd_)*IF,_z(1),NE,5,THEN
Cmd_)*IF,_z(1),NE,7,THEN
Cmd_)*IF,_z(1),NE,27,THEN
Cmd_)*IF,_z(1),NE,39,THEN
Cmd_)TB,_TYPE,_z(2)
Cmd_)*ENDIF
Cmd_)*ENDIF
Cmd_)*ENDIF
Cmd_)*ENDIF
Cmd_)*ENDIF
Cmd_)*ENDIF
!
Cmd_)/GO
Cal_Fnc_MPKEY1
:E END
:! 
:N Fnc_SETRAN_cs
:S    814,   214,   593
:T Command
:C )! Fnc_SETRAN_cs
:C )*SET,_zx,'*'
:A   By CS Transfer
:D Create Superelement by CS Transfer
:K #((PREP7)+(cfd*NOFILTER))
:P (THERMAL*FULL_ANS)
:H Hlp_C_SETRAN
Cmd_SETRAN
Fld_0
 Typ_Lab
 Prm_[SETRAN]  Create Superelement by CS Transfer of Existing Superelement
Fld_2
 Prm_Sename  Name of existing superel
 Typ_CHAR,32,32
Fld_0
 Typ_Lab
 Prm_        (i.e., jobname of existing superelement matrix file)
Fld_3
 Prm_KCNTO   Coordinate system -
 Typ_INT
 Def_*GET(active,,csys)
Fld_0
 Typ_Lab
 Prm_        - to which superelement is to be transferred
Fld_11
 Prm_NOROT   Fix nodal coord systems?
 Typ_LOGI,No - rotate them,Yes
Fld_4
 Prm_INC     Node increment
 Typ_INT
 Def_Blank
Fld_5
 Typ_FILE_INLINE
 Prm_File  Name of new superelem file
 Def_*PAR(_zx)
:E END
:! 
:N Fnc_SETRAN_geom
:S    728,   224,   497
:T Command
:C )! Fnc_SETRAN_geom
:C )*SET,_zx,'*'
:A   By Geom Offset
:D Create Superelement by Geometric Offsets
:K #((PREP7)+(cfd*NOFILTER))
:P (THERMAL*FULL_ANS)
:H Hlp_C_SETRAN
Cmd_SETRAN
Fld_0
 Typ_Lab
 Prm_[SETRAN]  Create Superelement by Geom Offset of Existing Superelement
Fld_2
 Prm_Sename  Name of existing superel
 Typ_CHAR,32,32
Fld_0
 Typ_Lab
 Prm_        (i.e., jobname of existing superelement matrix file)
Fld_8
 Prm_DX,DY,DZ  Geometric offsets -
 Typ_REAL3
Fld_0
 Typ_Lab
 Prm_        - in the global Cartesian coordinate systems
Fld_4
 Prm_INC     Node increment
 Typ_INT
 Def_Blank
Fld_5
 Typ_FILE_INLINE
 Prm_File  Name of new superelem file
 Def_*PAR(_zx)
:E END
:! 
:N Fnc_SET_detailed
:S    179,   151,    21
:T Cmd
:C )! Fnc_SET_detailed
:A     Detailed Summary
:D Detailed Results Summary
:H Hlp_C_SET
:K #(POST1)
Inp_P
Cmd_SET,LIST,2
:E END
:! 
:N Fnc_SET_detl_ord
:S    238,   195,    36
:T Cmd
:C )! Fnc_SET_detl_ord
:A     Detailed Summary (Freq ordered)
:D Detailed Results Summary
:H Hlp_C_SET
:K ((MODAL*BUCKLING)+CYCLIC)
:K #(POST1)
Inp_P
Cmd_SET,LIST,2, , , , , ,ORDE
:E END
:! 
:N Fnc_SET_first
:S    195,   156,    32
:T Cmd_N
:C )! Fnc_SET_first
:A    First Set
:D Read First Set of Results on Results File
:K #(POST1)
:H Hlp_C_SET
Inp_P
Cmd_SET,FIRST
Cal_REFRESH
:E END
:! 
:N Fnc_SET_last
:S    190,   152,    31
:T Cmd_N
:C )! Fnc_SET_last
:A    Last Set
:D Read Last Set of Results on Results File
:K #(POST1)
:H Hlp_C_SET
Inp_P
Cmd_SET,LAST
Cal_REFRESH
:E END
:! 
:N Fnc_SET_list
:S    159,   129,    23
:T Cmd
:C )! Fnc_SET_list
:A    By Pick
:D Read Results by Pick
:H Hlp_C_SET
:K #(POST1)
Inp_P
Cmd_SET,LIST,999
:E END
:! 
:N Fnc_SET_list_ord
:S    226,   181,    38
:T Cmd
:C )! Fnc_SET_list_ord
:A    By Pick (Freq ordered)
:D Read Results by Pick
:H Hlp_C_SET
:K ((MODAL*BUCKLING)+CYCLIC)
:K #(POST1)
Inp_P
Cmd_SET,LIST,999, , , , , ,ORDE
:E END
:! 
:N Fnc_SET_lstep
:S   1093,   191,   895
:T Command
:C )! Fnc_SET_lstep
:C )/NOPR
:C )_z1='LAST'
:C )/GO
:A    By Load Step
:D Read Results by Load Step Number
:H Hlp_UI_setlstep
:K #(POST1)
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_[SET] [SUBSET] [APPEND]
 Fld_1
  Prm_   Read results for
  Typ_LIS_OPTIONB
  LIS_Entire model    ,SET
  LIS_Selected subset ,SUBSET
  LIS_Subset - append ,APPEND
! Cust_Cmd_SET
! Cust_Cmd_SUBSET
! Cust_Cmd_APPEND
Fld_0
Typ_SEP
 Fld_2
  Prm_LSTEP   Load step number
  Typ_INT
  Def_1
 Fld_3
  Prm_SBSTEP  Substep number
  Typ_CHAR
  Def_*PAR(_z1)
 Fld_4
  Prm_FACT    Scale factor
  Typ_REAL
  Def_1.0
 Fld_0
  K_FL(HARMONIC*MODAL*NOFILTER)
  Typ_Lab
  Prm_        (Enter VELO for velocities or ACEL for accelerations)
!  
 Fld_5
  K_FL(HARMONIC*NOFILTER)
  Prm_KIMG    Real or imaginary part
  Typ_LIS_OptionB
  LIS_Real part       ,0
  LIS_Imaginary part  ,1
 Fld_7
  P_FL(FULL_ANS)
  K_FL(HARMONIC*NOFILTER)
  Prm_ANGLE   Circumferential location
  Typ_REAL
 Fld_0
  K_FL(HARMONIC*NOFILTER)
  Typ_Lab
  Prm_        - for harmonic elements
Cal_REFRESH
:E End
:! 
:N Fnc_SET_next
:S    190,   152,    31
:T Cmd_N
:C )! Fnc_SET_next
:A    Next Set
:D Read Next Set of Results on Results File
:K #(POST1)
:H Hlp_C_SET
Inp_P
Cmd_SET,NEXT
Cal_REFRESH
:E END
:! 
:N Fnc_SET_nset
:S   1019,   156,   856
:T Command
:C )! Fnc_SET_nset
:A    By Set Number
:D Read Results by Data Set Number
:H Hlp_UI_setlstep
:K #(POST1)
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_          Read Results by Data Set Number
Fld_0
Typ_SEP
 Fld_0
  Typ_Lab
  Prm_[SET] [SUBSET] [APPEND]
 Fld_1
  Prm_   Read results for
  Typ_LIS_OPTIONB
  LIS_Entire model    ,SET
  LIS_Selected subset ,SUBSET
  LIS_Subset - append ,APPEND
! Cust_Cmd_SUBSET
! Cust_Cmd_APPEND
Fld_0
Typ_SEP
 Fld_8
  Prm_NSET    Data set number
  Typ_INT
  Def_1
 Fld_0
  Typ_Lab
  Prm_        (List Results Summary to determine data set number)
 Fld_4
  Prm_FACT    Scale factor
  Typ_REAL
  Def_1.0
 Fld_0
  K_FL(HARMONIC*MODAL*NOFILTER)
  Typ_Lab
  Prm_        (Enter VELO for velocities or ACEL for accelerations)
!  
 Fld_7
  P_FL(FULL_ANS)
  K_FL(STRUCTRL*THERMAL*NOFILTER)
  Prm_ANGLE   Circumferential location
  Typ_REAL
 Fld_0
  K_FL(STRUCTRL*THERMAL*NOFILTER)
  Typ_Lab
  Prm_        - for harmonic elements
Cal_REFRESH
:E End
:! 
:N Fnc_SET_prev
:S    202,   160,    35
:T Cmd_N
:C )! Fnc_SET_prev
:A    Previous Set
:D Read Previous Set of Results on Results File
:K #(POST1)
:H Hlp_C_SET
Inp_P
Cmd_SET,PREVIOUS
Cal_REFRESH
:E END
:! 
:N Fnc_SET_sum_ord
:S    227,   184,    36
:T Cmd
:C )! Fnc_SET_sum_ord
:A Results Summary (Freq ordered)
:D List Results Summary
:H Hlp_C_SET
:K ((MODAL*BUCKLING)+CYCLIC)
:K #(POST1)
Inp_P
Cmd_SET,LIST, , , , , , ,ORDE
:E END
:! 
:N Fnc_SET_summary
:S    166,   140,    19
:T Cmd
:C )! Fnc_SET_summary
:A Results Summary
:D List Results Summary
:H Hlp_C_SET
:K #(POST1)
Inp_P
Cmd_SET,LIST
:E END
:! 
:N Fnc_SET_time
:S   1194,   157,  1030
:T Command
:C )! Fnc_SET_time
:A    By Time/Freq
:D Read Results by Time or Frequency
:H Hlp_UI_setlstep
:K #(POST1)
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_          Read Results by Time or Frequency
Fld_0
Typ_SEP
 Fld_0
  Typ_Lab
  Prm_[SET] [SUBSET] [APPEND]
 Fld_1
  Prm_   Read results for
  Typ_LIS_OPTIONB
  LIS_Entire model    ,SET
  LIS_Selected subset ,SUBSET
  LIS_Subset - append ,APPEND
! Cust_Cmd_SUBSET
! Cust_Cmd_APPEND
Fld_0
Typ_SEP
 Fld_6
  Prm_TIME    Value of time or freq
  Typ_REAL
 Fld_2
  Prm_LSTEP   Results at or near TIME
  Typ_LIS_OPTIONB
  LIS_At TIME value   ," "
  LIS_Near TIME value ,NEAR
 Fld_4
  Prm_FACT    Scale factor
  Typ_REAL
  Def_1.0
 Fld_0
  K_FL(HARMONIC*MODAL*NOFILTER)
  Typ_Lab
  Prm_        (Enter VELO for velocities or ACEL for accelerations)
!  
 Fld_5
  K_FL(HARMONIC*NOFILTER)
  Prm_KIMG    Real or imaginary part
  Typ_LIS_OptionB
  LIS_Real part       ,0
  LIS_Imaginary part  ,1
 Fld_7
  P_FL(FULL_ANS)
  K_FL(STRUCTRL*THERMAL*NOFILTER)
  Prm_ANGLE   Circumferential location
  Typ_REAL
 Fld_0
  K_FL(STRUCTRL*THERMAL*NOFILTER)
  Typ_Lab
  Prm_        - for harmonic elements
Cal_REFRESH
:E End
:! 
:N Fnc_SEW_Ar
:S    276,   150,   119
:T Cmd_P
:C )! Fnc_SEW_Ar
:C )! Superelement Wizard Picking
:A Select Areas
:D Select Areas
:C )/USER
:C )APLOT
Inp_P
Cmd_)ASEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_AREA
  Prm_Pick or enter Areas
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
:E END
:! 
:N Fnc_SEW_Li
:S    276,   150,   119
:T Cmd_P
:C )! Fnc_SEW_Li
:C )! Superelement Wizard Picking
:A Select Lines
:D Select Lines
:C )/USER
:C )LPLOT
Inp_P
Cmd_)LSEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_LINE
  Prm_Pick or enter Lines
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
:E END
:! 
:N Fnc_SEW_Vo
:S    282,   154,   121
:T Cmd_P
:C )! Fnc_SEW_Vo
:C )! Superelement Wizard Picking
:A Select Volumes
:D Select Volumes
:C )/USER
:C )VPLOT
Inp_P
Cmd_)VSEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_VOLU
  Prm_Pick or enter Volumes
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
:E END
:! 
:N Fnc_SEXP
:S    689,   179,   503
:T Command
:C )! Fnc_SEXP
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Exponentiate
:D Exponentiate Element Table Items
:H Hlp_C_SEXP
:K #(POST1+RESULTS)
Cmd_SEXP
 Fld_0
  Typ_Lab
  Prm_[SEXP]     LabR = ( |Lab1| ** EXP1 ) * ( |Lab2| ** EXP2 )
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_  
 Fld_3
  Prm_Lab1   1st Element table item
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_5
  Prm_EXP1   1st Exponent
  Typ_REAL
  Def_1
Fld_0
Prm_  
 Fld_4
  Prm_Lab2   2nd Element table item
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
  LIS_- none -                        ,"  "
 Fld_6
  Prm_EXP2   2nd Exponent
  Typ_REAL
  Def_1
:E END
:! 
:N Fnc_SE_Man_EXP
:S    165,   115,    43
:T Cmd
:C )! Fnc_SE_Man_EXP
:C )! Superelement Manager
:A Expansion Pass
Inp_P
Cmd_)~eui,'euidl::se::Interface exp'
:E END
:! 
:N Fnc_SE_Man_GEN
:S    166,   116,    43
:T Cmd
:C )! Fnc_SE_Man_GEN
:C )! Superelement Manager
:A Generation Pass
Inp_P
Cmd_)~eui,'euidl::se::Interface gen'
:E END
:! 
:N Fnc_SE_Man_USE
:S    159,   109,    43
:T Cmd
:C )! Fnc_SE_Man_USE
:C )! Superelement Manager
:A Use Pass
Inp_P
Cmd_)~eui,'euidl::se::Interface use'
:E END
:! 
:N Fnc_SFACT
:S    515,   169,   339
:T Command
:C )! Fnc_SFACT
:A SF for Node Strs
:D Safety Factors for Nodal Stresses
:K #(POST1+RESULTS)
:P (LINPLUS)
:H Hlp_C_SFACT
Inp_NoApply
Cmd_SFACT
 Fld_0
  Typ_Lab
  Prm_[SFACT]  Safety Factors for Nodal Stresses
 Fld_2
  Prm_TYPE   Item to be calculated
  Typ_LIS_RADIOB
LIS_Safety factor   ,1
LIS_Margin of safety,2
Def_*GET(common,,cpost1,,int,6)
 Fld_0
  Typ_Lab
  Prm_Note - Calculated item is stored in place of
 Fld_0
  Typ_Lab
  Prm_       nodal stresses.
:E END
:! 
:N Fnc_SFACT_0
:S    185,   160,    18
:T Cmd_N
:C )! Fnc_SFACT_0
:A Restore NodeStrs
:D Restore Nodal Stresses
:K #(POST1+RESULTS)
:P (LINPLUS)
:H Hlp_C_SFACT
Inp_P
Cmd_SFACT,0
:E END
:! 
:N Fnc_SFADELE_FSInt
:S    401,   220,   174
:T Cmd_P
:C )! Fnc_SFADELE_FSInt
:C )! Areas for SFADELE command below
:A On Areas
:D Delete FSIN on Areas
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN*NOFILTER)
:H Hlp_C_SFADELE
Inp_P
Cmd_SFADELE
Fld_2
 Prm_[SFADELE]  Pick or enter area for fluid-structure interface deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Fld_3
 Typ_Def_1
Fld_4
 Typ_Def_FSIN
:E END
:! 
:N Fnc_SFADELE_all
:S    639,   212,   420
:T Command
:C )! Fnc_SFADELE_all
:A    On All Areas
:D Delete All Surface Loads on All Selected Areas
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SFADELE
Inp_NoApply
Cmd_SFADELE,ALL,1,ALL
Cmd_SFADELE,ALL,2,ALL
Cmd_SFADELE,ALL,3,ALL
Cmd_SFADELE,ALL,4,ALL
Cmd_SFADELE,ALL,5,ALL
Cmd_SFADELE,ALL,6,ALL
Fld_0
 Typ_Lab
 Prm_[SFADELE],ALL,n,ALL   (where n is 1 through 6)
Fld_0
 Typ_Lab
 Prm_           This function deletes all surface loads
Fld_0
 Typ_Lab
 Prm_           on all selected areas and on all selected
Fld_0
 Typ_Lab
 Prm_           elements attached to those areas!
:E END
:! 
:N Fnc_SFADELE_chr2
:S    303,   120,   176
:T Command
:C )! Fnc_SFADELE_chr2
:D Delete CHRGS on Areas
:H Hlp_C_SFADELE
Cmd_SFADELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFADELE]  Delete Surface Charge Density (CHRGS) on Areas
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_3
 Typ_DEF_CHRGS
:E END
:! 
:N Fnc_SFADELE_chrg
:S    407,   250,   150
:T Cmd_P
:C )! Fnc_SFADELE_chrg
:A    On Areas
:D Delete CHRGS on Areas
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFADELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFADELE]  Pick or enter areas for surface charge density deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFADELE_chr2
:E END
:! 
:N Fnc_SFADELE_con2
:S    288,   119,   162
:T Command
:C )! Fnc_SFADELE_con2
:D Delete CONV on Areas
:H Hlp_C_SFADELE
Cmd_SFADELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFADELE]  Delete Convection (CONV) on Areas
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_3
 Typ_DEF_CONV
:E END
:! 
:N Fnc_SFADELE_conv
:S    316,   171,   138
:T Cmd_P
:C )! Fnc_SFADELE_conv
:A On Areas
:D Delete CONV on Areas
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFADELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFADELE]  Pick or enter areas for convection deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFADELE_con2
:E END
:! 
:N Fnc_SFADELE_frsf
:S    307,   163,   137
:T Cmd_P
:C )! Fnc_SFADELE_frsf
:A On Areas
:D Delete FRSF on Areas
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_SFADELE
Inp_P
Cmd_SFADELE
Fld_2
 Prm_[SFADELE]  Pick or enter areas for free surface deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_4
 Typ_DEF_FRSF
:E END
:! 
:N Fnc_SFADELE_fsi
:S    321,   161,   153
:T Cmd_P
:C )! Fnc_SFADELE_fsi
:A On Areas
:D Delete FSI on Areas
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SFADELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFADELE]  Pick or enter areas for fluid-structure interface deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFADELE_fsi2
:E END
:! 
:N Fnc_SFADELE_fsi2
:S    300,   118,   175
:T Command
:C )! Fnc_SFADELE_fsi2
:D Delete FSI on Areas
:H Hlp_C_SFADELE
Cmd_SFADELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFADELE]  Delete Fluid-Structure Interface (FSI) on Areas
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_3
 Typ_DEF_FSI
:E END
:! 
:N Fnc_SFADELE_hfl2
:S    290,   120,   163
:T Command
:C )! Fnc_SFADELE_hfl2
:D Delete HFLUX on Areas
:H Hlp_C_SFADELE
Cmd_SFADELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFADELE]  Delete Heat Flux (HFLUX) on Areas
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_3
 Typ_DEF_HFLUX
:E END
:! 
:N Fnc_SFADELE_hflu
:S    316,   172,   137
:T Cmd_P
:C )! Fnc_SFADELE_hflu
:A On Areas
:D Delete HFLUX on Areas
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFADELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFADELE]  Pick or enter areas for heat flux deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFADELE_hfl2
:E END
:! 
:N Fnc_SFADELE_imp2
:S    287,   119,   161
:T Command
:C )! Fnc_SFADELE_imp2
:D Delete IMPD on Areas
:H Hlp_C_SFADELE
Cmd_SFADELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFADELE]  Delete Impedance (IMPD) on Areas
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_3
 Typ_DEF_IMPD
:E END
:! 
:N Fnc_SFADELE_impE
:S    365,   196,   162
:T Cmd_P
:C )! Fnc_SFADELE_impE
:A    On Areas
:D Delete IMPD on Areas
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG*THERMAL)
:H Hlp_C_SFADELE
Inp_P
Cmd_SFADELE
Fld_2
 Prm_[SFADELE]  Pick or enter areas for impedance deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Fld_3
 Typ_Def_Blank
Fld_4
 Typ_DEF_IMPD
:E END
:! 
:N Fnc_SFADELE_impd
:S    308,   164,   137
:T Cmd_P
:C )! Fnc_SFADELE_impd
:A On Areas
:D Delete IMPD on Areas
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SFADELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFADELE]  Pick or enter areas for impedance deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFADELE_imp2
:E END
:! 
:N Fnc_SFADELE_inf 
:S    358,   207,   144
:T Cmd_P
:C )! Fnc_SFADELE_inf 
:A    On Areas
:D Delete INF on Areas
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+edgeflx*ELECSTAT)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFADELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFADELE]  Pick or enter areas for infinite surface deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFADELE_inf2
:E END
:! 
:N Fnc_SFADELE_inf2
:S    291,   118,   166
:T Command
:C )! Fnc_SFADELE_inf2
:D Delete INF on Areas
:H Hlp_C_SFADELE
Cmd_SFADELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFADELE]  Delete Infinite Surface (INF) on Areas
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_3
 Typ_DEF_INF
:E END
:! 
:N Fnc_SFADELE_mci
:S    371,   208,   137
:T Cmd_P
:C )! Fnc_SFADELE_mci
:A    On Areas
:D Delete MCI on Areas
:K #(PREP7*SOLUTION)
:K ((CIRC+VECTORP+ELEM3D+MAGNETIC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFADELE
Inp_P
Cmd_SFADELE
Fld_2
 Prm_[SFADELE]  Pick or enter areas for mag circ intf deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_4
 Typ_DEF_MCI
:E END_of_Fnc_SFADELE_mci
:! 
:N Fnc_SFADELE_mxwf
:S    379,   208,   164
:T Cmd_P
:C )! Fnc_SFADELE_mxwf
:A    On Areas
:D Delete MXWF on Areas
:K #(PREP7*SOLUTION)
:K ((MAGNETIC*EDGEFLX*ELECSTAT)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFADELE
Inp_P
Cmd_SFADELE
Fld_2
 Prm_[SFADELE]  Pick or enter areas for Maxwell surface deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Fld_3
 Typ_Def_1
Fld_4
 Typ_DEF_MXWF
:E END
:! 
:N Fnc_SFADELE_port
:S    358,   188,   163
:T Cmd_P
:C )! Fnc_SFADELE_port
:A    On Areas
:D Delete PORT on Areas
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFADELE
Inp_P
Cmd_SFADELE
Fld_2
 Prm_[SFADELE]  Pick or enter areas for Waveguide Port deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Fld_3
 Typ_DEF_1
Fld_4
 Typ_DEF_PORT
:E END
:! 
:N Fnc_SFADELE_pre2
:S    286,   119,   160
:T Command
:C )! Fnc_SFADELE_pre2
:D Delete PRES on Areas
:H Hlp_C_SFADELE
Cmd_SFADELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFADELE]  Delete Pressure (PRES) on Areas
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_3
 Typ_DEF_PRES
:E END
:! 
:N Fnc_SFADELE_pres
:S    306,   163,   136
:T Cmd_P
:C )! Fnc_SFADELE_pres
:A On Areas
:D Delete PRES on Areas
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SFADELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFADELE]  Pick or enter areas for pressure deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFADELE_pre2
:E END
:! 
:N Fnc_SFADELE_rad
:S    356,   212,   137
:T Cmd_P
:C )! Fnc_SFADELE_rad
:A On Areas
:D Delete RAD on Areas
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (LINPLUS+THERMAL+FLOTRAN+FULL_ANS)*(FLOTRAN)
:H Hlp_C_SFADELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFADELE]  Pick or enter areas for radiation deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFADELE_rad2
:E END
:! 
:N Fnc_SFADELE_rad2
:S    284,   118,   159
:T Command
:C )! Fnc_SFADELE_rad2
:D Delete RAD on Areas
:H Hlp_C_SFADELE
Cmd_SFADELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFADELE]  Delete Radiation (RAD) on Areas
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_3
 Typ_DEF_RAD
:E END
:! 
:N Fnc_SFADELE_rdmx
:S    307,   171,   129
:T Cmd_P
:C )! Fnc_SFADELE_rdmx
:A On Areas
:D Delete RDSF on Areas
:K #(PREP7*SOLUTION)
:P (FLOTRAN*THERMAL)
:H Hlp_C_SFADELE
Inp_P
Cmd_SFADELE
Fld_2
 Prm_[SFADELE]  Pick or enter areas for RDSF deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_4
 Typ_DEF_RDSF
:E END
:! 
:N Fnc_SFADELE_shld
:S    352,   190,   155
:T Cmd_P
:C )! Fnc_SFADELE_shld
:A    On Areas
:D Delete Shield on Areas
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFADELE
Inp_P
Cmd_SFADELE
Fld_2
 Prm_[SFADELE]  Pick or enter areas for Shield deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Fld_3
 Typ_DEF_1
Fld_4
 Typ_DEF_SHLD
:E END
:! 
:N Fnc_SFADEL_p
:S    266,   129,   130
:T Cmd_P
:C )! Fnc_SFADEL_p ORPHAN
:A On Areas
:D Dele Surf Ld on Areas
:H Hlp_C_SFADELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFADELE]  Pick or enter areas for surface load deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Cal_Fnc_SFADEL_p2
:E END
:! 
:N Fnc_SFADEL_p2
:S    562,   121,   434
:T Command
:C )! Fnc_SFADEL_p2 ORPHAN
:D Dele Surf Ld on Areas
:H Hlp_C_SFADELE
Cmd_SFADELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFADELE]  Delete Surface Load on Areas
Fld_3
 Prm_Lab   Type of surface load
 Typ_LIS_OPTIONB
 LIS_All surf loads  ,ALL
 LIS_Pressure        ,PRES
 LIS_Convection      ,CONV
 LIS_Heat flux       ,HFLUX
 LIS_Maxwell surface ,MXWF
 LIS_Infinite surface,INF
 LIS_Surf charge dens,CHRGS
 LIS_Impedance       ,IMPD
 LIS_Fluid-struc intf,FSI
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 Def_1
:E END
:! 
:N Fnc_SFALIS
:S    241,   124,   110
:T Cmd_P
:C )! Fnc_SFALIS
:A On Picked Areas
:D List Area Surf Loads
:H Hlp_C_SFALIST
Inp_P
Cmd_SFALIST
Fld_2
Typ_AREA
Prm_[SFALIST] Pick or enter areas for surface load listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_SFA_FSInt
:S    439,   281,   151
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'SFA'
:C )*SET,_z9,'FSIN'
:C )/GO
:C )! Fnc_SFA_FSInt
:C )! Areas for SFA command below
:A On Areas
:D Apply FSIN on Areas
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN*NOFILTER)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for fluid-structure interface
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_SFA
Cal_Fnc_FSILoad
:E END
:! 
:N Fnc_SFA_chrgs
:S    438,   289,   142
:T Cmd_P
:C )! Fnc_SFA_chrgs
:C )! Areas for SFA command below
:A    On Areas
:D Apply CHRGS on Areas
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for surface charge specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFA_chrgs2
:E END
:! 
:N Fnc_SFA_chrgs2
:S    418,   128,   283
:T Command
:C )! Fnc_SFA_chrgs2
:D Apply CHRGS on Areas
:B Fnc_SFA_chrgs
:H Hlp_C_SFA
Cmd_SFA,P51X
Fld_0
 Typ_Lab
 Prm_[SFA]  Apply Surface Charge (CHRGS) on Areas
Fld_3
 Typ_DEF_CHRGS
Fld_4
 Typ_REAL
 Prm_VALUE  Surface charge value
Fld_0
Typ_SEP
Fld_2
 Typ_INT
 Def_1
 Prm_LKEY  Load key, usually face no.
Fld_0
 Typ_Lab
 Prm_      (required only for shell elements)
:E END
:! 
:N Fnc_SFA_conv
:S    424,   270,   147
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'SFA'
:C )*SET,_z9,'CONV'
:C )/GO
:C )! Fnc_SFA_conv
:C )! Areas for SFA command below
:A On Areas
:D Apply CONV on Areas
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for convection specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
! Cust_Cmd_SFA
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_SFA_frsf
:S    330,   184,   139
:T Cmd_P
:C )! Fnc_SFA_frsf
:C )! Areas for SFA command below
:A On Areas
:D Apply FRSF on Areas
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for free surface specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFA_frsf2
:E END
:! 
:N Fnc_SFA_frsf2
:S    263,   124,   132
:T Command
:C )! Fnc_SFA_frsf2
:D Apply FRSF on Areas
:B Fnc_SFA_frsf
:H Hlp_C_SFA
Cmd_SFA,P51X
Fld_0
 Typ_Lab
 Prm_[SFA]  Apply free surface on areas
Fld_3
 Typ_DEF_FRSF
Fld_4
 Typ_REAL
 Prm_   Free surface number
:E END
:! 
:N Fnc_SFA_fsi
:S    290,   148,   135
:T Cmd_P
:C )! Fnc_SFA_fsi
:A On Areas
:D Apply FSI on Areas
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SFA
Inp_P
Cmd_SFA
Fld_2
 Prm_[SFA]  Pick or enter areas at the fluid-structure interface
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_4
 Typ_DEF_FSI
:E END
:! 
:N Fnc_SFA_hflux
:S    428,   274,   147
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'SFA'
:C )*SET,_z9,'HFLUX'
:C )/GO
:C )! Fnc_SFA_hflux
:C )! Areas for SFA command below
:A On Areas
:D Apply HFLUX on Areas
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for heat flux specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_SFA
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_SFA_impd
:S    328,   185,   136
:T Cmd_P
:C )! Fnc_SFA_impd
:C )! Areas for SFA command below
:A On Areas
:D Apply IMPD on Areas
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for impedance specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFA_impd2
:E END
:! 
:N Fnc_SFA_impd2
:S    395,   124,   264
:T Command
:C )! Fnc_SFA_impd2
:D Apply IMPD on Areas
:B Fnc_SFA_impd
:H Hlp_C_SFA
Cmd_SFA,P51X
Fld_0
 Typ_Lab
 Prm_[SFA]  Apply impedance on areas
Fld_3
 Typ_DEF_IMPD
Fld_4
 Typ_REAL
 Prm_VALUE  Impedance value
Fld_0
Typ_SEP
Fld_2
 Typ_INT
 Def_1
 Prm_LKEY  Load key, usually face no.
Fld_0
 Typ_Lab
 Prm_      (required only for shell elements)
:E END
:! 
:N Fnc_SFA_impd4
:S    334,   124,   203
:T Command
:C )! Fnc_SFA_impd4
:D Apply IMPD on Areas
:B Fnc_SFA_impd
:H Hlp_C_SFA
Cmd_SFA,P51X
Fld_0
 Typ_Lab
 Prm_[SFA]  Apply Impedance (IMPD) on Areas
Fld_2
 Typ_Def_Blank
Fld_3
 Typ_DEF_IMPD
Fld_4
 Typ_REAL
 Prm_VALUE  Impedance (real)
Fld_5
 Typ_REAL
 Prm_VALUE2 Impedance (imag)
:E END
:! 
:N Fnc_SFA_impdE
:S    362,   219,   136
:T Cmd_P
:C )! Fnc_SFA_impdE
:C )! Areas for SFA command below
:A    On Areas
:D Apply IMPD on Areas
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG*THERMAL)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for impedance specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFA_impd4
:E END
:! 
:N Fnc_SFA_inf 
:S    346,   210,   129
:T Cmd_P
:C )! Fnc_SFA_inf 
:A    On Areas
:D Apply INF on Areas
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+edgeflx*ELECSTAT)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SFA
Inp_P
Cmd_SFA
Fld_2
 Prm_[SFA]  Pick or enter areas for infinite surface flag
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_4
 Typ_DEF_INF 
:E END
:! 
:N Fnc_SFA_mci
:S    405,   245,   138
:T Cmd_P
:C )! Fnc_SFA_mci
:C )! Areas for SFA command below
:A    On Areas
:D Apply MCI on Areas
:K #(PREP7*SOLUTION)
:K ((CIRC+VECTORP+ELEM3D+MAGNETIC)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for mag circ intf specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFA_mci2
:E END_of_Fnc_SFA_mci
:! 
:N Fnc_SFA_mci2
:S    315,   105,   187
:T Command
:C )! Fnc_SFA_mci2
:D Apply MCI on Areas
:H Hlp_C_SFA
Cmd_SFA,P51X
Fld_0
 Typ_Lab
 Prm_[SFA]  Apply Mag circ intf (MCI) on Areas
Fld_3
 Typ_DEF_MCI
Fld_4
Prm_Current flow
Typ_LIS_OPTIONB
LIS_Into the face   ,-1
LIS_Out of the face ,1
DEF_-1
:E END_of_Fnc_SFA_mci2
:! 
:N Fnc_SFA_mxwf
:S    370,   235,   128
:T Cmd_P
:C )! Fnc_SFA_mxwf
:A    On Areas
:D Apply MXWF on Areas
:K #(PREP7*SOLUTION)
:K ((MAGNETIC*EDGEFLX*ELECSTAT+edgeelc+harmonic*ELEM2D)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SFA
Inp_P
Cmd_SFA
Fld_2
 Prm_[SFA]  Pick or enter areas for Maxwell surface flag
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_4
 Typ_DEF_MXWF
:E END
:! 
:N Fnc_SFA_p
:S    288,   157,   124
:T Cmd_P
:C )! Fnc_SFA_p ORPHAN
:C )! Areas for SFA command below
:A    On Areas
:D Apply Surf Ld on Areas
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for surface loading
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFA_p2
:E END
:! 
:N Fnc_SFA_p2
:S    754,   112,   635
:T Command
:C )! Fnc_SFA_p2 ORPHAN
:D Apply Surf Ld on Areas
:H Hlp_C_SFA
Cmd_SFA,P51X
Fld_0
 Typ_Lab
 Prm_[SFA]  Apply Surface Load on Areas
Fld_3
 Prm_Lab     Type of surface load
 Typ_LIS_OPTIONB
 LIS_Pressure        ,PRES
 LIS_Convection      ,CONV
 LIS_Heat flux       ,HFLUX
 LIS_Maxwell surface ,MXWF
 LIS_Infinite surface,INF
 LIS_Surf charge dens,CHRGS
 LIS_Impedance       ,IMPD
 LIS_Fluid-struc intf,FSI
Fld_4
 Typ_REAL
 Prm_VALUE   Load value
Fld_5
 Typ_REAL
 Prm_VALUE2  Second value if required
Fld_0
 Typ_Lab
 Prm_        (bulk temperature or imaginary part)
Fld_0
Typ_SEP
Fld_2
 Typ_INT
 Def_1
 Prm_LKEY  Load key, usually face no.
Fld_0
 Typ_Lab
 Prm_      (required only for shell elements)
:E END
:! 
:N Fnc_SFA_port
:S    385,   238,   140
:T Cmd_P
:C )! Fnc_SFA_port
:C )! Areas for SFA command below
:A       On Areas
:D Define Exterior Port on Areas
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for Exterior Port specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFA_port1
:E END
:! 
:N Fnc_SFA_port1
:S    308,   134,   167
:T Command
:C )! Fnc_SFA_port2
:D Define Exterior Port on Areas
:B Fnc_SFA_port
:H Hlp_C_SFA
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_0
 Typ_Lab
 Prm_[SFA] Define exterior port (PORT) on Areas
Fld_2
 Typ_REAL
 Prm_VALUE  Port number
Cmd_)/GO
Cal_Fnc_SFA_port2
:E END
:! 
:N Fnc_SFA_port2
:S    268,   209,    52
:T Command
:C )! Fnc_SFA_port2
:C )/NOPR
:C )keyw,ediprt,0
:C )keyw,intprt,0
:C )keyw,extprt,1
:C )/GO
:D Define Waveguide PORT on Areas
:B Fnc_SFA_port_1
:H Hlp_C_SFA
Inp_P
Cmd_SFA,P51X,,PORT
 Fld_2
  Typ_Def_*PAR(_z1)
:E END
:! 
:N Fnc_SFA_pres
:S    410,   262,   141
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'SFA'
:C )*SET,_z9,'PRES'
:C )/GO
:C )! Fnc_SFA_pres
:C )! Areas for SFA command below
:A On Areas
:D Apply PRES on Areas
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for pressure loading
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_SFA
Cal_Fnc_StLoad
:E END
:! 
:N Fnc_SFA_rad
:S    374,   233,   134
:T Cmd_P
:C )! Fnc_SFA_rad
:C )! Areas for SFA command below
:A On Areas
:D Apply RAD on Areas
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (THERMAL+LINPLUS+FLOTRAN+FULL_ANS)*(FLOTRAN)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for radiation specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFA_rad2
:E END
:! 
:N Fnc_SFA_rad2
:S    432,   124,   301
:T Command
:C )! Fnc_SFA_rad2
:D Apply RAD on Areas
:B Fnc_SFA_rad
:H Hlp_UI_sfarad
Cmd_SFA,P51X
Fld_0
 Typ_Lab
 Prm_[SFA]  Apply Radiation (RAD) on Areas
Fld_3
 Typ_DEF_RAD
Fld_4
 Typ_REAL
 Prm_VALUE   Surface Emissivity
Fld_5
 Typ_REAL
 Prm_VALUE2  Ambient Temperature
Fld_0
Typ_Sep
Cmd_STEF
 Fld_2
  Typ_REAL
  Prm_[STEF]  Stefan-Boltzmann Const.
  Def_*GET(common,,RADFCM,,real,1)
:E END
:! 
:N Fnc_SFA_radF
:S    749,   388,   354
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'SFA'
:C )*SET,_z9,'RAD'
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )*SET,_zc(1),'Emiss','AmbiTemp'
:C )/GO
:C )! Fnc_SFA_radF
:C )! Lines for SFA command below
:A On Areas
:D Apply Radiation on Areas
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (THERMAL+LINPLUS+FLOTRAN+FULL_ANS)*(FLOTRAN)
:H Hlp_C_%_z8%
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
Cmd_)/GO
! Exclude_from_paths
Cmd_ASEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[SFA]  Pick or enter areas for radiation specification
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,AREA
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_SFA_rdmx
:S    330,   192,   131
:T Cmd_P
:C )! Fnc_SFA_rdmx
:C )! Areas for SFA command below
:A On Areas
:D Apply RDSF on Areas
:K #(PREP7*SOLUTION)
:P (FLOTRAN*THERMAL)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for RDSF specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFA_rdmx2
:E END
:! 
:N Fnc_SFA_rdmx2
:S    297,   124,   166
:T Command
:C )! Fnc_SFA_rdmx2
:D Apply RDSF on Areas
:B Fnc_SFA_rdmx
:H Hlp_C_SFA
Cmd_SFA,P51X
Fld_0
 Typ_Lab
 Prm_[SFA]  Apply RDSF on areas
Fld_3
 Typ_DEF_RDSF
Fld_4
 Typ_REAL
 Prm_VALUE   Emissivity
Fld_5
 Typ_REAL
 Prm_VALUE2  Enclosure number
:E END
:! 
:N Fnc_SFA_shld
:S    349,   209,   133
:T Cmd_P
:C )! Fnc_SFA_shld
:C )! Areas for SFA command below
:A    On Areas
:D Apply SHLD on Areas
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFA
Inp_P
Cmd_)!
Fld_2
 Prm_[SFA]  Pick or enter areas for shield specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFA_shld4
:E END
:! 
:N Fnc_SFA_shld4
:S    307,   124,   176
:T Command
:C )! Fnc_SFA_shld4
:D Apply SHLD on Areas
:B Fnc_SFA_shld
:H Hlp_C_SFA
Cmd_SFA,P51X
Fld_0
 Typ_Lab
 Prm_[SFA]  Apply Shield (SHLD) on Areas
Fld_3
 Typ_DEF_SHLD
Fld_4
 Typ_REAL
 Prm_COND Conductivity
Fld_5
 Typ_REAL
 Prm_MUR  Relative permeability
:E END
:! 
:N Fnc_SFBEAM
:S    334,   189,   138
:T Cmd_P
:C )! Fnc_SFBEAM
:C )! Elements for SFBEAM command below
:A On Beams
:D Apply PRES on Beams
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SFBEAM
Inp_P
Cmd_)!
Fld_2
 Prm_[SFBEAM]  Pick or enter beam elements for pressure loading
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFBEAM2
:E END
:! 
:N Fnc_SFBEAM2
:S    790,   134,   649
:T Command
:C )! Fnc_SFBEAM2
:D Apply PRES on Beams
:B Fnc_SFBEAM
:P (LINPLUS)
:H Hlp_C_SFBEAM
Cmd_SFBEAM,P51X
Fld_0
 Typ_Lab
 Prm_[SFBEAM]  Apply Pressure (PRES) on Beam Elements
Fld_2
 Prm_LKEY    Load key
 Typ_INT
 DEF_1
Fld_3
 Typ_DEF_PRES
Fld_4
 Prm_VALI    Pressure value at node I
 Typ_REAL
Fld_5
 Prm_VALJ    Pressure value at node J
 Typ_REAL
 Def_Blank
Fld_0
 Typ_Lab
 Prm_        (leave blank for uniform pressure)
Fld_0
Typ_SEP
Fld_0
 Typ_Lab
 Prm_        Optional offsets for pressure load
Fld_8
 Prm_IOFFST     Offset from I node
 Typ_REAL
 Def_Blank
Fld_9
 Prm_JOFFST     Offset from J node
 Typ_REAL
 Def_Blank
Fld_10
 Prm_LENRAT   Load offset in terms of
 Typ_LIS_OPTIONB
 LIS_Length units    ,0
 LIS_Length ratio    ,1
 Def_0
:E END
:! 
:N Fnc_SFCALC
:S    776,   208,   561
:T Command
:C )! Fnc_SFCALC
:C )/NOPR
:C )_z1='  '
:C )/GO
:A SF for ElemTable
:D Safety Factors for Element Table Items
:K #(POST1+RESULTS)
:P (LINPLUS)
:H Hlp_C_SFCALC
Cmd_SFCALC
 Fld_0
  Typ_Lab
  Prm_[SFCALC]  Safety Factors for Element Table Items
 Fld_5
  Prm_TYPE  Item to be calculated
  Typ_LIS_RADIOB
LIS_Safety factor SF,1
LIS_Margin of safety,2
LIS_1/SF            ,3
 Fld_2
  Prm_LabR  Label for calculated item
  Typ_CHAR
  Def_*PAR(_z1)
 Fld_3
  Prm_LabS  Elem table item for stress
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
Fld_0
Typ_Sep
 Fld_0
  Typ_Lab
  Prm_For temperature-dependent allowable stresses
 Fld_4
  Prm_  LabT  Elem table item for temp
  Typ_LIS_OPTIONB
  LIS_Constant,'    '
  LIS_*READ,ETAB
  Def_'    '
:E END
:! 
:N Fnc_SFCUM
:S   4195,  1496,  2692
:T Command
:C )! Fnc_SFCUM
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,7
:C )*GET,_z1,common,,loadcm,,int,3  ! pres   
:C )*IF,_z1,eq,0,then
:C )_zc(1)='REPL'
:C )*ELSEIF,_z1,eq,1,then
:C )_zc(1)='ADD'
:C )*ELSEIF,_z1,eq,-1,then
:C )_zc(1)='IGNO'
:C )*ENDIF
:C )*GET,_z2,common,,loadcm,,int,4 ! conv    
:C )*IF,_z2,eq,0,then
:C )_zc(2)='REPL'
:C )*ELSEIF,_z2,eq,1,then
:C )_zc(2)='ADD'
:C )*ELSEIF,_z2,eq,-1,then
:C )_zc(2)='IGNO'
:C )*ENDIF
:C )*GET,_z3,common,,loadcm,,int,5 ! hflu    
:C )*IF,_z3,eq,0,then
:C )_zc(3)='REPL'
:C )*ELSEIF,_z3,eq,1,then
:C )_zc(3)='ADD'
:C )*ELSEIF,_z3,eq,-1,then
:C )_zc(3)='IGNO'
:C )*ENDIF
:C )*GET,_z4,common,,loadcm,,int,6
:C )*IF,_z4,eq,0,then
:C )_zc(4)='REPL'
:C )*ELSEIF,_z4,eq,1,then
:C )_zc(4)='ADD'
:C )*ELSEIF,_z4,eq,-1,then
:C )_zc(4)='IGNO'
:C )*ENDIF
:C )*GET,_z5,common,,loadcm,,int,37 ! selv   
:C )*IF,_z5,eq,0,then
:C )_zc(5)='REPL'
:C )*ELSEIF,_z5,eq,1,then
:C )_zc(5)='ADD'
:C )*ELSEIF,_z5,eq,-1,then
:C )_zc(5)='IGNO'
:C )*ENDIF
:C )*GET,_z6,common,,loadcm,,int,8 ! impd    
:C )*IF,_z6,eq,0,then
:C )_zc(6)='REPL'
:C )*ELSEIF,_z6,eq,1,then
:C )_zc(6)='ADD'
:C )*ELSEIF,_z6,eq,-1,then
:C )_zc(6)='IGNO'
:C )*ENDIF
:C )*GET,_z7,common,,loadcm,,int,38 ! chrgs  
:C )*IF,_z7,eq,0,then
:C )_zc(7)='REPL'
:C )*ELSEIF,_z7,eq,1,then
:C )_zc(7)='ADD'
:C )*ELSEIF,_z7,eq,-1,then
:C )_zc(7)='IGNO'
:C )*ENDIF
:C )/GO
:A    Surface Loads
:D Replace/Add Setting for Surface Loads
:K #(PREP7*SOLUTION)
:H Hlp_C_SFCUM
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[SFCUM]  Replace/Add Setting for Surface Loads
 Fld_0
 Typ_Sep
Cmd_SFCUM
P_CM(LINPLUS)
 Fld_0
  Typ_Lab
  Prm_Pressure                  (PRES)
 Fld_2
  Typ_Def_PRES
 Fld_3
  Prm_  Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(1))
 Fld_4
  Prm_  FACT  Scale factor-First real
  Typ_REAL
  Def_*GET(common,,loadcm,,real,6)
 Fld_5
  Prm_  FACT2 Scale factor-Second real 
  Typ_REAL
  Def_*GET(common,,loadcm,,real,7)
Fld_0
Typ_Sep
!
Cmd_SFCUM
P_CM(THERMAL*FLOTRAN)
 Fld_0
  Typ_Lab
  Prm_Convection                (CONV)
 Fld_2
  Typ_Def_CONV
 Fld_3
  Prm_  Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(2))
 Fld_4
  Prm_  FACT   Scale factor, film coef
  Typ_REAL
  Def_*GET(common,,loadcm,,real,8)
 Fld_5
  Prm_  FACT2  Scale factor, bulk temp
  Typ_REAL
  Def_*GET(common,,loadcm,,real,9)
Fld_0
Typ_Sep
!
Cmd_SFCUM
P_CM(THERMAL*FLOTRAN)
 Fld_0
  Typ_Lab
  Prm_Heat flux                (HFLUX)
 Fld_2
  Typ_Def_HFLUX
 Fld_3
  Prm_  Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(3))
 Fld_4
  Prm_  FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,10)
Fld_0
Typ_Sep
!
Cmd_SFCUM
P_CM(FULL_ANS)
 Fld_0
  Typ_Lab
  Prm_Superelement load vector  (SELV)
 Fld_2
  Typ_Def_SELV
 Fld_3
  Prm_  Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(5))
 Fld_4
  Prm_  FACT  Scale factor-First real 
  Typ_REAL
  Def_*GET(common,,loadcm,,real,35)
 Fld_5
  Prm_  FACT2 Scale factor-Second real 
  Typ_REAL
  Def_*GET(common,,loadcm,,real,36)
Fld_0
Typ_Sep
!
Cmd_SFCUM
P_CM(FULL_ANS)
 Fld_0
  Typ_Lab
  Prm_Impedance                 (IMPD)
 Fld_2
  Typ_Def_IMPD
 Fld_3
  Prm_  Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(6))
 Fld_4
  Prm_  FACT  Scale factor-First real
  Typ_REAL
  Def_*GET(common,,loadcm,,real,15)
 Fld_5
  Prm_  FACT2 Scale factor-Second real
  Typ_REAL
  Def_*GET(common,,loadcm,,real,16)
Fld_0
Typ_Sep
!
Cmd_SFCUM
P_CM(ELECMAG)
 Fld_0
  Typ_Lab
  Prm_Surface Charge Density   (CHRGS)
 Fld_2
  Typ_Def_CHRGS
 Fld_3
  Prm_  Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(7))
 Fld_4
  Prm_  FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,37)
:E END
:! 
:N Fnc_SFDELE_FSInt
:S    379,   216,   156
:T Cmd_P
:C )! Fnc_SFDELE_FSInt
:C )! Nodes for SFDELE command below
:A On Nodes
:D Delete FSIN on Nodes
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN*NOFILTER)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for fluid-structure interface deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Fld_3
 Typ_Def_FSIN
:E END
:! 
:N Fnc_SFDELE_chrg
:S    400,   247,   146
:T Cmd_P
:C )! Fnc_SFDELE_chrg
:A    On Nodes
:D Delete CHRGS on Nodes
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for surface charge density deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_CHRGS
:E END
:! 
:N Fnc_SFDELE_conv
:S    308,   168,   133
:T Cmd_P
:C )! Fnc_SFDELE_conv
:A On Nodes
:D Delete CONV on Nodes
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for convection deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_CONV
:E END
:! 
:N Fnc_SFDELE_frsf
:S    303,   161,   135
:T Cmd_P
:C )! Fnc_SFDELE_frsf
:A On Nodes
:D Delete  FRSF on Nodes
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for free surface deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FRSF
:E END
:! 
:N Fnc_SFDELE_fsi
:S    312,   158,   147
:T Cmd_P
:C )! Fnc_SFDELE_fsi
:A On Nodes
:D Delete FSI on Nodes
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for fluid-structure interface deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FSI
:E END
:! 
:N Fnc_SFDELE_hflu
:S    309,   169,   133
:T Cmd_P
:C )! Fnc_SFDELE_hflu
:A On Nodes
:D Delete HFLUX on Nodes
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for heat flux deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_HFLUX
:E END
:! 
:N Fnc_SFDELE_impd
:S    300,   161,   132
:T Cmd_P
:C )! Fnc_SFDELE_impd
:A On Nodes
:D Delete IMPD on Nodes
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for impedance deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_IMPD
:E END
:! 
:N Fnc_SFDELE_impdE
:S    334,   195,   132
:T Cmd_P
:C )! Fnc_SFDELE_impdE
:A    On Nodes
:D Delete IMPD on Nodes
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG*THERMAL)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for impedance deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_IMPD
:E END
:! 
:N Fnc_SFDELE_inf 
:S    350,   204,   139
:T Cmd_P
:C )! Fnc_SFDELE_inf 
:A    On Nodes
:D Delete INF on Nodes
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+edgeflx*ELECSTAT)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for infinite surface deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_INF 
:E END
:! 
:N Fnc_SFDELE_mci
:S    365,   205,   135
:T Cmd_P
:C )! Fnc_SFDELE_mci
:A    On Nodes
:D Delete MCI on Nodes
:K #(PREP7*SOLUTION)
:K ((CIRC+VECTORP+ELEM3D+MAGNETIC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for mag circ intf deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_MCI
:E END_of_Fnc_SFDELE_mci
:! 
:N Fnc_SFDELE_mxwf
:S    350,   205,   138
:T Cmd_P
:C )! Fnc_SFDELE_mxwf
:A    On Nodes
:D Delete MXWF on Nodes
:K #(PREP7*SOLUTION)
:K ((MAGNETIC*EDGEFLX*ELECSTAT)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for Maxwell surface deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_MXWF
:E END
:! 
:N Fnc_SFDELE_port
:S    328,   185,   136
:T Cmd_P
:C )! Fnc_SFDELE_port
:A    On Nodes
:D Delete PORT on Nodes
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for surface ports deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_PORT
:E END
:! 
:N Fnc_SFDELE_prCM
:S    391,   243,   141
:T Cmd_P
:C )! Fnc_SFDELE_prCM
:C )/UI,CMPF,NODE ! *** restrict picker to NODE components ***
:A On Node Components
:D Delete PRES on Node Components
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter node components for pressure deletion
 Typ_COMP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_PRES
:E END
:! 
:N Fnc_SFDELE_pres
:S    298,   160,   131
:T Cmd_P
:C )! Fnc_SFDELE_pres
:A On Nodes
:D Delete PRES on Nodes
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for pressure deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_PRES
:E END
:! 
:N Fnc_SFDELE_rad
:S    345,   207,   131
:T Cmd_P
:C )! Fnc_SFDELE_rad
:A On Nodes
:D Delete RAD on Nodes
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:P (THERMAL+FLOTRAN+LINPLUS+FULL_ANS)*(FLOTRAN)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for radiation deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_RAD
:E END
:! 
:N Fnc_SFDELE_rdmx
:S    303,   169,   127
:T Cmd_P
:C )! Fnc_SFDELE_rdmx
:A On Nodes
:D Delete  RDSF on Nodes
:K #(PREP7*SOLUTION)
:P (FLOTRAN*THERMAL)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for RDSF deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_RDSF
:E END
:! 
:N Fnc_SFDELE_shld
:S    321,   185,   129
:T Cmd_P
:C )! Fnc_SFDELE_shld
:A    On Nodes
:D Delete SHLD on Nodes
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for shield deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_SHLD
:E END
:! 
:N Fnc_SFDEL_p
:S    266,   131,   128
:T Cmd_P
:C )! Fnc_SFDEL_p ORPHAN
:A    On Nodes
:D Delete Surf Ld on Nodes
:H Hlp_C_SFDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for surface load deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Cal_Fnc_SFDEL_p2
:E END
:! 
:N Fnc_SFDEL_p2
:S    497,   118,   372
:T Command
:C )! Fnc_SFDEL_p2 ORPHAN
:D Dele Surf Ld on Nodes
:H Hlp_C_SFDELE
Cmd_SFDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFDELE]  Delete Surface Load on Nodes
Fld_2
 Prm_Lab   Type of surface load
 Typ_LIS_OPTIONB
 LIS_All surf loads  ,ALL
 LIS_Pressure        ,PRES
 LIS_Convection      ,CONV
 LIS_Heat flux       ,HFLUX
 LIS_Maxwell surface ,MXWF
 LIS_Infinite surface,INF
 LIS_Surf charge dens,CHRGS
 LIS_Impedance       ,IMPD
 LIS_Fluid-struc intf,FSI
:E END
:! 
:N Fnc_SFDEL_vf
:S    323,   157,   159
:T Cmd_P
:C )! Fnc_SFDEL_vf
:A    On Nodes
:D Delete VFRC on Nodes
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_SFDELE
Inp_P
Cmd_SFDELE
Fld_2
 Prm_[SFDELE]  Pick or enter nodes for Volume Fraction (VFRC) surface loads deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_VFRC
:E END
:! 
:N Fnc_SFE3_conv
:S    463,    79,   377
:T Command
:C )! Fnc_SFE3_conv ORPHAN
Inp_P
Cmd_SFE,_Y1
Fld_2
 Typ_Def_*PAR(_z(2))
Fld_3
 Typ_Def_CONV
Fld_4
 Typ_Def_0
Fld_5
 Typ_Def_*PAR(_z(3))
Fld_6
 Typ_Def_*PAR(_z(5))
Fld_7
 Typ_Def_*PAR(_z(7))
Fld_8
 Typ_Def_*PAR(_z(9))
!
Cmd_SFE,_Y1
Fld_2
 Typ_Def_*PAR(_z(2))
Fld_3
 Typ_Def_CONV
Fld_4
 Typ_Def_2
Fld_5
 Typ_Def_*PAR(_z(4))
Fld_6
 Typ_Def_*PAR(_z(6))
Fld_7
 Typ_Def_*PAR(_z(8))
Fld_8
 Typ_Def_*PAR(_z(10))
:E End
:! 
:N Fnc_SFEDELE_FSInt
:S    413,   229,   177
:T Cmd_P
:C )! Fnc_SFEDELE_FSInt
:C )! Elements for SFEDELE command below
:A On Elements
:D Delete FSIN on Elements
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN*NOFILTER)
:H Hlp_C_SFEDELE
Inp_P
Cmd_SFEDELE
Fld_2
 Prm_[SFEDELE]  Pick or enter element for fluid-structure interface deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Fld_3
 Typ_Def_1
Fld_4
 Typ_Def_FSIN
:E END
:! 
:N Fnc_SFEDELE_all
:S    399,   186,   206
:T Command
:C )! Fnc_SFEDELE_all
:A    On All Elems
:D Delete All Surface Loads on All Selected Elements
:K #(PREP7*SOLUTION)
:H Hlp_C_SFEDELE
Inp_NoApply
Cmd_SFEDELE,ALL,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[SFEDELE],ALL,ALL,ALL
Fld_0
 Typ_Lab
 Prm_           This function deletes all surface loads
Fld_0
 Typ_Lab
 Prm_           on all selected elements!
:E END
:! 
:N Fnc_SFEDELE_selv
:S    428,   164,   257
:T Command
:C )! Fnc_SFEDELE_selv
:A For Superelement
:D Delete Superelement Load Vector
:P (FULL_ANS)
:H Hlp_C_SFEDELE
Cmd_SFEDELE
Fld_0
 Typ_Lab
 Prm_[SFEDELE]  Delete Superelement Load Vector
Fld_2
 Prm_ELEM  Elem no. of superelement
 Typ_INT
Fld_3
 Prm_LKEY  Load vector number
 Typ_INT
 Def_1
Fld_0
 Typ_Lab
 Prm_      (enter ALL for all load vectors)
Fld_4
 Typ_DEF_SELV
:E END
:! 
:N Fnc_SFEDEL_chrg
:S    452,   291,   154
:T Cmd_P
:C )! Fnc_SFEDEL_chrg
:C )! Elements for SFEDEL command below
:A    On Elements
:D Delete CHRGS on Elems
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFEDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for surface charge density deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFEDEL_chrg2
:E END
:! 
:N Fnc_SFEDEL_chrg2
:S    381,   139,   235
:T Command
:C )! Fnc_SFEDEL_chrg2
:D Delete CHRGS on Elems
:B Fnc_SFEDEL_chrg
:H Hlp_C_SFEDELE
Cmd_SFEDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFEDELE]  Delete Surface Charge Density (CHRGS) on Elements
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_0
 Typ_Lab
 Prm_      (enter ALL for all load keys)
Fld_3
 Typ_DEF_CHRGS
:E END
:! 
:N Fnc_SFEDEL_conv
:S    361,   212,   142
:T Cmd_P
:C )! Fnc_SFEDEL_conv
:C )! Elements for SFEDEL command below
:A On Elements
:D Delete CONV on Elems
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFEDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for convection deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFEDEL_conv2
:E END
:! 
:N Fnc_SFEDEL_conv2
:S    366,   138,   221
:T Command
:C )! Fnc_SFEDEL_conv2
:D Delete CONV on Elems
:B Fnc_SFEDEL_conv
:H Hlp_C_SFEDELE
Cmd_SFEDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFEDELE]  Delete Convection (CONV) on Elements
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_0
 Typ_Lab
 Prm_      (enter ALL for all load keys)
Fld_3
 Typ_DEF_CONV
:E END
:! 
:N Fnc_SFEDEL_frsf
:S    355,   204,   144
:T Cmd_P
:C )! Fnc_SFEDEL_frsf
:C )! Elements for SFEDEL command below
:A On Elements
:D Delete FRSF on Elems
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_SFEDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for free surface deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFEDEL_frsf2
:E END
:! 
:N Fnc_SFEDEL_frsf2
:S    376,   138,   231
:T Command
:C )! Fnc_SFEDEL_frsf2
:D Delete FRSF on Elems
:B Fnc_SFEDEL_frsf
:H Hlp_C_SFEDELE
Cmd_SFEDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFEDELE]  Delete Surface Free Surfaces(FRSF) on Elements
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_0
 Typ_Lab
 Prm_      (enter ALL for all load keys)
Fld_3
 Typ_DEF_FRSF
:E END
:! 
:N Fnc_SFEDEL_hflu
:S    361,   213,   141
:T Cmd_P
:C )! Fnc_SFEDEL_hflu
:C )! Elements for SFEDEL command below
:A On Elements
:D Delete HFLUX on Elems
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFEDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for heat flux deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFEDEL_hflu2
:E END
:! 
:N Fnc_SFEDEL_hflu2
:S    368,   139,   222
:T Command
:C )! Fnc_SFEDEL_hflu2
:D Delete HFLUX on Elems
:B Fnc_SFEDEL_hflu
:H Hlp_C_SFEDELE
Cmd_SFEDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFEDELE]  Delete Heat Flux (HFLUX) on Elements
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_0
 Typ_Lab
 Prm_      (enter ALL for all load keys)
Fld_3
 Typ_DEF_HFLUX
:E END
:! 
:N Fnc_SFEDEL_impd
:S    353,   205,   141
:T Cmd_P
:C )! Fnc_SFEDEL_impd
:C )! Elements for SFEDEL command below
:A On Elements
:D Delete IMPD on Elems
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SFEDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for impedance deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFEDEL_impd2
:E END
:! 
:N Fnc_SFEDEL_impd2
:S    365,   138,   220
:T Command
:C )! Fnc_SFEDEL_impd2
:D Delete IMPD on Elems
:B Fnc_SFEDEL_impd
:H Hlp_C_SFEDELE
Cmd_SFEDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFEDELE]  Delete Impedance (IMPD) on Elements
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_0
 Typ_Lab
 Prm_      (enter ALL for all load keys)
Fld_3
 Typ_DEF_IMPD
:E END
:! 
:N Fnc_SFEDEL_impdE
:S    409,   242,   160
:T Cmd_P
:C )! Fnc_SFEDEL_impdE
:C )! Elements for SFEDEL command below
:A    On Elements
:D Delete IMPD on Elements
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG*THERMAL)
:H Hlp_C_SFEDELE
Inp_P
Cmd_SFEDELE
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for for impedance deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_all
Fld_4
 Typ_DEF_IMPD
:E END
:! 
:N Fnc_SFEDEL_inf
:S    418,   249,   162
:T Cmd_P
:C )! Fnc_SFEDEL_inf
:C )! Elements for SFEDEL command below
:A    On Elements
:D Delete INF on Elements
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+edgeflx*ELECSTAT)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFEDELE
Inp_P
Cmd_SFEDELE
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for infinite surface deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_all
Fld_4
 Typ_DEF_INF
:E END
:! 
:N Fnc_SFEDEL_mci
:S    422,   252,   163
:T Cmd_P
:C )! Fnc_SFEDEL_mci
:C )! Elements for SFEDEL command below
:A    On Elements
:D Delete MCI on Elements
:K #(PREP7*SOLUTION)
:K ((CIRC+VECTORP+ELEM3D+MAGNETIC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFEDELE
Inp_P
Cmd_SFEDELE
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for for mag circ intf deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_all
Fld_4
 Typ_DEF_MCI
:E END
:! 
:N Fnc_SFEDEL_mxwf
:S    429,   260,   162
:T Cmd_P
:C )! Fnc_SFEDEL_mxwf
:C )! Elements for SFEDEL command below
:A    On Elements
:D Delete MXWF on Elements
:K #(PREP7*SOLUTION)
:K ((MAGNETIC*EDGEFLX*ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFEDELE
Inp_P
Cmd_SFEDELE
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for Maxwell surface deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_all
Fld_4
 Typ_DEF_MXWF
:E END
:! 
:N Fnc_SFEDEL_p
:S    282,   135,   140
:T Cmd_P
:C )! Fnc_SFEDEL_p ORPHAN
:A    On Elements
:D Dele Surf Ld on Elems
:H Hlp_C_SFEDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for surface load deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFEDEL_p2
:E END
:! 
:N Fnc_SFEDEL_p2
:S    621,   121,   493
:T Command
:C )! Fnc_SFEDEL_p2 ORPHAN
:D Dele Surf Ld on Elems
:H Hlp_C_SFEDELE
Cmd_SFEDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFEDELE]  Delete Surface Load on Elements
Fld_3
 Prm_Lab   Type of surface load
 Typ_LIS_OPTIONB
 LIS_All surf loads  ,ALL
 LIS_Pressure        ,PRES
 LIS_Convection      ,CONV
 LIS_Heat flux       ,HFLUX
 LIS_Maxwell surface ,MXWF
 LIS_Infinite surface,INF
 LIS_Surf charge dens,CHRGS
 LIS_Impedance       ,IMPD
 LIS_Fluid-struc intf,FSI
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 Def_1
Fld_0
 Typ_Lab
 Prm_      (Enter ALL for all load keys)
:E END
:! 
:N Fnc_SFEDEL_pr2CM
:S    387,   151,   229
:T Command
:C )! Fnc_SFEDEL_pr2CM
:D Delete PRES on Element Components
:B Fnc_SFEDEL_prCM
:H Hlp_C_SFEDELE
Cmd_SFEDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFEDELE]  Delete Pressure (PRES) on Element Components
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_0
 Typ_Lab
 Prm_      (enter ALL for all load keys)
Fld_3
 Typ_DEF_PRES
:E END
:! 
:N Fnc_SFEDEL_prCM
:S    457,   300,   150
:T Cmd_P
:C )! Fnc_SFEDEL_prCM
:C )! Element Components for SFEDEL command below
:C )/UI,CMPF,ELEM ! *** restrict picker to ELEM components ***
:A On Element Components
:D Delete PRES on Element Components
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SFEDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFEDELE]  Pick or enter element components for pressure deletion
 Typ_COMP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFEDEL_pr2CM
:E END
:! 
:N Fnc_SFEDEL_pres
:S    351,   204,   140
:T Cmd_P
:C )! Fnc_SFEDEL_pres
:C )! Elements for SFEDEL command below
:A On Elements
:D Delete PRES on Elems
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SFEDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for pressure deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFEDEL_pres2
:E END
:! 
:N Fnc_SFEDEL_pres2
:S    364,   138,   219
:T Command
:C )! Fnc_SFEDEL_pres2
:D Delete PRES on Elems
:B Fnc_SFEDEL_pres
:H Hlp_C_SFEDELE
Cmd_SFEDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFEDELE]  Delete Pressure (PRES) on Elements
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_0
 Typ_Lab
 Prm_      (enter ALL for all load keys)
Fld_3
 Typ_DEF_PRES
:E END
:! 
:N Fnc_SFEDEL_rad
:S    398,   251,   140
:T Cmd_P
:C )! Fnc_SFEDEL_rad
:C )! Elements for SFEDEL command below
:A On Elements
:D Delete RAD on Elems
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:P (THERMAL+FLOTRAN+LINPLUS+FULL_ANS)*(FLOTRAN)
:H Hlp_C_SFEDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for radiation deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFEDEL_rad2
:E END
:! 
:N Fnc_SFEDEL_rad2
:S    359,   134,   218
:T Command
:C )! Fnc_SFEDEL_rad2
:D Delete RAD on Elems
:B Fnc_SFEDEL_rad
:H Hlp_C_SFEDELE
Cmd_SFEDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFEDELE]  Delete Radiation (RAD) on Elements
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_0
 Typ_Lab
 Prm_      (enter ALL for all load keys)
Fld_3
 Typ_DEF_RAD
:E END
:! 
:N Fnc_SFEDEL_rdmx
:S    355,   212,   136
:T Cmd_P
:C )! Fnc_SFEDEL_rdmx
:C )! Elements for SFEDEL command below
:A On Elements
:D Delete RDSF on Elems
:K #(PREP7*SOLUTION)
:P (FLOTRAN*THERMAL)
:H Hlp_C_SFEDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFEDELE]  Pick or enter elements for RDSF deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFEDEL_rdmx2
:E END
:! 
:N Fnc_SFEDEL_rdmx2
:S    353,   138,   208
:T Command
:C )! Fnc_SFEDEL_rdmx2
:D Delete RDSF on Elems
:B Fnc_SFEDEL_rdmx
:H Hlp_C_SFEDELE
Cmd_SFEDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFEDELE]  Delete RDSF on Elements
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 DEF_1
Fld_0
 Typ_Lab
 Prm_      (enter ALL for all load keys)
Fld_3
 Typ_DEF_RDSF
:E END
:! 
:N Fnc_SFEDEL_vf
:S    357,   203,   147
:T Cmd_P
:C )! Fnc_SFEDEL_vf
:C )! Elements for SFEDEL command below
:A    On Elements
:D Delete VFRC on Elems
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_SFEDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFEDEL]  Pick or enter elements for VFRC surface loads deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFEDEL_vf2
:E END
:! 
:N Fnc_SFEDEL_vf2
:S    363,   132,   224
:T Command
:C )! Fnc_SFEDEL_vf2
:D Delete VFRC on Elems
:B Fnc_SFEDEL_vf
:H Hlp_C_SFEDELE
Cmd_SFEDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFEDEL]  Delete Volume Fraction (VFRC) surface loads on elements
Fld_2
 Prm_LKEY  Face Number
 Typ_INT
 DEF_1
Fld_0
 Typ_Lab
 Prm_      (enter ALL for all load keys)
Fld_3
 Typ_DEF_VFRC
:E END
:! 
:N Fnc_SFELIS
:S    243,   124,   112
:T Cmd_P
:C )! Fnc_SFELIS
:A On Picked Elems
:D List Elem Surf Loads
:H Hlp_C_SFELIST
Inp_P
Cmd_SFELIST
Fld_2
Typ_ELEM
Prm_[SFELIS] Pick or enter elements for surface load listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_SFE_FSInt
:S    593,   253,   333
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'elements'
:C )*SET,_z8,'SFE'
:C )*SET,_z9,'FSIN'
:C )/GO
:C )! Fnc_SFE_FSInt
:A On Elements
:D Apply FSIN on Elems
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN*NOFILTER)
:H Hlp_C_SFE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[SFE]  Pick or enter elements for fluid-structure interface
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
! Cust_Cmd_SFE
Cal_Fnc_FSILoad
:E END
:! 
:N Fnc_SFE_VFRC
:S    645,   318,   320
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'elems'
:C )*SET,_z8,'SFE'
:C )*SET,_z9,'VFRC'
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )*SET,_zc(1),'Bound','Wetting'
:C )/GO
:C )! Fnc_SFE_VFRC
:A    On Elements
:D Apply VFRC on Elements
:H Hlp_C_SFE
:K ((PREP7*SOLUTION)+CFD*NOFILTER)
:P (FLOTRAN)
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[SFE]  Pick or enter elements for boundary VFRC specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_SFE_chrgs
:S    431,   279,   145
:T Cmd_P
:C )! Fnc_SFE_chrgs
:C )! Elements for SFE command below
:A    On Elements
:D Apply CHRGS on Elems
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFE]  Pick or enter elements for surface charge specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFE_chrgs2
:E END
:! 
:N Fnc_SFE_chrgs2
:S    664,   128,   529
:T Command
:C )! Fnc_SFE_chrgs2
:D Apply CHRGS on Elems
:B Fnc_SFE_chrgs
:H Hlp_C_SFE
Cmd_SFE,P51X
Fld_0
 Typ_Lab
 Prm_[SFE]  Apply Surface Charge (CHRGS) on Elements
Fld_2
 Prm_LKEY  Face number
 Typ_INT
 DEF_1
Fld_3
 Typ_DEF_CHRGS
Fld_5
 Prm_VAL1  Surface charge value
 Typ_REAL
Fld_0
Typ_Sep
Fld_0
 Typ_Lab
 Prm_Optional surface charge at other face nodes
Fld_0
 Typ_Lab
 Prm_(leave blank for uniform surface charge)
Fld_6
 Typ_REAL
 Def_Blank
 Prm_VAL2  Surface charge at 2nd node
Fld_7
 Typ_REAL
 Def_Blank
 Prm_VAL3  Surface charge at 3rd node
Fld_8
 Typ_REAL
 Def_Blank
 Prm_VAL4  Surface charge at 4th node
:E END
:! 
:N Fnc_SFE_convt
:S    486,   159,   320
:T Cmd_P
:C )! Fnc_SFE_convt
:A    Tapered
:D Apply Tapered CONV
:K #((PREP7*SOLUTION)+cfd)
:P (THERMAL)
:H Hlp_C_SFE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[SFE]  Pick or enter elements for convection specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_SFE_convt2
:E END
:! 
:N Fnc_SFE_convt2
:S    785,   180,   598
:T Command
:C )! Fnc_SFE_convt2
:D Apply Tapered CONV on Elems
:B Fnc_SFE_conv
:H Hlp_C_SFE
:C )/NOPR
:C )*del,_z
:C )*dim,_z,,10
:C )/GO
Cmd_)/NOPR
Cmd_)*CSET,2,5
Fld_0
 Typ_Lab
 Prm_[SFE]  Apply Tapered Convection (CONV) on Elements
Fld_2
 Prm_LKEY  Face number
 Typ_INT
 Def_1
Fld_3
 Prm_VAL1  Film coeff at 1st node
 Typ_REAL
Fld_4
 Prm_      Bulk temp at 1st node
 Typ_REAL
Fld_5
 Prm_VAL2  Film coeff at 2nd node
 Typ_REAL
Cmd_)*CSET,6,9
Fld_2
 Prm_      Bulk temp at 2nd node
 Typ_REAL
Fld_3
 Prm_VAL3  Film coeff at 3rd node
 Typ_REAL
Fld_4
 Prm_      Bulk temp at 3rd node
 Typ_REAL
Fld_5
 Prm_VAL4  Film coeff at 4th node
 Typ_REAL
Cmd_)*CSET,10,10
Fld_2
 Prm_      Bulk temp at 4th node
 Typ_REAL
Cmd_)/GO
Cal_Fnc_SFE_convt3
:E END
:! 
:N Fnc_SFE_convt3
:S    486,    74,   405
:T Command
:C )! Fnc_SFE_convt3
Inp_P
Cmd_SFE,_Y1
Fld_2
 Typ_Def_*CPAR(2)
Fld_3
 Typ_Def_CONV
Fld_4
 Typ_Def_0
Fld_5
 Typ_Def_*CPAR(3)
Fld_6
 Typ_Def_*CPAR(5)
Fld_7
 Typ_Def_*CPAR(7)
Fld_8
 Typ_Def_*CPAR(9)
!
Cmd_SFE,_Y1
Fld_2
 Typ_Def_*CPAR(2)
Fld_3
 Typ_Def_CONV
Fld_4
 Typ_Def_2
Fld_5
 Typ_Def_*CPAR(4)
Fld_6
 Typ_Def_*CPAR(6)
Fld_7
 Typ_Def_*CPAR(8)
Fld_8
 Typ_Def_*CPAR(10)
!
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_SFE_convu
:S    577,   240,   330
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'elems'
:C )*SET,_z8,'SFE'
:C )*SET,_z9,'CONV'
:C )/GO
:C )! Fnc_SFE_convu
:A    Uniform
:D Apply Uniform CONV 
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[SFE]  Pick or enter elements for convection specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
! Cust_Cmd_SFE
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_SFE_frsf
:S    339,   190,   142
:T Cmd_P
:C )! Fnc_SFE_frsf
:C )! Elements for SFE command below
:A On Elements
:D Apply FRSF on Elems
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_SFE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFE]  Pick or enter elements for free surface specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFE_frsf2
:E END
:! 
:N Fnc_SFE_frsf2
:S    311,   124,   180
:T Command
:C )! Fnc_SFE_frsf2
:D Apply FRSF on Elems
:B Fnc_SFE_frsf
:H Hlp_C_SFE
Cmd_SFE,P51X
Fld_0
 Typ_Lab
 Prm_[SFE]  Apply free surface on elements
Fld_2
 Prm_LKEY  Face number
 Typ_INT
 DEF_1
Fld_3
 Typ_DEF_FRSF
Fld_5
 Prm_   Free surface number
 Typ_REAL
:E END
:! 
:N Fnc_SFE_hflux
:S    580,   244,   329
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'elemts'
:C )*SET,_z8,'SFE'
:C )*SET,_z9,'HFLUX'
:C )/GO
:C )! Fnc_SFE_hflux
:A On Elements
:D Apply HFLUX on Elems
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[SFE]  Pick or enter elements for heat flux specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
! Cust_Cmd_SFE
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_SFE_impd
:S    337,   191,   139
:T Cmd_P
:C )! Fnc_SFE_impd
:C )! Elements for SFE command below
:A On Elements
:D Apply IMPD on Elems
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SFE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFE]  Pick or enter elements for impedance specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFE_impd2
:E END
:! 
:N Fnc_SFE_impd2
:S    637,   124,   506
:T Command
:C )! Fnc_SFE_impd2
:D Apply IMPD on Elems
:B Fnc_SFE_impd
:H Hlp_C_SFE
Cmd_SFE,P51X
Fld_0
 Typ_Lab
 Prm_[SFE]  Apply impedance on elements
Fld_2
 Prm_LKEY  Face number
 Typ_INT
 DEF_1
Fld_3
 Typ_DEF_IMPD
Fld_5
 Typ_REAL
 Prm_VAL1  Impedance value
Fld_0
Typ_Sep
Fld_0
 Typ_Lab
 Prm_      Optional impedance at other face nodes
Fld_0
 Typ_Lab
 Prm_      (leave blank for uniform impedance)
Fld_6
 Typ_REAL
 Def_Blank
 Prm_VAL2     Impedance at 2nd node
Fld_7
 Typ_REAL
 Def_Blank
 Prm_VAL3     Impedance at 3rd node
Fld_8
 Typ_REAL
 Def_Blank
 Prm_VAL4     Impedance at 4th node
:E END
:! 
:N Fnc_SFE_p
:S    257,   123,   127
:T Cmd_P
:C )! Fnc_SFE_p ORPHAN
:A On Elements
:D Apply Surf Ld on Elems
:H Hlp_C_SFE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFE]  Pick or enter elements for surface loading
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFE_p2
:E END
:! 
:N Fnc_SFE_p2
:S    942,   112,   823
:T Command
:C )! Fnc_SFE_p2 ORPHAN
:D Apply Surf Ld on Elems
:H Hlp_C_SFE
Cmd_SFE,P51X
Fld_0
 Typ_Lab
 Prm_[SFE]  Apply Surface Load on Elements
Fld_3
 Prm_Lab     Type of surface load
 Typ_LIS_OPTIONB
 LIS_Pressure        ,PRES
 LIS_Convection      ,CONV
 LIS_Heat flux       ,HFLUX
 LIS_Maxwell surface ,MXWF
 LIS_Infinite surface,INF
 LIS_Surf charge dens,CHRGS
 LIS_Impedance       ,IMPD
 LIS_Fluid-struc intf,FSI
Fld_4
 Prm_KVAL    Film coeff or bulk temp? -
 Typ_LIS_OPTIONB
 LIS_Film coefficient,0
 LIS_Bulk temperature,2
Fld_0
 Typ_Lab
 Prm_        - for convection loading
Fld_5
 Typ_REAL
 Prm_VAL1    Load value at 1st node
Fld_6
 Typ_REAL
 Prm_VAL2    Load value at 2nd node
 Def_Blank
Fld_7
 Typ_REAL
 Prm_VAL3    Load value at 3rd node
 Def_Blank
Fld_8
 Typ_REAL
 Prm_VAL4    Load value at 4th node
 Def_Blank
Fld_0
Typ_SEP
Fld_2
 Typ_INT
 Def_1
 Prm_LKEY  Load key, usually face no.
:E END
:! 
:N Fnc_SFE_pres
:S   1299,   901,   391
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'elems'
:C )*SET,_z8,'SFE'
:C )*SET,_z9,'PRES'
:C )KEYW,ECNT,0
:C )*GET,_z1,elem,,c153
:C )*GET,_z2,elem,,c154
:C )_ecnt=_z1+_z2
:C )*get,_anty,active,,antype
:C )*GET,_mopt,common,,soptcm,,int,4 ! Mode extraction method key
:C )*IF,_mopt,EQ,3,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,4,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,7,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,6,THEN
:C )_mopt=1
:C )*ELSEIF,_mopt,EQ,0,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,1,THEN
:C )_mopt=0
:C )*ELSE
:C )_mopt=1
:C )*ENDIF
:C )_z1=0
:C )*IF,_ecnt,GT,0,THEN
:C )KEYW,ECNT,1
:C )*IF,_anty,EQ,3,THEN
:C )_z1=1
:C )*ENDIF
:C )*IF,_anty,EQ,2,THEN
:C )*IF,_mopt,EQ,1,THEN
:C )_z1=1
:C )*ENDIF
:C )*ENDIF
:C )*ENDIF
:C )/GO
:C )! Fnc_SFE_pres
:C )! Elements for SFE command below
:A On Elements
:D Apply PRES on Elems
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SFE
Inp_P
Cmd_)/NOPR
Fld_3
 Typ_Def_*PAR(_z1)
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[SFE]  Pick or enter elements for pressure loading
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
! Cust_Cmd_SFE
Cal_Fnc_SF_pres1,3,eq,1,1
Cal_Fnc_StLoad,3,eq,0,1
:E END
:! 
:N Fnc_SFE_presCM
:S   1427,  1018,   402
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'elems'
:C )*SET,_z8,'SFE'
:C )*SET,_z9,'PRES'
:C )CM,_TMP,ELEM
:C )KEYW,ECNT,0
:C )*GET,_z1,elem,,c153
:C )*GET,_z2,elem,,c154
:C )_ecnt=_z1+_z2
:C )*get,_anty,active,,antype
:C )*GET,_mopt,common,,soptcm,,int,4 ! Mode extraction method key
:C )*IF,_mopt,EQ,3,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,4,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,7,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,6,THEN
:C )_mopt=1
:C )*ELSEIF,_mopt,EQ,0,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,1,THEN
:C )_mopt=0
:C )*ELSE
:C )_mopt=1
:C )*ENDIF
:C )_z1=0
:C )*IF,_ecnt,GT,0,THEN
:C )KEYW,ECNT,1
:C )*IF,_anty,EQ,3,THEN
:C )_z1=1
:C )*ENDIF
:C )*IF,_anty,EQ,2,THEN
:C )*IF,_mopt,EQ,1,THEN
:C )_z1=1
:C )*ENDIF
:C )*ENDIF
:C )*ENDIF
:C )/GO
:C )! Fnc_SFE_presCM
:C )! Element Components for SFE command below
:C )/UI,CMPF,ELEM ! *** restrict picker to ELEM components ***
:A On Element Components
:D Apply PRES on Element Components
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SFE
Inp_P
Cmd_)/NOPR
Fld_3
 Typ_Def_*PAR(_z1)
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_CMSEL
Fld_3
 Prm_[SFE]  Pick or enter element components for pressure loading
 Typ_COMP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
! Cust_Cmd_SFE
Cal_Fnc_SF_pres1,3,eq,1,1
Cal_Fnc_StLoad,3,eq,0,1
:E END
:! 
:N Fnc_SFE_rad
:S    533,   209,   317
:T Cmd_P
:C )! Fnc_SFE_rad
:A On Elements
:D Apply RAD On Elements
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (THERMAL+LINPLUS+FLOTRAN+FULL_ANS)*(FLOTRAN)
:H Hlp_UI_sferad
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[SFE]  Pick or enter elements for radiation specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_SFE_rad2
:E END
:! 
:N Fnc_SFE_rad2
:S    540,   168,   365
:T Command
:C )! Fnc_SFE_rad2
:D Apply RAD on Elements
:B Fnc_SFE_rad
:H Hlp_C_SFE
:C )/NOPR
:C )*del,_z
:C )*dim,_z,,4
:C )/GO
Cmd_)/NOPR
Cmd_)*CSET,2,4
Fld_0
 Typ_Lab
 Prm_[SFE]  Apply Radiation (RAD) on Elements
Fld_2
 Prm_LKEY  Face number
 Typ_INT
 Def_1
Fld_3
 Prm_VAL1  Surface Emissivity
 Typ_REAL
Fld_4
 Prm_VAL2  Ambient Temperature
 Typ_REAL
Cmd_)/GO
Fld_0
Typ_Sep
Cmd_STEF
 Fld_2
  Typ_REAL
  Prm_[STEF]  Stefan-Boltzmann Const.
  Def_*GET(common,,RADFCM,,real,1)
Cal_Fnc_SFE_rad3
:E END
:! 
:N Fnc_SFE_rad3
:S    335,    70,   258
:T Command
:C )! Fnc_SFE_rad3
Inp_P
Cmd_SFE,_Y1
Fld_2
 Typ_Def_*CPAR(2)
Fld_3
 Typ_Def_RAD
Fld_4
 Typ_Def_0
Fld_5
 Typ_Def_*CPAR(3)
!
Cmd_SFE,_Y1
Fld_2
 Typ_Def_*CPAR(2)
Fld_3
 Typ_Def_RAD
Fld_4
 Typ_Def_2
Fld_5
 Typ_Def_*CPAR(4)
!
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_SFE_radF
:S    679,   356,   316
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'elems'
:C )*SET,_z8,'SFE'
:C )*SET,_z9,'RAD'
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )*SET,_zc(1),'Emiss','AmbiTemp'
:C )/GO
:C )! Fnc_SFE_radF
:A On Elements
:D Apply RAD On Elements
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (THERMAL+LINPLUS+FLOTRAN+FULL_ANS)*(FLOTRAN)
:H Hlp_UI_sferad
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[SFE]  Pick or enter elements for radiation specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_SFE_rdmx
:S    518,   198,   313
:T Cmd_P
:C )! Fnc_SFE_rdmx
:C )! Elements for SFE command below
:A On Elements
:D Apply RDSF on Elems
:K #(PREP7*SOLUTION)
:P (FLOTRAN*THERMAL)
:H Hlp_C_SFE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[SFE]  Pick or enter elements for RDSF specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_SFE_rdmx1
:E END
:! 
:N Fnc_SFE_rdmx1
:S    433,   169,   257
:T Command
:C )! Fnc_SFE_rdmx1
:C )/NOPR
:C )*DEL,_Z
:C )*DIM,_Z,,4
:C )/GO
:D Apply RDSF on Elems
:B Fnc_SFE_rdmx
:H Hlp_C_SFE
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_0
 Typ_Lab
 Prm_[SFE]  Apply RDSF (RDSF) on Elements
Fld_2
 Typ_REAL
 Prm_LKEY  Face number
 DEF_1
Fld_3
 Typ_REAL
 Prm_VALUE   Emissivity
 Def_0
Fld_4
 Typ_REAL
 Prm_VALUE2  Enclosure number
 Def_0
Cmd_)/GO
Cal_Fnc_SFE_rdmx2
:E END
:! 
:N Fnc_SFE_rdmx2
:S    379,    72,   300
:T Command
:C )! Fnc_SFE_rdmx2
Inp_P
Cmd_SFE
Fld_2
 Typ_DEF__Y1
Fld_3
 Typ_Def_*PAR(_z(1))
Fld_4
 Typ_DEF_RDSF
Fld_5
 Typ_Def_1
Fld_6
 Typ_Def_*PAR(_z(2))
!
Cmd_SFE
Fld_2
 Typ_DEF__Y1
Fld_3
 Typ_Def_*PAR(_z(1))
Fld_4
 Typ_DEF_RDSF
Fld_5
 Typ_Def_2
Fld_6
 Typ_Def_*PAR(_z(3))
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_SFE_selv
:S    396,   151,   238
:T Command
:C )! Fnc_SFE_selv
:A For Superelement
:D Apply Superelement Load Vector
:P (FULL_ANS)
:H Hlp_C_SFE
Cmd_SFE
Fld_0
 Typ_Lab
 Prm_[SFE]  Apply Superelement Load Vector
Fld_2
 Prm_ELEM  Elem no. of superelement
 Typ_INT
Fld_3
 Prm_LKEY  Load vector number
 Typ_INT
 Def_1
Fld_4
 Typ_DEF_SELV
Fld_6
 Prm_VAL1  Scale factor
 Typ_REAL
 Def_1.0
:E END
:! 
:N Fnc_SFFUN
:S    865,   225,   633
:T Command
:C )! Fnc_SFFUN
:A    Node Function
:D Function of Surface Load vs Node Number
:K #(PREP7*SOLUTION)
:K #((pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL)
:H Hlp_C_SFFUN
Inp_NoApply
Cmd_SFFUN
 Fld_0
  Typ_Lab
  Prm_[SFFUN]  Function of Surface Load vs Node Number
 Fld_2
  Prm_Lab   Type of surface load
  Typ_LIS_OPTIONB
   P_LN(LINPLUS*FLOTRAN)
  LIS_Pressure        ,PRES
   P_LN(THERMAL*FLOTRAN)
  LIS_Convection      ,CONV
   P_LN(THERMAL*FLOTRAN)
  LIS_Heat flux       ,HFLUX
   P_LN(ELECMAG+flotran)
  LIS_Surf charge dens,CHRGS
 Fld_3
  Prm_Par   Name of array parameter -
  Typ_CHAR,32,32
 Fld_0
  Typ_Lab
  Prm_      - containing surface load values
 Fld_4
  Prm_Par2  Name of 2nd array param -
  Typ_CHAR,32,32
 Fld_0
  Typ_Lab
  Prm_      - containing bulk temperature values (for Lab=CONV)
:E END
:! 
:N Fnc_SFGRAD
:S    947,   236,   704
:T Command
:C )! Fnc_SFGRAD
:A    Gradient
:D Gradient Specification for Surface Loads
:K (lsdyna)
:K #(PREP7*SOLUTION)
:K #((pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL)
:H Hlp_C_SFGRAD
Inp_NoApply
Cmd_SFGRAD
 Fld_0
  Typ_Lab
  Prm_[SFGRAD]  Gradient (Slope) Specification for Surface Loads
 Fld_2
  Prm_Lab    Type of surface load
  Typ_LIS_OPTIONB
   P_LN(LINPLUS)
  LIS_Pressure        ,PRES
   P_LN(THERMAL)
  LIS_Convection      ,CONV
   P_LN(THERMAL)
  LIS_Heat flux       ,HFLUX
   P_LN(ELECMA)
  LIS_Surf charge dens,CHRGS
 Fld_6
  Prm_SLOPE  Slope value (load/length)
  Typ_REAL
 Fld_4
  Prm_Sldir  Slope direction
  Typ_LIS_OPTIONB
  LIS_X direction     ,X
  LIS_Y direction     ,Y
  LIS_Z direction     ,Z
 Fld_5
  Prm_SLZER  Location along Sldir -
  Typ_REAL
 Fld_0
  Typ_Lab
  Prm_       - where slope contribution is zero
 Fld_3
  Prm_SLKCN  Slope coordinate system
  Typ_INT
:E END
:! 
:N Fnc_SFLDELE_FSInt
:S    384,   220,   157
:T Cmd_P
:C )! Fnc_SFLDELE_FSInt
:C )! Lines for SFLDELE command below
:A On Lines
:D Delete FSIN on Lines
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN*NOFILTER)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDELE]  Pick or enter line for fluid-structure interface deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Fld_3
 Typ_Def_FSIN
:E END
:! 
:N Fnc_SFLDELE_all
:S    460,   212,   241
:T Command
:C )! Fnc_SFLDELE_all
:A    On All Lines
:D Delete All Surface Loads on All Selected Lines
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SFLDELE
Inp_NoApply
Cmd_SFLDELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[SFLDELE]  This function deletes all surface loads
Fld_0
 Typ_Lab
 Prm_           on all selected lines and on all selected
Fld_0
 Typ_Lab
 Prm_           elements attached to those lines!
:E END
:! 
:N Fnc_SFLDELE_chrg
:S    405,   250,   148
:T Cmd_P
:C )! Fnc_SFLDELE_chrg
:A    On Lines
:D Delete CHRGS on Lines
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDELE]  Pick or enter lines for surface charge density deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_CHRGS
:E END
:! 
:N Fnc_SFLDELE_conv
:S    313,   171,   135
:T Cmd_P
:C )! Fnc_SFLDELE_conv
:A On Lines
:D Delete CONV on Lines
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDELE]  Pick or enter lines for convection deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_CONV
:E END
:! 
:N Fnc_SFLDELE_frsf
:S    307,   163,   137
:T Cmd_P
:C )! Fnc_SFLDELE_frsf
:A On Lines
:D Delete FRSF on Lines
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDELE]  Pick or enter lines for free surface deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FRSF
:E END
:! 
:N Fnc_SFLDELE_fsi
:S    317,   161,   149
:T Cmd_P
:C )! Fnc_SFLDELE_fsi
:A On Lines
:D Delete FSI on Lines
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDELE]  Pick or enter lines for fluid-structure interface deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FSI
:E END
:! 
:N Fnc_SFLDELE_hflu
:S    314,   172,   135
:T Cmd_P
:C )! Fnc_SFLDELE_hflu
:A On Lines
:D Delete HFLUX on Lines
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDELE]  Pick or enter lines for heat flux deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_HFLUX
:E END
:! 
:N Fnc_SFLDELE_impd
:S    305,   164,   134
:T Cmd_P
:C )! Fnc_SFLDELE_impd
:A On Lines
:D Delete IMPD on Lines
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDELE]  Pick or enter lines for impedance deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_IMPD
:E END
:! 
:N Fnc_SFLDELE_inf 
:S    355,   207,   141
:T Cmd_P
:C )! Fnc_SFLDELE_inf 
:A    On Lines
:D Delete INF on Lines
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+edgeflx*ELECSTAT)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDELE]  Pick or enter lines for infinite surface deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_INF 
:E END
:! 
:N Fnc_SFLDELE_mxwf
:S    363,   216,   140
:T Cmd_P
:C )! Fnc_SFLDELE_mxwf
:A    On Lines
:D Delete MXWF on Lines
:K #(PREP7*SOLUTION)
:K ((MAGNETIC*EDGEFLX*ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDELE]  Pick or enter lines for Maxwell surface deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_MXWF
:E END
:! 
:N Fnc_SFLDELE_pres
:S    303,   163,   133
:T Cmd_P
:C )! Fnc_SFLDELE_pres
:A On Lines
:D Delete PRES on Lines
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDELE]  Pick or enter lines for pressure deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_PRES
:E END
:! 
:N Fnc_SFLDELE_rad
:S    352,   212,   133
:T Cmd_P
:C )! Fnc_SFLDELE_rad
:A On Lines
:D Delete RAD on Lines
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (THERMAL+LINPLUS+FLOTRAN+FULL_ANS)*(FLOTRAN)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDELE]  Pick or enter lines for radiation deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_RAD
:E END
:! 
:N Fnc_SFLDELE_rdmx
:S    307,   171,   129
:T Cmd_P
:C )! Fnc_SFLDELE_rdmx
:A On Lines
:D Delete RDSF on Lines
:K #(PREP7*SOLUTION)
:P (FLOTRAN*THERMAL)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDELE]  Pick or enter lines for RDSF deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_RDSF
:E END
:! 
:N Fnc_SFLDEL_p
:S    269,   132,   130
:T Cmd_P
:C )! Fnc_SFLDEL_p ORPHAN
:A    On Lines
:D Dele Surf Ld on Lines
:H Hlp_C_SFLDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[SFLDELE]  Pick or enter lines for surface load deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Cal_Fnc_SFLDEL_p2
:E END
:! 
:N Fnc_SFLDEL_p2
:S    503,   121,   375
:T Command
:C )! Fnc_SFLDEL_p2 ORPHAN
:D Dele Surf Ld on Lines
:H Hlp_C_SFLDELE
Cmd_SFLDELE,P51X
Fld_0
 Typ_Lab
 Prm_[SFLDELE]  Delete Surface Load on Lines
Fld_2
 Prm_Lab    Type of surface load
 Typ_LIS_OPTIONB
 LIS_All surf loads  ,ALL
 LIS_Pressure        ,PRES
 LIS_Convection      ,CONV
 LIS_Heat flux       ,HFLUX
 LIS_Maxwell surface ,MXWF
 LIS_Infinite surface,INF
 LIS_Surf charge dens,CHRGS
 LIS_Impedance       ,IMPD
 LIS_Fluid-struc intf,FSI
:E END
:! 
:N Fnc_SFLDEL_vf
:S    310,   161,   142
:T Cmd_P
:C )! Fnc_SFLDEL_vf
:A    On Lines
:D Delete VFRRC on Lines
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_SFLDELE
Inp_P
Cmd_SFLDELE
Fld_2
 Prm_[SFLDEL]  Pick or enter lines for VFRC surface loads deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_VFRC
:E END
:! 
:N Fnc_SFLIST
:S    239,   124,   108
:T Cmd_P
:C )! Fnc_SFLIST
:A On Picked Nodes
:D List Nodal Surf Loads
:H Hlp_C_SFLIST
Inp_P
Cmd_SFLIST
Fld_2
Typ_NODE
Prm_[SFLIST] Pick or enter nodes for surface load listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_SFLLIS
:S    241,   124,   110
:T Cmd_P
:C )! Fnc_SFLLIS
:A On Picked Lines
:D List Line Surf Loads
:H Hlp_C_SFLLIST
Inp_P
Cmd_SFLLIST
Fld_2
Typ_LINE
Prm_[SFLLIST] Pick or enter lines for surface load listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_SFL_FSInt
:S    439,   281,   151
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'SFL'
:C )*SET,_z9,'FSIN'
:C )/GO
:C )! Fnc_SFL_FSInt
:C )! Lines for SFL command below
:A On Lines
:D Apply FSIN on Lines
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN*NOFILTER)
:H Hlp_C_SFL
Inp_P
Cmd_)!
Fld_2
 Prm_[SFL]  Pick or enter lines for fluid-structure interface
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_SFL
Cal_Fnc_FSILoad
:E END
:! 
:N Fnc_SFL_VFRC
:S    715,   351,   357
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'SFL'
:C )*SET,_z9,'VFRC'
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )*SET,_zc(1),'Bound','Wetting'
:C )/GO
:C )! Fnc_SFL_VFRC
:C )! Lines for DL command below
:A    On Lines
:D Apply %_z9% on Lines
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (FLOTRAN)
:H Hlp_C_%_z8%
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
Cmd_)/GO
! Exclude_from_paths
Cmd_LSEL
Fld_2
 Typ_Def_R
Fld_5
 Prm_[SFL]  Pick or enter lines for boundary VFRC specification
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_SFL_chrgs
:S    438,   289,   142
:T Cmd_P
:C )! Fnc_SFL_chrgs
:C )! Lines for SFL command below
:A    On Lines
:D Apply CHRGS on Lines
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SFL
Inp_P
Cmd_)!
Fld_2
 Prm_[SFL]  Pick or enter lines for surface charge specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFL_chrgs2
:E END
:! 
:N Fnc_SFL_chrgs2
:S    411,   128,   276
:T Command
:C )! Fnc_SFL_chrgs2
:D Apply CHRGS on Lines
:B Fnc_SFL_chrgs
:H Hlp_C_SFL
Cmd_SFL,P51X
Fld_0
 Typ_Lab
 Prm_[SFL]  Apply Surface Charge (CHRGS) on Lines
Fld_2
 Typ_DEF_CHRGS
Fld_3
 Typ_REAL
 Prm_VALI  Surface charge value
Fld_4
 Typ_REAL
 Prm_VALJ  Optional CHRGS at J end
 Def_Blank
Fld_0
 Typ_Lab
 Prm_      (leave blank for uniform surface charge)
:E END
:! 
:N Fnc_SFL_conv
:S    425,   270,   148
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'SFL'
:C )*SET,_z9,'CONV'
:C )/GO
:C )! Fnc_SFL_conv
:C )! Lines for SFL command below
:A On Lines
:D Apply CONV on Lines
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFL
Inp_P
Cmd_)!
Fld_2
 Prm_[SFL]  Pick or enter lines for convection specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_SFL
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_SFL_frsf
:S    330,   184,   139
:T Cmd_P
:C )! Fnc_SFL_frsf
:C )! Lines for SFL command below
:A On Lines
:D Apply FRSF on Lines
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_SFL
Inp_P
Cmd_)!
Fld_2
 Prm_[SFL]  Pick or enter lines for free surface specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFL_frsf2
:E END
:! 
:N Fnc_SFL_frsf2
:S    262,   124,   131
:T Command
:C )! Fnc_SFL_frsf2
:D Apply FRSF on Lines
:B Fnc_SFL_frsf
:H Hlp_C_SFL
Cmd_SFL,P51X
Fld_0
 Typ_Lab
 Prm_[SFL]  Apply free surface on lines
Fld_2
 Typ_DEF_FRSF
Fld_3
 Typ_REAL
 Prm_  Free surface number
:E END
:! 
:N Fnc_SFL_fsi
:S    290,   148,   135
:T Cmd_P
:C )! Fnc_SFL_fsi
:A On Lines
:D Apply FSI on Lines
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SFL
Inp_P
Cmd_SFL
Fld_2
 Prm_[SFL]  Pick or enter lines at the fluid-structure interface
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FSI
:E END
:! 
:N Fnc_SFL_hflux
:S    428,   274,   147
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'SFL'
:C )*SET,_z9,'HFLUX'
:C )/GO
:C )! Fnc_SFL_hflux
:C )! Lines for SFL command below
:A On Lines
:D Apply HFLUX on Lines
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SFL
Inp_P
Cmd_)!
Fld_2
 Prm_[SFL]  Pick or enter lines for heat flux specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_SFL
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_SFL_impd
:S    328,   185,   136
:T Cmd_P
:C )! Fnc_SFL_impd
:C )! Lines for SFL command below
:A On Lines
:D Apply IMPD on Lines
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SFL
Inp_P
Cmd_)!
Fld_2
 Prm_[SFL]  Pick or enter lines for impedance specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFL_impd2
:E END
:! 
:N Fnc_SFL_impd2
:S    382,   124,   251
:T Command
:C )! Fnc_SFL_impd2
:D Apply IMPD on Lines
:B Fnc_SFL_impd
:H Hlp_C_SFL
Cmd_SFL,P51X
Fld_0
 Typ_Lab
 Prm_[SFL]  Apply impedance on lines
Fld_2
 Typ_DEF_IMPD
Fld_3
 Typ_REAL
 Prm_VALI  Impedance value
Fld_4
 Typ_REAL
 Prm_VALJ  Optional IMPD at J end
 Def_Blank
Fld_0
 Typ_Lab
 Prm_      (leave blank for uniform impedance)
:E END
:! 
:N Fnc_SFL_inf 
:S    346,   210,   129
:T Cmd_P
:C )! Fnc_SFL_inf 
:A    On Lines
:D Apply INF on Lines
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+edgeflx*ELECSTAT)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SFL
Inp_P
Cmd_SFL
Fld_2
 Prm_[SFL]  Pick or enter lines for infinite surface flag
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_INF 
:E END
:! 
:N Fnc_SFL_mxwf
:S    370,   235,   128
:T Cmd_P
:C )! Fnc_SFL_mxwf
:A    On Lines
:D Apply MXWF on Lines
:K #(PREP7*SOLUTION)
:K ((MAGNETIC*EDGEFLX*ELECSTAT+edgeelc+harmonic*ELEM2D)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SFL
Inp_P
Cmd_SFL
Fld_2
 Prm_[SFL]  Pick or enter lines for Maxwell surface flag
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_MXWF
:E END
:! 
:N Fnc_SFL_p
:S    251,   120,   124
:T Cmd_P
:C )! Fnc_SFL_p ORPHAN
:A On Lines
:D Apply Surf Ld on Lines
:H Hlp_C_SFL
Inp_P
Cmd_)!
Fld_2
 Prm_[SFL]  Pick or enter lines for surface loading
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SFL_p2
:E END
:! 
:N Fnc_SFL_p2
:S    883,   125,   751
:T Command
:C )! Fnc_SFL_p2 ORPHAN
:D Apply Surf Ld on Lines
:B Fnc_SFL_p
:H Hlp_C_SFL
Cmd_SFL,P51X
Fld_0
 Typ_Lab
 Prm_[SFL]  Apply Surface Load on Lines
Fld_2
 Prm_Lab    Type of surface load
 Typ_LIS_OPTIONB
 LIS_Pressure        ,PRES
 LIS_Convection      ,CONV
 LIS_Heat flux       ,HFLUX
 LIS_Maxwell surface ,MXWF
 LIS_Infinite surface,INF
 LIS_Surf charge dens,CHRGS
 LIS_Impedance       ,IMPD
 LIS_Fluid-struc intf,FSI
Fld_3
 Typ_REAL
 Prm_VALI   Load value
Fld_5
 Typ_REAL
 Prm_VAL2I  Second value if required
Fld_0
 Typ_Lab
 Prm_       (bulk temperature or imaginary part)
Fld_0
Typ_SEP
Fld_0
 Typ_Lab
 Prm_Optional values at J end for a tapered surface load
Fld_0
 Typ_Lab
 Prm_(leave blank for a uniform load)
Fld_4
 Prm_ VALJ   Load value
 Typ_REAL
 Def_Blank
Fld_6
 Prm_ VALJ   Second value if required
 Typ_REAL
 Def_Blank
:E END
:! 
:N Fnc_SFL_pres
:S    422,   274,   141
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'SFL'
:C )*SET,_z9,'PRES'
:C )/GO
:C )! Fnc_SFL_pres
:C )! Lines for SFL command below
:A On Lines
:D Apply PRES on Lines
:K (lsdyna)
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SFL
Inp_P
Cmd_)!
Fld_2
 Prm_[SFL]  Pick or enter lines for pressure loading
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_SFL
Cal_Fnc_StLoad
:E END
:! 
:N Fnc_SFL_rad
:S    375,   233,   135
:T Cmd_P
:C )! Fnc_SFL_rad
:C )! Lines for SFL command below
:A On Lines
:D Apply RAD on Lines
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (THERMAL+LINPLUS+FLOTRAN+FULL_ANS)*(FLOTRAN)
:H Hlp_C_SFL
Inp_P
Cmd_)!
Fld_2
 Prm_[SFL]  Pick or enter lines for radiation specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFL_rad2
:E END
:! 
:N Fnc_SFL_rad2
:S    430,   124,   299
:T Command
:C )! Fnc_SFL_rad2
:D Apply RAD on Lines
:B Fnc_SFL_rad
:H Hlp_UI_sflrad
Cmd_SFL,P51X
Fld_0
 Typ_Lab
 Prm_[SFL]  Apply Radiation (RAD) on Lines
Fld_2
 Typ_DEF_RAD
Fld_3
 Typ_REAL
 Prm_VALI   Surface Emissivity
Fld_5
 Typ_REAL
 Prm_VAL2I  Ambient Temperature
Fld_0
Typ_Sep
Cmd_STEF
 Fld_2
  Typ_REAL
  Prm_[STEF]  Stefan-Boltzmann Const.
  Def_*GET(common,,RADFCM,,real,1)
:E END
:! 
:N Fnc_SFL_radF
:S    749,   389,   353
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'SFL'
:C )*SET,_z9,'RAD'
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )*SET,_zc(1),'Emiss','AmbiTemp'
:C )/GO
:C )! Fnc_SFL_VFRC
:C )! Lines for SFL  command below
:A On Lines
:D Apply Radiation on Lines
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (THERMAL+LINPLUS+FLOTRAN+FULL_ANS)*(FLOTRAN)
:H Hlp_C_%_z8%
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
Cmd_)/GO
! Exclude_from_paths
Cmd_LSEL
Fld_2
 Typ_Def_R
Fld_5
 Prm_[SFL]  Pick or enter lines for radiation specification
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_SFL_rdmx
:S    330,   192,   131
:T Cmd_P
:C )! Fnc_SFL_rdmx
:C )! Lines for SFL command below
:A On Lines
:D Apply RDSF on Lines
:K #(PREP7*SOLUTION)
:P (FLOTRAN*THERMAL)
:H Hlp_C_SFL
Inp_P
Cmd_)!
Fld_2
 Prm_[SFL]  Pick or enter lines for RDSF specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SFL_rdmx2
:E END
:! 
:N Fnc_SFL_rdmx2
:S    297,   124,   166
:T Command
:C )! Fnc_SFL_rdmx2
:D Apply RDSF on Lines
:B Fnc_SFL_rdmx
:H Hlp_C_SFL
Cmd_SFL,P51X
Fld_0
 Typ_Lab
 Prm_[SFL]  Apply RDSF on lines
Fld_2
 Typ_DEF_RDSF
Fld_3
 Typ_REAL
 Prm_VALUE   Emissivity
Fld_5
 Typ_REAL
 Prm_VALUE2  Enclosure number
:E END
:! 
:N Fnc_SFSCALE
:S    998,   178,   813
:T Command
:C )! Fnc_SFSCALE
:A    Surface Loads
:D Scale Surface Loads
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*FLOTRAN)
:H Hlp_C_SFSCALE
Cmd_SFSCALE
 Fld_0
  Typ_Lab
  Prm_[SFSCALE]  Scale Surface Loads on All Selected Elements
 Fld_2
  K_Fl(flotran)
  Prm_Lab    Type of surface load
  Typ_LIS_OPTIONB
  LIS_All surface lds ,ALL
P_LN(LINPLUS)
  LIS_Pressure        ,PRES
P_LN(THERMAL*FLOTRAN)
  LIS_Convection      ,CONV
P_LN(THERMAL*FLOTRAN)
  LIS_Heat flux       ,HFLUX
P_LN(FULL_ANS)
  LIS_Superelem ld vec,SELV
P_LN(ELECMAG)
  LIS_Surf charge dens,CHRGS
 Fld_2
  K_FL(FLOTRAN)
  Prm_Lab    Type of surface load
  Typ_LIS_OPTIONB
  LIS_All surface lds ,ALL
P_LN(THERMAL*FLOTRAN)
  LIS_Convection      ,CONV
P_LN(THERMAL*FLOTRAN)
  LIS_Heat flux       ,HFLUX
 Fld_3
  Prm_FACT   Scale factor
  Typ_REAL
  Def_1.0
 Fld_4
  Prm_FACT2  Second scale factor -
  Typ_REAL
  Def_1.0
 Fld_0
  Typ_Lab
  Prm_       - for bulk temperature or imaginary part
:E END
:! 
:N Fnc_SFTRAN
:S    408,   202,   199
:T Command
:C )! Fnc_SFTRAN
:A    Surface Loads
:D Transfer Solid Model Surface Loads to Elements
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SFTRAN
Inp_NoApply
Cmd_SFTRAN
 Fld_0
  Typ_Lab
  Prm_[SFTRAN]  This function transfers surface loads from currently
 Fld_0
  Typ_Lab
  Prm_          selected lines and areas to currently selected elements.
:E END
:! 
:N Fnc_SF_FSInt
:S    432,   276,   149
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'SF'
:C )*SET,_z9,'FSIN'
:C )/GO
:C )! Fnc_SF_FSInt
:C )! Nodes for SF command below
:A On Nodes
:D Apply FSIN on Nodes
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN*NOFILTER)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for Fluid-Structure Interface
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_SF
Cal_Fnc_FSILoad
:E END
:! 
:N Fnc_SF_chrgs
:S    416,   269,   140
:T Cmd_P
:C )! Fnc_SF_chrgs
:C )! Nodes for SF command below
:A    On Nodes
:D Apply CHRGS on Nodes
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for surface charge specification
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SF_chrgs2
:E END
:! 
:N Fnc_SF_chrgs2
:S    277,   124,   146
:T Command
:C )! Fnc_SF_chrgs2
:D Apply CHRGS on Nodes
:B Fnc_SF_chrgs
:H Hlp_C_SF
Cmd_SF,P51X
Fld_0
 Typ_Lab
 Prm_[SF]  Apply Surface Charge (CHRGS) on Nodes
Fld_2
 Typ_DEF_CHRGS
Fld_3
 Typ_REAL
 Prm_VALUE  Surface charge value
:E END
:! 
:N Fnc_SF_conv
:S    418,   265,   146
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'SF'
:C )*SET,_z9,'CONV'
:C )/GO
:C )! Fnc_SF_conv
:C )! Nodes for SF command below
:A On Nodes
:D Apply CONV on Nodes
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for convection specification
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_SF
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_SF_frsf
:S    324,   180,   137
:T Cmd_P
:C )! Fnc_SF_frsf
:C )! Nodes for SF command below
:A On Nodes
:D Apply FRSF on Nodes
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for free surface specification
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SF_frsf2
:E END
:! 
:N Fnc_SF_frsf2
:S    257,   120,   130
:T Command
:C )! Fnc_SF_frsf2
:D Apply FRSF on Nodes
:B Fnc_SF_frsf
:H Hlp_C_SF
Cmd_SF,P51X
Fld_0
 Typ_Lab
 Prm_[SF]  Apply free surface on nodes
Fld_2
 Typ_DEF_FRSF
Fld_3
 Typ_REAL
 Prm_   Free surface number
:E END
:! 
:N Fnc_SF_fsi
:S    285,   145,   133
:T Cmd_P
:C )! Fnc_SF_fsi
:A On Nodes
:D Apply FSI on Nodes
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SF
Inp_P
Cmd_SF
Fld_2
 Prm_[SF]  Pick or enter nodes at the fluid-structure interface
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FSI
:E END
:! 
:N Fnc_SF_hflux
:S    421,   269,   145
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'SF'
:C )*SET,_z9,'HFLUX'
:C )/GO
:C )! Fnc_SF_hflux
:C )! Nodes for SF command below
:A On Nodes
:D Apply HFLUX on Nodes
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for heat flux specification
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_SF
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_SF_impd
:S    322,   181,   134
:T Cmd_P
:C )! Fnc_SF_impd
:C )! Nodes for SF command below
:A On Nodes
:D Apply IMPD on Nodes
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for impedance specification
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SF_impd2
:E END
:! 
:N Fnc_SF_impd2
:S    254,   120,   127
:T Command
:C )! Fnc_SF_impd2
:D Apply IMPD on Nodes
:B Fnc_SF_impd
:H Hlp_C_SF
Cmd_SF,P51X
Fld_0
 Typ_Lab
 Prm_[SF]  Apply impedance on nodes
Fld_2
 Typ_DEF_IMPD
Fld_3
 Typ_REAL
 Prm_VALUE  Impedance value
:E END
:! 
:N Fnc_SF_impd4
:S    307,   120,   180
:T Command
:C )! Fnc_SF_impd4
:D Apply IMPD on Nodes
:B Fnc_SF_impd
:H Hlp_C_SF
Cmd_SF,P51X
Fld_0
 Typ_Lab
 Prm_[SF]  Apply Impedance (IMPD) on Nodes
Fld_2
 Typ_DEF_IMPD
Fld_3
 Typ_REAL
 Prm_VALUE  Impedance (real)
Fld_4
 Typ_REAL
 Prm_VALUE2 Impedance (imag)
:E END
:! 
:N Fnc_SF_impdE
:S    356,   215,   134
:T Cmd_P
:C )! Fnc_SF_impdE
:C )! Nodes for SF command below
:A    On Nodes
:D Apply IMPD on Nodes
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG*THERMAL)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for impedance specification
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SF_impd4
:E END
:! 
:N Fnc_SF_inf 
:S    325,   191,   127
:T Cmd_P
:C )! Fnc_SF_inf 
:A    On Nodes
:D Apply INF on Nodes
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+edgeflx*ELECSTAT)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SF
Inp_P
Cmd_SF
Fld_2
 Prm_[SF]  Pick or enter nodes for infinite surface flag
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_INF 
:E END
:! 
:N Fnc_SF_mci
:S    382,   225,   136
:T Cmd_P
:C )! Fnc_SF_mci
:C )! Nodes for SF command below
:A    On Nodes
:D Apply MCI on Nodes
:K #(PREP7*SOLUTION)
:K ((CIRC+VECTORP+ELEM3D+MAGNETIC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for mag circ intf specification
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SF_mci2
:E END_of_Fnc_SF_mci
:! 
:N Fnc_SF_mci2
:S    309,   102,   185
:T Command
:C )! Fnc_SF_mci2
:D Apply MCI on Nodes
:H Hlp_C_SF
Cmd_SF,P51X
Fld_0
 Typ_Lab
 Prm_[SF]  Apply Mag circ intf (MCI) on Nodes
Fld_2
 Typ_DEF_MCI
Fld_3
Prm_Current flow
Typ_LIS_OPTIONB
LIS_Into the face   ,-1
LIS_Out of the face ,1
DEF_-1
:E END_of_Fnc_SF_mci2
:! 
:N Fnc_SF_mxwf
:S    325,   192,   126
:T Cmd_P
:C )! Fnc_SF_mxwf
:A    On Nodes
:D Apply MXWF on Nodes
:K #(PREP7*SOLUTION)
:K ((MAGNETIC*EDGEFLX*ELECSTAT)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SF
Inp_P
Cmd_SF
Fld_2
 Prm_[SF]  Pick or enter nodes for Maxwell surface flag
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_MXWF
:E END
:! 
:N Fnc_SF_p
:S    282,   153,   122
:T Cmd_P
:C )! Fnc_SF_p ORPHAN
:C )! Nodes for SF command below
:A    On Nodes
:D Apply Surf Ld on Nodes
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for surface loading
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_SF_p2
:E END
:! 
:N Fnc_SF_p2
:S    614,   109,   498
:T Command
:C )! Fnc_SF_p2 ORPHAN
:D Apply Surf Ld on Nodes
:H Hlp_C_SF
Cmd_SF,P51X
Fld_0
 Typ_Lab
 Prm_[SF]  Apply Surface Load on Nodes
Fld_2
 Prm_Lab     Type of surface load
 Typ_LIS_OPTIONB
 LIS_Pressure        ,PRES
 LIS_Convection      ,CONV
 LIS_Heat flux       ,HFLUX
 LIS_Maxwell surface ,MXWF
 LIS_Infinite surface,INF
 LIS_Surf charge dens,CHRGS
 LIS_Impedance       ,IMPD
 LIS_Fluid-struc intf,FSI
Fld_3
 Typ_REAL
 Prm_VALUE   Load value
Fld_4
 Typ_REAL
 Prm_VALUE2  Second value if required
Fld_0
 Typ_Lab
 Prm_        (bulk temperature or imaginary part)
:E END
:! 
:N Fnc_SF_port
:S    354,   218,   129
:T Cmd_P
:C )! Fnc_SF_port
:C )! Nodes for SF command below
:A       On Nodes
:D Define Exterior PORT on Nodes
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for Port specification
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SF_port1
:E END
:! 
:N Fnc_SF_port1
:S    295,   130,   158
:T Command
:C )! Fnc_SF_port1
:D Define Exterior PORT on Nodes
:B Fnc_SF_port
:H Hlp_C_SF
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_0
 Typ_Lab
 Prm_[SF]  Define exterior port on Nodes
Fld_2
 Typ_REAL
 Prm_VALUE Port number
Cmd_)/GO
Cal_Fnc_SF_port2
:E END
:! 
:N Fnc_SF_port2
:S    249,   192,    50
:T Command
:C )! Fnc_SF_port2
:C )/NOPR
:C )keyw,ediprt,0
:C )keyw,intprt,0
:C )keyw,extprt,1
:C )/GO
:D Define Exterior PORT on Nodes
:B Fnc_SF_port_1
Inp_P
Cmd_SF,P51X,PORT
 Fld_2
  Typ_Def_*PAR(_z1)
:E END
:! 
:N Fnc_SF_pres
:S   1092,   890,   195
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'SF'
:C )*SET,_z9,'PRES'
:C )KEYW,ECNT,0
:C )*GET,_z1,elem,,c153
:C )*GET,_z2,elem,,c154
:C )_ecnt=_z1+_z2
:C )*get,_anty,active,,antype
:C )*GET,_mopt,common,,soptcm,,int,4 ! Mode extraction method key
:C )*IF,_mopt,EQ,3,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,4,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,7,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,6,THEN
:C )_mopt=1
:C )*ELSEIF,_mopt,EQ,0,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,1,THEN
:C )_mopt=0
:C )*ELSE
:C )_mopt=1
:C )*ENDIF
:C )_z1=0
:C )*IF,_ecnt,GT,0,THEN
:C )KEYW,ECNT,1
:C )*IF,_anty,EQ,3,THEN
:C )_z1=1
:C )*ENDIF
:C )*IF,_anty,EQ,2,THEN
:C )*IF,_mopt,EQ,1,THEN
:C )_z1=1
:C )*ENDIF
:C )*ENDIF
:C )*ENDIF
:C )/GO
:C )! Fnc_SF_pres
:C )! Nodes for SF command below
:A On Nodes
:D Apply PRES on Nodes
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for pressure loading
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
  PFM_1
Fld_3
 Typ_Def_*PAR(_z1)
! Cust_Cmd_SF
Cal_Fnc_SF_pres1,3,eq,1
Cal_Fnc_StLoad,3,eq,0
:E END
:! 
:N Fnc_SF_pres1
:S   3964,  1243,  2714
:T Command
:C )! Fnc_ZLoad
:C )/NOPR
:C )*SET,_z4
:C )*CSET,1,4
:C )*CSET,101,104
:C )*DEL,_vz
:C )*DIM,_vz,,2
:C )KEYW,sfelc,0
:C )KEYW,sfelh,0
:C )KEYW,sflc,0
:C )KEYW,sflh,0
:C )KEYW,sfalc,0
:C )KEYW,sfalh,0
:C )KEYW,sfllc,0
:C )KEYW,sfllh,0
:C )KEYW,dkld,0
:C )KEYW,dald,0
:C )KEYW,dlld,0
:C )KEYW,bfeld,0
:C )KEYW,bfuld,0
:C )KEYW,ktabf,0
:C )KEYW,ktabt,0
:C )KEYW,ktabn,0
:C )*IF,_z8,EQ,'BFE',THEN
:C )KEYW,bfeld,1
:C )*ELSEIF,_z8,EQ,'BFUNIF',THEN
:C )KEYW,bfuld,1
:C )*ELSEIF,_z8,EQ,'SF',THEN
:C )*IF,_z9,EQ,'PRES',THEN
:C )KEYW,sflc,1
:C )*ELSEIF,_z9,EQ,'HFLUX',THEN
:C )KEYW,sflh,1
:C )*ENDIF
:C )*ELSEIF,_z8,EQ,'SFE',THEN
:C )*IF,_z9,EQ,'PRES',THEN
:C )KEYW,sfelc,1
:C )*ENDIF
:C )*IF,_z9,EQ,'HFLUX',THEN
:C )KEYW,sfelh,1
:C )*ENDIF
:C )*ELSEIF,_z8,EQ,'SFA',THEN
:C )*IF,_z9,EQ,'CONV',THEN
:C )KEYW,sfalc,1
:C )*ELSEIF,_z9,EQ,'HFLUX',THEN
:C )KEYW,sfalh,1
:C )*ENDIF
:C )*ELSEIF,_z8,EQ,'SFL',THEN
:C )*IF,_z9,EQ,'CONV',THEN
:C )KEYW,sfllc,1
:C )*ELSEIF,_z9,EQ,'HFLUX',THEN
:C )KEYW,sfllh,1
:C )*ENDIF
:C )*ELSEIF,_z8,EQ,'DK',THEN
:C )KEYW,dkld,1
:C )*ELSEIF,_z8,EQ,'DA',THEN
:C )KEYW,dald,1
:C )*ELSEIF,_z8,EQ,'DL',THEN
:C )KEYW,dlld,1
:C )*ENDIF
:C)/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Cmd_)/NOPR
Cmd_)*SET,_vz(1)
Fld_0
K_FL(SFELC)
Typ_Lab
  Prm_[SFE] Pressure on Elements
 Fld_0
K_FL(SFELC)
  Typ_Sep
 Fld_2
 K_LN(SFELC*SFALC*SFLLC*SFLC)
  Prm_[%_z8%] Apply Pressure on %_z7% 
 K_LN(sfelc+sfalc+sfllc+sflc)
  Prm_[%_z8%] Apply %_z9% on %_z7% as a
  Typ_Lis_OptioB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
  Def_*PAR(_vz(1))
 Fld_0
  Typ_Sep
 Fld_0
  K_FL(sfelh)
  Typ_Lab
  Prm_If Constant value then:
!
Cmd_)*SET,_z4
K_CM(BFELD*SFELH)
Fld_2
K_FL(SFELH+bfeld)
 Prm_LKEY  Face number
 Typ_Int
 Def_*PAR(_z4)
Fld_0
 K_FL(SFELH)
 Typ_Sep
Fld_0
 K_FL(SFELH)
 Typ_Lab
 Prm_If Constant value then:
Fld_2
 K_FL(BFELD+sfelh)
 Prm_STLOC  Starting location N
 Typ_INT
 Def_*PAR(_z4)
!
Cmd_)*CSET,101,104
Fld_2
 Typ_REAL
 Def_*CPAR(101)
 K_LN(sfelc+sfalc+sfllc+sflc+sfelh)
 Prm_VALUE  Load %_z9% value
 K_LN(SFELC*SFALC*SFLLC*SFLC)
 Prm_VALI   Real Value of Pressure
 K_LN(BFELD*SFELH)
 Prm_VAL1   Load %_z9% at loc N
 K_LN(BFULD)
 Prm_VALUE  Uniform heat gen rate
Fld_3
 K_FL(BFELD*SFELH)
 Typ_REAL
 Def_*CPAR(102)
 Prm_VAL2   Load %_z9% at loc N+1
Fld_4
 K_FL(BFELD*SFELH)
 Typ_REAL
 Def_*CPAR(103)
 Prm_VAL3   Load %_z9% at loc N+2
Fld_5
 K_FL(BFELD*SFELH)
 Typ_REAL
 Def_*CPAR(104)
 Prm_VAL4   Load %_z9% at loc N+3
Fld_3
 K_FL(DKLD*DALD*DLLD)
 Typ_LOGI,No,Yes
 Def_1
 K_LN(DKLD)
 Prm_KEXPND  Expand TEMP to nodes?
 K_LN(DALD)
 Prm_ Apply TEMP to boundary lines?
 K_LN(DLLD)
 Prm_ Apply TEMP to endpoints?
!
Cmd_)*SET,_vz(2)
 K_CM(SFELC*SFALC*SFLLC*SFLC)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Apply Imag Pressure on %_z7% 
  Typ_Lis_OptioB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
  Def_*PAR(_vz(2))
!
Cmd_)*CSET,102,102
 K_CM(SFELC*SFALC*SFLLC*SFLC+bfeld+sfelh)
 Fld_0
  Typ_Sep
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_2
 Prm_VAL2I  Imag Value of Pressure
 Typ_REAL
 Def_*CPAR(102)
!
Cmd_)*CSET,103,104
K_CM(SFLLC*SFALC*SFALH*SFLLH+bfeld+sfelh)
Fld_0
 Typ_Sep
Fld_0
 K_FL(SFLLC*SFLLH)
 Typ_Lab
 Prm_If Constant value then:
Fld_0
 K_FL(SFLLC*SFLLH)
 Typ_Lab
 Prm_       Optional %_z9% values at end J of line
Fld_0
 K_FL(SFLLC*SFLLH)
 Typ_Lab
 Prm_       (leave blank for uniform %_z9% )
Fld_2
 K_FL(SFLLH)
 Typ_REAL
 Def_*CPAR(103)
Fld_2
 K_FL(SFLLC)
 Typ_REAL
 Def_*CPAR(103)
 Prm_VALJ      Film coefficient
Fld_3
 K_FL(SFLLC)
 Typ_REAL
 Def_*CPAR(104)
 Prm_VAL2J     Bulk temperature
Fld_2
 K_FL(SFALC*SFALH)
 Typ_Int
 Def_1
 Prm_LKEY  Load key, usually face no.
Fld_0
 K_FL(SFALC*SFALH)
 Typ_Lab
 Prm_      (required only for shell elements)
!
Cmd_)*SET,_z4
K_CM(SFELC+sfelh+bfeld)
Fld_0
 Typ_Sep
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 Def_1
!
Cmd_)/GO
  Cal_Fnc_ZLoad2,2,EQ,1,2
  Cal_Fnc_ZLoad4,2,EQ,2,2
  Cal_Fnc_ZLoad6,2,EQ,3,2
:E END
:! 
:N Fnc_SF_presCM
:S   1199,   987,   205
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'SF'
:C )*SET,_z9,'PRES'
:C )KEYW,ECNT,0
:C )*GET,_z1,elem,,c153
:C )*GET,_z2,elem,,c154
:C )_ecnt=_z1+_z2
:C )*get,_anty,active,,antype
:C )*GET,_mopt,common,,soptcm,,int,4 ! Mode extraction method key
:C )*IF,_mopt,EQ,3,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,4,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,7,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,6,THEN
:C )_mopt=1
:C )*ELSEIF,_mopt,EQ,0,THEN
:C )_mopt=0
:C )*ELSEIF,_mopt,EQ,1,THEN
:C )_mopt=0
:C )*ELSE
:C )_mopt=1
:C )*ENDIF
:C )_z1=0
:C )*IF,_ecnt,GT,0,THEN
:C )KEYW,ECNT,1
:C )*IF,_anty,EQ,3,THEN
:C )_z1=1
:C )*ENDIF
:C )*IF,_anty,EQ,2,THEN
:C )*IF,_mopt,EQ,1,THEN
:C )_z1=1
:C )*ENDIF
:C )*ENDIF
:C )*ENDIF
:C )/GO
:C )! Fnc_SF_presCM
:C )! Node Components for SF command below
:C )/UI,CMPF,NODE ! *** restrict picker to NODE components ***
:A On Node Components
:D Apply PRES on Node Components
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter node components for pressure loading
 Typ_COMP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Fld_3
 Typ_Def_*PAR(_z1)
! Cust_Cmd_SF
Cal_Fnc_SF_pres1,3,eq,1
Cal_Fnc_StLoad,3,eq,0
:E END
:! 
:N Fnc_SF_rad
:S    369,   229,   133
:T Cmd_P
:C )! Fnc_SF_rad
:C )! Nodes for SF command below
:A On Nodes
:D Apply RAD on Nodes
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (THERMAL+LINPLUS+FLOTRAN+FULL_ANS)*(FLOTRAN)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for radiation specification
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SF_rad2
:E END
:! 
:N Fnc_SF_rad2
:S    436,   130,   299
:T Command
:C )! Fnc_SF_rad2
:D Apply RAD on Nodes
:B Fnc_SF_rad
:H Hlp_C_SF
:H Hlp_C_STEF
Cmd_SF,P51X
Fld_0
 Typ_Lab
 Prm_[SF]  Apply Radiation (RAD) on Nodes
Fld_2
 Typ_DEF_RAD
Fld_3
 Typ_REAL
 Prm_VALUE   Surface Emissivity
Fld_4
 Typ_REAL
 Prm_VALUE2  Ambient Temperature
Fld_0
Typ_Sep
Cmd_STEF
 Fld_2
  Typ_REAL
  Prm_[STEF]  Stefan-Boltzmann Const.
  Def_*GET(common,,RADFCM,,real,1)
:E END
:! 
:N Fnc_SF_radF
:S    744,   384,   353
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'SF'
:C )*SET,_z9,'RAD'
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )*SET,_zc(1),'Emiss','AmbiTemp'
:C )/GO
:C )! Fnc_SF_radF
:C )! Nodes for SF command below
:A On Nodes
:D Apply Radiation on Nodes
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (THERMAL+LINPLUS+FLOTRAN+FULL_ANS)*(FLOTRAN)
:H Hlp_C_%_z8%
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,NODE
Cmd_)/GO
! Exclude_from_paths
Cmd_NSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[SF]  Pick or enter nodes for radiation specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_SF_rdmx
:S    324,   188,   129
:T Cmd_P
:C )! Fnc_SF_rdmx
:C )! Nodes for SF command below
:A On Nodes
:D Apply RDSF on Nodes
:K #(PREP7*SOLUTION)
:P (FLOTRAN*THERMAL)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for RDSF specification
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SF_rdmx2
:E END
:! 
:N Fnc_SF_rdmx2
:S    291,   120,   164
:T Command
:C )! Fnc_SF_rdmx2
:D Apply RDSF on Nodes
:B Fnc_SF_rdmx
:H Hlp_C_SF
Cmd_SF,P51X
Fld_0
 Typ_Lab
 Prm_[SF]  Apply RDSF on nodes
Fld_2
 Typ_DEF_RDSF
Fld_3
 Typ_REAL
 Prm_VALUE   Emissivity
Fld_4
 Typ_REAL
 Prm_VALUE2  Enclosure number
:E END
:! 
:N Fnc_SF_shld
:S    343,   205,   131
:T Cmd_P
:C )! Fnc_SF_shld
:C )! Nodes for SF command below
:A    On Nodes
:D Apply SHLD on Nodes
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SF
Inp_P
Cmd_)!
Fld_2
 Prm_[SF]  Pick or enter nodes for shield specification
 Typ_NODE
 Min_2
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_SF_shld4
:E END
:! 
:N Fnc_SF_shld4
:S    301,   120,   174
:T Command
:C )! Fnc_SF_shld4
:D Apply SHLD on Nodes
:B Fnc_SF_shld
:H Hlp_C_SF
Cmd_SF,P51X
Fld_0
 Typ_Lab
 Prm_[SF]  Apply Shield (SHLD) on Nodes
Fld_2
 Typ_DEF_SHLD
Fld_3
 Typ_REAL
 Prm_COND Conductivity
Fld_4
 Typ_REAL
 Prm_MUR  Relative permeability
:E END
:! 
:N Fnc_SHPP_change
:S   4474,   121,  4346
:T Command
:D Change Shape Check Settings
:C )! Fnc_SHPP_change
:H Hlp_C_SHPP
Inp_NoApply
Cmd_)!
 Fld_0
 Typ_Lab
 Prm_[SHPP]    Change Shape Check Settings
Fld_0
 Typ_Sep
Fld_0
 Typ_Lab
Prm_ Aspect ratio  (EXCEPT EMAG)
Fld_0
 Typ_Lab
Prm_    Quad or triangle element or face
Cmd_SHPP,MODIF,1
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,1)
Cmd_SHPP,MODIF,2
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,2)
Fld_0
 Typ_Sep
Fld_0
 Typ_Lab
Prm_ Deviation from 90 degree corner angle
Fld_0
 Typ_Lab
Prm_    SHELL28 shear/twist panel
Cmd_SHPP,MODIF,7
Fld_2
Typ_REAL
Prm_         Warning tolerance
Def_*GET(common,,shapcm,,real,7)
Cmd_SHPP,MODIF,8
Fld_2
Typ_REAL
Prm_         Error tolerance
Def_*GET(common,,shapcm,,real,8)
Fld_0
 Typ_Sep
Fld_0
 Typ_Lab
Prm_ Deviation from parallel opposite edges in degrees(EXCEPT FLTRN OR EMAG)
Fld_0
 Typ_Lab
 Prm_    Quad element or face without midside nodes
Cmd_SHPP,MODIF,11
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,11)
Cmd_SHPP,MODIF,12
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,12)
Fld_0
 Typ_Lab
 Prm_    Quad or element face with midside nodes
Cmd_SHPP,MODIF,13
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,13)
Cmd_SHPP,MODIF,14
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,14)
Fld_0
 Typ_Sep
Fld_0
 Typ_Lab
Prm_ Maximum corner angle in degrees (EXCEPT EMAG)
Fld_0
 Typ_Lab
Prm_    Triangle element or face
Cmd_SHPP,MODIF,15
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,15)
Cmd_SHPP,MODIF,16
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,16)
Fld_0
 Typ_Lab
Prm_    Quad element or face without midside nodes
Cmd_SHPP,MODIF,17
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,17)
Cmd_SHPP,MODIF,18
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,18)
Fld_0
 Typ_Lab
Prm_    Quad element or face with midside nodes
Cmd_SHPP,MODIF,19
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,19)
Cmd_SHPP,MODIF,20
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,20)
Fld_0
 Typ_Sep
Fld_0
 Typ_Lab
Prm_ Jacobian ratio
Fld_0
 Typ_Lab
Prm_    H-method element
Cmd_SHPP,MODIF,31
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,31)
Cmd_SHPP,MODIF,32
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,32)
Fld_0
 Typ_Lab
Prm_    P-method element
Cmd_SHPP,MODIF,33
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,33)
Cmd_SHPP,MODIF,34
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,34)
Fld_0
 Typ_Sep
Fld_0
 Typ_Lab
Prm_ Quad element or face warping factor
Fld_0
 Typ_Lab
Prm_    SHELL43,SHELL143,SHELL163,SHELL181
Cmd_SHPP,MODIF,51
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,51)
Cmd_SHPP,MODIF,52
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,52)
Fld_0
 Typ_Lab
Prm_    INFIN47,INTER115,SHELL57,SHELL63
Fld_0
 Typ_Lab
Prm_    With NLGEOM off and KYOPT1 not =1
Cmd_SHPP,MODIF,53
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,53)
Cmd_SHPP,MODIF,54
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,54)
Fld_0
 Typ_Lab
Prm_    SHELL43 OR SHELL 63 WITH KYOPT1 = 1
Cmd_SHPP,MODIF,55
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,55)
Cmd_SHPP,MODIF,56
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,56)
Fld_0
 Typ_Lab
Prm_    SHELL28 
Cmd_SHPP,MODIF,57
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,57)
Cmd_SHPP,MODIF,58
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,58)
Fld_0
 Typ_Lab
Prm_    SHELL63 with NLGEOM on and KYOPT1 not = 1
Cmd_SHPP,MODIF,59
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,59)
Cmd_SHPP,MODIF,60
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,60)
Fld_0
 Typ_Lab
Prm_    3D solid element face
Cmd_SHPP,MODIF,67
Fld_2
Typ_REAL
Prm_         Warning tolerance 
Def_*GET(common,,shapcm,,real,67)
Cmd_SHPP,MODIF,68
Fld_2
Typ_REAL
Prm_         Error tolerance   
Def_*GET(common,,shapcm,,real,68)
:E END
:! 
:N Fnc_SHPP_toggle
:S   1511,   737,   767
:T Command
:A Toggle Checks
:D Toggle Shape Checks
:C )! Fnc_SHPP_toggle
:C )/NOPR
:C )*GET,_z1,common,,shapcm,,int,1
:C )*IF,_z1,eq,1,then
:C )_z1=0
:C )*ELSE
:C )_z1=1
:C )*ENDIF
:C )*GET,_z2,common,,shapcm,,int,3
:C )*IF,_z2,eq,1,then
:C )_z2=0
:C )*ELSE
:C )_z2=1
:C )*ENDIF
:C )*GET,_z3,common,,shapcm,,int,4
:C )*IF,_z3,eq,1,then
:C )_z3=0
:C )*ELSE
:C )_z3=1
:C )*ENDIF
:C )*GET,_z4,common,,shapcm,,int,10
:C )*IF,_z4,eq,1,then
:C )_z4=0
:C )*ELSE
:C )_z4=1
:C )*ENDIF
:C )*GET,_z5,common,,shapcm,,int,6
:C )*IF,_z5,eq,1,then
:C )_z5=0
:C )*ELSE
:C )_z5=1
:C )*ENDIF
:C )*GET,_z7,common,,shapcm,,int,5
:C )*IF,_z7,eq,1,then
:C )_z7=0
:C )*ELSE
:C )_z7=1
:C )*ENDIF
:C )/GO
:H Hlp_C_SHPP
Cmd_)/NOPR
  Cmd_)*SET,_z1
  Fld_0
  Typ_Lab
  Prm_[SHPP] Toggle Shape Checks
  Fld_2
  Typ_LOGI,Off, On
  Prm_Aspect Ratio Tests
  Def_*PAR(_z1)
  Cmd_)*SET,_z7
  Fld_2
  Typ_LOGI,Off, On
  Prm_Shear/Twist Angl Deviation Tests
  Def_*PAR(_z7)
  Cmd_)*SET,_z2
  Fld_2
  Typ_LOGI,Off, On
  Prm_Parallel Side Tests
  Def_*PAR(_z2)
  Cmd_)*SET,_z3
  Fld_2
  Typ_LOGI,Off, On
  Prm_Maximum Angle Tests
  Def_*PAR(_z3)
  Cmd_)*SET,_z4
  Fld_2
  Typ_LOGI,Off, On
  Prm_Jacobian Ratio Tests
  Def_*PAR(_z4)
  Cmd_)*SET,_z5
  Fld_2
  Typ_LOGI,Off, On
  Prm_Warp Tests
  Def_*PAR(_z5)
  Fld_0
  Typ_Lab
  Prm_NOTE: If you are turning all tests off it is more 
  Fld_0
  Typ_Lab
  Prm_efficient to issue SHPP,OFF in the Shape Checking dialog box.
Cmd_)/GO
Cal_Fnc_SHPP_toggle2
:E END
:! 
:N Fnc_SHPP_toggle2
:S    961,   569,   385
:T Command
:A Toggle Checks
:D Toggle Shape Checks
:C )! Fnc_SHPP_toggle
:C )/NOPR
:C )*IF,_z1,eq,1,THEN
:C )_z1='ON'
:C )*ELSE
:C )_z1='OFF'
:C )*ENDIF
:C )*IF,_z2,eq,1,THEN
:C )_z2='ON'
:C )*ELSE
:C )_z2='OFF'
:C )*ENDIF
:C )*IF,_z3,eq,1,THEN
:C )_z3='ON'
:C )*ELSE
:C )_z3='OFF'
:C )*ENDIF
:C )*IF,_z4,eq,1,THEN
:C )_z4='ON'
:C )*ELSE
:C )_z4='OFF'
:C )*ENDIF
:C )*IF,_z5,eq,1,THEN
:C )_z5='ON'
:C )*ELSE
:C )_z5='OFF'
:C )*ENDIF
:C )*IF,_z7,eq,1,THEN
:C )_z7='ON'
:C )*ELSE
:C )_z7='OFF'
:C )*ENDIF
:C )/GO
:H Hlp_C_SHPP
Inp_P
  Cmd_SHPP
  Fld_2
  Typ_Def_*PAR(_z1)
  Fld_3
  Typ_Def_ASPECT 
  Cmd_SHPP
  Fld_2
  Typ_Def_*PAR(_z2)
  Fld_3
  Typ_Def_PARA
  Cmd_SHPP
  Fld_2
  Typ_Def_*PAR(_z3)
  Fld_3
  Typ_Def_MAXANG
  Cmd_SHPP
  Fld_2
  Typ_Def_*PAR(_z4)
  Fld_3
  Typ_Def_JACRAT
  Cmd_SHPP
  Fld_2
  Typ_Def_*PAR(_z5)
  Fld_3
  Typ_Def_WARP
  Cmd_SHPP
  Fld_2
  Typ_Def_*PAR(_z7)
  Fld_3
  Typ_Def_ANGD
:E END
:! 
:N Fnc_SLIST
:S   1264,   301,   956
:T Cmd
:C )! Fnc_SLIST
:C )/NOPR
:C )_z1=sectinqr(0,14)
:C )*get,_z1,common,,sectionc,,int,6
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A List Sections
:D List Summary of Section Properties
:H Hlp_C_SLIST
Cmd_SLIST
 Fld_0
  Typ_Lab
  Prm_[SLIST] Properties of Sections
 Fld_2
  Prm_First Section ID [SFIRST]
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
 Fld_3
  Prm_Last Section ID  [SLAST]
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
 Fld_4
  Prm_Increment in ID  [SINC]
  Typ_INT
 Fld_5
  Prm_Beam and Shell Listing Options
  Typ_LIS_OPTIONB
  Lis_Brief List      ,BRIEF
  Lis_Full List       ,FULL
  Lis_Grouped List    ,GROUP
  Def_1
 Fld_6
  Prm_Section Types
  Typ_LIS_OPTIONB
  Lis_All             ,ALL
  Lis_Beam only       ,BEAM
  Lis_Shell only      ,SHEL
  Lis_Taper only      ,TAPE
  Lis_Pretension only ,PRET
  Lis_Joint only      ,JOIN
  Lis_Reinforcing only,REIN
  Lis_Pipe only       ,PIPE
  Lis_Axisymm. only   ,AXIS
  Lis_Contact only    ,CONT
  Lis_Gen. Beam only  ,GENB
  Lis_Gen. Shell only ,GENS
  Lis_Comp. Beam only ,COMB
  Lis_Contact only    ,CONT
  Def_ALL
:E END
:! 
:N Fnc_SLOAD
:S    228,   128,    93
:T Cmd
:C )! Fnc_SLOAD
:A    Pretnsn Sectn
:H Hlp_C_SLOAD
:K #(PREP7*SOLUTION)
:K STRUCTRL
Inp_P
! Cust_Cmd_SLOAD
Cmd_)~eui,'::euidl::load::structural::pretensionSectionLoads::create'
:E End
:! 
:N Fnc_SLREAD
:S    628,   162,   459
:T Cmd
:C )! Fnc_SLREAD
:A SLEOUT file
:D Read data from the SLEOUT file 
:K (LSDYNA*FULL_ANS)
:K #(POST26)
:H Hlp_C_EDREAD
Cmd_EDREAD
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab
   Prm_[EDREAD] Read SLEOUT file data into variables for postprocessing
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Variable ref no.
   Typ_INT
   Def_2
 Fld_3
   Typ_Char
   Typ_Def_SLEOUT
 Fld_4
   Prm_Read data for contact number...
   Typ_Int
 Fld_5
   Prm_From load step
   Typ_Int
 Fld_6
   Prm_To load step
   Typ_Int
 Fld_0
  Typ_Lab
  Prm_                       - The default is for all load steps
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_SMALL
:S    697,   150,   540
:T Command
:C )! Fnc_SMALL
:A Find Minimum
:D Find Minimum of Time-History Variables
:K #(POST26)
:H Hlp_C_SMALL
Cmd_SMALL
Fld_0
Typ_Lab
Prm_[SMALL]   IR = Smallest of (FACTA * IA) , (FACTB * IB) , (FACTC * IC)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  1st Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     1st Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_10
Prm_FACTB  2nd Factor
Typ_real
Def_1.0
Fld_4
Prm_IB     2nd Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_11
Prm_FACTC  3rd Factor
Typ_real
Def_1.0
Fld_5
Prm_IC     3rd Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_SMAX
:S    649,   182,   460
:T Command
:C )! Fnc_SMAX
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Find Maximum
:D Find Maximum of Element Table Items
:H Hlp_C_SMAX
:K #(POST1+RESULTS)
Cmd_SMAX
 Fld_0
  Typ_Lab
  Prm_[SMAX]     LabR = maximum of (FACT1 * Lab1) and (FACT2 * Lab2)
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_  
 Fld_5
  Prm_FACT1  1st Factor
  Typ_REAL
  Def_1
 Fld_3
  Prm_Lab1   1st Element table item
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
Fld_0
Prm_  
 Fld_6
  Prm_FACT2  2nd Factor
  Typ_REAL
  Def_1
 Fld_4
  Prm_Lab2   2nd Element table item
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
:E END
:! 
:N Fnc_SMIN
:S    649,   182,   460
:T Command
:C )! Fnc_SMIN
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Find Minimum
:D Find Minimum of Element Table Items
:H Hlp_C_SMIN
:K #(POST1+RESULTS)
Cmd_SMIN
 Fld_0
  Typ_Lab
  Prm_[SMIN]     LabR = minimum of (FACT1 * Lab1) and (FACT2 * Lab2)
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_  
 Fld_5
  Prm_FACT1  1st Factor
  Typ_REAL
  Def_1
 Fld_3
  Prm_Lab1   1st Element table item
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
Fld_0
Prm_  
 Fld_6
  Prm_FACT2  2nd Factor
  Typ_REAL
  Def_1
 Fld_4
  Prm_Lab2   2nd Element table item
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
:E END
:! 
:N Fnc_SMOOTH_data
:S    131,    95,    29
:T Cmd
:A    Smooth Data
:K (SOLUTION*PREP7*POST26)
Inp_P
Cmd_)!
Cal_Fnc_EDNDTSD
:E END
:! 
:N Fnc_SMULT
:S    691,   174,   498
:T Command
:C )! Fnc_SMULT
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Multiply
:D Multiply Element Table Items
:H Hlp_C_SMULT
:K #(POST1+RESULTS)
Cmd_SMULT
 Fld_0
  Typ_Lab
  Prm_[SMULT]          LabR = (FACT1 * Lab1) * (FACT2 * Lab2)
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_  
 Fld_5
  Prm_FACT1  1st Factor
  Typ_REAL
  Def_1
 Fld_3
  Prm_Lab1   1st Element table item
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
Fld_0
Prm_  
 Fld_6
  Prm_FACT2  2nd Factor
  Typ_REAL
  Def_1
 Fld_4
  Prm_Lab2   2nd Element table item
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
  LIS_- none -                        ,"  "
:E End_OF_Fnc_SADD
:! 
:N Fnc_SOLCONTROL
:S    797,   370,   420
:T Command
:C )! Fnc_SOLCONTROL
:C )/NOPR
:C )*GET,_z11,common,,soptcm,,int,107
:C )_z12=_z11+2
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,3
:C )*SET,_zc(1),'INCP','    ','NOPL'
:C )/GO
:A Solution Ctrl
:D Nonlinear Solution Control
:K (lsdyna)
:K #(pr_cfd+cfd+magnetic*STRUCTRL*THERMAL*MULTIFLD) 
:P (FULL_ANS*THERMAL)
:H Hlp_C_SOLCONTROL
Inp_NoApply
Cmd_)/NOPR
Cmd_)SOLC
 Fld_2
  Prm_[SOLCONTROL] Solution Control
  Typ_LOGI,Off,On
  Def_*GET(common,,anscom,,int,52)
 Fld_4
  Prm_Pressure load stiffness
  Typ_Lis_OptionB
  Lis_Program Chosen  ,'    '
  Lis_Do not include  ,NOPL
  Lis_Include         ,INCP
  Def_*PAR(_zc(_z12))
Cmd_)*GET,_z1,common,,anscom,,int,52
Cmd_)KEYW,NLCNTRL,_z1
Cmd_)/GO
Cal_Fnc_SOLCONTROL_1,2,EQ,1,2
Cal_Fnc_SOLCONTROL_0,2,EQ,0,2
:E END
:! 
:N Fnc_SOLCONTROL_0
:S    419,   314,    98
:T Command
:C )! Fnc_SOLCONTROL_0
:C )/NOPR
:C )*GET,_z11,common,,soptcm,,int,107
:C )_z12=_z11+2
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,3
:C )*SET,_zc(1),'INCP','    ','NOPL'
:C )/GO
:A Nonlinear Solution Control
:D Nonlinear Solution Control
:P (FULL_ANS)
:H Hlp_C_SOLCONTROL
Inp_P
Cmd_SOLCONTROL,OFF
 Fld_3
  Typ_Def_*PAR(_zc(_z12))
Cmd_)/NOPR
Cmd_)KEYW,NLCNTRL,0
Cmd_)/GO
:E END
:! 
:N Fnc_SOLCONTROL_1
:S    566,   322,   237
:T Command
:C )! Fnc_SOLCONTROL_1
:C )/NOPR
:C )*GET,_z11,common,,soptcm,,int,107
:C )_z12=_z11+2
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,3
:C )*SET,_zc(1),'INCP','    ','NOPL'
:C )/GO
:A Nonlinear Solution Control
:D Nonlinear Solution Control
:P (FULL_ANS*THERMAL)
:H Hlp_C_SOLCONTROL
Inp_NoApply
Cmd_SOLCONTROL,ON
 Fld_0
  Typ_Lab
  Prm_Time prediction based
 Fld_2
  Prm_    on contact status
  Typ_LOGI,Off,On
  Def_*GET(common,,stepcm,,int,133)
 Fld_3
  Typ_Def_*PAR(_zc(_z12))
Cmd_)/NOPR
Cmd_)KEYW,NLCNTRL,1
Cmd_)/GO
:E END
:! 
:N Fnc_SOLC_VolChk
:S    594,   341,   246
:T Command
:C )! Fnc_SOLC_VolChk
:C )/NOPR
:C )*GET,_z11,common,,soptcm,,int,107
:C )_z12=_z11+2
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,3
:C )*SET,_zc(1),'INCP','    ','NOPL'
:C )/GO
:A Mixed U-P Toler
:D Volumetric Compatibility Check
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SOLCONTROL
Inp_NoApply
Cmd_SOLCONTROL
 Fld_2
  Typ_Def_*GET(common,,anscom,,int,52)
 Fld_3
  Typ_Def_*GET(common,,stepcm,,int,133)
 Fld_4
  Typ_Def_*PAR(_zc(_z12))
 Fld_5
  Prm_[SOLCONTROL] Mixed U-P Tolerance
  Typ_REAL
  Def_*GET(common,,soptcm,,real,42)
:E END
:! 
:N Fnc_SOLU
:S   2711,   174,  2530
:T Command
:C )! Fnc_SOLU
:A Solution Summary
:D Define Solution Summary Variable
:K #(POST26)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_SOLU
Inp_NoApply
Cmd_SOLU
Fld_0
  Typ_LAB
  Prm_[SOLU]  Define Solution Summary Variable
Fld_2
  Prm_NVAR  Ref number of variable
  Typ_INT
  Def_*PAR(_z1)
Fld_5
  Prm_Name  User-specified label
  Typ_CHAR
  Def_*GET(common,,cpst26,,char,_z1)
Fld_3
  Prm_Item  Data Item 
  Typ_IDX
P_LN(LINPLUS*THERMAL*ELECMAG)
  IDX_Solution items  ,Time step   DTIM,DTIME
P_LN(LINPLUS*THERMAL*ELECMAG)
  IDX_Solution items  ,Equil iters EQIT,EQIT
P_LN(LINPLUS*THERMAL*ELECMAG)
  IDX_Solution items  ,Cum iters   NCMI,NCMIT
P_LN(LINPLUS*THERMAL*ELECMAG)
  IDX_Solution items  ,Cum lsteps  NCML,NCMLS
P_LN(LINPLUS*THERMAL*ELECMAG)
  IDX_Solution items  ,Cum substps NCMS,NCMSS
P_LN(LINPLUS*THERMAL*ELECMAG)
  IDX_Solution items  ,Convrg stat CNVG,CNVG
P_LN(LINPLUS*THERMAL*ELECMAG)
  IDX_Solution items  ,Max DOF val MXDV,MXDVL
P_LN(LINPLUS)
  IDX_Solution items  ,Descent par DSPR,DSPRM
P_LN(FULL_ANS)
  IDX_Solution items  ,MaxCreepRat CRPR,CRPRAT
P_LN(FULL_ANS)
  IDX_Solution items  ,MaxPlStrain PSIN,PSINC
P_LN(LINPLUS*THERMAL*ELECMAG)
  IDX_Solution items  ,Resp eig 1  RESE,RESEIG
P_LN(LINPLUS)
  IDX_Solution items  ,Resp freq 2 RESF,RESFRQ
P_LN(LINPLUS)
  IDX_Convergence vals,Force       FOCV,FOCV
P_LN(LINPLUS)
  IDX_Convergence vals,Moment      MOCV,MOCV
P_LN(LINPLUS)
  IDX_Convergence vals,DisplacementDICV,DICV
P_LN(LINPLUS)
  IDX_Convergence vals,Rotation    ROCV,ROCV
P_LN(THERMAL)
  IDX_Convergence vals,HeatFlowRat HFCV,HFCV
P_LN(THERMAL)
  IDX_Convergence vals,Temperature TECV,TECV
P_LN(ELECMAG)
  IDX_Convergence vals,Mag flux    MFCV,MFCV
P_LN(ELECMAG)
  IDX_Convergence vals,Mag ScalPot SMCV,SMCV
P_LN(ELECMAG)
  IDX_Convergence vals,Current seg CSCV,CSCV
P_LN(ELECMAG)
  IDX_Convergence vals,Mag VectPot VMCV,VMCV
P_LN(ELECMAG)
  IDX_Convergence vals,Elect curr  CUCV,CUCV
P_LN(ELECMAG)
  IDX_Convergence vals,Voltage     VOCV,VOCV
P_LN(FULL_ANS)
  IDX_Convergence vals,FluidFlowRatFFCV,FFCV
P_LN(FULL_ANS)
  IDX_Convergence vals,Pressure    PRCV,PRCV
P_LN(FULL_ANS)
  IDX_Convergence vals,Velocity    VECV,VECV
P_LN(FULL_ANS)
  IDX_Unconverged elem,CONTAC48s   NC48,NC48
P_LN(FULL_ANS)
  IDX_Unconverged elem,CONTAC49s   NC49,NC49
P_LN(FULL_ANS)
  IDX_Arc length items,TotLoadFact ALLF,ALLF
P_LN(FULL_ANS)
  IDX_Arc length items,Ld fact inc ALDL,ALDLF
P_LN(FULL_ANS)
  IDX_Arc length items,Norm radius ARCL,ARCL
  Def_*GET(common,,cpst26,,chr4,_z1+420)
Cmd_)/NOPR
Cmd_)_z1=0
Cmd_)*DO,_z1,1,200
Cmd_)/NOPR
Cmd_)*GET,_z2,common,,cpst26,,int,(612+_z1)
Cmd_)*IF,_z2,EQ,0,EXIT
Cmd_)*ENDDO
Cmd_)DEFINE
Cmd_)STAT,,,, ,,,,1
Cmd_)/GO
:E END
:! 
:N Fnc_SOLVE
:S    219,   124,    88
:T Cmd_N
:C )! Fnc_SOLVE
:A    Current LS
:K #(SOLUTION)
:P (pp*LSDYNA)
:H Hlp_C_SOLVE
Inp_P
! Exclude_from_paths
K_LN(cfd)
Cmd_/STATUS,SOLU
K_LN(CFD)
Cmd_STAT
Cal_Fnc_SOLVE2
:E END
:! 
:N Fnc_SOLVE2
:S    192,   108,    77
:T Command
:C )! Fnc_SOLVE2
:D Solve Current Load Step
:H Hlp_C_SOLVE
Inp_P
Cmd_)~eui,'euidl::solution::solveCurrentLoadStepInit'
! Cust_Cmd_SOLVE
:E END
:! 
:N Fnc_SOLVEDYN
:S    181,   115,    59
:T Cmd_N
:C )! Fnc_SOLVEDYN
:A Solve
:K #(SOLUTION)
:P (pp)
:H Hlp_C_SOLVE
Inp_P
! Exclude_from_paths
Cmd_/STATUS,SOLU
Cal_Fnc_SOLVE2
:E END
:! 
:N Fnc_SOLVE_PERT
:S    190,   119,    64
:T Cmd_N
:C )! Fnc_SOLVE_PERT
:A    Perturb LS
:K #(SOLUTION)
:H Hlp_C_SOLVE
Inp_P
! Exclude_from_paths
Cmd_/STATUS,SOLU
Cal_Fnc_SOLVE_PERT2
:E END
:! 
:N Fnc_SOLVE_PERT2
:S    460,   121,   332
:T Cmd_N
:C )! Fnc_SOLVE_PERT2
:A    Perturb LS
:K #(SOLUTION)
:H Hlp_C_SOLVE
Inp_NoApply
! Exclude_from_paths
Cmd_SOLVE
Fld_0
Typ_Lab
Prm_[SOLVE] Begin Linear Perturbation Solution 
Fld_0
Typ_Lab
Prm_
Fld_0
Typ_Lab
Prm_Review the summary information in the lister window (entitled
Fld_0
Typ_Lab
Prm_"/STATUS command"), then press OK to start the solution.
Cmd_)/NOPR
Cmd_)KEYW,PERTBSLV,0
Cmd_)/GO
Cal_REFRESH
:E END
:! 
:N Fnc_SPCNOD
:S    559,   165,   387
:T Command
:C )! Fnc_SPCNOD
:A       Space Node
:D Radiosity method space node
:K ((RADSURF+THERMAL)*NOFILTER)
:H Hlp_C_SPCNOD
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_[SPCNOD]    Enclosure Space node
 Fld_2
  Prm_ENCL   Enclosure Node option
  Typ_LIS_OptionB
   LIS_Define,0
   LIS_List all ,1
   LIS_Delete all,2
Cmd_)*SET,_z2
 Fld_2
  Prm_If "Define"- enter Encl. number
  Typ_INT
  Def_1
Cmd_)*SET,_z3
 Fld_0
  Typ_Sep
 Fld_2
  Prm_NODE   Space Node number 
  Typ_Int
  Def_1
Cmd_)/GO
Cal_Fnc_SPCNOD_1
:E END
:! 
:N Fnc_SPCNOD_1
:S    370,   215,   148
:T Command
:C )! Fnc_SPCNOD_1
:C )/NOPR
:C )keyw,kennum,0
:C )*del,_zc
:C )*dim,_zc,char,2
:C )_zc(1)='STAT','DELE'
:C )*if,_z1,eq,0,then
:C )keyw,kennum,1
:C )*endif
:C )/GO
Inp_P
Cmd_SPCNOD
 Fld_2
  K_FL(KENNUM)
  Typ_Def_*PAR(_z2)
 Fld_2
  K_FL(kennum)
  Typ_Def_*PAR(_zc(_z1))
 Fld_3
  K_FL(KENNUM)
  Typ_Def_*PAR(_z3)
:E END
:! 
:N Fnc_SPCREAD
:S    295,   122,   166
:T Cmd_P
:C )! Fnc_SPCREAD
:A SPCFORC file
:D Choose node for data
:H Hlp_C_EDREAD
Inp_P
Cmd_)/NOPR
Cmd_)*DEL,_z
Cmd_)*DIM,_z,,6
Cmd_)*SET,_z(1)
Fld_2
Prm_[EDREAD] Read data from the SPCFORC file 
Typ_NODE
Min_1
Cnt_1
PFM_2
!
Cmd_)/GO
Cal_Fnc_NODE2
:E END
:! 
:N Fnc_SPCTEMP
:S    591,   171,   413
:T Command
:C )! Fnc_SPCTEMP
:A       Space Temp
:D Free-space ambient temperature
:K ((RADSURF+THERMAL)*NOFILTER)
:H Hlp_C_SPCTEMP
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_[SPCTEMP] Free-space enclosure ambient temperature
 Fld_2
  Prm_ENCL   Enclosure Temp. option
  Typ_LIS_OptionB
   LIS_Define,0
   LIS_List all ,1
   LIS_Delete all,2
Cmd_)*SET,_z2
 Fld_2
  Prm_If "Define"- enter Encl. number 
  Typ_INT
  Def_1
Cmd_)*SET,_z3
 Fld_0
  Typ_Sep
 Fld_2
  Prm_TEMP   Free-space temperature
  Typ_REAL
  Def_0
Cmd_)/GO
Cal_Fnc_SPCTEMP_1
:E END
:! 
:N Fnc_SPCTEMP_1
:S    444,   288,   149
:T Command
:C )! Fnc_SPCTEMP_1
:C )/NOPR
:C )*del,_zc
:C )*dim,_zc,char,2
:C )_zc(1)='STAT','DELE'
:C )keyw,kennum,0
:C )*if,_z1,eq,0,then
:C )keyw,kennum,1
:C )*endif
:C )*get,_z4,parm,_z2,type
:C )*if,_z4,eq,-1,then
:C )_z2=1
:C )*endif
:C )/GO
Inp_P
Cmd_SPCTEMP
 Fld_2
  K_FL(KENNUM)
  Typ_Def_*PAR(_z2)
 Fld_2
  K_FL(kennum)
  Typ_Def_*PAR(_zc(_z1))
 Fld_3
  K_FL(KENNUM)
  Typ_Def_*PAR(_z3)
:E END
:! 
:N Fnc_SPFREQ
:S   3103,   184,  2912
:T Command
:P (FULL_ANS)
:C )! Fnc_SPFREQ
:C )/nopr
:C )*del,_z
:C )*dim,_z,,100
:C )/go
:A    Freq points
:D Frequency Table
:H Hlp_UI_psdvalmul
Inp_NoApply
Cmd_)/NOPR
 Fld_0
  Typ_Lab
  Prm_[SPFREQ]  Frequency points
Cmd_)*CSET,101,101
 Fld_2
  Prm_    Table number to be defined
  Typ_INT
  Def_1
 Fld_0
  Typ_Lab
  Prm_    Enter up to 50 values of     Frequency
Cmd_)*CSET,1,4
 Fld_2
  Prm_                   FREQ1
  Typ_real
 Fld_3
  Prm_                   FREQ2
  Typ_real
 Fld_4
  Prm_                   FREQ3
  Typ_real
 Fld_5
  Prm_                   FREQ4
  Typ_real
Cmd_)*CSET,5,8
 Fld_2
  Prm_                   FREQ5
  Typ_real
 Fld_3
  Prm_                   FREQ6
  Typ_real
 Fld_4
  Prm_                   FREQ7
  Typ_real
 Fld_5
  Prm_                   FREQ8
  Typ_real
Cmd_)*CSET,9,12
 Fld_2
  Prm_                   FREQ9
  Typ_real
 Fld_3
  Prm_                  FREQ10
  Typ_real
 Fld_4
  Prm_                  FREQ11
  Typ_real
 Fld_5
  Prm_                  FREQ12
  Typ_real
Cmd_)*CSET,13,16
 Fld_2
  Prm_                  FREQ13
  Typ_real
 Fld_3
  Prm_                  FREQ14
  Typ_real
 Fld_4
  Prm_                  FREQ15
  Typ_real
 Fld_5
  Prm_                  FREQ16
  Typ_real
Cmd_)*CSET,17,20
 Fld_2
  Prm_                  FREQ17
  Typ_real
 Fld_3
  Prm_                  FREQ18
  Typ_real
 Fld_4
  Prm_                  FREQ19
  Typ_real
 Fld_5
  Prm_                  FREQ20
  Typ_real
Cmd_)*CSET,21,24
 Fld_2
  Prm_                  FREQ21
  Typ_real
 Fld_3
  Prm_                  FREQ22
  Typ_real
 Fld_4
  Prm_                  FREQ23
  Typ_real
 Fld_5
  Prm_                  FREQ24
  Typ_real
Cmd_)*CSET,25,28
 Fld_2
  Prm_                  FREQ25
  Typ_real
 Fld_3
  Prm_                  FREQ26
  Typ_real
 Fld_4
  Prm_                  FREQ27
  Typ_real
 Fld_5
  Prm_                  FREQ28
  Typ_real
Cmd_)*CSET,29,32
 Fld_2
  Prm_                  FREQ29
  Typ_real
 Fld_3
  Prm_                  FREQ30
  Typ_real
 Fld_4
  Prm_                  FREQ31
  Typ_real
 Fld_5
  Prm_                  FREQ32
  Typ_real
Cmd_)*CSET,33,36
 Fld_2
  Prm_                  FREQ33
  Typ_real
 Fld_3
  Prm_                  FREQ34
  Typ_real
 Fld_4
  Prm_                  FREQ35
  Typ_real
 Fld_5
  Prm_                  FREQ36
  Typ_real
Cmd_)*CSET,37,40
 Fld_2
  Prm_                  FREQ37
  Typ_real
 Fld_3
  Prm_                  FREQ38
  Typ_real
 Fld_4
  Prm_                  FREQ39
  Typ_real
 Fld_5
  Prm_                  FREQ40
  Typ_real
Cmd_)*CSET,41,44
 Fld_2
  Prm_                  FREQ41
  Typ_real
 Fld_3
  Prm_                  FREQ42
  Typ_real
 Fld_4
  Prm_                  FREQ43
  Typ_real
 Fld_5
  Prm_                  FREQ44
  Typ_real
Cmd_)*CSET,45,48
 Fld_2
  Prm_                  FREQ45
  Typ_real
 Fld_3
  Prm_                  FREQ46
  Typ_real
 Fld_4
  Prm_                  FREQ47
  Typ_real
 Fld_5
  Prm_                  FREQ48
  Typ_real
Cmd_)*CSET,49,50
 Fld_2
  Prm_                  FREQ49
  Typ_real
 Fld_3
  Prm_                  FREQ50
  Typ_real
Cmd_)/GO
Cal_Fnc_SPFREQ_2
:E END
:! 
:N Fnc_SPFREQ_2
:S    223,   186,    30
:T Command
:P (FULL_ANS)
:C )! Fnc_SPFREQ_2
:C )/nopr
:C )_z1=0
:C )*do,_z1,1,50,1
:C )*GET,_z9,CPAR,_z1
:C )*if,_z9,eq,0,exit
:C )*enddo
:C )/go
Inp_P
Cmd_)!
Cal_Fnc_SPFREQ_3
:E END
:! 
:N Fnc_SPFREQ_3
:S   2577,   722,  1848
:T Command
:P (FULL_ANS)
:C )! Fnc_SPFREQ_3
:C )/nopr
:C )keyw,key1,1
:C )keyw,key2,0
:C )keyw,key3,0
:C )keyw,key4,0
:C )keyw,key5,0
:C )keyw,key6,0
:C )keyw,key7,0
:C )keyw,key8,0
:C )keyw,key9,0
:C )keyw,key10,0
:C )*if,_z1,gt,5,then
:C ) keyw,key2,1
:C )*endif
:C )*if,_z1,gt,10,then
:C ) keyw,key3,1
:C )*endif
:C )*if,_z1,gt,15,then
:C ) keyw,key4,1
:C )*endif
:C )*if,_z1,gt,20,then
:C ) keyw,key5,1
:C )*endif
:C )*if,_z1,gt,25,then
:C ) keyw,key6,1
:C )*endif
:C )*if,_z1,gt,30,then
:C ) keyw,key7,1
:C )*endif
:C )*if,_z1,gt,35,then
:C ) keyw,key8,1
:C )*endif
:C )*if,_z1,gt,40,then
:C ) keyw,key9,1
:C )*endif
:C )*if,_z1,gt,45,then
:C ) keyw,key10,1
:C )*endif
:C )/go
Inp_P
Cmd_SPFREQ
K_CM(KEY1)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*CPAR(2)
 Fld_5
  Typ_Def_*CPAR(3)
 Fld_6
  Typ_Def_*CPAR(4)
 Fld_7
  Typ_Def_*CPAR(5)
Cmd_SPFREQ
K_CM(KEY2)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(6)
 Fld_4
  Typ_Def_*CPAR(7)
 Fld_5
  Typ_Def_*CPAR(8)
 Fld_6
  Typ_Def_*CPAR(9)
 Fld_7
  Typ_Def_*CPAR(10)
Cmd_SPFREQ
K_CM(KEY3)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(11)
 Fld_4
  Typ_Def_*CPAR(12)
 Fld_5
  Typ_Def_*CPAR(13)
 Fld_6
  Typ_Def_*CPAR(14)
 Fld_7
  Typ_Def_*CPAR(15)
Cmd_SPFREQ
K_CM(KEY4)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(16)
 Fld_4
  Typ_Def_*CPAR(17)
 Fld_5
  Typ_Def_*CPAR(18)
 Fld_6
  Typ_Def_*CPAR(19)
 Fld_7
  Typ_Def_*CPAR(20)
Cmd_SPFREQ
K_CM(KEY5)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(21)
 Fld_4
  Typ_Def_*CPAR(22)
 Fld_5
  Typ_Def_*CPAR(23)
 Fld_6
  Typ_Def_*CPAR(24)
 Fld_7
  Typ_Def_*CPAR(25)
Cmd_SPFREQ
K_CM(KEY6)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(26)
 Fld_4
  Typ_Def_*CPAR(27)
 Fld_5
  Typ_Def_*CPAR(28)
 Fld_6
  Typ_Def_*CPAR(29)
 Fld_7
  Typ_Def_*CPAR(30)
Cmd_SPFREQ
K_CM(KEY7)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(31)
 Fld_4
  Typ_Def_*CPAR(32)
 Fld_5
  Typ_Def_*CPAR(33)
 Fld_6
  Typ_Def_*CPAR(34)
 Fld_7
  Typ_Def_*CPAR(35)
Cmd_SPFREQ
K_CM(KEY8)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(36)
 Fld_4
  Typ_Def_*CPAR(37)
 Fld_5
  Typ_Def_*CPAR(38)
 Fld_6
  Typ_Def_*CPAR(39)
 Fld_7
  Typ_Def_*CPAR(40)
Cmd_SPFREQ
K_CM(KEY9)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(41)
 Fld_4
  Typ_Def_*CPAR(42)
 Fld_5
  Typ_Def_*CPAR(43)
 Fld_6
  Typ_Def_*CPAR(44)
 Fld_7
  Typ_Def_*CPAR(45)
Cmd_SPFREQ
K_CM(KEY10)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(46)
 Fld_4
  Typ_Def_*CPAR(47)
 Fld_5
  Typ_Def_*CPAR(48)
 Fld_6
  Typ_Def_*CPAR(49)
 Fld_7
  Typ_Def_*CPAR(50)
:E END
:! 
:N Fnc_SPFRQ_eras
:S    427,   168,   252
:T Command
:C )! Fnc_SPFRQ_eras
:A    Erase Tables
:D Erase Multi-Point Spectral Tables
:K #(MULTIPNT*NOFILTER)
:P (FULL_ANS)
Cmd_)/nopr
Cmd_)*set,_z1
 Fld_2
  Prm_[SPFREQ]  Erase spectral tables
  Typ_LIS_RADIOB
  LIS_All tables      ,1
  LIS_Table number N  ,2
  Def_2
Cmd_)*CSET,1,1
 Fld_2
  Prm_                 Table number N
  Typ_INT
  Def_0
Cmd_)/go
Cal_Fnc_SPFRQ_eras2
:E END
:! 
:N Fnc_SPFRQ_eras2
:S    222,   159,    56
:T Command
:C )! Fnc_SPFRQ_eras2
:C )/nopr
:C )KEYW,KEY1,0
:C )*if,_z1,eq,1,then
:C )KEYW,KEY1,1
:C )*endif
:C )/go
Inp_P
Cmd_SPFREQ
 Fld_2
  K_FL(key1)
  Typ_Def_*CPAR(1)
:E END
:! 
:N Fnc_SPGRAPH
:S    474,   187,   280
:T Command
:C )! Fnc_SPGRAPH
:A    Graph MPRS Tables
:D Graph MPRS Tables
:K #((PREP7*SOLUTION)+(MULTIPNT*NOFILTER))
:P (FULL_ANS)
:H Hlp_C_SPGRAPH
Cmd_)SPGRAPH
 Fld_0
  Typ_Lab
  Prm_[SPGRAPH]  Graph Frequencies vs MPRS Values
 Fld_0
  Typ_Lab
  Prm_Identify the MPRS table
 Fld_2
  Prm_    MPRS table number
  Typ_INT
  Def_1
 Fld_3
  Prm_    Curve number
  Typ_INT
 Fld_4
  Prm_    Beginning of curve range
  Typ_INT
  Def_1
:E END
:! 
:N Fnc_SPH4
:S    328,   129,   192
:T Cmd_P
:C )! Fnc_SPH4
:A Solid Sphere
:D Solid Sphere
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_SPH4
Inp_P
Cmd_SPH4
 Fld_0
  Typ_XYZ_WP
  Prm_[SPH4]  Pick 2 WP locations -- center and radius
  Min_2
  Max_2
  Rub_3
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
:E End
:! 
:N Fnc_SPH4_hollow
:S    387,   145,   235
:T Cmd_P
:C )! Fnc_SPH4_hollow
:A Hollow Sphere
:D Hollow Sphere
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_SPH4
Inp_P
Cmd_SPH4
 Fld_0
  Typ_XYZ_WP
  Prm_[SPH4]  Pick 3 WP locations -- center, inner radius, outer radius
  Min_3
  Max_3
  Rub_4
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
:E End
:! 
:N Fnc_SPH4_iges
:S    341,   142,   192
:T Cmd_P
:C )! Fnc_SPH4_iges
:A    Solid Sphere
:D Solid Sphere
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_SPH4
Inp_P
Cmd_SPH4
 Fld_0
  Typ_XYZ_WP
  Prm_[SPH4]  Pick 2 WP locations -- center and radius
  Min_2
  Max_2
  Rub_3
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
:E End
:! 
:N Fnc_SPH5
:S    374,   138,   229
:T Cmd_P
:C )! Fnc_SPH5
:A By End Points
:D Sphere by End Points
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_SPH5
Inp_P
Cmd_SPH5
 Fld_0
  Typ_XYZ_WP
  Prm_[SPH5]  Pick 2 WP locations -- the end points on a diameter
  Min_2
  Max_2
  Rub_7
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
:E End
:! 
:N Fnc_SPHERE
:S    485,   153,   325
:T Command
:C )! Fnc_SPHERE
:A By Dimensions
:D Create Sphere by Dimensions
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_SPHERE
Cmd_SPHERE
 Fld_0
  Typ_Lab
  Prm_[SPHERE]  Create Sphere by Dimensions
 Fld_2
  Typ_Real
  Prm_RAD1    Outer radius
  Def_Blank
 Fld_3
  Typ_Real
  Prm_RAD2    Optional inner radius
  Def_Blank
 Fld_4
  Typ_Real
  Prm_THETA1  Starting angle (degrees)
  Def_0
 Fld_5
  Typ_Real
  Prm_THETA2  Ending angle (degrees)
  Def_360
:E End
:! 
:N Fnc_SPLINE
:S    256,   132,   117
:T Cmd_P
:C )! Fnc_SPLINE
:A Segmented Spline
:D Segmented Spline
:K #(PREP7)
:H Hlp_C_SPLINE
Inp_P
Cmd_SPLINE
 Fld_2
Prm_[SPLINE]  Pick or enter keypoints defining the spline
  Typ_KEYP
  Min_2
  Cnt_s
  Pdp_1
:E END
:! 
:N Fnc_SPLINE_end
:S    323,   136,   180
:T Cmd_P
:C )! Fnc_SPLINE
:A Segmented Spline
:D Segmented Spline
:K #(PREP7)
:H Hlp_C_SPLINE
Cmd_SPLINE
 Fld_2
Prm_[SPLINE]  Generate a Spline
  Typ_Def_P51X
 Fld_8
  Prm_Start tangent        XV1,YV1,ZV1
  Typ_Int3
 Fld_11
  Prm_Ending tangent       XV6,YV6,ZV6
  Typ_Int3
:E END
:! 
:N Fnc_SPLINE_op
:S    274,   135,   132
:T Cmd_P
:C )! Fnc_SPLINE
:A Segmented Spline
:D Segmented Spline
:K #(PREP7)
:H Hlp_C_SPLINE
Inp_P
Cmd_)!
 Fld_2
Prm_[SPLINE]  Pick or enter keypoints defining the spline
  Typ_KEYP
  Min_2
  Cnt_s
  Pdp_1
Cal_Fnc_SPLINE_end
:E END
:! 
:N Fnc_SPOINT_node
:S    288,   162,   119
:T Cmd_P
:C )! Fnc_SPOINT_node
:A    At Node
:D Moment Sum Pt at Node
:K #(POST1+RESULTS)
:P (LINPLUS)
:H Hlp_C_SPOINT
Inp_P
Cmd_SPOINT
 Fld_2
  Prm_[SPOINT]  Pick or enter the node for moment summation
  Typ_NODE
  Min_1
  Cnt_1
  Pfm_2
:E END
:! 
:N Fnc_SPOINT_xyz
:S    303,   163,   133
:T Cmd_P
:C )! Fnc_SPOINT_xyz
:A    At XYZ Loc
:D Mom Sum Pt at XYZ Loc
:K #(POST1+RESULTS)
:P (LINPLUS)
:H Hlp_C_SPOINT
Inp_P
Cmd_SPOINT
 Fld_3
  Prm_[SPOINT]  Pick WP location or enter coordinates for moment summation
  Typ_XYZ
  Min_1
  Cnt_1
  Pfm_2
:E END
:! 
:N Fnc_SPUNIT
:S   1551,   614,   930
:T Command
:C )! Fnc_SPUNIT
:C )/NOPR
:C )*GET,_z1,common,,rancom,,int,1  ! type of repsonse spect
:C )*GET,_z2,common,,soptcm,,int,43 ! mode comb method
:C )*DEL,_zc
:C )*DIM,_zc,char,12
:C )*SET,_zc(1),'DISP','VELO','ACEL','ACCG','PRES','FORC'
:C )*SET,_zc(7),'CQC','GRP','DSUM','SRSS','DDAM',' '
:C )*GET,_z11,common,,soptcm,,real,3 ! z1 to z3 excittion dir
:C )*GET,_z12,common,,soptcm,,real,4
:C )*GET,_z13,common,,soptcm,,real,5
:C )/GO
:A    Settings
:D Settings for Multi-Point Response Spectrum
:K #((PREP7*SOLUTION)+(MULTIPNT*NOFILTER))
:P (LINPLUS)
:H Hlp_C_SPUNIT
Inp_NoApply
Cmd_SPUNIT
P_CM(FULL_ANS)
 Fld_0
  Typ_Lab
  Prm_      Settings for Multi-Point Response Spectrum
Fld_0
Typ_SEP
 Fld_3
  Prm_[SPUNIT]  Type of response spct
  Typ_LIS_OPTIONB
  LIS_Acceleration    ,ACEL
  LIS_Accel (g**2/Hz) ,ACCG
  LIS_Velocity        ,VELO
  LIS_Displacement    ,DISP
  LIS_Force spectrum  ,FORC
  LIS_Pressure spct   ,PRES
  Def_*PAR(_zc(_z1))
 Fld_2
  Prm_           Table number
  Typ_INT
  Def_1
Fld_4
 Prm_            GVALUE
 Typ_Real
 Def_386.4
Fld_0
 Typ_Lab
 Prm_                - valid only for Accel (g**2/Hz)
Fld_5
 Prm_Interpolation method
  Typ_LIS_OPTIONB
  LIS_Log-log         ,0
  LIS_Linear          ,1
  Def_0
!
Cmd_SED
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[SED] Excitation direction in global Cartesian
 Fld_2
  Prm_SEDX, SEDY, SEDZ
  Typ_REAL3
  Def_*PAR(_z11),*PAR(_z12),*PAR(_z13)
 Fld_5
  Prm_Component name of excited nodes
  Typ_Lis_OptionB
  LIS_None,,
  LIS_*READ,NDCM
:E END
:! 
:N Fnc_SPVAL
:S    601,   203,   391
:T Command
:C )! Fnc_SPVAL
:A    Spect vs Freq
:D Table Number for Spectrum vs Frequency
:K #((PREP7*SOLUTION)+(MULTIPNT*NOFILTER))
:P (FULL_ANS)
:H Hlp_UI_psdvalmul
Inp_NoApply
Cmd_)/nopr
 Fld_0
  Typ_Lab
  Prm_[SPVAL]  Spectrum vs Frequency Table
Cmd_)*CSET,101,102
 Fld_2
  Prm_    Table number to be defined
  Typ_INT
  Def_1
 Fld_3
  Prm_    Curve number to be defined
  Typ_INT
  Def_1
 Fld_)
  Typ_Sep
Cmd_)*SET,_spdamp
 Fld_0
  Typ_Lab
  Prm_[SPDAMP] Damping for this curve
 Fld_2
  Prm_    Damping ratio
  Typ_Real
  Def_0
Cmd_)/go
Cal_Fnc_SPVAL_1
:E END
:! 
:N Fnc_SPVAL_1
:S   7214,   376,  6831
:T Command
:P (FULL_ANS)
:C )! Fnc_SPVAL_1
:C )/nopr
:C )*del,_z
:C )*dim,_z,,50
:C )*GET,_z1,CPAR,101
:C )*GET,_z2,CPAR,102
:C )*do,i,1,50
:C )keyw,key%i%,0
:C )*enddo
:C )*get,_znfrq,mprs,_z1,nfrq
:C )*do,i,1,_znfrq
:C )*get,_z(i),mprs,_z1,freq,i
:C )keyw,key%i%,1
:C )*enddo
:C )/go
:D Spectrum vs Frequency Table
:H Hlp_UI_psdvalmul
Cmd_SPDAMP
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*PAR(_spdamp)
Cmd_SPVAL
 Fld_0
  Typ_Lab
  Prm_[SPVAL]          Spectrum vs Frequency Table No. %(I)_z1%
 Fld_0
  Typ_Lab
  Prm_                                       Curve No. %(I)_z2%
 Fld_0
  Typ_Lab
  Prm_    Enter spectrum values:
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_    FREQ1 = %_z(1)%, SV1 =
  Typ_real
Cmd_SPVAL
K_CM(KEY2)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_    FREQ2 = %_z(2)%, SV2 =
  Typ_real
Cmd_SPVAL
K_CM(KEY3)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_    FREQ3 = %_z(3)%, SV3 =
  Typ_real
Cmd_SPVAL
K_CM(KEY4)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_    FREQ4 = %_z(4)%, SV4 =
  Typ_real
Cmd_SPVAL
K_CM(KEY5)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_    FREQ5 = %_z(5)%, SV5 =
  Typ_real
Cmd_SPVAL
K_CM(KEY6)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_    FREQ6 = %_z(6)%, SV6 =
  Typ_real
Cmd_SPVAL
K_CM(KEY7)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_    FREQ7 = %_z(7)%, SV7 =
  Typ_real
Cmd_SPVAL
K_CM(KEY8)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_    FREQ8 = %_z(8)%, SV8 =
  Typ_real
Cmd_SPVAL
K_CM(KEY9)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_    FREQ9 = %_z(9)%, SV9 =
  Typ_real
Cmd_SPVAL
K_CM(KEY10)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ10 = %_z(10)%, SV10 =
  Typ_real
Cmd_SPVAL
K_CM(KEY11)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ11 = %_z(11)%, SV11 =
  Typ_real
Cmd_SPVAL
K_CM(KEY12)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ12 = %_z(12)%, SV12 =
  Typ_real
Cmd_SPVAL
K_CM(KEY13)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ13 = %_z(13)%, SV13 =
  Typ_real
Cmd_SPVAL
K_CM(KEY14)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ14 = %_z(14)%, SV14 =
  Typ_real
Cmd_SPVAL
K_CM(KEY15)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ15 = %_z(15)%, SV15 =
  Typ_real
Cmd_SPVAL
K_CM(KEY16)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ16 = %_z(16)%, SV16 =
  Typ_real
Cmd_SPVAL
K_CM(KEY17)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ17 = %_z(17)%, SV17 =
  Typ_real
Cmd_SPVAL
K_CM(KEY18)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ18 = %_z(18)%, SV18 =
  Typ_real
Cmd_SPVAL
K_CM(KEY19)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ19 = %_z(19)%, SV19 =
  Typ_real
Cmd_SPVAL
K_CM(KEY20)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ20 = %_z(20)%, SV20 =
  Typ_real
Cmd_SPVAL
K_CM(KEY21)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ21 = %_z(21)%, SV21 =
  Typ_real
Cmd_SPVAL
K_CM(KEY22)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ22 = %_z(22)%, SV22 =
  Typ_real
Cmd_SPVAL
K_CM(KEY23)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ23 = %_z(23)%, SV23 =
  Typ_real
Cmd_SPVAL
K_CM(KEY24)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ24 = %_z(24)%, SV24 =
  Typ_real
Cmd_SPVAL
K_CM(KEY25)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ25 = %_z(25)%, SV25 =
  Typ_real
Cmd_SPVAL
K_CM(KEY26)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ26 = %_z(26)%, SV26 =
  Typ_real
Cmd_SPVAL
K_CM(KEY27)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ27 = %_z(27)%, SV27 =
  Typ_real
Cmd_SPVAL
K_CM(KEY28)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ28 = %_z(28)%, SV28 =
  Typ_real
Cmd_SPVAL
K_CM(KEY29)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ29 = %_z(29)%, SV29 =
  Typ_real
Cmd_SPVAL
K_CM(KEY30)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ30 = %_z(30)%, SV30 =
  Typ_real
Cmd_SPVAL
K_CM(KEY31)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ31 = %_z(31)%, SV31 =
  Typ_real
Cmd_SPVAL
K_CM(KEY32)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ32 = %_z(32)%, SV32 =
  Typ_real
Cmd_SPVAL
K_CM(KEY33)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ33 = %_z(33)%, SV33 =
  Typ_real
Cmd_SPVAL
K_CM(KEY34)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ34 = %_z(34)%, SV34 =
  Typ_real
Cmd_SPVAL
K_CM(KEY35)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ35 = %_z(35)%, SV35 =
  Typ_real
Cmd_SPVAL
K_CM(KEY36)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ36 = %_z(36)%, SV36 =
  Typ_real
Cmd_SPVAL
K_CM(KEY37)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ37 = %_z(37)%, SV37 =
  Typ_real
Cmd_SPVAL
K_CM(KEY38)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ38 = %_z(38)%, SV38 =
  Typ_real
Cmd_SPVAL
K_CM(KEY39)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ39 = %_z(39)%, SV39 =
  Typ_real
Cmd_SPVAL
K_CM(KEY40)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ40 = %_z(40)%, SV40 =
  Typ_real
Cmd_SPVAL
K_CM(KEY41)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ41 = %_z(41)%, SV41 =
  Typ_real
Cmd_SPVAL
K_CM(KEY42)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ42 = %_z(42)%, SV42 =
  Typ_real
Cmd_SPVAL
K_CM(KEY43)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ43 = %_z(43)%, SV43 =
  Typ_real
Cmd_SPVAL
K_CM(KEY44)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ44 = %_z(44)%, SV44 =
  Typ_real
Cmd_SPVAL
K_CM(KEY45)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ45 = %_z(45)%, SV45 =
  Typ_real
Cmd_SPVAL
K_CM(KEY46)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ46 = %_z(46)%, SV46 =
  Typ_real
Cmd_SPVAL
K_CM(KEY47)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ47 = %_z(47)%, SV47 =
  Typ_real
Cmd_SPVAL
K_CM(KEY48)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ48 = %_z(48)%, SV48 =
  Typ_real
Cmd_SPVAL
K_CM(KEY49)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ49 = %_z(49)%, SV49 =
  Typ_real
Cmd_SPVAL
K_CM(KEY50)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Prm_   FREQ50 = %_z(50)%, SV50 =
  Typ_real
Cmd_)/GO
:E END
:! 
:N Fnc_SQRT
:S    444,   144,   293
:T Command
:C )! Fnc_SQRT
:A Square Root
:D Square Root of Time-History Variable
:K #(POST26)
:H Hlp_C_SQRT
Cmd_SQRT
Fld_0
Typ_Lab
Prm_[SQRT]                  IR = SQRT(FACTA * IA)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_SRCS
:S    745,   220,   518
:T Command
:C )! Fnc_SRCS
:A    Terminal Par
:D Calculate Terminal Parameters for a Coil
:K #(POST1+RESULTS+VECTORP+STATIC)
:K #((edgeflx+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_SRCS
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[SRCS]  Calculate Terminal Parameters for a Single Coil
Cmd_SRCS
 Fld_2
  Prm_NTURN  No. of turns in winding
  Typ_int
 Fld_3
  K_FL(ELEM3D)
  Prm_CURR   Applied current per turn
  Typ_real
 Fld_4
  Prm_FREQ   Freq. of current (Hz)
  Typ_real
 Fld_0
  Typ_Lab
  Prm_       (required only for terminal voltage + inductance)
 Fld_5
  K_FL(ELEM2D)
  Prm_PSYM   Planar symmetry factor
  Typ_real
  Def_1.0
 Fld_6
  K_FL(ELEM3D)
  Prm_CSYM   Circumferen. symm factor
  Typ_real
  Def_1.0
:E END
:! 
:N Fnc_SSLN
:S    419,   133,   279
:T Cmd
:A Sel Small Lines
:D Select Small Lines
:C )! Fnc_SSLN
:K (PREP7*NOFILTER)
:H Hlp_C_SSLN
Cmd_SSLN
 Fld_0
 Typ_Lab
 Prm_[SSLN]  Select Small Lines
 Fld_2
 Typ_REAL
 Prm_FACT    Select by Factor
 Fld_0
 Prm_        FACT is multiplied by average line length
 Typ_Lab
 Fld_3
 Typ_REAL
 Prm_SIZE    Select by Size
 Fld_0
 Typ_Lab
 Prm_        (used only if FACT is blank) 
:E END
:! 
:N Fnc_SSUM
:S    317,   158,   152
:T Command
:C )! Fnc_SSUM
:A Sum of Each Item
:D Tabular Sum of Each Element Table Item
:K #(POST1+RESULTS)
:H Hlp_C_SSUM
Inp_NoApply
Cmd_SSUM
 Fld_0
  Typ_Lab
  Prm_[SSUM]  This function calculates the tabular sum of each
 Fld_0
  Typ_Lab
  Prm_        element table item.
:E END
:! 
:N Fnc_STAT_/aux12
:S    379,   270,   102
:T Cmd_N
:C )! Fnc_STAT_/aux12
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'AUX12',' ',' ',' ',' '
:C )*set,_zc(6),'<Radiati','on Matri','x>'
:C )/go
:A Radiation Matrix
:D Radiation Matrix Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
Cal_Fnc_STAT_yes1,2,eq,62
Cal_Fnc_STAT_no1,2,ne,62
:E END
:! 
:N Fnc_STAT_/opt
:S    336,   227,   102
:T Cmd_N
:C )! Fnc_STAT_/opt
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'OPT',' ',' ',' ',' ','<Design',' Opt>'
:C )/go
:A Design Opt
:D Design Opt Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
Cal_Fnc_STAT_yes1,2,eq,41
Cal_Fnc_STAT_no1,2,ne,41
:E END
:! 
:N Fnc_STAT_Dynstat
:S    419,   242,   170
:T Cmd_N
:C )! Fnc_STAT_Dynstat
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION',' ',' ',' ',' <ANSYS/','LS-DYNA>'
:C )/go
:A LS-DYNA
:D LS-DYNA Status
:H Hlp_C_EDSOLV
Cmd_EDSOLV
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_EDSOLVE_no2,2,lt,17
Cal_Fnc_EDSOLVE_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_atyp
:S    425,   248,   170
:T Cmd_N
:C )! Fnc_STAT_atyp
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','ATYP',' ',' ','<Analysi','s Type>'
:C )/go
:A Analysis Type
:D Analysis Type Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_ATYPE
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_bf
:S    438,   242,   189
:T Cmd_N
:C )! Fnc_STAT_bf
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','FEBODY','SMBODY',' ','<Body',' Loads>'
:C )/go
:A Body Loads
:D Body Loads Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_FEBODY
! Cust_Cmd_SMBODY
Cal_Fnc_STAT_yes2,2,eq,17
Cal_Fnc_STAT_yes2,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_bioo
:S    463,   285,   171
:T Cmd_N
:C )! Fnc_STAT_bioo
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','BIOO',' ',' '
:C )*set,_zc(6),'<Biot Sa','vart Opt','ions>'
:C )/go
:A Biot Savart Options
:D Biot Savart Options Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_BIOOPT
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_calc_p1
:S    389,   264,   118
:T Cmd_N
:C )! Fnc_STAT_calc_p1
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST1',' ','CALC',' ',' '
:C )*set,_zc(6),'<Calcula','tions>',' '
:C )/go
:A Calculations
:D Calculations Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_CALC
Cal_Fnc_STAT_yes1,2,eq,31
Cal_Fnc_STAT_no1,2,ne,31
:E END
:! 
:N Fnc_STAT_ceqn
:S    375,   250,   118
:T Cmd_N
:C )! Fnc_STAT_ceqn
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7',' ','CEQN',' ',' ','<Constra','int Eqns','>'
:C )/go
:A Constraint Eqns
:D Constraint Eqns Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_CEQN
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_no1,2,ne,17
:E END
:! 
:N Fnc_STAT_cnfg
:S    393,   267,   119
:T Cmd_N
:C )! Fnc_STAT_cnfg
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'Begin','level','/CONFIG',' ',' '
:C )*set,_zc(6),'<Configu','ration>'
:C )/go
:A Configuration
:D Configuration Status
:H Hlp_C_/CONFIG
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_/CONFIG
Cal_Fnc_STAT_yes4,2,eq,0
Cal_Fnc_STAT_no3,2,ne,0
:E END
:! 
:N Fnc_STAT_coup
:S    365,   238,   120
:T Cmd_N
:C )! Fnc_STAT_coup
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7',' ','COUP',' ',' ','<Coupled',' Sets>'
:C )/go
:A Coupled Sets
:D Coupled Sets Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_COUPLE
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_no1,2,ne,17
:E END
:! 
:N Fnc_STAT_d
:S    470,   274,   189
:T Cmd_N
:C )! Fnc_STAT_d
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','FECONS','SMCONS',' '
:C )*SET,_zc(6),'<DOF',' Constra','ints>'
:C )/go
:A DOF Constraints
:D DOF Constraints Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_FECONS
! Cust_Cmd_SMCONS
Cal_Fnc_STAT_yes2,2,eq,17
Cal_Fnc_STAT_yes2,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_data_p1
:S    378,   250,   121
:T Cmd_N
:C )! Fnc_STAT_data_p1
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST1',' ','DATA',' ',' ','<Modify ','Results>'
:C )/go
:A Modify Results
:D Modify Results Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_DATADEF
Cal_Fnc_STAT_yes1,2,eq,31
Cal_Fnc_STAT_no1,2,ne,31
:E END
:! 
:N Fnc_STAT_deac
:S    453,   276,   170
:T Cmd_N
:C )! Fnc_STAT_deac
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','DEAC',' ',' '
:C )*set,_zc(6),'<Elem Bi','rth/Deat','h>'
:C )/go
:A Elem Birth/Death
:D Elem Birth/Death Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_DEACT
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_def_p26
:S    363,   236,   120
:T Cmd_N
:C )! Fnc_STAT_def_p26
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST26',' ','DEFI',' ',' ','<Variabl','es>'
:C )/go
:A Variables
:D Variables Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_DEFINE
Cal_Fnc_STAT_yes1,2,eq,36
Cal_Fnc_STAT_no1,2,ne,36
:E END
:! 
:N Fnc_STAT_defi_p1
:S    371,   244,   120
:T Cmd_N
:C )! Fnc_STAT_defi_p1
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST1',' ','DEFI',' ',' ','<Read ','Options>'
:C )/go
:A Read Options
:D Read Options Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_DEFINE
Cal_Fnc_STAT_yes1,2,eq,31
Cal_Fnc_STAT_no1,2,ne,31
:E END
:! 
:N Fnc_STAT_disp_p1
:S    372,   244,   121
:T Cmd_N
:C )! Fnc_STAT_disp_p1
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST1',' ','DISP',' ',' ','<Plot ','Results>'
:C )/go
:A Plot Results
:D Plot Results Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_DISPLAY
Cal_Fnc_STAT_yes1,2,eq,31
Cal_Fnc_STAT_no1,2,ne,31
:E END
:! 
:N Fnc_STAT_dyno
:S    454,   276,   171
:T Cmd_N
:C )! Fnc_STAT_dyno
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','DYNO',' ',' '
:C )*set,_zc(6),'<Dynamic','s Option','s>'
:C )/go
:A Dynamics Options
:D Dynamics Options Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_DYNOPT
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_elem
:S    355,   230,   118
:T Cmd_N
:C )! Fnc_STAT_elem
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7',' ','ELEM',' ',' ','<Element','s>',' '
:C )/go
:A Elements
:D Elements Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_ELEM
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_no1,2,ne,17
:E END
:! 
:N Fnc_STAT_etyp
:S    367,   241,   119
:T Cmd_N
:C )! Fnc_STAT_etyp
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7',' ','ETYP',' ',' ','<Element',' Types>'
:C )/go
:A Element Types
:D Element Types Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_ETYPE
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_no1,2,ne,17
:E END
:! 
:N Fnc_STAT_f
:S    421,   227,   187
:T Cmd_N
:C )! Fnc_STAT_f
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','FEFOR','SMFOR',' ','<Forces>',' '
:C )/go
:A Forces
:D Forces Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_FEFOR
! Cust_Cmd_SMFOR
Cal_Fnc_STAT_yes2,2,eq,17
Cal_Fnc_STAT_yes2,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_fals
:S    779,    92,   680
:T Cmd
:C )! Fnc_STAT_fals
:D Status
:H Hlp_C_STAT
Inp_P
Cmd_)/NOPR
Cmd_)_z1='POP'
Cmd_)/GO
Cmd_)*CSET,100,100,'NOTE',' '
Cmd_)*CSET,110,110
 Fld_2
  Typ_Def_*STR('%#_zc(1,3,1)%%#_zc(2,3,1)%%#_zc(3,3,1)%%#_zc(4,3,1)%')
Cmd_)*CSET,111,111
 Fld_2
  Typ_Def_*STR('%#_zc(5,3,1)%%#_zc(6,3,1)% status is available only')
Cmd_)*CSET,112,112
 Fld_2
  Typ_Def_*STR('able only &')
Cmd_)*CSET,113,113
 Fld_2
  Typ_Def_*STR('%#_zc(1,1,2)%%#_zc(2,1,2)%%#_zc(3,1,2)%')
Cmd_)*CSET,114,114
 Fld_2
  Typ_Def_*STR('%#_zc(4,1,2)%%#_zc(5,1,2)%%#_zc(6,1,2)%')
Cmd_)*CSET,115,117,' ',' ',' '
Cmd_)*CSET,118,124,' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,125,132,' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,133,139,' ',' ',' ',' ',' ',' ',' '
Cal_Fnc_Message
:E END
:! 
:N Fnc_STAT_fati_p1
:S    375,   247,   121
:T Cmd_N
:C )! Fnc_STAT_fati_p1
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST1',' ','FATI',' ',' ','<Fatigue',' Calcs>'
:C )/go
:A Fatigue Calcs
:D Fatigue Calcs Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_FATIGUE
Cal_Fnc_STAT_yes1,2,eq,31
Cal_Fnc_STAT_no1,2,ne,31
:E END
:! 
:N Fnc_STAT_gap
:S    426,   251,   168
:T Cmd_N
:C )! Fnc_STAT_gap
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','GAP',' ',' ','<Gap',' Conditi','ons>'
:C )/go
:A Gap Conditions
:D Gap Conditions Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_GAP
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_geno
:S    435,   257,   171
:T Cmd_N
:C )! Fnc_STAT_geno
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','GENO',' ',' ','<General',' Options','>'
:C )/go
:A General Options
:D General Options Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_GENOPT
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_inrt
:S    426,   248,   171
:T Cmd_N
:C )! Fnc_STAT_inrt
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','INRT',' ',' ','<Inertia',' Loads>'
:C )/go
:A Inertia Loads
:D Inertia Loads Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_INRTIA
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_lcca_p1
:S    394,   267,   120
:T Cmd_N
:C )! Fnc_STAT_lcca_p1
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST1',' ','LCCA',' ',' '
:C )*set,_zc(6),'Load Cas','e Calcs'
:C )/go
:A Load Case Calcs
:D Load Case Calcs Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_LCCALC
Cal_Fnc_STAT_yes1,2,eq,31
Cal_Fnc_STAT_no1,2,ne,31
:E END
:! 
:N Fnc_STAT_lsop
:S    484,   306,   171
:T Cmd_N
:C )! Fnc_STAT_lsop
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','LSOP',' ',' ','<Ld Step',' Oper>'
:C )*set,_zc(6),'Load Ste','p Operat','ions'
:C )/go
:A Load Step Operations
:D Load Step Operations Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_LSOPER
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_mast
:S    417,   239,   171
:T Cmd_N
:C )! Fnc_STAT_mast
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','MAST',' ',' ','<Master',' DOF>'
:C )/go
:A Master DOF
:D Master DOF Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_MASTER
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_mate
:S    359,   233,   119
:T Cmd_N
:C )! Fnc_STAT_mate
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7',' ','MATE',' ',' ','<Materia','ls>',' '
:C )/go
:A Materials
:D Materials Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_MATER
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_no1,2,ne,17
:E END
:! 
:N Fnc_STAT_nlop
:S    456,   279,   170
:T Cmd_N
:C )! Fnc_STAT_nlop
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','NLOP',' ',' '
:C )*set,_zc(6),'<Nonline','ar Optio','ns>'
:C )/go
:A Nonlinear Options
:D Nonlinear Options Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_NLOPT
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_no1
:S    543,    90,   446
:T Cmd
:C )! Fnc_STAT_no1
:D Status
:H Hlp_C_STAT
Inp_P
Cmd_)/NOPR
Cmd_)_z1='POP'
Cmd_)/GO
Cmd_)*CSET,110,117,' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,118,124,' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,125,132,' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,133,139,' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,100,100,'NOTE',' '
Cmd_)*CSET,110,110
 Fld_2
  Typ_Def_*STR('%#_zc(6)%%#_zc(7)%%#_zc(8)% status')
  Dlm_~
Cmd_)*CSET,111,111
 Fld_2
  Typ_Def_*STR(' is available only in %#_zc(1)%')
Cal_Fnc_Message
:E END
:! 
:N Fnc_STAT_no2
:S    594,    90,   497
:T Cmd
:C )! Fnc_STAT_no2
:D Status
:H Hlp_C_STAT
Inp_P
Cmd_)/NOPR
Cmd_)_z1='POP'
Cmd_)/GO
Cmd_)*CSET,110,117,' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,118,124,' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,125,132,' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,133,139,' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,100,100,'NOTE',' '
Cmd_)*CSET,110,110
 Fld_2
  Typ_Def_*STR('%#_zc(6)%%#_zc(7)%%#_zc(8)% status')
Cmd_)*CSET,111,111
 Fld_2
  Typ_Def_*STR(' is available only in')
Cmd_)*CSET,112,112
 Fld_2
  Typ_Def_*STR(' %#_zc(1)% and %#_zc(2)%')
Cal_Fnc_Message
:E END
:! 
:N Fnc_STAT_no3
:S    590,    90,   493
:T Cmd
:C )! Fnc_STAT_no3
:D Status
:H Hlp_C_STAT
Inp_P
Cmd_)/NOPR
Cmd_)_z1='POP'
Cmd_)/GO
Cmd_)*CSET,110,117,' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,118,124,' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,125,132,' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,133,139,' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,100,100,'NOTE',' '
Cmd_)*CSET,110,110
 Fld_2
  Typ_Def_*STR('%#_zc(6)%%#_zc(7)%%#_zc(8)% status')
Cmd_)*CSET,111,111
 Fld_2
  Typ_Def_*STR(' is available only at %#_zc(1)%')
Cmd_)*CSET,112,112
 Fld_2
  Typ_Def_*STR(' %#_zc(2)%')
Cal_Fnc_Message
:E END
:! 
:N Fnc_STAT_node
:S    344,   218,   119
:T Cmd_N
:C )! Fnc_STAT_node
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7',' ','NODE',' ',' ','<Nodes>',' '
:C )/go
:A Nodes
:D Nodes Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_NODES
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_no1,2,ne,17
:E END
:! 
:N Fnc_STAT_outo
:S    429,   251,   171
:T Cmd_N
:C )! Fnc_STAT_outo
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','OUTO',' ',' ','<Output ','Options>'
:C )/go
:A Output Options
:D Output Options Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_OUTOPT
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_path_p1
:S    397,   272,   118
:T Cmd_N
:C )! Fnc_STAT_path_p1
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST1',' ','PATH',' ',' '
:C )*set,_zc(6),'<Path',' Operati','ons>'
:C )/go
:A Path Operations
:D Path Operations Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_PATH
Cal_Fnc_STAT_yes1,2,eq,31
Cal_Fnc_STAT_no1,2,ne,31
:E END
:! 
:N Fnc_STAT_plo_p26
:S    351,   222,   122
:T Cmd_N
:C )! Fnc_STAT_plo_p26
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST26',' ','PLOT',' ',' ','<Plot>',' '
:C )/go
:A Plot
:D Plot Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_PLOTTING
Cal_Fnc_STAT_yes1,2,eq,36
Cal_Fnc_STAT_no1,2,ne,36
:E END
:! 
:N Fnc_STAT_poin_p1
:S    370,   244,   119
:T Cmd_N
:C )! Fnc_STAT_poin_p1
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST1',' ','POIN',' ',' ','<Trace ','Points>'
:C )/go
:A Trace Points
:D Trace Points Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_POINT
Cal_Fnc_STAT_yes1,2,eq,31
Cal_Fnc_STAT_no1,2,ne,31
:E END
:! 
:N Fnc_STAT_pri_p26
:S    349,   223,   119
:T Cmd_N
:C )! Fnc_STAT_pri_p26
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST26',' ','PRINT',' ',' ','<List>',' '
:C )/go
:A List
:D List Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_PRINT
Cal_Fnc_STAT_yes1,2,eq,36
Cal_Fnc_STAT_no1,2,ne,36
:E END
:! 
:N Fnc_STAT_prin_p1
:S    370,   244,   119
:T Cmd_N
:C )! Fnc_STAT_prin_p1
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST1',' ','PRIN',' ',' ','<List ','Results>'
:C )/go
:A List Results
:D List Results Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_PRINT
Cal_Fnc_STAT_yes1,2,eq,31
Cal_Fnc_STAT_no1,2,ne,31
:E END
:! 
:N Fnc_STAT_rcon
:S    372,   247,   118
:T Cmd_N
:C )! Fnc_STAT_rcon
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7',' ','RCON',' ',' ','<Real',' Constan','ts>'
:C )/go
:A Real Constants
:D Real Constants Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_RCON
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_no1,2,ne,17
:E END
:! 
:N Fnc_STAT_reor
:S    372,   244,   121
:T Cmd_N
:C )! Fnc_STAT_reor
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7',' ','REOR',' ',' ','<Reorder',' Module>'
:C )/go
:A Reorder Module
:D Reorder Module Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_REORDER
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_no1,2,ne,17
:E END
:! 
:N Fnc_STAT_selm
:S    367,   242,   118
:T Cmd_N
:C )! Fnc_STAT_selm
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7',' ','SELM',' ',' ','<Super e','lements>'
:C )/go
:A Superelements
:D Superelements Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_SELM
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_no1,2,ne,17
:E END
:! 
:N Fnc_STAT_sf
:S    447,   251,   189
:T Cmd_N
:C )! Fnc_STAT_sf
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','FESURF','SMSURF',' ','<Surface',' Loads>'
:C )/go
:A Surface Loads
:D Surface Loads Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_SMSURF
! Cust_Cmd_FESURF
Cal_Fnc_STAT_yes2,2,eq,17
Cal_Fnc_STAT_yes2,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_solid
:S   1051,   873,   171
:T Cmd_N
:C )! Fnc_STAT_solid
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10,3,2
:C )!
:C )_zc(1,1,1)='GEOM' $)_zc(1,2,1)='$STAT'
:C )_zc(2,1,1)='PRIM' $)_zc(2,2,1)='$STAT'
:C )_zc(3,1,1)='BOOL' $)_zc(3,2,1)='$STAT'
:! )_zc(4,1,1)=')$MOPT,' $)_zc(4,2,1)='STAT'
:C )_zc(5,1,1)=' ' $)_zc(5,2,1)=' ' $)_zc(6,1,1)=' ' $)_zc(6,2,1)=' '
:C )_zc(7,1,1)=' ' $)_zc(7,2,1)=' ' $)_zc(8,1,1)=' ' $)_zc(8,2,1)=' '
:C )_zc(9,1,1)=' ' $)_zc(9,2,1)=' ' $)_zc(10,1,1)=' ' $)_zc(10,2,1)=' '
:C )!
:C )_zc(1,1,2)='in the p' $)_zc(2,1,2)='reproces' $)_zc(3,1,2)='sor     '
:C )_zc(4,1,2)='        ' $)_zc(5,1,2)='        ' $)_zc(6,1,2)='        '
:C )!
:C )_zc(1,3,1)='<Solid' $)_zc(2,3,1)='Model>' $)_zc(3,3,1)=' '
:C )_zc(4,3,1)='        ' $)_zc(5,3,1)='       ' $)_zc(6,3,1)='        '
:C )!
:C )/go
:A Solid Model
:D Solid Model Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_GEOMETRY
! Cust_Cmd_PRIM
! Cust_Cmd_BOOL
! Cust_Cmd_MOPT
Cal_Fnc_STAT_true,2,eq,17
Cal_Fnc_STAT_fals,2,ne,17
:E END
:! 
:N Fnc_STAT_solu
:S    382,   254,   121
:T Cmd_N
:C )! Fnc_STAT_solu
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'SOLUTION',' ','SOLU',' ',' '
:C )*set,_zc(6),'<General',' Solutio','n>'
:C )/go
:A General
:D General Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_SOLUOPT
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no1,2,ne,21
:E END
:! 
:N Fnc_STAT_sort_p1
:S    366,   241,   118
:T Cmd_N
:C )! Fnc_STAT_sort_p1
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST1',' ','SORT',' ',' ','<Sort ','Module>'
:C )/go
:A Sort Module
:D Sort Module Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_SORT
Cal_Fnc_STAT_yes1,2,eq,31
Cal_Fnc_STAT_no1,2,ne,31
:E END
:! 
:N Fnc_STAT_spec_p1
:S    375,   250,   118
:T Cmd_N
:C )! Fnc_STAT_spec_p1
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'POST1',' ','SPEC',' ',' ','<Output ','Options>'
:C )/go
:A Output Options
:D Output Options Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_SPEC
Cal_Fnc_STAT_yes1,2,eq,31
Cal_Fnc_STAT_no1,2,ne,31
:E END
:! 
:N Fnc_STAT_spto
:S    454,   276,   171
:T Cmd_N
:C )! Fnc_STAT_spto
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7','SOLUTION','SPTO',' ',' '
:C )*set,_zc(6),'<Spectru','m Option','s>'
:C )/go
:A Spectrum Options
:D Spectrum Options Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_SPTOPT
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_yes1,2,eq,21
Cal_Fnc_STAT_no2,2,lt,17
Cal_Fnc_STAT_no2,2,gt,21
:E END
:! 
:N Fnc_STAT_tble
:S    360,   235,   118
:T Cmd_N
:C )! Fnc_STAT_tble
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10
:C )*set,_zc(1),'PREP7',' ','TBLE',' ',' ','<Data ','Tables>'
:C )/go
:A Data Tables
:D Data Tables Status
:H Hlp_C_STAT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_TBLE
Cal_Fnc_STAT_yes1,2,eq,17
Cal_Fnc_STAT_no1,2,ne,17
:E END
:! 
:N Fnc_STAT_true
:S   1198,    68,  1123
:T Cmd
:C )! Fnc_STAT_true
Inp_P
Cmd_)/nopr
Cmd_)/output,ansuitmp
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*STR(%_zc(1,1,1)% %_zc(1,2,1)%)
Cmd_)/output,ansuitmp,,,append
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*STR(%_zc(2,1,1)% %_zc(2,2,1)%)
Cmd_)/output,ansuitmp,,,append
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*STR(%_zc(3,1,1)% %_zc(3,2,1)%)
!Cmd_)/output,ansuitmp,,,append
!! Exclude_from_paths
!Cmd_)!
! Fld_1
!  Typ_Def_*STR(%_zc(4,1,1)% %_zc(4,2,1)%)
Cmd_)/output,ansuitmp,,,append
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*STR(%_zc(5,1,1)% %_zc(5,2,1)%)
Cmd_)/output,ansuitmp,,,append
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*STR(%_zc(6,1,1)% %_zc(6,2,1)%)
Cmd_)/output,ansuitmp,,,append
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*STR(%_zc(7,1,1)% %_zc(7,2,1)%)
Cmd_)/output,ansuitmp,,,append
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*STR(%_zc(8,1,1)% %_zc(8,2,1)%)
Cmd_)/output,ansuitmp,,,append
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*STR(%_zc(9,1,1)% %_zc(9,2,1)%)
Cmd_)/output,ansuitmp,,,append
Cmd_)!
 Fld_1
  Typ_Def_*STR(%_zc(10,1,1)% %_zc(10,2,1)%)
Cmd_)/output,term
Cmd_)*uilist,ansuitmp
Cmd_)/go
:E END
:! 
:N Fnc_STAT_yes1
:S    169,    68,    94
:T Cmd
:C )! Fnc_STAT_yes1
Inp_P
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_zc(3))
! Exclude_from_paths
Cmd_STAT
:E END
:! 
:N Fnc_STAT_yes2
:S    273,    68,   198
:T Cmd
:C )! Fnc_STAT_yes2
Inp_P
Cmd_)/LWBEGIN,ansuitmp
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_zc(3))
Cmd_)$STAT
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_zc(4))
Cmd_)$STAT
Cmd_)/LWSHOW,ansuitmp
Cmd_)/go
:E END
:! 
:N Fnc_STAT_yes3
:S    342,    68,   267
:T Cmd
:C )! Fnc_STAT_yes3
Inp_P
Cmd_)/LWBEGIN,ansuitmp
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_zc(3))
Cmd_)$STAT
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_zc(4))
Cmd_)$STAT
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_zc(5))
Cmd_)$STAT
Cmd_)/LWSHOW,ansuitmp
Cmd_)/go
:E END
:! 
:N Fnc_STAT_yes4
:S    217,    68,   142
:T Cmd
:C )! Fnc_STAT_yes4
Inp_P
Cmd_)!/LWBEGIN,ansuitmp
! Exclude_from_paths
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_zc(3))
 Fld_2
  Typ_Def_STAT
Cmd_)!/LWSHOW,ansuitmp
Cmd_)/go
:E END
:! 
:N Fnc_STEFBOL
:S    258,   170,    81
:T Command
:C )! Fnc_STEFBOL
:A    General Opts
:D General Options (Stefan Boltzman)
:K ((RADSURF+THERMAL)*NOFILTER)
:H Hlp_C_STEF
Cmd_STEF
 Fld_2
  Typ_REAL
  Prm_[STEF]  Stefan-Boltzmann Const.
  Def_0.119E-10
:E END
:! 
:N Fnc_STORE
:S    711,   142,   562
:T Command
:C )! Fnc_STORE
:A Store Data
:D Store Data from the Results File
:K #(POST26)
:H Hlp_C_STORE
Inp_NoApply
Cmd_STORE
K_CM(psdrandm)
Fld_0
Typ_Lab
Prm_[STORE]  Store Data from the Results File
Fld_2
Prm_Lab   New data will
Typ_LIS_OPTIONB
LIS_Merge w/existing,MERGE
LIS_Replace existing,NEW
LIS_Append existing ,APPEN
LIS_Allocation only ,ALLOC
Fld_3
Prm_NPTS  For allocation option -
Typ_int
Fld_0
Typ_Lab
Prm_      - number of time points for storage.
Cmd_STORE,PSD
K_CM(PSDRANDM)
Fld_0
 Typ_Lab
 Prm_[STORE,PSD] Store Newly Created Frequency Vector
Fld_2
 Prm_NPTS  Resolution of freq vector
 Typ_INT
 Def_5
Fld_0
 Typ_Lab
 Prm_      ( between 1 and 10 )
:E END
:! 
:N Fnc_STRSOPT
:S    441,   201,   233
:T Command
:C )! Fnc_STRSOPT
:A    Stress Options
:D Principal Stress Option for Load Case Calculation 
:H Hlp_C_SUMTYPE
:K #(POST1)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_SUMTYPE
 Fld_0
  Typ_Lab
  Prm_[SUMTYPE]  Combine component stresses and derive
 Fld_0
  Typ_Lab
  Prm_           principals, or combine principals
 Fld_2
  Typ_Lis_OptionB
  Lis_Comb Components, COMP
  Lis_Comb Principals, PRIN
:E END
:! 
:N Fnc_SUBSET
:S   2287,   293,  1987
:T Command
:C )! Fnc_SUBSET ORPHAN
:A    Read Selected
:D Read Results for Selected Subset
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,9
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,7
:C )_zc(1)='FIRST','LAST','NEXT',' ','NEAR','VELO','ACEL'
:C )/GO
:H Hlp_C_SUBSET
:K #(POST1)
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[SUBSET]  Read Results for Selected Subset
!
Fld_0
Typ_Sep
!  
 Fld_2
  K_FL(SPECTRUM*MODAL*BUCKLING*SUBSTRUC)
  Prm_LSTEP         Data set to read
  Typ_LIS_RADIOB
   LIS_First           ,1
   LIS_Last            ,2
   LIS_Next            ,3
   LIS_Specified set   ,99
 Fld_2
  K_FL(STATIC*TRNSIENT)
  Prm_LSTEP         Data set to read
  Typ_LIS_RADIOB
   LIS_First           ,1
   LIS_Last            ,2
   LIS_Next            ,3
   LIS_At specif time  ,4
   LIS_Near specif time,5
   LIS_Specified set   ,99
 Fld_2
  K_FL(HARMONIC)
  Prm_LSTEP         Data set to read
  Typ_LIS_RADIOB
   LIS_First           ,1
   LIS_Last            ,2
   LIS_Next            ,3
   LIS_Specified freq  ,4
   LIS_Specified set   ,99
!  
 Fld_6
  K_FL(STATIC*TRNSIENT)
  Prm_TIMFRQ        Specified time
  Typ_REAL
 Fld_6
  K_FL(HARMONIC)
  Prm_TIMFRQ        Specified freq
  Typ_REAL
!  
 Fld_0
  Typ_Lab
  Prm_Specified set -
 Fld_8
  K_FL(STATIC*SPECTRUM*TRNSIENT*HARMONIC*SUBSTRUC)
  Prm_  LSTEP,SBSTEP  LdStep, substep
  Typ_INT2
 Fld_8
  K_FL(MODAL*BUCKLING)
  Prm_  LSTEP,SBSTEP  LdStep, mode no.
  Typ_INT2
 Fld_0
  Typ_Lab
  Prm_                  - or -
 Fld_11
  Prm_  NSET          Set number
  Typ_INT
  Def_Blank
!  
Fld_0
Typ_Sep
!  
 Fld_10
  K_FL(HARMONIC*MODAL)
  Prm_FACT   Scale factor
  Typ_LIS_RADIOB
   LIS_Specified factor,-1
   LIS_(2pi*f)     VELO,6
   LIS_(2pi*f)**2  ACEL,7
 Fld_4
  K_FL(HARMONIC*MODAL)
  Prm_       Specified scale factor
  Typ_REAL
  Def_1.0
 Fld_4
  K_FL(STATIC*SPECTRUM*TRNSIENT*BUCKLING*SUBSTRUC)
  Prm_FACT   Scale factor
  Typ_REAL
  Def_1.0
!  
 Fld_5
  K_FL(HARMONIC)
  Prm_KIMG   Real or imaginary part
  Typ_LIS_OptionB
  LIS_Real part       ,0
  LIS_Imaginary part  ,1
 Fld_7
  K_FL(STRUCTRL*THERMAL)
  Prm_ANGLE  Circumferential location
  Typ_REAL
 Fld_0
  K_FL(STRUCTRL*THERMAL)
  Typ_Lab
  Prm_       - for harmonic elements only -
!
Fld_0
Cal_Fnc_SUBSET_l,2,NE,99
Cal_Fnc_SUBSET_n,2,EQ,99
:E End
:! 
:N Fnc_SUBSET_l
:S    176,    77,    92
:T Command
:C )! Fnc_SUBSET_l ORPHAN
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(9))
Cal_Fnc_SUBSET_ll,2,GT,0
Cal_Fnc_SUBSET_ln,2,LE,0
:E END
:! 
:N Fnc_SUBSET_ll
:S    279,    79,   193
:T Command
:C )! Fnc_SUBSET_ll ORPHAN
Inp_P
Cmd_)/GO
Cmd_SUBSET
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_4
  Typ_Def_*PAR(_zc(_z(9)))
 Fld_5
  Typ_Def_*PAR(_z(4))
 Fld_6
  Typ_Def_*PAR(_z(5))
 Fld_7
  Typ_Def_*PAR(_z(6))
Cal_REFRESH
:E END
:! 
:N Fnc_SUBSET_ln
:S    274,    79,   188
:T Command
:C )! Fnc_SUBSET_ln ORPHAN
Inp_P
Cmd_)/GO
Cmd_SUBSET
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_4
  Typ_Def_*PAR(_z(3))
 Fld_5
  Typ_Def_*PAR(_z(4))
 Fld_6
  Typ_Def_*PAR(_z(5))
 Fld_7
  Typ_Def_*PAR(_z(6))
Cal_REFRESH
:E END
:! 
:N Fnc_SUBSET_n
:S    176,    77,    92
:T Command
:C )! Fnc_SUBSET_n ORPHAN
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(9))
Cal_Fnc_SUBSET_nl,2,GT,0
Cal_Fnc_SUBSET_nn,2,LE,0
:E END
:! 
:N Fnc_SUBSET_nl
:S    333,    79,   247
:T Command
:C )! Fnc_SUBSET_nl ORPHAN
Inp_P
Cmd_)/GO
Cmd_SUBSET
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_zc(_z(9)))
 Fld_5
  Typ_Def_*PAR(_z(4))
 Fld_6
  Typ_Def_*PAR(_z(5))
 Fld_7
  Typ_Def_*PAR(_z(6))
 Fld_8
  Typ_Def_*PAR(_z(10))
Cal_REFRESH
:E END
:! 
:N Fnc_SUBSET_nn
:S    328,    79,   242
:T Command
:C )! Fnc_SUBSET_nn ORPHAN
Inp_P
Cmd_)/GO
Cmd_SUBSET
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_z(3))
 Fld_5
  Typ_Def_*PAR(_z(4))
 Fld_6
  Typ_Def_*PAR(_z(5))
 Fld_7
  Typ_Def_*PAR(_z(6))
 Fld_8
  Typ_Def_*PAR(_z(10))
Cal_REFRESH
:E END
:! 
:N Fnc_SUCALC_abs
:S    490,   165,   318
:T Command
:C )! Fnc_SUCALC_abs
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Absolute
:D Absolute
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,ABS      LabR = (abs(Lab) + const)
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab    Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
 Fld_4
  Typ_Def_ABS
Fld_0
Prm_
 Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_acos
:S    502,   186,   309
:T Command
:C )! Fnc_SUCALC_acos
:C )/NOPR
:C )_z1='  '
:C )/GO
:A ArcCosine
:D Arccosine of Surface Items
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,ACOS      LabR = (acos(Lab) + const)
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab   Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
 Fld_4
  Typ_Def_ACOS
 Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_add
:S    615,   169,   439
:T Command
:C )! Fnc_SUCALC_add
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Add
:D Add Surface Items
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,ADD      LabR = (Lab1 + Lab2 + const) 
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
 Fld_4
  Typ_Def_ADD
 Fld_0
  Prm_
 Fld_5
  Prm_Lab2   2nd Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
  LIS_- none -                        ,"  "
Fld_0
Prm_
Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_asin
:S    513,   182,   324
:T Command
:C )! Fnc_SUCALC_asin
:C )/NOPR
:C )_z1='  '
:C )/GO
:A ArcSine
:D Arcsine of Surface Items
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,ASIN      LabR =  ( asin(Lab) + const )
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab    Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
 Fld_4
  Typ_Def_ASIN
Fld_0
Prm_
 Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_atan
:S    518,   188,   323
:T Command
:C )! Fnc_SUCALC_atan
:C )/NOPR
:C )_z1='  '
:C )/GO
:A ArcTangent
:D ArcTangent of Surface Items
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,ATAN      LabR = ( atan(Lab) + const )
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab    Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
 Fld_4
  Typ_Def_ATAN
Fld_0
Prm_
 Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_atan2
:S    603,   192,   404
:T Command
:C )! Fnc_SUCALC_atan2
:C )/NOPR
:C )_z1='  '
:C )/GO
:A ArcTangent2
:D ArcTangent2 of Surface Items
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,ATA2       LabR = ( atan2(Lab1/Lab2) + const )
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
Fld_3
  Prm_Lab1   1st Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
Fld_4
  Typ_Def_ATA2
Fld_5
  Prm_Lab2   2nd Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
Fld_0
Prm_
 Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_cos
:S    503,   178,   318
:T Command
:C )! Fnc_SUCALC_cos
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Cosine
:D Cosine of Surface Items
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,COS      LabR = (cos(Lab) + const)
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab    Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
 Fld_4
  Typ_Def_COS
Fld_0
Prm_
 Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_div
:S    585,   175,   403
:T Command
:C )! Fnc_SUCALC_div
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Divide
:D Divide Surface Items
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
Fld_0
  Typ_Lab
  Prm_[SUCALC],,,DIV            LabR = (Lab1 / Lab2 + const)
Fld_0
  Typ_SEP
Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
 Fld_4
  Typ_Def_DIV
 Fld_5
  Prm_Lab2   2nd Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
Fld_0
Prm_
 Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_exp
:S    759,   187,   565
:T Command
:C )! Fnc_SUCALC_exp
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Exponentiate
:D Exponentiate Surface Items
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,EXP LabR = (Lab1 ^ Exp1 + Lab2 ^ Exp2 + const)
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
 Fld_4
  Typ_Def_EXP
 Fld_6
  Prm_EXP1   1st Exponent
  Typ_REAL
  Def_1
Fld_0
Prm_
 Fld_5
  Prm_Lab2   2nd Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
  LIS_- none -                        ,"  "
 Fld_7
  Prm_EXP2   2nd Exponent
  Typ_REAL
  Def_0
Fld_0
Prm_
 Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_init
:S    402,   171,   224
:T Command
:C )! Fnc_SUCALC_init
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Initialize
:D Initialize
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,ZERO     LabR = ( 0 + const )
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
 Fld_4
  Typ_Def_ZERO
 Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_log
:S    512,   188,   317
:T Command
:C )! Fnc_SUCALC_log
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Natural Log
:D Natural Log of Surface Items
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,LOG      LabR = (ln(Lab) + const)
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab    Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
 Fld_4
  Typ_Def_LOG
Fld_0
Prm_
 Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_mult
:S    604,   181,   416
:T Command
:C )! Fnc_SUCALC_mult
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Multiply
:D Multiply Surface Items
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,MULT           LabR = (Lab1 * Lab2  + const)
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
Fld_0
Prm_
 Fld_4
  Typ_Def_MULT
 Fld_5
  Prm_Lab2   2nd Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
Fld_0
Prm_
 Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_sin
:S    498,   174,   317
:T Command
:C )! Fnc_SUCALC_sin
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Sine
:D Sine of Surface Items
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,SIN      LabR =(sin(Lab) + const)
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
 Fld_4
  Typ_Def_SIN
Fld_0
Prm_
 Fld_3
  Prm_Lab    Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
Fld_0
Prm_
 Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCALC_sub
:S    624,   179,   438
:T Command
:C )! Fnc_SUCALC_sub
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Subtract
:D Subtract Surface Items
:H Hlp_C_SUCALC
:K #(POST1+RESULTS)
Cmd_SUCALC
 Fld_0
  Typ_Lab
  Prm_[SUCALC],,,SUB      LabR = (Lab1 - Lab2 + const)
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
 Fld_4
  Typ_Def_SUB
 Fld_0
  Prm_
 Fld_5
  Prm_Lab2   2nd Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
  LIS_- none -                        ,"  "
Fld_0
Prm_
Fld_8
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUCR_SPH1
:S    570,   221,   342
:T Command
:C )! Fnc_SUCR_SPH1
:C )*DEL,_z
:C )*DIM,_z,,5
:C )*GET,_z1,active,,csys
:C !Create Local CS at WP Origin
:C CSWPLA,9999
:A At Node
:D At Node
:H Hlp_C_SUCR
:K #(POST1)
Cmd_)/COMMENT
  Fld_2
   Typ_Lab
   Prm_[SUCR,,SPHERE] Create a Spherical Surface Centered at a Node
Cmd_)*CSET,1,1
  Fld_2
   Prm_SurfName Surface name
   Typ_CHAR,8,8
Cmd_)*SET,_z(1)
  Fld_2
   Prm_nRefine  #Div along 90 deg arc
   Typ_INT
   Def_9
Cmd_)*SET,_z(2)
  Fld_2
   Prm_Radius   Radius of the sphere
   Typ_REAL
Cal_Fnc_SUCR_SPH2
:E End
:! 
:N Fnc_SUCR_SPH2
:S    321,   172,   142
:T Cmd_P
:C )! Fnc_SUCR_SPH2
:C !Get node selection 
:A Create Sphere Result Surface
:D Create Sphere Result Surface
:H Hlp_C_SUCR
Inp_P
Cmd_)*SET,_z(5)
Fld_2
  Prm_[SUCR,,SPHERE]  Pick one node location
  Typ_NODE
  Max_1
  Min_1
  Mok_1
  Cnt_1
  PFM_2
Cal_Fnc_SUCR_SPH3
:E End
:! 
:N Fnc_SUCR_SPH3
:S    457,   166,   284
:T Cmd_N
:C )! Fnc_SUCR_SPH3
:C !Issue command
:A Create Sphere Result Surface
:D Create Sphere Result Surface
:H Hlp_C_SUCR
Inp_P
Cmd_NWPLAN,-1
  Fld_2
   Typ_Def_*PAR(_z(5))
Cmd_SUCR
  Fld_2
   Typ_Def_*CPAR(1)
  Fld_3
   Typ_Def_SPHERE
  Fld_4
   Typ_Def_*PAR(_z(1))
  Fld_5
   Typ_Def_*PAR(_z(2))
Cmd_!Align WP with Specified CS 
Cmd_WPCSYS,-1,9999
Cmd_CSYS
   Fld_2
     Typ_Def_*PAR(_z1)
Cmd_CSDEL,9999
:E End
:! 
:N Fnc_SUCR_by_dim
:S    394,   102,   285
:T Command
:A By Dimensions
:D By Dimensions
:H Hlp_C_SUCR
Cmd_SUCR
Fld_0
  Typ_Lab
  Prm_[SUCR,,SPHERE] Create a Spherical Surface at WP Center by Dimensions
Fld_2
  Prm_SurfName Surface name
  Typ_CHAR,8,8
Fld_3
  Typ_Def_SPHE
Fld_4
  Prm_nRefine  #Div along 90 deg arc
  Typ_INT
   Def_9
Fld_5
  Prm_Radius   Radius of the sphere
  Typ_REAL
:E END
:! 
:N Fnc_SUCR_comp
:S    474,   155,   312
:T Command
:A On Components
:C )! Fnc_SUCR_comp
:C CM,_ELEM_CM,ELEM
:D Create surface on components
:H Hlp_C_SUCR
Cmd_)*CSET,1,7
Fld_0
  Typ_Lab
  Prm_[CM]  Create Surface on components
Fld_2
  Prm_SurfName Surface name
  Typ_CHAR,8,8
Fld_3
  Typ_Def_EXT
Fld_4
  Prm_nRefine  Refinement value
  Typ_INT
Fld_5
  Prm_Components defined
  Typ_MLis
  LIS_*READ,CM
  Bnd_1.0,6.0
! Cust_Cmd_CMSEL
! Cust_Cmd_SUCR
Cal_Fnc_SUCR_comp2
:E END
:! 
:N Fnc_SUCR_comp2
:S    302,   111,   184
:T Command
:B Fnc_SUCR_comp
:C CM,_ELEM_CM,ELEM
:C )! Fnc_SUCR_comp2
Inp_P
!Exclude_from_paths
Cmd_CMSEL,S
Fld_2
Typ_Def_*CPAR(4)
Cmd_SUCR
Fld_2
 Typ_def_*CPAR(1)
Fld_3
 Typ_def_*CPAR(2)
Fld_4
 Typ_def_*CPAR(3)
!
Cmd_CMSEL,S,_ELEM_CM
Cmd_CMDEL,_ELEM_CM
:E END
:! 
:N Fnc_SUCR_cplane
:S    496,   244,   245
:T Command
:A  On Cuttng Plane
:D On Cuttng Plane
:C )! Fnc_SUCR_cplane
:C )/NOPR
:C )*GET,_z1,common,,d3com,,int,91
:C )*IF,_z1,EQ,0,THEN
:C )KEYW,cp,1
:C ) /CPLANE,1
:C )*ENDIF
:C )/GO
:H Hlp_C_SUCR
Fld_0
  Typ_Lab
  Prm_[SUCR,,CPLANE] Create a Surface Using the Working Plane to Cut the Model
Cmd_SUCR
Fld_2
  Prm_SurfName Surface name
  Typ_CHAR,8,8
Fld_3
  Typ_Def_CPLANE
Fld_4
  Prm_nRefine  Refinement value
  Typ_INT
Cal_Fnc_SUCR_cplane2
:E END
:! 
:N Fnc_SUCR_cplane2
:S    171,   157,     7
:T Cmd_P
:A On Cuttng Plane
:D On Cuttng Plane
:C )/NOPR
:C )*IF,_z1,EQ,0,THEN
:C ) /CPLANE,0
:C )*ENDIF
:C )/GO
Cmd_)!
:E END
:! 
:N Fnc_SUCR_elem
:S    356,   170,   179
:T Cmd_P
:C )! Fnc_SUCR_elem
:C CM,_ELEM_CM,ELEM
:A On Elements
:D Create Surface on Elements
:K #(POST1*SOLUTION)
:H Hlp_C_SUCR
Inp_P
Cmd_ESEL
Fld_5
 Prm_[SUCR] Pick Elements to create surfaces
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Cmd_CM,_ELEM_CM1,ELEM
Cmd_CMSEL,S,_ELEM_CM
Cmd_CMDELE,_ELEM_CM
Cal_Fnc_SUCR_elem2
:E END
:! 
:N Fnc_SUCR_elem2
:S    426,   164,   255
:T Command
:A Create Surface on elements
:C CM,_ELEM_CM,ELEM
:D Create surface on Elements
:H Hlp_C_SUCR
:B Fnc_SUCR_elem
Cmd_CMSEL,S,_ELEM_CM1
!Exclude_from_paths
Cmd_SUCR
Fld_0
Prm_[SUCR] Create Surface on elements
 Fld_2
  Prm_SurfName Surface name
  Typ_CHAR,8,8
Fld_3
  Typ_Def_EXT
Fld_4
  Prm_nRefine  Refinement value
  Typ_INT
!
Cmd_CMSEL,S,_ELEM_CM
Cmd_CMDEL,_ELEM_CM
:E END
:! 
:N Fnc_SUCR_infc
:S    401,   143,   251
:T Command
:A  Inf. Cylinder
:C )! Fnc_SUCR_infc
:D Create infinite cylindrical surface
:H Hlp_C_SUCR
Cmd_SUCR
Fld_0
  Typ_Lab
  Prm_[SUCR,,INFC] Create infinite cylindrical surface
Fld_2
  Prm_SurfName Surface name
  Typ_CHAR,8,8
Fld_3
  Typ_Def_INFC
Fld_4
  Prm_nRefine  Refinement value
  Typ_INT
Fld_5
  Prm_Radius   Radius of the sphere
  Typ_REAL
:E END
:! 
:N Fnc_SUDEL_surf
:S    262,   127,   128
:T Command
:C )! Fnc_SUDEL_surf
:A Delete Surfaces
:D Delete Surfaces
:H Hlp_C_SUDEL
Rmk_
Cmd_SUDEL
Fld_0
Typ_Lab
Prm_[SUDEL]  Delete surface
 Fld_2
  Prm_SurfName Surface to be deleted
  Typ_Lis
  Lis_*READ,SUNM
:E END
:! 
:N Fnc_SUEVAL_avg
:S    407,   146,   254
:T Command
:C )! Fnc_SUEVAL_avg
:A Average Result
:D Average Result
:H Hlp_C_SUEVAL
:K #(POST1+RESULTS)
Cmd_SUEVAL
 Fld_0
  Typ_Lab
  Prm_[SUEVAL],,,AVG  Parm = S(Lab1*DA)/S(DA)
Fld_0
Typ_SEP
 Fld_2
  Prm_Parm   APDL Parameter name
  Typ_CHAR
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
Fld_0
Prm_
 Fld_4
  Typ_Def_AVG
:E END
:! 
:N Fnc_SUEVAL_intg
:S    411,   154,   250
:T Command
:C )! Fnc_SUEVAL_intg
:A Integrate Results
:D Integrate Results
:H Hlp_C_SUEVAL
:K #(POST1+RESULTS)
Cmd_SUEVAL
 Fld_0
  Typ_Lab
  Prm_[SUEVAL],,,INTG  Parm = INTG(Lab1)
Fld_0
Typ_SEP
 Fld_2
  Prm_Parm   APDL Parameter name
  Typ_CHAR
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
Fld_0
Prm_
 Fld_4
  Typ_Def_INTG
:E END
:! 
:N Fnc_SUEVAL_sum
:S    399,   146,   246
:T Command
:C )! Fnc_SUEVAL_sum
:A Sum of Results
:D Sum of Results
:H Hlp_C_SUEVAL
:K #(POST1+RESULTS)
Cmd_SUEVAL
 Fld_0
  Typ_Lab
  Prm_[SUEVAL],,,SUM Parm = SUM(Lab1)
Fld_0
Typ_SEP
 Fld_2
  Prm_Parm   APDL Parameter name
  Typ_CHAR
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SURS
Fld_0
Prm_
 Fld_4
  Typ_Def_SUM
:E END
:! 
:N Fnc_SUGET
:S    534,   119,   408
:T Cmd
:A Results to Array
:D Results to Array
:H Hlp_C_SUGET
:K #(POST1+RESULTS)
Cmd_SUGET
Fld_0
   Typ_Lab
   Prm_[SUGET]Store Surface Information in an Array
 Fld_4
  Prm_Parm  APDL array to create
  Typ_CHAR,8,8
Fld_0
   Typ_Lab
   Prm_SurfName  
Fld_2
   Prm_Get information from surface
   Typ_Lis
   Lis_*READ,SUNM
Fld_0
   Typ_Lab
   Prm_RSetName
Fld_3
   Prm_Result information to store
   Typ_Lis
   Lis_*READ,SUDA
Fld_5
   Prm_Geom  Store geometry information
   Typ_Logi,No,Yes
:E End
:! 
:N Fnc_SUMAP_itm
:S    153,    87,    59
:T Command
:A Map Results
:K #(POST1+RESULTS)
Inp_P
Cmd_)~eui,'euidl::post1::mapResults::mapRsltToSurfs'
:E END
:! 
:N Fnc_SUMAP_srfclr
:S    342,   155,   180
:T Command
:C )! Fnc_SUMAP_srfclr
:A Clear Results
:D Clear Surface Results
:H Hlp_C_SUMAP
:K #(POST1+RESULTS)
Rmk_
Cmd_SUMAP
Fld_0
Typ_Lab
Prm_[SUMAP,,CLEAR] Clear Results from all Selected Surfaces
 Fld_2
  Prm_RSetName Delete results set
  Typ_Lis
  Lis_*READ,SUDA
 Fld_3
  Typ_Def_CLEAR
:E END
:! 
:N Fnc_SUPL
:S    465,   117,   341
:T Cmd
:A Plot Results
:D Plot Surface Results
:H Hlp_C_SUPL
:K #(POST1+RESULTS)
Cmd_)*CSET,1,12
Fld_0
   Typ_Lab
   Prm_[SUPL] Plot Results on Surfaces
Fld_4
   Prm_SurfName Surface name
   Typ_Lis
      Lis_All   ,All
      Lis_*READ,SUNM
Fld_2
   Prm_RSetName Result set name 
   Typ_LIS_OPTIONB
   Lis_SURFACE GEOMETRY,-1
   Lis_*READ,SURS
Fld_3
   Prm_KWIRE    Show element outlines
   Typ_Logi,No,Yes
Cal_Fnc_SUPL_2
:E End
:! 
:N Fnc_SUPL_2
:S    349,   227,   115
:T Command
:C )/NOPR
:C )*GET,_Z1,CPAR,1        ! get parameter 1 defined with *CSET
:C )*IF,_z1,EQ,-1,THEN
:C )*CSET,13,13,1
:C )*ELSEIF,_z1,NE,-1,THEN
:C )*CSET,13,13,0
:C )*ENDIF
:C)/GO
Inp_P
Cmd_)!Fnc_SUPL_2
Fld_2
   Typ_def_*CPAR(13)
! Cust_Cmd_SUPL
Cal_Fnc_SUPL_srf,2,eq,1
Cal_Fnc_SUPL_rset,2,eq,0
:E End
:! 
:N Fnc_SUPL_rset
:S    169,    52,   110
:T Command
Inp_P
Cmd_)!Fnc_SUPL_rset
Cmd_SUPL
Fld_2
  Typ_def_*CPAR(3)
Fld_3
  Typ_def_*CPAR(1)
Fld_4
  Typ_def_*CPAR(2)
:E End
:! 
:N Fnc_SUPL_srf
:S    142,    51,    84
:T Command
Inp_P
Cmd_)!Fnc_SUPL_srf
Cmd_SUPL
Fld_2
  Typ_def_*CPAR(3)
Fld_4
  Typ_def_*CPAR(2)
:E End
:! 
:N Fnc_SUPL_vect
:S    428,   122,   299
:T Cmd
:A Plot Vectors
:D Plot Vectors Results
:H Hlp_C_SUPL
:K #(POST1+RESULTS)
Cmd_SUPL
Fld_0
   Typ_Lab
   Prm_[SUPL] Plot Vectors on Surfaces
Fld_2
   Prm_SurfName Surface name
   Typ_Lis
      Lis_All Surfaces   ,All
      Lis_*READ,SUNM
Fld_3
   Prm_RSetName Result Setname
   Typ_LIS_OPTIONB
   Lis_*READ,SUFX
Fld_4
   Prm_KWIRE    Show element outlines
   Typ_Logi,No,Yes
:E End
:! 
:N Fnc_SUPR_glb
:S    131,   109,    15
:T Cmd
:C )! Fnc_SUPR
:A  Global
:D Global
:H Hlp_C_SUPR
:K #(POST1)
Inp_P
Cmd_SUPR
:E END
:! 
:N Fnc_SUPR_srfs
:S    408,   130,   271
:T Cmd
:A Print Results 
:D Print Results for Surfaces
:H Hlp_C_SUPR
:K #(POST1+RESULTS)
Cmd_SUPR
Fld_0
   Typ_Lab
   Prm_[SUPR] Print Result Status for Surfaces
Fld_2
   Prm_SurfName Surface name
   Typ_Lis
      Lis_All Surfaces   ,All
      Lis_*READ,SUNM
Fld_3
   Prm_RSetName Result set name
   Typ_Lis
      Lis_None           ,"  "
      Lis_*READ,SUDA
:E End
:! 
:N Fnc_SURESU
:S    306,   140,   159
:T Command
:C )! Fnc_SURESU
:A Resume Surfaces
:D Resume Surfaces
:H Hlp_C_SURESU
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_SURESU
 Fld_0
  Typ_Lab
  Prm_[SURESU] Resumes Surface and Result Information
 Fld_0
  Prm_
 Fld_3
  Prm_Filename  Resume from file
  Typ_File
:E END
:! 
:N Fnc_SUSAVE
:S    418,   136,   275
:T Command
:C )! Fnc_SUSAVE
:A Save Surfaces
:D Save Surfaces
:H Hlp_C_SUSAVE
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_SUSAVE
 Fld_0
  Typ_Lab
  Prm_[SUSAVE] Save Surface and Result Information
 Fld_2
   Prm_SurfName Surface name
   Typ_Lis
      Lis_All Surfaces     ,ALL
      Lis_Selected Surfaces,S
      Lis_*READ,SUNM
 Fld_3
  Prm_Filename  Save to file
  Typ_File_Inline
:E END
:! 
:N Fnc_SUSEL
:S    380,    82,   291
:T Cmd
:A Select Surfaces
:D Select Surfaces
Cmd_SUSEL
Fld_0
  Typ_Lab 
  Prm_[SUSEL] Select Surfaces to Operate On
Fld_3
  Prm_ Select Surfaces 
  Typ_MLis
  Lis_*READ,SUNM
  Bnd_1,8
Fld_2
  Prm_Operation Type
  Typ_Lis_OptionB
  Lis_From Full   ,S
  Lis_Reselect    ,R
  Lis_Also Select ,A
  Lis_Unselect    ,U
  Lis_Select All  ,ALL
:E End
:! 
:N Fnc_SUVECT_cross
:S    737,   179,   551
:T Command
:C )! Fnc_SUVECT_cross
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Cross Product
:D Cross Product
:H Hlp_C_SUVECT
:K #(POST1+RESULTS)
Cmd_SUVECT
 Fld_0
  Typ_Lab
  Prm_[SUVECT],,,,CROSS   LabR = {LabX1,LabY1,LabZ1} x {LabX2,LabY2,LabZ2}
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SUFX
  Def_Lab1
Fld_0
Prm_
 Fld_4
  Typ_Def_CROSS
 Fld_5
  Prm_Lab2   2nd Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SUFX
  Def_Lab2
Fld_0
Prm_
 Fld_6
  Prm_CONST  xOffset
  Typ_REAL
Fld_0
Prm_
 Fld_7
  Prm_CONST  yOffset
  Typ_REAL
Fld_0
Prm_
 Fld_8
  Prm_CONST  zOffset
  Typ_REAL
:E END
:! 
:N Fnc_SUVECT_dot
:S    624,   171,   446
:T Command
:C )! Fnc_SUVECT_dot
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Dot Product
:D Dot Product
:H Hlp_C_SUVECT
:K #(POST1+RESULTS)
Cmd_SUVECT
 Fld_0
  Typ_Lab
  Prm_[SUVECT],,,,DOT LabR = {LabX1,LabY1,LabZ1} o {LabX2,LabY2,LabZ2}
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab1   1st Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SUFX
  Def_Lab1
Fld_0
Prm_
 Fld_4
  Typ_Def_DOT
 Fld_5
  Prm_Lab2   2nd Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SUFX
  Def_Lab2
Fld_0
Prm_
 Fld_6
  Prm_CONST  Constant
  Typ_REAL
:E END
:! 
:N Fnc_SUVECT_smult
:S    681,   177,   497
:T Command
:C )! Fnc_SUVECT_smult
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Scale Result
:D Scale Result
:H Hlp_C_SUVECT
:K #(POST1+RESULTS)
Cmd_SUVECT
 Fld_0
  Typ_Lab
  Prm_[SUVECT],,,,SMULT  LabR = Lab2{LabX1,LabY1,LabZ1}
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR,8,8
  Def_*PAR(_z1)
Fld_0
Prm_
 Fld_3
  Prm_Lab1   Surface item
  Typ_LIS_OPTIONB
  LIS_*READ,SUFX
  Def_Lab1
Fld_0
Prm_
 Fld_4
  Typ_Def_SMULT
 Fld_5
  Prm_Lab2   Multiplier
  Typ_REAL
  Def_1.0
Fld_0
Prm_
 Fld_6
  Prm_CONST  xOffset
  Typ_REAL
Fld_0
Prm_
 Fld_7
  Prm_CONST  yOffset
  Typ_REAL
Fld_0
Prm_
 Fld_8
  Prm_CONST  zOffset
  Typ_REAL
:E END
:! 
:N Fnc_SV
:S    427,   395,    25
:T Command
:C )! Fnc_SV
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,20
:C )keyw,key1,0,key2,0,key3,0,key4,0
:C )keyw,key5,0,key6,0,key7,0,key8,0
:C )keyw,key9,0,key10,0,key11,0,key12,0
:C )keyw,key13,0,key14,0,key15,0,key16,0
:C )keyw,key17,0,key18,0,key19,0,key20,0
:C )/GO
:A    Spectr Values
:D Spectrum Values
:K #((PREP7*SOLUTION)+(SINGLEPT*NOFILTER))
:P (LINPLUS)
Inp_P
Cmd_)!
Cal_Fnc_SV0
:E END
:! 
:N Fnc_SV0
:S    320,   288,    25
:T Command
:C )! Fnc_SV0
:C )/NOPR
:C )*DEL,_z1
:C )*DO,_z1,1,20
:C )/NOPR
:C )*GET,_z(_z1),common,,svcom,,real,_z1 ! get freq vector
:C )KEYW,KEY%_z1%,1
:C )*IF,_z(_z1),EQ,0,THEN
:C )KEYW,KEY%_z1%,0
:C )*EXIT
:C )*ENDIF
:C )*ENDDO
:C )/GO
:P (LINPLUS)
Inp_P
Cmd_)!
Cal_Fnc_SV1
:E END
:! 
:N Fnc_SV1
:S   1501,   643,   851
:T Command
:C )! Fnc_SV1
:C )/NOPR
:C )KEYW,KEY21,0,KEY22,0,KEY23,0,KEY24,0
:C )*GET,_z3,common,,svcom,,real,115         ! 1st damping ratio
:C )*IF,_z3,NE,-1,THEN
:C )KEYW,KEY21,1
:C )*GET,_z4,common,,svcom,,real,116         ! 2nd damping ratio
:C )*IF,_z4,NE,-1,THEN
:C )KEYW,KEY22,1
:C )*GET,_z5,common,,svcom,,real,117         ! 3rd damping ratio
:C )*IF,_z5,NE,-1,THEN
:C )KEYW,KEY23,1
:C )*GET,_z6,common,,svcom,,real,118         ! 4th damping ratio
:C )*IF,_z6,NE,-1,THEN
:C )KEYW,KEY24,1
:C )*ENDIF
:C )*ENDIF
:C )*ENDIF
:C )*ENDIF
:C )/GO
:D Spectrum Values - Damping Ratio
:P (LINPLUS)
:H Hlp_C_SV
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_[SV]  Spectrum Values
Cmd_)/NOPR
Cmd_)*CSET,1,1
K_CM(KEY1)
 Fld_2
  Prm_Damping ratio for this curve -
  Typ_REAL
  Def_0
 Fld_0
  Typ_Lab
  Prm_- in ascending order from previous ratios
Cmd_)/GO
Cmd_)!
 Fld_0
  K_FL(key1)
  Typ_Lab
  Prm_                    - Note -
 Fld_0
  K_FL(key1)
  Typ_Lab
  Prm_The frequency table has not been defined.  Use the
 Fld_0
  K_FL(key1)
  Typ_Lab
  Prm_'Freq Table' topic to define the frequency table.
 Fld_0
  K_FL(KEY21)
  Typ_Lab
  Prm_Damping ratios for previously defined curves (up to 4 total)
 Fld_0
  K_FL(KEY21)
  Prm_   DAMP1 = %_z3%
 Fld_0
  K_FL(KEY22)
  Prm_   DAMP2 = %_z4%
 Fld_0
  K_FL(KEY23)
  Prm_   DAMP3 = %_z5%
 Fld_0
  K_FL(KEY24)
  Typ_Lab
  Prm_   DAMP4 = %_z6%  Maximum curve limit reached
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(1))
Cal_Fnc_SV2,2,NE,0
:E END
:! 
:N Fnc_SV2
:S   1859,   142,  1710
:T Command
:C )! Fnc_SV2
:C )/NOPR
:C )*GET,_z2,CPAR,1
:C )/GO
:D Spectrum Values
:P (LINPLUS)
:H Hlp_C_SV
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_[SV]  Spectrum Values for Damping Ratio = %_z2%
Cmd_SV
K_CM(KEY1)
 Fld_2
   Typ_Def_*CPAR(1)
 Fld_3
  Prm_ FREQ1  = %_z(1)%   SV1  =
  Typ_REAL
  Def_0
 Fld_4
  K_FL(KEY2)
  Prm_ FREQ2  = %_z(2)%   SV2  =
  Typ_REAL
  Def_0
 Fld_5
  K_FL(KEY3)
  Prm_ FREQ3  = %_z(3)%   SV3  =
  Typ_REAL
  Def_0
 Fld_6
  K_FL(KEY4)
  Prm_ FREQ4  = %_z(4)%   SV4  =
  Typ_REAL
  Def_0
 Fld_7
  K_FL(KEY5)
  Prm_ FREQ5  = %_z(5)%   SV5  =
  Typ_REAL
  Def_0
 Fld_8
  K_FL(KEY6)
  Prm_ FREQ6  = %_z(6)%   SV6  =
  Typ_REAL
  Def_0
 Fld_9
  K_FL(KEY7)
  Prm_ FREQ7  = %_z(7)%   SV7  =
  Typ_REAL
  Def_0
 Fld_10
  K_FL(KEY8)
  Prm_ FREQ8  = %_z(8)%   SV8  =
  Typ_REAL
  Def_0
 Fld_11
  K_FL(KEY9)
  Prm_ FREQ9  = %_z(9)%   SV9  =
  Typ_REAL
  Def_0
! This Fld_0 needed for some odd reason
Fld_0
 Typ_Def_0
Cmd_SV
K_CM(KEY10)
   Typ_Def_
 Fld_2
   Typ_Def_*CPAR(1)
 Fld_3
  Prm_ FREQ10 = %_z(10)%  SV10 =
  Typ_REAL
  Def_0
 Fld_4
  K_FL(KEY11)
  Prm_ FREQ11 = %_z(11)%  SV11 =
  Typ_REAL
  Def_0
 Fld_5
  K_FL(KEY12)
  Prm_ FREQ12 = %_z(12)%  SV12 =
  Typ_REAL
  Def_0
 Fld_6
  K_FL(KEY13)
  Prm_ FREQ13 = %_z(13)%  SV13 =
  Typ_REAL
  Def_0
 Fld_7
  K_FL(KEY14)
  Prm_ FREQ14 = %_z(14)%  SV14 =
  Typ_REAL
  Def_0
 Fld_8
  K_FL(KEY15)
  Prm_ FREQ15 = %_z(15)%  SV15 =
  Typ_REAL
  Def_0
 Fld_9
  K_FL(KEY16)
  Prm_ FREQ16 = %_z(16)%  SV16 =
  Typ_REAL
  Def_0
 Fld_10
  K_FL(KEY17)
  Prm_ FREQ17 = %_z(17)%  SV17 =
  Typ_REAL
  Def_0
 Fld_11
  K_FL(KEY18)
  Prm_ FREQ18 = %_z(18)%  SV18 =
  Typ_REAL
  Def_0
Cmd_SV
K_CM(KEY19)
 Fld_2
   Typ_Def_*CPAR(1)
 Fld_3
  Prm_ FREQ19 = %_z(19)%  SV19 =
  Typ_REAL
  Def_0
 Fld_4
  K_FL(KEY20)
  Prm_ FREQ20 = %_z(20)%  SV20 =
  Typ_REAL
  Def_0
:E END
:! 
:N Fnc_SVTYP_etc
:S   1755,   712,  1036
:T Command
:C )! Fnc_SVTYP_etc
:C )/NOPR
:C )*GET,_z1,common,,soptcm,,real,3 ! z1 to z3 excittion dir
:C )*GET,_z2,common,,soptcm,,real,4
:C )*GET,_z3,common,,soptcm,,real,5
:C )*DEL,_zc
:C )*DIM,_zc,char,6
:C )*SET,_zc(1),'CQC','GRP','DSUM','SRSS','DDAM',' '
:C )*GET,_z5,common,,svcom,,real,122  ! center of rot    
:C )*GET,_z6,common,,svcom,,real,123
:C )*GET,_z7,common,,svcom,,real,124
:C )*GET,_z8,common,,svcom,,real,125 ! ang velo comp     
:C )*GET,_z9,common,,svcom,,real,126
:C )*GET,_z10,common,,svcom,,real,127
:C )/GO
:A    Settings
:D Settings for Single-Point Response Spectrum
:K #((PREP7*SOLUTION)+(SINGLEPT*NOFILTER))
:P (LINPLUS)
:H Hlp_UI_svtypeetc
Inp_NoApply
Cmd_SVTYP
 Fld_2
  Prm_[SVTYP]  Type of response spectr
  Typ_LIS_OPTIONB
  LIS_Seismic accel   ,2
  LIS_Seismic velocity,0
  LIS_Seismic displac ,3
  LIS_Force spectrum  ,1
  LIS_PSD             ,4
  Def_*GET(common,,soptcm,,int,44)
 Fld_3
  Prm_         Scale factor -
  Typ_REAL
  Def_*GET(common,,svcom,,real,121)
 Fld_0
  Typ_Lab
  Prm_         - applied to spectrum values
!
Cmd_SED
 Fld_0
  Prm_[SED]    Excitation direction
 Fld_0
  Prm_SEDX,SEDY,SEDZ
 Fld_2
  Prm_  Coordinates of point
  Typ_REAL3
  Def_*PAR(_z1),*PAR(_z2),*PAR(_z3)
 Fld_0
  Typ_Lab
  Prm_   - that forms line to define excitation direction
!
Fld_0
Typ_SEP
Cmd_ROCK
 Fld_0
  Prm_[ROCK]   Rocking Spectrum
 Fld_0
  Prm_CGX,CGY,CGZ
 Fld_2
  Prm_  Center of rotation -
  Typ_REAL3
   Def_*PAR(_z5),*PAR(_z6),*PAR(_z7)
 Fld_0
  Typ_Lab
  Prm_  - for rocking effect (global Cartesian)
 Fld_0
  Prm_OMX,OMY,OMZ
 Fld_5
  Prm_  Angular velocity components -
  Typ_REAL3
   Def_*PAR(_z8),*PAR(_z9),*PAR(_z10)
 Fld_0
  Typ_Lab
  Prm_  - (global Cartesian)
:E END
:! 
:N Fnc_SV_stat
:S    213,   159,    47
:T Cmd_N
:C )! Fnc_SV_stat
:A    Show Status
:D Single-Point Spectrum Status
:K #((PREP7*SOLUTION)+(SINGLEPT*NOFILTER))
Inp_P
Cmd_SPTOPT
! Exclude_from_paths
Cmd_STAT
:E END
:! 
:N Fnc_SWADD3
:S    963,   153,   803
:T Command
:C )! Fnc_SWGADD3
:A    Add More Surfaces
:D Add More Surfaces
:K #(PREP7)
:P (FULL_ANS)
:H Hlp_C_SWADD
Cmd_SWADD
 Fld_0
  Typ_Lab
  Prm_[SWADD]  Create Elements (Contact and Beam) at SpotWeld
 Fld_2
  Prm_Ecomp  Element component name
  Typ_LIS_OPTIONB
  LIS_*READ,CM
 Fld_3
  Prm_SHRD   Search radius
  Typ_REAL
  Def_Blank
 Fld_4
  Prm_NCM3   3rd Area number
  Typ_INT
  Def_*PAR(_z(1))
 Fld_5
  Prm_NCM4   4th Area number
  Typ_INT
  Def_*PAR(_z(2))
 Fld_6
  Prm_NCM5   5th Area number
  Typ_INT
  Def_*PAR(_z(3))
 Fld_7
  Prm_NCM6   6th Area number
  Typ_INT
  Def_*PAR(_z(4))
 Fld_8
  Prm_NCM7   7th Area number
  Typ_INT
  Def_*PAR(_z(5))
 Fld_9
  Prm_NCM8   8th Area number
  Typ_INT
  Def_*PAR(_z(6))
 Fld_10
  Prm_NCM9   9th Area number
  Typ_INT
  Def_*PAR(_z(7))
 Fld_11
  Prm_NCM10  10th Area number
  Typ_INT
  Def_*PAR(_z(8))
 Fld_12
  Prm_NCM11  11th Area number
  Typ_INT
  Def_*PAR(_z(9))
:E END
:! 
:N Fnc_SWADD_an
:S    295,   110,   178
:T Cmd_P
:C )! Fnc_SWADD_an
:A    By Areas
:D By Areas
:H Hlp_C_SWADD
Inp_P
Cmd_)/NOPR
Cmd_)*DEL,_z
Cmd_)*DIM,_z,,9
Cmd_)*SET,_z(1)
 Fld_2
  Prm_[SWADD]  Pick or enter areas to be welded
  Typ_AREA
  Min_1
  Cnt_9
  PFM_2
!
Cmd_)/GO
Cal_Fnc_SWADD3
:E END
:! 
:N Fnc_SWADD_cn
:S   1204,   157,  1040
:T Command
:C )! Fnc_SWGADD_cn
:A    By Node Component
:D By Node Component
:K #(PREP7)
:P (FULL_ANS)
:H Hlp_C_SWGEN
Cmd_SWGEN
 Fld_0
  Typ_Lab
  Prm_[SWADD]  Create Elements (Contact and Beam) at SpotWeld
 Fld_2
  Prm_Ecomp  Element component name
  Typ_LIS_OPTIONB
  LIS_*READ,CM
 Fld_3
  Prm_SHRD   Search radius
  Typ_REAL
  Def_Blank
 Fld_4
  Prm_NCM3   3rd surf node component
  Typ_LIS_OPTIONB
  LIS_*READ,CM
 Fld_5
  Prm_NCM4   4th surf node component
  Typ_LIS_OPTIONB
  LIS_     " "
  LIS_*READ,CM
 Fld_6
  Prm_NCM5   5th surf node component
  Typ_LIS_OPTIONB
  LIS_     " "
  LIS_*READ,CM
 Fld_7
  Prm_NCM6   6th surf node component
  Typ_LIS_OPTIONB
  LIS_     " "
  LIS_*READ,CM
 Fld_8
  Prm_NCM7   7th surf node component
  Typ_LIS_OPTIONB
  LIS_     " "
  LIS_*READ,CM
 Fld_9
  Prm_NCM8   8th surf node component
  Typ_LIS_OPTIONB
  LIS_     " "
  LIS_*READ,CM
 Fld_10
  Prm_NCM9   9th surf node component
  Typ_LIS_OPTIONB
  LIS_     " "
  LIS_*READ,CM
 Fld_11
  Prm_NCM10  10th surf node component
  Typ_LIS_OPTIONB
  LIS_     " "
  LIS_*READ,CM
 Fld_12
  Prm_NCM11  11th surf node component
  Typ_LIS_OPTIONB
  LIS_     " "
  LIS_*READ,CM
:E END
:! 
:N Fnc_SWDEL
:S    305,   138,   160
:T Command
:C )! Fnc_SWDEL
:A    Delete
:D Delete SpotWelds
:K #(PREP7)
:P (FULL_ANS)
:H Hlp_C_SWDEL
Cmd_SWDEL
 Fld_0
  Typ_Lab
  Prm_Delete SpotWelds
 Fld_2
  Prm_Ecomp  Element component name
  Typ_LIS_OPTIONB
  LIS_     "ALL"
  LIS_*READ,CM
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_SWDLIS
:S    373,   151,   215
:T Cmd
:C )!  Fnc_SWDLIS
:A SpotWeld Solution
:D List SpotWeld Solution
:K (POST1)
:P (FULL_ANS)
:H Hlp_C_SWLIST
Cmd_SWLIST
 Fld_0
  Typ_Lab
  Prm_[SWLIST]  List SpotWeld Solution
 Fld_0
  Typ_Lab
  Prm_List SpotWelds
 Fld_2
  Prm_Ecomp  Element component name
  Typ_LIS_OPTIONB
  LIS_     "ALL"
  LIS_*READ,CM
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_SWGEN2
:S   1324,   356,   961
:T Command
:C )! Fnc_SWGEN2
:A    Create New SpotWeld
:C )/NOPR
:C )*DEL,_z1
:C )*DEL,_z2
:C )*DEL,_z3
:C )*GET,_z3,ACTIVE,0,TYPE
:C ) _z2=ETYIQR(_z3,-2)
:C )*IF,_z2,EQ,188,THEN
:C ) _z1='DEFORMED'
:C )*ELSE
:C ) _z1='RIGID'
:C )*ENDIF
:C )/GOPR
:D Create Elements at SpotWeld
:K #(PREP7)
:P (FULL_ANS)
:H Hlp_C_SWGEN
Cmd_SWGEN
 Fld_0
  Typ_Lab
  Prm_[SWGEN]  Create Elements (Contact and Beam) at SpotWeld
 Fld_0
  Prm_SpotWeld Type: %_z1%
 Fld_2
  Prm_Ecomp  Element component name
  Typ_CHAR,8
 Fld_3
  Prm_SWRD   SpotWeld radius
  Typ_REAL
  Def_Blank
 Fld_4
  Prm_NCM1   1st surf node component
  Typ_LIS_OPTIONB
  LIS_*READ,CM
 Fld_5
  Prm_NCM2   2nd surf node component
  Typ_LIS_OPTIONB
  LIS_*READ,CM
 Fld_6
  Prm_SND1   1st SpotWeld Node number
  Typ_INT
  Def_*PAR(_z(1))
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_(The following inputs are optional)
 Fld_7
  Prm_SND2   2nd SpotWeld Node number
  Typ_INT
  Def_*PAR(_z(2))
 Fld_8
  Prm_SHRD   Search radius
  Typ_REAL
  Def_Blank
 Fld_9
  Prm_DIRX   SW normal - x
  Typ_REAL
  Def_Blank
 Fld_10
  Prm_DIRY   SW normal - y
  Typ_REAL
  Def_Blank
 Fld_11
  Prm_DIRZ   SW normal - z
  Typ_REAL
  Def_Blank
 Fld_12
  Prm_ITTY   Target type ID
  Typ_INT
  Def_Blank
 Fld_13
  Prm_ICTY   Contact type ID
  Typ_INT
  Def_Blank
:E END
:! 
:N Fnc_SWGEN3
:S   1298,   356,   935
:T Command
:C )! Fnc_SWGEN3
:A    Create New SpotWeld
:C )/NOPR
:C )*DEL,_z1
:C )*DEL,_z2
:C )*DEL,_z3
:C )*GET,_z3,ACTIVE,0,TYPE
:C ) _z2=ETYIQR(_z3,-2)
:C )*IF,_z2,EQ,188,THEN
:C ) _z1='DEFORMED'
:C )*ELSE
:C ) _z1='RIGID'
:C )*ENDIF
:C )/GOPR
:D Create Elements at SpotWeld
:K #(PREP7)
:P (FULL_ANS)
:H Hlp_C_SWGEN
Cmd_SWGEN
 Fld_0
  Typ_Lab
  Prm_[SWGEN]  Create Elements (Contact and Beam) at SpotWeld
 Fld_0
  Prm_SpotWeld Type: %_z1%
 Fld_2
  Prm_Ecomp  Element component name
  Typ_CHAR,8
 Fld_3
  Prm_SWRD   SpotWeld radius
  Typ_REAL
  Def_Blank
 Fld_4
  Prm_NCM1   1st Area number
  Typ_INT
  Def_*PAR(_z(1))
 Fld_5
  Prm_NCM2   2nd Area number
  Typ_INT
  Def_*PAR(_z(2))
 Fld_6
  Prm_SND1   1st SpotWeld Node number
  Typ_INT
  Def_*PAR(_z(3))
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_(The following inputs are optional)
 Fld_7
  Prm_SND2   2nd SpotWeld Node number
  Typ_INT
  Def_*PAR(_z(4))
 Fld_8
  Prm_SHRD   Search radius
  Typ_REAL
  Def_Blank
 Fld_9
  Prm_DIRX   SW normal - x
  Typ_REAL
  Def_Blank
 Fld_10
  Prm_DIRY   SW normal - y
  Typ_REAL
  Def_Blank
 Fld_11
  Prm_DIRZ   SW normal - z
  Typ_REAL
  Def_Blank
 Fld_12
  Prm_ITTY   Target type ID
  Typ_INT
  Def_Blank
 Fld_13
  Prm_ICTY   Contact type ID
  Typ_INT
  Def_Blank
:E END
:! 
:N Fnc_SWGEN_an
:S    410,   108,   295
:T Cmd_P
:C )! Fnc_SWGEN_an
:A    By Area
:D By Area
:H Hlp_C_SWGEN
Inp_P
Cmd_)/NOPR
Cmd_)*DEL,_z
Cmd_)*DIM,_z,,4
Cmd_)*SET,_z(1)
 Fld_2
  Prm_[SWGEN]  Pick or enter two areas to be welded
  Typ_AREA
  Min_2
  Cnt_2
  PFM_2
Cmd_)/NOPR
Cmd_)*SET,_z(3)
Fld_2
Prm_[SWGEN]  Pick/enter one or two nodes to Spotweld
Typ_NODE
Min_1
Cnt_2
PFM_2
!
Cmd_)/GO
Cal_Fnc_SWGEN3
:E END
:! 
:N Fnc_SWGEN_cn
:S    309,   128,   174
:T Cmd_P
:C )! Fnc_SWGEN_cn
:A    By Node Component
:D By Node Component
:H Hlp_C_SWGEN
Inp_P
Cmd_)/NOPR
Cmd_)*DEL,_z
Cmd_)*DIM,_z,,2
Cmd_)*SET,_z(1)
Fld_2
Prm_[SWGEN]  Pick/enter one or two nodes to Spotweld
Typ_NODE
Min_1
Cnt_2
PFM_2
!
Cmd_)/GO
Cal_Fnc_SWGEN2
:E END
:! 
:N Fnc_SWLIST
:S    303,   137,   159
:T Command
:C )! Fnc_SWLIST
:A    List
:D List SpotWelds
:K #(PREP7)
:P (FULL_ANS)
:H Hlp_C_SWLIST
Cmd_SWLIST
 Fld_0
  Typ_Lab
  Prm_List SpotWelds
 Fld_2
  Prm_Ecomp  Element component name
  Typ_LIS_OPTIONB
  LIS_     "ALL"
  LIS_*READ,CM
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_SXFil
:S    216,   175,    34
:T Cmd_N
:C )! Fnc_SXFil
:C )! The purpose of this block is to make the conversion
:C )! from UIDL to EUIDL function properly
:A VT
:K vt
Inp_P
! Exclude_from_paths
Cmd_)!
:E END
:! 
:N Fnc_SYNCRO
:S    381,   122,   252
:T Command
:C )! Fnc_SYNCHRO
:A Synchronous
:D Specifies the ratio
:H Hlp_C_SYNCHRO
Cmd_SYNCHRO
Fld_0
 Typ_Lab
  Prm_[SYNCRO]  Excitation frequency is synchronous or asynchronous ?
Fld_2
 Prm_Excitation Freq/Freq of rot.vel [RATIO]
 Typ_Lis_OptionB
 Typ_REAL
Fld_3
 Prm_Rotating component name[CM_NAME]
 Typ_Lis_OptionB
 Lis_*READ,CM  
:E END
:! 
:N Fnc_SecLib
:S    381,   123,   251
:T Cmd
:C )! Fnc_SecLib
:A Library Path
:D Set Section Library Path
:H Hlp_C_/SECLIB
Cmd_/SECLIB
 Fld_0
  Typ_Lab
  Prm_[/SECLIB]  Set default Section Library path
 Fld_2
  Prm_OPTION
   Typ_LIS_OptionB
   LIS_Set READ path   ,READ
   LIS_Report STATUS   ,STATUS
   Def_READ
 Fld_3
  Prm_PATH   Path for READING files
   Typ_CHAR,64,32
:E END
:! 
:N Fnc_SecRead
:S   1059,   714,   338
:T Cmd
:C )! Fnc_SecRead
:C )/NOPR
:C )*DEL,_zc
:C )*DEL,_zp
:C )*SET,_zc,'/*.SECT*'
:C )*SET,_zp,'\*.SECT*'
:C )*GET,_z2,common,,sectionc,,chr8,5
:C )*IF,_z2,NE,'OFF',THEN
:C )*GET,_z3,common,,sectionc,,chr8,7
:C )*GET,_z4,common,,sectionc,,chr8,9
:C )*GET,_z5,common,,sectionc,,chr8,11
:C )*GET,_z6,common,,sectionc,,chr8,13
:C )*GET,_z7,common,,sectionc,,chr8,15
:C )*GET,_z8,common,,sectionc,,chr8,17
:C )*GET,_z9,common,,sectionc,,chr8,19
:C )*ELSE
:C )*SET,_z2,' '
:C )*SET,_z3,' '
:C )*SET,_z4,' '
:C )*SET,_z5,' '
:C )*SET,_z6,' '
:C )*SET,_z7,' '
:C )*SET,_z8,' '
:C )*SET,_z9,'.'
:C )*ENDIF
:C )/GO
:A Import Library
:D Import Section Library File
:H Hlp_C_SECREAD
Inp_NoApply
Cmd_SECREAD
 Fld_0
  Typ_Lab
  Prm_[SECREAD]  Read a file containing Section properties
 Fld_2
  Prm_FILE    Section library file
  Typ_FILE
K_LN(intelnt+alphant)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zc%)
K_LN(INTELNT*ALPHANT)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zp%)
 Fld_5
  Typ_Def_LIBRARY
:E END
:! 
:N Fnc_SecWrite_A
:S    707,   401,   299
:T Cmd
:C )! Fnc_SecWrite_A
:C )/NOPR
:C )*create,ansuitmp
:C )*msg,ui,
:C )Line element sizes may need to be specified for &
:C )desired cross-section mesh.  Please refer to the &
:C )LESIZE command.
:C )*end
:C )/input,ansuitmp
:C )_z103=etyiqr(0,14)
:C )_z101=_z103+1
:C )et,_z101,82
:C )APLOT
:C )/GO
:A Write From Areas
:D Select areas
:H Hlp_C_SECWRITE
Inp_P
! Cust_Cmd_SECWRITE
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)CM,_Y,AREA
! Exclude_from_paths
Cmd_)ASEL
 Fld_5
  Prm_Pick or enter areas where material exists 
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_)CM,_Y1,AREA
! Exclude_from_paths
Cmd_)CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_SecWrite_B
:E END
:! 
:N Fnc_SecWrite_B
:S    423,   121,   295
:T Cmd
:C )! Fnc_SecWrite_B
:A   Write Section
:D Real Cells
:H Hlp_C_SECWRITE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)CMSEL,S,_Y1
Cmd_)/OUT,ansuitmp
Cmd_)ACLE,ALL
Cmd_)/OUT
Cmd_)AATT
 Fld_2
  Typ_Def_-1
 Fld_4
  Typ_Def_*PAR(_z101)
! Exclude_from_paths
Cmd_)CMSEL,S,_Y
! Exclude_from_paths
Cmd_)CMDELE,_Y
! Exclude_from_paths
Cmd_)CMDELE,_Y1
Cmd_)/GO
Cal_Fnc_SecWrite_F
:E END
:! 
:N Fnc_SecWrite_F
:S   1294,   879,   408
:T Cmd
:C )! Fnc_SecWrite_F
:C )/NOPR
:C )CM,_Y,AREA
:C )ASEL,S,TYPE,,_z101
:C )AMES,ALL
:C )CMSEL,S,_Y
:C )CMDELE,_Y
:C )CM,_Y,ELEM
:C )ESEL,S,TYPE,,_z101
:C )NSLE
:C )EPLO
:C )CMSEL,S,_Y
:C )CMDELE,_Y
:C )*DEL,_zc
:C )*DEL,_zp
:C )*SET,_zc,'/*.SECT*'
:C )*SET,_zp,'\*.SECT*'
:C )*GET,_z2,common,,sectionc,,chr8,5
:C )*IF,_z2,NE,'OFF',THEN
:C )*GET,_z3,common,,sectionc,,chr8,7
:C )*GET,_z4,common,,sectionc,,chr8,9
:C )*GET,_z5,common,,sectionc,,chr8,11
:C )*GET,_z6,common,,sectionc,,chr8,13
:C )*GET,_z7,common,,sectionc,,chr8,15
:C )*GET,_z8,common,,sectionc,,chr8,17
:C )*GET,_z9,common,,sectionc,,chr8,19
:C )*ELSE
:C )*SET,_z2,' '
:C )*SET,_z3,' '
:C )*SET,_z4,' '
:C )*SET,_z5,' '
:C )*SET,_z6,' '
:C )*SET,_z7,' '
:C )*SET,_z8,' '
:C )*SET,_z9,'.'
:C )*ENDIF
:C )/GO
:A SECWRITE
:D Write Section Library File
:H Hlp_C_SECWRITE
Inp_NoApply
Cmd_! SECWRITE
Cmd_)SECWRITE
 Fld_0
  Typ_Lab
  Prm_[SECWRITE]  Write a file containing User Defined Mesh
 Fld_2
  Prm_FILE    Section library file
  Typ_FILE_INLINE
K_LN(intelnt+alphant)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zc%)
K_LN(INTELNT*ALPHANT)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zp%)
 Fld_5
  Typ_Def_*PAR(_z101)
!
Cmd_)/NOPR
Cmd_)/GO
Cal_Fnc_SecWrite_X
:E END
:! 
:N Fnc_SecWrite_X
:S    222,   202,    13
:T Cmd
:C )! Fnc_SecWrite_X
:C )/NOPR
:C )CM,_Y,AREA
:C )ASEL,S,TYPE,,_z101
:C )ACLE,ALL
:C )CMSEL,S,_Y
:C )CMDELE,_Y
:C )ETDEL,_z101
:C )/GO
:H Hlp_C_SECWRITE
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_SectControl
:S    822,   299,   516
:T Cmd
:C )! Fnc_SectControl
:C )/NOPR
:C )*get,_z1,common,,sectionc,,int,6
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A    Sect Control
:D Section Control
:K (PR_STRUC*pr_set)
:H Hlp_C_SECCONTROL
! Exclude_from_paths
Cmd_SCURRENT
 Fld_0
  Typ_Lab
  Prm_Section Control Parameters
 Fld_2
  Prm_Section ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
 Fld_0
  Typ_Sep
Cmd_SECCONTROL
 Fld_2
  Prm_Transverse Shear Stiffness   TXZ
  Typ_Real
  Def_*GET(common,,sectionc,,real,53)
 Fld_4
  Prm_Transverse Shear Stiffness   TXY
  Typ_Real
  Def_*GET(common,,sectionc,,real,55)
 Fld_5
  Prm_Added Mass (Mass/Length)  ADDMAS
  Typ_Real
  Def_*GET(common,,sectionc,,real,56)
:E END
:! 
:N Fnc_Sect_EREF
:S    495,   146,   342
:T Cmd_P
:A Refine Mesh
:D Refine mesh at elements
:C )!Fnc_Sect_EREF
:C )/NOPR
:C )/GO
:H Hlp_C_EREFINE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)CM,_Y,ELEM
! Exclude_from_paths
Cmd_)ESEL
 Fld_5
  Prm_[EREF]  Pick or enter elements for refinement
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_)CM,_Y1,ELEM
! Exclude_from_paths
Cmd_)CMSEL,S,_Y
! Exclude_from_paths
Cmd_)CMDELE,_Y
Cmd_)_BSAVE=0
Cmd_)/GO
!Cal_Fnc_Sect_EREF_1
:E END
:! 
:N Fnc_Sect_EREF_1
:S    430,   155,   268
:T Cmd
:A Refine Mesh at ELEM
:D Refine Mesh at Element
:C )!Fnc_Sect_EREF_1
:C )/NOPR
:C )/GO
:H Hlp_C_EREFINE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_0
Typ_Lab
Prm_[EREF] Refine mesh at elements
 Fld_2
  Prm_LEVEL   Level of refinement
  Typ_Lis_OptionB
  Lis_1 (Minimal),1
  Lis_2     ,2
  Lis_3     ,3
  Lis_4     ,4
  Lis_5 (Maximum),5
  Def_1
Cmd_)/GO
Cal_Fnc_Sect_EREF_ex
:E END
:! 
:N Fnc_Sect_EREF_ex
:S    445,   145,   293
:T Cmd
:C )! Fnc_Sect_EREF_ex
:C )/NOPR
:C )*del,_zpop
:C )*get,_zpop,common,,d3com2,,int,31
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)/UIS,MSGPOP,3
Cmd_)EREF
 Fld_2
 Typ_Def__Y1
 Fld_3
 Typ_Def_
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
 Typ_Def_0
 Fld_7
 Typ_Def_0
 Fld_8
 Typ_Def_0
! Exclude_from_paths
Cmd_)CMDELE,_Y1
Cmd_)/UIS,MSGPOP
 Fld_2
  Typ_Def_*PAR(_zpop)
Cmd_)/GO
Cal_Fnc_RaiseSectMen
:E END
:! 
:N Fnc_SetUp_aux12
:S    673,   186,   480
:T Command
:C )! Fnc_SetUp_aux12
:A    Other Settings
:D Radiation Matrix Settings
:K #(AUX12)
:K (pr_cfd+cfd)
:P (THERMAL)
:H Hlp_UI_setupaux
Inp_NoApply
Cmd_STEF
 Fld_2
  Typ_REAL
  Prm_[STEF]  Stefan-Boltzmann Const.
  Def_0.119E-10
! 
Fld_0
Typ_Sep
! 
Cmd_GEOM
 Fld_0
  Typ_Lab
  Prm_[GEOM]  Geometry Specification
 Fld_2
  Prm_K2D   Type of geometry
  Typ_LIS_OptionB
  LIS_3-D geometry    ,0
  LIS_2-D geometry    ,1
  Def_0
 Fld_3
  Prm_NDIV  No. of divisions 
  Typ_INT
  Def_0
 Fld_0
  Typ_Lab
  Prm_      (for 2-D axisymmetric)
! 
Fld_0
Typ_Sep
! 
Cmd_SPACE
 Fld_2
  Typ_INT
  Prm_[SPACE]  Space node
  Def_blank
:E END
:! 
:N Fnc_ShellAddEdit
:S    282,   112,   163
:T Cmd
:C )! Fnc_ShellAddEdit
:A    Add / Edit
:K #(PREP7*SOLUTION)
Inp_P
! Cust_Cmd_SECTYPE
! Cust_Cmd_SECDATA
! Cust_Cmd_SECOFFSET
! Cust_Cmd_SECCONTROL
! Cust_Cmd_SECFUNCTION
Cmd_)~eui,'::euidl::element::shell::section::create'
:E End
:! 
:N Fnc_Shpp_Check
:S    914,   543,   364
:T Command
:C )! Fnc_Shpp_Check
:C )/NOPR
:C )*GET,_z1,common,,cfprp7,,int,102
:C )*IF,_z1,eq,0,then
:C )_z3='ON'
:C )*ELSEIF,_z1,eq,1,then
:C )_z3='WARN'
:C )*ELSEIF,_z1,eq,-1,then
:C )_z3='ON'
:C )*ELSE
:C )_z3='OFF'
:C )*ENDIF
:C )*GET,_z4,common,,cfprp7,,int,58   ! model-fea checking    
:C )*IF,_z4,EQ,1,THEN
:C )_z5='NOCHECK'
:C )*ELSEIF,_Z4,EQ,2,THEN
:C )_z5='CHECK'
:C )*ELSE
:C )_z5='STAT'
:C )*ENDIF
:C )/GO
:A Shape Checking
:D Shape Checking Controls
:K #(PREP7)+(igesfail)
:H Hlp_C_SHPP
Inp_NoApply
Cmd_SHPP
 Fld_2
  Prm_[SHPP]  Level of shape checking
  Typ_LIS_OptionB
  LIS_On w/Error msg  ,ON  
  LIS_On w/Warning msg,WARN
  LIS_Off             ,OFF
  LIS_Status          ,STAT
  LIS_Restore Defaults,DEFA
  LIS_Summary         ,SUMMARY
  Def_*PAR(_z3)
Cmd_)!
  Fld_2
  Prm_Change Settings
  Typ_LOGI, No, Yes
  Def_0
Cal_Fnc_SHPP_change,2,eq,1,2
:E END
:! 
:N Fnc_Slide_Film
:S    264,   126,   131
:T Cmd_P
:A    Slide Film
:D Slide Film Fluid Element
:H Hlp_E_S4.139
:P (FULL_ANS)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Slide Film Fluid]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_219
Cal_Fnc_Slide_Film_1
:E END
:! 
:N Fnc_Slide_Film_1
:S   1516,   228,  1281
:T Command
:D Define FLUID139 - Slide Film Fluid Element
:H Hlp_E_S4.139
:H Hlp_C_R
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=139
:C )/go
:P (FULL_ANS)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_          Slide Film Fluid Element
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
 Fld_0
  Typ_Sep
Cmd_)*SET,_z(3)
Fld_2
Prm_DOF selection
Typ_LIS_OPTIONB
LIS_UX  (X-direction),1
LIS_UY  (Y-direction),2
LIS_UZ  (Z-direction),3
!
Cmd_)*SET,_z(4)
Fld_2
Prm_Flow model
Typ_LIS_OPTIONB
LIS_Couette flow (2 node),0
LIS_Stokes flow (32 node),1
!
Cmd_)*SET,_z(44)
Fld_2
Prm_Fluid flow approximation
Typ_LIS_OPTIONB
LIS_Continuum theory,0
LIS_First order slip flow,1
LIS_Extended slip flow ,2
!
Cmd_)/GO
! Exclude_from_paths
Cmd_R
!
Fld_0
  Typ_Sep
Fld_0
  Typ_Lab
  Prm_Real Constant Set Number %(I)_z(5)% for Side Film FLUID139
!
Fld_2
Typ_Def_*PAR(_z(5))
Fld_3
Prm_Gap separation               GAP 
Typ_Real
Def_*GET(rcon,_z(5),const,1)
!
Fld_4
Prm_Plate area                  AREA
Typ_Real
Def_*GET(rcon,_z(5),const,2)
!
Fld_5
Prm_Change Rate of Plate area   DADU
Typ_Real
Def_*GET(rcon,_z(5),const,3)
!
Fld_6
Prm_Ambient pressure            PAMB
Typ_Real
Def_*GET(rcon,_z(5),const,4)
!
! Exclude_from_paths
Cmd_RMORE
!
Fld_2
Prm_Ref.pressure for free path  PREF
Typ_Real
Def_*GET(rcon,_z(5),const,7)
!
Fld_3
Prm_Mean free path at ref. pres. MFP
Typ_Real
Def_*GET(rcon,_z(5),const,8)
!
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E END
:! 
:N Fnc_Spec_Exit
:S    203,   118,    78
:T Command
:C )! Fnc_Spec_Exit ORPHAN
:A Exit Species
:D Exit Species Panels
Inp_P
Cmd_/COM
 Fld_2
  Typ_DEF_Exit Species Panels
Cmd_*Set,_z1
Cmd_*Set,_z2
:E END
:! 
:N Fnc_Spec_VZ
:S   1588,   552,  1029
:T Command
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char4,1
:C )KEYW,SPEC1,0,SPEC2,0,SPEC3,0
:C )KEYW,SPEC4,0,SPEC5,0,SPEC6,0
:C )*if,_z1,eq,1,then
:C )KEYW,SPEC1,1
:C )*endif
:C )*if,_z1,eq,2,then
:C )KEYW,SPEC2,1
:C )*endif
:C )*if,_z1,eq,3,then
:C )KEYW,SPEC3,1
:C )*endif
:C )*if,_z1,eq,4,then
:C )KEYW,SPEC4,1
:C )*endif
:C )*if,_z1,eq,5,then
:C )KEYW,SPEC5,1
:C )*endif
:C )*if,_z1,eq,6,then
:C )KEYW,SPEC6,1
:C )*endif
:C )/GO
:C )! Fnc_Spec_VZ
:D Mass Fraction Constraints on %_z7%
:P (FLOTRAN)
:H Hlp_C_%_z8%
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_0
  Typ_LAB
  Prm_Apply Mass Fraction Constraints on Nodes for
 Fld_0
  Typ_SEP
 Fld_2
  K_FL(SPEC1)
  Prm_Select a species number
  Typ_LIS_RADIOB
      LIS_Species #1,1
 Fld_2
  K_FL(SPEC2)
  Prm_Select a species number
  Typ_LIS_RADIOB
      LIS_Species #1,1
      LIS_Species #2,2
 Fld_2
  K_FL(SPEC3)
  Prm_Select a species number
  Typ_LIS_RADIOB
      LIS_Species #1,1
      LIS_Species #2,2
      LIS_Species #3,3
 Fld_2
  K_FL(SPEC4)
  Prm_Select a species number
  Typ_LIS_RADIOB
      LIS_Species #1,1
      LIS_Species #2,2
      LIS_Species #3,3
      LIS_Species #4,4
 Fld_2
  K_FL(SPEC5)
  Prm_Select a species number
  Typ_LIS_RADIOB
      LIS_Species #1,1
      LIS_Species #2,2
      LIS_Species #3,3
      LIS_Species #4,4
      LIS_Species #5,5
 Fld_2
  K_FL(SPEC6)
  Prm_Select a species number
  Typ_LIS_RADIOB
      LIS_Species #1,1
      LIS_Species #2,2
      LIS_Species #3,3
      LIS_Species #4,4
      LIS_Species #5,5
      LIS_Species #6,6
Cal_Fnc_CFDLoad
:E END
:! 
:N Fnc_StLoad
:S   1938,   473,  1458
:T Command
:C )! Fnc_StLoad
:C )/NOPR
:C )*CSET,1,4
:C )*CSET,101,104
:C )*DEL,_vz
:C )*DIM,_vz,,2
:C )_vz(2)=0
:C )KEYW,sfelh,0
:C )KEYW,sflh,0
:C )KEYW,sfalh,0
:C )KEYW,sfllh,0
:C )KEYW,ktabf,0
:C )*IF,_z8,EQ,'SF',THEN
:C )KEYW,sflh,1
:C )*ELSEIF,_z8,EQ,'SFE',THEN
:C )KEYW,sfelh,1
:C )*ELSEIF,_z8,EQ,'SFA',THEN
:C )KEYW,sfalh,1
:C )*ELSEIF,_z8,EQ,'SFL',THEN
:C )KEYW,sfllh,1
:C )*ENDIF
:C)/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Cmd_)/NOPR
Cmd_)*SET,_z4
!
Cmd_)*SET,_vz(1)
 Fld_2
  Prm_[%_z8%] Apply %_z9% on %_z7% as a
  Typ_Lis_OptioB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
 Fld_0
  Typ_Sep
 Fld_0
  K_FL(sfelh)
  Typ_Lab
  Prm_If Constant value then:
!
Cmd_)*SET,_z4
K_CM(SFELH)
Fld_2
K_FL(SFELH)
 Prm_LKEY  Load key, usually face no.
 Typ_Int
 Def_1
Fld_0
 K_FL(SFELH)
 Typ_Sep
Fld_0
 K_FL(SFELH)
 Typ_Lab
 Prm_If Constant value then:
!
Cmd_)*CSET,101,104
Fld_2
 Typ_REAL
 Def_Blank
 Prm_VALUE  Load %_z9% value
Fld_0
 K_FL(SFELH)
 Typ_Sep
Fld_0
 K_FL(SFELH)
 Typ_Lab
 Prm_      Optional %_z9% at other face nodes
Fld_0
 K_FL(SFELH)
 Typ_Lab
 Prm_      (leave blank for uniform %_z9% )
Fld_3
 K_FL(SFELH)
 Typ_REAL
 DEF_Blank
 Prm_VAL2   Load %_z9% at 2nd node
Fld_4
 K_FL(SFELH)
 Typ_REAL
 DEF_Blank
 Prm_VAL3   Load %_z9% at 3rd node
Fld_5
 K_FL(SFELH)
 Typ_REAL
 DEF_Blank
 Prm_VAL4   Load %_z9% at 4th node
!
Cmd_)*CSET,103,104
K_CM(SFALH*SFLLH)
Fld_0
 Typ_Sep
Fld_0
 K_FL(SFLLH)
 Typ_Lab
 Prm_If Constant value then:
Fld_0
 K_FL(SFLLH)
 Typ_Lab
 Prm_       Optional %_z9% values at end J of line
Fld_0
 K_FL(SFLLH)
 Typ_Lab
 Prm_       (leave blank for uniform %_z9% )
Fld_2
 K_FL(SFLLH)
 Typ_REAL
 Def_Blank
Fld_2
 K_FL(SFALH)
 Typ_Int
 Def_1
 Prm_LKEY  Load key, usually face no.
Fld_0
 K_FL(SFALH)
 Typ_Lab
 Prm_      (required only for shell elements)
!
Cmd_)/GO
  Cal_Fnc_StLoad2,2,EQ,1,3
  Cal_Fnc_StLoad4,2,EQ,2,3
  Cal_Fnc_StLoad6,2,EQ,3,3
:E END
:! 
:N Fnc_StLoad2
:S    142,   103,    32
:T Command
:C )! Fnc_StLoad2
:C )/NOPR
:C )keyw,ktabf,0
:C )/GO
Inp_P
Cmd_)!
  Cal_Fnc_StLoad50
:E END
:! 
:N Fnc_StLoad4
:S    289,   142,   140
:T Command
:C )! Fnc_StLoad4
:C )/NOPR
:C )keyw,ktabf,1
:C )/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Cmd_)/NOPR
Cmd_)*CSET,1,1
Fld_0
  Prm_Apply Table Loads
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
!
Cmd_)/GO
  Cal_Fnc_StLoad50
:E END
:! 
:N Fnc_StLoad50
:S   1509,    70,  1432
:T Command
:C )! Fnc_StLoad50
Inp_P
Cmd_)!
K_CM(SFELH+ktabf)
 Fld_1
  Typ_Def_*PAR(_z8)
 Fld_2
  Typ_Def__Y1
 Fld_3
  Typ_DEF_*PAR(_z4)
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_6
  Typ_DEF_*CPAR(101)
 Fld_7
  Typ_DEF_*CPAR(102)
 Fld_8
  Typ_DEF_*CPAR(103)
 Fld_9
  Typ_DEF_*CPAR(104)
!
Cmd_)!
K_CM(SFELH+KTABF)
 Fld_1
  Typ_Def_*PAR(_z8)
 Fld_2
  Typ_Def__Y1
 Fld_3
  Typ_DEF_*PAR(_z4)
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_8
  Typ_Lab
!
Cmd_)!
K_CM(SFALH+ktabf)
 Fld_1
  Typ_Def_*PAR(_z8)
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_DEF_*CPAR(103)
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Typ_DEF_*CPAR(101)
!
Cmd_)!
K_CM(SFALH+KTABF)
 Fld_1
  Typ_Def_*PAR(_z8)
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_DEF_*CPAR(103)
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_7
  Typ_Lab
!
Cmd_)!
K_CM(SFLLH+ktabf)
 Fld_1
  Typ_Def_*PAR(_z8)
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
Fld_4
 Typ_DEF_*CPAR(101)
Fld_5
 Typ_DEF_*CPAR(103)
!
Cmd_)!
K_CM(SFLLH+KTABF)
 Fld_1
  Typ_Def_*PAR(_z8)
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_6
  Typ_Lab
!
Cmd_)!
K_CM(SFLH+ktabf)
 Fld_1
  Typ_Def_*PAR(_z8)
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
Fld_4
 Typ_DEF_*CPar(101)
!
Cmd_)!
K_CM(SFLH+KTABF)
 Fld_1
  Typ_Def_*PAR(_z8)
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_6
  Typ_Lab
:E END
:! 
:N Fnc_StLoad6
:S    291,   142,   142
:T Command
:C )! Fnc_StLoad6
:C )/NOPR
:C )keyw,ktabf,1
:C )/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,1
Fld_0
  Prm_Apply Table Loads
Fld_2
  Prm_Name of new table
  Typ_Char,32,32
!
Cmd_)/GO
Cal_Fnc_StLoad7
:E END
:! 
:N Fnc_StLoad7
:S    738,   104,   627
:T Command
:C )! Fnc_StLoad7
:D Add New Table Load
:H Hlp_C_*DIM
! Exclude_from_paths
Cmd_*DIM
 Fld_0
  Typ_Lab
  Prm_[*DIM] Add New Table
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_TABLE
 Fld_4
  Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
  Prm_NameI   Variable for rows
  Typ_Char,8
 Fld_8
  Prm_NameJ   Variable for cols
  Typ_Char,8
 Fld_9
  Prm_NameK   Variable for planes
  Typ_Char,8
 Fld_10
  Prm_CSYSID  Coordinate System Id
  Typ_LIS_OptionB
  LIS_*READ,CSYS
!
Cmd_)!
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Options for new table parameter
   Typ_Lis_RadioB
     Lis_Edit on screen,1
     Lis_Read from file,2
!
  Cal_Fnc_StLoad8,2,EQ,1,2
  Cal_Fnc_StLoad9,2,EQ,2,2
:E END
:! 
:N Fnc_StLoad8
:S    270,   106,   157
:T Command
:C )! Fnc_StLoad8
:D Add New Table Load
:H Hlp_C_*VEDIT
Inp_P
!
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(1)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
!
Cmd_)!
  Cal_Fnc_StLoad50
:E END
:! 
:N Fnc_StLoad9
:S    303,   102,   194
:T Command
:C )! Fnc_StLoad9
:D Read from file
:H Hlp_C_*TREAD
Inp_NoApply
! Exclude_from_paths
Cmd_)*TREAD
  Fld_2
  Typ_Def_*CPAR(1)
  Fld_3
  Prm_File,ext,dir Read from file
  Typ_File
  Fld_6
  Prm_Nskip  Skipped lines number 
  Typ_Int
Cal_Fnc_StLoad8
:E END
:! 
:N Fnc_Staddtbl
:S   1360,   906,   447
:T Command
:C )! Fnc_Staddtbl
:C )/NOPR
:C )KEYW,ff,0
:C )KEYW,bf,0
:C )KEYW,dl,0
:C )KEYW,bfe,0
:C )*IF,_z7,EQ,'F',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'FK',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'D',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'DK',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'DL',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'DA',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'DL',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'BF',THEN
:C )KEYW,bf,1
:C )*ELSEIF,_z7,EQ,'BFL',THEN
:C )KEYW,bf,1
:C )*ELSEIF,_z7,EQ,'BFA',THEN
:C )KEYW,bf,1
:C )*ELSEIF,_z7,EQ,'BFE',THEN
:C )KEYW,bf,1
:C )*ELSEIF,_z7,EQ,'BFK',THEN
:C )KEYW,bf,1
:C )*ELSEIF,_z7,EQ,'BFV',THEN
:C )KEYW,bf,1
:C )*ENDIF
:C )*IF,_z7,EQ,'DL',THEN
:C )KEYW,dl,1
:C )*ENDIF
:C )*IF,_z7,EQ,'BFE',THEN
:C )KEYW,bfe,1
:C )*ENDIF
:C )/NOPR
:C )*SET,_z11,'TBL'
:C )/GOPR
:C)/GO
:D Apply %_z9% on %_z10%
:B Fnc_F_fm
:H Hlp_C_*DIM
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(13)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
Cmd_)!
K_CM(BF)
 Fld_1
  Typ_Def_*PAR(_z7)
 Fld_2
  Typ_Def_P51X
Fld_3
 Typ_DEF_TEMP
Fld_4
 K_FL(bfe)
 Dlm_%
Fld_4
 K_FL(BFE)
 Typ_def_*CPAR(1)
Fld_5
 K_FL(bfe)
 Typ_def_*CPAR(13)
 Dlm_%
Fld_5
 K_FL(BFE)
 Dlm_%
Fld_6
 K_FL(bfe)
 Typ_Lab
Fld_6
 K_FL(BFE)
 Typ_def_*CPAR(13)
 Dlm_%
Fld_7
 K_FL(BFE)
 Typ_Lab
Cal_Fnc_Stld
:E End
:! 
:N Fnc_Stat_Mesh
:S    177,   164,     6
:T Cmd
:C )! Fnc_Stat_Mesh
:C RSURF,STAT
:A Surface Mesh Status
:D Surface Mesh Status
:K #(PREP7*SOLUTION)
:H Hlp_C_RSURF
Fld_0
:E END
:! 
:N Fnc_Status
:S    163,   150,     6
:T Cmd
:C )! Fnc_Status
:C RSYMM,STAT
:A Symmetry Status
:D Symmetry Status
:K #(PREP7*SOLUTION)
:H Hlp_C_RSYMM
Fld_0
:E END
:! 
:N Fnc_Stld
:S   2367,   351,  2009
:T Command
:C )! Fnc_Stld
:C )/NOPR
:C )KEYW,dl,0
:C )KEYW,dk,0
:C )KEYW,d,0
:C )KEYW,tbl,0
:C )*IF,_z7,EQ,'DL',THEN
:C )KEYW,dl,1
:C )*ENDIF
:C )*IF,_z7,EQ,'DK',THEN
:C )KEYW,dk,1
:C )*ENDIF
:C )*IF,_z7,EQ,'D',THEN
:C )KEYW,d,1
:C )*ENDIF
:C )*IF,_z11,EQ,'TBL',THEN
:C )KEYW,tbl,1
:C )*ENDIF
:C)/GO
:C )! Fnc_Stld
Inp_P
Cmd_)!
K_CM(bf)
 Fld_1
  Typ_Def_*PAR(_z7)
 Fld_2
  Typ_Def_P51X
Fld_3
 K_FL(dk)
 Typ_def_*CPAR(1)
Fld_4
 K_FL(tbl*DL)
 Typ_def_*CPAR(2)
Fld_4
 K_FL(TBL+dl)
 Dlm_%
Fld_5
 K_FL(tbl)
 K_FL(dl*dk*d)
 K_FL(HARMONIC)
 Typ_def_*CPAR(3)
Fld_5
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(3)
Fld_5
 K_FL(tbl+DL)
 Typ_def_*CPAR(3)
Fld_5
 K_FL(TBL+DL)
 Dlm_%
Fld_5
 K_FL(TBL+dl)
 K_FL(D)
 Typ_def_*CPAR(10)
 Dlm_%
Fld_5
 K_FL(TBL+dl)
 Typ_def_*CPAR(13)
 Dlm_%
Fld_6
 K_FL(TBL+DL)
 Typ_def_*CPAR(13)
 Dlm_%
Fld_6
 K_FL(tbl+DL)
 K_FL(HARMONIC)
 Typ_def_*CPAR(4)
Fld_6
 K_FL(tbl+DK)
 K_FL(HARMONIC)
 Typ_def_*CPAR(4)
Fld_6
 K_FL(tbl+DK)
 K_FL(harmonic)
 Typ_def_*CPAR(4)
Fld_6
 K_FL(TBL+dl)
 Typ_Lab
Fld_7
 K_FL(TBL+DL)
 Dlm_%
Fld_7
 K_FL(tbl+DK)
 K_FL(HARMONIC)
 Typ_def_*CPAR(5)
Fld_7
 K_FL(tbl+DK)
 K_FL(harmonic)
 Typ_def_*CPAR(5)
Fld_7
 K_FL(TBL)
 K_FL(DK*D)
Fld_8
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(6)
Fld_8
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(harmonic)
 Typ_def_*CPAR(6)
Fld_8
 K_FL(TBL+DK)
 Typ_def_*CPAR(4)
Fld_8
 K_FL(TBL+D)
Fld_9
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(7)
Fld_9
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(harmonic)
 Typ_def_*CPAR(7)
Fld_9
 K_FL(TBL+DK)
 Typ_def_*CPAR(5)
Fld_10
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(8)
Fld_10
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(harmonic)
 Typ_def_*CPAR(8)
Fld_10
 K_FL(TBL)
 K_FL(DK*D)
 Typ_def_*CPAR(6)
Fld_11
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(9)
Fld_11
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(harmonic)
 Typ_def_*CPAR(9)
Fld_11
 K_FL(TBL)
 K_FL(DK*D)
 Typ_def_*CPAR(7)
Fld_12
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(10)
Fld_12
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(harmonic)
 Typ_def_*CPAR(10)
Fld_12
 K_FL(TBL)
 K_FL(DK*D)
 Typ_def_*CPAR(8)
Fld_13
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(11)
Fld_13
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(harmonic)
 Typ_def_*CPAR(11)
Fld_13
 K_FL(TBL)
 K_FL(DK*D)
 Typ_def_*CPAR(9)
Fld_14
 K_FL(TBL)
 K_FL(DK*D)
 Typ_def_*CPAR(10)
Fld_15
 K_FL(TBL+D)
 Typ_def_*CPAR(11)
:E END
:! 
:N Fnc_Stnewtbl
:S    268,   111,   150
:T Command
:C )! Fnc_Stnewtbl
:D Apply %_z9% on %_z10%
:H Hlp_C_%_z7% 
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,13,13
 Fld_0
  Prm_Apply Table Loads
 Fld_2
  Prm_Name of new table
  Typ_Char,32,32
!
 Cmd_)/GO
 Cal_Fnc_Stnewtbl2
:E END
:! 
:N Fnc_Stnewtbl2
:S    746,   108,   631
:T Command
:C )! Fnc_Stnewtbl2
:D Add New Table Load
:H Hlp_C_*DIM
! Exclude_from_paths
Cmd_*DIM
 Fld_0
  Typ_Lab
  Prm_[*DIM] Add New Table
 Fld_2
  Typ_Def_*CPAR(13)
 Fld_3
 Typ_Def_TABLE
 Fld_4
  Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
  Prm_NameI   Variable for rows
  Typ_Char,8
 Fld_8
  Prm_NameJ   Variable for cols
  Typ_Char,8
 Fld_9
  Prm_NameK   Variable for planes
  Typ_Char,8
 Fld_10
  Prm_CSYSID  Coordinate System Id
  Typ_LIS_OptionB
  LIS_*READ,CSYS
!
Cmd_)!
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Options for new table parameter
   Typ_Lis_RadioB
     Lis_Edit on screen,1
     Lis_Read from file,2
!
  Cal_Fnc_Staddtbl,2,EQ,1,2
  Cal_Fnc_Stnewtbl3,2,EQ,2,2
:E END
:! 
:N Fnc_Stnewtbl3
:S    305,   106,   192
:T Command
:C )! Fnc_Stnewtbl3
:D Read from file
:H Hlp_C_*TREAD
Inp_NoApply
! Exclude_from_paths
Cmd_)*TREAD
 Fld_2
  Typ_Def_*CPAR(13)
 Fld_3
  Prm_File,ext,dir Read from file
  Typ_File
 Fld_6
  Prm_Nskip  Skipped lines number
  Typ_Int
Cal_Fnc_Staddtbl
:E END
:! 
:N Fnc_Stoldtable
:S    296,   153,   136
:T Command
:C )! Fnc_Stoldtable
:C )/NOPR
:C )*SET,_z11,'TBL'
:C )KEYW,bf,0
:C )/GOPR
:D Apply %_z9% on %_z10%
Cmd_)/NOPR
Cmd_)*CSET,13,13
Fld_0
  Prm_Apply Table Loads
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
Cmd_)/GO
  Cal_Fnc_Stld
:E END
:! 
:N Fnc_Strain_Rate
:S    435,   333,    95
:T Command
:C )! Fnc_Strain_Rate
:C )/NOPR
:C )_z2=0
:C )*get,_z1,common,,stepcm,,int,158
:C )*if,_z1,eq,1,then
:C )_z2=1
:C )*endif
:C )/GOPR
:A Strn Rate Effect
:D Creep Option
:K #(PREP7*SOLUTION)
:K #((pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL)
:P (FULL_ANS)
:H Hlp_C_RATE
Inp_NoApply
Cmd_RATE
 Fld_2
  Prm_[RATE]  Strain Rate Effect
  Typ_LOGI,Off,On
  Def_*PAR(_z2)
:E END
:! 
:N Fnc_Stvalue
:S    157,   122,    28
:T Command
:C )! Fnc_Stvalue
:C )/NOPR
:C )KEYW,bf,0
:C )*SET,_z11,'XXX'
:C )/GOPR
Inp_P
Cmd_)!
  Cal_Fnc_Stld
:E END
:! 
:N Fnc_TALLOW
:S   1165,   178,   980
:T Command
:C )! Fnc_TALLOW
:A    Temp-depend
:D Temperature-dependent Allowable Stresses
:K #(POST1+RESULTS)
:P (LINPLUS)
:H Hlp_UI_tallow
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,4
 Fld_0
  Typ_Lab
  Prm_[TALLOW] [SALLOW]  Temperature-dependent Allowable Stresses
 Fld_0
  Typ_Lab
  Prm_      Enter up to six values of   Temperature     Stress
 Fld_2
  Prm_                   TEMP1,STRS1
  Typ_real2
  Def_*GET(common,,cpost1,,real,7),*GET(common,,cpost1,,real,1)
 Fld_4
  Prm_                   TEMP2,STRS2
  Typ_real2
  Def_*GET(common,,cpost1,,real,8),*GET(common,,cpost1,,real,2)
Cmd_)*CSET,5,8
 Fld_2
  Prm_                   TEMP3,STRS3
  Typ_real2
  Def_*GET(common,,cpost1,,real,9),*GET(common,,cpost1,,real,3)
 Fld_4
  Prm_                   TEMP4,STRS4
  Typ_real2
  Def_*GET(common,,cpost1,,real,10),*GET(common,,cpost1,,real,4)
Cmd_)*CSET,9,12
 Fld_2
  Prm_                   TEMP5,STRS5
  Typ_real2
  Def_*GET(common,,cpost1,,real,11),*GET(common,,cpost1,,real,5)
 Fld_4
  Prm_                   TEMP6,STRS6
  Typ_real2
  Def_*GET(common,,cpost1,,real,12),*GET(common,,cpost1,,real,6)
Cmd_)/GO
Cal_Fnc_TALLOW2
:E END
:! 
:N Fnc_TALLOW2
:S    431,    81,   343
:P (LINPLUS)
:T Command
:C )! Fnc_TALLOW2
Inp_P
Cmd_TALLOW
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(3)
 Fld_4
  Typ_Def_*CPAR(5)
 Fld_5
  Typ_Def_*CPAR(7)
 Fld_6
  Typ_Def_*CPAR(9)
 Fld_7
  Typ_Def_*CPAR(11)
Cmd_SALLOW
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_*CPAR(4)
 Fld_4
  Typ_Def_*CPAR(6)
 Fld_5
  Typ_Def_*CPAR(8)
 Fld_6
  Typ_Def_*CPAR(10)
 Fld_7
  Typ_Def_*CPAR(12)
:E END
:! 
:N Fnc_TALLOW_reset
:S    147,   123,    17
:T Cmd_N
:C )! Fnc_TALLOW_reset
:A    Reset Temps
:P (LINPLUS)
:H Hlp_C_TALLOW
Inp_P
Cmd_TALLOW
:E END
:! 
:N Fnc_TB
:S   3246,   863,  2376
:T Command
:C )! Fnc_TB
:C )/NOPR
:C )! 
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,44
:C )_zc(1)='BKIN','MKIN','MISO','BISO','ANISO','DP','ANAND','HYPER'
:C )_zc(9)='CREEP','SWELL','CONCR','MELAS','EVISC','ANEL','BH','PIEZ'
:C )_zc(17)='FAIL','WATER','PFLOW','USER','ALL',' ','NONE','MOONEY'
:C )_zc(25)='     ','    ','    ','PLAW','FOAM','HONE','COMP','KINH'
:C )_zc(33)='     ','    ','    ','    ','    ','CHAB','NLIS','    '
:C )_zc(41)='BOYCE','    ','    ','HILL'
:C )! 
:C )*get,_z8,common,,tblecm,,int,1  ! active table no.  
:C )*if,_z8,le,0,then
:C )_z8=23
:C )*elseif,_z8,gt,44,then
:C )_z8=22
:C )*endif
:C )_z8=_zc(_z8)
:C )! 
:C )*get,_z9,common,,tblecm,,int,2 ! mat no.
:C )*if,_z9,le,0,then
:C )_z9=1
:C )*endif
:C )/GO
:A Define/Activate
:D Define/Activate Data Table
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_TB
Inp_NoApply
Cmd_TB
 Fld_0
  Typ_Lab
  Prm_[TB]  Define/Active Data Table
 Fld_0
  Typ_Lab
  Prm_Active data table is  %_z8%  with  MAT = %(I)_z9%
 Fld_2
  Prm_Lab    Type of data table
  Typ_LIS_OptionB
   P_LN(FULL_ANS)
  LIS_Bilin kinem BKIN,BKIN
   P_LN(FULL_ANS)
  LIS_Multi kinem MKIN,MKIN
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Kin Harden  KINH,KINH
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Multi isotr MISO,MISO
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Bilin isotr BISO,BISO
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Hills Aniso HILL,HILL
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Anisotrop  ANISO,ANISO
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Drucker-Prag  DP,DP
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Anand plas ANAND,ANAND
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Multi elas MELAS,MELAS
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_User-define USER,USER
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Creep cons CREEP,CREEP
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Swelling   SWELL,SWELL
   P_LN(ELECMAG)
   K_LN(lsdyna)
  LIS_MagField data BH,BH
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Piezoelect  PIEZ,PIEZ
   P_LN(LINPLUS)
   K_LN(lsdyna)
  LIS_Compos fail FAIL,FAIL
   P_LN(FULL_ANS)
  LIS_Hyperelas MOONEY,MOONEY
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Boyce      BOYCE,BOYCE
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Chaboche    CHAB,CHAB
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Nonlin Iso  NLIS,NLIS
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Water motn WATER,WATER
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Anisotropic ANEL,ANEL
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Concrete   CONCR,CONCR
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Pipe flow  PFLOW,PFLOW
   P_LN(FULL_ANS)
  LIS_Viscoelast EVISC,EVISC
   P_LN(FULL_ANS)
   K_LN(LSDYNA)
  LIS_Explic Dyn  PLAW,PLAW
   P_LN(LSDYNA*FULL_ANS)
   K_LN(LSDYNA)
  LIS_Explic Dyn  FOAM,FOAM
   P_LN(LSDYNA*FULL_ANS)
   K_LN(LSDYNA)
  LIS_Explic Dyn  HONE,HONE
   P_LN(LSDYNA*FULL_ANS)
   K_LN(LSDYNA)
  LIS_Explic Dyn  COMP,COMP
  Def_*PAR(_z8)
 Fld_3
  Prm_MAT    Material ref. number
  Typ_INT
  Def_*PAR(_z9)
 Fld_0
  Typ_Sep
 Fld_0
 P_FL(LINPLUS)
  Typ_Lab
  Prm_The following apply only to some data table types
 Fld_4
 P_FL(LINPLUS)
  Prm_NTEMP  No. of temperatures 
  Typ_INT
  Def_Blank
 Fld_5
 P_FL(LINPLUS)
  Prm_NPTS   No. of data points/temp
  Typ_INT
  Def_Blank
 Fld_6
 P_FL(FULL_ANS)
  Prm_TBOPT  Data Table Options
  Typ_Int
:E END
:! 
:N Fnc_TBCOPY
:S   2857,   766,  2084
:T Command
:C )! Fnc_TBCOPY
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,44
:C )_zc(1)='BKIN','MKIN','MISO','BISO','ANISO','DP','ANAND','HYPER'
:C )_zc(9)='CREEP','SWELL','CONCR','MELAS','EVISC','ANEL','BH','PIEZ'
:C )_zc(17)='FAIL','WATER','PFLOW','USER','ALL',' ','NONE','MOONEY'
:C )_zc(25)='     ','    ','    ','PLAW','FOAM','HONE','COMP','KINH'
:C )_zc(33)='     ','    ','    ','    ','    ','CHAB','NLIS','    '
:C )_zc(41)='BOYCE','    ','    ','HILL'
:C )! 
:C )*get,_z8,common,,tblecm,,int,1  ! active table no.   
:C )*if,_z8,eq,0,then
:C )_z8=23
:C )*endif
:C )_z8=_zc(_z8)
:C )! 
:C )*get,_z9,common,,tblecm,,int,2 ! mat no.
:C )/GO
:A Copy
:D Copy Data Table
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_TBCOPY
Cmd_TBCOPY
 Fld_0
  Typ_Lab
  Prm_[TBCOPY]  Copy Data Table for Nonlinear Materials
 Fld_0
  Typ_Lab
  Prm_Active data table is  %_z8%  with  MAT = %(I)_z9%
 Fld_2
  Prm_Lab    Type of data table
  Typ_LIS_OptionB
   P_LN(FULL_ANS)
  LIS_Bilin kinem BKIN,BKIN
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Multi kinem MKIN,MKIN
   P_LN(FULL_ANS)
  LIS_Kin Harden  KINH,KINH
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Multi isotr MISO,MISO
   P_LN(FULL_ANS*LSDYNA)
  LIS_Bilin isotr BISO,BISO
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Hills Aniso HILL,HILL
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Anisotrop  ANISO,ANISO
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Drucker-Prag  DP,DP
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Anand plas ANAND,ANAND
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Multi elas MELAS,MELAS
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_User-define USER,USER
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Creep cons CREEP,CREEP
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Swelling   SWELL,SWELL
   P_LN(ELECMAG)
   K_LN(lsdyna)
  LIS_MagField data BH,BH
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Piezoelect  PIEZ,PIEZ
   P_LN(LINPLUS)
   K_LN(lsdyna)
  LIS_Compos fail FAIL,FAIL
   P_LN(LSDYNA*FULL_ANS)
  LIS_Hyperelas MOONEY,MOONEY
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Boyce      BOYCE,BOYCE
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Chaboche    CHAB,CHAB
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Nonlin Iso  NLIS,NLIS
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Water motn WATER,WATER
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Anisotropic ANEL,ANEL
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Concrete   CONCR,CONCR
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Pipe flow  PFLOW,PFLOW
   P_LN(LSDYNA*FULL_ANS)
  LIS_Viscoelast EVISC,EVISC
   P_LN(LSDYNA*FULL_ANS)
  LIS_Explic Dyn  PLAW,PLAW
   P_LN(LSDYNA*FULL_ANS)
  LIS_Explic Dyn  FOAM,FOAM
   P_LN(LSDYNA*FULL_ANS)
  LIS_Explic Dyn  HONE,HONE
   P_LN(LSDYNA*FULL_ANS)
  LIS_Explic Dyn  COMP,COMP
  Def_*PAR(_z8)
 Fld_0
  Prm_ 
 Fld_3
  Prm_MATF  Copy from material no.
  Typ_INT
  Def_*PAR(_z9)
 Fld_4
  Prm_MATT  Copy to material no.
  Typ_INT
  Def_Blank
:E End
:! 
:N Fnc_TBDELE
:S   3047,   814,  2226
:T Command
:C )! Fnc_TBDELE
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,5
:C )! 
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,44
:C )_zc(1)='BKIN','MKIN','MISO','BISO','ANISO','DP','ANAND','HYPER'
:C )_zc(9)='CREEP','SWELL','CONCR','MELAS','EVISC','ANEL','BH','PIEZ'
:C )_zc(17)='FAIL','WATER','PFLOW','USER','ALL',' ','NONE','MOONEY'
:C )_zc(25)='    ','    ','    ','PLAW','FOAM','HONE','COMP','KINH'
:C )_zc(33)='     ','    ','    ','    ','    ','CHAB','NLIS','    '
:C )_zc(41)='BOYCE','    ','    ','HILL'
:C )! 
:C )*get,_z8,common,,tblecm,,int,1  ! active table no.  
:C )*if,_z8,eq,0,then
:C )_z8=23
:C )*endif
:C )_z7=_z8
:C )_z8=_zc(_z8)
:C )! 
:C )*get,_z9,common,,tblecm,,int,2 ! mat no.
:C )/GO
:A Delete
:D Delete Data Table
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_TBDELE
Cmd_)/NOPR
Cmd_)*set,_z(1)
 Fld_0
  Typ_Lab
  Prm_[TBDELE]  Delete Data Table for Nonlinear Materials
 Fld_0
  Typ_Lab
  Prm_Active data table is  %_z8%  with  MAT = %(I)_z9%
 Fld_2
  Prm_Lab    Type of data table
  Typ_LIS_OptionB
  LIS_Active table    ,22
  LIS_All types    ALL,21
   P_LN(FULL_ANS)
  LIS_Bilin kinem BKIN,1
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Multi kinem MKIN,2
   P_LN(FULL_ANS)
  LIS_Kin Harden  KINH,32
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Multi isotr MISO,3
   P_LN(LSDYNA*FULL_ANS)
  LIS_Bilin isotr BISO,4
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Hills Aniso HILL,44
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Anisotrop  ANISO,5
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Drucker-Prag  DP,6
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Anand plas ANAND,7
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Multi elas MELAS,12
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_User-define USER,20
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Creep cons CREEP,9
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Swelling   SWELL,10
   P_LN(ELECMAG)
   K_LN(lsdyna)
  LIS_MagField data BH,15
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Piezoelect  PIEZ,16
   P_LN(LINPLUS)
   K_LN(lsdyna)
  LIS_Compos fail FAIL,17
   P_LN(FULL_ANS*LSDYNA)
  LIS_Hyperelas MOONEY,24
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Boyce      BOYCE,41
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Chaboche    CHAB,38
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Nonlin Iso  NLIS,39
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Hyperelast HYPER,8
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Water motn WATER,18
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Anisotropic ANEL,14
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Concrete   CONCR,11
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  LIS_Pipe flow  PFLOW,19
   P_LN(FULL_ANS)
  LIS_Viscoelast EVISC,13
   P_LN(LSDYNA*FULL_ANS)
  LIS_Explic Dyn  PLAW,28
   P_LN(LSDYNA*FULL_ANS)
  LIS_Explic Dyn  FOAM,29
   P_LN(LSDYNA*FULL_ANS)
  LIS_Explic Dyn  HONE,30
   P_LN(LSDYNA*FULL_ANS)
  LIS_Explic Dyn  COMP,31
  Def_*PAR(_z7)
 Fld_0
  Prm_ 
 Fld_3
  Prm_MAT    Material ref. number
  Typ_LIS_RadioB
  LIS_All             ,0
  LIS_Specified below ,99
Cmd_)*CSET,1,3
 Fld_2
  Prm_MAT1,MAT2,INC  Specified range
  Typ_INT3
  Def_*PAR(_z9),Blank,Blank
Cal_Fnc_TBDELE_2
:E End
:! 
:N Fnc_TBDELE_2
:S    373,   237,   129
:T Command
:C )! Fnc_TBDELE_2
:C )/NOPR
:C )*if,_z(2),NE,99,then
:C )*CSET,1,3,ALL,,,
:C )*endif
:C )/GO
:A    Delete
:D Delete Data Table
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_TBDELE
Inp_P
Cmd_TBDELE
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*CPAR(2)
 Fld_5
  Typ_Def_*CPAR(3)
:E End
:! 
:N Fnc_TBLIST
:S   3464,  1004,  2453
:T Cmd
:C )! Fnc_TBLIST
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3
:C )*get,_z(3),active,,mat
:C )! 
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,66
:C )_zc(1)='BKIN','MKIN','MISO','BISO','ANISO','DP','ANAND','HYPER'
:C )_zc(9)='CREEP','SWELL','CONCR','MELAS','EVISC','ANEL','BH','PIEZ'
:C )_zc(17)='FAIL','WATER','PFLOW','USER','ALL',' ','NONE','MOONEY'
:C )_zc(25)='EOS  ','    ','    ','PLAW','FOAM','HONE','COMP','KINH'
:C )_zc(33)='     ','    ','    ','    ','    ','CHAB','NLIS','    '
:C )_zc(41)='BOYCE','DISC','CAST','HILL','    ','GASK','    ','PRON'
:C )_zc(49)='SHIF','    ','UNIA','    ','   ,','    ','    ','    '
:C )_zc(57)='    ','    ','    ','    ','SDAM','    ','    ','    '
:C )_zc(65)='    ','    '
:C )! 
:C )*get,_z8,common,,tblecm,,int,1  ! active table no.   
:C )*if,_z8,eq,0,then
:C )_z8=23
:C )*endif
:C )_z7=_z8
:C )_z8=_zc(_z8)
:C )! 
:C )*get,_z9,common,,tblecm,,int,2 ! mat no.
:C )/GO
:A List
:D List Data Table
:P (LINPLUS*ELECMAG)
:H Hlp_C_TBLIST
Cmd_)/NOPR
Cmd_)*set,_z(1)
 Fld_0
  Typ_Lab
  Prm_[TBLIST]  List Data Table for Nonlinear Materials
 Fld_0
  Typ_Lab
  Prm_Active table is  %_z8%  with  MAT = %(I)_z9%
 Fld_2
  Prm_Lab    Type of data table
  Typ_LIS_OptionB
  LIS_Active table    ,22
  LIS_All types    ALL,21
  P_LN(FULL_ANS)
  LIS_Bilin kinem BKIN,1
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Multi kinem MKIN,2
  P_LN(FULL_ANS)
  LIS_Kin Harden KINH,32
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Multi isotr MISO,3
  P_LN(FULL_ANS)
  LIS_Bilin isotr BISO,4
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Hills Aniso HILL,44
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Anisotrop  ANISO,5
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Drucker-Prag  DP,6
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Anand plas ANAND,7
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Multi elas MELAS,12
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_User-define USER,20
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Creep cons CREEP,9
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Swelling   SWELL,10
  P_LN(ELECMAG)
  K_LN(lsdyna)
  LIS_MagField data BH,15
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Piezoelect  PIEZ,16
  P_LN(LINPLUS)
  K_LN(lsdyna)
  LIS_Compos fail FAIL,17
  P_LN(FULL_ANS)
  LIS_Hyperelas  MOONEY,24
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Boyce       BOYCE,41
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Chaboche     CHAB,38
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Nonlin Iso   NLIS,39
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Hyperelast HYPER,8
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Water motn WATER,18
  P_LN(FULL_ANS)
  LIS_Anisotropic ANEL,14
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Concrete   CONCR,11
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  LIS_Pipe flow  PFLOW,19
  P_LN(FULL_ANS)
  LIS_Viscoelast EVISC,13
  P_LN(FULL_ANS)
  K_LN(LSDYNA)
  LIS_Explic Dyn PLAW,28
  P_LN(FULL_ANS)
  K_LN(LSDYNA)
  LIS_Explic Dyn FOAM,29
  P_LN(FULL_ANS)
  K_LN(LSDYNA)
  LIS_Explic Dyn HONE,30
  P_LN(FULL_ANS)
  K_LN(LSDYNA)
  LIS_Explic Dyn COMP,31
  P_LN(FULL_ANS)
  K_LN(LSDYNA)
  LIS_Explic Dyn  EOS,25
  K_LN(lsdyna)
  LIS_Cast Iron  CAST,43
  K_LN(lsdyna)
  LIS_Uniaxial   UNIA,51
  K_LN(lsdyna)
  LIS_Gasket     GASK,46
  K_LN(lsdyna)
  LIS_Prony Visc PRON,48
  K_LN(lsdyna)
  LIS_Shift Func SHIF,49
  K_LN(lsdyna)
  LIS_Struc Damp SDAM,61
  Def_*PAR(_z7)
 Fld_0
  Prm_ 
 Fld_3
  Prm_MAT    Material ref. number
  Typ_LIS_RadioB
  LIS_All             ,0
  LIS_Specified below ,99
Cmd_)*CSET,1,1
 Fld_2
  Prm_       Specified material no.
  Typ_INT
  Def_*PAR(_z9)
Cal_Fnc_TBLIST_2
:E End
:! 
:N Fnc_TBLIST_2
:S    289,   205,    77
:T Cmd
:C )! Fnc_TBLIST_2
:C )/NOPR
:C )*if,_z(2),NE,99,then
:C )*CSET,1,1,ALL
:C )*endif
:C )/GO
:A    List
:D List Data Table
:P (LINPLUS*ELECMAG)
:H Hlp_C_TBLIST
Inp_P
Cmd_TBLIST
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*CPAR(1)
:E END
:! 
:N Fnc_TBLIST_A
:S    199,    98,    94
:T Command
:P (LINPLUS*ELECMAG)
:C )! Fnc_TBLIST_A ORPHAN
Inp_P
Cmd_)/GO
Cmd_TBLIST
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*PAR(_zc(_z(2)))
:E End
:! 
:N Fnc_TBLIST_B
:S    194,    98,    89
:T Command
:P (LINPLUS*ELECMAG)
:C )! Fnc_TBLIST_B ORPHAN
Inp_P
Cmd_)/GO
Cmd_TBLIST
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*PAR(_z(3))
:E End
:! 
:N Fnc_TBPLOT
:S   1919,   844,  1068
:T Command
:C )! Fnc_TBPLOT
:C )/NOPR
:C )! 
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,55
:C )_zc(1)='BKIN','MKIN','MISO','BISO','ANISO','DP','ANAND','HYPER'
:C )_zc(9)='CREEP','SWELL','CONCR','MELAS','EVISC','ANEL','BH','PIEZ'
:C )_zc(17)='FAIL','WATER','PFLOW','USER','ALL',' ','NONE','MOONEY'
:C )_zc(25)='     ','    ','    ','PLAW','FOAM','HONE','COMP','KINH'
:C )_zc(33)='     ','    ','    ','    ','    ','CHAB','NLIS','    '
:C )_zc(41)='BOYC','DISC','    ','HILL','    ','9999','    ','    '
:C )_zc(49)='    ','    ','UNIA','    ','    ','    ','9998'
:C )!
:C )*get,_z8,common,,tblecm,,int,1  ! active table no.
:C )*if,_z8,le,0,then
:C )_z8=23
:C )*elseif,_z8,gt,55,then
:C )_z8=22
:C )*endif
:C )_z8=_zc(_z8)
:C )!
:C )/GO
:H Hlp_C_TBPLOT
:A Graph
:D Graph Data Tables 
:P (LINPLUS*ELECMAG)
:K (lsdyna)
Cmd_)/NOPR
Cmd_)*CSET,1,2
 Fld_0
  Typ_Lab
  Prm_[TBPLOT]  Graph Data Tables (stress-strain and B-H curves only) 
 Fld_2
  Prm_Lab  Type of data table
  Typ_LIS_OPTIONB
    P_LN(FULL_ANS)
   LIS_Bilin kinem BKIN,BKIN
    P_LN(FULL_ANS)
   LIS_Multi kinem MKIN,MKIN
    P_LN(FULL_ANS)
   LIS_Kin Harden  KINH,KINH
    P_LN(FULL_ANS)
   LIS_Multi isotr MISO,MISO
    P_LN(FULL_ANS)
   LIS_Bilin isotr BISO,BISO
    P_LN(FULL_ANS)
   LIS_Multi elas MELAS,MELAS
    P_LN(ELECMAG)
   LIS_MagField data BH,BH
    P_LN(FULL_ANS*ELECMAG)
   LIS_NU vs. B**2   NB,NB
    P_LN(FULL_ANS*ELECMAG)
   LIS_MU vs. H      MH,MH
    P_LN(FULL_ANS*ELECMAG)
   LIS_BH slope     SBH,SBH
    P_LN(FULL_ANS*ELECMAG)
   LIS_NB slope     SNB,SNB
    P_LN(FULL_ANS*ELECMAG)
   LIS_MH slope     SMH,SMH
    P_LN(FULL_ANS)
   LIS_Gasket      GASK,9999
    P_LN(FULL_ANS)
   LIS_Joint       JOIN,9998
  Def_*PAR(_z8)
 Fld_3
  Typ_INT
  Prm_MAT  Material number
  Def_*GET(common,,tblecm,,int,2)
Cmd_)/GO
Cal_Fnc_TBPLOT_ex1,2,LT,9998,2
Cal_Fnc_TBPLOT_ex2,2,EQ,9999,2
Cal_Fnc_TBPLOT_ex3,2,EQ,9998,2
:E End
:! 
:N Fnc_TBPLOT_ex1
:S    224,   148,    69
:T Cmd
:C )! Fnc_TBPLOT_ex1
:A Plot Data Tables
:D Plot Data Tables
:C )/NOPR
:H Hlp_C_TBPLOT
:K #(PREP7)
Inp_P
Cmd_TBPLOT
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
:E END
:! 
:N Fnc_TBPLOT_ex2
:S    587,   173,   407
:T Cmd
:C )! Fnc_TBPLOT_ex2
:C )/NOPR
:C )_zc99='    '
:C )/GO
:A Plot Data Tables
:D Plot Data Tables
:H Hlp_C_TBPLOT
:K #(PREP7)
Cmd_TBPLOT
 Fld_0
  Typ_Lab
  Prm_[TBPLOT]  Graph Data Tables (Gasket only)
 Fld_2
  Typ_Def_GASK
 Fld_3
  Typ_Def_CPAR(2)
 Fld_4
  Prm_Curve to graph
  Typ_Lis_OptionB
   Lis_Compression     ,COMP
   Lis_Linear Unloading,LUNL
   Lis_Nonlin Unloading,NUNL
   Lis_All             ,ALL
 Fld_5
  Prm_Temperature (Blank = All)
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_Show segment numbers
  Typ_LOGI,No,Yes
  Def_No
:E END
:! 
:N Fnc_TBPLOT_ex3
:S    681,   173,   501
:T Cmd
:C )! Fnc_TBPLOT_ex3
:C )/NOPR
:C )_zc99='    '
:C )/GO
:A Plot Data Tables
:D Plot Data Tables
:H Hlp_C_TBPLOT
:K #(PREP7)
Cmd_TBPLOT
 Fld_0
  Typ_Lab
  Prm_[TBPLOT]  Graph Data Tables (Joint only)
 Fld_2
  Typ_Def_JOIN
 Fld_3
  Typ_Def_CPAR(2)
 Fld_4
  Prm_Nonlinear Curve to graph
  Typ_Lis_OptionB
   Lis_Stiffness   JNSA,JNSA
   Lis_Stiffness   JNS4,JNS4
   Lis_Stiffness   JNS6,JNS6
   Lis_Damping     JNDA,JNDA
   Lis_Damping     JND4,JND4
   Lis_Damping     JND6,JND6
   Lis_Friction    JNFA,JNFA
   Lis_Friction    JNF4,JNF4
   Lis_Friction    JNF6,JNF6
 Fld_5
  Prm_Temperature (Blank = All)
  Typ_REAL
  Def_Blank
:E END
:! 
:N Fnc_TBTEMP
:S    564,   209,   348
:T Command
:C )! Fnc_TBTEMP
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3
:C )/GO
:A Set Temp Table
:D Set Data Table Temperature
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_TBTEMP
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_0
  Typ_Lab
  Prm_[TBTEMP]  Set Data Table Temperature
 Fld_2
  Typ_REAL
  Prm_TEMP  Temperature value
Cmd_)*SET,_z(2)
 Fld_2
  Prm_KMOD  New or edit existing
  Typ_LIS_RadioB
  LIS_Add new temp    ,0
  LIS_Edit existing   ,1
Cmd_)*CSET,2,2
 Fld_2
  Prm_     Existing temp to edit 
  Typ_INT
  Def_1
Cal_Fnc_TBTEMP_2
:E END
:! 
:N Fnc_TBTEMP_2
:S    310,   234,    69
:T Command
:C )! Fnc_TBTEMP_2
:C )/NOPR
:C )*if,_z(2),EQ,0,then
:C )*CSET,2,2, 
:C )*endif
:C )/GO
:A    Set Temp
:D Set Data Table Temperature
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_TBTEMP
Inp_P
Cmd_TBTEMP
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
:E End
:! 
:N Fnc_TB_edit
:S    281,   164,   110
:T Command
:C )! Fnc_TB_edit
:A Edit Active 
:D Edit Active Data Table
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_TB
Inp_P
Cmd_)/NOPR
Cmd_)TBLE
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
! Cust_Cmd_TBPT
! Cust_Cmd_TBDATA
! Cust_Cmd_TBMODIF
:E END
:! 
:N Fnc_TB_mooney
:S    479,   178,   294
:T Command
:C )! Fnc_TB_mooney
:A Define Table
:D Define/Activate Mooney-Rivlin TB Table for Experimental Data
:P (FULL_ANS)
:H Hlp_C_TB
Cmd_TB
 Fld_0
  Typ_Lab
  Prm_[TB,MOONEY]  Define Mooney-Rivlin TB Table for Experimental Data
 Fld_2
  Typ_Def_MOONEY
 Fld_3
  Typ_INT
  Prm_MAT    Material reference number
  Def_*GET(common,,tblecm,,int,2)
 Fld_4
  Prm_NTEMP  Number of temperatures 
  Typ_INT
  Def_Blank
 Fld_6
  Typ_Def_1
:E END
:! 
:N Fnc_TB_status
:S    174,   122,    45
:T Cmd_N
:C )! Fnc_TB_status
:A Status
:D Data Table Status
:K #(PREP7*SOLUTION)
Inp_P
Cmd_TBLE
! Exclude_from_paths
Cmd_STAT
:E END
:! 
:N Fnc_TCHG
:S    710,   194,   509
:T Command
:C )!Fnc_TCHG
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )/GO
:A Change Tets
:D Change Selected Degenerate Hexes to Non-degenerate Tets
:H Hlp_C_TCHG
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1)
  Fld_0
  Typ_Lab
  Prm_[TCHG]    Tet Change
  Fld_0
  Typ_Lab
  Prm_Change degenerate 20 node tetrahedron to 10 node tetrahedron
  Fld_2
  Prm_ELEM1 to ELEM2      Change From
  Typ_LIS_OPTIONB
  Lis_95 to 92,95,92
  Lis_90 to 87,90,87
  Lis_122 to 123,122,123
  Lis_186 to 187,186,187
  Lis_120 to 119,120,119
Cmd_)*SET,_z2
  Fld_2
  Prm_ETYPE2   TYPE number for ELEM2
  Typ_Lis
  Lis_NEXT AVAIL TYPE#,0 
  Lis_USER SPECIFIED,-1
  Lis_*READ,TYPE
Cmd_)/GO
Cal_Fnc_TCHG2
:E END
:! 
:N Fnc_TCHG2
:S    155,    63,    85
:T Command
:C )!Fnc_TCHG2
Inp_P
Cmd_)!
  Fld_2
  Typ_Def_*PAR(_z2)
Cal_Fnc_TCHG3,2,eq,-1
Cal_Fnc_TCHG4,2,ne,-1
:E END
:! 
:N Fnc_TCHG3
:S    292,   151,   134
:T Command
:A Change Tets
:D Change Selected Degenerate Hexes to Non-degenerate Tets
:C )!Fnc_TCHG3
:H Hlp_C_TCHG
Inp_NoApply
Cmd_TCHG
  Fld_2
  Typ_Def_*PAR(_z(1))
  Fld_3
  Typ_Def_*PAR(_z(2))
  Fld_4
  Typ_INT
  Prm_ETYPE2   User Specified TYPE
:E END
:! 
:N Fnc_TCHG4
:S    173,    63,   103
:T Command
:C )!Fnc_TCHG4
Inp_P
Cmd_TCHG
  Fld_2
  Typ_Def_*PAR(_z(1))
  Fld_3
  Typ_Def_*PAR(_z(2))
  Fld_4
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_TDMA_Warn
:S    399,   137,   255
:T Command
:C )! Fnc_TDMA_Warn ORPHAN
:A TDMASeep >1 Warn
:D TDMASweep > 1 Warning for Momentum
Cmd_/COM
 Fld_0
  Typ_LAB
  Prm_                 -  W A R N I N G  -
 Fld_0
  Prm_  
 Fld_0
  Typ_LAB
  Prm_    Using TDMA Sweeps > 1 can cause instabilities    
 Fld_0
  Typ_LAB
  Prm_              in the momentum equations              
 Fld_0
  Prm_  
:E END
:! 
:N Fnc_TETFREE
:S    376,   291,    78
:T Cmd
:C )!Fnc_TETFREE
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0
:C )*GET,_z1,common,,cfprp7,,int,111
:C )*GET,_z2,common,,cfprp7,,int,107
:C )*IF,_z1,ne,1,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_z2,ne,0,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
:H Hlp_C_VMESH
Inp_P
Cmd_MSHAPE,1,3D
K_CM(KEY1)
Cmd_MSHKEY,0
K_CM(KEY2)
Cmd_)!
Cal_Fnc_VMESH
:E END
:! 
:N Fnc_TIME_sub
:S   2068,   433,  1628
:T Command
:C )! Fnc_TIME_sub
:A Time and Substeps
:D Time and Substep Options
:C )/nopr
:C )*del,_z
:C )*del,_zz
:C )*dim,_z,,9
:C )*get,_z(8),common,,anscom,,int,52
:C )*get,_z(9),common,,stepcm,,int,23
:C )*if,_z(8),eq,0,then
:C )*if,_z(9),eq,-1,then
:C )_z(9)=0
:C )*endif
:C )*endif
:C )/go
:K #((PREP7*SOLUTION)+(STATIC*TRNSIENT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_UI_timesub
Inp_NoApply
Cmd_)/nopr
 Fld_0
  Typ_Lab
  Prm_        Time and Substep Options
Cmd_)*CSET,1,2
 Fld_2
  Prm_[TIME]  Time at end of load step
  Typ_REAL
  Def_*GET(common,,stepcm,,real,2)
 Fld_3
  Prm_[NSUBST]  Number of substeps
  Typ_INT
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,int,12)
Cmd_)*SET,_z(3)
 Fld_2
  Prm_[KBC]     Stepped or ramped b.c.
  Typ_LIS_RADIOB
  LIS_Ramped          ,0
  LIS_Stepped         ,1
  Def_*GET(common,,stepcm,,int,28)
Fld_0
Typ_Sep
 Fld_3
  K_FL(nlcntrl)
  Prm_[AUTOTS] Automatic time stepping
  Typ_LOGI,OFF,ON
  Def_*PAR(_z(9))
 Fld_3
  K_FL(NLCNTRL)
  Prm_[AUTOTS] Automatic time stepping
  Typ_LIS_RADIOB
  LIS_ON         ,1
  LIS_OFF        ,0
  LIS_Prog Chosen,-1
  Def_*GET(common,,stepcm,,int,23)
Cmd_)*CSET,3,4
 Fld_2
  Prm_[NSUBST] Maximum no. of substeps
  Typ_INT
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,int,26)
 Fld_3
  Prm_         Minimum no. of substeps
  Typ_INT
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,int,27)
Cmd_)*SET,_z(7)
 Fld_2
  Prm_         Use previous step size?
  Typ_LOGI,No,Yes
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,int,24)
  K_LN(NLCNTRL)
  Def_1
Cmd_)*SET,_zz
Fld_0
Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[TSRES]  Time step reset based on specific time points
 Fld_2
  Prm_              Time points from :
  Typ_LIS_RADIOB
  LIS_No reset        ,0
  LIS_Existing array  ,1
  LIS_New array       ,2
 Fld_0
  Typ_Lab
  Prm_Note: TSRES command is valid for thermal elements, thermal-electric
 Fld_0
  Typ_Lab
  Prm_      elements, thermal surface effect elements and FLUID116,
 Fld_0
  Typ_Lab
  Prm_      or any combination thereof.
Cmd_)/go
Cal_Fnc_TIME_sub2
:E END
:! 
:N Fnc_TIME_sub2
:S    427,    72,   348
:T Command
:C )! Fnc_TIME_sub2
Inp_P
Cmd_TIME
 Fld_2
  Typ_Def_*CPAR(1)
Cmd_AUTOTS
 Fld_2
  Typ_DEF_*PAR(_z(4))
Cmd_NSUBST
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_*CPAR(3)
 Fld_4
  Typ_Def_*CPAR(4)
 Fld_5
  Typ_Def_*PAR(_z(7))
Cmd_KBC
 Fld_2
  Typ_Def_*PAR(_z(3))
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_zz)
Cal_Fnc_TSRES_30,2,EQ,0,5
Cal_Fnc_TSRES_31,2,EQ,1,5
Cal_Fnc_TSRES_32,2,EQ,2,5
:E END
:! 
:N Fnc_TIME_time
:S   2075,   437,  1631
:T Command
:C )! Fnc_TIME_time
:A Time - Time Step
:D Time and Time Step Options
:C )/nopr
:C )*del,_z
:C )*del,_zz
:C )*dim,_z,,9
:C )*get,_z(8),common,,anscom,,int,52
:C )*get,_z(9),common,,stepcm,,int,23
:C )*if,_z(8),eq,0,then
:C )*if,_z(9),eq,-1,then
:C )_z(9)=0
:C )*endif
:C )*endif
:C )/go
:K #((PREP7*SOLUTION)+(STATIC*TRNSIENT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_UI_timetime
Inp_NoApply
Cmd_)/nopr
 Fld_0
  Typ_Lab
  Prm_        Time and Time Step Options
Cmd_)*CSET,1,2
 Fld_2
  Prm_[TIME]  Time at end of load step
  Typ_REAL
  Def_*GET(common,,stepcm,,real,2)
 Fld_3
  Prm_[DELTIM]  Time step size
  Typ_REAL
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,real,23)
Cmd_)*SET,_z(3)
 Fld_2
  Prm_[KBC]     Stepped or ramped b.c.
  Typ_LIS_RADIOB
  LIS_Ramped          ,0
  LIS_Stepped         ,1
  Def_*GET(common,,stepcm,,int,28)
Fld_0
Typ_Sep
 Fld_3
  K_FL(nlcntrl)
  Prm_[AUTOTS] Automatic time stepping
  Typ_LOGI,OFF,ON
  Def_*PAR(_z(9))
 Fld_3
  K_FL(NLCNTRL)
  Prm_[AUTOTS] Automatic time stepping
  Typ_LIS_RADIOB
  LIS_ON         ,1
  LIS_OFF        ,0
  LIS_Prog Chosen,-1
  Def_*GET(common,,stepcm,,int,23)
Cmd_)*CSET,3,4
 Fld_2
  Prm_[DELTIM] Minimum time step size
  Typ_REAL
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,real,24)
 Fld_3
  Prm_         Maximum time step size
  Typ_REAL
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,real,25)
Cmd_)*SET,_z(7)
 Fld_2
  Prm_         Use previous step size?
  Typ_LOGI,No,Yes
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,int,24)
  K_LN(NLCNTRL)
  Def_1
Cmd_)*SET,_zz
Fld_0
Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[TSRES]  Time step reset based on specific time points
 Fld_2
  Prm_              Time points from :
  Typ_LIS_RADIOB
  LIS_No reset        ,0
  LIS_Existing array  ,1
  LIS_New array       ,2
 Fld_0
  Typ_Lab
  Prm_Note: TSRES command is valid for thermal elements, thermal-electric
 Fld_0
  Typ_Lab
  Prm_      elements, thermal surface effect elements and FLUID116,
 Fld_0
  Typ_Lab
  Prm_      or any combination thereof.
Cmd_)/go
Cal_Fnc_TIME_time2
:E END
:! 
:N Fnc_TIME_time2
:S    429,    74,   348
:T Command
:C )! Fnc_TIME_time2
Inp_P
Cmd_TIME
 Fld_2
  Typ_Def_*CPAR(1)
Cmd_AUTOTS
 Fld_2
  Typ_DEF_*PAR(_z(4))
Cmd_DELTIM
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
  Typ_Def_*CPAR(3)
 Fld_4
  Typ_Def_*CPAR(4)
 Fld_5
  Typ_Def_*PAR(_z(7))
Cmd_KBC
 Fld_2
  Typ_Def_*PAR(_z(3))
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_zz)
Cal_Fnc_TSRES_30,2,EQ,0,5
Cal_Fnc_TSRES_31,2,EQ,1,5
Cal_Fnc_TSRES_32,2,EQ,2,5
:E END
:! 
:N Fnc_TIMINT_TINT
:S   1924,   430,  1487
:T Command
:C )! Fnc_TIMINT_TINT
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,8
:C )*GET,_z1,common,,stepcm,,real,20
:C )*IF,_z1,EQ,-1,THEN
:C )  _z1=1.0
:C )*ENDIF
:C )*GET,_z3,common,,stepcm,,real,208
:C )*IF,_z3,EQ,-1,THEN
:C )  _z3=0.2
:C )*ENDIF
:C )/GO
:A Amplitude Decay
:D Time Integration Controls
:K #((PREP7*SOLUTION)+(TRNSIENT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_UI_timtint
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_[TIMINT]  Transient Effects On or Off
Cmd_TIMINT
K_CM(multifld*NOFILTER)
 Fld_2
  Prm_   For the current DOF set
  Typ_LOGI,Off,On
  Def_*GET(common,,mfldcm,,int,13)
Cmd_TIMINT
K_CM(STRUCTRL+MULTIFLD)
 Fld_2
  Prm_   For structural DOFs
  Typ_LOGI,Off,On
  Def_*GET(common,,mfldcm,,int,13)
 Fld_3
  Typ_Def_STRUCT
Cmd_TIMINT
K_CM(THERMAL+MULTIFLD)
 Fld_2
  Prm_   For thermal DOFs
  Typ_LOGI,Off,On
  Def_*GET(common,,mfldcm,,int,14)
 Fld_3
  Typ_Def_THERM
Cmd_TIMINT
K_CM(MAGNETIC+MULTIFLD)
 Fld_2
  Prm_   For magnetic DOFs
  Typ_LOGI,Off,On
  Def_*GET(common,,mfldcm,,int,16)
 Fld_3
  Typ_Def_MAG
Cmd_TIMINT
K_CM(ELECTRIC+MULTIFLD)
 Fld_2
  Prm_   For electric DOFs
  Typ_LOGI,Off,On
  Def_*GET(common,,mfldcm,,int,15)
 Fld_3
  Typ_Def_ELECT
Cmd_TIMINT
K_CM(FLUID)
 Fld_2
  Prm_   For fluid DOFs
  Typ_LOGI,Off,On
  Def_*GET(common,,mfldcm,,int,17)
 Fld_3
  Typ_Def_FLUID
Fld_0
P_FL(THERMAL*ELECMAG)
Typ_SEP
Cmd_TINTP
 Fld_0
  Typ_Lab
  Prm_[TINTP]  Transient Integration Parameters
 Fld_0
  Typ_Lab
  Prm_For 2nd order systems
 Fld_2
  Prm_ GAMMA    Amplitude decay factor
  Typ_REAL
  Def_*GET(common,,stepcm,,real,17)
 Fld_0
  Typ_Lab
  Prm_For 1st order systems
 Fld_5
  Prm_ THETA  Transient integ param
  Typ_REAL
  K_LN(nlcntrl)
  Def_*PAR(_z1)
 Fld_6
  Prm_ OSLM   Oscillation limit crit
  Typ_REAL
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,real,206)
 Fld_7
  Prm_ TOL    Tolerance on OSLM
  Typ_REAL
  K_LN(nlcntrl)
  Def_*PAR(_z3)
:E END
:! 
:N Fnc_TIMINT_TINT2
:S   1960,   435,  1518
:T Command
:C )! Fnc_TIMINT_TINT2
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,8
:C )*GET,_z1,common,,stepcm,,real,20
:C )*IF,_z1,EQ,-1,THEN
:C )  _z1=1.0
:C )*ENDIF
:C )*GET,_z3,common,,stepcm,,real,208
:C )*IF,_z3,EQ,-1,THEN
:C )  _z3=0.2
:C )*ENDIF
:C )/GO
:A Newmark Parameters
:D Time Integration Controls
:K #((PREP7*SOLUTION)+(TRNSIENT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_UI_timtint
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_[TIMINT]  Transient Effects On or Off
Cmd_TIMINT
K_CM(multifld*NOFILTER)
 Fld_2
  Prm_   For the current DOF set
  Typ_LOGI,Off,On
  Def_*GET(common,,mfldcm,,int,11)
Cmd_TIMINT
K_CM(STRUCTRL+MULTIFLD)
 Fld_2
  Prm_   For structural DOFs
  Typ_LOGI,Off,On
  Def_*GET(common,,mfldcm,,int,11)
 Fld_3
  Typ_Def_STRUCT
Cmd_TIMINT
K_CM(THERMAL+MULTIFLD)
 Fld_2
  Prm_   For thermal DOFs
  Typ_LOGI,Off,On
  Def_*GET(common,,mfldcm,,int,12)
 Fld_3
  Typ_Def_THERM
Cmd_TIMINT
K_CM(MAGNETIC+MULTIFLD)
 Fld_2
  Prm_   For magnetic DOFs
  Typ_LOGI,Off,On
  Def_*GET(common,,mfldcm,,int,14)
 Fld_3
  Typ_Def_MAG
Cmd_TIMINT
K_CM(ELECTRIC+MULTIFLD)
 Fld_2
  Prm_   For electric DOFs
  Typ_LOGI,Off,On
  Def_*GET(common,,mfldcm,,int,13)
 Fld_3
  Typ_Def_ELECT
Cmd_TIMINT
K_CM(FLUID)
 Fld_2
  Prm_   For fluid DOFs
  Typ_LOGI,Off,On
  Def_*GET(common,,mfldcm,,int,15)
 Fld_3
  Typ_Def_FLUID
Fld_0
P_FL(THERMAL*ELECMAG)
Typ_SEP
Cmd_TINTP
 Fld_0
  Typ_Lab
  Prm_[TINTP]  Transient Integration Parameters
 Fld_0
  Typ_Lab
  Prm_For 2nd order systems
 Fld_3
  Prm_ ALPHA,DELTA  Newmark parameters
  Typ_REAL2
  Def_*GET(common,,stepcm,,real,18),*GET(common,,stepcm,,real,19)
 Fld_0
  Typ_Lab
  Prm_For 1st order systems
 Fld_5
  Prm_ THETA  Transient integ param
  Typ_REAL
  K_LN(nlcntrl)
  Def_*PAR(_z1)
 Fld_6
  Prm_ OSLM   Oscillation limit crit
  Typ_REAL
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,real,206)
 Fld_7
  Prm_ TOL    Tolerance on OSLM
  Typ_REAL
  K_LN(nlcntrl)
  Def_*PAR(_z3)
:E END
:! 
:N Fnc_TIMP
:S    259,   110,   142
:T Cmd_P
:C )! Fnc_TIMP
:A Detached Elems
:D Improve Tet Mesh
:K #(PREP7)
Inp_P
Cmd_)!
Fld_2
   Prm_[TIMP]  Pick or enter tet meshed vols to be improved
   Typ_ELEM
   Min_1
   Cnt_s
   PCN_1
   PFM_1
Cal_Fnc_TIMP_a
:E END
:! 
:N Fnc_TIMP_a
:S    262,   126,   129
:T Cmd
:C )! Fnc_TIMP_a
:A Detached Elems
:D Improve Tet Mesh
:K #(PREP7)
:H Hlp_C_TIMP
Cmd_TIMP
 Fld_0
 Typ_Lab
 Prm_[TIMP]  Improve Tet Mesh
 Fld_2
 Typ_Def_P51X
 Fld_3
 Typ_LOGI,No, Yes
 Prm_Change boundary
 Def_1
:E END
:! 
:N Fnc_TLSPARM
:S   1507,   217,  1283
:T Command
:C )! Fnc_TLSPARM
:A    Trans Line S-Par
:D Calculate S-Parameters for Transmission Line
:K #((POST1+RESULTS+EDGEELC+HARMONIC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_TLSPARM
Inp_NoApply
Cmd_)/NOPR
 Fld_0
  Typ_Lab
  Prm_[TLSPARM]  This function calculates scattering parameters
 Fld_0
  Typ_Lab
  Prm_                  for transmission line
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_       Define reference characteristic impedance (Ohm)
Cmd_)*SET,_z8
 Fld_2
  Prm_RES     Reference resistance
  Typ_Real
  Def_50
Cmd_)*SET,_z9
 Fld_2
  Prm_SUSC    Reference susceptance
  Typ_Real
  Def_0
!
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_             Define paths for input port
Cmd_)*CSET,1,1
 Fld_2
  Prm_Vpath1   Voltage path name
  Typ_Lis_OptionB
  Lis_*READ,DPTH
  Def_
Cmd_)*SET,_z1
 Fld_2
  Prm_V1Fact   Factor for Vpath1
  Typ_Int
  Def_1
Cmd_)*CSET,2,2
 Fld_2
  Prm_Ipath1   Current path name
  Typ_Lis_OptionB
  Lis_*READ,DPTH
  Def_
Cmd_)*SET,_z2
 Fld_2
  Prm_I1Fact   Factor for Ipath1
  Typ_Int
  Def_1
!
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_             Define paths for output port
Cmd_)*CSET,3,3
 Fld_2
  Prm_Vpath2   Voltage path name
  Typ_Lis_OptionB
  Lis_*READ,DPTH
  Def_
Cmd_)*SET,_z3
 Fld_2
  Prm_V2Fact   Factor for Vpath2
  Typ_Int
  Def_1
Cmd_)*CSET,4,4
 Fld_2
  Prm_Ipath2   Current path name
  Typ_Lis_OptionB
  Lis_*READ,DPTH
  Def_
Cmd_)*SET,_z4
 Fld_2
  Prm_I2Fact   Factor for Ipath2
  Typ_Int
  Def_1
!
Cmd_)/GO
Cal_Fnc_TLSWP1
:E END
:! 
:N Fnc_TLSWP1
:S    500,   100,   393
:T Cmd
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,4,1,1
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_zc(1)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(1)
  Dlm_'
 Fld_4
  Typ_Lab
!
Cmd_)*SET,_zc(2)
 Fld_2
  Typ_Def_
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(2)
  Dlm_'
 Fld_4
  Typ_Def_
!
Cmd_)*SET,_zc(3)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(3)
  Dlm_'
 Fld_4
  Typ_Lab
!
Cmd_)*SET,_zc(4)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(4)
  Dlm_'
 Fld_4
  Typ_Lab
!
Cmd_)/GO
Cal_Fnc_TLSWP2
:E End
:! 
:N Fnc_TLSWP2
:S    373,    49,   317
:T Command
Inp_P
Cmd_TLSPRM
 Fld_2
  Typ_Def_*PAR(_z8)
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Typ_Def_*STR('%_zc(1)%')
 Fld_5
  Typ_Def_*STR('%_zc(2)%')
 Fld_6
  Typ_Def_*STR('%_zc(3)%')
 Fld_7
  Typ_Def_*STR('%_zc(4)%')
 Fld_8
  Typ_Def_*PAR(_z1)
 Fld_9
  Typ_Def_*PAR(_z2)
 Fld_10
  Typ_Def_*PAR(_z3)
 Fld_11
  Typ_Def_*PAR(_z4)
:E END
:! 
:N Fnc_TORQ2D
:S    579,   214,   358
:T Command
:C )! Fnc_TORQ2D
:A    Torque
:D Calculate Magnetic Torque
:K #(POST1+RESULTS+ELEM2D+VECTORP+harmonic)
:K #((edgeflx+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_TORQ2D
Inp_NoApply
Cmd_TORQ2D
 Fld_0
  Typ_Lab
  Prm_[TORQ2D] This function calculates the magnetic torque on a body
 Fld_0
  Typ_Lab
  Prm_         completely surrounded by air.  A predefined closed path,
 Fld_0
  Typ_Lab
  Prm_         passing through the air elements surrounding the body,
 Fld_0
  Typ_Lab
  Prm_         must be available for this calculation.
:E END
:! 
:N Fnc_TORQC2D
:S    760,   234,   519
:T Command
:C )! Fnc_TORQC2D
:A    Circular Torq
:D Calculate Magnetic Torque on a Circular Body
:K #(POST1+RESULTS+ELEM2D+VECTORP)
:K #((edgeflx+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_TORQC2D
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[TORQC2D]  Calculate Magnetic Torque on a Circular Body
Cmd_TORQC2D
 Fld_2
  Prm_RAD     Radius of circular path
  Typ_real
 Fld_3
  Prm_NUMN    No. of nodes -
  Typ_int
  Def_18
 Fld_0
  Typ_Lab
  Prm_        - to be created along circular path
 Fld_5
  Prm_RADTOL  Optional tolerance -
  Typ_real
 Fld_0
  Typ_Lab
  Prm_        - for node and element selection
 Fld_4
  Prm_LCSYS   Optional local C.S. no.
  Typ_int
  Def_0
 Fld_0
  Typ_Lab
  Prm_        (created at global origin)
:E END
:! 
:N Fnc_TORQSUM
:S    450,   200,   243
:T Command
:A    Torque
:C )! Fnc_TORQSUM
:D Summarize Magnetic Torques
:K #(POST1+RESULTS+FMAGBC+ELEM2D)
:K #((edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_TORQSUM
Cmd_)!
 Fld_0
  Prm_[TORQSUM] Summarize Torques
 Cmd_)*CSET,1,9
 Fld_2
  Prm_Cnam1-9  Component name(s)
  Bnd_0.0,9.0
  Typ_MLis
  Lis_*READ,CM
 Fld_0
 Fld_0
  Typ_Lab
  Prm_                                 (specify up to 9)
Cal_Fnc_TORQSUM_2
:E End
:! 
:N Fnc_TORQSUM_2
:S   1028,   116,   905
:T Cmd
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,9,1,1
:C )/GO
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_zc(1)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(1)
  Dlm_'
 Fld_4
  Typ_Lab
!
Cmd_)*SET,_zc(2)
 Fld_2
  Typ_Def_
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(2)
  Dlm_'
 Fld_4
  Typ_Def_
!
Cmd_)*SET,_zc(3)
 Fld_2
  Typ_Def_
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(3)
  Dlm_'
 Fld_4
  Typ_Def_
!
Cmd_)*SET,_zc(4)
 Fld_2
  Typ_Def_
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(4)
  Dlm_'
 Fld_4
  Typ_Def_
!
Cmd_)*SET,_zc(5)
 Fld_2
  Typ_Def_
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(5)
  Dlm_'
 Fld_4
  Typ_Def_
!
Cmd_)*SET,_zc(6)
 Fld_2
  Typ_Def_
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(6)
  Dlm_'
 Fld_4
  Typ_Def_
!
Cmd_)*SET,_zc(7)
 Fld_2
  Typ_Def_
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(7)
  Dlm_'
 Fld_4
  Typ_Def_
!
Cmd_)*SET,_zc(8)
 Fld_2
  Typ_Def_
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(8)
  Dlm_'
 Fld_4
  Typ_Def_
!
Cmd_)*SET,_zc(9)
 Fld_2
  Typ_Def_
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(9)
  Dlm_'
 Fld_4
  Typ_Def_
Cmd_)/GO
!
Cal_Fnc_TORQSUM_3
:E End
:! 
:N Fnc_TORQSUM_3
:S    318,   280,    31
:T Cmd
:C )/NOPR
:C )KEYW,key1,0,key2,0,key3,0
:C )KEYW,key4,0,key5,0,key6,0
:C )KEYW,key7,0,key8,0,key9,0
:C )*DO,_z1,1,9,1
:C )*IF,_zc(_z1),NE,' ',THEN
:C )KEYW,KEY%_z1%,1
:C )*ELSE
:C )KEYW,KEY%_z1%,0
:C )*ENDIF
:C )*ENDDO
:P (ELECMAG)
Inp_P
Cmd_)!
Cal_Fnc_TORQSUM_4
:E End
:! 
:N Fnc_TORQSUM_4
:S   1071,    80,   984
:T Cmd
:C )!Fnc_TORQSUM_4
:P (ELECMAG)
Inp_P
Cmd_TORQSUM
 Fld_2
 K_FL(KEY1)
  Typ_Def_*STR('%_zc(1)%')
!
 Fld_2
 K_FL(KEY2)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%')
!
 Fld_2
 K_FL(KEY3)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%')
!
 Fld_2
 K_FL(KEY4)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%')
!
 Fld_2
 K_FL(KEY5)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
!
 Fld_2
 K_FL(KEY6)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
 Fld_3
 K_FL(KEY6)
  Typ_Def_*STR('%_zc(6)%')
!
 Fld_2
 K_FL(KEY7)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
 Fld_3
 K_FL(KEY7)
  Typ_Def_*STR('%_zc(6)%','%_zc(7)%')
!
 Fld_2
 K_FL(KEY8)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
 Fld_3
 K_FL(KEY8)
  Typ_Def_*STR('%_zc(6)%','%_zc(7)%','%_zc(8)%')
!
 Fld_2
 K_FL(KEY9)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
 Fld_3
 K_FL(KEY9)
  Typ_Def_*STR('%_zc(6)%','%_zc(7)%','%_zc(8)%','%_zc(9)%')
:E End
:! 
:N Fnc_TORUS
:S    539,   144,   388
:T Command
:C )! Fnc_TORUS
:A    Torus
:D Create Torus by Dimensions
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_TORUS
Cmd_TORUS
 Fld_0
  Typ_Lab
  Prm_[TORUS]  Create Torus by Dimensions
 Fld_2
  Typ_Real
  Prm_RAD1    Outer radius
  Def_Blank
 Fld_3
  Typ_Real
  Prm_RAD2    Optional inner radius
  Def_Blank
 Fld_4
  Typ_Real
  Prm_RADMAJ  Major radius of torus
  Def_Blank
 Fld_5
  Typ_Real
  Prm_THETA1  Starting angle (degrees)
  Def_0
 Fld_6
  Typ_Real
  Prm_THETA2  Ending angle (degrees)
  Def_360
:E END
:! 
:N Fnc_TRANS
:S    306,   162,   137
:T Cmd_P
:C )! Fnc_TRANS
:C )! Nodes for TRANSFER command below
:A Nodes
:D Nodal CS transfer 
:K #(PREP7)
:H Hlp_C_TRANSFER
Inp_P
Cmd_)!
  Fld_4
  Typ_NODE
  Prm_[TRANSFER]  Pick or enter nodes to be transferred 
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_TRANS_2
:E END
:! 
:N Fnc_TRANS_2
:S    393,   128,   258
:T Command
:C )! Fnc_TRANS_2
:D Coor. Sys Transfer of Noes
:K #(PREP7)
:H Hlp_C_TRANSFER
Cmd_TRANSFER
Fld_0
 Typ_Lab
  Prm_[TRANSFER]  Coordinate System Transfer of Nodes
 Fld_2
  Prm_KCNTO  No. of coordinate sys -
  Typ_INT
 Fld_0
  Typ_Lab
  Prm_       - to be transferred into
 Fld_3
  Typ_INT
  Prm_INC    Node increment
 Fld_4
  Typ_Def_P51X
:E END
:! 
:N Fnc_TREF
:S    408,   225,   176
:T Command
:C )! Fnc_TREF
:A Reference Temp
:D Reference Temperature
:K #(PREP7*SOLUTION)
:K #((pr_elmag+magnetic+electric)*FLUID*THERMAL*STRUCTRL*LSDYNA)
:P (LINPLUS*LSDYNA)
:H Hlp_C_TREF
Inp_NoApply
Cmd_TREF
 Fld_2
  Prm_[TREF]  Reference temperature -
  Typ_REAL
  Def_*GET(common,,bfcom,,real,8)
 Fld_0
  Typ_Lab
  Prm_        - for thermal strain calculations
:E END
:! 
:N Fnc_TRIFREE
:S    376,   291,    78
:T Cmd
:C )!Fnc_TRIFREE
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0
:C )*GET,_z1,common,,cfprp7,,int,110
:C )*GET,_z2,common,,cfprp7,,int,107
:C )*IF,_z1,ne,1,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_z2,ne,0,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
:H Hlp_C_AMESH
Inp_P
Cmd_MSHAPE,1,2D
K_CM(KEY1)
Cmd_MSHKEY,0
K_CM(KEY2)
Cmd_)!
Cal_Fnc_AMESH
:E END
:! 
:N Fnc_TRIMAP34
:S    378,   293,    78
:T Cmd
:C )!Fnc_TRIMAP34
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0
:C )*GET,_z1,common,,cfprp7,,int,110
:C )*GET,_z2,common,,cfprp7,,int,107
:C )*IF,_z1,ne,1,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_z2,ne,1,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
:H Hlp_C_AMESH
Inp_P
Cmd_MSHAPE,1,2D
K_CM(KEY1)
Cmd_MSHKEY,1
K_CM(KEY2)
Cmd_)!
Cal_Fnc_AMESH
:E END
:! 
:N Fnc_TRIMAPA
:S    374,   290,    77
:T Cmd
:C )!Fnc_TRIMAPA
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0
:C )*GET,_z1,common,,cfprp7,,int,110
:C )*GET,_z2,common,,cfprp7,,int,107
:C )*IF,_z1,ne,1,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_z2,ne,1,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
:H Hlp_C_AMAP
Inp_P
Cmd_MSHAPE,1,2D
K_CM(KEY1)
Cmd_MSHKEY,1
K_CM(KEY2)
Cmd_)!
Cal_Fnc_AMAP
:E END
:! 
:N Fnc_TRPDEL
:S    317,   196,   114
:T Cmd_P
:C )! Fnc_TRPDEL
:A    Dele Trace Pt
:D Dele Trace Points
:H Hlp_C_TRPDEL
:K (lsdyna)
:K #(POST1+RESULTS+CFD*ELECTRIC*MAGNETIC)
:P (FLOTRAN*ELECMAG)
Inp_P
Cmd_TRPDEL
 Fld_2
Prm_[TRPDEL]  Pick or enter trace points to be deleted
  Typ_TRAC
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_TRPLIS
:S    434,   196,   231
:T Cmd_P
:C )! Fnc_TRPLIS
:A    List Trace Pt
:D List Trace Points
:H Hlp_C_TRPLIS
:K (lsdyna)
:K #(POST1+RESULTS+CFD*ELECTRIC*MAGNETIC)
:P (FLOTRAN*ELECMAG)
Inp_P
K_LN(cfd+ELECTRIC*MAGNETIC)
Cmd_)!
K_LN(CFD+electric+magnetic)
Cmd_TRPLIS
 Fld_2
  Prm_[TRPLIS]  Pick or enter trace points to be listed
  Typ_TRAC
  Min_1
  Cnt_s
  PCN_1
  PFM_1
K_LN(cfd+ELECTRIC*MAGNETIC)
Cal_Fnc_TRPLIS_2
:E END
:! 
:N Fnc_TRPLIS_2
:S    325,   123,   195
:T Cmd
:C )! Fnc_TRPLIS_2
:A    List Trace Pt
:D List Trace Points
:H Hlp_C_TRPLIS
Cmd_TRPLIS,P51X
 Fld_0
  Typ_Lab
  Prm_[TRPLIS] List Tracing Particles Parameters
 Fld_4
  Prm_Opt  Particle information option 
  Typ_Lis_RadioB
  Lis_Location,LOC
  Lis_Settings,PART
  Def_LOC
:E END
:! 
:N Fnc_TRPOIN
:S    451,   198,   246
:T Cmd_P
:C )! Fnc_TRPOIN
:A    Defi Trace Pt
:D Define Trace Points
:H Hlp_C_TRPOIN
:K (lsdyna)
:K #(POST1+RESULTS+CFD*ELECTRIC*MAGNETIC)
:P (FLOTRAN*ELECMAG)
Inp_P
K_LN(cfd+ELECTRIC*MAGNETIC)
Cmd_)!
K_LN(CFD+electric+magnetic)
Cmd_TRPOIN,P51X
 Fld_2
  Prm_[TRPOIN]  Pick WP location or enter coordinates for the trace points
  Typ_XYZ
  Min_1
  Cnt_s
  PFM_1
K_LN(cfd+ELECTRIC*MAGNETIC)
Cal_Fnc_TRPOIN_2
:E END
:! 
:N Fnc_TRPOIN_2
:S    387,   138,   242
:T Cmd
:C )! Fnc_TRPOIN_2
:A    Defi Trace Pt
:D Define Particle Trace Parameters
:H Hlp_C_TRPOIN
Cmd_TRPOIN,P51X
 Fld_0
  Typ_Lab
  Prm_[TRPOIN] Tracing Particles Parameters 
 Fld_4
  Prm_VX,VY,VZ Velocities in Active CS
  Typ_Real3
 Fld_7
  Prm_Chrg  Particle charge
  Typ_Real
  Def_0
 Fld_8
  Prm_Mass  Particle mass
  Typ_Real
  Def_1
:E END
:! 
:N Fnc_TRPOIN_cs
:S    344,   191,   146
:T Command
:C )! Fnc_TRPOIN_cs ORPHAN
:A    ..in Activ CS
:D Define Trace Points in Active Coordinate System
:K #(PREP7)
:P (THERMAL)
:H Hlp_C_TRPOIN
Cmd_TRPOIN
 Fld_0
  Typ_Lab
  Prm_[TRPOIN]  Define Trace Points in Active Coordinate System
 Fld_2
  Prm_X,Y,Z  Location in active CS
  Typ_REAL3
:E End
:! 
:N Fnc_TRTIME
:S    664,   209,   448
:T Command
:C )! Fnc_TRTIME
:A    Time Interval
:D Time Interval for Flow Trace
:H Hlp_C_TRTIME
:K (lsdyna)
:K #(POST1+RESULTS+CFD*ELECTRIC*MAGNETIC)
:P (FLOTRAN*ELECMAG)
Inp_NoApply
Cmd_TRTIME
 Fld_0
  Typ_Lab
  Prm_[TRTIME]  Particle Flow Trace (PLTR) options
 Fld_2
  Prm_TIME    Trace time (secs)
  Typ_REAL
  Def_*GET(COMMON,,CPOST1,,REAL,560)
 Fld_3
  Prm_SPACING Particle spacing (secs)
  Typ_REAL
  Def_*GET(COMMON,,CPOST1,,REAL,561)
 Fld_5
  Prm_SIZE    Particle size
  Typ_REAL
  Def_*GET(COMMON,,CPOST1,,REAL,563)
 Fld_6
  Prm_LENGTH  Particle length fraction
  Typ_REAL
  Def_*GET(COMMON,,CPOST1,,REAL,564)
:E END
:! 
:N Fnc_TSRES_30
:S    116,    70,    39
:T Command
:C )! Fnc_TSRES_30
Inp_P
Cmd_TSRES
 Fld_2
  Typ_Def_ERASE
:E END
:! 
:N Fnc_TSRES_31
:S    285,   119,   159
:T Command
:C )! Fnc_TSRES_31
:D Time step reset at time points
:H Hlp_C_TSRES
Cmd_)/NOPR
Cmd_)*CSET,21,21
 Fld_0
  Typ_Lab
  Prm_   TSRES command based on
 Fld_2
  Prm_Existing array
  Typ_LIS
  LIS_*READ,PARA
Cmd_)/GO
Cal_Fnc_TSRES_311
:E END
:! 
:N Fnc_TSRES_311
:S    162,    72,    83
:T Command
:C )! Fnc_TSRES_311
Inp_P
Cmd_TSRES
 Fld_2
  Dlm_%
 Fld_3
  Typ_Def_*CPAR(21)
  Dlm_%
 Fld_4
  Typ_Lab
:E END
:! 
:N Fnc_TSRES_32
:S    303,   123,   173
:T Command
:C )! Fnc_TSRES_32
:D Create New Array for TSRES command
:H Hlp_C_TSRES
Inp_Noapply
Cmd_)/NOPR
Cmd_)*CSET,21,21
 Fld_2
  Prm_Name of new array
  Typ_Char,32,32
Cmd_)*SET,_zn
 Fld_2
  Prm_Number of time points
  Typ_Int
  Def_1
Cal_Fnc_TSRES_321
:E END
:! 
:N Fnc_TSRES_321
:S    257,    72,   178
:T Command
:C )! Fnc_TSRES_321
Inp_P
Cmd_)/GO
! Exclude_from_paths
Cmd_*DIM
 Fld_2
  Typ_Def_*CPAR(21)
 Fld_3
  Typ_Def_ARRAY
 Fld_4
  Typ_Def_*PAR(_zn)
 Fld_5
  Typ_Def_1
 Fld_6
  Typ_Def_1
Cal_Fnc_TSRES_322
:E END
:! 
:N Fnc_TSRES_322
:S    225,    72,   146
:T Command
:C )! Fnc_TSRES_322
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(21)
  Dlm_(
  Fld_3
  Typ_Def_1
  Dlm_,
  Fld_4
  Typ_Def_1
  Dlm_)
  Fld_5
  Typ_Lab
Cal_Fnc_TSRES_323
:E END
:! 
:N Fnc_TSRES_323
:S    162,    72,    83
:T Command
:C )! Fnc_TSRES_323
Inp_P
Cmd_TSRES
 Fld_2
  Dlm_%
 Fld_3
  Typ_Def_*CPAR(21)
  Dlm_%
 Fld_4
  Typ_Lab
:E END
:! 
:N Fnc_TUNIF
:S    279,   167,   105
:T Command
:C )! Fnc_TUNIF
:A Uniform Temp
:D Uniform Temperature
:K #(PREP7*SOLUTION)
:P (LSDYNA*LINPLUS*THERMAL)
:H Hlp_C_TUNIF
Inp_NoApply
Cmd_TUNIF
Fld_2
 Prm_[TUNIF]  Uniform temperature
 Typ_REAL
 Def_*GET(common,,bfcom,,real,1)
:E END
:! 
:N Fnc_Taper_explct
:S    992,   322,   663
:T Cmd
:C )! Fnc_Taper_explct
:C )/NOPR
:C )_z1=sectinqr(0,14)
:C )_z2=_z1+1
:C )*get,_z1,common,,sectionc,,int,6
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A By XYZ Location
:D Create Taper Section
:H Hlp_UI_tapersect
Cmd_SECTYPE
 Fld_0
  Typ_Lab
  Prm_Define a New Taper Section from Existing Beams
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[SECTYPE] New Taper Section ID
  Typ_INT
  Def_*PAR(_z2)
 Fld_3
  Typ_Def_TAPER
 Fld_5
  Prm_NAME   New section name
  Typ_CHAR,8
Cmd_SECDATA
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[SECDATA] Beginning Section ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
 Fld_3
  Prm_XYZ Location of Beginning Sect
  Typ_REAL3
Cmd_SECDATA
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[SECDATA] Ending Section ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
 Fld_3
  Prm_XYZ Location of Ending Section
  Typ_REAL3
:E END
:! 
:N Fnc_Taper_pick
:S    815,   342,   466
:T Cmd
:C )! Fnc_Taper_pick
:C )/NOPR
:C )*del,_z
:C )*dim,_z,,9
:C )_z1=sectinqr(0,14)
:C )_z2=_z1+1
:C )*get,_z1,common,,sectionc,,int,6
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A By Picked Nodes
:D Create Taper Section
:H Hlp_C_SECTYPE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_Define a New Taper Section from Existing Beams
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[SECTYPE] New Taper Section ID
  Typ_INT
  Def_*PAR(_z2)
 Fld_3
  Typ_Def_TAPER
Cmd_)*CSET,1,1
 Fld_2
  Prm_NAME   New section name
  Typ_CHAR,8
Cmd_)*SET,_z(2)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[SECDATA] Beginning Section ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
Cmd_)/GO
Cal_Fnc_Taper_pick_2
:E END
:! 
:N Fnc_Taper_pick_2
:S    303,   134,   162
:T Cmd
:C )! Fnc_Taper_pick_2
:A By Picked Nodes
:D Create Taper Section
:H Hlp_C_SECTYPE
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_zn1
 Fld_2
  Prm_[SECDATA]  Pick or enter node for Beginning Section
  Typ_NODE
  Min_0
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_Taper_pick_3
:E END
:! 
:N Fnc_Taper_pick_3
:S    429,   134,   288
:T Cmd
:C )! Fnc_Taper_pick_3
:A By Picked Nodes
:D Create Taper Section
:H Hlp_C_SECTYPE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(6)
 Fld_0
  Typ_Lab
  Prm_Define a New Taper Section from Existing Beams
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[SECDATA] Ending Section ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
Cmd_)/GO
Cal_Fnc_Taper_pick_4
:E END
:! 
:N Fnc_Taper_pick_4
:S    300,   134,   159
:T Cmd
:C )! Fnc_Taper_pick_4
:A By Picked Nodes
:D Create Taper Section
:H Hlp_C_SECTYPE
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_zn2
 Fld_2
  Prm_[SECDATA]  Pick or enter node for Ending Section
  Typ_NODE
  Min_0
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_Taper_pick_5
:E END
:! 
:N Fnc_Taper_pick_5
:S    714,   355,   352
:T Cmd
:C )! Fnc_Taper_pick_5
:C )/NOPR
:C )*GET,_z(3),NODE,_zn1,LOC,X
:C )*GET,_z(4),NODE,_zn1,LOC,Y
:C )*GET,_z(5),NODE,_zn1,LOC,Z
:C )*GET,_z(7),NODE,_zn2,LOC,X
:C )*GET,_z(8),NODE,_zn2,LOC,Y
:C )*GET,_z(9),NODE,_zn2,LOC,Z
:C )/GO
:A By Picked Nodes
:D Create Taper Section
:H Hlp_C_SECTYPE
:H Hlp_C_SECDATA
Inp_P
Cmd_SECTYPE
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Typ_Def_TAPER
 Fld_5
  Typ_Def_*CPAR(1)
Cmd_SECDATA
 Fld_2
  Typ_Def_*PAR(_z(2))
 Fld_3
  Typ_Def_*PAR(_z(3))
 Fld_4
  Typ_Def_*PAR(_z(4))
 Fld_5
  Typ_Def_*PAR(_z(5))
Cmd_SECDATA
 Fld_2
  Typ_Def_*PAR(_z(6))
 Fld_3
  Typ_Def_*PAR(_z(7))
 Fld_4
  Typ_Def_*PAR(_z(8))
 Fld_5
  Typ_Def_*PAR(_z(9))
:E END
:! 
:N Fnc_TempUnits
:S    409,   203,   199
:T Cmd
:A Temperature Units
:D Specify Temperature Units
:K (pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
:P ((LINPLUS*THERMAL*FLOTRAN)
:H Hlp_C_TOFFST
Inp_NoApply
Cmd_TOFFST
 Fld_2
  Prm_[TOFFST] Temperature units
  Typ_Lis_OptionB
   Lis_Kelvin or Rankin,0
   Lis_Celsius         ,273
   Lis_Fahrenheit      ,460
   Def_*GET(common,,soptcm,,real,1)
:E END
:! 
:N Fnc_To_Be_Done
:S    126,   109,    10
:T Command
:C )! Fnc_To_Be_Done ORPHAN
:A To Be Done
:D To Be Done
Cmd_)!   
:E END
:! 
:N Fnc_TopoFil
:S    229,   188,    34
:T Cmd
:C )! Fnc_TopoFil
:C )! The purpose of this block is to make the conversion
:C )! from UIDL to EUIDL function properly
:A Topo Opt
:K topoopt
Inp_P
! Exclude_from_paths
Cmd_)!
:E END
:! 
:N Fnc_Transduc_1
:S   1250,   226,  1017
:T Command
:D KEYOPTs for 126 EMT
:H Hlp_E_S4.126
:H Hlp_C_R
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(3)=0
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=126
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Electro-Mechanical Transducer
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)*SET,_z(4)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select DOF set
  Typ_LIS_RadioB
  LIS_UX VOLT    DOFs ,0
  LIS_UY VOLT    DOFs ,2
  LIS_UZ VOLT    DOFs ,3
Cmd_)*SET,_z(43)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select DC Voltage Drop as
  Typ_LIS_RadioB
  LIS_Unknown         ,0
  LIS_Constrained     ,1
Cmd_)/GO
Cmd_R
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_           Real Constants
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_5
  Prm_Initial gap                 GAP
  Typ_Real
  Def_*GET(rcon,_z(5),const,3)
 Fld_6
  Typ_REAL
  Prm_Minimal gap              GAPMIN
  Def_*GET(rcon,_z(5),const,4)
 Fld_7
  Typ_REAL
  Prm_Gap Normal Stiffness         KN
  Def_*GET(rcon,_z(5),const,5)
Cmd_)/NOPR
Cmd_)*SET,_z(44)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select input Capacitance-Gap as 
  Typ_LIS_RadioB
  LIS_Function - curve,0
  LIS_Data points     ,1
Cal_Fnc_EMT_RC0,2,LE,0
Cal_Fnc_EMT_RC1,2,GE,1
:E END
:! 
:N Fnc_Transducer
:S    248,   125,   116
:T Cmd_P
:A ElecMech
:D Electro-Mechanical Transducer
:H Hlp_E_S4.126
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[EMT]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_215
Cal_Fnc_Transduc_1
:E END
:! 
:N Fnc_Trn_Dam_1
:S    761,   235,   519
:T Command
:D Real Constants for 14 - Linear Trans damper
:H Hlp_E_S4.14
:H Hlp_C_R
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(3)=0
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=14
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Linear Trans Damper
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_4
  Typ_REAL
  Prm_Damping coefficient         CV1
Cmd_)/NOPR
Cmd_)*SET,_z(4)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select DOF set
  Typ_LIS_RadioB
  LIS_Longitud UX DOF ,1
  LIS_Longitud UY DOF ,2
  LIS_Longitud UZ DOF ,3
  LIS_2D:UX UY    DOFs,14
  LIS_3D:UX UY UZ DOFs,0
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E END
:! 
:N Fnc_Trn_Dam_2
:S    830,   238,   585
:T Command
:D Real Constants for 14 - Nonlinear Trans Damper
:H Hlp_E_S4.14
:H Hlp_C_R
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(3)=1
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=14
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Nonlinear Transitional Damper
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_4
  Typ_REAL
  Prm_Damping coefficient         CV1
 Fld_5
  Typ_REAL
  Prm_Nonlinear damping coeff     CV2
Cmd_)/NOPR
Cmd_)*SET,_z(4)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select DOF set
  Typ_LIS_RadioB
  LIS_Longitud UX DOF ,1
  LIS_Longitud UY DOF ,2
  LIS_Longitud UZ DOF ,3
  LIS_2D:UX UY    DOFs,14
  LIS_3D:UX UY UZ DOFs,0
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E END
:! 
:N Fnc_Trn_Dam_No
:S    266,   124,   135
:T Cmd_P
:A    Nonlin Trans
:D Nonlinear Trans Damper
:H Hlp_E_S4.14
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Nonlinear Trans Damper]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_1213
Cal_Fnc_Trn_Dam_2
:E END
:! 
:N Fnc_Trn_Damper
:S    259,   121,   131
:T Cmd_P
:A    Linear Trans
:D Linear Trans Damper
:H Hlp_E_S4.14
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Linear Trans Damper]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_213
Cal_Fnc_Trn_Dam_1
:E END
:! 
:N Fnc_Trn_Spr_1
:S    762,   229,   526
:T Command
:D Real Constants for 14 - Linear Spring
:H Hlp_E_S4.14
:H Hlp_C_R
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(3)=0
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=14
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Linear Transitional Spring
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Spring constant               K
Cmd_)/NOPR
Cmd_)*SET,_z(4)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select DOF set
  Typ_LIS_RadioB
  LIS_Longitud UX DOF ,1
  LIS_Longitud UY DOF ,2
  LIS_Longitud UZ DOF ,3
  LIS_2D:UX UY    DOFs,14
  LIS_3D:UX UY UZ DOFs,0
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E END
:! 
:N Fnc_Trn_Spr_2
:S    790,   231,   552
:T Command
:D KEYOPTs for 39 - Nonlinear Trans Spring
:H Hlp_E_S4.39
:H Hlp_C_R
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(3)=0
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=39
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Nonlinear Transitional Spring
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)*SET,_z(4)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Elem behavior compress load 
   Typ_LIS_RadioB
   LIS_On compres curve,0
   LIS_No comprs resist,1
   LIS_Tens then comprs,2
Cmd_)*SET,_z(44)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select DOF set
  Typ_LIS_RadioB
  LIS_Longitud UX DOF ,1
  LIS_Longitud UY DOF ,2
  LIS_Longitud UZ DOF ,3
  LIS_2D:UX UY    DOFs,14
  LIS_3D:UX UY UZ DOFs,16
Cmd_)/GO
Cal_Fnc_NonlinRC
:E END
:! 
:N Fnc_Trn_Spr_No
:S    279,   130,   142
:T Cmd_P
:A    Nonlin Trans
:D Nonlinear Trans Spring
:H Hlp_E_S4.39
:P (ELECMAG+profs)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Nonlinear Transitional Spring]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_1212
Cal_Fnc_Trn_Spr_2
:E END
:! 
:N Fnc_Trn_Spring
:S    247,   115,   125
:T Cmd_P
:A    Linear Trans
:D Trans Spring 
:H Hlp_E_S4.14
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Linear Spring]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_212
Cal_Fnc_Trn_Spr_1
:E END
:! 
:N Fnc_Tutorial
:S    172,   107,    58
:T Cmd
:A Menu Name
:D Access the ANSYS Tutorials via your browser
Inp_P
Cmd_)/NOPR
Cmd_)TUTOR,0
Cmd_)/GO
Cal_Fnc_Tutorial_2
:E End
:! 
:N Fnc_Tutorial_2
:S   1713,   106,  1600
:T Cmd
:A Menu Name
:D ANSYS Tutorial Access
:H Hlp_UI_Tutorial
Inp_NoApply
Cmd_)/NOPR
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_The ANSYS Tutorials (formerly the ANSYS Workbook) are now available
 Fld_0
  Typ_Lab
  Prm_in HTML format and can be viewed in any HTML 3.2-compliant browser.
 Fld_0
  Typ_Lab
  Prm_The tutorials were designed for Netscape Communicator 4.0.
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_
 Fld_0
  Typ_Sep
Cmd_)TUTOR
K_CM(KEY1*KEY2*KEY3)
 Fld_0
  Typ_Lab
  Prm_
 Fld_2
  Prm_  View the ANSYS Tutorials using
  Typ_Lis_OptionB
   K_LN(KEY1)
   Lis_Netscape        ,1
   K_LN(KEY2+(INTELNT*ALPHANT))
   Lis_InternetExplorer,2
   K_LN(KEY2+intelnt+alphant)
   Lis_Mosaic(see help),2
   K_LN(KEY3)
   Lis_Other (see help),3
   K_LN(key1+key2+key3)
   Lis_Not Available   ,4
 Fld_0
  Typ_Lab
  Prm_
 Fld_0
  Typ_Lab
  K_LN(INTELNT*ALPHANT)
  Prm_The ANSYS Tutorial URL is: \ansys55\html\tutor_55\TUTORToc.htm
  K_LN(intelnt+alphant)
  Prm_The ANSYS Tutorial URL is: file:/ansys55/html/tutor_55/TUTORToc.htm
Cmd_)/GO
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_Access to a browser was not made available from within the ANSYS
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_program please see Help.  If you have access to a browser you can
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_access the ANSYS Tutorials by going to its URL at:
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  K_LN(INTELNT*ALPHANT)
  Prm_                         \ansys55\html\tutor_55\TUTORToc.htm
  K_LN(intelnt+alphant)
  Prm_                         file:/ansys55/html/tutor_55/TUTORToc.htm
 Fld_0
  Typ_Sep
:E End
:! 
:N Fnc_UIMP_iso
:S    320,   134,   179
:T Command
:C )! Fnc_UIMP_iso
:A    Isotropic
:D Isotropic Material Properties
:H Hlp_UI_uimp
Inp_NoApply
Cmd_)/NOPR
Cmd_)*Cset,1,1
 Fld_0
  Typ_Lab
  Prm_Isotropic Material Properties
 Fld_2
  Prm_     Specify material number
  Typ_INT
  Def_1
Cmd_)/GO
Cal_Fnc_UIMP_iso_2
:E End
:! 
:N Fnc_UIMP_iso_2
:S   5557,   331,  5219
:T Command
:C )! Fnc_UIMP_iso_2
:C )/NOPR
:C )*GET,_z1,CPAR,1
:C )*IF,_z1,LT,1,THEN
:C )_z1=1
:C )*ENDIF
:C )KEYW,NUXY,0
:C )*GET,_z2,PRXY,_z1
:C )*IF,_z2,EQ,TINY,THEN
:C )KEYW,NUXY,1
:C )*GET,_z2,NUXY,_z1
:C )*ENDIF
:C )/GO
:A    Isotropic
:D Isotropic Material Properties
:H Hlp_UI_uimp
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_Isotropic Material Properties
 Fld_0
  Typ_Lab
  Prm_Properties for Material Number %(I)_z1%
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus               EX
  Typ_REAL
  Def_*GET(EX,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  K_FL(NUXY)
  Typ_Def_NUXY
 Fld_3
  K_FL(nuxy)
  Typ_Def_PRXY
 Fld_6
  Prm_Poisson's ratio             NUXY
  Typ_REAL
  Def_*PAR(_z2)
!
Cmd_UIMP
K_CM(GXY)
 Fld_0
  Typ_Lab
   Prm_Keyword gxy allows test of GXY = EX/(2(1+NUXY))
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_GXY
 Fld_6
  Prm_Shear modulus                GXY
  Typ_REAL
  Def_*GET(GXY,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_ALPX
 Fld_6
  Prm_Thermal expansion coeff     ALPX
  Typ_REAL
  Def_*GET(ALPX,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_REFT
 Fld_6
  Prm_Reference temperature       REFT
  Typ_REAL
  Def_*GET(REFT,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC*PR_FLUID)
P_CM(FULL_ANS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_MU
 Fld_6
  Prm_Friction coefficient          MU
  Typ_REAL
  Def_*GET(MU,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_DAMP
 Fld_6
  Prm_Damping multiplier          DAMP
  Typ_REAL
  Def_*GET(DAMP,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC*PR_THERM*PR_FLUID*PR_CFD)
P_CM(LINPLUS*THERMAL*FLOTRAN)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                     DENS
  Typ_REAL
  Def_*GET(DENS,_z1)
! 
Fld_0
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_THERM*PR_FLUID*PR_CFD)
Typ_SEP
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_THERM*PR_FLUID*PR_CFD)
P_CM(THERMAL*FLOTRAN)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_KXX
 Fld_6
  Prm_Thermal conductivity         KXX
  Typ_REAL
  Def_*GET(KXX,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_THERM*PR_FLUID*PR_CFD)
P_CM(THERMAL*FLOTRAN)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_C
 Fld_6
  Prm_Specific heat                  C
  Typ_REAL
  Def_*GET(C,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID)
K_CM(pr_set*PR_THERM*PR_FLUID)
P_CM(THERMAL)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_ENTH
 Fld_6
  Prm_Enthalpy                    ENTH
  Typ_REAL
  Def_*GET(ENTH,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID)
K_CM(pr_set*PR_THERM*PR_FLUID)
P_CM(THERMAL)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_HF
 Fld_6
  Prm_Convection film coefficient   HF
  Typ_REAL
  Def_*GET(HF,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_THERM*PR_FLUID*PR_CFD)
P_CM(THERMAL)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_EMIS
 Fld_6
  Prm_Emissivity                  EMIS
  Typ_REAL
  Def_*GET(EMIS,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID)
K_CM(pr_set*PR_THERM*PR_FLUID)
P_CM(THERMAL)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_QRATE
 Fld_6
  Prm_Heat generation rate       QRATE
  Typ_REAL
  Def_*GET(QRATE,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID)
K_CM(pr_set*PR_FLUID)
P_CM(FULL_ANS*FLOTRAN)
Fld_0
Typ_SEP
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_VISC
 Fld_6
  Prm_Viscosity                   VISC
  Typ_REAL
  Def_*GET(VISC,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID)
K_CM(pr_set*PR_FLUID)
P_CM(FULL_ANS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_SONC
 Fld_6
  Prm_Sonic velocity              SONC
  Typ_REAL
  Def_*GET(SONC,_z1)
! 
Fld_0
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*(PR_ELMAG+pmethod))
Typ_SEP
! 
Cmd_UIMP
K_CM(pr_set*(PR_ELMAG+pmethod))
P_CM(ELECMAG)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_MURX
 Fld_6
  Prm_Relative  permeability      MURX
  Typ_REAL
  Def_*GET(MURX,_z1)
! 
Cmd_UIMP
K_CM(pr_set*(PR_ELMAG+pmethod))
P_CM(ELECMAG)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_MGXX
 Fld_6
  Prm_Magnetic coercive force     MGXX
  Typ_REAL
  Def_*GET(MGXX,_z1)
! 
Fld_0
Typ_SEP
! 
Cmd_UIMP
K_CM(pr_set*(PR_ELMAG+pmethod)*PR_THERM)
P_CM(THERMAL*ELECMAG)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_RSVX
 Fld_6
  Prm_Electrical resistivity      RSVX
  Typ_REAL
  Def_*GET(RSVX,_z1)
! 
Cmd_UIMP
K_CM(pr_set*PR_ELMAG)
P_CM(ELECMAG*FULL_ANS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_PERX
 Fld_6
  Prm_Relative  permittivity      PERX
  Typ_REAL
  Def_*GET(PERX,_z1)
! 
Cmd_UIMP
K_CM(EDGEELC)
K_CM(pr_set*(PR_ELMAG+pmethod))
P_CM(ELECMAG)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_LSST
 Fld_6
  Prm_Loss tangent                LSST
  Typ_REAL
  Def_*GET(LSST,_z1)
Cmd_)/NOPR
Cmd_)KEYW,NUXY,0
Cmd_)/GO
:E END
:! 
:N Fnc_UIMP_ortho
:S    331,   142,   182
:T Command
:C )! Fnc_UIMP_ortho
:A    Orthotropic
:D Orthotropic Material Properties
:H Hlp_UI_uimp
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_0
  Typ_Lab
  Prm_Orthotropic Material Properties
 Fld_2
  Prm_     Specify material number
  Typ_INT
  Def_1
Cmd_)/GO
Cal_Fnc_UIMP_ortho2
:E End
:! 
:N Fnc_UIMP_ortho2
:S   5929,   225,  5697
:T Command
:C )! Fnc_UIMP_ortho2
:C )/NOPR
:C )*GET,_z1,CPAR,1
:C )*IF,_z1,LT,1,THEN
:C )_z1=1
:C )*ENDIF
:C )/GO
:A    Orthotropic
:D Orthotropic Material Properties
:H Hlp_UI_uimp
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_Orthotropic Material Properties
 Fld_0
  Typ_Lab
  Prm_Properties for Material Number %(I)_z1%
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_EX,EY,EZ
 Fld_4
  Prm_Young's modulus         EX,EY,EZ
  Typ_REAL3
  Def_*GET(EX,_z1),*GET(EY,_z1),*GET(EZ,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_PRXY,PRYZ,PRXZ
 Fld_4
  Prm_Poisson's (major) PRXY,PRYZ,PRXZ
  Typ_REAL3
  Def_*GET(PRXY,_z1),*GET(PRYZ,_z1),*GET(PRXZ,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_0
  Typ_Lab
  Prm_             OR
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_NUXY,NUYZ,NUXZ
 Fld_4
  Prm_Poisson's (minor) NUXY,NUYZ,NUXZ
  Typ_REAL3
  Def_*GET(NUXY,_z1),*GET(NUYZ,_z1),*GET(NUXZ,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_GXY,GYZ,GXZ
 Fld_4
  Prm_Shear modulus        GXY,GYZ,GXZ
  Typ_REAL3
  Def_*GET(GXY,_z1),*GET(GYZ,_z1),*GET(GXZ,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_ALPX,ALPY,ALPZ
 Fld_4
  Prm_Therm expan coeff ALPX,ALPY,ALPZ
  Typ_REAL3
  Def_*GET(ALPX,_z1),*GET(ALPY,_z1),*GET(ALPZ,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_REFT
 Fld_6
  Prm_Reference temperature       REFT
  Typ_REAL
  Def_*GET(REFT,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC*PR_FLUID)
P_CM(FULL_ANS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_MU
 Fld_6
  Prm_Friction coefficient          MU
  Typ_REAL
  Def_*GET(MU,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_DAMP
 Fld_6
  Prm_Damping multiplier          DAMP
  Typ_REAL
  Def_*GET(DAMP,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_STRUC*PR_THERM*PR_FLUID*PR_CFD)
P_CM(LINPLUS*THERMAL*FLOTRAN)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                     DENS
  Typ_REAL
  Def_*GET(DENS,_z1)
!
Fld_0
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_THERM)
Typ_SEP
!
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_THERM*PR_FLUID*PR_CFD)
P_CM(THERMAL*FLOTRAN)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_KXX,KYY,KZZ
 Fld_4
  Prm_Therml conductivity KXX,KYY,KZZ
  Typ_REAL3
  Def_*GET(KXX,_z1),*GET(KYY,_z1),*GET(KZZ,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_THERM*PR_FLUID*PR_CFD)
P_CM(THERMAL*FLOTRAN)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_C
 Fld_6
  Prm_Specific heat                  C
  Typ_REAL
  Def_*GET(C,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID)
K_CM(pr_set*PR_THERM*PR_FLUID)
P_CM(THERMAL)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_ENTH
 Fld_6
  Prm_Enthalpy                    ENTH
  Typ_REAL
  Def_*GET(ENTH,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID)
K_CM(pr_set*PR_THERM*PR_FLUID)
P_CM(THERMAL)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_HF
 Fld_6
  Prm_Convection film coefficient   HF
  Typ_REAL
  Def_*GET(HF,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*PR_THERM*PR_FLUID*PR_CFD)
P_CM(THERMAL)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_EMIS
 Fld_6
  Prm_Emissivity                  EMIS
  Typ_REAL
  Def_*GET(EMIS,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID)
K_CM(pr_set*PR_THERM*PR_FLUID)
P_CM(THERMAL)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_QRATE
 Fld_6
  Prm_Heat generation rate       QRATE
  Typ_REAL
  Def_*GET(QRATE,_z1)
!
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID)
K_CM(pr_set*PR_FLUID)
P_CM(FULL_ANS*FLOTRAN)
Fld_0
Typ_SEP
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_VISC
 Fld_6
  Prm_Viscosity                   VISC
  Typ_REAL
  Def_*GET(VISC,_z1)
! 
Cmd_UIMP
K_CM((electric+magnetic)*STRUCTRL*THERMAL*FLUID)
K_CM(pr_set*PR_FLUID)
P_CM(FULL_ANS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_SONC
 Fld_6
  Prm_Sonic velocity              SONC
  Typ_REAL
  Def_*GET(SONC,_z1)
!
Fld_0
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_CM(pr_set*(PR_ELMAG+pmethod))
Typ_SEP
! 
Cmd_UIMP
K_CM(pr_set*(PR_ELMAG+pmethod))
P_CM(ELECMAG)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_MURX,MURY,MURZ
 Fld_4
  Prm_Rel permeability  MURX,MURY,MURZ
  Typ_REAL3
  Def_*GET(MURX,_z1),*GET(MURY,_z1),*GET(MURZ,_z1)
! 
Cmd_UIMP
K_CM(pr_set*(PR_ELMAG+pmethod))
P_CM(ELECMAG)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_MGXX,MGYY,MGZZ
 Fld_4
  Prm_Mag coercive forc MGXX,MGYY,MGZZ
  Typ_REAL3
  Def_*GET(MGXX,_z1),*GET(MGYY,_z1),*GET(MGZZ,_z1)
!
Fld_0
Typ_SEP
! 
Cmd_UIMP
K_CM(pr_set*PR_THERM*(PR_ELMAG+pmethod))
P_CM(THERMAL*ELECMAG)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_RSVX,RSVY,RSVZ
 Fld_4
  Prm_Elect resistivity RSVX,RSVY,RSVZ
  Typ_REAL3
  Def_*GET(RSVX,_z1),*GET(RSVY,_z1),*GET(RSVZ,_z1)
! 
Cmd_UIMP
K_CM(pr_set*PR_ELMAG)
P_CM(ELECMAG*FULL_ANS)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_PERX,PERY,PERZ
 Fld_4
  Prm_Rel permittivity  PERX,PERY,PERZ
  Typ_REAL3
  Def_*GET(PERX,_z1),*GET(PERY,_z1),*GET(PERZ,_z1)
!
Cmd_UIMP
K_CM(EDGEELC)
K_CM(pr_set*(PR_ELMAG+pmethod))
P_CM(ELECMAG)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_LSST
 Fld_6
  Prm_Loss tangent                LSST
  Typ_REAL
  Def_*GET(LSST,_z1)
:E END
:! 
:N Fnc_UNADAPTED_ET
:S    665,   100,   558
:T Cmd
:C )! Fnc_UNADAPTED_ET
:A Element 17x/4x
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)*CSET,100,100,'ERROR,'
Cmd_)*CSET,101,101,_z(3)
Cmd_)*CSET,110,110,' Element type %I cannot be used '
Cmd_)*CSET,111,111,' with the GCGEN or ESURF command'
Cmd_)*CSET,112,112,'s to create &'
Cmd_)*CSET,113,113,'Node-to-Surface contact elements'
Cmd_)*CSET,114,114,'. %/Generation of contact elemen'
Cmd_)*CSET,115,115,'ts is aborted. '
Cmd_)*CSET,116,121,' ',' ',' ',' ',' ',' '
Cmd_)*CSET,122,130,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,131,139,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)/GO
!
Cal_Fnc_Message
:E End
:! 
:N Fnc_UNADPT_BETA0
:S    652,    97,   548
:T Cmd
:C )! Fnc_UNADPT_BETA0
:A Element 17x
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)*CSET,100,100,'ERROR,'
Cmd_)*CSET,101,101,_z(3)
Cmd_)*CSET,110,110,' Element type %I cannot be used '
Cmd_)*CSET,111,111,' with the ESURF command to creat'
Cmd_)*CSET,112,112,'e &'
Cmd_)*CSET,113,113,'Node-to-Surface contact elements'
Cmd_)*CSET,114,114,'. %/Generation of contact elemen'
Cmd_)*CSET,115,115,'ts is aborted. '
Cmd_)*CSET,116,121,' ',' ',' ',' ',' ',' '
Cmd_)*CSET,122,130,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,131,139,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)/GO
!
Cal_Fnc_Message
:E End
:! 
:N Fnc_UNDO
:S     92,    65,    20
:T Command
:A Session Editor
Inp_P
Cmd_)UNDO,NEW
:E END
:! 
:N Fnc_UPMOD
:S    475,   162,   306
:T Command
:C )! Fnc_UPMOD
:A Updt Node Coord
:D Update Nodal Coordinates
:K #((PREP7*SOLUTION)*(NOFILTER))
:H Hlp_C_UPCOORD
Cmd_UPCOORD
 Fld_0
  Typ_Lab
  Prm_[UPCOORD] Update nodal coordinates
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_
 Fld_2
  Prm_FACTOR Multiply displacements by 
  Typ_Real
  Def_1.0
 Fld_0
  Typ_Lab
  Prm_
 Fld_3
  Prm_KEY Set displacements to zero
  Typ_Lis_RadioB
  Lis_OFF,OFF
  Lis_ON,ON
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_USRCAL
:S    515,   160,   348
:T Command
:C )! Fnc_USRCAL
:A User Routines
:D Activate User Routines
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_USRCAL
Cmd_USRCAL
 Fld_0
  Typ_Lab
  Prm_[USRCAL]  Activate User Routines
 Fld_2
  Prm_Rnam1-9 Routines to be activated
  Typ_MLis
  LIS_USREFL
  LIS_USERCV
  LIS_USERPR
  LIS_USERFD
  LIS_USEROU
  LIS_USERMC
  LIS_USERFX
  LIS_USERCH
  LIS_USOLBEG
  LIS_ULDBEG
  LIS_USSBEG
  LIS_UITBEG
  LIS_UITFIN
  LIS_USSFIN
  LIS_ULDFIN
  LIS_USOLFIN
  Bnd_0.0,9.0
:E END
:! 
:N Fnc_User_Beam
:S   1514,   746,   761
:T Cmd
:C )! Fnc_User_Beam
:C )/NOPR
:C )*DEL,_zc
:C )*DEL,_zp
:C )*SET,_zc,'/*.SECT*'
:C )*SET,_zp,'\*.SECT*'
:C )_z1=sectinqr(0,14)
:C )_z1=_z1+1
:C )*GET,_z2,common,,sectionc,,chr8,5
:C )*IF,_z2,NE,'OFF',THEN
:C )*GET,_z3,common,,sectionc,,chr8,7
:C )*GET,_z4,common,,sectionc,,chr8,9
:C )*GET,_z5,common,,sectionc,,chr8,11
:C )*GET,_z6,common,,sectionc,,chr8,13
:C )*GET,_z7,common,,sectionc,,chr8,15
:C )*GET,_z8,common,,sectionc,,chr8,17
:C )*GET,_z9,common,,sectionc,,chr8,19
:C )*ELSE
:C )*SET,_z2,' '
:C )*SET,_z3,' '
:C )*SET,_z4,' '
:C )*SET,_z5,' '
:C )*SET,_z6,' '
:C )*SET,_z7,' '
:C )*SET,_z8,' '
:C )*SET,_z9,'.'
:C )*ENDIF
:C )/GO
:A Read Sect Mesh
:D User Defined Mesh
:H Hlp_UI_usrbeam
Cmd_SECTYPE
 Fld_2
  Prm_[SECTYPE] Section ID number
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Typ_Def_BEAM,MESH
 Fld_4
  Prm_          Section Name
  Typ_CHAR
 Fld_0
  Typ_Sep
Cmd_SECOFFSET
 Fld_2
  Prm_[SECOFFSET] Offset node to
  Typ_LIS_OPTIONB
  LIS_Section Origin  ,ORIG
  LIS_Section Centroid,CENT
  LIS_Sec Shear Center,SHRC
  LIS_Chosen Location ,USER
  Def_CENT
 Fld_3
  Prm_  Coordinates (Chosen Location)
  Typ_REAL2
 Fld_0
  Typ_Sep
Cmd_SECREAD
 Fld_0
  Typ_Lab
  Prm_[SECREAD]  Read a file containing User Defined Mesh
 Fld_2
  Prm_FILE    Section library file
  Typ_FILE
K_LN(intelnt+alphant)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zc%)
K_LN(INTELNT*ALPHANT)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zp%)
 Fld_5
  Typ_Def_MESH
:E END
:! 
:N Fnc_V
:S    253,   129,   117
:T Cmd_P
:C )! Fnc_V
:A Through KPs
:D Create Volume thru KPs
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_V
Inp_P
Cmd_V
 Fld_2
  Typ_KEYP
  Prm_[V]  Pick or enter keypoints defining the volume
  Min_4
  Cnt_8
  Pfm_2
  Pdp_1
:E END
:! 
:N Fnc_VA
:S    243,   129,   107
:T Cmd_P
:C )! Fnc_VA
:A By Areas
:D Create Volume by Areas
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VA
Inp_P
Cmd_VA
 Fld_2
  Typ_AREA
  Prm_[VA]  Pick or enter areas defining the volume
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VA53
:S    252,   138,   107
:T Cmd_P
:C )! Fnc_VA
:A Volume by Areas
:D Create Volume by Areas
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VA
Inp_P
Cmd_VA
 Fld_2
  Typ_AREA
  Prm_[VA]  Pick or enter areas defining the volume
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VADD
:S    235,   123,   105
:T Cmd_P
:C )! Fnc_VADD
:A Volumes
:D Add Volumes
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VADD
Inp_P
Cmd_VADD
 Fld_2
  Typ_VOLU
  Prm_[VADD]  Pick or enter volumes to be added
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VADD_igs
:S    246,   134,   105
:T Cmd_P
:C )! Fnc_VADD_igs
:A    Volumes
:D Add Volumes
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VADD
Inp_P
Cmd_VADD
 Fld_2
  Typ_VOLU
  Prm_[VADD]  Pick or enter volumes to be added
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VAGeoRepair
:S    266,   152,   107
:T Cmd_P
:C )! Fnc_VAGeoRepair
:A Create Volume
:D Create Volume by Areas
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VA
Inp_P
Cmd_VA
 Fld_2
  Typ_AREA
  Prm_[VA]  Pick or enter areas defining the volume
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VATT
:S   1160,   519,   634
:T Command
:C )! Fnc_VATT
:C )/NOPR
:C )KEYW,ETLIST,0
:C )KEYW,RLLIST,0
:C )KEYW,MPLIST,0
:C )KEYW,CSLIST,0
:C )_z1=ETYIQR(0,12)
:C )*IF,_z1,gt,10,then
:C )KEYW,ETLIST,1
:C )*ENDIF
:C )_z2=RLINQR(0,12)
:C )*IF,_z2,gt,10,then
:C )KEYW,RLLIST,1
:C )*ENDIF
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )_z4=CSYIQR(0,12)
:C )*IF,_z4,gt,10,then
:C )KEYW,CSLIST,1
:C )*ENDIF
:C )/GO
:A All Volumes
:D Volume Attributes
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VATT
Inp_NoApply
Cmd_VATT
 Fld_0
  Typ_Lab
  Prm_[VATT]  Assign Attributes to All Selected Volumes 
 Fld_0
 Typ_Sep
 Fld_2
  Prm_MAT   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
 Fld_0
 Typ_Sep
 Fld_3
  Prm_REAL  Real constant set number
  K_LN(rllist)
  Typ_LIS_OPTIONB
  K_LN(RLLIST)
  Typ_LIS
  LIS_*READ,REAL
 Fld_0
 Typ_Sep
 Fld_4
  Prm_TYPE  Element type number
  K_LN(etlist)
  Typ_LIS_OPTIONB
  K_LN(ETLIST)
  Typ_LIS
  LIS_*READ,TYPE
 Fld_0
 Typ_Sep
 Fld_5
  Prm_ESYS  Element coordinate sys
  K_LN(cslist)
  Typ_LIS_OPTIONB
  K_LN(CSLIST)
  Typ_LIS
  LIS_*READ,ESYS
 Fld_0
 Typ_Sep
:E END
:! 
:N Fnc_VATT_p
:S    431,   140,   284
:T Cmd_P
:C )! Fnc_VATT_p
:A Picked Volumes
:D Volume Attributes
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VATT
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,VOLU
! Exclude_from_paths
Cmd_VSEL
 Fld_5
  Prm_[VATT]  Pick or enter volumes for attribute assignment
  Typ_VOLU
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,VOLU
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_VATT_p2
:E END
:! 
:N Fnc_VATT_p2
:S   1324,   517,   800
:T Command
:C )! Fnc_VATT_p2
:C )/NOPR
:C )KEYW,ETLIST,0
:C )KEYW,RLLIST,0
:C )KEYW,MPLIST,0
:C )KEYW,CSLIST,0
:C )_z1=ETYIQR(0,12)
:C )*IF,_z1,gt,10,then
:C )KEYW,ETLIST,1
:C )*ENDIF
:C )_z2=RLINQR(0,12)
:C )*IF,_z2,gt,10,then
:C )KEYW,RLLIST,1
:C )*ENDIF
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )_z4=CSYIQR(0,12)
:C )*IF,_z4,gt,10,then
:C )KEYW,CSLIST,1
:C )*ENDIF
:C )/GO
:A Picked Volumes
:D Volume Attributes
:K #(PREP7)
:H Hlp_C_VATT
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
Cmd_)/GO
Cmd_VATT
 Fld_0
  Typ_Lab
  Prm_[VATT]  Assign Attributes to Picked Volumes 
 Fld_0
 Typ_Sep
 Fld_2
  Prm_MAT   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
 Fld_0
 Typ_Sep
 Fld_3
  Prm_REAL  Real constant set number
  K_LN(rllist)
  Typ_LIS_OPTIONB
  K_LN(RLLIST)
  Typ_LIS
  LIS_*READ,REAL
 Fld_0
 Typ_Sep
 Fld_4
  Prm_TYPE  Element type number
  K_LN(etlist)
  Typ_LIS_OPTIONB
  K_LN(ETLIST)
  Typ_LIS
  LIS_*READ,TYPE
 Fld_0
 Typ_Sep
 Fld_5
  Prm_ESYS  Element coordinate sys
  K_LN(cslist)
  Typ_LIS_OPTIONB
  K_LN(CSLIST)
  Typ_LIS
  LIS_*READ,ESYS
 Fld_0
 Typ_Sep
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_VCLEAR
:S    249,   131,   111
:T Cmd_P
:C )! Fnc_VCLEAR
:A Volumes
:D Clear Volumes
:K #(PREP7)
:H Hlp_C_VCLEAR
:P (mdl2d)
Inp_P
Cmd_VCLEAR
 Fld_2
  Typ_VOLU
  Prm_[VCLEAR]  Pick or enter volumes to be cleared
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VCNTRL
:S    520,   159,   354
:T Command
:C )! Fnc_VCNTRL
:A     Volu Cntrls
:D Interior Tet Element Sizing Control for RV52
:K #(PREP7)
:H Hlp_C_MOPT
Inp_NoApply
Cmd_MOPT
 Fld_0
  Typ_Lab
  Prm_[MOPT]  Global internal tet element sizing 
 Fld_2
  Typ_Def_TETEXPND
 Fld_3
  Typ_Real
  Prm_TETEXPND  Tet element expansion factor-
  Def_*GET(common,,mesh_tol,,real,33)
 Fld_0
  Typ_Lab
  Prm_       - use 0.1 (fine) thru 3.0 (coarse). 
 Fld_0
  Typ_Lab
  Prm_       - recommended values between 0.5 and 2.0
:E END
:! 
:N Fnc_VCROSS
:S   1212,   190,  1015
:T Command
:C )! Fnc_VCROSS
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Cross Product
:D Cross Product of Element Table Items
:H Hlp_C_VCROSS
:K #(POST1+RESULTS)
Cmd_VCROSS
 Fld_0
  Typ_Lab
Prm_[VCROSS] {LabXR,LabYR,LabZR} = {LabX1,LabY1,LabZ1} X {LabX2,LabY2,LabZ2}
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_       User labels for result vector
 Fld_2
  Prm_LabXR             X-component
  Typ_CHAR
  Def_*PAR(_z1)
 Fld_3
  Prm_LabYR             Y-component
  Typ_CHAR
  Def_*PAR(_z1)
 Fld_4
  Prm_LabZR             Z-component
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_  
 Fld_0
  Typ_Lab
  Prm_       Element table items in 1st vector
 Fld_5
  Prm_LabX1             X-component
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_6
  Prm_LabY1             Y-component
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_7
  Prm_LabZ1             Z-component
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
Fld_0
Prm_  
 Fld_0
  Typ_Lab
  Prm_       Element table items in 2nd vector
 Fld_8
  Prm_LabX2             X-component
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_9
  Prm_LabY2             Y-component
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_10
  Prm_LabZ2             Z-component
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
:E END
:! 
:N Fnc_VDELE
:S    255,   139,   109
:T Cmd_P
:C )! Fnc_VDELE
:A Volumes Only
:D Delete Volumes Only
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VDELE
Inp_P
Cmd_VDELE
 Fld_2
  Typ_VOLU
  Prm_[VDELE]  Pick or enter volumes to be deleted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VDELE_sweep
:S    297,   157,   133
:T Cmd_P
:C )! Fnc_VDELE_sweep
:A Volume and Below
:D Delete Volume & Below
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VDELE
Inp_P
Cmd_VDELE
 Fld_5
  Typ_DEF_1
 Fld_2
  Typ_VOLU
  Prm_[VDELE],,,,1  Pick or enter volumes to be deleted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VDGL
:S    154,   132,    15
:T Cmd_N
:C )! Fnc_VDGL
:A List Degen Volus
:D List Degenerate Volumes
:P (mdl2d)
:H Hlp_C_VDGL
Inp_P
Cmd_VDGL
:E END
:! 
:N Fnc_VDOT
:S    984,   180,   797
:T Command
:C )! Fnc_VDOT
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Dot Product
:D Dot Product of Element Table Items
:H Hlp_C_VDOT
:K #(POST1+RESULTS)
Cmd_VDOT
 Fld_0
  Typ_Lab
  Prm_[VDOT]     LabR = {LabX1,LabY1,LabZ1} o {LabX2,LabY2,LabZ2}
Fld_0
Typ_SEP
 Fld_2
  Prm_LabR   User label for result
  Typ_CHAR
  Def_*PAR(_z1)
Fld_0
Prm_  
 Fld_0
  Typ_Lab
  Prm_       Element table items in 1st vector
 Fld_3
  Prm_LabX1             X-component
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_4
  Prm_LabY1             Y-component
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_5
  Prm_LabZ1             Z-component
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
Fld_0
Prm_  
 Fld_0
  Typ_Lab
  Prm_       Element table items in 2nd vector
 Fld_6
  Prm_LabX2             X-component
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_7
  Prm_LabY2             Y-component
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_8
  Prm_LabZ2             Z-component
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
:E END
:! 
:N Fnc_VDRAG
:S    358,   145,   206
:T Cmd_P
:C )! Fnc_VDRAG
:A    Along Lines
:D Sweep Areas along Lines
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VDRAG
Inp_P
Cmd_VDRAG
 Fld_2
  Typ_AREA
  Prm_[VDRAG]  Pick or enter areas to be swept (dragged)
  Min_1
  Cnt_s
  PCN_1
 Fld_8
  Typ_LINE
  Prm_Pick or enter lines defining the sweep (drag) path
  Min_1
  Cnt_s
:E END
:! 
:N Fnc_VEORa
:S    377,   125,   245
:T Cmd_P
:C )! Fnc_VEORa
:A Z Normal to Area
:D Orient Brick Elements
:H Hlp_C_VEORIENT
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[VEOR]  Pick or enter volume
  Typ_VOLU
  Min_1
  Cnt_1
  PFM_2
Cmd_)*SET,_z2
 Fld_2
  Prm_[VEOR]  Pick or enter area normal to elem Z
  Typ_AREA
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_VEORa2
:E END
:! 
:N Fnc_VEORa2
:S    357,   117,   233
:T Command
:C )! Fnc_VEORl2
:A Area
:D Orient Brick Elements
:H Hlp_C_VEORIENT
Cmd_VEORIENT
 Fld_0
  Typ_Lab
  Prm_[VEORIENT]  Specify Brick Z Dir in a Volume
 Fld_2
  Prm_VNUM    Volume number
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Typ_Def_AREA
 Fld_4
  Prm_VALUE1  Top area (normal to Z)
  Typ_INT
  Def_*PAR(_z2)
:E END
:! 
:N Fnc_VEORdel
:S    281,   133,   141
:T Cmd_P
:C )! Fnc_VEORdel
:A Delete Specification
:D Orient Brick Elements
:H Hlp_C_VEORIENT
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[VEOR]  Pick or enter volume
  Typ_VOLU
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_VEORdel2
:E END
:! 
:N Fnc_VEORdel2
:S    288,   121,   160
:T Command
:C )! Fnc_VEORl2
:A Delete
:D Orient Brick Elements
:H Hlp_C_VEORIENT
Cmd_VEORIENT
 Fld_0
  Typ_Lab
  Prm_[VEORIENT]  Delete Brick Z Specification
 Fld_2
  Prm_VNUM    Volume number
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Typ_Def_DELE
:E END
:! 
:N Fnc_VEORk
:S    465,   125,   333
:T Cmd_P
:C )! Fnc_VEORl
:A Z by 2 Keypoints
:D Orient Brick Elements
:H Hlp_C_VEORIENT
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[VEOR]  Pick or enter volume
  Typ_VOLU
  Min_1
  Cnt_1
  PFM_2
Cmd_)*SET,_z2
 Fld_2
  Prm_[VEOR]  Pick or enter 1st keypoint
  Typ_KEYP
  Min_1
  Cnt_1
  PFM_2
Cmd_)*SET,_z3
 Fld_2
  Prm_[VEOR]  Pick or enter 2nd keypoint
  Typ_KEYP
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_VEORk2
:E END
:! 
:N Fnc_VEORk2
:S    432,   122,   303
:T Command
:C )! Fnc_VEORk2
:A Keypoints
:D Orient Brick Elements
:H Hlp_C_VEORIENT
Cmd_VEORIENT
 Fld_0
  Typ_Lab
  Prm_[VEORIENT]  Specify Brick Z Dir in a Volume
 Fld_2
  Prm_VNUM    Volume number
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Typ_Def_KP
 Fld_4
  Prm_VALUE1  1st keypoint for elem Z
  Typ_INT
  Def_*PAR(_z2)
 Fld_5
  Prm_VALUE2  2nd keypoint for elem Z
  Typ_INT
  Def_*PAR(_z3)
:E END
:! 
:N Fnc_VEORl
:S    372,   121,   244
:T Cmd_P
:C )! Fnc_VEORl
:A Z Along Line
:D Orient Brick Elements
:H Hlp_C_VEORIENT
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[VEOR]  Pick or enter volume
  Typ_VOLU
  Min_1
  Cnt_1
  PFM_2
Cmd_)*SET,_z2
 Fld_2
  Prm_[VEOR]  Pick or enter line along element Z
  Typ_LINE
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_VEORl2
:E END
:! 
:N Fnc_VEORl2
:S    357,   117,   233
:T Command
:C )! Fnc_VEORl2
:A Line
:D Orient Brick Elements
:H Hlp_C_VEORIENT
Cmd_VEORIENT
 Fld_0
  Typ_Lab
  Prm_[VEORIENT]  Specify Brick Z Dir in a Volume
 Fld_2
  Prm_VNUM    Volume number
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Typ_Def_LINE
 Fld_4
  Prm_VALUE1  Line specifying elem Z
  Typ_INT
  Def_*PAR(_z2)
:E END
:! 
:N Fnc_VEORth
:S    277,   130,   140
:T Cmd_P
:C )! Fnc_VEORth
:A Z in Thin Direction
:D Orient Brick Elements
:H Hlp_C_VEORIENT
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[VEOR]  Pick or enter volume
  Typ_VOLU
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_VEORth2
:E END
:! 
:N Fnc_VEORth2
:S    289,   118,   164
:T Command
:C )! Fnc_VEORl2
:A Thin
:D Orient Brick Elements
:H Hlp_C_VEORIENT
Cmd_VEORIENT
 Fld_0
  Typ_Lab
  Prm_[VEORIENT]  Brick Z Thin Direction in Volume
 Fld_2
  Prm_VNUM    Volume number
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Typ_Def_THIN
:E END
:! 
:N Fnc_VEXT
:S    312,   178,   127
:T Cmd_P
:C )! Fnc_VEXT
:C )! Areas for VEXT command below
:A    By XYZ Offset
:D Extrude Area by Offset
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VEXT
Inp_P
Cmd_)!
 Fld_2
  Typ_AREA
  Prm_[VEXT]  Pick or enter areas to be extruded
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_VEXT_2
:E END
:! 
:N Fnc_VEXT_2
:S    382,   143,   232
:T Command
:C )! Fnc_VEXT_2
:A    By XYZ Offset
:D Extrude Areas by XYZ Offset
:K #(PREP7)
:H Hlp_C_VEXT
Cmd_VEXT
 Fld_0
  Typ_Lab
  Prm_[VEXT]  Extrude Areas by XYZ Offset
 Fld_2
  Typ_Def_P51X
 Fld_5
  Typ_REAL3
  Prm_DX,DY,DZ  Offsets for extrusion
  Def_0,0,0
 Fld_8
  Typ_REAL3
  Prm_RX,RY,RZ  Scale factors
  Def_Blank,Blank,Blank
:E END
:! 
:N Fnc_VFCALC
:S    316,   167,   142
:T Command
:C )! Fnc_VFCALC
:K (AUX12*PR_CFD*PR_THERM*(RADSURF+THERMAL)*CFD)
:A    Compute
:D View Factor Options
:H Hlp_C_VFOPT
Cmd_VFOPT,NEW
 Fld_0
  Typ_Lab
  Prm_[VFOPT] Compute view factors and store in a file
 Fld_2
  Prm_FILE    View Factor file
  Typ_FILE_INLINE
:E END
:! 
:N Fnc_VFOPTS
:S    678,   253,   418
:T Command
:C )! Fnc_VFOPTS
:C )/NOPR
:C )*del,_zc
:C )*dim,_zc,char,3
:C )_zc(1)='OFF ','NEW ','READ'
:C )/GO
:A       Options
:D View Factor Options
:K ((RADSURF+THERMAL)*NOFILTER)
:H Hlp_C_VFOPT
:H Hlp_C_HEMIOPT
Cmd_HEMIOPT
 Fld_0
  Typ_Lab
  Prm_[HEMIOPT] Hemicube view factor options
 Fld_2
  Prm_HRES      Hemicube resolution
  Typ_REAL
  Def_10
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[VFOPT]   View factor options
 Fld_2
  Prm_Opt       Computation option
  Typ_LIS_OptionB
   LIS_Compute if need ,1
   LIS_Recompute       ,2
   LIS_Read from file  ,3
Cal_Fnc_VFOPTS_2,2,ne,3
Cal_Fnc_VFOPTS_1,2,eq,3
:E END
:! 
:N Fnc_VFOPTS_1
:S    254,   140,   107
:T Command
:C )! Fnc_VFOPTS_1
:D View Factor Options
:K ((RADSURF+THERMAL)*NOFILTER)
:H Hlp_C_VFOPT
Cmd_)/GO
Cmd_VFOPT
 Fld_2
  Typ_Def_*PAR(_zc(_z1))
 Fld_3
  Prm_Fname,Ext,Dir  View Factor file
  Typ_FILE
:E END
:! 
:N Fnc_VFOPTS_2
:S    134,    70,    57
:T Command
:C )! Fnc_VFOPTS_2
Inp_P
Cmd_)/GO
Cmd_VFOPT
 Fld_2
  Typ_Def_*PAR(_zc(_z1))
:E END
:! 
:N Fnc_VFQUERY
:S    496,   173,   316
:T Cmd_P
:C )! Fnc_VFQUERY
:K (AUX12*PR_CFD*PR_THERM*(RADSURF+THERMAL)*CFD)
:A    Query
:D View factors query option
:H Hlp_C_VFQUERY
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[VFQUERY]  Pick or enter elements for view factor query
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_VFQUERY_1
:E END
:! 
:N Fnc_VFQUERY_1
:S    446,   116,   323
:T Cmd_P
:C )! Fnc_VFQUERY_1
:D View factors query option
:H Hlp_C_VFQUERY
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[VFQUERY]  Pick or enter elements for target radiating surface
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y2,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_VFQUERY_2
:E END
:! 
:N Fnc_VFQUERY_2
:S    227,    72,   148
:T Command
:C )! Fnc_VFQUERY_2
Inp_P
Cmd_VFQUERY
Fld_2
 Typ_DEF__Y1
Fld_3
 Typ_DEF__Y2
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
! Exclude_from_paths
Cmd_CMDELE,_Y2
Cmd_)/GO
:E END
:! 
:N Fnc_VFRC_01
:S    877,    64,   806
:T Cmd
:C )! Fnc_VFRC_01
Inp_P
Cmd_)!
K_CM(SNLD+sald+slld+seld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Typ_Def_*CPAR(101)
 Fld_5
  Typ_Def_*CPAR(102)
Cmd_)!
K_CM(SLLD+sald+snld+seld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Typ_Def_*CPAR(101)
 Fld_6
  Typ_Def_*CPAR(102)
Cmd_)!
K_CM(SALD*SELD+slld+snld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  K_FL(SELD+sald)
  Typ_Def_*CPAR(111)
 Fld_4
  Typ_Def_*PAR(_z9)
 Fld_5
  K_FL(SELD+sald)
  Typ_Def_2
 Fld_5
  K_FL(SALD+seld)
  Typ_Def_*CPAR(101)
 Fld_6
  Typ_Def_*CPAR(102)
Cmd_)!
K_CM(SELD+slld+snld+sald)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*CPAR(111)
 Fld_4
  Typ_Def_*PAR(_z9)
 Fld_5
  Typ_Def_1
 Fld_6
  Typ_Def_*CPAR(101)
Cmd_)!
Cal_Fnc_RetBox_0
:E END
:! 
:N Fnc_VFRC_02
:S    997,    64,   926
:T Cmd
:C )! Fnc_VFRC_02
Inp_P
Cmd_)!
K_CM(SNLD+sald+slld+seld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Typ_Def_*CPAR(101)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(102)
  Dlm_%
 Fld_7
  Typ_Lab
Cmd_)!
K_CM(SLLD+sald+snld+seld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Typ_Def_*CPAR(101)
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(102)
  Dlm_%
 Fld_8
  Typ_Lab
Cmd_)!
K_CM(SALD*SELD+slld+snld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  K_FL(SELD+sald)
  Typ_Def_*CPAR(111)
 Fld_4
  Typ_Def_*PAR(_z9)
 Fld_5
  K_FL(SELD+sald)
  Typ_Def_2
 Fld_5
  K_FL(SALD+seld)
  Typ_Def_*CPAR(101)
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(102)
  Dlm_%
 Fld_8
  Typ_Lab
Cmd_)!
K_CM(SELD+slld+snld+sald)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*CPAR(111)
 Fld_4
  Typ_Def_*PAR(_z9)
 Fld_5
  Typ_Def_1
 Fld_6
  Typ_Def_*CPAR(101)
Cmd_)!
Cal_Fnc_RetBox_0
:E END
:! 
:N Fnc_VFRC_03
:S   1119,    64,  1048
:T Cmd
:C )! Fnc_VFRC_03
Inp_P
Cmd_)!
K_CM(SNLD+sald+slld+seld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_7
  Typ_Def_*CPAR(102)
Cmd_)!
K_CM(SLLD+sald+snld+seld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_8
  Typ_Def_*CPAR(102)
Cmd_)!
K_CM(SALD+slld+snld+seld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_4
  Typ_Def_*PAR(_z9)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_7
  Typ_Lab
 Fld_8
  Typ_Def_*CPAR(102)
Cmd_)!
K_CM(SELD+slld+snld+sald)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*CPAR(111)
 Fld_4
  Typ_Def_*PAR(_z9)
 Fld_5
  Typ_Def_1
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_8
  Typ_Lab
Cmd_)!
K_CM(SELD+slld+snld+sald)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*CPAR(111)
 Fld_4
  Typ_Def_*PAR(_z9)
 Fld_5
  Typ_Def_2
 Fld_6
  Typ_Def_*CPAR(102)
Cmd_)!
Cal_Fnc_RetBox_0
:E END
:! 
:N Fnc_VFRC_04
:S   1281,    64,  1210
:T Cmd
:C )! Fnc_VFRC_04
Inp_P
Cmd_)!
K_CM(SNLD+sald+slld+seld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_7
  Dlm_%
 Fld_8
  Typ_Def_*CPAR(102)
  Dlm_%
 Fld_9
  Typ_Lab
Cmd_)!
K_CM(SLLD+sald+snld+seld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_8
  Dlm_%
 Fld_9
  Typ_Def_*CPAR(102)
  Dlm_%
 Fld_10
  Typ_Lab
Cmd_)!
K_CM(SALD+slld+snld+seld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_4
  Typ_Def_*PAR(_z9)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_7
  Typ_Lab
 Fld_8
  Dlm_%
 Fld_9
  Typ_Def_*CPAR(102)
  Dlm_%
 Fld_10
  Typ_Lab
Cmd_)!
K_CM(SELD+slld+snld+sald)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_4
  Typ_Def_*PAR(_z9)
 Fld_3
  Typ_Def_*CPAR(111)
 Fld_5
  Typ_Def_1
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_8
  Typ_Lab
Cmd_)!
K_CM(SELD+slld+snld+sald)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*CPAR(111)
 Fld_4
  Typ_Def_*PAR(_z9)
 Fld_5
  Typ_Def_2
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(102)
  Dlm_%
 Fld_8
  Typ_Lab
Cmd_)!
Cal_Fnc_RetBox_0
:E END
:! 
:N Fnc_VFRC_Q
:S    400,   299,    94
:T Cmd
:C )/NOPR
:C )KEYW,KTB2,0,KTB3,0,KTB4,0
:C )*if,_z(1),eq,0,then
:C )keyw,ktb2,1              
:C )*elseif,_z(1),gt,0,then
:C )*if,_z(2),eq,0,then
:C )keyw,ktb3,1             
:C )*else
:C )keyw,ktb4,1      
:C )*endif
:C )*endif
:C )/GO
:C )! Fnc_VFRC_Q
Inp_P
Cmd_)!
K_LN(KTB2)
Cal_Fnc_VFRC_02
K_LN(KTB3)
Cal_Fnc_VFRC_03
K_LN(KTB4)
Cal_Fnc_VFRC_04
:E END
:! 
:N Fnc_VGEN
:S    307,   174,   126
:T Cmd_P
:C )! Fnc_VGEN
:C )! Volumes for VGEN command below
:A Volumes
:D Copy Volumes
:K #(PREP7)
:K #(priges)
:P (mdl2d)
:H Hlp_C_VGEN
Inp_P
Cmd_)!
 Fld_3
  Typ_VOLU
  Prm_[VGEN]  Pick or enter volumes to be copied
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_VGEN2
:E END
:! 
:N Fnc_VGEN2
:S    652,   117,   528
:T Command
:C )! Fnc_VGEN2
:A Volumes
:D Copy Volumes
:K #(PREP7)
:H Hlp_C_VGEN
Cmd_VGEN
Fld_0
Typ_Lab
Prm_[VGEN]  Copy Volumes
 Fld_2
  Prm_ITIME   Number of copies -
  Typ_INT
  Def_2
Fld_0
 Typ_Lab
  Prm_        - including original
 Fld_3
  Typ_Def_P51X
 Fld_6
  Prm_DX      X-offset in active CS
  Typ_REAL
 Fld_7
  Prm_DY      Y-offset in active CS
  Typ_REAL
 Fld_8
  Prm_DZ      Z-offset in active CS
  Typ_REAL
 Fld_0
  Typ_Sep
 Fld_9
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_10
  Prm_NOELEM  Items to be copied
  Typ_LIS_OptionB
  LIS_Volumes and mesh,0
  LIS_Volumes only    ,1
:E END
:! 
:N Fnc_VGEN_move
:S    322,   184,   131
:T Cmd_P
:C )! Fnc_VGEN_move
:C )! Volumes for VGEN command below
:A Volumes
:D Move Volumes
:K #(PREP7)
:K #(priges)
:P (mdl2d)
:H Hlp_C_VGEN
Inp_P
Cmd_)!
 Fld_3
  Typ_VOLU
  Prm_[VGEN]  Pick or enter volumes to be moved
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_VGEN_move_2
:E END
:! 
:N Fnc_VGEN_move_2
:S    391,   129,   255
:T Command
:C )! Fnc_VGEN_move_2
:A Volumes
:D Move Volumes
:K #(PREP7)
:H Hlp_C_VGEN
Cmd_VGEN
Fld_0
 Typ_Lab
  Prm_[VGEN]  Move Volumes
 Fld_3
  Typ_Def_P51X
 Fld_6
  Prm_DX      X-offset in active CS
  Typ_REAL
 Fld_7
  Prm_DY      Y-offset in active CS
  Typ_REAL
 Fld_8
  Prm_DZ      Z-offset in active CS
  Typ_REAL
 Fld_11
  Typ_DEF_1
:E END
:! 
:N Fnc_VGET
:S    518,   151,   360
:T Command
:C )! Fnc_VGET
:A Variable to Par
:D Move a Variable into an Array Parameter
:K #(POST26)
:H Hlp_C_VGET
Cmd_VGET
Fld_0
Typ_Lab
Prm_[VGET]  Move a Variable into an Array Parameter
Fld_2
Prm_Par    Array parameter
Typ_CHAR
Fld_3
Prm_IR     Variable containing data
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_4
Prm_TSTRT  Time at start of data
Typ_real
Def_Blank
Fld_5
K_FL(HARMONIC)
Prm_KCPLX  For harmonic, use
Typ_LIS_OPTIONB
LIS_Real part       ,0
LIS_Imaginary part  ,1
:E END
:! 
:N Fnc_VGLUE
:S    241,   127,   107
:T Cmd_P
:C )! Fnc_VGLUE
:A Volumes
:D Glue Volumes
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VGLUE
Inp_P
Cmd_VGLUE
 Fld_2
  Typ_VOLU
  Prm_[VGLUE]  Pick or enter volumes to be glued
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VIMP
:S    252,   103,   142
:T Cmd_P
:C )! Fnc_VIMP
:A Volumes
:D Improve Tet Mesh
:K #(PREP7)
Inp_P
Cmd_)!
Fld_2
   Prm_[VIMP]  Pick or enter tet meshed vols to be improved
   Typ_VOLU
   Min_1
   Cnt_s
   PCN_1
   PFM_1
Cal_Fnc_VIMP_a
:E END
:! 
:N Fnc_VIMP_a
:S    255,   119,   129
:T Cmd
:C )! Fnc_VIMP_a
:A Volumes
:D Improve Tet Mesh
:K #(PREP7)
:H Hlp_C_VIMP
Cmd_VIMP
 Fld_0
 Typ_Lab
 Prm_[VIMP]  Improve Tet Mesh
 Fld_2
 Typ_Def_P51X
 Fld_3
 Typ_LOGI,No, Yes
 Prm_Change boundary
 Def_1
:E END
:! 
:N Fnc_VINP
:S    272,   143,   122
:T Cmd_P
:C )! Fnc_VINP
:A    Volumes
:D Intersect Volumes (Pairwise)
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VINP
Inp_P
Cmd_VINP
 Fld_2
  Typ_VOLU
  Prm_[VINP]  Pick or enter volumes to be intersected (pairwise)
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VINV
:S    268,   141,   120
:T Cmd_P
:C )! Fnc_VINV
:A    Volumes
:D Intersect Volumes (Common)
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VINV
Inp_P
Cmd_VINV
 Fld_2
  Typ_VOLU
  Prm_[VINV]  Pick or enter volumes to be intersected (common)
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VLIST_p
:S    230,   115,   108
:T Cmd_P
:C )! Fnc_VLIST_p
:A Volumes
:D List Picked Volumes
:H Hlp_C_VLIST
Inp_P
Cmd_VLIST
 Fld_2
  Prm_[VLIST]  Pick or enter volumes to be listed
  Typ_VOLU
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VLSCAL
:S    310,   171,   132
:T Cmd_P
:C )! Fnc_VLSCAL
:C )! Volumes for VLSCAL command below
:A Volumes
:D Scale Volumes
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VLSCALE
Inp_P
Cmd_)!
 Fld_2
  Typ_VOLU
  Prm_[VLSCALE]  Pick or enter volumes to be scaled
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_VLSCAL_2
:E END
:! 
:N Fnc_VLSCAL_2
:S    651,   127,   517
:T Command
:C )! Fnc_VLSCAL_2
:A Volumes
:D Scale Volumes
:K #(PREP7)
:H Hlp_C_VLSCALE
Cmd_VLSCAL
 Fld_0
  Typ_Lab
  Prm_[VLSCALE]  Scale Volumes
 Fld_2
  Typ_Def_P51X
 Fld_5
  Typ_REAL3
  Prm_RX,RY,RZ  Scale factors -
  Def_1.0,1.0,1.0
 Fld_0
  Typ_Lab 
  Prm_          - in the active coordinate system
 Fld_8
  Typ_INT
  Prm_KINC   Keypoint increment
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_9
 Prm_NOELEM  Items to be scaled
  Typ_LIS_OptionB
  LIS_Volumes and mesh,0
  LIS_Volumes only    ,1
 Fld_10
  Prm_IMOVE  Existing volumes will be
  Typ_LIS_OptionB
  LIS_Copied          ,0
  LIS_Moved           ,1
:E END
:! 
:N Fnc_VMESH
:S    506,   187,   312
:T Cmd_P
:C )! Fnc_VMESH
:C )/NOPR
:C )CMDEL,_Y
:C )CMDEL,_Y1
:C )CMDEL,_Y2
:C )/GO
:A     Free
:D Mesh Volumes
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VMESH
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,VOLU
! Exclude_from_paths
Cmd_VSEL
 Fld_5
  Typ_VOLU
  Prm_[VMESH]  Pick or enter volumes to be meshed
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,VOLU
! Exclude_from_paths
Cmd_CHKMSH,'VOLU'
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_VMESH_1
:E END
:! 
:N Fnc_VMESH6
:S    522,   202,   313
:T Cmd_P
:C )! Fnc_VMESH6
:C )/NOPR
:C )CMDEL,_Y
:C )CMDEL,_Y1
:C )CMDEL,_Y2
:C )/GO
:A 4 to 6 sided
:D Mesh Volumes
:K #(PREP7+meshtool)
:P (mdl2d)
:H Hlp_C_VMESH
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,VOLU
! Exclude_from_paths
Cmd_VSEL
 Fld_5
  Typ_VOLU
  Prm_[VMESH]  Pick or enter volumes to be meshed
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,VOLU
! Exclude_from_paths
Cmd_CHKMSH,'VOLU'
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_VMESH6_1
:E END
:! 
:N Fnc_VMESH6_1
:S    169,    66,    96
:T Cmd
:C )! Fnc_VMESH6_1
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*PAR(ABS(_CHKMSH))
Cal_Fnc_VMESH6_2,2,eq,0
Cal_Fnc_VMESH6_3,2,eq,1
:E END
:! 
:N Fnc_VMESH6_2
:S    485,   289,   189
:T Cmd
:C )! Fnc_VMESH6_2
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z9,common,,cfprp7,,int,107
:C )*IF,_z9,LT,1,THEN
:C )KEYW,KEY1,1
:C )_z9=0
:C )*ENDIF
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='VCLEAR'
:C )*GET,_z4,elem,,count
:C )_z7='_Y1'
:C )/GO
Inp_P
Cmd_MSHAPE,0,3d
Cmd_MSHKEY,1
K_CM(KEY1)
Cmd_VMESH,_Y1
Cmd_MSHKEY
K_CM(KEY1)
 Fld_2
 Typ_Def_*PAR(_z9)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_VMESH6_3
:S    329,    66,   256
:T Cmd
:C )! Fnc_VMESH6_3
Inp_NOapply
Cmd_)/NOPR  ! MATCH ING GO IS IN CALLED GRANS
Cmd_)*SET,_z1
 Fld_0
 Typ_Lab
 Prm_Some of the picked volumes are already meshed  
 Fld_2
 Prm_Do you want to remesh them ?
 Typ_Logi,No  ,Yes
 Def_1
Cal_Fnc_VMESH6_4,2,eq,0
Cal_Fnc_VMESH6_5,2,eq,1
:E END
:! 
:N Fnc_VMESH6_4
:S    643,   369,   267
:T Cmd
:C )! Fnc_VMESH6_4
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z9,common,,cfprp7,,int,107
:C )*IF,_z9,LT,1,THEN
:C )KEYW,KEY1,1
:C )_z9=0
:C )*ENDIF
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='VCLEAR'
:C )*GET,_z4,elem,,count
:C )_z7='_Y2'
:C )KEYW,KEY2,0
:C )*IF,_CHKMSH,EQ,-1,THEN
:C )KEYW,KEY2,1
:C )_z1=0
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)/GO
Cmd_MSHAPE,0,3d
Cmd_MSHKEY,1
K_CM(KEY1)
Cmd_! ANSYS MACRO CHKMSH CREATED COMPONENT _Y2
K_CM(key2)
Cmd_VMESH,_Y2
K_CM(key2)
Cmd_MSHKEY
K_CM(KEY1)
 Fld_2
 Typ_Def_*PAR(_z9)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_VMESH6_5
:S    551,   264,   280
:T Cmd
:C )! Fnc_VMESH6_5
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z9,common,,cfprp7,,int,107
:C )*IF,_z9,LT,1,THEN
:C )KEYW,KEY1,1
:C )_z9=0
:C )*ENDIF
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='VCLEAR'
:C )_z7='_Y1'
:C )/GO
Inp_P
Cmd_)/GO
! Exclude_from_paths
Cmd_VCLEAR,_Y1
Cmd_)/NOPR
Cmd_)*GET,_z4,elem,,count
Cmd_)/GO
Cmd_MSHAPE,0,3d
Cmd_MSHKEY,1
K_CM(KEY1)
Cmd_VMESH,_Y1
Cmd_MSHKEY
K_CM(KEY1)
 Fld_2
 Typ_Def_*PAR(_z9)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_VMESH_1
:S    165,    64,    94
:T Cmd
:C )! Fnc_VMESH_1
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*PAR(ABS(_CHKMSH))
Cal_Fnc_VMESH_2,2,eq,0
Cal_Fnc_VMESH_3,2,eq,1
:E END
:! 
:N Fnc_VMESH_2
:S    283,   175,   101
:T Cmd
:C )! Fnc_VMESH_2
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='VCLEAR'
:C )*GET,_z4,elem,,count
:C )_z7='_Y1'
:C )/GO
Inp_P
Cmd_VMESH,_Y1
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_VMESH_3
:S    325,    64,   254
:T Cmd
:C )! Fnc_VMESH_3
Inp_NOapply
Cmd_)/NOPR  ! MATCH ING GO IS IN CALLED GRANS
Cmd_)*SET,_z1
 Fld_0
 Typ_Lab
 Prm_Some of the picked volumes are already meshed  
 Fld_2
 Prm_Do you want to remesh them ?
 Typ_Logi,No  ,Yes
 Def_1
Cal_Fnc_VMESH_4,2,eq,0
Cal_Fnc_VMESH_5,2,eq,1
:E END
:! 
:N Fnc_VMESH_4
:S    441,   255,   179
:T Cmd
:C )! Fnc_VMESH_4
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='VCLEAR'
:C )*GET,_z4,elem,,count
:C )_z7='_Y2'
:C )KEYW,KEY1,0
:C )*IF,_CHKMSH,EQ,-1,THEN
:C )KEYW,KEY1,1
:C )_z1=0
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)/GO
Cmd_! ANSYS MACRO CHKMSH CREATED COMPONENT _Y2
K_CM(key1)
Cmd_VMESH,_Y2
K_CM(key1)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_VMESH_5
:S    349,   150,   192
:T Cmd
:C )! Fnc_VMESH_5
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='VCLEAR'
:C )_z7='_Y1'
:C )/GO
Inp_P
Cmd_)/GO
! Exclude_from_paths
Cmd_VCLEAR,_Y1
Cmd_)/NOPR
Cmd_)*GET,_z4,elem,,count
Cmd_)/GO
Cmd_VMESH,_Y1
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_VMESH_m
:S    202,   168,    27
:T Cmd_P
:C )! Fnc_VMESH_m
:C MSHKEY,0
:C MSHAPE,1,3d
:A     Free
:D Mesh Volumes
:K #(PREP7+meshtool)
:P (mdl2d)
:H Hlp_C_VMESH
Inp_P
Cmd_)!
Cal_Fnc_VMESH
:E END
:! 
:N Fnc_VMOR21
:S    204,    62,   135
:T Cmd
:C )! Fnc_VMOR21
Inp_P
Cmd_)/NOPR
Cmd_DVMORPH
 Fld_4
 Typ_Def_*PAR(_z1)
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
:E END
:! 
:N Fnc_VMOR22
:S    328,   103,   218
:T Cmd_P
:D Morphing on volumes
:C )!Fnc_VMOR22
:H Hlp_C_DVMORPH
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y0,LINE
! Exclude_from_paths
Cmd_LSEL
 Fld_5
  Prm_[DVMORPH]  Pick or enter excluded areas from morphing
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/GO
Cal_Fnc_VMOR23
:E END
:! 
:N Fnc_VMOR23
:S    308,    62,   239
:T Cmd
:C )! Fnc_VMOR23
Inp_p
Cmd_)/NOPR
Cmd_DVMORPH
 Fld_3
 Typ_Def_all
 Fld_4
 Typ_Def_*PAR(_z1)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMSEL,S,_Y0
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y0
Cmd_)/GO
:E END
:! 
:N Fnc_VMORP1
:S    475,   101,   367
:T Cmd
:D Morphing on volumes
:C )!Fnc_VMORP1
:H Hlp_C_DVMORPH
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_0
Typ_Lab
Prm_[DVMORPH] Morph mesh attached to volumes
 Fld_2
  Prm_RMSHKY Remesh option key
  Typ_Lis_OptionB
  Lis_Morph or Remesh,0
  Lis_Remesh only    ,1
  Lis_Morph only     ,2
  Def_0
Cmd_)/GO
 Fld_0
  Typ_Sep
Fld_2
 Prm_Exclude areas from morphing?
 Typ_LOGI,No, Yes
 Def_0
Cal_Fnc_VMOR21,2,eq,0
Cal_Fnc_VMOR22,2,gt,0
:E END
:! 
:N Fnc_VMORPH
:S    370,   154,   209
:T Cmd_P
:A    Volumes
:D Morphing on volumes
:C )!Fnc_VMORPH
:C )/NOPR
:C )/GO
:H Hlp_C_DVMORPH
:K (PREP7+RESULTS)
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,VOLU
! Exclude_from_paths
Cmd_VSEL
 Fld_5
  Prm_[DVMORPH]  Pick or enter volumes for morphing
  Typ_VOLU
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/GO
Cal_Fnc_VMORP1
:E END
:! 
:N Fnc_VOFFST
:S    306,   146,   153
:T Cmd_P
:C )! Fnc_VOFFST
:A    Along Normal
:D Extrude Area by Norm
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VOFFST
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_AREA
  Prm_[VOFFST]  Pick or enter the area to be extruded
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_VOFFST_2
:E END
:! 
:N Fnc_VOFFST_2
:S    413,   146,   260
:T Command
:C )! Fnc_VOFFST_2
:A    Along Normal
:D Extrude Area along Normal
:K #(PREP7)
:H Hlp_C_VOFFST
Cmd_VOFFST
 Fld_0
  Typ_Lab
  Prm_[VOFFST]  Extrude Area along Normal
 Fld_2
  Typ_INT
  Prm_NAREA  Area to be extruded
  Def_*PAR(_z1)
 Fld_3
  Typ_REAL
  Prm_DIST   Length of extrusion
  Def_Blank
 Fld_4
  Typ_INT
  Prm_KINC   Keypoint increment
  Def_Blank
:E END
:! 
:N Fnc_VOVLAP
:S    254,   133,   114
:T Cmd_P
:C )! Fnc_VOVLAP
:A Volumes
:D Overlap Volumes
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VOVLAP
Inp_P
Cmd_VOVLAP
 Fld_2
  Typ_VOLU
  Prm_[VOVLAP]  Pick or enter volumes to be overlapped
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VPLOT
:S    384,   113,   264
:T Cmd
:C )! Fnc_VPLOT
:A Volumes
:D Plot Specified Volumes 
:H Hlp_C_VPLOT
Cmd_VPLOT
 Fld_0
  Typ_Lab
  Prm_[VPLOT]  Plot Specified Volumes                        
 Fld_2
  Typ_INT
  Prm_NV1   First volume in range
  Def_1
 Fld_3 
  Typ_INT
  Prm_NV2   Last volume in range
  Def_Blank
 Fld_4
  Typ_INT
  Prm_NINC  Range increment
  Def_1
:E End
:! 
:N Fnc_VPLOT_deg
:S    534,   156,   371
:T Command
:C )! Fnc_VPLOT_deg
:H Hlp_C_VPLOT
:A Plot Degen Volus
:D Plot Volumes and Show Degeneracies
:P (mdl2d)
Cmd_VPLOT
 Fld_0
  Typ_Lab
  Prm_[VPLOT],,,,DEGEN  Plot Volumes and Show Degeneracies
 Fld_2
  Typ_INT
  Prm_NA1   First volume in range
  Def_ALL
 Fld_3 
  Typ_INT
  Prm_NA2   Last volume in range
  Def_Blank
 Fld_4
  Typ_INT
  Prm_NINC  Range increment
  Def_1
 Fld_5
  Typ_Def_DEGEN
 Fld_0
  Typ_Sep
 Fld_6
  Typ_REAL
  Prm_SCALE "Degen star" scale factor
  Def_0.075
:E End
:! 
:N Fnc_VPLO_calc
:S    935,   325,   603
:T Command
:C )! Fnc_VPLO_calc
:C )/NOPR
:C )_z(4)=pariqr(_zc12,11)
:C )*del,_MONPLT
:C )*IF,_z(4),GT,_z(6),THEN
:C )*DIM,_MONPLT,table,_z(4),4
:C )*ELSE
:C )*DIM,_MONPLT,table,_z(6),4
:C )*ENDIF
:C )*GET,_z(3),CPAR,103
:C )/GO
:D Plot Calculated Stress-Strain Values
:H Hlp_C_*VPLOT
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)/GCOLUMN,,TESTDATA
! Exclude_from_paths
Cmd_)/GCOLUMN,2,CURVEFIT
! Exclude_from_paths
Cmd_)*MFUN,_MONPLT(1,1),copy
Fld_2
 Typ_Def_*CPAR(11)
 Dlm_(
Fld_3
 Typ_Def_1
Fld_4
 Typ_Def_*PAR(_z(3))
 Dlm_)
Fld_5
! Exclude_from_paths
Cmd_)*MFUN,_MONPLT(1,2),copy
Fld_2
 Typ_Def_*PAR(_zc12)
 Dlm_(
Fld_3
 Typ_Def_1
Fld_4
 Typ_Def_*PAR(_z(3))
 Dlm_)
Fld_5
Cmd_)*VPLOT
Fld_2
 Typ_Def_*CPAR(10)
 Dlm_(
Fld_3
 Typ_Def_1
Fld_4
 Typ_Def_*PAR(_z(3))
 Dlm_)
Fld_6
 Typ_Def__MONPLT(1,1)
Fld_7
 Typ_Def_2
! Exclude_from_paths
Cmd_)/AXLAB,X,
Cmd_)/AXLAB,Y,
Cmd_)/GCOLUMN,
Cmd_)/GO
:E END
:! 
:N Fnc_VPLO_eval
:S    584,   301,   276
:T Command
:C )! Fnc_VPLO_eval
:C )/NOPR
:C )_z(4)=pariqr(_zc14,11)
:C )*del,_MONPLT
:C )*IF,_z(4),GT,_z(6),THEN
:C )*DIM,_MONPLT,table,_z(4),4
:C )*ELSE
:C )*DIM,_MONPLT,table,_z(6),4
:C )*ENDIF
:C )/GO
:D Plot Calculated Stress-Strain Values
:H Hlp_C_*VPLOT
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)/GCOLUMN,,CURVEFIT
! Exclude_from_paths
Cmd_)*VPLOT
Fld_2
 Typ_Def_*CPAR(13)
 Dlm_(
Fld_3
 Typ_Def_1,1)
Fld_4
 Typ_Def_*PAR(_zc14)
 Dlm_(
Fld_5
 Typ_Def_1,1)
! Exclude_from_paths
Cmd_)/AXLAB,X,
Cmd_)/AXLAB,Y,
Cmd_)/GCOLUMN,
Cmd_)/GO
:E END
:! 
:N Fnc_VPTN
:S    247,   129,   111
:T Cmd_P
:C )! Fnc_VPTN
:A Volumes
:D Partition Volumes
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VPTN
Inp_P
Cmd_VPTN
 Fld_2
  Typ_VOLU
  Prm_[VPTN]  Pick or enter volumes to be partitioned
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VPUT
:S    519,   152,   360
:T Command
:C )! Fnc_VPUT
:A Parameter to Var
:D Move an Array Parameter into a Variable
:K #(POST26)
:H Hlp_C_VPUT
Cmd_VPUT
Fld_0
Typ_Lab
Prm_[VPUT]  Move an Array Parameter into a Variable
Fld_2
Prm_Par    Array parameter
Typ_CHAR
Fld_3
Prm_IR     Variable containing data
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_4
Prm_TSTRT  Time at start of data
Typ_real
Def_Blank
Fld_5
K_FL(HARMONIC)
Prm_KCPLX  For harmonic, use
Typ_LIS_OPTIONB
LIS_Real part       ,0
LIS_Imaginary part  ,1
:E END
:! 
:N Fnc_VROTAT
:S    437,   197,   233
:T Cmd_P
:C )! Fnc_VROTAT
:C )! Areas and Keypoints for VROTAT command below
:A    About Axis
:D Sweep Areas about Axis
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VROTAT
Inp_P
Cmd_)!
 Fld_2
  Typ_AREA
  Prm_[VROTAT]  Pick or enter areas to be swept about axis
  Min_1
  Cnt_s
  PCN_1
  PFM_1
 Fld_8
  Typ_KEYP
  Prm_Pick or enter two keypoints defining the axis
  Min_2
  Cnt_2
  PFM_1
Cal_Fnc_VROTAT_2
:E END
:! 
:N Fnc_VROTAT_2
:S    395,   141,   247
:T Command
:C )! Fnc_VROTAT_2
:A    About Axis
:D Sweep Areas about Axis
:K #(PREP7)
:H Hlp_C_VROTAT
Cmd_VROTAT
 Fld_0
  Typ_Lab
  Prm_[VROTAT]  Sweep Areas about Axis
 Fld_2
  Typ_Def_P51X
 Fld_8
  Typ_Def_P51X
 Fld_10
  Typ_REAL
  Prm_ARC       Arc length in degrees
  Def_360
 Fld_11
  Typ_INT
  Prm_NSEG      No. of volume segments
  Def_Blank
:E END
:! 
:N Fnc_VSBA_div
:S    340,   145,   188
:T Cmd_P
:C )! Fnc_VSBA_div
:A Volume by Area
:D Divide Vol by Area
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VSBA
Inp_P
Cmd_VSBA
 Fld_2
  Typ_VOLU
  Prm_[VSBA]  Pick or enter volumes to be divided
  Min_1
  Cnt_s
  Pcn_1
 Fld_3
  Typ_AREA
  Prm_Pick or enter the dividing areas
  Min_1
  Cnt_s
  Pcn_1
:E END
:! 
:N Fnc_VSBA_div_op2
:S    707,   171,   529
:T Command
:C )! Fnc_VSBA_div_op2
:A Volume by Area
:D Divide Volume by Area with Options
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VSBA
Cmd_VSBA
 Fld_0
  Typ_Lab
  Prm_[VSBA]  Divide Volume by Area with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_P51X
 Fld_4
  Prm_SEPO  Intersect bndry will have
  Typ_LIS_OptionB
  LIS_Shared entities ," "
  LIS_Separate entity ,SEPO
 Fld_5
  Prm_KEEPV  Base volumes will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
 Fld_6
  Prm_KEEPA  Subtracted areas will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_VSBA_div_opt
:S    453,   214,   232
:T Cmd_P
:C )! Fnc_VSBA_div_opt
:C )! Volumes and Areas for VSBA command below
:A Volume by Area
:D Divide Volume by Area w/ Options
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VSBA
Inp_P
! 
Cmd_)!
 Fld_2
  Typ_VOLU
  Prm_[VSBA]  Pick or enter volumes to be divided
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
 Fld_3
  Typ_AREA
  Prm_Pick or enter the dividing areas
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_VSBA_div_op2
:E END
:! 
:N Fnc_VSBV
:S    343,   128,   208
:T Cmd_P
:C )! Fnc_VSBV
:A Volumes
:D Subtract Volumes
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VSBV
Inp_P
Cmd_VSBV
 Fld_2
  Typ_VOLU
  Prm_[VSBV]  Pick or enter base volumes from which to subtract
  Min_1
  Cnt_s
  PCN_1
 Fld_3
  Typ_VOLU
  Prm_Pick or enter volumes to be subtracted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VSBV_igs
:S    354,   139,   208
:T Cmd_P
:C )! Fnc_VSBV_igs
:A    Volumes
:D Subtract Volumes
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VSBV
Inp_P
Cmd_VSBV
 Fld_2
  Typ_VOLU
  Prm_[VSBV]  Pick or enter base volumes from which to subtract
  Min_1
  Cnt_s
  PCN_1
 Fld_3
  Typ_VOLU
  Prm_Pick or enter volumes to be subtracted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VSBV_opt
:S    457,   196,   254
:T Cmd_P
:C )! Fnc_VSBV_opt
:C )! Volumes and Volumes for VSBV command below
:A Volumes
:D Subtract Volumes w/ Options
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VSBV
Inp_P
Cmd_)!
 Fld_2
  Typ_VOLU
  Prm_[VSBV]  Pick or enter base volumes from which to subtract
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cmd_)!
 Fld_3
  Typ_VOLU
  Prm_Pick or enter volumes to be subtracted
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_VSBV_opt_2
:E END
:! 
:N Fnc_VSBV_opt_2
:S    674,   144,   523
:T Command
:C )! Fnc_VSBV_opt_2
:A Volumes
:D Subtract Volumes with Options
:K #(PREP7)
:H Hlp_C_VSBV
Cmd_VSBV
 Fld_0
  Typ_Lab
  Prm_[VSBV]  Subtract Volumes with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_P51X
 Fld_4
  Prm_SEPO  Intersect bndry will have
  Typ_LIS_OptionB
  LIS_Shared entities ," "
  LIS_Separate entity ,SEPO
 Fld_5
  Prm_KEEP1  Base volumes will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
 Fld_6
  Prm_KEEP2  Subtracted vols will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_VSBW_div
:S    265,   151,   107
:T Cmd_P
:C )! Fnc_VSBW_div
:A Volu by WrkPlane
:D Divide Vol by WrkPlane
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VSBW
Inp_P
Cmd_VSBW
 Fld_2
  Typ_VOLU
  Prm_[VSBW]  Pick or enter volumes to be divided
  Min_1
  Cnt_s
  Pcn_1
:E END
:! 
:N Fnc_VSBW_div_igs
:S    276,   162,   107
:T Cmd_P
:C )! Fnc_VSBW_div_igs
:A    Volu by WrkPlane
:D Divide Vol by WrkPlane
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VSBW
Inp_P
Cmd_VSBW
 Fld_2
  Typ_VOLU
  Prm_[VSBW]  Pick or enter volumes to be divided
  Min_1
  Cnt_s
  Pcn_1
:E END
:! 
:N Fnc_VSBW_div_op2
:S    550,   177,   366
:T Command
:C )! Fnc_VSBW_div_op2
:A Volu by WrkPlane
:D Divide Volume by WrkPlane with Options
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VSBW
Cmd_VSBW
 Fld_0
  Typ_Lab
  Prm_[VSBW]  Divide Volume by WrkPlane with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Prm_SEPO  Intersect bndry will have
  Typ_LIS_OptionB
  LIS_Shared entities ," "
  LIS_Separate entity ,SEPO
 Fld_4
  Prm_KEEP  Original volumes will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_VSBW_div_opt
:S    357,   210,   140
:T Cmd_P
:C )! Fnc_VSBW_div_opt
:C )! Volumes for VSBW command below
:A Volu by WrkPlane
:D Divide Volume by WrkPlane w/ Options
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_VSBW
Inp_P
! 
Cmd_)!
 Fld_2
  Typ_VOLU
  Prm_[VSBW]  Pick or enter volumes to be divided
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_VSBW_div_op2
:E END
:! 
:N Fnc_VSEL_A
:S    314,   124,   183
:T Cmd_P
:C )! Fnc_VSEL_A
:A Also select volumes
:D Also select volumes
:H Hlp_C_VSEL
Inp_P
Cmd_VSEL
 Fld_2
  Typ_DEF_A
 Fld_5
Prm_Pick volume(s) and press Apply
Prm_[VSEL],A  Pick or enter volumes to be added to selected set
  Typ_VOLU
  Min_1
  Cnt_s
  PCN_1
  Sel_U
:E END
:! 
:N Fnc_VSEL_R
:S    254,   118,   129
:T Cmd_P
:C )! Fnc_VSEL_R
:A Reselect volumes
:D Reselect volumes
:H Hlp_C_VSEL
Inp_P
Cmd_VSEL
 Fld_2
  Typ_DEF_R
 Fld_5
Prm_[VSEL],R  Pick or enter volumes to be reselected
  Typ_VOLU
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VSEL_S
:S    256,   114,   135
:T Cmd_P
:C )! Fnc_VSEL_S
:A Select volumes
:D Select volumes
:H Hlp_C_VSEL
Inp_P
Cmd_VSEL
 Fld_2
  Typ_DEF_S
 Fld_5
Prm_[VSEL],S  Pick or enter volumes to be selected
  Typ_VOLU
  Min_1
  Cnt_s
  PCN_1
  Sel_D
:E END
:! 
:N Fnc_VSEL_U
:S    254,   118,   129
:T Cmd_P
:C )! Fnc_VSEL_U
:A Unselect volumes
:D Unselect volumes
:H Hlp_C_VSEL
Inp_P
Cmd_VSEL
 Fld_2
  Typ_DEF_U
 Fld_5
Prm_[VSEL],U  Pick or enter volumes to be unselected
  Typ_VOLU
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_VSUM
:S    213,   126,    80
:T Command
:C )! Fnc_VSUM
:A Of Volumes
:D Calc Geom of Volumes
:K #(PREP7)
:H Hlp_C_VSUM
Cmd_VSUM
  Fld_2
  TYP_LIS_RADIOB
  LIS_Normal, DEFAULT
  Lis_Fine facets, FINE
:E END
:! 
:N Fnc_VSWEEP
:S    333,   245,    81
:T Cmd_P
:C )! Fnc_VSWEEP
:C )/NOPR
:C )*GET,_z1,common,,cfprp7,,int,10
:C )*IF,_z1,eq,1,then
:C )_z2='a'
:C )*ELSE
:C )_z2='b'
:C )*ENDIF
:C )/GO
:A     Sweep
:D Volume Sweeping
:K #(PREP7)
:H Hlp_C_VSWEEP
Inp_P
! Cust_Cmd_VSWEEP
Cmd_)!
   Fld_2
   Typ_Def_*PAR(_z1)
Cal_Fnc_VSWEEP%_z2%
:E END
:! 
:N Fnc_VSWEEP_1
:S    222,   127,    88
:T Cmd
:C )! Fnc_VSWEEP_1
:C )/NOPR
:C )*GET,_z1,CPAR,1
:C )_z2=VLINQR(_z1,-6)
:C )/GO
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z2)
Cal_Fnc_VSWEEP_2,2,gt,0
Cal_Fnc_VSWEEP_3,2,eq,0
:E END
:! 
:N Fnc_VSWEEP_2
:S    227,    66,   154
:T Cmd
:C )! Fnc_VSWEEP_2
Inp_Noapply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
 Typ_Lab
 Prm_Volume is already meshed.
 Fld_2
 Typ_Logi,No ,Yes
 Prm_Remesh ?
 Def_1
Cal_Fnc_VSWEEP_4,2,eq,1
:E END
:! 
:N Fnc_VSWEEP_3
:S    338,   183,   148
:T Cmd
:C )! Fnc_VSWEEP_3
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='VCLEAR'
:C )*GET,_z7,CPAR,1
:C )*GET,_z4,elem,,count
:C )/GO
Inp_P
 Cmd_VSWEEP
 Fld_2
 Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_*CPAR(2)
 Fld_4
 Typ_Def_*CPAR(3)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
:E END
:! 
:N Fnc_VSWEEP_4
:S    417,   158,   252
:T Cmd
:C )! Fnc_VSWEEP_4
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='VCLEAR'
:C )*GET,_z7,CPAR,1
:C )/GO
Inp_P
! Exclude_from_paths
 Cmd_VCLEAR
 Fld_2
 Typ_Def_*CPAR(1)
Cmd_)/NOPR
Cmd_)*GET,_z4,elem,,count
Cmd_)/GO
 Cmd_VSWEEP
 Fld_2
 Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_*CPAR(2)
 Fld_4
 Typ_Def_*CPAR(3)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
:E END
:! 
:N Fnc_VSWEEP_m
:S    153,   118,    28
:T Cmd_P
:A     Sweep
:D Volume Sweeping
:K #(PREP7+meshtool)
:H Hlp_C_VSWEEP
Inp_P
Cmd_)!
Cal_Fnc_VSWEEP
:E END
:! 
:N Fnc_VSWEEPa
:S    413,   113,   293
:T Cmd_P
:C )! Fnc_VSWEEP
:A     Sweep
:D Volume Sweeping
:H Hlp_C_VSWEEP
Inp_P
Cmd_)/NOPR
Cmd_)*CSET,1,5
 Fld_2
  Typ_VOLU
  Prm_[VSWEEP]  Pick or enter volume to be swept
  Min_1
  Cnt_1
 Fld_3
  Typ_AREA
  Prm_[VSWEEP]  Pick or enter source area
  Min_1
  Cnt_1
 Fld_4
  Typ_AREA
  Prm_[VSWEEP]  Pick or enter target area
  Min_1
  Cnt_1
Cmd_)/GO
Cal_Fnc_VSWEEP_1
:E END
:! 
:N Fnc_VSWEEPb
:S    505,   185,   313
:T Cmd_P
:C )! Fnc_VSWEEPb
:C )/NOPR
:C )CMDEL,_Y
:C )CMDEL,_Y1
:C )CMDEL,_Y2
:C )/GO
:A     Sweep
:D Volume Sweeping
:K #(PREP7)
:H Hlp_C_VSWEEP
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,VOLU
! Exclude_from_paths
Cmd_VSEL
 Fld_5
  Typ_VOLU
  Prm_[VSWEEP]  Pick or enter volumes to be swept
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,VOLU
! Exclude_from_paths
Cmd_CHKMSH,'VOLU'
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_VSWEEPb1
:E END
:! 
:N Fnc_VSWEEPb1
:S    169,    66,    96
:T Cmd
:C )! Fnc_VSWEEPb1
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*PAR(ABS(_CHKMSH))
Cal_Fnc_VSWEEPb2,2,eq,0
Cal_Fnc_VSWEEPb3,2,eq,1
:E END
:! 
:N Fnc_VSWEEPb2
:S    286,   177,   102
:T Cmd
:C )! Fnc_VSWEEPb2
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='VCLEAR'
:C )*GET,_z4,elem,,count
:C )_z7='_Y1'
:C )/GO
Inp_P
Cmd_VSWEEP,_Y1
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_VSWEEPb3
:S    329,    66,   256
:T Cmd
:C )! Fnc_VSWEEPb3
Inp_NOapply
Cmd_)/NOPR  ! MATCH ING GO IS IN CALLED GRANS
Cmd_)*SET,_z1
 Fld_0
 Typ_Lab
 Prm_Some of the picked volumes are already meshed  
 Fld_2
 Prm_Do you want to remesh them ?
 Typ_Logi,No  ,Yes
 Def_1
Cal_Fnc_VSWEEPb4,2,eq,0
Cal_Fnc_VSWEEPb5,2,eq,1
:E END
:! 
:N Fnc_VSWEEPb4
:S    444,   257,   180
:T Cmd
:C )! Fnc_VSWEEPb4
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='VCLEAR'
:C )*GET,_z4,elem,,count
:C )_z7='_Y2'
:C )KEYW,KEY1,0
:C )*IF,_CHKMSH,EQ,-1,THEN
:C )KEYW,KEY1,1
:C )_z1=0
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)/GO
Cmd_! ANSYS MACRO CHKMSH CREATED COMPONENT _Y2
K_CM(key1)
Cmd_VSWEEP,_Y2
K_CM(key1)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_VSWEEPb5
:S    352,   152,   193
:T Cmd
:C )! Fnc_VSWEEPb5
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='VCLEAR'
:C )_z7='_Y1'
:C )/GO
Inp_P
Cmd_)/GO
! Exclude_from_paths
Cmd_VCLEAR,_Y1
Cmd_)/NOPR
Cmd_)*GET,_z4,elem,,count
Cmd_)/GO
Cmd_VSWEEP,_Y1
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_VSYMM
:S    320,   181,   132
:T Cmd_P
:C )! Fnc_VSYMM
:C )! Volumes for VSYMM command below
:A Volumes
:D Reflect Volumes
:K #(PREP7)
:K #(priges)
:P (mdl2d)
:H Hlp_C_VSYMM
Inp_P
Cmd_)!
 Fld_3
  Typ_VOLU
  Prm_[VSYMM]  Pick or enter volumes to be reflected
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_VSYMM_2
:E END
:! 
:N Fnc_VSYMM_2
:S    645,   125,   513
:T Command
:C )! Fnc_VSYMM_2
:A Volumes
:D Reflect Volumes
:K #(PREP7)
:H Hlp_C_VSYMM
Cmd_VSYMM
 Fld_0
  Typ_Lab
  Prm_[VSYMM]  Reflect Volumes
 Fld_2
  Prm_Ncomp  Plane of symmetry
  Typ_LIS_RADIOB
  LIS_Y-Z plane      X,X
  LIS_X-Z plane      Y,Y
  LIS_X-Y plane      Z,Z
 Fld_3
  Typ_Def_P51X
 Fld_6
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_7
 Prm_NOELEM  Items to be reflected
  Typ_LIS_OptionB
  LIS_Volumes and mesh,0
  LIS_Volumes only    ,1
 Fld_8
  Prm_IMOVE   Existing volumes will be
  Typ_LIS_OptionB
  LIS_Copied          ,0
  LIS_Moved           ,1
:E END
:! 
:N Fnc_VTRAN
:S    323,   182,   134
:T Cmd_P
:C )! Fnc_VTRAN
:C )! Volumes for VTRAN command below
:A Volumes
:D Transfer Volumes
:K #(PREP7)
:K #(priges)
:P (mdl2d)
:H Hlp_C_VTRAN
Inp_P
Cmd_)!
 Fld_3
  Typ_VOLU
  Prm_[VTRAN]  Pick or enter volumes to be transferred
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_VTRAN_2
:E END
:! 
:N Fnc_VTRAN_2
:S    643,   126,   510
:T Command
:C )! Fnc_VTRAN_2
:A Volumes
:D Transfer Volumes
:K #(PREP7)
:H Hlp_C_VTRAN
Cmd_VTRAN
 Fld_0
  Typ_Lab
  Prm_[VTRAN]  Coordinate System Transfer of Volumes
 Fld_2
  Prm_KCNTO  No. of coordinate sys -
  Typ_INT
 Fld_0
  Typ_Lab
  Prm_       - volumes are to be transferred to
 Fld_3
  Typ_Def_P51X
 Fld_6
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_7
  Prm_NOELEM  Items to be transferred
  Typ_LIS_OptionB
  LIS_Volumes and mesh,0
  LIS_Volumes only    ,1
 Fld_8
  Prm_IMOVE   Existing volumes will be
  Typ_LIS_OptionB
  LIS_Copied          ,0
  LIS_Moved           ,1
:E END
:! 
:N Fnc_VariView
:S    130,    66,    57
:T Cmd
:A Variable Viewer
Inp_p
Cmd_)~eui,'euidl::results::timeHist::varInterface'
:E END
:! 
:N Fnc_WAVES
:S    632,   185,   440
:T Command
:C )! Fnc_WAVES
:A Reorder by List 
:D Reorder Elements from Starting Wave Lists
:K #(PREP7)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_WAVES
Inp_NoApply
Cmd_WAVES
 Fld_0
  Typ_Lab
  Prm_[WAVES]  Reorder Elements from Starting Wave Lists
 Fld_2
  Prm_Wopt  Wavefront comparison uses
  Typ_LIS_OptionB
  LIS_Max wavefront   ,MAX
  LIS_RMS wavefront   ,RMS
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Optional user-specified values for use in comparison
 Fld_3
  Prm_OLDMAX  Previous max wavefront
  Typ_REAL
  Def_Blank
 Fld_4
  Prm_OLDRMS  Previous RMS wavefront
  Typ_REAL
  Def_Blank
:E END
:! 
:N Fnc_WERASE
:S    184,   160,    17
:T Cmd_N
:C )! Fnc_WERASE
:A Erase Wave List 
:D Erase Wave List
:K #(PREP7)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_WERASE
Inp_P
Cmd_WERASE
:E END
:! 
:N Fnc_WFRONT
:S    568,   225,   336
:T Command
:C )! Fnc_WFRONT
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )/GO
:A Est. Wavefront
:D List Estimated Wavefront Statistics
:K #(PREP7)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_WFRONT
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[WFRONT]  List Estimated Wavefront Statistics
 Fld_2
  Prm_KPRNT  List wavefront stats
  Typ_LIS_OptionB
  LIS_Only            ,0
  LIS_With history    ,1
 Fld_3
  Prm_KCALC  Estimate uses
  Typ_LIS_OptionB
  LIS_Maximum DOF set ,0
  LIS_Actual DOF set  ,1
Cal_Fnc_WFRONT_2
:E END
:! 
:N Fnc_WFRONT_2
:S    321,   137,   177
:T Command
:C )! Fnc_WFRONT_2
:D List Estimated Wavefront Statistics
:K #(PREP7)
:H Hlp_C_WFRONT
Inp_P
Cmd_)/nopr
Cmd_)/output,ansuitmp
Cmd_)/go
Cmd_WFRONT
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Typ_Def_*PAR(_z(2))
Cmd_)/nopr
Cmd_)/output,term
Cmd_)*uilist,ansuitmp
Cmd_)/go
:E END
:! 
:N Fnc_WMORE
:S    497,   171,   319
:T Command
:C )! Fnc_WMORE
:A Extend Wave List
:D Extend a Starting Wave List
:K #(PREP7)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_WMORE
Inp_NoApply
Cmd_WMORE
 Fld_0
  Typ_Lab
  Prm_[WMORE]  Extend a Starting Wave List
 Fld_2
  Prm_NODE1,NODE2,NINC  Range of nodes
  Typ_INT3
  Def_Blank,Blank,Blank
 Fld_0
  Typ_Lab
  Prm_                  - to be added to the starting wave list
 Fld_5
  Prm_ITIME,INC  Repeat range with inc
  Typ_INT2
  Def_Blank,Blank
:E END
:! 
:N Fnc_WPAV
:S    241,   121,   113
:T Cmd_P
:C )! Fnc_WPAV
:A XYZ Locations
:D Offset WP to XYZ Location
:H Hlp_C_WPAVE
Inp_P
Cmd_WPAVE
Fld_2
Prm_[WPAVE]  Pick WP location or enter coordinates for WP offset
Typ_XYZ
Min_1
Cnt_s
PFM_1
:E END
:! 
:N Fnc_WPAVE_000
:S    245,   172,    66
:T Cmd_N
:C )! Fnc_WPAVE_000
:C )/NOPR
:C )*GET,_z1,ACTIVE,,CSYS
:C )/GO
:A Global Origin
:D Offset WP to Glob Orig
:H Hlp_C_WPAVE
Inp_P
Cmd_CSYS,0
Cmd_WPAVE,0,0,0
Cmd_CSYS
Fld_2
Typ_Def_*PAR(_z1)
:E END
:! 
:N Fnc_WPCSYS
:S    294,   135,   152
:T Command
:C )! Fnc_WPCSYS
:A Specified Coord Sys
:D Align WP with Specified CS
:H Hlp_C_WPCSYS
Cmd_WPCSYS
Fld_0
Typ_Lab
Prm_[WPCSYS]  Align WP with specified coordinate system
Fld_2
Typ_Def_-1
Fld_3
Typ_INT
Def_0
Prm_KCN  Coordinate system number
:E END
:! 
:N Fnc_WPCSYS_activ
:S    166,   139,    20
:T Cmd_N
:C )! Fnc_WPCSYS_activ
:A Active Coord Sys
:D Align WP with Active CS
:H Hlp_C_WPCSYS
Inp_P
Cmd_WPCSYS,-1
:E END
:! 
:N Fnc_WPLA
:S    268,   118,   143
:T Cmd_P
:C )! Fnc_WPLA
:A XYZ Locations
:D Align WP with XYZ Loc
:H Hlp_C_WPLANE
Inp_P
Cmd_WPLANE
Fld_2
Typ_Def_-1
Fld_3
Prm_[WPLANE]  Pick or enter 3 WP locations - origin, X axis, XY plane
Typ_XYZ
Min_1
Max_3
PFM_2
Rub_54
:E END
:! 
:N Fnc_WRFULL
:S    643,   285,   351
:T Command
:C )! Fnc_WRFULL
:C )/NOPR
:C )*get,_zl,common,,stepcm,,int,11
:C )_zl=_zl+1
:C )/GO
:A Stop Solution
:D Stop Solution After Load Step
:K (lsdyna)
:K ((STATIC*TRNSIENT*BUCKLING*MODAL)+simploff)
:P (LINPLUS*THERMAL)+(pp)
:H Hlp_C_WRFULL
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,2
 Fld_0
  Typ_Lab
  Prm_Stop solution after assembling global matrices
 Fld_2
  Prm_Stop after
  Typ_Lis_RadioB
  LIS_Off           ,0
  LIS_Next Load Step,1
  LIS_Load Step N   ,-99
  Def_0
 Fld_3
  Prm_Value of N
  Typ_INT
Cmd_)/GO
Cal_Fnc_WRFULL_a,2,eq,0,2
Cal_Fnc_WRFULL_b,2,eq,1,2
Cal_Fnc_WRFULL_c,2,eq,-99,2
:E END
:! 
:N Fnc_WRFULL_a
:S    176,   132,    37
:T Command
:C )! Fnc_WRFULL_a
:A Stop Solution
:D Stop Solution After Load Step
:K (lsdyna)
Inp_P
Cmd_WRFULL
 Fld_2
 Typ_Def_OFF
:E END
:! 
:N Fnc_WRFULL_b
:S    182,   132,    43
:T Command
:C )! Fnc_WRFULL_b
:A Stop Solution
:D Stop Solution After Load Step
:K (lsdyna)
Inp_P
Cmd_WRFULL
 Fld_2
 Typ_Def_*PAR(_zl)
:E END
:! 
:N Fnc_WRFULL_c
:S    181,   132,    42
:T Command
:C )! Fnc_WRFULL_c
:A Stop Solution
:D Stop Solution After Load Step
:K (lsdyna)
Inp_P
Cmd_WRFULL
 Fld_2
 Typ_Def_*CPAR(2)
:E END
:! 
:N Fnc_WRNMODCYC
:S    341,    76,   258
:T Cmd
:D ** NOTE **
:P (FULL_ANS)
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_  Modal Cyclic Symmetry solution can only be performed
 Fld_0
  Typ_Lab
  Prm_  with Subspace or Block Lanczos mode extraction methods.
 Fld_0
  Typ_Lab
  Prm_  Select appropriate method using Analysis Options menu.
:E END
:! 
:N Fnc_WSORT
:S    879,   177,   695
:T Command
:C )! Fnc_WSORT
:A Reorder by XYZ 
:D Reorder Elements by Geometric Sort
:K #(PREP7)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_WSORT
Cmd_WSORT
 Fld_0
  Typ_Lab
  Prm_[WSORT]  Reorder Elements by Geometric Sort
 Fld_2
  Prm_Lab   Coord direction for sort
  Typ_LIS_OptionB
  LIS_All 3 directions,ALL
  LIS_X direction only,X
  LIS_Y direction only,Y
  LIS_Z direction only,Z
 Fld_3
  Prm_KORD  Coordinates sorted in
  Typ_LIS_OptionB
  LIS_Ascending order ,0
  LIS_Descending order,-1
 Fld_5
  Prm_Wopt  Wavefront comparison uses
  Typ_LIS_OptionB
  LIS_Max wavefront   ,MAX
  LIS_RMS wavefront   ,RMS
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Optional user-specified values for use in comparison
 Fld_6
  Prm_OLDMAX  Previous max wavefront
  Typ_REAL
  Def_Blank
 Fld_7
  Prm_OLDRMS  Previous RMS wavefront
  Typ_REAL
  Def_Blank
:E END
:! 
:N Fnc_WSPRINGS
:S    136,    85,    44
:T Cmd
:A Import fr ADAMS
:D Read Adams File
Inp_p
Cmd_)~eui,'::euidl::adamsin1::create'
:E END
:! 
:N Fnc_WSTART
:S    490,   174,   309
:T Command
:C )! Fnc_WSTART
:A Define Wave List
:D Define a Starting Wave List
:K #(PREP7)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_WSTART
Inp_NoApply
Cmd_WSTART
 Fld_0
  Typ_Lab
  Prm_[WSTART]  Define a Starting Wave List
 Fld_2
  Prm_NODE1,NODE2,NINC  Range of nodes
  Typ_INT3
  Def_Blank,Blank,Blank
 Fld_0
  Typ_Lab
  Prm_                  - in the starting wave list
 Fld_5
  Prm_ITIME,INC  Repeat range with inc
  Typ_INT2
  Def_Blank,Blank
:E END
:! 
:N Fnc_Wave_List
:S    206,   149,    50
:T Cmd_N
:C )! Fnc_Wave_List
:A List Wave Lists
:D List Wave Lists
:K #(PREP7)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_REORDER
! Exclude_from_paths
Cmd_STATUS
:E END
:! 
:N Fnc_Weld2
:S    665,   113,   545
:T Command
:C )! Fnc_Weld2
:D Create Spotweld between nodes
:H Hlp_C_EDWELD
Cmd_EDWELD
 Fld_0
   Typ_Lab
   Prm_[EDWELD] Spotweld Options for LS-DYNA Explicit
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab
   Prm_
 Fld_2
   Typ_Def_ADD
 Fld_3
   Prm_Spotweld reference number
   Typ_INT
   Def_1
 Fld_4
   Typ_INT2
   Prm_Nodes connected by the spotweld 
   Def_*PAR(_z(1)),*PAR(_z(2))
 Fld_0
   Typ_Sep
 Fld_6
   Prm_Normal force at failure
   Typ_Real
 Fld_7
   Prm_Shear force at failure
   Typ_Real
 Fld_8
   Prm_Normal spotweld force exponent
   Typ_Int
 Fld_9
   Prm_Shear spotweld force exponent
   Typ_Int
 Fld_0
   Typ_Sep
:E END
:! 
:N Fnc_Whatsnew
:S    177,   113,    57
:T Cmd
:A Menu Name
:D Access the ANSYS What's New page via the Internet
Inp_P
Cmd_)/NOPR
Cmd_)WHAT,0
Cmd_)/GO
Cal_Fnc_Whatsnew_2
:E End
:! 
:N Fnc_Whatsnew_2
:S   1405,   119,  1279
:T Cmd
:A Menu Name
:D ANSYS, Inc. What's New Page Access
:H Hlp_UI_HomePage
Inp_NoApply
Cmd_)/NOPR
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_The ANSYS What's New page on the Internet World Wide Web provides 
 Fld_0
  Typ_Lab
  Prm_instant access to the list of what is new in ANSYS 5.5. 
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_
 Fld_0
  Typ_Sep
Cmd_)WHAT
K_CM(KEY1*KEY2*KEY3)
 Fld_0
  Typ_Lab
  Prm_
 Fld_2
  Prm_  View the ANSYS What's New Page using
  Typ_Lis_OptionB
   K_LN(KEY1)
   Lis_Netscape        ,1
   K_LN(KEY2+(INTELNT*ALPHANT))
   Lis_InternetExplorer,2
   K_LN(KEY2+intelnt+alphant)
   Lis_Mosaic(see help),2
   K_LN(KEY3)
   Lis_Other (see help),3
   K_LN(key1+key2+key3)
   Lis_Not Available   ,4
 Fld_0
  Typ_Lab
  Prm_
 Fld_0
  Typ_Lab
  Prm_The URL is: http://www.ansys.com/Products/Ansys55/whatisnew
Cmd_)/GO
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_Access to the internet was not made available from within the ANSYS
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_program please see Help.  If you have access to the internet you can
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_access the ANSYS What's New  Page by going to its URL at:
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_             http://www.ansys.com/Products/Ansys55/whatisnew
 Fld_0
  Typ_Sep
:E End
:! 
:N Fnc_Wire
:S    221,   102,   112
:T Cmd_P
:A   Wire
:D Electrical Wire
:H Hlp_E_S4.14
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Wire]  Pick 2 WP locations
  Min_2
  Mok_2
  Pwr_1
  Rub_222
Cal_Fnc_Wire0
:E END
:! 
:N Fnc_Wire0
:S    332,   236,    89
:T Command
:D Real Constants for Wire
:H Hlp_UI_cirr
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(3)=0
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=200
:C )_zz=cpinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_2
  Typ_Def_*PAR(_zz)
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E END
:! 
:N Fnc_Write_Beam
:S   1225,   741,   477
:C )! Fnc_Write_Beam
:C )/NOPR
:C )*DEL,_zc
:C )*DEL,_zp
:C )*SET,_zc,'/*.SECT*'
:C )*SET,_zp,'\*.SECT*'
:C )*GET,_z2,common,,sectionc,,chr8,5
:C )*IF,_z2,NE,'OFF',THEN
:C )*GET,_z3,common,,sectionc,,chr8,7
:C )*GET,_z4,common,,sectionc,,chr8,9
:C )*GET,_z5,common,,sectionc,,chr8,11
:C )*GET,_z6,common,,sectionc,,chr8,13
:C )*GET,_z7,common,,sectionc,,chr8,15
:C )*GET,_z8,common,,sectionc,,chr8,17
:C )*GET,_z9,common,,sectionc,,chr8,19
:C )*ELSE
:C )*SET,_z2,' '
:C )*SET,_z3,' '
:C )*SET,_z4,' '
:C )*SET,_z5,' '
:C )*SET,_z6,' '
:C )*SET,_z7,' '
:C )*SET,_z8,' '
:C )*SET,_z9,'.'
:C )*ENDIF
:C )_zbiget=etyiqr(0,14)
:C )/GOPR
:T Command
:H Hlp_C_SECWRITE
:A Save
:D Write Section Library File
Inp_NoApply
Cmd_! SECWRITE
Cmd_)/NOPR
Cmd_)SECWRITE
 Fld_0
  Typ_Lab
  Prm_[SECWRITE]  Write a file containing User Defined Mesh
 Fld_2
  Prm_FILE    Section library file
  Typ_FILE_INLINE
K_LN(intelnt+alphant)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zc%)
K_LN(INTELNT*ALPHANT)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zp%)
 Fld_5
  Typ_Def_*PAR(_zbiget)
 Fld_8
  Typ_Def_OK
!
Cmd_)_BSAVE=1
Cmd_)!~eui,'euidl::element::SectionControl::filter'
Cmd_)/GO
:E END
:! 
:N Fnc_Write_aux12
:S    770,   189,   574
:T Command
:C )! Fnc_Write_aux12
:A    Write Matrix
:D Write Radiation Matrix To File
:K #(AUX12)
:K (pr_cfd+cfd)
:P (THERMAL)
:H Hlp_UI_writeaux
Inp_NoApply
! 
Cmd_VTYPE
 Fld_0
  Typ_Lab
  Prm_[VTYPE]  Type of viewing procedure for form factors
 Fld_2
  Prm_NOHID  Type of procedure
  Typ_LIS_OptionB
  LIS_Hidden          ,0
  LIS_Non-hidden      ,1
  Def_0
 Fld_3
  Typ_INT
  Prm_NZONE  Number of sampling zones-
  Def_blank
 Fld_0
  Typ_Lab
  Prm_       - for hidden procedure
! 
 Fld_0
  Typ_Sep
! 
Cmd_MPRINT
 Fld_2
  Prm_[MPRINT] Print out matrices?
  Typ_LIS_OptionB
  LIS_No printing     ,0
  LIS_Print matrices  ,1
  Def_0
! 
 Fld_0
  Typ_Sep
! 
Cmd_WRITE
 Fld_2
  Prm_[WRITE]  Name of matrix file 
  Typ_CHAR
:E END
:! 
:N Fnc_XFAPPEND_lsm
:S    330,   134,   189
:T Cmd
:C )! Fnc_XFAPPEND_lsm
:A Append by LSM
:D Delete Enrichment Data 
:H Hlp_C_XFDATA
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_0
  Typ_Lab
  Prm_[XFDATA] Append LSM discontinuity 
 Fld_2
  Prm_Enrichment Name 
  Typ_Lis_OptionB
  Lis_*READ,XFEM
Cmd_)/GO
Cal_Fnc_XFDATA_lsm
:E END
:! 
:N Fnc_XFAPPEND_p
:S    320,   129,   184
:T Cmd_P
:C )! Fnc_XFAPPEND_p
:A Append by Pick 
:D Create Crack on WP
:H Hlp_C_XFDATA
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_0
  Typ_Lab
  Prm_[XFDATA] Append Enrichment Data
 Fld_2
  Prm_Enrichment Name 
  Typ_Lis_OptionB
  Lis_*READ,XFEM
Cmd_)/GO
Cal_Fnc_XFDATA_p
:E END
:! 
:N Fnc_XFDATA_lsm
:S    410,   144,   259
:T Cmd
:C )! Fnc_XFDATA_lsm
:A Create Crack by LSM
:D Create Crack by LSM
:K #(PREP7)
:H Hlp_C_XFDATA
! Exclude_from_paths
Cmd_XFDATA
 Fld_0
  Typ_Lab
  Prm_[XFDATA]  Specify LSM discontinuity
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_LSM
 Fld_4
  Prm_Element ID
  Typ_INT
 Fld_5
  Prm_Node ID
  Typ_INT
 Fld_6
  Prm_Phi
  Typ_REAL
 Fld_7
  Prm_Psi
  Typ_REAL
:E End
:! 
:N Fnc_XFDATA_p
:S    314,   139,   168
:T Cmd_P
:C )! Fnc_XFDATA_p
:A On Working Plane 
:D Create Crack on WP
:K #(PREP7)
:H Hlp_C_XFDATA
Inp_P
! Exclude_from_paths
Cmd_XFDATA
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Prm_[N]  Pick WP location or enter coordinates for the crack
  Typ_XYZ
  Min_1
  Cnt_s
  PFM_1
:E End
:! 
:N Fnc_XFDELETE
:S    285,   122,   156
:T Cmd
:C )! Fnc_XFDELETE
:A Delete 
:D Delete Enrichment Data 
:H Hlp_C_XFDELETE
! Exclude_from_paths
Cmd_XFDELETE
 Fld_0
  Typ_Lab
  Prm_[XFDELETE] Delete Enrichment Data
 Fld_2
  Prm_Enrichment Name 
  Typ_Lis_OptionB
  Lis_*READ,XFEM
:E END
:! 
:N Fnc_XFENRICH_ls2
:S    392,   144,   241
:T Cmd
:C )! Fnc_XFENRICH_ls2
:A Create by LSM
:D Create Crack by LSM
:K #(PREP7)
:H Hlp_C_XFENRICH
Inp_P
! Exclude_from_paths
Cmd_XFENRICH
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Typ_Def_*CPAR(7)
Cal_Fnc_XFDATA_lsm
:E End
:! 
:N Fnc_XFENRICH_lsm
:S   1006,   255,   744
:T Cmd
:C )! Fnc_XFENRICH_lsm
:C )/NOPR
:C )KEYW,MPLIST,0
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )/GO
:A Create by LSM
:D Create Crack by LSM
:K #(PREP7)
:H Hlp_C_XFENRICH
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,7
 Fld_0
  Typ_Lab
  Prm_[XFENRICH]  Define a crack enrichment
 Fld_2
  Prm_Enrichment Name 
  Typ_Char,32,32
 Fld_3
  Prm_Crack type
  Typ_LIS_OptionB
  LIS_Propagating     ,1
  LIS_Stationary      ,2
  Def_1
 Fld_4
  Prm_Element component
  Typ_LIS
  LIS_*READ,CM
 Fld_5
  Prm_Crack behavior
  Typ_LIS_OptionB
  LIS_Cohesive        ,1
  LIS_VCCT            ,2
  Def_1
 Fld_6
  Prm_Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
  Def_*GET(ACTIVE,,MAT)
 Fld_7
  Prm_Contact constraint
  Typ_LIS_OptionB
  LIS_Augmented Lagrange,1
  LIS_Penalty           ,2
  LIS_Lagrange/Penalty  ,3
  Def_1
 Fld_8
  Prm_Enrichment radius
  Typ_Real
Cmd_)/GO
Cal_Fnc_XFENRICH_ls2
:E END
:! 
:N Fnc_XFENRICH_p
:S   1003,   253,   743
:T Cmd_P
:C )! Fnc_XFENRICH_p
:C )/NOPR
:C )KEYW,MPLIST,0
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )/GO
:A Create by Pick
:D Create Crack on WP
:K #(PREP7)
:H Hlp_C_XFENRICH
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,7
 Fld_0
  Typ_Lab
  Prm_[XFENRICH]  Define a crack enrichment
 Fld_2
  Prm_Enrichment Name 
  Typ_Char,32,32
 Fld_3
  Prm_Crack type
  Typ_LIS_OptionB
  LIS_Propagating     ,1
  LIS_Stationary      ,2
  Def_1
 Fld_4
  Prm_Element component
  Typ_LIS
  LIS_*READ,CM
 Fld_5
  Prm_Crack behavior
  Typ_LIS_OptionB
  LIS_Cohesive        ,1
  LIS_VCCT            ,2
  Def_1
 Fld_6
  Prm_Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
  Def_*GET(ACTIVE,,MAT)
 Fld_7
  Prm_Contact constraint
  Typ_LIS_OptionB
  LIS_Augmented Lagrange,1
  LIS_Penalty           ,2
  LIS_Lagrange/Penalty  ,3
  Def_1
 Fld_8
  Prm_Enrichment radius
  Typ_Real
Cmd_)/GO
Cal_Fnc_XFENRICH_p2
:E End
:! 
:N Fnc_XFENRICH_p2
:S    392,   146,   239
:T Cmd_P
:C )! Fnc_XFENRICH_p2
:A On Working Plane
:D Create Crack on WP
:K #(PREP7)
:H Hlp_C_XFENRICH
Inp_P
! Exclude_from_paths
Cmd_XFENRICH
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Typ_Def_*CPAR(7)
Cal_Fnc_XFDATA_p
:E End
:! 
:N Fnc_XFLIST
:S    293,   112,   174
:T Cmd
:C )! Fnc_XFLIST
:A List 
:D List Enrichment Data 
:H Hlp_C_XFLIST
! Exclude_from_paths
Cmd_XFLIST
 Fld_0
  Typ_Lab
  Prm_[XFLIST] List Enrichment Data
 Fld_2
  Prm_Enrichment Name 
  Typ_Lis_OptionB
  Lis_All,ALL
  Lis_*READ,XFEM
  Def_ALL
:E END
:! 
:N Fnc_ZLoad
:S   4046,  1233,  2806
:T Command
:C )! Fnc_ZLoad
:C )/NOPR
:C )*SET,_z4
:C )*CSET,1,4
:C )*CSET,101,104
:C )*DEL,_vz
:C )*DIM,_vz,,2
:C )KEYW,sfelc,0
:C )KEYW,sfelh,0
:C )KEYW,sflc,0
:C )KEYW,sflh,0
:C )KEYW,sfalc,0
:C )KEYW,sfalh,0
:C )KEYW,sfllc,0
:C )KEYW,sfllh,0
:C )KEYW,dkld,0
:C )KEYW,dald,0
:C )KEYW,dlld,0
:C )KEYW,bfeld,0
:C )KEYW,bfuld,0
:C )KEYW,ktabf,0
:C )KEYW,ktabt,0
:C )KEYW,ktabn,0
:C )*IF,_z8,EQ,'BFE',THEN
:C )KEYW,bfeld,1
:C )*ELSEIF,_z8,EQ,'BFUNIF',THEN
:C )KEYW,bfuld,1
:C )*ELSEIF,_z8,EQ,'SF',THEN
:C )*IF,_z9,EQ,'CONV',THEN
:C )KEYW,sflc,1
:C )*ELSEIF,_z9,EQ,'HFLUX',THEN
:C )KEYW,sflh,1
:C )*ENDIF
:C )*ELSEIF,_z8,EQ,'SFE',THEN
:C )*IF,_z9,EQ,'CONV',THEN
:C )KEYW,sfelc,1
:C )*ELSEIF,_z9,EQ,'HFLUX',THEN
:C )KEYW,sfelh,1
:C )*ENDIF
:C )*ELSEIF,_z8,EQ,'SFA',THEN
:C )*IF,_z9,EQ,'CONV',THEN
:C )KEYW,sfalc,1
:C )*ELSEIF,_z9,EQ,'HFLUX',THEN
:C )KEYW,sfalh,1
:C )*ENDIF
:C )*ELSEIF,_z8,EQ,'SFL',THEN
:C )*IF,_z9,EQ,'CONV',THEN
:C )KEYW,sfllc,1
:C )*ELSEIF,_z9,EQ,'HFLUX',THEN
:C )KEYW,sfllh,1
:C )*ENDIF
:C )*ELSEIF,_z8,EQ,'DK',THEN
:C )KEYW,dkld,1
:C )*ELSEIF,_z8,EQ,'DA',THEN
:C )KEYW,dald,1
:C )*ELSEIF,_z8,EQ,'DL',THEN
:C )KEYW,dlld,1
:C )*ENDIF
:C)/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_vz(1)
Fld_0
K_FL(SFELC)
Typ_Lab
  Prm_[SFE] Apply Uniform Convection (CONV) on Elements
 Fld_0
K_FL(SFELC)
  Typ_Sep
 Fld_2
 K_LN(SFELC*SFALC*SFLLC*SFLC)
  Prm_[%_z8%] Apply Film Coef on %_z7% 
 K_LN(sfelc+sfalc+sfllc+sflc)
  Prm_[%_z8%] Apply %_z9% on %_z7% as a
  Typ_Lis_OptioB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
  Def_*PAR(_vz(1))
 Fld_0
  Typ_Sep
 Fld_0
  K_FL(sfelh)
  Typ_Lab
  Prm_If Constant value then:
!
Cmd_)*SET,_z4
K_CM(BFELD*SFELH)
Fld_2
K_FL(SFELH+bfeld)
 Prm_LKEY  Face number
 Typ_Int
 Def_*PAR(_z4)
Fld_0
 K_FL(SFELH)
 Typ_Sep
Fld_0
 K_FL(SFELH)
 Typ_Lab
 Prm_If Constant value then:
Fld_2
 K_FL(BFELD+sfelh)
 Prm_STLOC  Starting location N
 Typ_INT
 Def_*PAR(_z4)
!
Cmd_)*CSET,101,104
Fld_2
 Typ_REAL
 Def_*CPAR(101)
 K_LN(sfelc+sfalc+sfllc+sflc+sfelh)
 Prm_VALUE  Load %_z9% value
 K_LN(SFELC*SFALC*SFLLC*SFLC)
 Prm_VALI   Film coefficient
 K_LN(BFELD*SFELH)
 Prm_VAL1   Load %_z9% at loc N
 K_LN(BFULD)
 Prm_VALUE  Uniform heat gen rate
 K_LN(SFLLH)
 Prm_VALI   Heat flux
Fld_3
 K_FL(BFELD*SFELH)
 Typ_REAL
 Def_*CPAR(102)
 Prm_VAL2   Load %_z9% at loc N+1
Fld_4
 K_FL(BFELD*SFELH)
 Typ_REAL
 Def_*CPAR(103)
 Prm_VAL3   Load %_z9% at loc N+2
Fld_5
 K_FL(BFELD*SFELH)
 Typ_REAL
 Def_*CPAR(104)
 Prm_VAL4   Load %_z9% at loc N+3
Fld_3
 K_FL(DKLD*DALD*DLLD)
 Typ_LOGI,No,Yes
 Def_1
 K_LN(DKLD)
 Prm_KEXPND  Expand TEMP to nodes?
 K_LN(DALD)
 Prm_ Apply TEMP to boundary lines?
 K_LN(DLLD)
 Prm_ Apply TEMP to endpoints?
!
Cmd_)*SET,_vz(2)
 K_CM(SFELC*SFALC*SFLLC*SFLC)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[%_z8%] Apply Bulk Temp on %_z7% 
  Typ_Lis_OptioB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
  Def_*PAR(_vz(2))
!
Cmd_)*CSET,102,102
 K_CM(SFELC*SFALC*SFLLC*SFLC+bfeld+sfelh)
 Fld_0
  Typ_Sep
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_2
 Prm_VAL2I  Bulk temperature
 Typ_REAL
 Def_*CPAR(102)
!
Cmd_)*CSET,103,104
K_CM(SFLLC*SFALC*SFALH*SFLLH+bfeld+sfelh)
Fld_0
 K_FL(sfllh)
 Typ_Sep
Fld_0
 K_FL(SFLLC)
 Typ_Lab
 Prm_If Constant value then:
Fld_0
 K_FL(SFLLC*SFLLH)
 Typ_Lab
 Prm_       Optional %_z9% values at end J of line
Fld_0
 K_FL(SFLLC*SFLLH)
 Typ_Lab
 Prm_       (leave blank for uniform %_z9% )
Fld_2
 K_FL(SFLLH)
 Typ_REAL
 Def_*CPAR(103)
 Prm_VALJ   Heat flux
Fld_2
 K_FL(SFLLC)
 Typ_REAL
 Def_*CPAR(103)
 Prm_VALJ      Film coefficient
Fld_3
 K_FL(SFLLC)
 Typ_REAL
 Def_*CPAR(104)
 Prm_VAL2J     Bulk temperature
Fld_2
 K_FL(SFALC*SFALH)
 Typ_Int
 Def_1
 Prm_LKEY  Load key, usually face no.
Fld_0
 K_FL(SFALC*SFALH)
 Typ_Lab
 Prm_      (required only for shell elements)
!
Cmd_)*SET,_z4
K_CM(SFELC+sfelh+bfeld)
Fld_0
 Typ_Sep
Fld_2
 Prm_LKEY  Load key, usually face no.
 Typ_INT
 Def_1
!
Cmd_)/GO
  Cal_Fnc_ZLoad2,2,EQ,1,2
  Cal_Fnc_ZLoad4,2,EQ,2,2
  Cal_Fnc_ZLoad6,2,EQ,3,2
:E END
:! 
:N Fnc_ZLoad2
:S    217,    84,   126
:T Command
:C )/NOPR
:C )keyw,ktabf,0
:C )/GO
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*Par(_vz(2))
!
  Cal_Fnc_ZLoad50,2,LE,1,1
  Cal_Fnc_ZLoad42,2,EQ,2,1
  Cal_Fnc_ZLoad62,2,EQ,3,1
:E END
:! 
:N Fnc_ZLoad4
:S    643,   226,   410
:T Command
:C )! Fnc_ZLoad4
:C )/NOPR
:C )keyw,ktabf,1
:C )*IF,_vz(2),GT,1,THEN
:C ) KEYW,NOAPPLY,1
:C )*ELSE
:C ) KEYW,NOAPPLY,0
:C )*ENDIF
:C )/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
K_LN(NOAPPLY)
Inp_NoApply
Cmd_)!
 Fld_2
  Typ_Def_*Par(_vz(2))
Cmd_)/NOPR
Cmd_)*CSET,1,1
Fld_0
 K_LN(SFELC*SFALC*SFLLC*SFLC)
  K_LN(ecnt)
   Prm_Film coefficient table
  K_LN(ECNT)
   Prm_Real part of pressure
 K_LN(sfelc+sfalc+sfllc+sflc)
  Prm_Apply Table Loads
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
!
Cmd_)/GO
  Cal_Fnc_ZLoad50,2,LE,1,1
  Cal_Fnc_ZLoad42,2,EQ,2,1
  Cal_Fnc_ZLoad62,2,EQ,3,1
:E END
:! 
:N Fnc_ZLoad42
:S    343,   152,   184
:T Command
:C )/NOPR
:C )keyw,ktabt,1
:C )/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
:K (SFELC*SFALC*SFLLC*SFLC)
Cmd_)*CSET,2,2
Fld_0
 K_LN(ecnt)
  Prm_Bulk Temperature table
 K_LN(ECNT)
  Prm_Imaginary part of pressure
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
Cmd_)!
Cal_Fnc_ZLoad50
:E END
:! 
:N Fnc_ZLoad50
:S   4866,    68,  4791
:T Command
:C )! Fnc_ZLoad50
Inp_P
Cmd_)!
K_CM(SFELH*SFELC+ktabf)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
   Typ_DEF__Y1
 Fld_3
  Typ_DEF_*PAR(_z4)
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_6
  Typ_DEF_*CPAR(101)
 Fld_7
  K_FL(SFELH+sfelc)
  Typ_DEF_*CPAR(102)
 Fld_8
  K_FL(SFELH+sfelc)
  Typ_DEF_*CPAR(103)
 Fld_9
  K_FL(SFELH+sfelc)
  Typ_DEF_*CPAR(104)
!
Cmd_)!
K_CM(SFELH*SFELC+KTABF)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
   Typ_DEF__Y1
 Fld_3
  Typ_DEF_*PAR(_z4)
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_8
  Typ_Lab
!
Cmd_)!
K_CM(SFELC+ktabt)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
   Typ_DEF__Y1
 Fld_3
  Typ_DEF_*PAR(_z4)
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Typ_Def_2
 Fld_6
  Typ_DEF_*CPAR(102)
!
Cmd_)!
K_CM(SFELC+KTABT)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
   Typ_DEF__Y1
 Fld_3
  Typ_DEF_*PAR(_z4)
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Typ_Def_2
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(2)
  Dlm_%
 Fld_8
  Typ_Lab
!
Cmd_)/NOPR
K_CM(SFELH*SFELC)
! Exclude_from_paths
Cmd_CMDELE,_Y1
K_CM(SFELH*SFELC)
Cmd_)/GO
K_CM(SFELH*SFELC)
!
Cmd_)!
K_CM(SFALC*SFALH*DLLD+ktabf+ktabt)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  K_FL(SFALC*SFALH+dlld)
  Typ_DEF_*CPAR(103)
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Typ_DEF_*CPAR(101)
 Fld_6
 K_FL(SFALC*DLLD)
  Typ_DEF_*CPAR(102)
!
Cmd_)!
K_CM(SFALC*SFALH*DLLD+KTABF+ktabt)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  K_FL(SFALC*SFALH+dlld)
  Typ_DEF_*CPAR(103)
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_7
  Typ_Lab
 Fld_8
 K_FL(SFALC*DLLD)
  Typ_DEF_*CPAR(102)
!
Cmd_)!
K_CM(SFALC+ktabf+KTABT)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*CPAR(103)
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Typ_DEF_*CPAR(101)
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(2)
  Dlm_%
 Fld_8
  Typ_Lab
!
Cmd_)!
K_CM(SFALC+KTABF+KTABT)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*CPAR(103)
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_7
  Typ_Lab
 Fld_8
  Dlm_%
 Fld_9
  Typ_Def_*CPAR(2)
  Dlm_%
 Fld_10
  Typ_Lab
!
Cmd_)!
K_CM(SFLLC*SFLLH+ktabf+ktabt)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
Fld_4
 Typ_DEF_*CPAR(101)
Fld_5
 Typ_DEF_*CPAR(103)
Fld_6
 K_FL(SFLLC+sfllh)
 Typ_DEF_*CPar(102)
Fld_7
 K_FL(SFLLC+sfllh)
 Typ_DEF_*CPar(104)
!
Cmd_)!
K_CM(SFLLC*SFLLH+KTABF+ktabt)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_8
 K_FL(SFLLC+sfllh)
  Typ_DEF_*CPar(102)
 Fld_9
 K_FL(SFLLC+sfllh)
  Typ_DEF_*CPar(104)
!
Cmd_)!
K_CM(SFLLC+ktabf+KTABT)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
Fld_4
 Typ_DEF_*CPar(101)
Fld_5
 Typ_DEF_*CPar(103)
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(2)
  Dlm_%
 Fld_8
  Typ_Lab
!
Cmd_)!
K_CM(SFLLC+KTABF+KTABT)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_8
  Dlm_%
 Fld_9
  Typ_Def_*CPAR(2)
  Dlm_%
 Fld_10
  Typ_Lab
!
Cmd_)!
K_CM(BFELD+ktabf)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_4
  Typ_Def_*Par(_z4)
 Fld_5
  Typ_Def_*CPar(101)
 Fld_6
  Typ_Def_*CPar(102)
 Fld_7
  Typ_Def_*CPar(103)
 Fld_8
  Typ_Def_*CPar(104)
!
Cmd_)!
K_CM(BFELD+KTABF)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_7
  Typ_Lab
!
Cmd_)!
K_CM(BFULD+ktabf)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_*STR(%_z9%)
 Fld_3
  Typ_Def_*CPar(101)
!
Cmd_)!
K_CM(BFULD+KTABF)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_*STR(%_z9%)
 Fld_3
  Dlm_%
 Fld_4
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_5
  Typ_Lab
!
Cmd_)!
K_CM(bfeld+bfuld+sfelh+sfelc+sfalc+sfalh+sfllh+sfllc+dlld)
K_CM(ktabf+ktabt)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
Fld_4
 Typ_DEF_*CPar(101)
Fld_5
 K_FL(SFLC*DALD+dkld)
 Typ_DEF_*CPar(102)
Fld_6
 K_FL(DKLD)
 Typ_DEF_*CPar(102)
!
Cmd_)!
K_CM(bfeld+bfuld+sfelh+sfelc+sfalc+sfalh+sfllh+sfllc+dlld)
K_CM(KTABF+ktabt)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_7
 K_FL(SFLC*DALD+dkld)
 Typ_DEF_*CPar(102)
 Fld_8
 K_FL(DKLD)
 Typ_DEF_*CPar(102)
!
Cmd_)!
K_CM(SFLC+ktabf+KTABT)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_4
  Typ_DEF_*CPar(101)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(2)
  Dlm_%
 Fld_7
  Typ_Lab
!
Cmd_)!
K_CM(SFLC+KTABF+KTABT)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_7
  Dlm_%
 Fld_8
  Typ_Def_*CPAR(2)
  Dlm_%
 Fld_9
  Typ_Lab
:E END
:! 
:N Fnc_ZLoad6
:S    450,   157,   286
:T Command
:C )! Fnc_ZLoad6
:C )/NOPR
:C )keyw,ktabf,1
:C )keyw,ktabn,1
:C )/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,1
Fld_0
 K_LN(SFELC*SFALC*SFLLC*SFLC)
  K_LN(ecnt)
   Prm_Film coefficient table
  K_LN(ECNT)
   Prm_Real part of pressure
 K_LN(sfelc+sfalc+sfllc+sflc)
  Prm_Apply Table Loads
Fld_2
  Prm_Name of new table
  Typ_Char,32,32
!
Cmd_)/GO
Cal_Fnc_ZLoad7
:E END
:! 
:N Fnc_ZLoad62
:S    529,   124,   398
:T Command
:C )/NOPR
:C )keyw,ktabt,1
:C )/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,2,2
Fld_0
 K_LN(SFELC*SFALC*SFLLC*SFLC)
  K_LN(ecnt)
   Prm_Bulk Temperature table
  K_LN(ECNT)
   Prm_Imaginary part of pressure
Fld_2
  Prm_Name of new table
  Typ_Char,32,32
Fld_0
K_FL(KTABN)
  Prm_Note: Before closing this box
Fld_0
K_FL(KTABN)
  Prm_      - edit previous table
Fld_0
K_FL(KTABN)
  Prm_      and close it's widget !
!
Cmd_)/GO
Cal_Fnc_ZLoad72
:E END
:! 
:N Fnc_ZLoad7
:S    707,    85,   615
:T Command
:D Add New Table Load
:H Hlp_C_*DIM
! Exclude_from_paths
Cmd_*DIM
 Fld_0
  Typ_Lab
  Prm_[*DIM] Add New Table
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_TABLE
 Fld_4
Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
Prm_NameI   Variable for rows
  Typ_Char,8
 Fld_8
Prm_NameJ   Variable for cols
  Typ_Char,8
 Fld_9
Prm_NameK   Variable for planes
  Typ_Char,8
 Fld_10
Prm_CSYSID  Coordinate System Id
  Typ_LIS_OptionB
  LIS_*READ,CSYS
!
Cmd_)!
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Options for new table parameter
   Typ_Lis_RadioB
     Lis_Edit on screen,1
     Lis_Read from file,2
!
  Cal_Fnc_ZLoad8,2,EQ,1,2
  Cal_Fnc_ZLoad9,2,EQ,2,2
:E END
:! 
:N Fnc_ZLoad72
:S    738,   114,   617
:T Command
:K (SFELC*SFALC*SFLLC*SFLC)
:D Add New Table Load
:H Hlp_C_*DIM
! Exclude_from_paths
Cmd_*DIM
 Fld_0
  Typ_Lab
  Prm_[*DIM] Add New Table
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
 Typ_Def_TABLE
 Fld_4
Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
Prm_NameI   Variable for rows
  Typ_Char,8
 Fld_8
Prm_NameJ   Variable for cols
  Typ_Char,8
 Fld_9
Prm_NameK   Variable for planes
  Typ_Char,8
 Fld_10
Prm_CSYSID  Coordinate System Id
  Typ_LIS_OptionB
  LIS_*READ,CSYS
!
Cmd_)!
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Options for new table parameter
   Typ_Lis_RadioB
     Lis_Edit on screen,1
     Lis_Read from file,2
!
  Cal_Fnc_ZLoad82,2,EQ,1,2
  Cal_Fnc_ZLoad92,2,EQ,2,2
:E END
:! 
:N Fnc_ZLoad8
:S    350,    87,   256
:T Command
:D Add New Table Load
:H Hlp_C_*VEDIT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*Par(_vz(2))
!
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(1)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
!
Cmd_)!
  Cal_Fnc_ZLoad50,2,LE,1,1
  Cal_Fnc_ZLoad42,2,EQ,2,1
  Cal_Fnc_ZLoad62,2,EQ,3,1
:E END
:! 
:N Fnc_ZLoad82
:S    245,    88,   150
:T Command
:D Add New Table Load
:H Hlp_C_*VEDIT
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(2)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
Cmd_)!
Cal_Fnc_ZLoad50
:E END
:! 
:N Fnc_ZLoad9
:S    291,    83,   201
:T Command
:D Read from file
:H Hlp_C_*TREAD
Inp_NoApply
Cmd_)/GO
! Exclude_from_paths
Cmd_*TREAD
  Fld_2
  Typ_Def_*CPAR(1)
  Fld_3
  Prm_File,ext,dir Read from file
  Typ_File
  Fld_6
  Prm_Nskip  Skipped lines number 
  Typ_Int
Cal_Fnc_ZLoad8
:E END
:! 
:N Fnc_ZLoad92
:S    290,    84,   199
:T Command
:D Read from file
:H Hlp_C_*TREAD
Inp_NoApply
Cmd_)/GO
! Exclude_from_paths
Cmd_*TREAD
  Fld_2
  Typ_Def_*CPAR(2)
  Fld_3
  Prm_File,ext,dir  File to read
  Typ_File
  Fld_6
  Prm_Nskip Skipped lines number
  Typ_Int
Cal_Fnc_ZLoad82
:E END
:! 
:N Fnc_ZReCo2
:S    217,    84,   126
:T Command
:C )/NOPR
:C )keyw,ktabf,0
:C )/GO
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*Par(_vz(2))
!
  Cal_Fnc_ZReCo50,2,LE,1,1
  Cal_Fnc_ZReCo42,2,EQ,2,1
  Cal_Fnc_ZReCo62,2,EQ,3,1
:E END
:! 
:N Fnc_ZReCo4
:S    388,   136,   245
:T Command
:C )/NOPR
:C )keyw,ktabf,1
:C )/GO
:D Angular velocity table selection
:H Hlp_E_S4.116
Cmd_)!
 Fld_2
  Typ_Def_*Par(_vz(2))
Cmd_)/NOPR
Cmd_)*CSET,7,7
Fld_0
  Prm_Existing tables
Fld_2
  Prm_Angular velocity table
  Typ_LIS
  LIS_*READ,PATB
!
Cmd_)/GO
  Cal_Fnc_ZReCo50,2,LE,1,1
  Cal_Fnc_ZReCo42,2,EQ,2,1
  Cal_Fnc_ZReCo62,2,EQ,3,1
:E END
:! 
:N Fnc_ZReCo42
:S    262,   132,   123
:T Command
:C )/NOPR
:C )keyw,ktabt,1
:C )/GO
:D Slip factor table selection
:H Hlp_E_S4.116
Cmd_)*CSET,9,9
Fld_0
  Prm_Existing tables
Fld_2
  Prm_Slip factor table
  Typ_LIS
  LIS_*READ,PATB
Cmd_)!
Cal_Fnc_ZReCo50
:E END
:! 
:N Fnc_ZReCo50
:S   1321,    89,  1208
:T Cmd
:C )! Fnc_ZReCo50
:B Fnc_R
:H Hlp_E_S4.116
Inp_P
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
K_CM(ktabf+ktabt)
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
  Typ_Def_*CPAR(8)
 Fld_4
  Typ_Def_*CPAR(9)
 Fld_5
  Typ_Def_*CPAR(10)
 Fld_6
  Typ_Def_*CPAR(11)
 Fld_7
  Typ_Def_*CPAR(12)
!
Cmd_RMORE
K_CM(KTABF+ktabt)
 Fld_2
  Dlm_%
 Fld_3
  Typ_Def_*CPAR(7)
  Dlm_%
 Fld_4
  Typ_Lab
 Fld_6
  Typ_Def_*CPAR(9)
 Fld_7
  Typ_Def_*CPAR(10)
!
Cmd_RMORE
K_CM(ktabf+KTABT)
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
  Typ_Def_*CPAR(8)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(9)
  Dlm_%
 Fld_6
  Typ_Lab
!
Cmd_RMORE
K_CM(KTABF+KTABT)
 Fld_2
  Dlm_%
 Fld_3
  Typ_Def_*CPAR(7)
  Dlm_%
 Fld_4
  Typ_Lab
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(9)
  Dlm_%
 Fld_8
  Typ_Lab
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
!
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(107)
 Fld_3
  Typ_Def_*CPAR(108)
 Fld_4
  Typ_Def_*CPAR(109)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_LONG_rcon_116
:! 
:N Fnc_ZReCo6
:S    284,   131,   146
:T Command
:C )/NOPR
:C )keyw,ktabf,1
:C )keyw,ktabn,1
:C )/GO
:D New tables
:H Hlp_E_S4.116
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,7,7
Fld_0
  Prm_Angular velocity table
Fld_2
  Prm_Name of new table
  Typ_Char,32,32
!
Cmd_)/GO
Cal_Fnc_ZReCo7
:E END
:! 
:N Fnc_ZReCo62
:S    425,   115,   303
:T Command
:C )/NOPR
:C )keyw,ktabt,1
:C )/GO
:D New tables
:H Hlp_E_S4.116
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,9,9
Fld_0
  Prm_Slip factor table
Fld_2
  Prm_Name of new table
  Typ_Char,32,32
Fld_0
K_FL(KTABN)
  Prm_Note: Before closing this box
Fld_0
K_FL(KTABN)
  Prm_      - edit previous table 
Fld_0
K_FL(KTABN)
  Prm_      and close it's widget !
!
Cmd_)/GO
Cal_Fnc_ZReCo72
:E END
:! 
:N Fnc_ZReCo7
:S    618,    81,   530
:T Command
:D Add New Table 
:H Hlp_C_*DIM
! Exclude_from_paths
Cmd_*DIM
 Fld_0
  Typ_Lab
  Prm_[*DIM] Add New Table
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
 Typ_Def_TABLE
 Fld_4
Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
Prm_NameI   Label for rows
  Typ_Char,8
 Fld_8
Prm_NameJ   Label for cols
  Typ_Char,8
 Fld_9
Prm_NameK   Label for planes
  Typ_Char,8
!
Cmd_)!
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Options for new table parameter
   Typ_Lis_RadioB
     Lis_Edit on screen,1
     Lis_Read from file,2
!
  Cal_Fnc_ZReCo8,2,EQ,1,2
  Cal_Fnc_ZReCo9,2,EQ,2,2
:E END
:! 
:N Fnc_ZReCo72
:S    621,    82,   532
:T Command
:D Add New Table 
:H Hlp_C_*DIM
! Exclude_from_paths
Cmd_*DIM
 Fld_0
  Typ_Lab
  Prm_[*DIM] Add New Table
 Fld_2
  Typ_Def_*CPAR(9)
 Fld_3
 Typ_Def_TABLE
 Fld_4
Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
Prm_NameI   Label for rows
  Typ_Char,8
 Fld_8
Prm_NameJ   Label for cols
  Typ_Char,8
 Fld_9
Prm_NameK   Label for planes
  Typ_Char,8
!
Cmd_)!
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Options for new table parameter
   Typ_Lis_RadioB
     Lis_Edit on screen,1
     Lis_Read from file,2
!
  Cal_Fnc_ZReCo82,2,EQ,1,2
  Cal_Fnc_ZReCo92,2,EQ,2,2
:E END
:! 
:N Fnc_ZReCo8
:S    346,    83,   256
:T Command
:D Add New Table 
:H Hlp_C_*VEDIT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*Par(_vz(2))
!
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(7)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
!
Cmd_)!
  Cal_Fnc_ZReCo50,2,LE,1,1
  Cal_Fnc_ZReCo42,2,EQ,2,1
  Cal_Fnc_ZReCo62,2,EQ,3,1
:E END
:! 
:N Fnc_ZReCo82
:S    241,    84,   150
:T Command
:D Add New Table 
:H Hlp_C_*VEDIT
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(9)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
Cmd_)!
Cal_Fnc_ZReCo50
:E END
:! 
:N Fnc_ZReCo9
:S    269,    83,   179
:T Command
:D Read from file
:H Hlp_C_*TREAD
Inp_NoApply
Cmd_)/GO
Cmd_*TREAD
  Fld_2
  Typ_Def_*CPAR(7)
  Fld_3
  Prm_File,ext,dir Read from file
  Typ_File
  Fld_6
  Prm_Nskip  Skipped lines number
  Typ_Int
Cal_Fnc_ZReCo8
:E END
:! 
:N Fnc_ZReCo92
:S    269,    84,   178
:T Command
:D Read from file
:H Hlp_C_*TREAD
Inp_NoApply
Cmd_)/GO
Cmd_*TREAD
  Fld_2
  Typ_Def_*CPAR(9)
  Fld_3
  Prm_File,ext,dir  File to read
  Typ_File
  Fld_6
  Prm_Nskip Skipped lines number
  Typ_Int
Cal_Fnc_ZReCo82
:E END
:! 
:N Fnc_ZeDiode
:S    266,   138,   121
:T Cmd_P
:A   Zener Diode
:D Diode
:C )/nopr
:C )KEYW,ZENER,1
:C )/go
:H Hlp_E_S4.125
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Zener Diode]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_211
Cal_Fnc_Diode_1
:E END
:! 
:N Fnc_accept_rjct
:S    465,   156,   302
:T Cmd
:D Accept / Reject Mesh
:C )! Fnc_accept_rjct
:C )/NOPR
:C )KEYW,KEY1,1
:C )_z1=1
:C )/GO
:H Hlp_UI_Dummy
Inp_Noapply
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)KEYW,KEY1
Fld_2
   Prm_Accept Current Mesh ? 
   Typ_LOGI,No,Yes
   Def_*PAR(_z1)
Fld_0
 Typ_Sep
Cmd_)/GO
! Exclude_from_paths
Cmd_KEYW,ACCEPT
 Fld_2
 Prm_Show this panel again ?
 Typ_LOGI,No ,Yes
 Def_*GET(active,,keyword,,accept)
Cal_Fnc_accept_rjct2
:E END
:! 
:N Fnc_accept_rjct2
:S    336,    98,   231
:T Cmd
:D Accept / Reject Mesh
:C )! Fnc_accept_rjct2
Inp_P
! Exclude_from_paths
Cmd_)!
K_CM(key1)
  Fld_1
  Typ_Def_*PAR(_z2)
  Fld_2
  Typ_Def_*PAR(_z7)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)CMDELE,_Y
! Exclude_from_paths
Cmd_)CMDELE,_Y1
! Exclude_from_paths
Cmd_)CMDELE,_Y2
Cmd_)/GO
:E END
:! 
:N Fnc_adDYNROT
:S    199,   138,    54
:T Cmd_N
:C )! Fnc_adDYNROT
:A Delete All
:D Delete All Rotated Nodal Constraints
:H Hlp_C_EDNROT
Inp_P
Cmd_EDNROT
Fld_2
Typ_Def_DELE
Fld_3
Typ_Def_ALL
:E END
:! 
:N Fnc_bothld
:S    227,   207,    13
:T Hidden
:C )!Fnc_bothld
:C )/NOPR
:C )*del,_z
:C )*dim,_z,array
:C )*get,_z(1),common,,lsdynacom,,int,69
:C )keyw,both%_z(1)%,1
:C )/GO
:A Trans and Dynam
:K (LSDYNA)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_chkelms
:S    252,   179,    66
:T Cmd
:C )! Fnc_accept_chkelms
:C )/NOPR
:C )*GET,_z5,elem,,count
:C )*IF,_z5,eq,_z4,THEN
:C )_z6=1
:C )*ELSE
:C )_z6=0
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*PAR(_z6)
Cal_Fnc_accept_rjct,2,eq,0
:E END
:! 
:N Fnc_dDYNROT
:S   1377,   137,  1233
:T Command
:C )! Fnc_dDYNROT
:A Delete Individ
:D Delete rotated nodal constraint
:H Hlp_C_EDNROT
!
Cmd_EDNROT
 Fld_0
  Prm_Rotated nodal constraint
!
 Fld_0
  Typ_Sep
!
 Fld_0
  Prm_
!
 Fld_2
  Prm_[EDNROT]  ADD/DELETE/LIST
  Typ_Lis_OptionB
  Lis_Delete constraint,DELE
  Lis_List constraints,LIST
  Def_DELE
!
 Fld_3
  Prm_CID       Coordinate system ID
  Typ_INT
  Def_1
!
 Fld_4
  Prm_Cname     Apply constrnt for CM
  Typ_Lis_OptionB
  Lis_*READ,CM
  Lis_None Defined,' '
!
 Fld_5
  Prm_DOF1      Degree of Freedom lab1
  Typ_Lis
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
!
 Fld_6
  Prm_DOF2      Degree of Freedom lab2
  Typ_Lis
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
!
 Fld_7
  Prm_DOF3      Degree of Freedom lab3
  Typ_Lis
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
!
 Fld_8
  Prm_DOF4      Degree of Freedom lab4
  Typ_Lis
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
!
 Fld_9
  Prm_DOF5      Degree of Freedom lab5
  Typ_Lis
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
!
 Fld_10
  Prm_DOF6      Degree of Freedom lab6
  Typ_Lis
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
:E END
:! 
:N Fnc_del_Coriolis
:S    456,   199,   250
:T Command
:C )! Fnc_del_Coriolis
:A Delete Accel CS
:D Delete Acceleration Coordinate System
:K #(PREP7*SOLUTION)
:K (LSDYNA)
:P (LINPLUS)
:H Hlp_C_CGLOC
Inp_NoApply
Cmd_CGLOC,0,0,0
Fld_0
 Typ_Lab
 Prm_[CGLOC] Delete Acceleration Coordinate System
Fld_0
 Typ_Sep
Fld_0
 Typ_Lab
 Prm_    This function resets the origin of the acceleration coordinate
Fld_0
 Typ_Lab
 Prm_    system to the global origin! 
:E END
:! 
:N Fnc_dynld
:S    222,   202,    13
:T Hidden
:C )!Fnc_dynld
:C )/NOPR
:C )*del,_z
:C )*dim,_z,array
:C )*get,_z(1),common,,lsdynacom,,int,69
:C )keyw,dyn%_z(1)%,1
:C )/GO
:A Dynamic relax
:K (LSDYNA)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_etyp_UNDOC
:S    512,    70,   435
:T Cmd
:C )! Fnc_etyp_UNDOC
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)/GO
Cmd_)*CSET,100,101,'NOTE',' '
Cmd_)*CSET,110,110
 Fld_2
  Typ_Def_*STR('The %_z9% element type is no')
Cmd_)*CSET,111,111,' longer supported.              '
Cmd_)*CSET,112,112,' '
Cmd_)*CSET,113,113,' '
Cmd_)*CSET,114,122,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,123,131,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,132,139,' ',' ',' ',' ',' ',' ',' ',' '
!
Cal_Fnc_Message
:E End
:! 
:N Fnc_oldPLESOL
:S  33232,   250, 32958
:T Cmd
:C )! Fnc_oldPLESOL
:C )/nopr
:C )*get,_z1,common,,cpost1,,int,408
:C )keyw,kyavpr,_z1
:C )/go
:A    Element Solu
:D Contour Element Solution Data
:H Hlp_UI_plesol
:K #(POST1+RESULTS)
:K (cfd*MULTIFLD)
Cmd_)*CSET,1,4
 Fld_0
  Typ_Lab
  Prm_[PLES]  Contour Element Solution Data
 Fld_2
  K_FL(LSDYNA)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
!  
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!  
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!  
  P_LN(LINPLUS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
!  
  P_LN(LINPLUS)
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  P_LN(LINPLUS)
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  P_LN(LINPLUS)
  IDX_Geometry        ,           CENTY,CENT,Y
  P_LN(LINPLUS)
  IDX_Geometry        ,           CENTZ,CENT,Z
!
  P_LN(LINPLUS)
  Idx_By sequence num ,"SMISC,"
  P_LN(LINPLUS)
  Idx_By sequence num ,"NMISC,"
!  
 Fld_2
  K_FL(STRUCTRL+lsdyna+multifld)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!  
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
! 
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,X-dir'n  EPTT  X,EPTT,X
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Y-dir'n  EPTT  Y,EPTT,Y
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Z-dir'n  EPTT  Z,EPTT,Z
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,XY-shear EPTT XY,EPTT,XY
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,YZ-shear EPTT YZ,EPTT,YZ
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,XZ-shear EPTT XZ,EPTT,XZ
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,1st prin EPTT  1,EPTT,1
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,2nd prin EPTT  2,EPTT,2
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,3rd prin EPTT  3,EPTT,3
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Intensty EPTTINT,EPTT,INT
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,vonMises EPTTEQV,EPTT,EQV
!  
  P_LN(LINPLUS)
  IDX_Nodal force data,Struct force  FX,F,X
  P_LN(LINPLUS)
  IDX_Nodal force data,              FY,F,Y
  P_LN(LINPLUS)
  IDX_Nodal force data,              FZ,F,Z
  P_LN(LINPLUS)
  IDX_Nodal force data,Struct moment MX,M,X
  P_LN(LINPLUS)
  IDX_Nodal force data,              MY,M,Y
  P_LN(LINPLUS)
  IDX_Nodal force data,              MZ,M,Z
!  
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
  P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Strain enrg SENE,SENE,
  P_LN(LINPLUS)
  IDX_Energy          ,Kinetc enrg KENE,KENE,
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,SEND,ELAS
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,SEND,PLAS
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,SEND,CREE
!  
  P_LN(LINPLUS)
  IDX_Error estimation,StruErrEnrg SERR,SERR,
  P_LN(LINPLUS)
  IDX_Error estimation,Strs deviat SDSG,SDSG,
!  
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  IDX_Geometry        ,           CENTY,CENT,Y
  IDX_Geometry        ,           CENTZ,CENT,Z
!  
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!  
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!  
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!  
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!  
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO,
!
  P_LN(LINPLUS)
  IDX_Failure Criteria,Max Stress     SMAX,FAIL,SMAX
  P_LN(LINPLUS)
  IDX_Failure Criteria,Tsai-Wu Index  TWSI,FAIL,TWSI
  P_LN(LINPLUS)
  IDX_Failure Criteria,Tsai-Wu Ratio  TWSR,FAIL,TWSR
  P_LN(LINPLUS)
  IDX_Failure Criteria,Max Strain     EMAX,FAIL,EMAX
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!  
Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!  
  P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,HEAT,
!  
  P_LN(THERMAL)
  IDX_Energy          ,Therm enrg  TENE,TENE,
!  
  P_LN(THERMAL)
  IDX_Error estimation,TherErrEnrg TERR,TERR,
  P_LN(THERMAL)
  IDX_Error estimation,Grad deviat TDSG,TDSG,
!  
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  IDX_Geometry        ,           CENTY,CENT,Y
  IDX_Geometry        ,           CENTZ,CENT,Z
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!  
Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  P_FL(elecmag)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(THERMAL)
  IDX_Nodal force data,Elec currnt AMPS,AMPS,
  P_LN(LINPLUS)
  IDX_Energy          ,Mag energy  SENE,SENE,
  P_LN(THERMAL)
  IDX_Energy          ,Joule heat JHEAT,JHEAT,
  P_LN(LINPLUS)
  IDX_Energy          ,Elec energy SENE,SENE,
!
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  IDX_Geometry        ,           CENTY,CENT,Y
  IDX_Geometry        ,           CENTZ,CENT,Z
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!
Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  P_FL(ELECMAG)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Flux & gradient ,              BY,B,Y
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Flux & gradient ,              BZ,B,Z
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Flux & gradient ,            BSUM,B,SUM
  K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC)*NOFILTER
  IDX_Flux & gradient ,Mag field     HX,H,X
  K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC)*NOFILTER
  IDX_Flux & gradient ,              HY,H,Y
  K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC)*NOFILTER
  IDX_Flux & gradient ,              HZ,H,Z
  K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC)*NOFILTER
  IDX_Flux & gradient ,            HSUM,H,SUM
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,              DY,D,Y
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,              DZ,D,Z
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,            DSUM,D,SUM
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,             EFY,EF,Y
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,             EFZ,EF,Z
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
!  
  K_LN(edgeelc*NOFILTER)
  IDX_Current Density ,Total        JTX,JT,X
  K_LN(edgeelc*NOFILTER)
  IDX_Current Density ,             JTY,JT,Y
  K_LN(edgeelc*NOFILTER)
  IDX_Current Density ,             JTZ,JT,Z
  K_LN(edgeelc*NOFILTER)
  IDX_Current Density ,           JTSUM,JT,SUM
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Current Density ,Current dens JSX,JS,X
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Current Density ,             JSY,JS,Y
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Current Density ,             JSZ,JS,Z
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Current Density ,           JSSUM,JS,SUM
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Current Density ,Conduction   JCX,JC,X
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Current Density ,             JCY,JC,Y
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Current Density ,             JCZ,JC,Z
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Current Density ,           JCSUM,JC,SUM
!  
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Reynold's number,Magnetic     MRE,MRE
!
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Nodal force data,           FMAGY,FMAG,Y
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Nodal force data,Elec currnt AMPS,AMPS,
!  
  IDX_Energy          ,Joule heat JHEAT,JHEAT,
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Energy          ,Elec energy SENE,SENE,
  K_LN(EDGEELC*NOFILTER)
  IDX_Energy          ,Poynting vect PX,P,X
  K_LN(EDGEELC*NOFILTER)
  IDX_Energy          ,              PY,P,Y
  K_LN(EDGEELC*NOFILTER)
  IDX_Energy          ,              PZ,P,Z
  K_LN(EDGEELC*NOFILTER)
  IDX_Energy          ,            PSUM,P,SUM
!  
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  IDX_Geometry        ,           CENTY,CENT,Y
  IDX_Geometry        ,           CENTZ,CENT,Z
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!  
Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!  
  P_LN(FULL_ANS)
  IDX_Nodal force data,Flow rate   FLOW,FLOW,
  P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,HEAT,
!  
  P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Flow energy SENE,SENE,
!  
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  IDX_Geometry        ,           CENTY,CENT,Y
  IDX_Geometry        ,           CENTZ,CENT,Z
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!  
Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!  
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!  
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,X-dir'n  EPTT  X,EPTT,X
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Y-dir'n  EPTT  Y,EPTT,Y
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Z-dir'n  EPTT  Z,EPTT,Z
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,XY-shear EPTT XY,EPTT,XY
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,YZ-shear EPTT YZ,EPTT,YZ
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,XZ-shear EPTT XZ,EPTT,XZ
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,1st prin EPTT  1,EPTT,1
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,2nd prin EPTT  2,EPTT,2
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,3rd prin EPTT  3,EPTT,3
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Intensty EPTTINT,EPTT,INT
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,vonMises EPTTEQV,EPTT,EQV
!
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,B,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,B,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,B,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,H,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,H,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,H,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,H,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,              DY,D,Y
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,              DZ,D,Z
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,            DSUM,D,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,             EFY,EF,Y
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,             EFZ,EF,Z
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,Total        JTX,JT,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,             JTY,JT,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,             JTZ,JT,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,           JTSUM,JT,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,Current dens JSX,JS,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,             JSY,JS,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,             JSZ,JS,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,           JSSUM,JS,SUM
!
  K_LN(lsdyna+ELECCOND)
  P_LN(ELECMAG*MULTDISC)
  IDX_Current Density ,Conduction   JCX,JC,X
  K_LN(lsdyna+ELECCOND)
  P_LN(ELECMAG*MULTDISC)
  IDX_Current Density ,             JCY,JC,Y
  K_LN(lsdyna+ELECCOND)
  P_LN(ELECMAG*MULTDISC)
  IDX_Current Density ,             JCZ,JC,Z
  K_LN(lsdyna+ELECCOND)
  P_LN(ELECMAG*MULTDISC)
  IDX_Current Density ,           JCSUM,JC,SUM
!  
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Reynold's number,Magnetic     MRE,MRE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Nodal force data,Struct force  FX,F,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Nodal force data,              FY,F,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Nodal force data,              FZ,F,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Nodal force data,Struct moment MX,M,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Nodal force data,              MY,M,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Nodal force data,              MZ,M,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,HEAT,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,FMAG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag flux    FLUX,FLUX,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Curr segmt  CSGX,CSG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,            CSGY,CSG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,            CSGZ,CSG,Z
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_Nodal force data,Elec currnt AMPS,AMPS,
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Nodal force data,Flow rate   FLOW,FLOW,
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,HEAT,
!  
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Strain enrg SENE,SENE,
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Energy          ,Kinetc enrg KENE,KENE,
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Energy          ,Therm enrg  TENE,TENE,
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Mag energy  SENE,SENE,
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_Energy          ,Joule heat JHEAT,JHEAT,
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Elec energy SENE,SENE,
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Flow energy SENE,SENE,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Energy          ,Poynting vect PX,P,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Energy          ,              PY,P,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Energy          ,              PZ,P,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Energy          ,            PSUM,P,SUM
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,SEND,CREE
!  
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Error estimation,StruErrEnrg SERR,SERR,
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Error estimation,TherErrEnrg TERR,TERR,
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Error estimation,Strs deviat SDSG,SDSG,
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Error estimation,Grad deviat TDSG,TDSG,
!  
  K_LN(lsdyna)
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  IDX_Geometry        ,           CENTY,CENT,Y
  IDX_Geometry        ,           CENTZ,CENT,Z
!  
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!  
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!  
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!  
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!  
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO,
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!  
 Fld_0
  K_FL(MULTIFLD*STRUCTRL*LSDYNA*THERMAL*FLUID*ELECTRIC*MAGNETIC*CFD)
  Typ_Lab
  Prm_                               (For "By sequence num", enter sequence
 Fld_0
  Typ_Lab
  Prm_                                no. in Selection box.  See Table 4.xx-3
 Fld_0
  Typ_Lab
  Prm_                                in Elements Manual for seq. numbers.)
!
 Fld_3
  K_FL(cfd)
  Prm_KUND   Items to be plotted
  Typ_LIS_RADIOB
  LIS_Def shape only  ,0
  LIS_Def + undeformed,1
  LIS_Def + undef edge,2
!
 Fld_4
 K_FL(STRUCTRL*CFD)
  Prm_Fact  Optional scale factor
  Typ_REAL
  Def_1.0
!
Cmd_AVPRIN
K_CM(STRUCTRL)
 Fld_0
  Typ_Lab
  Prm_
 Fld_2
  Typ_Def_*GET(COMMON,,CPOST1,,INT,1)
 Fld_3
  Prm_[AVPRIN]  Eff NU for EQV strain
  Typ_REAL
  K_LN(KYAVPR)
  Def_*GET(COMMON,,CPOST1,,REAL,565)
Cal_Fnc_PLESOL_2
:E END OF Fnc_oldPLESOL
:! 
:N Fnc_oldPLNSOL
:S  43791,   531, 43236
:T Cmd
:C )! Fnc_oldPLNSOL
:C )/NOPR
:C )*get,_z1,common,,cpost1,,int,408
:C )keyw,kyavpr,_z1
:C )!
:C )maxlayer = 0
:C )*GET,maxlayer,ACTIVE,,DOF,LTEM
:C )*DO,i,1,32
:C )keyw,layer%i%,0
:C )*ENDDO
:C )*DO,i,1,maxlayer
:C )keyw,layer%i%,1
:C )*ENDDO
:C )*GET,_z10,common,,d3com,,int,132   ! PGrLevel (for /EFACET)
:C )*IF,_z10,LE,0,THEN
:C )_z10=1
:C )*ELSEIF,_z10,GE,3,THEN
:C )_z10=4
:C )*ENDIF
:C )/GO
:A    Nodal Solu
:D Contour Nodal Solution Data
:H Hlp_UI_PLNSOL
:K #(POST1+RESULTS)
Cmd_)*CSET,1,4
 Fld_0
  Typ_Lab
  Prm_[PLNSOL]  Contour Nodal Solution Data
 Fld_2
  K_FL(LSDYNA)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Acceleration  AX,A,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              AY,A,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              AZ,A,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ASUM,A,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            VSUM,V,SUM
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
!
 Fld_2
  K_FL(STRUCTRL+lsdyna+multifld)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,WARP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
! 
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,X-dir'n  EPTT  X,EPTT,X
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Y-dir'n  EPTT  Y,EPTT,Y
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Z-dir'n  EPTT  Z,EPTT,Z
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,XY-shear EPTT XY,EPTT,XY
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,YZ-shear EPTT YZ,EPTT,YZ
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,XZ-shear EPTT XZ,EPTT,XZ
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,1st prin EPTT  1,EPTT,1
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,2nd prin EPTT  2,EPTT,2
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,3rd prin EPTT  3,EPTT,3
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Intensty EPTTINT,EPTT,INT
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,vonMises EPTTEQV,EPTT,EQV
!
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,SEND,ELAS
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,SEND,PLAS
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,SEND,CREE
!
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO,
!
  P_LN(LINPLUS)
  IDX_Failure Criteria,Max Stress     SMAX,FAIL,SMAX
  P_LN(LINPLUS)
  IDX_Failure Criteria,Tsai-Wu Index  TWSI,FAIL,TWSI
  P_LN(LINPLUS)
  IDX_Failure Criteria,Tsai-Wu Ratio  TWSR,FAIL,TWSR
  P_LN(LINPLUS)
  IDX_Failure Criteria,Max Strain     EMAX,FAIL,EMAX
!
 Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  K_LN(laytherm)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
!
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  P_FL(elecmag)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(THERMAL)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  P_FL(ELECMAG)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,MagVectPoten  AX,A,X
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,              AY,A,Y
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,              AZ,A,Z
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,            ASUM,A,SUM
  K_LN((VECTORP*SCALARP*EDGEFLX)+edgeelc)*NOFILTER
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  K_LN((vectorp+scalarp+edgeflx+edgeelc))
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  K_LN((vectorp+scalarp+edgeflx+edgeelc))
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,Current     CURR,CURR,
  K_LN((vectorp+scalarp+edgeflx+edgeelc))
  IDX_DOF solution    ,Current     CURR,CURR,
!
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,              BY,B,Y
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,              BZ,B,Z
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,            BSUM,B,SUM
  K_LN((VECTORP*SCALARP*EDGEFLX)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,Mag field     HX,H,X
  K_LN((VECTORP*SCALARP*EDGEFLX)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,              HY,H,Y
  K_LN((VECTORP*SCALARP*EDGEFLX)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,              HZ,H,Z
  K_LN((VECTORP*SCALARP*EDGEFLX)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,            HSUM,H,SUM
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,              DY,D,Y
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,              DZ,D,Z
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,            DSUM,D,SUM
  K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
  IDX_Flux & gradient ,             EFY,EF,Y
  K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
  IDX_Flux & gradient ,             EFZ,EF,Z
  K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
!
  K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
  IDX_Current Density ,Conduction   JCX,JC,X
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Current Density ,             JCY,JC,Y
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Current Density ,             JCZ,JC,Z
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Current Density ,           JCSUM,JC,SUM
!
  K_LN(edgeelc*NOFILTER)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  K_LN(edgeelc*NOFILTER)
  IDX_Nodal force data,           FMAGY,FMAG,Y
  K_LN(edgeelc*NOFILTER)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  K_LN(edgeelc*NOFILTER)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
 Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(laytherm)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
 Fld_2
  K_FL(CFD+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Displacement  UX,U,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
  P_LN(THERMAL*FLOTRAN)
  K_LN(laytherm)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
  P_LN(FLOTRAN)
  IDX_Other quantities,Sp. Heat    SPHT,SPHT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Density     DENS,DENS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Viscosity   VISC,VISC,
  P_LN(FLOTRAN)
  IDX_Other quantities,Conductivit COND,COND,
  P_LN(FLOTRAN)
  IDX_Other quantities,SFTS Coeff  SFTS,SFTS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Viscos  EVIS,EVIS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Conduct ECON,ECON,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total temp  TTOT,TTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Strm func2D STRM,STRM,
  P_LN(FLOTRAN)
  IDX_Other quantities,PressurCoef PCOE,PCOE,
  P_LN(FLOTRAN)
  IDX_Other quantities,Mach number MACH,MACH,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total pres  PTOT,PTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Heat flux   HFLU,HFLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Film coeff  HFLM,HFLM,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb law Y+ YPLU,YPLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Wall shear  TAUW,TAUW,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb coeff  CMUV,CMUV,
 P_LN(FLOTRAN)
  IDX_Other quantities,Rad  flux   RDFL,RDFL,
!
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,WARP,
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,A,X
  K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration  AX,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,A,SUM
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,CURR,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  K_LN(lsdyna)
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  K_LN(lsdyna)
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(laytherm)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1+lsdyna)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32+lsdyna)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2+lsdyna)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
! 
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,X-dir'n  EPTT  X,EPTT,X
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Y-dir'n  EPTT  Y,EPTT,Y
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Z-dir'n  EPTT  Z,EPTT,Z
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,XY-shear EPTT XY,EPTT,XY
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,YZ-shear EPTT YZ,EPTT,YZ
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,XZ-shear EPTT XZ,EPTT,XZ
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,1st prin EPTT  1,EPTT,1
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,2nd prin EPTT  2,EPTT,2
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,3rd prin EPTT  3,EPTT,3
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Intensty EPTTINT,EPTT,INT
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,vonMises EPTTEQV,EPTT,EQV
!
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,B,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,B,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,B,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,H,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,H,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,H,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,H,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,              DY,D,Y
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,              DZ,D,Z
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,            DSUM,D,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,             EFY,EF,Y
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,             EFZ,EF,Z
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
!
  K_LN(lsdyna+ELECCOND)
  P_LN(ELECMAG*MULTDISC)
  IDX_Current Density ,Conduction   JCX,JC,X
  K_LN(lsdyna+ELECCOND)
  P_LN(ELECMAG*MULTDISC)
  IDX_Current Density ,             JCY,JC,Y
  K_LN(lsdyna+ELECCOND)
  P_LN(ELECMAG*MULTDISC)
  IDX_Current Density ,             JCZ,JC,Z
  K_LN(lsdyna+ELECCOND)
  P_LN(ELECMAG*MULTDISC)
  IDX_Current Density ,           JCSUM,JC,SUM
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,FMAG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO,
!
 Fld_0
  Prm_                                                                     .
!
 Fld_3
  Prm_KUND   Items to be plotted
  Typ_LIS_RADIOB
  LIS_Def shape only  ,0
  LIS_Def + undeformed,1
  LIS_Def + undef edge,2
!
 Fld_4
 K_FL(STRUCTRL)
  Prm_Fact  Optional scale factor
  Typ_REAL
  Def_1.0
!
Cmd_/EFACE
 Fld_2
  Prm_[/EFACET] Interpolation Nodes
  Typ_LIS_RADIOB
  LIS_ 1 Corner only     ,1
  LIS_ 2 Corner + midside,2
  LIS_ 4 All applicable  ,4
  Def_*PAR(_z10)
!
Cmd_AVPRIN
K_CM(STRUCTRL)
 Fld_0
  Typ_Lab
  Prm_
 Fld_2
  Typ_Def_*GET(COMMON,,CPOST1,,INT,1)
 Fld_3
  Prm_[AVPRIN]  Eff NU for EQV strain
  Typ_REAL
  K_LN(KYAVPR)
  Def_*GET(COMMON,,CPOST1,,REAL,565)
Cal_Fnc_PLNSOL_2
:E END OF Fnc_oldPLNSOL
:! 
:N Fnc_oldPRESOL
:S  12660,   185, 12451
:T Cmd
:C )!Fnc_oldPRESOL
:A Element Solution
:D List Element Solution
:H Hlp_UI_presol
:K #(POST1+RESULTS)
:P (LSDYNA*LINPLUS*THERMAL*ELECMAG)
Cmd_PRESOL
 Fld_0
  Prm_[PRESOL]  List Element Solution
 Fld_2
  K_FL(LSDYNA)
  Prm_Item      Item to be listed
  Typ_IDX
  P_LN(LINPLUS)
  IDX_Stress          ,Components     S,S
  P_LN(LINPLUS)
  IDX_Strain-total    ,Component   EPTO,EPTO,COMP
  P_LN(LINPLUS)
  IDX_Strain-total    ,Principal   EPTO,EPTO,PRIN
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Component   EPEL,EPEL,COMP
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Principal   EPEL,EPEL,PRIN
  P_LN(LINPLUS)
  IDX_Strain-plastic  ,Principal   EPPL,EPPL,PRIN
  P_LN(LINPLUS)
  Idx_Geometry        ,Elem volume VOLU,VOLU,
  P_LN(LINPLUS)
  Idx_Geometry        ,Elem loc    CENT,CENT,X
  P_LN(LINPLUS)
  Idx_Geometry        ,Elem int pt LOCI,LOCI
  P_LN(LINPLUS)
  Idx_By sequence num ,"SMISC,"
  P_LN(LINPLUS)
  Idx_By sequence num ,"NMISC,"
! 
 Fld_2
  K_FL(STRUCTRL+multifld+lsdyna)
  Prm_Item      Item to be listed
  Typ_IDX
  P_LN(LINPLUS)
  IDX_Stress          ,Components     S,S
! 
  P_LN(LINPLUS)
  IDX_Strain-total    ,Components  EPTO,EPTO
! 
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Components  EPTT,EPTT
! 
  P_LN(LINPLUS*ELECMAG)
  IDX_LineElem results,Structural  ELEM,ELEM
! 
  P_LN(LINPLUS*THERMAL*FLOTRAN)
  IDX_Nodal force data,All forces  FORC,FORC
  P_LN(LINPLUS)
  IDX_Nodal force data,All struc forc F,F
  P_LN(LINPLUS)
  IDX_Nodal force data,All struc mome M,M
! 
  P_LN(FULL_ANS)
  IDX_Nonlinear items ,Plasticity    NL,NL
  P_LN(FULL_ANS*PROFS)
  IDX_Nonlinear items ,Contact     CONT,CONT,
! 
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Components  EPEL,EPEL
! 
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Components  EPTH,EPTH
! 
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Components  EPPL,EPPL
! 
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Components  EPCR,EPCR
! 
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW
! 
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH
!
  P_LN(LINPLUS)
  Idx_Error estimation,StruErrEnrg SERR,SERR,
  P_LN(LINPLUS)
  Idx_Error estimation,Strs deviat SDSG,SDSG,
! 
  P_LN(LINPLUS*ELECMAG)
  Idx_Energy          ,Strain enrg SENE,SENE,
  P_LN(LINPLUS)
  Idx_Energy          ,Kinetc enrg KENE,KENE,
  P_LN(LINPLUS)
  Idx_Energy          ,Strain dens SEND,SEND,
! 
  Idx_Geometry        ,Elem volume VOLU,VOLU,
  Idx_Geometry        ,Elem loc   CENTX,CENT,X
  Idx_Geometry        ,Elem loc    CENT,CENT,X
  Idx_Geometry        ,           CENTY,CENT,Y
  Idx_Geometry        ,           CENTZ,CENT,Z
!
  Idx_Geometry        ,Elem int pt LOCI,LOCI
! 
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
! 
Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Item      Item to be listed
  Typ_IDX
  P_LN(THERMAL)
  IDX_Flux & gradient ,All ther flux TF,TF
  P_LN(THERMAL)
  IDX_Flux & gradient ,All ther grad TG,TG
! 
  P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,HEAT
! 
  P_LN(THERMAL)
  Idx_Error estimation,TherErrEnrg TERR,TERR,
  P_LN(THERMAL)
  Idx_Error estimation,Grad deviat TDSG,TDSG,
!
  P_LN(THERMAL)
  Idx_Energy          ,Therm enrg  TENE,TENE,
!
  Idx_Geometry        ,Elem volume VOLU,VOLU,
  Idx_Geometry        ,Elem loc   CENTX,CENT,X
  Idx_Geometry        ,           CENTY,CENT,Y
  Idx_Geometry        ,           CENTZ,CENT,Z
!
  Idx_Geometry        ,Elem int pt LOCI,LOCI
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Nonlinear items ,Contact     CONT,CONT,
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
! 
Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  P_FL(elecmag)
  Prm_Item      Item to be listed
  Typ_Idx
  P_LN(LINPLUS*THERMAL)
  Idx_Nodal force data,All forces  FORC,FORC
  P_LN(THERMAL*FLOTRAN)
  Idx_Nodal force data,Elec currnt AMPS,AMPS
  P_LN(LINPLUS)
  Idx_Energy          ,Mag energy  SENE,SENE,
  P_LN(THERMAL)
  Idx_Energy          ,Joule heat JHEAT,JHEAT,
  P_LN(LINPLUS)
  Idx_Energy          ,Elec energy SENE,SENE,
  P_LN(LINPLUS)
  Idx_Circuit Results ,Electrical  ELEM,ELEM,
!
  Idx_Geometry        ,Elem volume VOLU,VOLU,
  Idx_Geometry        ,Elem loc   CENTX,CENT,X
  Idx_Geometry        ,           CENTY,CENT,Y
  Idx_Geometry        ,           CENTZ,CENT,Z
!
  Idx_Geometry        ,Elem int pt LOCI,LOCI
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!
Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  P_FL(ELECMAG)
  Prm_Item      Item to be listed
  Typ_Idx
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  Idx_Flux & gradient ,All magFluxDen B,B
  K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC*NOFILTER)
  Idx_Flux & gradient ,All mag field  H,H
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  Idx_Flux & gradient ,All elecFlxDen D,D
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  Idx_Flux & gradient ,All elec fld  EF,EF
! 
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  Idx_Nodal force data,All magForc FMAG,FMAG
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  Idx_Nodal force data,Elec currnt AMPS,AMPS
!
  K_LN(edgeelc*NOFILTER)
  Idx_Current Density ,Total         JT,JT  
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  Idx_Current Density ,Cpl'd Source  JS,JS  
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  Idx_Current Density ,Conduction    JC,JC  
!
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  Idx_Reynold's Number,Magnetic     MRE,MRE 
!
  Idx_Energy          ,Joule heat JHEAT,JHEAT,
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  Idx_Energy          ,Elec energy SENE,SENE,
  K_LN(EDGEELC*NOFILTER)
  IDX_Energy          ,Poynting vect  P,P
!
  Idx_Geometry        ,Elem volume VOLU,VOLU,
  Idx_Geometry        ,Elem loc   CENTX,CENT,X
  Idx_Geometry        ,           CENTY,CENT,Y
  Idx_Geometry        ,           CENTZ,CENT,Z
!
  Idx_Geometry        ,Elem int pt LOCI,LOCI
!
  K_LN((edgeflx+edgeelc)*NOFILTER)
  Idx_Circuit Results ,Electrical  ELEM,ELEM,
! 
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!
Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item      Item to be listed
  Typ_Idx
  P_LN(FULL_ANS)
  Idx_Flux & gradient ,All pres grad PG,PG
  P_LN(THERMAL)
  Idx_Flux & gradient ,All ther flux TF,TF
  P_LN(THERMAL)
  Idx_Flux & gradient ,All ther grad TG,TG
!
  P_LN(LINPLUS*ELECMAG)
  Idx_Energy          ,Flow energy SENE,SENE,
!
  Idx_Geometry        ,Elem volume VOLU,VOLU,
  Idx_Geometry        ,Elem loc   CENTX,CENT,X
  Idx_Geometry        ,           CENTY,CENT,Y
  Idx_Geometry        ,           CENTZ,CENT,Z
!
  Idx_Geometry        ,Elem int pt LOCI,LOCI
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
! 
Fld_2
  K_FL(CFD+lsdyna)
  Prm_Item      Item to be listed
  Typ_Idx
  Idx_Geometry        ,Elem loc   CENTX,CENT,X
  Idx_Geometry        ,           CENTY,CENT,Y
  Idx_Geometry        ,           CENTZ,CENT,Z
!
  Idx_Geometry        ,Elem int pt LOCI,LOCI
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
! 
Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Item      Item to be listed
  Typ_Idx
  P_LN(LINPLUS)
  Idx_Stress          ,Components     S,S
! 
  P_LN(LINPLUS)
  Idx_Strain-total    ,Components  EPTO,EPTO
! 
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Components  EPTT,EPTT
! 
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  Idx_LineElem results,Structural  ELEM,ELEM
! 
  K_LN(lsdyna)
  P_LN(THERMAL)
  Idx_Flux & gradient ,All ther flux TF,TF
  K_LN(lsdyna)
  P_LN(THERMAL)
  Idx_Flux & gradient ,All ther grad TG,TG
  K_LN(lsdyna)
  P_LN(ELECMAG)
  Idx_Flux & gradient ,All magFluxDen B,B
  K_LN(lsdyna)
  P_LN(ELECMAG)
  Idx_Flux & gradient ,All mag field  H,H
  K_LN(lsdyna)
  P_LN(ELECMAG)
  Idx_Flux & gradient ,All elecFlxDen D,D
  K_LN(lsdyna)
  P_LN(ELECMAG)
  Idx_Flux & gradient ,All elec fld  EF,EF
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  Idx_Flux & gradient ,All pres grad PG,PG
! 
  K_LN(lsdyna)
  P_LN(LINPLUS*THERMAL*FLOTRAN)
  Idx_Nodal force data,All forces  FORC,FORC
  K_LN(lsdyna)
  P_LN(LINPLUS)
  Idx_Nodal force data,All struc forc F,F
  K_LN(lsdyna)
  P_LN(LINPLUS)
  Idx_Nodal force data,All struc mome M,M
  K_LN(lsdyna)
  P_LN(THERMAL)
  Idx_Nodal force data,Heat flow   HEAT,HEAT
  K_LN(lsdyna)
  P_LN(ELECMAG)
  Idx_Nodal force data,All magForc FMAG,FMAG
  K_LN(lsdyna)
  P_LN(ELECMAG)
  Idx_Nodal force data,Mag flux    FLUX,FLUX
  K_LN(lsdyna)
  P_LN(ELECMAG)
  Idx_Nodal force data,All curr seg CSG,CSG
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  Idx_Nodal force data,Elec currnt AMPS,AMPS
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  Idx_Nodal force data,Flow rate   FLOW,FLOW
! 
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  Idx_Nonlinear items ,Plasticity    NL,NL
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  Idx_Nonlinear items ,Contact     CONT,CONT,
! 
  K_LN(lsdyna)
  P_LN(LINPLUS)
  Idx_Strain-elastic  ,Components  EPEL,EPEL
! 
  K_LN(lsdyna)
  P_LN(LINPLUS)
  Idx_Strain-thermal  ,Applied ele temp,BFE
  K_LN(lsdyna)
  P_LN(LINPLUS)
  Idx_Strain-thermal  ,Components  EPTH,EPTH
! 
  P_LN(FULL_ANS)
  Idx_Strain-plastic  ,Components  EPPL,EPPL
! 
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  Idx_Strain-creep    ,Components  EPCR,EPCR
! 
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  Idx_Strain-other    ,Swelling    EPSW,EPSW
!
  K_LN((MULTIFLD*STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress        GKS   X,GKS
!
  K_LN((MULTIFLD*STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure GKD   X,GKD
!
  K_LN((MULTIFLD*STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure  GKDI  X,GKDI
!
  K_LN((MULTIFLD*STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure GKTH  X,GKTH
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  Idx_Error estimation,StruErrEnrg SERR,SERR,
  K_LN(lsdyna)
  P_LN(THERMAL)
  Idx_Error estimation,TherErrEnrg TERR,TERR,
  K_LN(lsdyna)
  P_LN(LINPLUS)
  Idx_Error estimation,Strs deviat SDSG,SDSG,
  K_LN(lsdyna)
  P_LN(THERMAL)
  Idx_Error estimation,Grad deviat TDSG,TDSG,
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  Idx_Current Density ,Total         JT,JT
  K_LN(lsdyna)
  P_LN(ELECMAG)
  Idx_Current Density ,Cpl'd Source JSX,JS,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  Idx_Current Density ,             JSY,JS,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  Idx_Current Density ,             JSZ,JS,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,           JSSUM,JS,SUM
  K_LN(lsdyna+ELECCOND)
  P_LN(ELECMAG)
  IDX_Current Density ,All condCurDen   JC,JC 
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  Idx_Reynold's Number,Magnetic     MRE,MRE
!
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  Idx_Energy          ,Strain enrg SENE,SENE,
  K_LN(lsdyna)
  P_LN(LINPLUS)
  Idx_Energy          ,Kinetc enrg KENE,KENE,
  K_LN(lsdyna)
  P_LN(THERMAL)
  Idx_Energy          ,Therm enrg  TENE,TENE,
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  Idx_Energy          ,Mag energy  SENE,SENE,
  K_LN(lsdyna)
  P_LN(LINPLUS)
  Idx_Energy          ,Strain dens SEND,SEND,
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  Idx_Energy          ,Joule heat JHEAT,JHEAT,
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  Idx_Energy          ,Elec energy SENE,SENE,
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  Idx_Energy          ,Flow energy SENE,SENE,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Energy          ,Poynting vect  P,P
!
  K_LN(lsdyna)
  Idx_Geometry        ,Elem volume VOLU,VOLU,
  K_LN(lsdyna)
  Idx_Geometry        ,Elem loc   CENTX,CENT,X
  K_LN(LSDYNA)
  Idx_Geometry        ,Elem loc    CENT,CENT,X
  K_LN(lsdyna)
  Idx_Geometry        ,           CENTY,CENT,Y
  K_LN(lsdyna)
  Idx_Geometry        ,           CENTZ,CENT,Z
!
  Idx_Geometry        ,Elem int pt LOCI,LOCI
! 
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO
!
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  Idx_Circuit Results ,Electrical  ELEM,ELEM,
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
! 
!
 Fld_0
  Typ_Lab
  Prm_                               (For "By sequence num", enter sequence
 Fld_0
  Typ_Lab
  Prm_                                no. in Selection box.  See Table 4.xx-3
 Fld_0
  Typ_Lab
  Prm_                                in Elements Manual for seq.  numbers.)
:E END OF Fnc_oldPRESOL
:! 
:N Fnc_oldPRNSOL
:S  25696,   377, 25295
:T Cmd
:C )! Fnc_oldPRNSOL
:C )/nopr
:C )*get,_z1,common,,cpost1,,int,408
:C )keyw,kyavpr,_z1
:C )!
:C )maxlayer = 0
:C )*GET,maxlayer,ACTIVE,,DOF,LTEM
:C )*DO,i,1,32
:C )keyw,layer%i%,0
:C )*ENDDO
:C )*DO,i,1,maxlayer
:C )keyw,layer%i%,1
:C )*ENDDO
:C )/go
:A Nodal Solution
:D List Nodal Solution
:H Hlp_UI_prnsol
:K #(POST1+RESULTS)
Cmd_)*CSET,1,2
 Fld_0
  Prm_[PRNSOL]  List Nodal Solution
 Fld_2
  K_FL(LSDYNA)
  Prm_Item,Comp   Item to be listed
  Typ_IDX
  IDX_DOF solution    ,All DOFs     DOF,DOF
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,All U's    UCOMP,U,COMP
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,All ROT  ROTCOMP,ROT,COMP
  P_LN(LINPLUS)
  IDX_DOF solution    ,Acceleration  AX,A,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              AY,A,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              AZ,A,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,All A's    ACOMP,A,COMP
  P_LN(LINPLUS)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,All V's    VCOMP,V,COMP
!
  P_LN(LINPLUS)
  IDX_Stress          ,Components SCOMP,S,COMP
  P_LN(LINPLUS)
  IDX_Stress          ,Principals SPRIN,S,PRIN
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,Comp's  EPTOCOMP,EPTO,COMP
  P_LN(LINPLUS)
  IDX_Strain-total    ,Prin's  EPTOPRIN,EPTO,PRIN
!
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Comp's  EPELCOMP,EPEL,COMP
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Prin's  EPELPRIN,EPEL,PRIN
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Prin's  EPPLPRIN,EPPL,PRIN
!
 Fld_2
  K_FL(STRUCTRL+multifld+lsdyna)
  Prm_Item,Comp   Item to be listed
  Typ_IDX
  IDX_DOF solution    ,All DOFs     DOF,DOF
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,All U's    UCOMP,U,COMP
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,All ROT  ROTCOMP,ROT,COMP
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,WARP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,Components SCOMP,S,COMP
  P_LN(LINPLUS)
  IDX_Stress          ,Principals SPRIN,S,PRIN
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,Comp's  EPTOCOMP,EPTO,COMP
  P_LN(LINPLUS)
  IDX_Strain-total    ,Prin's  EPTOPRIN,EPTO,PRIN
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Comp's  EPTTCOMP,EPTT,COMP
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Prin's  EPTTPRIN,EPTT,PRIN
!
  P_LN(FULL_ANS)
  IDX_Nonlinear items ,Plasticity    NL,NL,
  P_LN(FULL_ANS*PROFS)
  IDX_Nonlinear items ,Contact     CONT,CONT,
!
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Comp's  EPELCOMP,EPEL,COMP
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Prin's  EPELPRIN,EPEL,PRIN
!
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Comp's  EPTHCOMP,EPTH,COMP
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Prin's  EPTHPRIN,EPTH,PRIN
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Comp's  EPPLCOMP,EPPL,COMP
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Prin's  EPPLPRIN,EPPL,PRIN
!
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Comp's  EPCRCOMP,EPCR,COMP
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Prin's  EPCRPRIN,EPCR,PRIN
!
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  P_LN(FULL_ANS)
  IDX_Strain-energy   ,Density     SEND,SEND,
!
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO
!
  IDX_Failure Criteria,Stress     SFAIL,S,FAIL
  IDX_Failure Criteria,Strain  EPELFAIL,EPEL,FAIL
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH
!
 Fld_2
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Item,Comp   Item to be listed
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  K_LN(laytherm)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
!
  P_LN(THERMAL)
  IDX_Flux & gradient ,All ther flux TF,TF,COMP
  P_LN(THERMAL)
  IDX_Flux & gradient ,All ther grad TG,TG,COMP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Nonlinear items ,Contact     CONT,CONT,
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+lsdyna+thermal+fluid)
  P_FL(elecmag)
  Prm_Item,Comp   Item to be listed
  Typ_IDX
  P_LN(THERMAL)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+lsdyna+thermal+fluid)
  P_FL(ELECMAG)
  Prm_Item,Comp   Item to be listed
  Typ_IDX
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,MagVectPoten  AX,A,X
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,              AY,A,Y
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,              AZ,A,Z
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,All A's    ACOMP,A,COMP
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,Current     CURR,CURR,
  K_LN((vectorp+scalarp+edgeflx+edgeelc))
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  K_LN((vectorp+scalarp+edgeflx+edgeelc))
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  K_LN((vectorp+scalarp+edgeflx+edgeelc))
  IDX_DOF solution    ,Current     CURR,CURR,
!
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,All magFluxDen B,B,COMP
  K_LN((VECTORP*SCALARP*EDGEFLX)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,All mag field  H,H,COMP
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,All elecFlxDen D,D,COMP
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,All elec fld  EF,EF,COMP
!
  K_LN(edgeelc*NOFILTER)
  IDX_Nodal force data,All magForc FMAG,FMAG,COMP
!
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Current density ,Conduction    JC,JC
!
 Fld_2
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item,Comp   Item to be listed
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,All V's    VCOMP,V,COMP
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(laytherm)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,All pres grad PG,PG,COMP
  P_LN(THERMAL)
  IDX_Flux & gradient ,All ther flux TF,TF,COMP
  P_LN(THERMAL)
  IDX_Flux & gradient ,All ther grad TG,TG,COMP
!
 Fld_2
  K_FL(CFD+lsdyna)
  Prm_Item,Comp   Item to be listed
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Displacement  UX,U,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,All U's    UCOMP,U,COMP
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,All V's    VCOMP,V,COMP
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
  P_LN(THERMAL*FLOTRAN)
  K_LN(laytherm)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
  P_LN(FLOTRAN)
  IDX_Other quantities,Sp. Heat    SPHT,SPHT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Density     DENS,DENS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Viscosity   VISC,VISC,
  P_LN(FLOTRAN)
  IDX_Other quantities,Conductivit COND,COND,
  P_LN(FLOTRAN)
  IDX_Other quantities,SFTS Coeff  SFTS,SFTS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Viscos  EVIS,EVIS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Conduct ECON,ECON,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total temp  TTOT,TTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Strm func2D STRM,STRM,
  P_LN(FLOTRAN)
  IDX_Other quantities,PressurCoef PCOE,PCOE,
  P_LN(FLOTRAN)
  IDX_Other quantities,Mach number MACH,MACH,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total pres  PTOT,PTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Heat flux   HFLU,HFLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Film coeff  HFLM,HFLM,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb law Y+ YPLU,YPLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Wall shear  TAUW,TAUW,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb coeff  CMUV,CMUV,
 P_LN(FLOTRAN)
  IDX_Other quantities,Rad  flux   RDFL,RDFL,
!
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Item,Comp   Item to be listed
  Typ_IDX
  IDX_DOF solution    ,All DOFs     DOF,DOF
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,All U's    UCOMP,U,COMP
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,All ROT  ROTCOMP,ROT,COMP
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,WARP,
!
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_DOF solution    ,MagVectPoten  AX,A,X
  K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration  AX,A,X
  P_LN(ELECMAG*LSDYNA)
  IDX_DOF solution    ,              AY,A,Y
  P_LN(ELECMAG*LSDYNA)
  IDX_DOF solution    ,              AZ,A,Z
  P_LN(ELECMAG*LSDYNA)
  IDX_DOF solution    ,All A's    ACOMP,A,COMP
  P_LN(THERMAL*ELECMAG)
  K_LN(lsdyna)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_DOF solution    ,Current     CURR,CURR,
  P_LN(FLOTRAN*LSDYNA)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN*LSDYNA)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN*LSDYNA)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN*LSDYNA)
  IDX_DOF solution    ,All V's    VCOMP,V,COMP
  P_LN(FLOTRAN*FULL_ANS)
  K_LN(lsdyna)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  K_LN(lsdyna)
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  K_LN(laytherm)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
!
  K_LN((MULTIFLD*STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress        GKS   X,GKS
!
  K_LN((MULTIFLD*STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure GKD   X,GKD
!
  K_LN((MULTIFLD*STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure  GKDI  X,GKDI
!
  K_LN((MULTIFLD*STRUCTRL)+(pmethod+lsdyna+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure GKTH  X,GKTH
!
  P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,Components SCOMP,S,COMP
  P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,Principals SPRIN,S,PRIN
!
  P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,Comp's  EPTOCOMP,EPTO,COMP
  P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,Prin's  EPTOPRIN,EPTO,PRIN
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Comp's  EPTTCOMP,EPTT,COMP
  P_LN(LINPLUS)
  IDX_Strain-mech+thrm,Prin's  EPTTPRIN,EPTT,PRIN
!
  P_LN(THERMAL)
  K_LN(lsdyna)
  IDX_Flux & gradient ,All ther flux TF,TF,COMP
  P_LN(THERMAL)
  K_LN(lsdyna)
  IDX_Flux & gradient ,All ther grad TG,TG,COMP
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,All magFluxDen B,B,COMP
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,All mag field  H,H,COMP
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,All elecFlxDen D,D,COMP
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,All elec fld  EF,EF,COMP
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,All pres grad PG,PG,COMP
!
  P_LN(ELECMAG)
  K_LN(lsdyna+ELECCOND)
  IDX_Current Density ,All condCurDen   JC,JC
!
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Nodal force data,All magForc FMAG,FMAG,COMP
!
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Nonlinear items ,Plasticity    NL,NL,
  P_LN(FULL_ANS*PROFS)
  K_LN(lsdyna)
  IDX_Nonlinear items ,Contact     CONT,CONT,
!
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Comp's  EPELCOMP,EPEL,COMP
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Prin's  EPELPRIN,EPEL,PRIN
!
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Strain-thermal  ,Applied ele temp,BFE,
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Strain-thermal  ,Comp's  EPTHCOMP,EPTH,COMP
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Strain-thermal  ,Prin's  EPTHPRIN,EPTH,PRIN
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Comp's  EPPLCOMP,EPPL,COMP
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Prin's  EPPLPRIN,EPPL,PRIN
!
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Strain-creep    ,Comp's  EPCRCOMP,EPCR,COMP
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Strain-creep    ,Prin's  EPCRPRIN,EPCR,PRIN
!
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Optimization    ,Topological TOPO,TOPO
!
Cmd_AVPRIN
K_CM(STRUCTRL)
 Fld_2
  Typ_Def_*GET(COMMON,,CPOST1,,INT,1)
 Fld_3
  Prm_[AVPRIN]  Eff NU for EQV strain
  Typ_REAL
  K_LN(KYAVPR)
  Def_*GET(COMMON,,CPOST1,,REAL,565)
!
Cal_Fnc_PRNSOL_2
:E END OF Fnc_oldPRNSOL
:! 
:N Fnc_p26DataSet
:S    739,   130,   602
:T Command
:C )! Fnc_p26DataSet
:A Data
:D Data Settings
:K #(POST26)
:H Hlp_UI_dataset
Inp_NoApply
Fld_0
Typ_Lab
Prm_[TIMERANGE] [NSTORE]  Time (or frequency) range for reading data
Cmd_TIMERANGE
Fld_2
Prm_TMIN   Minimum time
Typ_real
Def_*GET(common,,cpst26,,real,801)
Fld_3
Prm_TMAX   Maximum time
Typ_real
Def_*GET(common,,cpst26,,real,802)
Cmd_NSTORE
Fld_2
Prm_TINC   Increment
Typ_int
Def_*GET(common,,cpst26,,int,607)
Fld_0
Typ_Sep
Cmd_TVAR
Fld_2
Prm_[TVAR]  Meaning of time variable
Typ_LIS_OPTIONB
LIS_Time        TIME,0
LIS_Cum Iter  NCUMIT,1
Def_*GET(common,,cpst26,,int,603)
Typ_Sep
Cmd_KEEP
Fld_2
Prm_[KEEP]  Retain POST26 data
Typ_LIS_RADIOB
LIS_Active,1
LIS_Inactive,0
Def_1
:E END
:! 
:N Fnc_p26DefineVar
:S    246,   129,   110
:T Command
:C )! Fnc_p26DefineVar
:A Define Variables
:K #(POST26)
:H Hlp_UI_P26_Var
Inp_P
Cmd_)DEFINE
Cmd_)STAT,,, ,,, ,,1
! Cust_Cmd_VARDEL
! Cust_Cal_Fnc_P26VAR_ADD
! Cust_Cal_Fnc_P26VAR_EDIT
:E END
:! 
:N Fnc_p26FileSet
:S    362,   178,   177
:T Command
:C )! Fnc_p26FileSet
:C )/NOPR
:C )*DEL,_zx
:C )*SET,_zx,' '
:C )/GO
:A File
:D File Settings
:K #(POST26)
:H Hlp_UI_fileset
Inp_NoApply
Cmd_NUMVAR
Fld_2
Prm_[NUMVAR]   Number of variables
Typ_int
Def_*GET(common,,cpst26,,int,606)
Cmd_FILE
Fld_2
Prm_[FILE]  File containing data
Typ_FILE
Def_*PAR(_zx)
:E END
:! 
:N Fnc_p26GrphSet
:S   1575,   324,  1244
:T Command
:C )! Fnc_p26GrphSet
:A Graph
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,8
:C )*GET,_z2,common,,cpst26,,int,602 ! xvar  
:C )*IF,_z2,GT,1,THEN
:C )_z1=1
:C )*ELSEIF,_z2,EQ,1,THEN
:C )_z1=0
:C )*ELSE
:C )_z1=_z2
:C )*ENDIF
:C )/GO
:D Graph Settings
:K #(POST26)
:H Hlp_UI_grphset
Cmd_)/NOPR
Cmd_)*CSET,3,4
Fld_0
Typ_Lab
Prm_[PLTIME] Time (or frequency) range for graphs
Fld_2
Prm_TMIN   Minimum time
Typ_real
Def_*GET(common,,cpst26,,real,805)
Fld_3
Prm_TMAX   Maximum time
Typ_real
Def_*GET(common,,cpst26,,real,806)
Fld_0
Typ_Sep
Cmd_)*SET,_z(5)
Fld_2
Prm_[XVAR]  X-axis variable
Typ_LIS_RADIOB
LIS_Time (or freq)  ,0
LIS_All variables   ,-1
LIS_Single variable ,1
Def_*PAR(_z1)
!
Cmd_)*CSET,6,6
Fld_2
Prm_        Single variable no.
Typ_int
Def_*GET(common,,cpst26,,int,602)
Fld_0
Typ_Sep
! 
Cmd_VARNAM
Fld_0
Typ_Lab
Prm_[VARNAM]  Names (or renames) a variable
Fld_2
Prm_IR        Variable number
Typ_int
Def_Blank
Fld_3
Prm_Name      Variable name for -
Typ_CHAR,8
Fld_0
Typ_Lab
Prm_          - for lists and graphs
Fld_0
Typ_Sep
! 
Cmd_)*CSET,7,7
Fld_2
Prm_[SPREAD]  Optional tolerance -
Typ_real
Def_*GET(common,,cpst26,,real,811)
Fld_0
Typ_Lab
Prm_          - defining dashed tolerance curve
Fld_0
Typ_Sep
Cmd_)*SET,_z(8)
P_CM(LINPLUS*ELECMAG)
Fld_2
Prm_[PLCPLX]  Complex variable -
Typ_LIS_OPTIONB
LIS_Amplitude       ,0
LIS_Phase angle     ,1
LIS_Real part       ,2
LIS_Imaginary part  ,3
Def_*GET(common,,cpst26,,int,1218)
Fld_0
Typ_Lab
Prm_          - part to be graphed (harmonic analysis only)
Cal_Fnc_GrphSet1
:E END
:! 
:N Fnc_p26ListSet
:S    997,   130,   860
:T Command
:C )! Fnc_p26ListSet
:A List
:D List Settings
:K #(POST26)
:H Hlp_UI_listset
Fld_0
Typ_Lab
Prm_[PRTIME] [NPRINT]  Time (or frequency) range for lists
Cmd_PRTIME
Fld_2
Prm_TMIN   Minimum time
Typ_real
Def_*GET(common,,cpst26,,real,803)
Fld_3
Prm_TMAX   Maximum time
Typ_real
Def_*GET(common,,cpst26,,real,804)
Cmd_NPRINT
Fld_2
Prm_N      Increment
Typ_int
Def_*GET(common,,cpst26,,int,608)
Fld_0
Typ_Sep
! 
Cmd_VARNAM
Fld_2
Prm_IR        Variable number
Typ_int
Def_Blank
Fld_3
Prm_[VARNAM]  Variable name for -
Typ_CHAR,8
Fld_0
Typ_Lab
Prm_          - for lists and graphs
Fld_0
Typ_Sep
! 
Cmd_LINES
Fld_2
Prm_[LINES]   Number of lines/page
Typ_int
Def_*GET(common,,cpst26,,int,611)
Fld_0
Typ_Sep
Cmd_PRCPLX
P_CM(LINPLUS*ELECMAG)
Fld_2
Prm_[PRCPLX]  Complex variable -
Typ_LIS_OPTIONB
LIS_Real + Imaginary,0
LIS_Amplitude+Phase ,1
Def_*GET(common,,cpst26,,int,1217)
Fld_0
Typ_Lab
Prm_          - format in lists (harmonic analyses only)
:E END
:! 
:N Fnc_rcedit_124
:S    289,   112,   170
:T Cmd_P
:C )!Fnc_rcedit_124
:A Edit Real Cnst
:D Edit Real Constants
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_ELEM
   Prm_Pick Element to edit real constants
   Min_1
   MOk_1
   Pfm_2
Cmd_)KEYW,EDFRMPK1,1
Cmd_)/GO
Cal_Fnc_rcedit_124_2
:E END
:! 
:N Fnc_rcedit_124_2
:S    565,   313,   245
:T Cmd
:A Edit Real Cnst
:C )/nopr
:C )*GET,_ET_NAME,ELEM,_z1,ATTR,ENAM
:C )*GET,_ET_TYPE,ELEM,_z1,ATTR,TYPE
:C )*GET,_RC_SET,ELEM,_z1,ATTR,REAL
:C )*if,_ET_NAME,eq,94,then
:C )*set,_e0,'94'
:C )*endif
:C )*if,_ET_NAME,eq,124,then
:C )*set,_e0,'124'
:C )*endif
:C )/go
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_ET_NAME)
Cal_Fnc_rcon_14,2,eq,14
Cal_Fnc_rcon_21,2,eq,21
Cal_Fnc_rcon_39,2,eq,39
Cal_Fnc_rcon_94,2,eq,94
Cal_Fnc_rcon_124,2,eq,124
Cal_Fnc_rcon_125,2,eq,125
Cal_Fnc_rcon_126,2,eq,126
Cal_Fnc_rcon_139,2,eq,139
:E END
:! 
:N Fnc_rcon_0
:S    587,   108,   472
:T Cmd
:C )! Fnc_rcon_0
:B Fnc_R
:D Generic Real Constants
:H Hlp_C_R
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)/GO
Cmd_)*CSET,100,101,'NOTE',' '
Cmd_)*CSET,110,110,'No element types have been      '
Cmd_)*CSET,111,111,' defined! %/ A generic real     '
Cmd_)*CSET,112,112,' constant & '
Cmd_)*CSET,113,113,' dialog will be displayed       '
Cmd_)*CSET,114,122,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,123,131,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,132,139,' ',' ',' ',' ',' ',' ',' ',' '
Cal_Fnc_Message
Cal_Fnc_rcon_00
:E End
:! 
:N Fnc_rcon_00
:S    691,   110,   559
:T Cmd
:C )! Fnc_rcon_00
:B Fnc_R
:D Generic Real Constants
:H Hlp_C_R
Cmd_R
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_[R]
Fld_3
Prm_R1  Value 1
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_R2  Value 2
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_R3  Value 3
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_R4  Value 4
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_R5  Value 5
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_R6  Value 6
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_00
:! 
:N Fnc_rcon_1
:S    211,   123,    67
:T Cmd
:C )! Fnc_rcon_1
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for LINK1
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'LINK1'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_1
:! 
:N Fnc_rcon_10
:S    216,   126,    68
:T Cmd
:C )! Fnc_rcon_10
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for LINK10
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'LINK10'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_10
:! 
:N Fnc_rcon_106
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_106
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for VISCO106
:H Hlp_E_S4.106
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'VISCO106'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_106
:! 
:N Fnc_rcon_107
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_107
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for VISCO107
:H Hlp_E_S4.107
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'VISCO107'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_107
:! 
:N Fnc_rcon_108
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_108
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for VISCO108
:H Hlp_E_S4.108
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'VISCO108'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_108
:! 
:N Fnc_rcon_109
:S    424,   146,   271
:T Cmd
:C )! Fnc_rcon_109
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for TRANS109
:H Hlp_E_S4.109
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Out of plane thickness    TK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E END
:! 
:N Fnc_rcon_11
:S    640,   141,   477
:T Cmd
:C )! Fnc_rcon_11
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for LINK11
:H Hlp_E_S4.11
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Stiffness                      K
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Viscous Damping Coefficient    C
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Mass                           M
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_11
:! 
:N Fnc_rcon_110
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_110
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INFIN110
:H Hlp_E_S4.110
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INFIN110'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_110
:! 
:N Fnc_rcon_111
:S    222,   146,    69
:T Cmd
:C )! Fnc_rcon_111
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INFIN111
:H Hlp_E_S4.111
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INFIN111'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End
:! 
:N Fnc_rcon_115
:S    207,   130,    70
:T Cmd
:C )! Fnc_rcon_115
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER115
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INTER115'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End
:! 
:N Fnc_rcon_116
:S   4222,  1376,  2823
:T Cmd
:C )! Fnc_rcon_116
:C )/NOPR
:C )*CSET,1,12
:C )*CSET,101,112
:C )*DEL,_vz
:C )*DIM,_vz,,2
:C )_vz(2)=0
:C )KEYW,ktabf,0
:C )KEYW,ktabt,0
:C )KEYW,ktabn,0
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )*GET,_z2,ETYP,_ET_TYPE,ATTR,KOP2
:C )*GET,_z4,ETYP,_ET_TYPE,ATTR,KOP4
:C )*GET,_z6,ETYP,_ET_TYPE,ATTR,KOP6
:C )*GET,_z8,ETYP,_ET_TYPE,ATTR,KOP8
:C )!   Set Keyopt(1) keywords
:C )KEYW,KEY10,0
:C )KEYW,KEY11,0
:C )KEYW,KEY12,0
:C )*IF,_z1,EQ,0,THEN
:C )KEYW,KEY10,1
:C )*ELSEIF,_z1,EQ,1
:C )KEYW,KEY11,1
:C )*ELSEIF,_z1,EQ,2
:C )KEYW,KEY12,1
:C )*ENDIF
:C )!   Set Keyopt(2) keywords
:C )KEYW,KEY20,0
:C )KEYW,KEY21,0
:C )KEYW,KEY22,0
:C )*IF,_z2,EQ,0,THEN
:C )KEYW,KEY20,1
:C )*ELSEIF,_z2,EQ,1
:C )KEYW,KEY21,1
:C )*ELSEIF,_z2,EQ,2
:C )KEYW,KEY22,1
:C )*ELSEIF,_z2,EQ,3
:C )KEYW,KEY22,1
:C )*ELSEIF,_z2,EQ,4
:C )KEYW,KEY22,1
:C )*ENDIF
:C )!   Set Keyopt(4) keywords
:C )*IF,_z4,EQ,0,THEN
:C )KEYW,KEY4,0
:C )*ELSE
:C )KEYW,KEY4,1
:C )*ENDIF
:C )!   Set Keyopt(6) keywords
:C )*IF,_z6,EQ,0,THEN
:C )KEYW,KEY60,1
:C )KEYW,KEY61,0
:C )*ELSEIF,_z6,EQ,1
:C )KEYW,KEY60,0
:C )KEYW,KEY61,1
:C )*ELSE
:C )KEYW,KEY60,0
:C )KEYW,KEY61,0
:C )*ENDIF
:C )!   Set Keyopt(8) keywords
:C )*IF,_z8,EQ,0,THEN
:C )KEYW,KEY8,0
:C )*ELSE
:C )KEYW,KEY8,1
:C )*ENDIF
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID116
:H Hlp_E_S4.116
Cmd_)/NOPR
Cmd_)*CSET,1,6
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Hydraulic diameter             D
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Flow cross-sectional area      A
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Number of flow channels       Nc
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
!
Cmd_)*CSET,7,12
Fld_2
K_FL(KEY22+(KEY10*KEY11))
Prm_I-K convection area        An(I)
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
K_FL(KEY22+(KEY10*KEY11))
Prm_J-L convection area        An(J)
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
Fld_4
K_FL(KEY4+KEY22+(KEY10*KEY11))
Prm_Nusselt calculation           N1  
Typ_Real
Def_*GET(rcon,_RC_SET,const,9)
Fld_5
K_FL(KEY4+KEY22+(KEY10*KEY11))
Prm_                              N2
Typ_Real
Def_*GET(rcon,_RC_SET,const,10)
Fld_6
K_FL(KEY4+KEY22+(KEY10*KEY11))
Prm_                              N3
Typ_Real
Def_*GET(rcon,_RC_SET,const,11)
Fld_7
K_FL(KEY4+KEY22+(KEY10*KEY11))
Prm_                              N4
Typ_Real
Def_*GET(rcon,_RC_SET,const,12)
!
Cmd_)*SET,_vz(1)
K_CM(KEY21+(KEY10*KEY11))
Fld_2
Prm_Angular velocity           An(I)
  Typ_Lis_OptionB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
Cmd_)*CSET,7,8
K_CM(KEY21+(KEY10*KEY11))
 Fld_2
  Prm_   If Constant value then:
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,7)
Fld_3
Prm_Angular velocity           An(J)
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
!
Cmd_)*SET,_vz(2)
K_CM(key4+KEY21+(KEY10*KEY11))
Fld_2
Prm_Slip factor           SLIPFAC(I)
  Typ_Lis_OptionB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
Cmd_)*CSET,9,10
 K_CM(key4+KEY21+(KEY10*KEY11))
 Fld_2
  Prm_   If Constant value then:
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,9)
Fld_3
Prm_Slip factor           SLIPFAC(J)
Typ_Real
Def_*GET(rcon,_RC_SET,const,10)
!
Cmd_)*CSET,101,106
Fld_2
K_FL(KEY10*KEY12)
Prm_Pump Pressure                  P
Typ_Real
Def_*GET(rcon,_RC_SET,const,13)
Fld_3
K_FL(KEY61+(KEY10*KEY12))
Prm_Conductance coefficient       Cr
Typ_Real
Def_*GET(rcon,_RC_SET,const,14)
Fld_3
K_FL(KEY60+key8+(KEY10*KEY12))
Prm_Pipe length for flow loss     La
Typ_Real
Def_*GET(rcon,_RC_SET,const,14)
Fld_3
K_FL(KEY60+KEY8+(KEY10*KEY12))
Prm_Loss coefficient               K
Typ_Real
Def_*GET(rcon,_RC_SET,const,14)
!
Cmd_)*CSET,107,112
Fld_2
K_FL(KEY10*KEY12)
Prm_Ideal gas law constant      Rgas
Typ_Real
Def_*GET(rcon,_RC_SET,const,19)
Fld_3
K_FL(KEY10*KEY11)
Prm_Viscous damping multiplier   Vdf
Typ_Real
Def_*GET(rcon,_RC_SET,const,20)
Fld_4
K_FL(KEY10*KEY11)
Prm_Units conversion factor     Cver
Typ_Real
Def_*GET(rcon,_RC_SET,const,21)
!
Cmd_)/GO
 K_LN(KEY21+(KEY10*KEY11))
  Cal_Fnc_ZReCo2,2,EQ,1,4
  Cal_Fnc_ZReCo4,2,EQ,2,4
  Cal_Fnc_ZReCo6,2,EQ,3,4
 K_LN(key21)
  Cal_Fnc_ZReCo50
:E End_OF_Fnc_rcon_116
:! 
:N Fnc_rcon_117
:S    223,   130,    70
:T Cmd
:C )! Fnc_rcon_117
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID117
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID117'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_117
:! 
:N Fnc_rcon_118
:S    217,   127,    67
:T Cmd
:C )! Fnc_rcon_118
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for HF118
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'HF118'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_118
:! 
:N Fnc_rcon_119
:S    217,   127,    67
:T Cmd
:C )! Fnc_rcon_119
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for HF119
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'HF119'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_119
:! 
:N Fnc_rcon_12
:S   1129,   265,   842
:T Cmd
:C )! Fnc_rcon_12
:C )/NOPR
:C )KEYW,KEY31,0
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP3
:C )*IF,_z1,EQ,1,THEN
:C )KEYW,KEY31,1
:C )*ENDIF
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTAC12
:H Hlp_E_S4.12
Cmd_R
Fld_0
Typ_Lab
Prm_        *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Interface angle            THETA
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Normal stiffness              KN
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Displacement interference   INTF
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Initial element status     START
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
P_FL(FULL_ANS)
Prm_Sticking stiffness            KS
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
K_FL(KEY31)
Prm_KN reduction factor      REDFACT
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_12
:! 
:N Fnc_rcon_120
:S    217,   127,    67
:T Cmd
:C )! Fnc_rcon_120
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for HF120
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'HF120'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_120
:! 
:N Fnc_rcon_121
:S    222,   146,    69
:T Cmd
:C )! Fnc_rcon_121
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE121
:H Hlp_E_S4.121
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE121'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End
:! 
:N Fnc_rcon_122
:S    222,   146,    69
:T Cmd
:C )! Fnc_rcon_122
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID122
:H Hlp_E_S4.122
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID122'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End
:! 
:N Fnc_rcon_123
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_123
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID123
:H Hlp_E_S4.123
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID123'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_123
:! 
:N Fnc_rcon_124
:S    844,   360,   477
:T Cmd
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CIRCU124
:C )! Fnc_rcon_124
:C )/nopr
:C )*CSET,1,15
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )*IF,_z1,eq,4,then
:C )_z1=3
:C )*ENDIF
:C )*IF,_z1,eq,3,then
:C )_z1=_z1+10
:C )*ENDIF
:C )*GET,_z2,ETYP,_ET_TYPE,ATTR,KOP2
:C )_z3=_z1+_z2
:C )/go
:H Hlp_E_S4.124
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z3)
Cal_Fnc_rcon_124_0,2,eq,0
Cal_Fnc_rcon_124_1,2,eq,1
Cal_Fnc_rcon_124_2,2,eq,2
Cal_Fnc_rcon_124_3_0,2,eq,13
Cal_Fnc_rcon_124_3_1,2,eq,14
Cal_Fnc_rcon_124_3_2,2,eq,15
Cal_Fnc_rcon_124_3_3,2,eq,16
Cal_Fnc_rcon_124_3_4,2,eq,17
Cal_Fnc_rcon_124_5,2,eq,5
Cal_Fnc_rcon_124_6,2,eq,6
Cal_Fnc_rcon_124_7,2,eq,7
Cal_Fnc_rcon_124_8,2,eq,8
Cal_Fnc_rcon_124_9,2,eq,9
Cal_Fnc_rcon_124_10,2,eq,10
Cal_Fnc_rcon_124_11,2,eq,11
Cal_Fnc_rcon_124_12,2,eq,12
:E END
:! 
:N Fnc_rcon_124_0
:S    728,   157,   564
:T Command
:C )!Fnc_rcon_124_0
:A Resistor
:D Real Constant Set Number %(I)_RC_SET% for  - Resistor
:H Hlp_UI_rcon
Inp_NoApply
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,2
! Fld_0
! Typ_Lab
! Prm_Resistor
  Fld_2
   Typ_INT
   Prm_Real Constant Set No.
   Def_*PAR(_RC_SET)
  Fld_0
   Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Resistance                  RES
  Def_*get(rcon,_RC_SET,const,1)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
 Typ_INT
Prm_ID Number                    ID
 Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_1
:S    826,   160,   659
:T Command
:C )!Fnc_rcon_124_1
:A Inductor
:D Real Constant Set Number %(I)_RC_SET%, for  - Inductor  
:H Hlp_UI_rcon
Inp_NoApply
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,3
! Fld_0
! Typ_Lab
! Prm_Inductor
  Fld_2
   Typ_INT
   Prm_Real Constant Set No.
   Def_*PAR(_RC_SET)
  Fld_0
   Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Inductance                  IND
    Def_*get(rcon,_RC_SET,const,1)
 Fld_4
  Typ_REAL
  Prm_Initial Inductor Current    ILO
    Def_*get(rcon,_RC_SET,const,2)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_10
:S    728,   169,   552
:T Cmd
:C )!Fnc_rcon_124_10
:A Vltg Cntrl VS 
:D Real Constant Set Number %(I)_RC_SET%, for  - Voltg Cntrl VS 
:H Hlp_UI_rcon
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,2
!Fld_0
! Typ_Lab
! Prm_Vltg Cntrl VS
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Voltage Gain                 AV
  Def_*GET(rcon,_RC_SET,const,1)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_11
:S    748,   168,   573
:T Cmd
:C )!Fnc_rcon_124_11
:A Curr Cntrl VS 
:D Real Constant Set Number %(I)_RC_SET%, for  - Curr Cntrl VS 
:H Hlp_UI_rcon
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,2
!Fld_0
! Typ_Lab
! Prm_Current Controlled Voltage Source 
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Transresistance              RT
  Def_*GET(rcon,_RC_SET,const,1)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_12
:S    748,   168,   573
:T Cmd
:C )!Fnc_rcon_124_12
:A Curr Cntrl CS 
:D Real Constant Set Number %(I)_RC_SET%, for  - Curr Cntrl CS 
:H Hlp_UI_rcon
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,2
!Fld_0
! Typ_Lab
! Prm_Current Controlled Current Source 
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Current Gain                 AI
  Def_*GET(rcon,_RC_SET,const,1)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_2
:S    831,   162,   662
:T Command
:C )!Fnc_rcon_124_2
:A Capacitor
:D Real Constant Set Number %(I)_RC_SET%, for  - Capacitor  
:H Hlp_UI_rcon
Inp_NoApply
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,3
! Fld_0
! Typ_Lab
! Prm_Capacitor
  Fld_2
   Typ_INT
   Prm_Real Constant Set No.
   Def_*PAR(_RC_SET)
  Fld_0
   Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Capacitance                 CAP 
    Def_*get(rcon,_RC_SET,const,1)
 Fld_4
  Typ_REAL
  Prm_Initial Capacitor Voltage   VCO 
    Def_*get(rcon,_RC_SET,const,2)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_34a
:S   1168,    92,  1069
:T Command
:C )!Fnc_rcon_124_34a
:H Hlp_UI_rcon
Inp_NoApply
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,7
! Fld_0
! Typ_Lab
! Prm_Independent Current/Voltage Source - Piecewise Linear  
  Fld_2
   Typ_INT
   Prm_Real Constant Set No.
   Def_*PAR(_RC_SET)
  Fld_0
   Typ_Sep
 Fld_3
  Typ_REAL2
  Prm_Time, Volt/Curr       TIM1,VAL1 
  Def_*PAR(_z(1)),*PAR(_z(2))
 Fld_5
  Typ_REAL2
  Prm_Time, Volt/Curr       TIM2,VAL2
  Def_*PAR(_z(3)),*PAR(_z(4))
 Fld_7
  Typ_REAL2
  Prm_Time, Volt/Curr       TIM3,VAL3 
  Def_*PAR(_z(5)),*PAR(_z(6))
Cmd_)*CSET,8,13
 Fld_2
  Typ_REAL2
  Prm_Time, Volt/Curr       TIM4,VAL4
  Def_*PAR(_z(7)),*PAR(_z(8))
 Fld_4
  Typ_REAL2
  Prm_Time, Volt/Curr       TIM5,VAL5 
  Def_*PAR(_z(9)),*PAR(_z(10))
 Fld_6
  Typ_REAL2 
  Prm_Time, Volt/Curr       TIM6,VAL6
  Def_*PAR(_z(11)),*PAR(_z(12))
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_3_0
:S    887,   178,   702
:T Command
:C )!Fnc_rcon_124_3_0
:A DC/AC Harmonic 
:D Real Constant Set Number %(I)_RC_SET%, for  -ICS/IVS DC/AC Harm
:H Hlp_UI_rcon
Inp_NoApply
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,3
! Fld_0
! Typ_Lab
! Prm_Independent Current/Voltage Source - DC/AC Harmonic
  Fld_2
   Typ_INT
   Prm_Real Constant Set No.
   Def_*PAR(_RC_SET)
  Fld_0
   Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Amplitude                   AMP
    Def_*get(rcon,_RC_SET,const,1)
 Fld_4
  Typ_REAL
  Prm_Phase Angle                 PHA
    Def_*get(rcon,_RC_SET,const,2)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_3_1
:S   1214,   173,  1034
:T Cmd
:C )!Fnc_rcon_124_3_1
:A Sinusoidal 
:D Real Constant Set Number %(I)_RC_SET%, for  - ICS/IVS Sinusoidal  
:H Hlp_UI_rcon
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,7
!Fld_0
! Typ_Lab
! Prm_Independent Current/Voltage Source - Sinusoidal 
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Voltage/Current Offset    OFFST 
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_4
  Typ_REAL
  Prm_Voltage/Current Amplitude    VA
  Def_*GET(rcon,_RC_SET,const,2)
 Fld_5
  Typ_REAL
  Prm_Frequency (Hz)             FREQ
  Def_*GET(rcon,_RC_SET,const,3)
 Fld_6
  Typ_REAL
  Prm_Delay Time                   TD
  Def_*GET(rcon,_RC_SET,const,4)
 Fld_7
  Typ_REAL
  Prm_Phase Delay                 PHD
  Def_*GET(rcon,_RC_SET,const,5)
 Fld_8
  Typ_REAL 
  Prm_Exponential Decay          EXPD
  Def_*GET(rcon,_RC_SET,const,6)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_3_2
:S   1341,   162,  1172
:T Cmd
:C )!Fnc_rcon_124_3_2
:A Pulse
:D Real Constant Set Number %(I)_RC_SET%, for  - ICS/IVS Pulse  
:H Hlp_UI_rcon
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,8
!Fld_0
! Typ_Lab
! Prm_Independent Current/Voltage Source - Pulse Load
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
  Prm_Independent Current Source - Pulse Load
 Fld_3
  Typ_REAL
  Prm_Initial (Low) Volt/Curr      VL
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_4
  Typ_REAL
  Prm_Initial (High) Volt/Curr     VH
  Def_*GET(rcon,_RC_SET,const,2)
 Fld_5
  Typ_REAL
  Prm_Delay Time                   TD
  Def_*GET(rcon,_RC_SET,const,3)
 Fld_6
  Typ_REAL
  Prm_Rise Time                    TR
  Def_*GET(rcon,_RC_SET,const,4)
 Fld_7
  Typ_REAL
  Prm_Fall Time                    TF
  Def_*GET(rcon,_RC_SET,const,5)
 Fld_8
  Typ_REAL 
  Prm_Pulse Width                  TW
  Def_*GET(rcon,_RC_SET,const,6)
 Fld_9  
  Typ_REAL  
  Prm_Period                      PER
  Def_*GET(rcon,_RC_SET,const,7)
Cmd_)*CSET,16,17
 Fld_2
   Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_3_3
:S   1300,   165,  1128
:T Cmd
:C )!Fnc_rcon_124_3_3
:A Exponential
:D Real Constant Set Number %(I)_RC_SET%, for  - ICS/IVS Exp.
:H Hlp_UI_rcon
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,8
!Fld_0
! Typ_Lab
! Prm_Independent Current/Voltage Source - Exponential  
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Initial (Low) Volt/Curr      VL
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_4
  Typ_REAL
  Prm_Initial (High) Volt/Curr     VH
  Def_*GET(rcon,_RC_SET,const,2)
 Fld_5
  Typ_REAL
  Prm_Rise Time Delay             TRD 
  Def_*GET(rcon,_RC_SET,const,3)
 Fld_6
  Typ_REAL
  Prm_Rise Time-Constant          TRC
  Def_*GET(rcon,_RC_SET,const,4)
 Fld_7
  Typ_REAL
  Prm_Fall Delay Time             TFD   
  Def_*GET(rcon,_RC_SET,const,5)
 Fld_8
  Typ_REAL 
  Prm_Fall Time-Constant          TFC
  Def_*GET(rcon,_RC_SET,const,6)
 Fld_9
  Typ_REAL
  Prm_Period                      PER
  Def_*GET(rcon,_RC_SET,const,7)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_3_4
:S    355,   314,    34
:T Cmd
:C )!Fnc_rcon_124_3_4
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,12
:C )*DO,_z1,1,12,2
:C )*GET,_z(_z1),rcon,_RC_SET,const,_z1
:C )*GET,_z(_z1+1),rcon,_RC_SET,const,_z1+1
:C )*ENDDO
:C )/GO
:A Piecewise
:D Real Constant Set Number %(I)_RC_SET%, for  - ICS/IVS Piecewise 
Inp_P
Cmd_)!
Cal_Fnc_rcon_124_34a
:E END
:! 
:N Fnc_rcon_124_5
:S    783,   172,   604
:T Command
:C )!Fnc_rcon_124_5  
:A Stranded Coil 
:D Real Constant Set Number %(I)_RC_SET%, for   - Stranded Coil
:H Hlp_UI_rcon
Inp_NoApply
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,2
! Fld_0
! Typ_Lab
! Prm_Stranded Coil Current Source
  Fld_2
   Typ_INT
   Prm_Real Constant Set No.
   Def_*PAR(_RC_SET)
  Fld_0
   Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Scaling Factor             SCAL                
    Def_*get(rcon,_RC_SET,const,1)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_6
:S    748,   167,   574
:T Cmd
:C )!Fnc_rcon_124_6   
:A Mass Cond 2D  
:D Real Constant Set Number %(I)_RC_SET%, for  - Mass Cond 2D
:H Hlp_UI_rcon
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,2
!Fld_0
! Typ_Lab
! Prm_2D Massive Conductor Voltage Source
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Scaling Factor             SCAL
  Def_*GET(rcon,_RC_SET,const,1)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_7
:S    744,   163,   574
:T Cmd
:C )!Fnc_rcon_124_7
:A Mass Cond 3D 
:D Real Constant Set Number %(I)_RC_SET%, for  - Mass Cond 3D
:H Hlp_UI_rcon
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,2
!Fld_0
! Typ_Lab
! Prm_3D Massive Conductor Voltage Source
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Scaling Factor             SCAL
  Def_*GET(rcon,_RC_SET,const,1)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_8
:S    904,   166,   731
:T Cmd
:C )!Fnc_rcon_124_8
:A Mut Inductor
:D Real Constant Set Number %(I)_RC_SET%, for  - Mutual Inductor 
:H Hlp_UI_rcon
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,4
!Fld_0
! Typ_Lab
! Prm_Mutal Inductor
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Primary Inductance          ID1
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_4
  Typ_REAL
  Prm_Secondary Inductance        ID2
  Def_*GET(rcon,_RC_SET,const,2)
 Fld_5
  Typ_REAL
  Prm_Coupling Coefficient          K
  Def_*GET(rcon,_RC_SET,const,3)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_9
:S    752,   172,   573
:T Command  
:C )!Fnc_rcon_124_9
:A Vltg Cntrl CS 
:D Real Constant Set Number %(I)_RC_SET%, for  - Vltg Cntrl CS 
:H Hlp_UI_rcon
Inp_NoApply
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,2
! Fld_0
! Typ_Lab
! Prm_Vltg Cntrl CS
  Fld_2
   Typ_INT
   Prm_Real Constant Set No.
   Def_*PAR(_RC_SET)
  Fld_0
   Typ_Sep
 Fld_3
  Typ_REAL
  Prm_Transconductance             GT
    Def_*get(rcon,_RC_SET,const,1)
Cmd_)*CSET,16,17
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Typ_INT
Prm_ID Number                    ID
  Def_*GET(rcon,_RC_SET,const,16)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
Cal_Fnc_rcon_124_xx
:E END
:! 
:N Fnc_rcon_124_xx
:S    791,    95,   689
:T Command
:C )!Fnc_rcon_124_xx
:A Hidden
:D Hidden
Inp_P
! Exclude_from_paths
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Typ_Def_*CPAR(7)
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(8)
 Fld_3
  Typ_Def_*CPAR(9)
 Fld_4
  Typ_Def_*CPAR(10)
 Fld_5
  Typ_Def_*CPAR(11)
 Fld_6
  Typ_Def_*CPAR(12)
 Fld_7
  Typ_Def_*CPAR(13)
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(14)
 Fld_3
  Typ_Def_*CPAR(15)
 Fld_4
  Typ_Def_*CPAR(16)
 Fld_5
  Typ_Def_*CPAR(17)
Cmd_)/NOPR
Cmd_)*SET,_RC_SET
Cmd_)*SET,_ET_TYPE
Cmd_)RCON
Cmd_)STAT,,,, ,,,,1
K_CM(edfrmpk2)
Cmd_)KEYW,EDFRMPK1,0
Cmd_)KEYW,EDFRMPK2,0
Cmd_)/GO
:E END
:! 
:N Fnc_rcon_125
:S    307,   268,    32
:T Cmd
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CIRCU125
:C )! Fnc_rcon_125
:C )/nopr
:C )KEYW,ZENER,0
:C )*GET,_y1,ETYP,_ET_TYPE,ATTR,KOP1
:C )*IF,_y1,eq,1,then
:C )KEYW,ZENER,1
:C )*ENDIF
:C )/go
:H Hlp_E_S4.125
Inp_P
Cmd_)!
Cal_Fnc_rcon_125_0
:E END
:! 
:N Fnc_rcon_125_0
:S   1222,   194,  1021
:T Command
:C )!Fnc_rcon_125_0
:A Diod
:D Real Constant Set Number %(I)_RC_SET%, for CIRCU125
:C )/nopr
:C )*CSET,1,8
:C )/go
:H Hlp_C_R
:H Hlp_C_RMORE
Inp_NoApply
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,1
  Fld_2
   Typ_INT
   Prm_Real Constant Set No.
   Def_*PAR(_RC_SET)
Cmd_)*CSET,4,6
  Fld_0
   Typ_Sep
 Fld_2
  Typ_REAL
  Prm_Forward Resistance         RESF
  Def_*get(rcon,_RC_SET,const,4)
 Fld_3
  Typ_REAL
  Prm_Forward Voltage           VOLTF
  Def_*get(rcon,_RC_SET,const,5)
 Fld_4
  Typ_REAL
  Prm_Blocking Resistance        RESB
  Def_*get(rcon,_RC_SET,const,6)
Cmd_)*CSET,7,8
 K_CM(ZENER)
 Fld_0
  Typ_Sep
 Fld_2
  Typ_REAL
  Prm_Zener Resistance           RESZ
  Def_*GET(rcon,_RC_SET,const,7)
 Fld_3
  Typ_REAL
  Prm_Zener Voltage             VOLTZ
  Def_*GET(rcon,_RC_SET,const,8)
Cmd_)*CSET,2,3
K_CM(EDFRMPK1)
 Fld_0
  Typ_Sep
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_3
 Typ_INT
Prm_ID Number                    ID
 Def_*GET(rcon,_RC_SET,const,2)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
 Fld_2
  Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cal_Fnc_rcon_125_1
:E END
:! 
:N Fnc_rcon_125_1
:S    528,   145,   376
:T Cmd
:C )! Fnc_rcon_125_1
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for 125
:H Hlp_E_S4.125
Inp_P
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_6
  Typ_Def_*CPAR(4)
 Fld_7
  Typ_Def_*CPAR(5)
 Fld_8
  Typ_Def_*CPAR(6)
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
  Typ_Def_*CPAR(8)
!
Cmd_)/NOPR
Cmd_)*SET,_RC_SET
Cmd_)*SET,_ET_TYPE
Cmd_)RCON
Cmd_)STAT,,,, ,,,,1
K_CM(edfrmpk2)
Cmd_)KEYW,EDFRMPK1,0
Cmd_)KEYW,EDFRMPK2,0
Cmd_)/GO
:E End
:! 
:N Fnc_rcon_126
:S    274,   201,    66
:T Cmd
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for TRANS126
:C )! Fnc_rcon_126
:C )/nopr
:C )*GET,_y1,ETYP,_ET_TYPE,ATTR,KOP1
:C )/go
:H Hlp_E_S4.126
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_y1)
Cal_Fnc_rcon_126_0,2,eq,0
:E END
:! 
:N Fnc_rcon_126_0
:S   1026,   192,   827
:T Command
:C )!Fnc_rcon_126_0
:A EMT
:D Real Constant Set Number %(I)_RC_SET%, for EMT 126
:C )/nopr
:C )*CSET,1,6
:C )/go
:H Hlp_C_R
:H Hlp_C_RMORE
Inp_NoApply
Cmd_)/NOPR
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Cmd_)*CSET,1,1
  Fld_2
   Typ_INT
   Prm_Real Constant Set No.
   Def_*PAR(_RC_SET)
Cmd_)*CSET,4,6
  Fld_0
   Typ_Sep
 Fld_2
  Typ_REAL
  Prm_Initial gap               GAP
  Def_*get(rcon,_RC_SET,const,3)
 Fld_3
  Typ_REAL
  Prm_Minimal gap            GAPMIN
  Def_*get(rcon,_RC_SET,const,4)
 Fld_4
  Typ_REAL
  Prm_Gap Normal Stiffness       KN
  Def_*get(rcon,_RC_SET,const,5)
Cmd_)*CSET,2,3
K_CM(EDFRMPK1)
 Fld_0
  Typ_Sep
 Fld_2
  Typ_REAL
Prm_Graphical Offset         GOFFST
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_3
 Typ_INT
Prm_ID Number                    ID
 Def_*GET(rcon,_RC_SET,const,2)
Cmd_)KEYW,EDFRMPK2,1
K_CM(EDFRMPK1)
Cmd_)/GO
 Fld_2
  Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cal_Fnc_rcon_126_00,2,eq,0
Cal_Fnc_rcon_126_01,2,eq,1
:E END
:! 
:N Fnc_rcon_126_00
:S   1010,   151,   852
:T Cmd
:C )! Fnc_rcon_126_00
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for EMT 126
:H Hlp_E_S4.126
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
Cmd_RMORE
 Fld_0
  Typ_Lab
  Prm_Capacitance(Cap) vs. gap(x) function:
 Fld_0
  Typ_Lab
  Prm_Cap = C0/x + C1 + C2*x + C3*x**2 + C4*x**3
 Fld_2
  Prm_Eqn constant C0      C0
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,7)
 Fld_3
  Prm_Eqn constant C1      C1
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,8)
 Fld_4
  Prm_Eqn constant C2      C2
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,9)
 Fld_5
  Prm_Eqn constant C3      C3
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,10)
 Fld_6
  Prm_Eqn constant C4      C4
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,11)
!
Cmd_)/NOPR
Cmd_)*SET,_RC_SET
Cmd_)*SET,_ET_TYPE
Cmd_)RCON
Cmd_)STAT,,,, ,,,,1
K_CM(edfrmpk2)
Cmd_)KEYW,EDFRMPK1,0
Cmd_)KEYW,EDFRMPK2,0
Cmd_)/GO
:E End
:! 
:N Fnc_rcon_126_01
:S   2971,   151,  2813
:T Cmd
:C )! Fnc_rcon_126_01
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for EMT 126
:H Hlp_E_S4.126
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_0
  Typ_Lab
Prm_Capacitance-gap  curve data           GAP       CAPACITANCE
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 1
Typ_Real2
Def_*GET(rcon,_RC_SET,const,7),*GET(rcon,_RC_SET,const,8)
Fld_4
Prm_                    Data set 2
Typ_Real2
Def_*GET(rcon,_RC_SET,const,9),*GET(rcon,_RC_SET,const,10)
Fld_6
Prm_                    Data set 3
Typ_Real2
Def_*GET(rcon,_RC_SET,const,11),*GET(rcon,_RC_SET,const,12)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 4
Typ_Real2
Def_*GET(rcon,_RC_SET,const,13),*GET(rcon,_RC_SET,const,14)
Fld_4
Prm_                    Data set 5
Typ_Real2
Def_*GET(rcon,_RC_SET,const,15),*GET(rcon,_RC_SET,const,16)
Fld_6
Prm_                    Data set 6
Typ_Real2
Def_*GET(rcon,_RC_SET,const,17),*GET(rcon,_RC_SET,const,18)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 7
Typ_Real2
Def_*GET(rcon,_RC_SET,const,19),*GET(rcon,_RC_SET,const,20)
Fld_4
Prm_                    Data set 8
Typ_Real2
Def_*GET(rcon,_RC_SET,const,21),*GET(rcon,_RC_SET,const,22)
Fld_6
Prm_                    Data set 9
Typ_Real2
Def_*GET(rcon,_RC_SET,const,23),*GET(rcon,_RC_SET,const,24)
Cmd_RMORE
Fld_2
Prm_                    Data set 10
Typ_Real2
Def_*GET(rcon,_RC_SET,const,25),*GET(rcon,_RC_SET,const,26)
Fld_4
Prm_                    Data set 11
Typ_Real2
Def_*GET(rcon,_RC_SET,const,27),*GET(rcon,_RC_SET,const,28)
Fld_6
Prm_                    Data set 12
Typ_Real2
Def_*GET(rcon,_RC_SET,const,29),*GET(rcon,_RC_SET,const,30)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 13
Typ_Real2
Def_*GET(rcon,_RC_SET,const,31),*GET(rcon,_RC_SET,const,32)
Fld_4
Prm_                    Data set 14
Typ_Real2
Def_*GET(rcon,_RC_SET,const,33),*GET(rcon,_RC_SET,const,34)
Fld_6
Prm_                    Data set 15
Typ_Real2
Def_*GET(rcon,_RC_SET,const,35),*GET(rcon,_RC_SET,const,36)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 16
Typ_Real2
Def_*GET(rcon,_RC_SET,const,37),*GET(rcon,_RC_SET,const,38)
Fld_4
Prm_                    Data set 17
Typ_Real2
Def_*GET(rcon,_RC_SET,const,39),*GET(rcon,_RC_SET,const,40)
Fld_6
Prm_                    Data set 18
Typ_Real2
Def_*GET(rcon,_RC_SET,const,41),*GET(rcon,_RC_SET,const,42)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 19
Typ_Real2
Def_*GET(rcon,_RC_SET,const,43),*GET(rcon,_RC_SET,const,44)
Fld_4
Prm_                    Data set 20
Typ_Real2
Def_*GET(rcon,_RC_SET,const,45),*GET(rcon,_RC_SET,const,46)
!
Cmd_)/NOPR
Cmd_)*SET,_RC_SET
Cmd_)*SET,_ET_TYPE
Cmd_)RCON
Cmd_)STAT,,,, ,,,,1
K_CM(edfrmpk2)
Cmd_)KEYW,EDFRMPK1,0
Cmd_)KEYW,EDFRMPK2,0
Cmd_)/GO
:E End
:! 
:N Fnc_rcon_127
:S    194,   101,    70
:T Command
:C )! Fnc_rcon_127
:D Real Constants for SOLID127
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID127'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_127
:! 
:N Fnc_rcon_128
:S    194,   101,    70
:T Command
:C )! Fnc_rcon_128
:D Real Constants for SOLID128
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID128'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_128
:! 
:N Fnc_rcon_129
:S    635,   146,   466
:T Cmd
:C )! Fnc_rcon_129
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID129
:H Hlp_E_S4.129
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Radius                       RAD
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Fld_4
Prm_Center                       X,Y                                        
Typ_Real2
Def_*GET(rcon,_RC_SET,const,2),*GET(rcon,_RC_SET,const,3)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_129
:! 
:N Fnc_rcon_13
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_13
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE13
:H Hlp_E_S4.13
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE13'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_13
:! 
:N Fnc_rcon_130
:S    691,   266,   402
:T Cmd
:C )! Fnc_rcon_130
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID130
:C )/NOPR
:C )*GET,_z2,rcon,_RC_SET,CONST,2
:C )*GET,_z3,rcon,_RC_SET,CONST,3
:C )*GET,_z4,rcon,_RC_SET,CONST,4
:C )/GO
:H Hlp_E_S4.130
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Radius                       RAD
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Fld_4
Prm_Center                     X,Y,Z
Typ_Real3
Def_*PAR(_z2),*PAR(_z3),*PAR(_z4)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_130
:! 
:N Fnc_rcon_131
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_131
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL131
:H Hlp_E_S4.131
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL131'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_131
:! 
:N Fnc_rcon_132
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_132
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL132
:H Hlp_E_S4.132
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL132'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_132
:! 
:N Fnc_rcon_136
:S    913,   232,   658
:T Cmd
:C )! Fnc_rcon_136
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID136
:C )/NOPR
:C )*GET,_z5,rcon,_RC_SET,CONST,5
:C )*GET,_z6,rcon,_RC_SET,CONST,6
:C )/GO
:H Hlp_E_S4.136
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
! 
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Gap separation               GAP
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
! 
Fld_6
Prm_Ambient pressure            PAMB 
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
! 
Fld_7
Prm_Accommodation factors  ACF1,ACF2
Typ_Real2
Def_*PAR(_z5),*PAR(_z6)
!
Cmd_RMORE
!
Fld_2
Prm_Ref.pressure for free path  PREF
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
!
Fld_3
Prm_Mean free path at ref. pres. MFP
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
! 
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_136
:! 
:N Fnc_rcon_138
:S    828,   146,   659
:T Cmd
:C )! Fnc_rcon_138
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID138
:H Hlp_E_S4.138
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Lateral dimension or radius DIM1
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Fld_4
Prm_Second lateral dimension    DIM2
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
!
Fld_6
Prm_Ambient pressure            PAMB
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
!
Cmd_RMORE
!
Fld_2
Prm_Ref.pressure for free path  PREF
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
!
Fld_3
Prm_Mean free path at ref. pres. MFP
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_138
:! 
:N Fnc_rcon_139
:S   1159,   146,   990
:T Cmd
:C )! Fnc_rcon_139
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID139
:H Hlp_E_S4.139
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Gap separation               GAP 
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Fld_4
Prm_Plate area                  AREA
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
!
Fld_5
Prm_Change Rate of Plate area   DADU
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
!
Fld_6
Prm_Ambient pressure            PAMB
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
!
Cmd_RMORE
!
Fld_2
Prm_Ref.pressure for free path  PREF
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
!
Fld_3
Prm_Mean free path at ref. pres. MFP
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
!
Cmd_RMORE
K_CM(EDFRMPK1)
Fld_0
Typ_Sep
Fld_4
Prm_Graphical Offset          GOFFST
Typ_Real
Def_*GET(rcon,_RC_SET,const,15)
Fld_5
Prm_ID Number                     ID
Typ_Real
Def_*GET(rcon,_RC_SET,const,16)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
K_CM(edfrmpk1)
Cmd_)KEYW,EDFRMPK1,0
Cmd_)/GO
:E End_OF_Fnc_rcon_139
:! 
:N Fnc_rcon_14
:S   1738,   565,  1151
:T Cmd
:C )! Fnc_rcon_14
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COMBIN14
:C )/nopr
:C )KEYW,kspring,0
:C )KEYW,kdamper,0
:C )KEYW,knldamp,0
:C )KEYW,kreaset,0
:C )*DEL,_zz
:C )*get,_zz,rcon,_RC_SET,const,1
:C )*if,_zz,ne,0,then
:C )KEYW,kspring,1
:C )KEYW,kreaset,1
:C )*endif
:C )*get,_zz,rcon,_RC_SET,const,2
:C )*if,_zz,ne,0,then
:C )KEYW,kdamper,1
:C )KEYW,kreaset,1
:C )*endif
:C )*get,_zz,rcon,_RC_SET,const,3
:C )*if,_zz,ne,0,then
:C )KEYW,knldamp,1
:C )KEYW,kreaset,1
:C )*endif
:C )/go
:H Hlp_E_S4.14
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
K_FL(KSPRING*edfrmpk1*kreaset)
Prm_Spring constant                K
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
K_FL(KDAMPER*edfrmpk1*kreaset)
P_FL(FULL_ANS)
Prm_Damping coefficient          CV1
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
K_FL(KNLDAMP*edfrmpk1*kreaset)
P_FL(FULL_ANS)
Prm_Nonlinear damping coeff      CV2
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
K_FL(EDFRMPK1)
Prm_Graphical Offset          GOFFST
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
K_FL(EDFRMPK1)
Prm_ID Number                     ID
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
K_FL(KSPRING*edfrmpk1*kreaset)
Prm_Initial Length              ILEN
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!  
! Exclude_from_paths
Cmd_RMORE
Fld_2
K_FL(KSPRING*edfrmpk1*kreaset)
Prm_Initial Force               IFOR
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
K_CM(edfrmpk1)
Cmd_)KEYW,EDFRMPK1,0
Cmd_)/GO
:E End_OF_Fnc_rcon_14
:! 
:N Fnc_rcon_141
:S    223,   130,    70
:T Cmd
:C )! Fnc_rcon_141
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID141
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'FLUID141'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_141
:! 
:N Fnc_rcon_142
:S    223,   130,    70
:T Cmd
:C )! Fnc_rcon_142
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID142
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'FLUID142'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_142
:! 
:N Fnc_rcon_143
:S    223,   130,    70
:T Cmd
:C )! Fnc_rcon_143
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL143
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL143'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_143
:! 
:N Fnc_rcon_144
:S    234,   144,    67
:T Cmd
:C )! Fnc_rcon_144
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for ROM144
:H Hlp_E_S4.144
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'ROM144'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_144
:! 
:N Fnc_rcon_145
:S    194,   101,    70
:T Command
:C )! Fnc_rcon_145
:D Real Constants for PLANE145
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE145'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_145
:! 
:N Fnc_rcon_146
:S    203,   110,    70
:T Command
:C )! Fnc_rcon_146
:B Fnc_R
:D Real Constants for PLANE146
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE146'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_146
:! 
:N Fnc_rcon_147
:S    204,   111,    70
:T Command
:C )! Fnc_rcon_147
:B Fnc_R
:D Real Constants for SOLID147 
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID147'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_147
:! 
:N Fnc_rcon_148
:S    204,   111,    70
:T Command
:C )! Fnc_rcon_148
:B Fnc_R
:D Real Constants for SOLID148 
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID148'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_148
:! 
:N Fnc_rcon_15
:S    543,   127,   394
:T Cmd
:C )! Fnc_rcon_15
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID15
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Body force in global X-dir   FBX
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Body force in global Y-dir   FBY
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_15
:! 
:N Fnc_rcon_150
:S    199,   106,    70
:T Cmd
:C )! Fnc_rcon_150
:B Fnc_R
:D Real Constants for SHELL150
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL150'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_150
:! 
:N Fnc_rcon_151
:S   2310,   396,  1891
:T Cmd
:C )! Fnc_rcon_151
:C )/NOPR
:C )KEYW,TKPS,0
:C )*GET,_z99,ETYP,_ET_TYPE,ATTR,KOP3
:C )*IF,_z99,EQ,3,THEN
:C )KEYW,TKPS,1
:C )*ENDIF
:C )KEYW,ENN,0
:C )*GET,_z99,ETYP,_ET_TYPE,ATTR,KOP7
:C )*IF,_z99,EQ,1,THEN
:C )KEYW,ENN,1
:C )*ENDIF
:C )_ze=0
:C )keyw,ktabn,0
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Cmd_)/NOPR
Cmd_)*CSET,1,3
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
!
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_0
  K_FL(TKPS)
  Typ_Lab
  Prm_Real Constants for Plane with Thickness (KEYOPT(3) = 3)
 Fld_0
  K_FL(tkps)
  Typ_Lab
  Prm_Real Constants for Plane or Axisymmetric (KEYOPT(3) = 0 or 1)
 Fld_3
  Prm_Form factor                FORMF
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_4
  Prm_Stefan-Boltzmann const   SBCONST
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,2)
!
Cmd_)*CSET,14,15
 Fld_2
  Prm_Joule constant                Jc
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Prm_Gravitational constant        Gc
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,14)
!
Cmd_)*CSET,6,6
 Fld_2
  Prm_Recovery factor coefficient  NRF
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,5)
!
Cmd_)*CSET,7,13
 Fld_2
  Prm_In-plane thickness at I      TKI
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,7)
 Fld_3
  Prm_In-plane thickness at J      TKJ
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,8)
 Fld_7
 P_FL(FULL_ANS)
 K_FL(TKPS)
  Prm_Out-of-plane thickness      TKPS
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,12)
 Fld_8
 K_FL(ENN)
  Prm_Empirical coefficient        ENN
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,13)
!
Cmd_)*SET,_zu
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Angular velocity            OMEG
  Typ_Lis_OptionB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
Cmd_)*CSET,5,5
 Fld_2
  Prm_   If Constant value then:
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,4)
!
Cmd_)*SET,_zv
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Absolute fluid velocity     Vabs
  Typ_Lis_OptionB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
Cmd_)*CSET,4,4
 Fld_2
  Prm_   If Constant value then:
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,6)
Cmd_)/GO
Cal_Fnc_rcon_151c,2,EQ,1,6
Cal_Fnc_rcon_151a,2,EQ,2,6
Cal_Fnc_rcon_151b,2,EQ,3,6
:E End_OF_Fnc_rcon_151
:! 
:N Fnc_rcon_151a
:S    444,   147,   273
:T Cmd
:C )! Fnc_rcon_151a
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Cmd_)/NOPR
Cmd_)*CSET,101,101
Fld_0
  Typ_Lab
  Prm_Apply Table Loads for Angular Velocity OMEGA
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
Cmd_)!
Fld_2
 Typ_Def_*PAR(_zv)
Cmd_)/GO
Cal_Fnc_rcon_151y,2,EQ,1,3
Cal_Fnc_rcon_151d,2,EQ,2,3
Cal_Fnc_rcon_151b,2,EQ,3,3
:E End_OF_Fnc_rcon_151a
:! 
:N Fnc_rcon_151b
:S   1031,   147,   860
:T Cmd
:C )! Fnc_rcon_151b
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Cmd_)/NOPR
Cmd_)*CSET,110,110
 Fld_2
  Typ_Def_*CPAR(101)
!
Cmd_)*CSET,101,108
 Fld_0
  Typ_Lab
  K_LN(ktabn)
  Prm_[*DIM] Add New Table
  K_LN(KTABN)
  Prm_[*DIM] Add New Table for Absolute Fluid Velocity
 Fld_2
  Prm_Name of new table
  Typ_Char,32,32
 Fld_3
  Typ_Def_TABLE
 Fld_4
  Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
  Prm_NameI   Label for rows
  Typ_Char,8
 Fld_8
  Prm_NameJ   Label for cols
  Typ_Char,8
 Fld_9
  Prm_NameK   Label for planes
  Typ_Char,8
!
Cmd_)*SET,_z1
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Options for new table parameter
  Typ_Lis_RadioB
    Lis_Edit on screen,1
    Lis_Read from file,2
!
Fld_0
K_FL(KTABN)
  Typ_Sep
Fld_0
K_FL(KTABN)
  Prm_Note: Before closing this box
Fld_0
K_FL(KTABN)
  Prm_      - edit previous table
Fld_0
K_FL(KTABN)
  Prm_      and close it's widget !
!
Cmd_)/GO
!
Cal_Fnc_rcon_151i
:E End_OF_Fnc_rcon_151b
:! 
:N Fnc_rcon_151c
:S    310,   147,   139
:T Cmd
:C )! Fnc_rcon_151c
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
 Typ_Def_*PAR(_zv)
Cmd_)/GO
Cal_Fnc_rcon_151x,2,EQ,1,2
Cal_Fnc_rcon_151d,2,EQ,2,2
Cal_Fnc_rcon_151b,2,EQ,3,2
:E End_OF_Fnc_rcon_151c
:! 
:N Fnc_rcon_151d
:S    473,   147,   302
:T Cmd
:C )! Fnc_rcon_151d
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Cmd_)/NOPR
Cmd_)*CSET,110,110
 Fld_2
  Typ_Def_*CPAR(101)
!
Cmd_)*CSET,101,101
Fld_0
  Typ_Lab
  Prm_Apply Table Loads for Absolute Fluid Velocity Vabs
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
Cmd_)!
Fld_2
 Typ_Def_*PAR(_zu)
Cmd_)/GO
Cal_Fnc_rcon_151yy,2,LE,1,4
Cal_Fnc_rcon_151z,2,GT,1,4
:E End_OF_Fnc_rcon_151a
:! 
:N Fnc_rcon_151i
:S    539,   147,   368
:T Cmd
:C )! Fnc_rcon_151i
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Inp_P
! Exclude_from_paths
Cmd_*DIM
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(103)
 Fld_5
  Typ_Def_*CPAR(104)
 Fld_6
  Typ_Def_*CPAR(105)
 Fld_7
  Typ_Def_*CPAR(106)
 Fld_8
  Typ_Def_*CPAR(107)
 Fld_9
  Typ_Def_*CPAR(108)
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z1)
Cmd_)/GO
Cal_Fnc_rcon_151k,2,EQ,1,3
Cal_Fnc_rcon_151j,2,EQ,2,3
:E End_OF_Fnc_rcon_151i
:! 
:N Fnc_rcon_151j
:S    343,   147,   172
:T Cmd
:C )! Fnc_rcon_151j
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Inp_NoApply
Cmd_*TREAD
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Prm_File,ext,dir Read from file
  Typ_File
 Fld_6
  Prm_Nskip  Skipped lines number
  Typ_Int
Cal_Fnc_rcon_151k
:E End_OF_Fnc_rcon_151j
:! 
:N Fnc_rcon_151k
:S    369,   196,   149
:T Cmd
:C )! Fnc_rcon_151k
:C )/NOPR
:C )_ze=_ze+1
:C )keyw,ktabn,1
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(101)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
!
Cal_Fnc_rcon_151m
:E End_OF_Fnc_rcon_151k
:! 
:N Fnc_rcon_151l
:S    317,   147,   146
:T Cmd
:C )! Fnc_rcon_151l
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Inp_P
Cmd_)!
Fld_2
 Typ_Def_*PAR(_zv)
Cal_Fnc_rcon_151y,2,EQ,1,1
Cal_Fnc_rcon_151d,2,EQ,2,1
Cal_Fnc_rcon_151b,2,EQ,3,1
Cal_Fnc_rcon_151z,2,EQ,4,1
:E End_OF_Fnc_rcon_151l
:! 
:N Fnc_rcon_151m
:S    352,   208,   120
:T Cmd
:C )! Fnc_rcon_151m
:C )/NOPR
:C )*if,_ze,ge,2,then
:C )_zv=4
:C )*endif
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Inp_P
Cmd_)!
Fld_2
 Typ_Def_*PAR(_zu)
Cal_Fnc_rcon_151yy,2,EQ,1,1
Cal_Fnc_rcon_151z,2,EQ,2,1
Cal_Fnc_rcon_151l,2,EQ,3,1
:E End_OF_Fnc_rcon_151k
:! 
:N Fnc_rcon_151x
:S    681,   147,   510
:T Cmd
:C )! Fnc_rcon_151x
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Inp_P
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Typ_Def_*CPAR(4)
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
  Typ_Def_*CPAR(8)
 Fld_7
  Typ_Def_*CPAR(12)
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
 K_FL(ENN)
  Typ_Def_*CPAR(13)
 Fld_3
  Typ_Def_*CPAR(15)
 Fld_4
  Typ_Def_*CPAR(14)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_151x
:! 
:N Fnc_rcon_151y
:S    725,   147,   554
:T Cmd
:C )! Fnc_rcon_151y
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Inp_P
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_8
  Typ_Lab
 Fld_9
  Typ_Def_*CPAR(6))
 Fld_10
  Typ_Def_*CPAR(4)
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
  Typ_Def_*CPAR(8)
 Fld_7
  Typ_Def_*CPAR(12)
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
 K_FL(ENN)
  Typ_Def_*CPAR(13)
 Fld_3
  Typ_Def_*CPAR(15)
 Fld_4
  Typ_Def_*CPAR(14)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_151y
:! 
:N Fnc_rcon_151yy
:S    727,   149,   553
:T Cmd
:C )! Fnc_rcon_151yy
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Inp_P
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Dlm_%
 Fld_9
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_10
  Typ_Lab
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
  Typ_Def_*CPAR(8)
 Fld_7
  Typ_Def_*CPAR(12)
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
 K_FL(ENN)
  Typ_Def_*CPAR(13)
 Fld_3
  Typ_Def_*CPAR(15)
 Fld_4
  Typ_Def_*CPAR(14)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_151yy
:! 
:N Fnc_rcon_151z
:S    813,   191,   598
:T Cmd
:C )! Fnc_rcon_151z
:C )/NOPR
:C )*SET,_zu
:C )*SET,_zv
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.151
Inp_P
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(110)
  Dlm_%
 Fld_8
  Typ_Lab
 Fld_9
  Typ_Def_*CPAR(6))
 Fld_10
  Dlm_%
 Fld_11
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_12
  Typ_Lab
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
  Typ_Def_*CPAR(8)
 Fld_7
  Typ_Def_*CPAR(12)
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
 K_FL(ENN)
  Typ_Def_*CPAR(13)
 Fld_3
  Typ_Def_*CPAR(15)
 Fld_4
  Typ_Def_*CPAR(14)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_151z
:! 
:N Fnc_rcon_152
:S   2078,   292,  1763
:T Cmd
:C )! Fnc_rcon_152
:C )/NOPR
:C )KEYW,ENN,0
:C )*GET,_z99,ETYP,_ET_TYPE,ATTR,KOP7
:C )*IF,_z99,EQ,1,THEN
:C )KEYW,ENN,1
:C )*ENDIF
:C )_ze=0
:C )keyw,ktabn,0
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF152
:H Hlp_E_S4.152
Cmd_)/NOPR
Cmd_)*CSET,1,3
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
!
 Fld_2
  Typ_Int
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_3
  Prm_Form factor                FORMF
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_4
  Prm_Stefan-Boltzmann const   SBCONST
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,2)
!
Cmd_)*CSET,14,15
 Fld_2
  Prm_Joule constant                Jc
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_3
  Prm_Gravitational constant        Gc
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,14)
!
Cmd_)*CSET,6,6
 Fld_2
  Prm_Recovery factor coefficient  NRF
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,5)
!
Cmd_)*CSET,7,13
 Fld_2
  Prm_Thickness at node I          TKI
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,7)
 Fld_3
  Prm_Thickness at node J          TKJ
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,8)
 Fld_4
  Prm_Thickness at node K          TKK
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,9)
 Fld_5
  Prm_Thickness at node L          TKL
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,10)
 Fld_8
 K_FL(ENN)
  Prm_Empirical coefficient        ENN
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,13)
!
Cmd_)*SET,_zu
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Angular velocity            OMEG
  Typ_Lis_OptionB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
Cmd_)*CSET,5,5
 Fld_2
  Prm_   If Constant value then:
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,4)
!
Cmd_)*SET,_zv
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Absolute fluid velocity     Vabs
  Typ_Lis_OptionB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
Cmd_)*CSET,4,4
 Fld_2
  Prm_   If Constant value then:
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,6)
Cmd_)/GO
Cal_Fnc_rcon_152c,2,EQ,1,6
Cal_Fnc_rcon_152a,2,EQ,2,6
Cal_Fnc_rcon_152b,2,EQ,3,6
:E End_OF_Fnc_rcon_152
:! 
:N Fnc_rcon_152a
:S    444,   147,   273
:T Cmd
:C )! Fnc_rcon_152a
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF152
:H Hlp_E_S4.152
Cmd_)/NOPR
Cmd_)*CSET,101,101
Fld_0
  Typ_Lab
  Prm_Apply Table Loads for Angular Velocity OMEGA
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
Cmd_)!
Fld_2
 Typ_Def_*PAR(_zv)
Cmd_)/GO
Cal_Fnc_rcon_152y,2,EQ,1,3
Cal_Fnc_rcon_152d,2,EQ,2,3
Cal_Fnc_rcon_152b,2,EQ,3,3
:E End_OF_Fnc_rcon_152a
:! 
:N Fnc_rcon_152b
:S   1031,   147,   860
:T Cmd
:C )! Fnc_rcon_152b
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF152
:H Hlp_E_S4.152
Cmd_)/NOPR
Cmd_)*CSET,110,110
 Fld_2
  Typ_Def_*CPAR(101)
!
Cmd_)*CSET,101,108
 Fld_0
  Typ_Lab
  K_LN(ktabn)
  Prm_[*DIM] Add New Table
  K_LN(KTABN)
  Prm_[*DIM] Add New Table for Absolute Fluid Velocity
 Fld_2
  Prm_Name of new table
  Typ_Char,32,32
 Fld_3
  Typ_Def_TABLE
 Fld_4
  Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
  Prm_NameI   Label for rows
  Typ_Char,8
 Fld_8
  Prm_NameJ   Label for cols
  Typ_Char,8
 Fld_9
  Prm_NameK   Label for planes
  Typ_Char,8
!
Cmd_)*SET,_z1
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Options for new table parameter
  Typ_Lis_RadioB
    Lis_Edit on screen,1
    Lis_Read from file,2
!
Fld_0
K_FL(KTABN)
  Typ_Sep
Fld_0
K_FL(KTABN)
  Prm_Note: Before closing this box
Fld_0
K_FL(KTABN)
  Prm_      - edit previous table
Fld_0
K_FL(KTABN)
  Prm_      and close it's widget !
!
Cmd_)/GO
!
Cal_Fnc_rcon_152i
:E End_OF_Fnc_rcon_152b
:! 
:N Fnc_rcon_152c
:S    310,   147,   139
:T Cmd
:C )! Fnc_rcon_152c
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF152
:H Hlp_E_S4.152
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
 Typ_Def_*PAR(_zv)
Cmd_)/GO
Cal_Fnc_rcon_152x,2,EQ,1,2
Cal_Fnc_rcon_152d,2,EQ,2,2
Cal_Fnc_rcon_152b,2,EQ,3,2
:E End_OF_Fnc_rcon_152c
:! 
:N Fnc_rcon_152d
:S    473,   147,   302
:T Cmd
:C )! Fnc_rcon_152d
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF152
:H Hlp_E_S4.152
Cmd_)/NOPR
Cmd_)*CSET,110,110
 Fld_2
  Typ_Def_*CPAR(101)
!
Cmd_)*CSET,101,101
Fld_0
  Typ_Lab
  Prm_Apply Table Loads for Absolute Fluid Velocity Vabs
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
Cmd_)!
Fld_2
 Typ_Def_*PAR(_zu)
Cmd_)/GO
Cal_Fnc_rcon_152yy,2,LE,1,4
Cal_Fnc_rcon_152z,2,GT,1,4
:E End_OF_Fnc_rcon_152d
:! 
:N Fnc_rcon_152i
:S    539,   147,   368
:T Cmd
:C )! Fnc_rcon_152i
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF152
:H Hlp_E_S4.152
Inp_P
! Exclude_from_paths
Cmd_*DIM
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(103)
 Fld_5
  Typ_Def_*CPAR(104)
 Fld_6
  Typ_Def_*CPAR(105)
 Fld_7
  Typ_Def_*CPAR(106)
 Fld_8
  Typ_Def_*CPAR(107)
 Fld_9
  Typ_Def_*CPAR(108)
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z1)
Cmd_)/GO
Cal_Fnc_rcon_152k,2,EQ,1,3
Cal_Fnc_rcon_152j,2,EQ,2,3
:E End_OF_Fnc_rcon_152i
:! 
:N Fnc_rcon_152j
:S    343,   147,   172
:T Cmd
:C )! Fnc_rcon_152j
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF152
:H Hlp_E_S4.152
Inp_NoApply
Cmd_*TREAD
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Prm_File,ext,dir Read from file
  Typ_File
 Fld_6
  Prm_Nskip  Skipped lines number
  Typ_Int
Cal_Fnc_rcon_152k
:E End_OF_Fnc_rcon_152j
:! 
:N Fnc_rcon_152k
:S    369,   196,   149
:T Cmd
:C )! Fnc_rcon_152k
:C )/NOPR
:C )_ze=_ze+1
:C )keyw,ktabn,1
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF152
:H Hlp_E_S4.152
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(101)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
!
Cal_Fnc_rcon_152m
:E End_OF_Fnc_rcon_152k
:! 
:N Fnc_rcon_152l
:S    317,   147,   146
:T Cmd
:C )! Fnc_rcon_152l
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.152
Inp_P
Cmd_)!
Fld_2
 Typ_Def_*PAR(_zv)
Cal_Fnc_rcon_152y,2,EQ,1,1
Cal_Fnc_rcon_152d,2,EQ,2,1
Cal_Fnc_rcon_152b,2,EQ,3,1
Cal_Fnc_rcon_152z,2,EQ,4,1
:E End_OF_Fnc_rcon_152l
:! 
:N Fnc_rcon_152m
:S    352,   208,   120
:T Cmd
:C )! Fnc_rcon_152m
:C )/NOPR
:C )*if,_ze,ge,2,then
:C )_zv=4
:C )*endif
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF151
:H Hlp_E_S4.152
Inp_P
Cmd_)!
Fld_2
 Typ_Def_*PAR(_zu)
Cal_Fnc_rcon_152yy,2,EQ,1,1
Cal_Fnc_rcon_152z,2,EQ,2,1
Cal_Fnc_rcon_152l,2,EQ,3,1
:E End_OF_Fnc_rcon_152k
:! 
:N Fnc_rcon_152x
:S    707,   147,   536
:T Cmd
:C )! Fnc_rcon_152x
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF152
:H Hlp_E_S4.152
Inp_P
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Typ_Def_*CPAR(4)
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
  Typ_Def_*CPAR(8)
 Fld_4
  Typ_Def_*CPAR(9)
 Fld_5
  Typ_Def_*CPAR(10)
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
 K_FL(ENN)
  Typ_Def_*CPAR(13)
 Fld_3
  Typ_Def_*CPAR(15)
 Fld_4
  Typ_Def_*CPAR(14)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_152x
:! 
:N Fnc_rcon_152y
:S    751,   147,   580
:T Cmd
:C )! Fnc_rcon_152y
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF152
:H Hlp_E_S4.152
Inp_P
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_8
  Typ_Lab
 Fld_9
  Typ_Def_*CPAR(6))
 Fld_10
  Typ_Def_*CPAR(4)
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
  Typ_Def_*CPAR(8)
 Fld_4
  Typ_Def_*CPAR(9)
 Fld_5
  Typ_Def_*CPAR(10)
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
 K_FL(ENN)
  Typ_Def_*CPAR(13)
 Fld_3
  Typ_Def_*CPAR(15)
 Fld_4
  Typ_Def_*CPAR(14)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_152y
:! 
:N Fnc_rcon_152yy
:S    753,   149,   579
:T Cmd
:C )! Fnc_rcon_152yy
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF152
:H Hlp_E_S4.152
Inp_P
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Dlm_%
 Fld_9
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_10
  Typ_Lab
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
  Typ_Def_*CPAR(8)
 Fld_4
  Typ_Def_*CPAR(9)
 Fld_5
  Typ_Def_*CPAR(10)
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
 K_FL(ENN)
  Typ_Def_*CPAR(13)
 Fld_3
  Typ_Def_*CPAR(15)
 Fld_4
  Typ_Def_*CPAR(14)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_152yy
:! 
:N Fnc_rcon_152z
:S    839,   191,   624
:T Cmd
:C )! Fnc_rcon_152z
:C )/NOPR
:C )*SET,_zu
:C )*SET,_zv
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF152
:H Hlp_E_S4.151
Inp_P
Cmd_R
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(110)
  Dlm_%
 Fld_8
  Typ_Lab
 Fld_9
  Typ_Def_*CPAR(6))
 Fld_10
  Dlm_%
 Fld_11
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_12
  Typ_Lab
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
  Typ_Def_*CPAR(8)
 Fld_4
  Typ_Def_*CPAR(9)
 Fld_5
  Typ_Def_*CPAR(10)
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
 K_FL(ENN)
  Typ_Def_*CPAR(13)
 Fld_3
  Typ_Def_*CPAR(15)
 Fld_4
  Typ_Def_*CPAR(14)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_152z
:! 
:N Fnc_rcon_153
:S   1352,   277,  1052
:T Cmd
:C )! Fnc_rcon_153
:C )/NOPR
:C )*GET,_z99,ETYP,_ET_TYPE,ATTR,KOP3
:C )*IF,_z99,EQ,3,THEN
:C )KEYW,TKPS,1
:C )*ELSE
:C )KEYW,TKPS,0
:C )*ENDIF
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF153
:H Hlp_E_S4.153
Cmd_R
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
!
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_0
  K_FL(TKPS)
  Typ_Lab
  Prm_Real Constants for Plane with Thickness (KEYOPT(3) = 3)
 Fld_0
  K_FL(tkps)
  Typ_Lab
  Prm_Real Constants for Plane or Axisymmetric (KEYOPT(3) = 0 or 1)
 Fld_6
  Prm_Foundation Stiffness        EFS
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,4)
 Fld_7
  Prm_Surface Tension             SURT
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,5)
 Fld_8
  Prm_Added mass/unit area      ADMSUA
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Prm_In-plane thickness at I      TKI
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,7)
 Fld_3
  Prm_In-plane thickness at J      TKJ
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,8)
 Fld_7
 P_FL(FULL_ANS)
 K_FL(TKPS)
  Prm_Out-of-plane thickness      TKPS
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,12)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_153
:! 
:N Fnc_rcon_154
:S   1092,   145,   924
:T Cmd
:C )! Fnc_rcon_154
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF154
:H Hlp_E_S4.154
Cmd_R
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
!
 Fld_2
  Typ_Int
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_6
  Prm_Foundation Stiffness        EFS
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,4)
 Fld_7
  Prm_Surface Tension             SURT
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,5)
 Fld_8
  Prm_Added mass/unit area      ADMSUA
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Prm_Thickness at node I          TKI
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,7)
 Fld_3
  Prm_Thickness at node J          TKJ
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,8)
 Fld_4
  Prm_Thickness at node K          TKK
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,9)
 Fld_5
  Prm_Thickness at node L          TKL
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,10)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_154
:! 
:N Fnc_rcon_155
:S    233,   142,    68
:T Cmd
:C )! Fnc_rcon_155
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOIL155
:H Hlp_E_155
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOIL155'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_155
:! 
:N Fnc_rcon_156
:S    236,   145,    68
:T Cmd
:C )! Fnc_rcon_156
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF156
:H Hlp_E_S4.156
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SURF156'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_156
:! 
:N Fnc_rcon_157
:S    812,   146,   643
:T Cmd
:C )! Fnc_rcon_157
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL157
:H Hlp_E_S4.157
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Shell thickness at node I  TK(I)
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_                at node J  TK(J)
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_                at node K  TK(K)
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_                at node L  TK(L)
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Element X-axis rotation    THETA
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_157
:! 
:N Fnc_rcon_158
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_158
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for HYPER158
:H Hlp_E_S4.158
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'HYPER158'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_158
:! 
:N Fnc_rcon_159
:S    911,   145,   743
:T Cmd
:C )! Fnc_rcon_159
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF159
:H Hlp_E_S4.159
Cmd_R
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
!
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_6
  Prm_Foundation Stiffness        EFS
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,4)
 Fld_7
  Prm_Surface Tension             SURT
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,5)
 Fld_8
  Prm_Added mass/unit area      ADMSUA
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Prm_In-plane thickness at I      TKI
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,7)
 Fld_3
  Prm_In-plane thickness at J      TKJ
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,8)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_159
:! 
:N Fnc_rcon_16
:S   1575,   141,  1412
:T Cmd
:C )! Fnc_rcon_16
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PIPE16
:H Hlp_E_S4.16
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Outside diameter              OD
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Wall thickness            TKWALL
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Stress intensity fact at I  SIFI
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Stress intensity fact at J  SIFJ
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Flexibility factor          FLEX
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Internal fluid density    DENSFL
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Ext insulation density    DENSIN
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
Prm_Insulation thickness        TKIN
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
Fld_4
Prm_Corrosion thk allowance   TKCORR
Typ_Real
Def_*GET(rcon,_RC_SET,const,9)
Fld_5
Prm_Insulation surface area   AREAIN
Typ_Real
Def_*GET(rcon,_RC_SET,const,10)
Fld_6
Prm_Pipe wall mass             MWALL
Typ_Real
Def_*GET(rcon,_RC_SET,const,11)
Fld_7
Prm_Axial pipe stiffness       STIFF
Typ_Real
Def_*GET(rcon,_RC_SET,const,12)
! Exclude_from_paths
Cmd_RMORE
Fld_2
P_FL(FULL_ANS)
Prm_Rotordynamic spin           SPIN
Typ_Real
Def_*GET(rcon,_RC_SET,const,13)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_16
:! 
:N Fnc_rcon_160
:S    459,   145,   291
:T Cmd
:C )! Fnc_rcon_160
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for LINK160
:H Hlp_E_S4.160
Cmd_R
!  
Fld_0
Typ_Lab
Prm_Element Type LINK160
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Cross-sectional area        AREA
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_160
:! 
:N Fnc_rcon_161
:S    378,   207,   164
:T Cmd
:C )! Fnc_rcon_161
:A Element 161
:C )/NOPR
:C )*DEL,_z1
:C )_z1=_RC_SET
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for BEAM161
:H Hlp_E_S4.161
Inp_NoApply
Cmd_*SET,_RC_SET
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Cal_Fnc_rcon_161x
:E END
:! 
:N Fnc_rcon_161A
:S   1841,   438,  1396
:T Cmd
:C )! Fnc_rcon_161A
:A Element 161
:C )/NOPR
:C )!   this function (for ADD option) shows scrolled data only
:C )!   This function deals with first 7 locations of real table
:C )!
:C )*VLEN,86
:C )*VGET,_z(1),RCON,_RC_SET,CONST,1,,,4
:C )!
:C )*IF,_z(193),EQ,1,THEN
:C )_z1='R'
:C )*ELSE
:C )_z1=')!'
:C )*ENDIF
:C )/GO
:H Hlp_E_S4.161
:D Real Constant Set Number %(I)_RC_SET%, for BEAM161
Inp_NoApply
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_z1)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
!
! Exclude_from_paths
Cmd_RMODIF
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_1
 Fld_4
  Prm_Shear Factor                SHRF
  Typ_Real
  Def_*PAR(_z(1))
 Fld_5
  Prm_Thickness@node 1- s dir      TS1
  Typ_Real
  Def_*PAR(_z(2))
 Fld_6
  Prm_Thickness@node 2- s dir      TS2
  Typ_Real
  Def_*PAR(_z(3))
 Fld_7
  Prm_Thickness@node 1- t dir      TT1
  Typ_Real
  Def_*PAR(_z(4))
 Fld_8
  Prm_Thickness@node 2- t dir      TT2
  Typ_Real
  Def_*PAR(_z(5))
Cmd_RMODIF
 Fld_0
 Typ_Sep
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_6
 Fld_0
  Typ_Lab
  Prm_Location of reference surface 
 Fld_4
  Prm_ Normal to s-axis NSLOC
  Typ_Lis_OptionB
  Lis_side at s=+1           ,1
  Lis_Center                 ,0
  Lis_Side at s=-1           ,-1
  Def_*PAR(_z(6))
 Fld_5
  Prm_ Normal to t-axis NTLOC
  Typ_Lis_OptionB
  Lis_side at t=+1           ,1
  Lis_Center                 ,0
  Lis_Side at t=-1           ,-1
  Def_*PAR(_z(7))
!  
!  store existing or respecified real constants 1-7 in _z(101)-_z(107)
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,,, ,,,,1
Cmd_)/NOPR
 Fld_2
  Typ_Def_*PAR(_z(199))
!  For _z(199)=3,12,15 use rcon_161E
 K_LN(KEY4)
Cal_Fnc_rcon_161E,2,EQ,3
 K_LN(KEY4)
Cal_Fnc_rcon_161E,2,EQ,12
 K_LN(KEY4)
Cal_Fnc_rcon_161E,2,EQ,15
:E End
:! 
:N Fnc_rcon_161B
:S   1656,   438,  1211
:T Cmd
:C )! Fnc_rcon_161B
:A Element 161
:C )/NOPR
:C )!   this function (for ADD option) shows scrolled data only
:C )!   This function deals with first 7 locations of real table
:C )!
:C )*VLEN,86
:C )*VGET,_z(1),RCON,_RC_SET,CONST,1,,,4
:C )!
:C )*IF,_z(193),EQ,1,THEN
:C )_z1='R'
:C )*ELSE
:C )_z1=')!'
:C )*ENDIF
:C )/GO
:H Hlp_E_S4.161
:D Real Constant Set Number %(I)_RC_SET%, for BEAM161
Inp_NoApply
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_z1)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
!
! Exclude_from_paths
Cmd_RMODIF
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_1
 Fld_4
  Prm_Shear Factor                SHRF
  Typ_Real
  Def_*PAR(_z(1))
 Fld_5
  Prm_Outer Dia@node 1             DS1
  Typ_Real
  Def_*PAR(_z(2))
 Fld_6
  Prm_Outer Dia@node 2             DS2
  Typ_Real
  Def_*PAR(_z(3))
 Fld_7
  Prm_Inner Dia@node 1             DT1
  Typ_Real
  Def_*PAR(_z(4))
 Fld_8
  Prm_Inner Dia@node 2             DT2
  Typ_Real
  Def_*PAR(_z(5))
Cmd_RMODIF
 Fld_0
 Typ_Sep
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_6
 Fld_0
  Typ_Lab
  Prm_Location of reference surface 
 Fld_4
  Prm_ Normal to s-axis NSLOC
  Typ_Lis_OptionB
  Lis_side at s=+1           ,1
  Lis_Center                 ,0
  Lis_Side at s=-1           ,-1
  Def_*PAR(_z(6))
 Fld_5
  Prm_ Normal to t-axis NTLOC
  Typ_Lis_OptionB
  Lis_side at t=+1           ,1
  Lis_Center                 ,0
  Lis_Side at t=-1           ,-1
  Def_*PAR(_z(7))
!  
!  store existing or respecified real constants 1-7 in _z(101)-_z(107)
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,,, ,,,,1
Cmd_)!
:E End
:! 
:N Fnc_rcon_161C
:S   1390,   438,   945
:T Cmd
:C )! Fnc_rcon_161C
:A Element 161
:C )/NOPR
:C )!   this function (for ADD option) shows scrolled data only
:C )!   This function deals with 1, 8-12 locations of real table
:C )!
:C )*VLEN,86
:C )*VGET,_z(1),RCON,_RC_SET,CONST,1,,,4
:C )!
:C )*IF,_z(193),EQ,1,THEN
:C )_z1='R'
:C )*ELSE
:C )_z1=')!'
:C )*ENDIF
:C )/GO
:H Hlp_E_S4.161
:D Real Constant Set Number %(I)_RC_SET%, for BEAM161
Inp_NoApply
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_z1)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
!
! Exclude_from_paths
Cmd_RMODIF
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_1
 Fld_4
  Typ_Def_*PAR(_z(1))
!
Cmd_RMODIF
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_8
 Fld_4
  Prm_Cross-sectional Area           A
  Typ_Real
  Def_*PAR(_z(8))
 Fld_5
  Prm_Moment of Inertia            ISS
  Typ_Real
  Def_*PAR(_z(9))
 Fld_6
  Prm_Moment of Inertia            ITT
  Typ_Real
  Def_*PAR(_z(10))
 Fld_7
  Prm_Polar moment of inertia      IRR
  Typ_Real
  Def_*PAR(_z(11))
 Fld_8
  Prm_Shear area                    SA
  Typ_Real
  Def_*PAR(_z(12))
!  
!  store existing or respecified real constants 1-7 in _z(101)-_z(107)
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,,, ,,,,1
Cmd_)!
Cmd_)/NOPR
 Fld_2
  Typ_Def_*PAR(_z(199))
!  For _z(199)=6 use rcon_161E
 K_LN(KEY4)
Cal_Fnc_rcon_161E,2,EQ,6
:E End
:! 
:N Fnc_rcon_161E
:S   1215,   374,   834
:T Cmd
:C )! Fnc_rcon_161E
:A Element 161
:C )/NOPR
:C )!  This function will add real constants 
:C )!  for the case keyopt(4)>0 & keyopt(5)=2
:C )!  items NIP,RA and ICST (18,19&20) area added
:C )!
:C )*VLEN,86
:C )*VGET,_z(1),RCON,_RC_SET,CONST,1,,,4
:C )/GO
:H Hlp_E_S4.161
:D Real Constant Set Number %(I)_RC_SET%, for BEAM161
Inp_NoApply
Cmd_)!
! Exclude_from_paths
Cmd_RMODIF
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Beam cross-section parameters
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_13
 Fld_4
  Prm_No. of int. pts             NIP
  Typ_Int
  Def_*PAR(_z(13))
 Fld_5
  Prm_Relative Area                RA
  Typ_Real
  Def_*PAR(_z(14))
 Fld_6
  Prm_Std.section type
  Typ_Lis_OptionB
  Lis_Non-Stndard(def)             ,0
  Lis_W-Section                    ,1
  Lis_C-Section                    ,2
  Lis_Angle Section                ,3
  Lis_T-Section                    ,4
  Lis_Rectangular tube             ,5
  Lis_Z-Section                    ,6
  Lis_Trapezoidal                  ,7
  Def_*PAR(_z(15))
!  
! Always to go to 161F. In 161F check _z(15) and _z(13)
Cal_Fnc_rcon_161F
:E END
:! 
:N Fnc_rcon_161F
:S    607,   525,    75
:T Cmd
:C )! Fnc_rcon_161F
:A Element 161
:C )/NOPR
:C )!  This function will add real constants 
:C )!  for the case keyopt(4)>0 & keyopt(5)=2
:C )!  and ICST>0
:C )*VLEN,86
:C )*VGET,_z(1),RCON,_RC_SET,CONST,1,,,4
:C )*IF,_z(15),GT,0,THEN
:C )KEYW,KEY15,1
:C )KEYW,KEY13,0
:C )*ELSE
:C )KEYW,KEY15,0
:C )*IF,_z(13),GT,0,THEN
:C )KEYW,KEY13,1
:C )*ELSE
:C )KEYW,13,0
:C )*ENDIF
:C )*ENDIF
:C )!
:K #(KEY13*KEY15)
:H Hlp_E_S4.161
:D Real Constant Set Number %(I)_RC_SET%, for BEAM161
Inp_P
Cmd_)!
 K_LN(KEY15)
Cal_Fnc_rcon_161G
 K_LN(KEY13)
Cal_Fnc_rcon_161H
:E End
:! 
:N Fnc_rcon_161G
:S   1262,   318,   937
:T Cmd
:C )! Fnc_rcon_161G
:A Element 161
:C )/NOPR
:C )!  This function will add real constants 
:C )!  for the case keyopt(4)>0 & keyopt(5)=2
:C )!  and ICST>0 and will zero out NIP and RA
:C )!
:C )/GOPR
:H Hlp_E_S4.161
:D Real Constant Set Number %(I)_RC_SET%, for BEAM161
Inp_NoApply
! Exclude_from_paths
Cmd_RMODIF
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Beam cross-section parameters
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_16
 Fld_4
  Prm_Flange width                  W
  Typ_Int
  Def_*PAR(_z(16))
 Fld_5
  Prm_Flange thickness             TF
  Typ_Real
  Def_*PAR(_z(17))
 Fld_6
  Prm_Section Depth                 D
  Typ_Real
  Def_*PAR(_z(18))
 Fld_7
  Prm_Web Thickness                TW
  Typ_Real
  Def_*PAR(_z(19))
 Fld_8
  Prm_s ref. location            SREF
  Typ_Real
  Def_*PAR(_z(20))
 Fld_9
  Prm_t ref. location            TREF
  Typ_Real
  Def_*PAR(_z(21))
!  
! make NIP and RA equal zero for this case
Cmd_RMODIF
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_13
 Fld_4
  Typ_Def_0
Cmd_RMODIF
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_14
 Fld_4
  Typ_Def_0
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,,, ,,,,1
Cmd_)!
:E End
:! 
:N Fnc_rcon_161H
:S    660,   615,    38
:T Cmd
:C )! Fnc_rcon_161H
:A Element 161
:C )/NOPR
:C )!  This function will add real constants 
:C )!  for the case keyopt(4)>0 & keyopt(5)=2
:C )!  and if ICST=0 and NIP>0
:C )!
:C )*IF,_z(13),GT,20,THEN
:C )_z(13)=20
:C )*ENDIF
:C )_z4=_z(13)-10.0
:C )*IF,_z4,GT,0,THEN
:C )KEYW,KEY99,1
:C )*ELSE
:C )KEYW,KEY99,0
:C )*ENDIF
:C )*DEL,_z2
:C )*DEL,_z3
:C )*DO,_z2,1,20,1
:C )_z3=(_z2-1)*3+22
:C )*IF,_z2,LE,_z(13),THEN
:C )KEYW,KEY%_z3%,1
:C )*ELSE
:C )KEYW,KEY%_z3%,0
:C )*ENDIF
:C )*ENDDO
:C )/GOPR
:H Hlp_E_S4.161
:D Real Constant Set Number %(I)_RC_SET%, for BEAM161
Inp_P
Cmd_)/NOPR
!
Cal_Fnc_rcon_161H2
:E End
:! 
:N Fnc_rcon_161H2
:S   2289,   304,  1978
:T Cmd
:C )! Fnc_rcon_161H2
:A Element 161
:C )/NOPR
:C )!  This function will add real constants 
:C )!  for the case keyopt(4)>0 & keyopt(5)=2
:C )!  and if ICST=0 and NIP>0
:C )!
:C )/GOPR
:H Hlp_E_S4.161
:D Real Constant Set Number %(I)_RC_SET%, for BEAM161
Inp_NoApply
Cmd_)!
! Exclude_from_paths
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_User defined integration points for arbitrary section
 Fld_0
  Typ_Lab
  Prm_ S location, T location, Weight factor
 Fld_0
  Typ_Lab
  Prm_                                    s(i)           t(i)          wf(i)
!
Cmd_RMODIF
K_CM(KEY22)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_22
 Fld_4
 K_FL(KEY22)
  Prm_    Integration  Pt# 1
  Typ_Real3
  Def_*PAR(_z(22)),*PAR(_z(23)),*PAR(_z(24))
 Fld_7
 K_FL(KEY25)
  Prm_    Integration  Pt# 2
  Typ_Real3
  Def_*PAR(_z(25)),*PAR(_z(26)),*PAR(_z(27))
!
Cmd_RMODIF
K_CM(KEY28)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_28
 Fld_4
 K_FL(KEY28)
  Prm_    Integration  Pt# 3
  Typ_Real3
  Def_*PAR(_z(28)),*PAR(_z(29)),*PAR(_z(30))
 Fld_7
 K_FL(KEY31)
  Prm_    Integration  Pt# 4
  Typ_Real3
  Def_*PAR(_z(31)),*PAR(_z(32)),*PAR(_z(33))
!
Cmd_RMODIF
K_CM(KEY34)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_34
 Fld_4
 K_FL(KEY34)
  Prm_    Integration  Pt# 5
  Typ_Real3
  Def_*PAR(_z(34)),*PAR(_z(35)),*PAR(_z(36))
 Fld_7
 K_FL(KEY37)
  Prm_    Integration  Pt# 6
  Typ_Real3
  Def_*PAR(_z(37)),*PAR(_z(38)),*PAR(_z(39))
!
Cmd_RMODIF
K_CM(KEY40)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_40
 Fld_4
 K_FL(KEY40)
  Prm_    Integration  Pt# 7
  Typ_Real3
  Def_*PAR(_z(40)),*PAR(_z(41)),*PAR(_z(42))
 Fld_7
 K_FL(KEY43)
  Prm_    Integration  Pt# 8
  Typ_Real3
  Def_*PAR(_z(43)),*PAR(_z(44)),*PAR(_z(45))
!
Cmd_RMODIF
K_CM(KEY46)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_46
 Fld_4
 K_FL(KEY46)
  Prm_    Integration  Pt# 9
  Typ_Real3
  Def_*PAR(_z(46)),*PAR(_z(47)),*PAR(_z(48))
 Fld_7
 K_FL(KEY49)
  Prm_    Integration  Pt# 10
  Typ_Real3
  Def_*PAR(_z(49)),*PAR(_z(50)),*PAR(_z(51))
!
Fld_0
 Typ_Sep
Fld_0
 K_FL(KEY99)
 Typ_Lab
 Prm_Press <OK> to fill in next %(I)_z4% integration points
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,,, ,,,,1
Cmd_)!
K_LN(KEY99)
Cal_Fnc_rcon_161I
:E End
:! 
:N Fnc_rcon_161I
:S   2116,   257,  1852
:T Cmd
:C )! Fnc_rcon_161I
:A Element 161
:C )/NOPR
:C )!  This function will add real constants 
:C )!  for int. pts 11-20 if any.
:C )!
:C )/GO
:H Hlp_E_S4.161
:D Real Constant Set Number %(I)_RC_SET%, for BEAM161
Inp_NoApply
Cmd_)!
! Exclude_from_paths
Cmd_RMODIF
K_CM(KEY52)
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_User defined integration points for arbitrary section
 Fld_0
  Typ_Lab
  Prm_ S location, T location, Weight factor
 Fld_0
  Typ_Lab
  Prm_                                    s(i)           t(i)          wf(i)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_52
 Fld_4
 K_FL(KEY52)
  Prm_    Integration  Pt# 11
  Typ_Real3
  Def_*PAR(_z(52)),*PAR(_z(53)),*PAR(_z(54))
 Fld_7
 K_FL(KEY55)
  Prm_    Integration  Pt# 12
  Typ_Real3
  Def_*PAR(_z(55)),*PAR(_z(56)),*PAR(_z(57))
!
Cmd_RMODIF
K_CM(KEY58)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_58
 Fld_4
 K_FL(KEY58)
  Prm_    Integration  Pt# 13
  Typ_Real3
  Def_*PAR(_z(58)),*PAR(_z(59)),*PAR(_z(60))
 Fld_7
 K_FL(KEY61)
  Prm_    Integration  Pt# 14
  Typ_Real3
  Def_*PAR(_z(61)),*PAR(_z(62)),*PAR(_z(63))
!
Cmd_RMODIF
K_CM(KEY64)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_64
 Fld_4
 K_FL(KEY64)
  Prm_    Integration  Pt# 15
  Typ_Real3
  Def_*PAR(_z(64)),*PAR(_z(65)),*PAR(_z(66))
 Fld_7
 K_FL(KEY67)
  Prm_    Integration  Pt# 16
  Typ_Real3
  Def_*PAR(_z(67)),*PAR(_z(68)),*PAR(_z(69))
!
Cmd_RMODIF
K_CM(KEY70)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_70
 Fld_4
 K_FL(KEY70)
  Prm_    Integration  Pt# 17
  Typ_Real3
  Def_*PAR(_z(70)),*PAR(_z(71)),*PAR(_z(72))
 Fld_7
 K_FL(KEY73)
  Prm_    Integration  Pt# 18
  Typ_Real3
  Def_*PAR(_z(73)),*PAR(_z(74)),*PAR(_z(75))
!
Cmd_RMODIF
K_CM(KEY76)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_76
 Fld_4
 K_FL(KEY76)
  Prm_    Integration  Pt# 19
  Typ_Real3
  Def_*PAR(_z(76)),*PAR(_z(77)),*PAR(_z(78))
 Fld_7
 K_FL(KEY79)
  Prm_    Integration  Pt# 20
  Typ_Real3
  Def_*PAR(_z(79)),*PAR(_z(80)),*PAR(_z(81))
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,,, ,,,,1
Cmd_)!
:E End
:! 
:N Fnc_rcon_161x
:S   1716,  1238,   471
:T Cmd
:C )! Fnc_rcon_161x
:A Element 161
:C )/NOPR
:C )*DEL,_z(1)
:C )*DEL,_z1
:C )*DEL,_z2
:C )*DEL,_z3
:C )*DEL,_z4
:C )*DEL,_z5
:C )*DEL,_z6
:C )*DEL,_z7
:C )*DEL,_z8
:C )*DEL,_z9
:C )*DIM,_z,,200
:C )!  _z(193)=0, for EDIT mode:  _z(193)=1, for ADD mode
:C )_z(200) = 0
:C )*GET,_z(191),ACTIVE,,KEYWORD,,RC_ADD
:C )*GET,_z(192),ACTIVE,,KEYWORD,,RC_EDIT
:C )*IF,_z(191),EQ,1,THEN
:C )*IF,_z(192),EQ,0,THEN
:C )_z(193) = 1
:C )*ENDIF
:C )*ENDIF
:C )_zz=rlinqr(_RC_SET,1)
:C )*IF,_z(193),EQ,0,THEN
:C )*IF,_zz,EQ,0,THEN
:C )_z(193) = 1
:C )*ENDIF
:C )*ENDIF
:C )!   store value of KEYOPT(1) in _z(151)
:C )*GET,_z(151),ETYP,_ET_TYPE,ATTR,KOP1
:C )!   store value of KEYOPT(4) in _z(154)
:C )*GET,_z(154),ETYP,_ET_TYPE,ATTR,KOP4
:C )!   store value of KEYOPT(5) in _z(155)
:C )*GET,_z(155),ETYP,_ET_TYPE,ATTR,KOP5
:C )! set up keyword 'key4'
:C )! 'key4' will be true if keyopt(4)>0
:C )! 'key4' will be false otherwise
:C )*IF,_z(154),GT,0,THEN
:C )KEYW,KEY4,1
:C )*ELSE
:C )KEYW,KEY4,0
:C )*ENDIF
:C )! _z(199) stores an index based on keyopts 1 and 5
:C )! _z(199)=3,6,12,15,and 18 have keyopt(5)=2
:C )_z(199)=3*_z(151)+_z(155)-2
:C )/GO
:D Real Constant Set Number %(I)_RC_SET%, for BEAM161
Inp_P
Cmd_)/NOPR
 Fld_2
  Typ_Def_*PAR(_z(199))
!  For _z(199)=1,3,10,12,13,15 use rcon_161A
!  For _z(199)=2,11,14 use rcon_161B
!  For _z(199)=4,5,6 use rcon_161C
Cal_Fnc_rcon_161A,2,EQ,1
Cal_Fnc_rcon_161A,2,EQ,3
Cal_Fnc_rcon_161A,2,EQ,10
Cal_Fnc_rcon_161A,2,EQ,12
Cal_Fnc_rcon_161A,2,EQ,13
Cal_Fnc_rcon_161A,2,EQ,15
Cal_Fnc_rcon_161B,2,EQ,2
Cal_Fnc_rcon_161B,2,EQ,11
Cal_Fnc_rcon_161B,2,EQ,14
Cal_Fnc_rcon_161C,2,EQ,4
Cal_Fnc_rcon_161C,2,EQ,5
Cal_Fnc_rcon_161C,2,EQ,6
:E End
:! 
:N Fnc_rcon_162
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_162
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE162
:H Hlp_E_S4.162
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE162'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_162
:! 
:N Fnc_rcon_163
:S    384,   213,   164
:T Cmd
:C )! Fnc_rcon_163
:A Element 163
:C )/NOPR
:C )*DEL,_z1
:C )_z1=_RC_SET
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
:H Hlp_E_S4.163
Inp_NoApply
Cmd_*SET,_RC_SET
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Cal_Fnc_rcon_163x
:E END
:! 
:N Fnc_rcon_163A
:S   1604,   445,  1152
:T Cmd
:C )! Fnc_rcon_163A
:A Element 163
:C )/NOPR
:C )!   this function (for ADD option) shows scrolled data only
:C )!   This function deals with first 7 locations of real table
:C )!
:C )*VLEN,504
:C )*VGET,_z(1),RCON,_RC_SET,CONST,1,,,4
:C )!
:C )*IF,_z(593),EQ,1,THEN
:C )_z1='R'
:C )*ELSE
:C )_z1=')!'
:C )*ENDIF
:C )/GO
:H Hlp_E_S4.163
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_NoApply
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_z1)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
!
! Exclude_from_paths
Cmd_RMODIF
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_1
 Fld_4
  Prm_Shear Factor                SHRF
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_5
  Prm_No. of integration pts.      NIP
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,2)
 Fld_6
  Prm_Thickness at node 1           T1
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,3)
 Fld_7
  Prm_Thickness at node 2           T2
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,4)
 Fld_8
  Prm_Thickness at node 3           T3
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,5)
 Fld_9
  Prm_Thickness at node 4           T4
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,6)
Cmd_RMODIF
K_CM(KEY551)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_7
 Fld_4
 K_FL(KEY551)
  Prm_Ref. surface location       NLOC
  Typ_Lis_OptionB
  Lis_Top surface                , 1
  Lis_Mid surface                , 0
  Lis_Bottom Surface             ,-1
  Def_*GET(rcon,_RC_SET,const,7)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,,, ,,,,1
Cmd_)/NOPR
Cal_Fnc_rcon_163C
:E End
:! 
:N Fnc_rcon_163B
:S   1140,  1089,    44
:T Cmd
:C )! Fnc_rcon_163B
:A Element 163
:C )/NOPR
:C )! This will put in the material angles if this is a
:C )! composite shell (keyopt(3)=1) or key3 is true.
:C )!
:C )*GET,_z(2),rcon,_RC_SET,const,2
:C )*IF,_z(2),LE,0,THEN
:C )KEYW,KEY99,1
:C )*ELSE
:C )KEYW,KEY99,0
:C )*ENDIF
:C )!
:C )*IF,_z(2),GT,364,THEN
:C )_z(2)=364
:C )*ENDIF
:C )_z(514)=0              ! this is the counter of no.of screens
:C )_z(505)=8              ! Location no on RMODIF
:C )_z(506)=1              ! Int. point number
:C )!
:C )!determine how many screens will be required (30 per screen)
:C )! The no. of screens is stored in _z(513)
:C )! The no. of rows to show in the last screen in _z(508)
:C )_z(512)=MOD(_z(2),30)
:C )_z(507)=MOD(_z(512),3)
:C )*IF,_z(507),EQ,0,THEN
:C )_z(508)=_z(512)/3
:C )*ELSE
:C )_z(508)=((_z(512)-_z(507))/3)+1
:C )*ENDIF
:C )!
:C )*IF,_z(512),EQ,0,THEN
:C )_z(513)=_z(2)/30
:C )_z(508)=10
:C )*ELSE
:C )_z(513)=((_z(2)-_z(512))/30)+1
:C )*ENDIF
:C )/GOPR
:H Hlp_E_S4.163
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_P
Cmd_)!
K_LN(key99)
Cal_Fnc_rcon_163B1
:E End
:! 
:N Fnc_rcon_163B1
:S    648,   567,    74
:T Cmd
:C )! Fnc_rcon_163B1
:A Element 163
:C )/NOPR
:C )!
:C )_z(514)=_z(514)+1
:C )*IF,_z(514),LT,_z(513),THEN
:C )KEYW,KEY11,1
:C )*DO,_z1,1,10,1
:C )KEYW,KEY%_z1%,1
:C )*ENDDO
:C )*ELSEIF,_z(514),EQ,_z(513)
:C )KEYW,KEY11,1
:C )*DO,_z1,1,10,1
:C )*IF,_z1,LE,_z(508),THEN
:C )KEYW,KEY%_z1%,1
:C )*ELSE
:C )KEYW,KEY%_z1%,0
:C )*ENDIF
:C )*ENDDO
:C )*ELSE
:C )KEYW,KEY11,0
:C )*DO,_z1,1,10,1
:C )KEYW,KEY%_z1%,0
:C )*ENDDO
:C )*ENDIF
:C )!
:C )/GO
:H Hlp_E_S4.163
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_P
Cmd_)!
K_LN(KEY11)
Cal_Fnc_rcon_163B2
K_LN(key11)
Cal_Fnc_rcon_163C
:E End
:! 
:N Fnc_rcon_163B2
:S   2648,   290,  2351
:T Cmd
:C )! Fnc_rcon_163B2
:A Element 163
:C )/NOPR
:C )! This will put in the material angles if this is a
:C )! composite shell (keyopt(3)=1) or key3 is true.
:C )/GOPR
:H Hlp_E_S4.163
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_NoApply
Cmd_)!
Cmd_RMODIF
K_CM(KEY1)
 Fld_0
  Typ_Lab
  Prm_    
 Fld_0
  Typ_Lab
  Prm_Specify material angles (Beta(i)) at integration points 
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505))
 Fld_4
 K_FL(KEY1)
  Prm_Integration Points %(I)_z(506)%, %(I)_z(506)+1%, %(I)_z(506)+2%
  Typ_Real3
  Def_*PAR(_z(_z(505))),*PAR(_z(_z(505)+4)),*PAR(_z(_z(505)+8))
 Fld_7
 K_FL(KEY2)
  Prm_Integration Points %(I)_z(506)+3%, %(I)_z(506)+4%, %(I)_z(506)+5%
  Typ_Real3
  Def_*PAR(_z(_z(505)+12)),*PAR(_z(_z(505)+16)),*PAR(_z(_z(505)+20))
!
Cmd_RMODIF
K_CM(KEY3)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+24)
 Fld_4
 K_FL(KEY3)
  Prm_Integration Points %(I)_z(506)+6%, %(I)_z(506)+7%, %(I)_z(506)+8%
  Typ_Real3
  Def_*PAR(_z(_z(505)+24)),*PAR(_z(_z(505)+28)),*PAR(_z(_z(505)+32))
 Fld_7
 K_FL(KEY4)
  Prm_Integration Points %(I)_z(506)+9%, %(I)_z(506)+10%, %(I)_z(506)+11%
  Typ_Real3
  Def_*PAR(_z(_z(505)+36)),*PAR(_z(_z(505)+40)),*PAR(_z(_z(505)+44))
!
Cmd_RMODIF
K_CM(KEY5)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+48)
 Fld_4
 K_FL(KEY5)
  Prm_Integration Points %(I)_z(506)+12%, %(I)_z(506)+13%, %(I)_z(506)+14%
  Typ_Real3
  Def_*PAR(_z(_z(505)+48)),*PAR(_z(_z(505)+52)),*PAR(_z(_z(505)+56))
 Fld_7
 K_FL(KEY6)
  Prm_Integration Points %(I)_z(506)+15%, %(I)_z(506)+16%, %(I)_z(506)+17%
  Typ_Real3
  Def_*PAR(_z(_z(505)+60)),*PAR(_z(_z(505)+64)),*PAR(_z(_z(505)+68))
!
Cmd_RMODIF
K_CM(KEY7)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+72)
 Fld_4
 K_FL(KEY7)
  Prm_Integration Points %(I)_z(506)+18%, %(I)_z(506)+19%, %(I)_z(506)+20%
  Typ_Real3
  Def_*PAR(_z(_z(505)+72)),*PAR(_z(_z(505)+76)),*PAR(_z(_z(505)+80))
 Fld_7
 K_FL(KEY8)
  Prm_Integration Points %(I)_z(506)+21%, %(I)_z(506)+22%, %(I)_z(506)+23%
  Typ_Real3
  Def_*PAR(_z(_z(505)+84)),*PAR(_z(_z(505)+88)),*PAR(_z(_z(505)+92))
!
Cmd_RMODIF
K_CM(KEY9)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+96)
 Fld_4
 K_FL(KEY9)
  Prm_Integration Points %(I)_z(506)+24%, %(I)_z(506)+25%, %(I)_z(506)+26%
  Typ_Real3
  Def_*PAR(_z(_z(505)+96)),*PAR(_z(_z(505)+100)),*PAR(_z(_z(505)+104))
 Fld_7
 K_FL(KEY10)
  Prm_Integration Points %(I)_z(506)+27%, %(I)_z(506)+28%, %(I)_z(506)+29%
  Typ_Real3
  Def_*PAR(_z(_z(505)+108)),*PAR(_z(_z(505)+112)),*PAR(_z(_z(505)+116))
!
Cmd_)!
Cal_Fnc_rcon_163B3
:E End
:! 
:N Fnc_rcon_163B3
:S    383,   344,    32
:T Cmd
:C )! Fnc_rcon_163B3
:A Element 163
:C )/NOPR
:C )! This will return to 163B2 if KEY11 (more screens) is true
:C )! This also resets parameters _z(505)&_z(506)
:C )
:C )_z(505)=_z(505)+30
:C )_z(506)=_z(506)+30
:C )/GO
:H Hlp_E_S4.163
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_P
Cmd_)!
Cal_Fnc_rcon_163B1
:E End
:! 
:N Fnc_rcon_163C
:S    657,   248,   402
:T Cmd
:C )! Fnc_rcon_163C
:A Element 163
:K (KEY554)
:C )/NOPR
:C )! This will put in real constants for keyopt(4)>0
:C )
:C )/GO
:H Hlp_E_S4.163
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_NoApply
Cmd_)!
Cmd_RMODIF
Fld_0
 Typ_Lab
 Prm_
 Fld_0
 Typ_Lab
 Prm_Spacing of integration points
 Fld_0
 Typ_Lab
 Prm_(allocates thickness associated with each integration point)
 Fld_0
 Typ_Sep
 Fld_2
 Typ_Def_*PAR(_RC_SET)
 Fld_3
 Typ_Def_8
 Fld_4
 Typ_Lis_RadioB
 Lis_Variable spacing                ,0
 Lis_Equal spacing                   ,1
 Def_*GET(rcon,_RC_SET,const,8)
Cal_Fnc_rcon_163C1
:E END
:! 
:N Fnc_rcon_163C1
:S   1317,  1260,    50
:T Cmd
:C )! Fnc_rcon_163C1
:A Element 163
:C )/NOPR
:C )! This will set up key12 (for ESOP) to see if further processing
:C )! is necessary
:C )*GET,_z(2),rcon,_RC_SET,const,2
:C )*IF,_z(2),LE,0,THEN
:C )KEYW,KEY99,1
:C )*ELSE
:C )KEYW,KEY99,0
:C )*ENDIF
:C )!
:C )*GET,_z(8),rcon,_RC_SET,const,8
:C )*IF,_z(8),LE,0,THEN
:C )KEYW,KEY8,1
:C )*ELSE
:C )KEYW,KEY8,0
:C )*ENDIF
:C )!
:C )*GET,_z(3),rcon,_RC_SET,const,3
:C )*GET,_z(4),rcon,_RC_SET,const,4
:C )*IF,_z(3),GT,0,THEN
:C )*IF,_z(4),GT,0,THEN
:C )KEYW,KEY12,1
:C )*ELSE
:C )KEYW,KEY12,0
:C )*ENDIF
:C )*ENDIF
:C )!
:C )*IF,_z(2),GT,124,THEN
:C )_z(2)=124
:C )*ENDIF
:C )_z(514)=0              ! this is the counter of no.of screens
:C )_z(505)=9              ! Location no on RMODIF
:C )_z(506)=1              ! Int. point number
:C )!
:C )!determine how many screens will be required (20 per screen)
:C )! The no. of screens is stored in _z(513)
:C )! The no. of rows to show in the last screen in _z(508)
:C )_z(512)=MOD(_z(2),5)
:C )_z(508)=_z(512)
:C )!
:C )*IF,_z(512),EQ,0,THEN
:C )_z(513)=_z(2)/5
:C )_z(508)=10
:C )*ELSE
:C )_z(513)=((_z(2)-_z(512))/5)+1
:C )*ENDIF
:C )/GOPR
:H Hlp_E_S4.163
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_P
Cmd_)!
K_LN(key99+KEY12)
Cal_Fnc_rcon_163C2
:E End
:! 
:N Fnc_rcon_163C2
:S    714,   564,   143
:T Cmd
:C )! Fnc_rcon_163C2
:A Element 163
:C )/NOPR
:C )!
:C )_z(514)=_z(514)+1
:C )*IF,_z(514),LT,_z(513),THEN
:C )KEYW,KEY11,1
:C )*DO,_z1,1,5,1
:C )KEYW,KEY%_z1%,1
:C )*ENDDO
:C )*ELSEIF,_z(514),EQ,_z(513)
:C )KEYW,KEY11,1
:C )*DO,_z1,1,5,1
:C )*IF,_z1,LE,_z(508),THEN
:C )KEYW,KEY%_z1%,1
:C )*ELSE
:C )KEYW,KEY%_z1%,0
:C )*ENDIF
:C )*ENDDO
:C )*ELSE
:C )KEYW,KEY11,0
:C )*DO,_z1,1,5,1
:C )KEYW,KEY%_z1%,0
:C )*ENDDO
:C )*ENDIF
:C )!
:C )/GO
:H Hlp_E_S4.163
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_P
Cmd_)!
K_LN(KEY11+key553+KEY8)
Cal_Fnc_rcon_163C3A
K_LN(KEY11+KEY553+KEY8)
Cal_Fnc_rcon_163C3
K_LN(KEY11+KEY553+key8)
Cal_Fnc_rcon_163C4
:E End
:! 
:N Fnc_rcon_163C3
:S   1979,   290,  1682
:T Cmd
:C )! Fnc_rcon_163C3
:A Element 163
:C )/NOPR
:C )! This will put in the material angles if this is a
:C )! composite shell (keyopt(3)=1) or key3 is true.
:C )/GOPR
:H Hlp_E_S4.163
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_NoApply
Cmd_)!
Cmd_RMODIF
K_CM(KEY1)
 Fld_0
  Typ_Lab
  Prm_    
 Fld_0
  Typ_Lab
  Prm_Specify material angle, coordinate, weight factor and material ID
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505))
 Fld_4
  Prm_Integration Point %(I)_z(506)%  beta(i)
  Typ_Real
  Def_*PAR(_z(_z(505)))
 Fld_5
  Prm_s(i)       wf(i)       MAT(i)
  Typ_Real3
  Def_*PAR(_z(_z(505)+1)),*PAR(_z(_z(505)+2)),*PAR(_z(_z(505)+3))
Cmd_RMODIF
K_CM(KEY2)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+4)
 Fld_4
  Prm_Integration Point %(I)_z(506)+1%  beta(i)
  Typ_Real
  Def_*PAR(_z(_z(505)+4))
 Fld_5
  Prm_s(i)       wf(i)       MAT(i)
  Typ_Real3
  Def_*PAR(_z(_z(505)+5)),*PAR(_z(_z(505)+6)),*PAR(_z(_z(505)+7))
Cmd_RMODIF
K_CM(KEY3)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+8)
 Fld_4
  Prm_Integration Point %(I)_z(506)+2%  beta(i)
  Typ_Real
  Def_*PAR(_z(_z(505)+8))
 Fld_5
  Prm_s(i)       wf(i)       MAT(i)
  Typ_Real3
  Def_*PAR(_z(_z(505)+9)),*PAR(_z(_z(505)+10)),*PAR(_z(_z(505)+11))
Cmd_RMODIF
K_CM(KEY4)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+12)
 Fld_4
  Prm_Integration Point %(I)_z(506)+3%  beta(i)
  Typ_Real
  Def_*PAR(_z(_z(505)+12))
 Fld_5
  Prm_s(i)       wf(i)       MAT(i)
  Typ_Real3
  Def_*PAR(_z(_z(505)+13)),*PAR(_z(_z(505)+14)),*PAR(_z(_z(505)+15))
Cmd_RMODIF
K_CM(KEY5)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+16)
 Fld_4
  Prm_Integration Point %(I)_z(506)+4%  beta(i)
  Typ_Real
  Def_*PAR(_z(_z(505)+16))
 Fld_5
  Prm_s(i)       wf(i)       MAT(i)
  Typ_Real3
  Def_*PAR(_z(_z(505)+17)),*PAR(_z(_z(505)+18)),*PAR(_z(_z(505)+19))
!
Cmd_)!
Cal_Fnc_rcon_163C5
:E End
:! 
:N Fnc_rcon_163C3A
:S   1750,   288,  1455
:T Cmd
:C )! Fnc_rcon_163C3A
:A Element 163
:C )/NOPR
:C )! This will put in the material angles if this is a
:C )! non composite shell with variable spacing.
:C )/GOPR
:H Hlp_E_S4.163
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_NoApply
Cmd_)!
Cmd_RMODIF
K_CM(KEY1)
 Fld_0
  Typ_Lab
  Prm_    
 Fld_0
  Typ_Lab
  Prm_Specify coordinate, weight factor and material ID
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505))
 Fld_0
  Typ_Lab
  Prm_Integration Point %(I)_z(506)%  
 Fld_4
  Prm_s(i)       wf(i)       MAT(i)
  Typ_Real3
  Def_*PAR(_z(_z(505)+1)),*PAR(_z(_z(505)+2)),*PAR(_z(_z(505)+3))
Cmd_RMODIF
K_CM(KEY2)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+4)
 Fld_0
  Prm_Integration Point %(I)_z(506)+1%  
 Fld_4
  Prm_s(i)       wf(i)       MAT(i)
  Typ_Real3
  Def_*PAR(_z(_z(505)+5)),*PAR(_z(_z(505)+6)),*PAR(_z(_z(505)+7))
Cmd_RMODIF
K_CM(KEY3)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+8)
 Fld_0
  Prm_Integration Point %(I)_z(506)+2%  
 Fld_4
  Prm_s(i)       wf(i)       MAT(i)
  Typ_Real3
  Def_*PAR(_z(_z(505)+9)),*PAR(_z(_z(505)+10)),*PAR(_z(_z(505)+11))
Cmd_RMODIF
K_CM(KEY4)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+12)
 Fld_0
  Prm_Integration Point %(I)_z(506)+3% 
 Fld_4
  Prm_s(i)       wf(i)       MAT(i)
  Typ_Real3
  Def_*PAR(_z(_z(505)+13)),*PAR(_z(_z(505)+14)),*PAR(_z(_z(505)+15))
Cmd_RMODIF
K_CM(KEY5)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+16)
 Fld_0
  Prm_Integration Point %(I)_z(506)+4%  
 Fld_4
  Prm_s(i)       wf(i)       MAT(i)
  Typ_Real3
  Def_*PAR(_z(_z(505)+17)),*PAR(_z(_z(505)+18)),*PAR(_z(_z(505)+19))
!
Cmd_)!
Cal_Fnc_rcon_163C5
:E End
:! 
:N Fnc_rcon_163C4
:S   1292,   259,  1026
:T Cmd
:C )! Fnc_rcon_163C4
:A Element 163
:C )/NOPR
:C )! This will put in the material angles if keyopt(3)>0, with equal spacing
:C )/GOPR
:H Hlp_E_S4.163
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_NoApply
Cmd_)!
Cmd_RMODIF
K_CM(KEY1)
 Fld_0
  Typ_Lab
  Prm_    
 Fld_0
  Typ_Lab
  Prm_Specify material angle
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505))
 Fld_4
  Prm_Integration Point %(I)_z(506)%  beta(i)
  Typ_Real
  Def_*PAR(_z(_z(505)))
Cmd_RMODIF
K_CM(KEY2)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+4)
 Fld_4
  Prm_Integration Point %(I)_z(506)+1%  beta(i)
  Typ_Real
  Def_*PAR(_z(_z(505)+4))
Cmd_RMODIF
K_CM(KEY3)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+8)
 Fld_4
  Prm_Integration Point %(I)_z(506)+2%  beta(i)
  Typ_Real
  Def_*PAR(_z(_z(505)+8))
Cmd_RMODIF
K_CM(KEY4)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+12)
 Fld_4
  Prm_Integration Point %(I)_z(506)+3%  beta(i)
  Typ_Real
  Def_*PAR(_z(_z(505)+12))
Cmd_RMODIF
K_CM(KEY5)
 Fld_2
  Typ_Def_*PAR(_RC_SET)
 Fld_3
  Typ_Def_*PAR(_z(505)+16)
 Fld_4
  Prm_Integration Point %(I)_z(506)+4%  beta(i)
  Typ_Real
  Def_*PAR(_z(_z(505)+16))
!
Cmd_)!
Cal_Fnc_rcon_163C5
:E End
:! 
:N Fnc_rcon_163C5
:S    382,   343,    32
:T Cmd
:C )! Fnc_rcon_163C5
:A Element 163
:C )/NOPR
:C )! This will return to 163C2 if KEY11 (more screens) is true
:C )! This also resets parameters _z(505)&_z(506)
:C )
:C )_z(505)=_z(505)+20
:C )_z(506)=_z(506)+5
:C )/GO
:H Hlp_E_S4.163
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_P
Cmd_)!
Cal_Fnc_rcon_163C2
:E End
:! 
:N Fnc_rcon_163x
:S   1484,  1442,    35
:T Cmd
:C )! Fnc_rcon_163x
:A Element 163
:C )/NOPR
:C )*DEL,_z(1)
:C )*DEL,_z1
:C )*DEL,_z2
:C )*DEL,_z3
:C )*DEL,_z4
:C )*DEL,_z5
:C )*DEL,_z6
:C )*DEL,_z7
:C )*DEL,_z8
:C )*DEL,_z9
:C )*DIM,_z,,600
:C )!  _z(593)=0, for EDIT mode:  _z(593)=1, for ADD mode
:C )*GET,_z(591),ACTIVE,,KEYWORD,,RC_ADD
:C )*GET,_z(592),ACTIVE,,KEYWORD,,RC_EDIT
:C )*IF,_z(591),EQ,1,THEN
:C )*IF,_z(592),EQ,0,THEN
:C )_z(593) = 1
:C )*ENDIF
:C )*ENDIF
:C )_zz=rlinqr(_RC_SET,1)
:C )*IF,_z(593),EQ,0,THEN
:C )*IF,_zz,EQ,0,THEN
:C )_z(593) = 1
:C )*ENDIF
:C )*ENDIF
:C )!   store value of KEYOPT(1) in _z(551)
:C )*GET,_z(551),ETYP,_ET_TYPE,ATTR,KOP1
:C )!   store value of KEYOPT(3) in _z(553)
:C )*GET,_z(553),ETYP,_ET_TYPE,ATTR,KOP3
:C )!   store value of KEYOPT(4) in _z(554)
:C )*GET,_z(554),ETYP,_ET_TYPE,ATTR,KOP4
:C )! 'KEY551' will be true only if keyopt(1)=1,6,7,or 11
:C )*IF,_z(551),EQ,1,THEN
:C )KEYW,KEY551,1
:C )*ELSEIF,_z(551),EQ,6
:C )KEYW,KEY551,1
:C )*ELSEIF,_z(551),EQ,7
:C )KEYW,KEY551,1
:C )*ELSEIF,_z(551),EQ,11
:C )KEYW,KEY551,1
:C )*ELSE
:C )KEYW,KEY551,0
:C )*ENDIF
:C )! 'KEY554' will be true if keyopt(4)>0
:C )*IF,_z(554),GT,0,THEN
:C )KEYW,KEY554,1
:C )*ELSE
:C )KEYW,KEY554,0
:C )*ENDIF
:C )!
:C )! 'KEY553' will be true only if keyopt(3)=1
:C )*IF,_z(553),EQ,1,THEN
:C )KEYW,KEY553,1
:C )*ELSE
:C )KEYW,KEY553,0
:C )*ENDIF
:C )/GO
:D Real Constant Set Number %(I)_RC_SET%, for THIN SHELL163
Inp_P
Cmd_)/NOPR
Cal_Fnc_rcon_163A
:E End
:! 
:N Fnc_rcon_164
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_164
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID164
:H Hlp_E_S4.164
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID164'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_164
:! 
:N Fnc_rcon_165
:S    853,   146,   684
:T Cmd
:C )! Fnc_rcon_165
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COMBI165
:H Hlp_E_S4.165
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Dyn. Magnification factor   KD
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Test velocity               V0
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Clearance                   CL
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Failure deflection          FD
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Twist defl. limit(comprsn)  CDL
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Twist defl. limit(tension)  TDL
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_165
:! 
:N Fnc_rcon_166
:S    270,   129,   118
:T Cmd
:C )! Fnc_rcon_166
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MASS166
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
Cal_Fnc_rcon_166A,2,NE,1
Cal_Fnc_rcon_166B,2,EQ,1
:E End_OF_Fnc_rcon_166
:! 
:N Fnc_rcon_166A
:S    563,   155,   384
:T Cmd
:C )! Fnc_rcon_166A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MASS166
:H Hlp_E_S4.166
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constants for Expl Dynamics 3-D Mass w/o rot inertia (KEYOPT(1)=0)
Fld_3
Prm_Mass         MASS
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_166A
:! 
:N Fnc_rcon_166B
:S    987,   155,   808
:T Cmd
:C )! Fnc_rcon_166B
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MASS166
:H Hlp_E_S4.166
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constants for Expl Dynamics 3-D rotary inertia (KEYOPT(1)=1)
Fld_3
Prm_X-X on-diagonal inertia      IXX
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_X-Y off-diagonal inertia     IXY
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_X-Z off-diagonal inertia     IXZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Y-Y on-diagonal inertia      IYY
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Y-Z off-diagonal inertia     IYZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Z-Z on-diagonal inertia      IZZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_166B
:! 
:N Fnc_rcon_167
:S    544,   146,   375
:T Cmd
:C )! Fnc_rcon_167
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CABLE167
:H Hlp_E_S4.167
Cmd_R
!  
Fld_0
Typ_Lab
Prm_Element Type CABLE167
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Cable area                  CA
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Offset for Cable            OFFSET
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_167
:! 
:N Fnc_rcon_168
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_168
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID168
:H Hlp_E_S4.168
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID168'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_168
:! 
:N Fnc_rcon_169
:S    683,   161,   499
:T Cmd
:C )! Fnc_rcon_169
:A Element 169
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for TARGE169
:H Hlp_E_S4.169
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Target circle radius          R1
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Superelement thickness        R2
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
!    
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_(The remaining real constants are defined
 Fld_0
  Typ_Lab
  Prm_through its associated CONTA171/CONTA172)
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_169
:! 
:N Fnc_rcon_17
:S    216,   126,    68
:T Cmd
:C )! Fnc_rcon_17
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PIPE17
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PIPE17'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_17
:! 
:N Fnc_rcon_170
:S    698,   161,   514
:T Cmd
:C )! Fnc_rcon_170
:A Element 170
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for TARGE170
:H Hlp_E_S4.170
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Target sph./cyl./cone radius  R1
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Target cone 2nd end radius    R2
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_(The remaining real constants are defined
 Fld_0
  Typ_Lab
  Prm_through its associated CONTA173/CONTA174)
 Fld_2
  Typ_Def_0
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_170
:! 
:N Fnc_rcon_171
:S    347,   273,    51
:T Cmd
:C )! Fnc_rcon_171
:C )/NOPR
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )KEYW,KEY10,0
:C )*IF,_z1,GT,0,THEN
:C )KEYW,KEY10,1
:C )*ENDIF
:C )KEYW,TABLE1,0
:C )_CONTYP=171
:C )~eui,'::euidl::RealConstants::Contact::create'
:C )/GO
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_171
:! 
:N Fnc_rcon_172
:S    347,   273,    51
:T Cmd
:C )! Fnc_rcon_172
:C )/NOPR
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )KEYW,KEY10,0
:C )*IF,_z1,GT,0,THEN
:C )KEYW,KEY10,1
:C )*ENDIF
:C )KEYW,TABLE1,0
:C )_CONTYP=172
:C )~eui,'::euidl::RealConstants::Contact::create'
:C )/GO
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_172
:! 
:N Fnc_rcon_173
:S    347,   273,    51
:T Cmd
:C )! Fnc_rcon_173
:C )/NOPR
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )KEYW,KEY10,0
:C )*IF,_z1,GT,0,THEN
:C )KEYW,KEY10,1
:C )*ENDIF
:C )KEYW,TABLE1,0
:C )_CONTYP=173
:C )~eui,'::euidl::RealConstants::Contact::create'
:C )/GO
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_173
:! 
:N Fnc_rcon_174
:S    347,   273,    51
:T Cmd
:C )! Fnc_rcon_174
:C )/NOPR
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )KEYW,KEY10,0
:C )*IF,_z1,GT,0,THEN
:C )KEYW,KEY10,1
:C )*ENDIF
:C )KEYW,TABLE1,0
:C )_CONTYP=174
:C )~eui,'::euidl::RealConstants::Contact::create'
:C )/GO
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_174
:! 
:N Fnc_rcon_175
:S    347,   273,    51
:T Cmd
:C )! Fnc_rcon_175
:C )/NOPR
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )KEYW,KEY10,0
:C )*IF,_z1,GT,0,THEN
:C )KEYW,KEY10,1
:C )*ENDIF
:C )KEYW,TABLE1,0
:C )_CONTYP=175
:C )~eui,'::euidl::RealConstants::Contact::create'
:C )/GO
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_175
:! 
:N Fnc_rcon_176
:S    347,   273,    51
:T Cmd
:C )! Fnc_rcon_176
:C )/NOPR
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )KEYW,KEY10,0
:C )*IF,_z1,GT,0,THEN
:C )KEYW,KEY10,1
:C )*ENDIF
:C )KEYW,TABLE1,0
:C )_CONTYP=176
:C )~eui,'::euidl::RealConstants::Contact::create'
:C )/GO
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_176
:! 
:N Fnc_rcon_177
:S    347,   273,    51
:T Cmd
:C )! Fnc_rcon_177
:C )/NOPR
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )KEYW,KEY10,0
:C )*IF,_z1,GT,0,THEN
:C )KEYW,KEY10,1
:C )*ENDIF
:C )KEYW,TABLE1,0
:C )_CONTYP=177
:C )~eui,'::euidl::RealConstants::Contact::create'
:C )/GO
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_177
:! 
:N Fnc_rcon_178
:S   4843,  1421,  3399
:T Cmd
:C )! Fnc_rcon_178
:C )/NOPR
:C )KEYW,KEY31,0
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP3
:C )*IF,_z1,GE,1,THEN
:C )KEYW,KEY31,1
:C )*ENDIF
:C )KEYW,KEY51,1
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP5
:C )*IF,_z1,GE,1,THEN
:C )KEYW,KEY51,0
:C )*ENDIF
:C )KEYW,KEY11,0
:C )KEYW,KEY12,0
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )*IF,_z1,GE,1,THEN
:C )KEYW,KEY11,1
:C )*ENDIF
:C )*IF,_z1,GE,2,THEN
:C )KEYW,KEY12,1
:C )*ENDIF
:C )KEYW,KEY20,0
:C )KEYW,KEY21,0
:C )KEYW,KEY22,0
:C )KEYW,KEY23,0
:C )KEYW,KEY24,0
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP2
:C )*IF,_z1,EQ,0,THEN
:C )KEYW,KEY20,1
:C )*ENDIF
:C )*IF,_z1,EQ,1,THEN
:C )KEYW,KEY21,1
:C )*ENDIF
:C )*IF,_z1,EQ,2,THEN
:C )KEYW,KEY22,1
:C )*ENDIF
:C )*IF,_z1,EQ,3,THEN
:C )KEYW,KEY23,1
:C )*ENDIF
:C )*IF,_z1,EQ,4,THEN
:C )KEYW,KEY24,1
:C )*ENDIF
:C )KEYW,KEY60,0
:C )KEYW,KEY61,0
:C )KEYW,KEY62,0
:C )KEYW,KEY63,0
:C )KEYW,KEY64,0
:C )KEYW,KEY65,0
:C )KEYW,KEY66,0
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP6
:C )*IF,_z1,EQ,0,THEN
:C )KEYW,KEY60,1
:C )*ENDIF
:C )*IF,_z1,EQ,1,THEN
:C )KEYW,KEY61,1
:C )*ENDIF
:C )*IF,_z1,EQ,2,THEN
:C )KEYW,KEY62,1
:C )*ENDIF
:C )*IF,_z1,EQ,3,THEN
:C )KEYW,KEY63,1
:C )*ENDIF
:C )*IF,_z1,EQ,4,THEN
:C )KEYW,KEY64,1
:C )*ENDIF
:C )*IF,_z1,EQ,5,THEN
:C )KEYW,KEY65,1
:C )*ENDIF
:C )*IF,_z1,EQ,6,THEN
:C )KEYW,KEY66,1
:C )*ENDIF
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTA178
:H Hlp_E_S4.178
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Prm_Unidirectional gap type
K_LN(KEY11)
Prm_Cylindrical gap type
K_LN(KEY12)
Prm_Spherical gap type
Fld_0
Prm_Augmented Lagrange method
K_LN(KEY21)
Prm_Pure Penalty method
K_LN(KEY22)
Multipoint Constraint method
K_LN(KEY23)
Prm_Lagrange + penalty method
K_LN(KEY24)
Prm_Pure Lagrange multiplier method
Fld_3
K_FL(KEY20*KEY21*KEY31)
Prm_Normal stiffness *           FKN
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Initial gap size             GAP
K_LN(KEY11)
Prm_Allowable distance **        GAP
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Initial contact status     START
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
K_FL(KEY20*KEY21*KEY23)
Prm_Sticking stiffness *         FKS
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
K_FL(KEY31)
Prm_KN/KS reduction factor * REDFACT
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
K_FL(KEY11*KEY51)
Prm_Defined gap normal - X comp.  NX
K_LN(KEY11)
Prm_Defined Cyl. axis direction -  X
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
! 
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
! 
! Exclude_from_paths
Cmd_RMORE
Fld_2
K_FL(KEY51*KEY11)
Prm_Defined gap normal - Y comp.  NY
K_LN(KEY11)
Prm_Defined Cyl. axis direction -  Y
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
! 
Fld_3
K_FL(KEY51*KEY11)
Prm_Defined gap normal - Z comp.  NZ
K_LN(KEY11)
Prm_Defined Cyl. axis direction -  Z
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
! 
Fld_4
K_FL(key21)
Prm_Penetration tolerance *     TOLN
Typ_Real
Def_*GET(rcon,_RC_SET,const,9)
! 
Fld_5
K_FL(KEY23*KEY24)
Prm_Max. tensile contact force* FTOL
Typ_Real
Def_*GET(rcon,_RC_SET,const,10)
! 
Fld_6
K_FL(KEY20*KEY23)
Prm_Max. elastic slip *        SLTOL
Typ_Real
Def_*GET(rcon,_RC_SET,const,11)
!
Fld_7
Prm_Damping coefficient          CV1
Typ_Real
Def_*GET(rcon,_RC_SET,const,12)
! 
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Nonlinear damping coeff      CV2
Typ_Real
Def_*GET(rcon,_RC_SET,const,13)
!
Fld_3
Prm_Restitution coefficient      COR
Typ_Real
Def_*GET(rcon,_RC_SET,const,14)
! 
Fld_4
Prm_Cross-sectional area        AREA
Typ_Real
Def_*GET(rcon,_RC_SET,const,15)
! 
Fld_5
K_FL(KEY61*KEY62*KEY63*KEY64)
Prm_Thermal contact conductance  TCC
Typ_Real
Def_*GET(rcon,_RC_SET,const,16)
! 
Fld_6
K_FL(KEY61*KEY63)
Prm_Fraction of fric dissipat.  FHTG
Typ_Real
Def_*GET(rcon,_RC_SET,const,17)
! 
Fld_7
K_FL(KEY61*KEY62*KEY63*KEY64)
Prm_Stefan-Boltzmann constant   SBCT
Typ_Real
Def_*GET(rcon,_RC_SET,const,18)
! 
! Exclude_from_paths
Cmd_RMORE
Fld_2
K_FL(KEY61*KEY62*KEY63*KEY64)
Prm_Radiation view factor       RDVF
Typ_Real
Def_*GET(rcon,_RC_SET,const,19)
!
Fld_3
K_FL(KEY61*KEY63*KEY64)
Prm_Heat distribution weight    FWGT
Typ_Real
Def_*GET(rcon,_RC_SET,const,20)
! 
Fld_4
K_FL(KEY63*KEY64*KEY65*KEY66)
Prm_Electric contact conductance ECC
Typ_Real
Def_*GET(rcon,_RC_SET,const,21)
! 
Fld_5
K_FL(KEY63*KEY64)
Prm_Fraction of Joule dissipat  FHEG
Typ_Real
Def_*GET(rcon,_RC_SET,const,22)
! 
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_(* input positive value for scaling)
 Fld_0
  Typ_Lab
  Prm_(* input negative value for absolute)
 Fld_0
 K_LN(KEY11)
  Typ_Lab
 K_LN(KEY11)
  Prm_(** positive for Max. Allow. distance)
 Fld_0
 K_LN(KEY11)
  Typ_Lab
 K_LN(KEY11)
  Prm_(** negative for Min. Allow. distance)
 Fld_2
  Typ_Def_0
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_178
:! 
:N Fnc_rcon_179
:S    705,   161,   521
:T Cmd
:C )! Fnc_rcon_179
:A Element 179
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PRETS179
:H Hlp_E_S4.179
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Pre-tension normal - X comp.  NX
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Pre-tension normal - Y comp.  NY
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Pre-tension normal - Z comp.  NZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
! 
Fld_0
Typ_Lab
Prm_(X,Y,Z components are defined at global Coordinate system)
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_179
:! 
:N Fnc_rcon_17X_a
:S   1169,   569,   575
:T Cmd
:C )! Fnc_rcon_17X_a
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,4
:C )*GET,_z(1),ACTIVE,,KEYWORD,,FROMRC
:C )*GET,_z(2),ACTIVE,,KEYWORD,,FROMCWZ
:C )*GET,_z(3),ACTIVE,,KEYWORD,,FROMOPT
:C )*GET,_z(4),ACTIVE,,KEYWORD,,FROMSTP
:C )*IF,_z(1),EQ,1,THEN
:C )*SET,_z2,1
:C )*ELSEIF,_z(2),EQ,1,THEN
:C )*SET,_z2,2
:C )*ELSEIF,_z(3),EQ,1,THEN
:C )*SET,_z2,3
:C )*ELSEIF,_z(4),EQ,1,THEN
:C )*SET,_z2,4
:C )*ENDIF
:C )KEYW,TABLE1,1
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTA%(I)_CONTYP%
:H Hlp_E_S4.%(I)_CONTYP%
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,101,108
 Fld_0
  Typ_Lab
  Prm_[*DIM] Add New Table
 Fld_2
  Prm_Name of new table
  Typ_Char,32,32
 Fld_3
  Typ_Def_TABLE
 Fld_4
  Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
  Prm_NameI   Label for rows
  Typ_Char,8
  Def_Pressure
 Fld_8
  Prm_NameJ   Label for cols
  Typ_Char,8
  Def_Temp
 Fld_9
  Prm_NameK   Label for planes
  Typ_Char,8
!
Cmd_)*SET,_z1
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Options for new table parameter
  Typ_Lis_RadioB
    Lis_Edit on screen,1
    Lis_Read from file,2
Cmd_)/GO
!
Cal_Fnc_rcon_17X_b
:E End_OF_Fnc_rcon_17X_a
:! 
:N Fnc_rcon_17X_b
:S    345,   168,   152
:T Cmd
:C )! Fnc_rcon_17X_b
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTA%(I)_CONTYP%
:H Hlp_E_S4.%(I)_CONTYP%
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z2)
Cal_Fnc_rcon_17X_c,2,EQ,1,1
Cal_Fnc_rcon_17X_d,2,EQ,2,1
Cal_Fnc_rcon_17X_e,2,EQ,3,1
Cal_Fnc_rcon_17X_e,2,EQ,4,1
:E End_OF_Fnc_rcon_17X_b
:! 
:N Fnc_rcon_17X_c
:S    685,   168,   492
:T Cmd
:C )! Fnc_rcon_17X_c
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTA%(I)_CONTYP%
:H Hlp_E_S4.%(I)_CONTYP%
Inp_P
! Exclude_from_paths
Cmd_)*DIM
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(103)
 Fld_5
  Typ_Def_*CPAR(104)
 Fld_6
  Typ_Def_*CPAR(105)
 Fld_7
  Typ_Def_*CPAR(106)
 Fld_8
  Typ_Def_*CPAR(107)
 Fld_9
  Typ_Def_*CPAR(108)
Cmd_)~eui
 Fld_2
  Typ_Def_'set ::euidl::RealConstants::Contact::newTableName
  Dlm_ 
 Fld_3
  Typ_Def_*CPAR(101)
  Dlm_~
 Fld_4
  Typ_Def_'
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z1)
Cal_Fnc_rcon_17X_g,2,EQ,1,3
Cal_Fnc_rcon_17X_f,2,EQ,2,3
:E End_OF_Fnc_rcon_17X_c
:! 
:N Fnc_rcon_17X_d
:S    670,   168,   477
:T Cmd
:C )! Fnc_rcon_17X_d
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTA%(I)_CONTYP%
:H Hlp_E_S4.%(I)_CONTYP%
Inp_P
! Exclude_from_paths
Cmd_)*DIM
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(103)
 Fld_5
  Typ_Def_*CPAR(104)
 Fld_6
  Typ_Def_*CPAR(105)
 Fld_7
  Typ_Def_*CPAR(106)
 Fld_8
  Typ_Def_*CPAR(107)
 Fld_9
  Typ_Def_*CPAR(108)
Cmd_)~eui
 Fld_2
  Typ_Def_'set ::euidl::contact::newTableName
  Dlm_ 
 Fld_3
  Typ_Def_*CPAR(101)
  Dlm_~
 Fld_4
  Typ_Def_'
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z1)
Cal_Fnc_rcon_17X_g,2,EQ,1,3
Cal_Fnc_rcon_17X_f,2,EQ,2,3
:E End_OF_Fnc_rcon_17X_d
:! 
:N Fnc_rcon_17X_e
:S    676,   168,   483
:T Cmd
:C )! Fnc_rcon_17X_e
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTA%(I)_CONTYP%
:H Hlp_E_S4.%(I)_CONTYP%
Inp_P
! Exclude_from_paths
Cmd_)*DIM
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(103)
 Fld_5
  Typ_Def_*CPAR(104)
 Fld_6
  Typ_Def_*CPAR(105)
 Fld_7
  Typ_Def_*CPAR(106)
 Fld_8
  Typ_Def_*CPAR(107)
 Fld_9
  Typ_Def_*CPAR(108)
Cmd_)~eui
 Fld_2
  Typ_Def_'set ::euidl::contactWizard::newTableName
  Dlm_ 
 Fld_3
  Typ_Def_*CPAR(101)
  Dlm_~
 Fld_4
  Typ_Def_'
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z1)
Cal_Fnc_rcon_17X_g,2,EQ,1,3
Cal_Fnc_rcon_17X_f,2,EQ,2,3
:E End_OF_Fnc_rcon_17X_e
:! 
:N Fnc_rcon_17X_f
:S    366,   168,   173
:T Cmd
:C )! Fnc_rcon_17X_f
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTA%(I)_CONTYP%
:H Hlp_E_S4.%(I)_CONTYP%
Inp_NoApply
Cmd_*TREAD
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Prm_File,ext,dir Read from file
  Typ_File
 Fld_6
  Prm_Nskip  Skipped lines number
  Typ_Int
Cal_Fnc_rcon_17X_g
:E End_OF_Fnc_rcon_17X_f
:! 
:N Fnc_rcon_17X_g
:S    345,   168,   152
:T Cmd
:C )! Fnc_rcon_17X_g
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTA%(I)_CONTYP%
:H Hlp_E_S4.%(I)_CONTYP%
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z2)
Cal_Fnc_rcon_17X_h,2,EQ,1,1
Cal_Fnc_rcon_17X_i,2,EQ,2,1
Cal_Fnc_rcon_17X_j,2,EQ,3,1
Cal_Fnc_rcon_17X_k,2,EQ,4,1
:E End_OF_Fnc_rcon_17X_g
:! 
:N Fnc_rcon_17X_h
:S    394,   168,   201
:T Cmd
:C )! Fnc_rcon_17X_h
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTA%(I)_CONTYP%
:H Hlp_E_S4.%(I)_CONTYP%
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(101)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
Cmd_)/NOPR
Cmd_)~eui,'::euidl::RealConstants::Contact::create'
Cmd_)/GO
:E End_OF_Fnc_rcon_17X_h
:! 
:N Fnc_rcon_17X_i
:S    384,   168,   191
:T Cmd
:C )! Fnc_rcon_17X_i
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTA%(I)_CONTYP%
:H Hlp_E_S4.%(I)_CONTYP%
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(101)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
Cmd_)/NOPR
Cmd_)~eui,'::euidl::contact::updateCombo'
Cmd_)/GO
:E End_OF_Fnc_rcon_17X_i
:! 
:N Fnc_rcon_17X_j
:S    397,   168,   204
:T Cmd
:C )! Fnc_rcon_17X_j
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTA%(I)_CONTYP%
:H Hlp_E_S4.%(I)_CONTYP%
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(101)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
Cmd_)/NOPR
Cmd_)~eui,'::euidl::contactWizard::Step3a_updateCombo'
Cmd_)/GO
:E End_OF_Fnc_rcon_17X_j
:! 
:N Fnc_rcon_17X_k
:S    396,   168,   203
:T Cmd
:C )! Fnc_rcon_17X_k
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTA%(I)_CONTYP%
:H Hlp_E_S4.%(I)_CONTYP%
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(101)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
Cmd_)/NOPR
Cmd_)~eui,'::euidl::contactWizard::Step3_updateCombo'
Cmd_)/GO
:E End_OF_Fnc_rcon_17X_k
:! 
:N Fnc_rcon_17X_x
:S    124,    93,     6
:T Cmd_N
:C )! Fnc_rcon_17X_x
:K #(PREP7*SOLUTION)
Inp_P
:E End_OF_Fnc_rcon_17X_x
:! 
:N Fnc_rcon_18
:S   1361,   141,  1198
:T Cmd
:C )! Fnc_rcon_18
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PIPE18
:H Hlp_E_S4.18
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Outside diameter              OD
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Wall thickness            TKWALL
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Radius of curvature       RADCUR
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Stress intensity fact at I  SIFI
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Stress intensity fact at J  SIFJ
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_In plane flexibility        FLXI
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Internal fluid density    DENSFL
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
Prm_Ext insulation density    DENSIN
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
Fld_4
Prm_Insulation thickness        TKIN
Typ_Real
Def_*GET(rcon,_RC_SET,const,9)
Fld_5
Prm_Corrosion thk allowance   TKCORR
Typ_Real
Def_*GET(rcon,_RC_SET,const,10)
Fld_7
Prm_Out of plane flexibility    FLXO
Typ_Real
Def_*GET(rcon,_RC_SET,const,12)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_18
:! 
:N Fnc_rcon_180
:S    707,   145,   555
:T Cmd
:C )! Fnc_rcon_180
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for LINK180
:H Hlp_E_S4.180
Cmd_R
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
! 
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_3
  Prm_Cross-sectional area        AREA
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_4
  Prm_Added Mass (Mass/Length)  ADDMAS
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,2)
 Fld_5
  Prm_Tension and compression  TENSKEY
  Typ_Lis_OptionB
  LIS_Both          ,0
  LIS_Tension only  ,1
  LIS_Compress only ,-1
  Def_*GET(rcon,_RC_SET,const,3)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E END
:! 
:N Fnc_rcon_181
:S    233,   138,    72
:T Cmd
:C )! Fnc_rcon_181
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL181
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL181'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC_R
:E End_OF_Fnc_rcon_181
:! 
:N Fnc_rcon_182
:S    507,   386,    98
:T Cmd
:C )! Fnc_rcon_182
:C )/NOPR
:C )KEYW,KEY11,0
:C )KEYW,KEY33,0
:C )_z3=0
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )*GET,_z2,ETYP,_ET_TYPE,ATTR,KOP3
:C )*IF,_z1,EQ,1,THEN
:C )KEYW,KEY11,1
:C )_z3=1
:C )*ENDIF
:C )*IF,_z2,EQ,3,THEN
:C )KEYW,KEY33,1
:C )_z3=1
:C )*ENDIF
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE182
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*PAR(_z3)
Cal_Fnc_rcon_182A,2,EQ,1
Cal_Fnc_rcon_182B,2,NE,1
:E End_OF_Fnc_rcon_182
:! 
:N Fnc_rcon_182A
:S    807,   156,   627
:T Cmd
:C )! Fnc_rcon_182A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE182
:H Hlp_E_S4.182
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
K_FL(KEY33)
Typ_Sep
Fld_0
K_FL(KEY33)
Typ_Lab
Prm_Real Constant for Plane Stress with Thickness (KEYOPT(3)=3)
Fld_3
K_FL(KEY33)
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Fld_0
K_FL(KEY11)
Typ_Sep
Fld_0
K_FL(KEY11)
Typ_Lab
Prm_Real Constant for Reduced Integration (KEYOPT(1)=1)
Fld_4
K_FL(KEY11)
Prm_Hourglass stiffness factor HGSTF
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
! 
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_182A
:! 
:N Fnc_rcon_182B
:S    241,   148,    69
:T Cmd
:C )! Fnc_rcon_182B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE182
:H Hlp_E_S4.182
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE182'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_182B
:! 
:N Fnc_rcon_183
:S    271,   130,   118
:T Cmd
:C )! Fnc_rcon_183
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE183
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cal_Fnc_rcon_183A,2,EQ,3
Cal_Fnc_rcon_183B,2,NE,3
:E End_OF_Fnc_rcon_183
:! 
:N Fnc_rcon_183A
:S    565,   156,   385
:T Cmd
:C )! Fnc_rcon_183A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE183
:H Hlp_E_S4.183
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane Stress with Thickness (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_183A
:! 
:N Fnc_rcon_183B
:S    249,   156,    69
:T Cmd
:C )! Fnc_rcon_183B
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE183
:H Hlp_E_S4.183
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE183'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_183B
:! 
:N Fnc_rcon_184
:S    220,   145,    68
:T Cmd
:C )! Fnc_rcon_184
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for RBAR184
:H Hlp_E_S4.184
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'RBAR184'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End
:! 
:N Fnc_rcon_185
:S    271,   130,   118
:T Cmd
:C )! Fnc_rcon_185
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID185
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
Cal_Fnc_rcon_185A,2,EQ,1
Cal_Fnc_rcon_185B,2,NE,1
:E End_OF_Fnc_rcon_185
:! 
:N Fnc_rcon_185A
:S    559,   156,   379
:T Cmd
:C )! Fnc_rcon_185A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID185
:H Hlp_E_S4.185
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
! 
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Reduced Integration (KEYOPT(2)=1)
Fld_3
Prm_Hourglass stiffness factor HGSTF
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
! 
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_185A
:! 
:N Fnc_rcon_185B
:S    241,   148,    69
:T Cmd
:C )! Fnc_rcon_185B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID185
:H Hlp_E_S4.185
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID185'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_185B
:! 
:N Fnc_rcon_186
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_186
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID186
:H Hlp_E_S4.186
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID186'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_186
:! 
:N Fnc_rcon_187
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_187
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID187
:H Hlp_E_S4.187
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID187'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_187
:! 
:N Fnc_rcon_188
:S    236,   145,    68
:T Cmd
:C )! Fnc_rcon_188
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for BEAM188
:H Hlp_E_S4.188
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'BEAM188'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_188
:! 
:N Fnc_rcon_189
:S    236,   145,    68
:T Cmd
:C )! Fnc_rcon_189
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for BEAM189
:H Hlp_E_S4.189
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'BEAM189'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_189
:! 
:N Fnc_rcon_19
:S    252,   126,   119
:T Cmd
:C )! Fnc_rcon_19
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF19
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cal_Fnc_rcon_19A,2,NE,3
Cal_Fnc_rcon_19B,2,EQ,3
:E End
:! 
:N Fnc_rcon_190
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_190
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID190
:H Hlp_E_S4.190
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID190'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_190
:! 
:N Fnc_rcon_191
:S    223,   130,    70
:T Cmd
:C )! Fnc_rcon_191
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID191
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID191'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_191
:! 
:N Fnc_rcon_192
:S    359,   238,    98
:T Cmd
:C )! Fnc_rcon_192
:C )/NOPR
:C )_z3=0
:C )*GET,_z2,ETYP,_ET_TYPE,ATTR,KOP3
:C )*IF,_z2,EQ,3,THEN
:C )_z3=1
:C )*ENDIF
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER192
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*PAR(_z3)
Cal_Fnc_rcon_192A,2,EQ,1
Cal_Fnc_rcon_192B,2,NE,1
:E End_OF_Fnc_rcon_192
:! 
:N Fnc_rcon_192A
:S    565,   156,   385
:T Cmd
:C )! Fnc_rcon_192A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER192
:H Hlp_E_S4.192
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane Stress with Thickness (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_192A
:! 
:N Fnc_rcon_192B
:S    241,   148,    69
:T Cmd
:C )! Fnc_rcon_192B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER192
:H Hlp_E_S4.192
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INTER192'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_192B
:! 
:N Fnc_rcon_193
:S    359,   238,    98
:T Cmd
:C )! Fnc_rcon_193
:C )/NOPR
:C )_z3=0
:C )*GET,_z2,ETYP,_ET_TYPE,ATTR,KOP3
:C )*IF,_z2,EQ,3,THEN
:C )_z3=1
:C )*ENDIF
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER193
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*PAR(_z3)
Cal_Fnc_rcon_193A,2,EQ,1
Cal_Fnc_rcon_193B,2,NE,1
:E End_OF_Fnc_rcon_193
:! 
:N Fnc_rcon_193A
:S    565,   156,   385
:T Cmd
:C )! Fnc_rcon_193A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER193
:H Hlp_E_S4.193
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane Stress with Thickness (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_193A
:! 
:N Fnc_rcon_193B
:S    241,   148,    69
:T Cmd
:C )! Fnc_rcon_193B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER193
:H Hlp_E_S4.193
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INTER193'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_193B
:! 
:N Fnc_rcon_194
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_194
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER194
:H Hlp_E_S4.194
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INTER194'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_194
:! 
:N Fnc_rcon_195
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_195
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER195
:H Hlp_E_S4.195
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INTER195'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_195
:! 
:N Fnc_rcon_19A
:S   1080,   151,   922
:T Cmd
:C )! Fnc_rcon_19A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF19
:H Hlp_E_S4.19
Cmd_R
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
 Fld_2
  Typ_Int
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Real Constants for Plane or Axisymmetric (KEYOPT(3) = 0 or 1)
 Fld_3
  Prm_Form factor                FORMF
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_4
  Prm_Stefan-Boltzmann const   SBCONST
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,2)
 Fld_6
  Prm_Foundation Stiffness        EFS
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,4)
 Fld_7
  Prm_Surface Tension             SURT
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,5)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Prm_In-plane thickness at I      TKI
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,7)
 Fld_3
  Prm_In-plane thickness at J      TKJ
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,8)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End
:! 
:N Fnc_rcon_19B
:S   1197,   151,  1023
:T Cmd
:C )! Fnc_rcon_19B
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF19
:H Hlp_E_S4.19
Cmd_R
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Real Constants for Plane with Thickness (KEYOPT(3) = 3)
 Fld_3
  Prm_Form factor                FORMF
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_4
  Prm_Stefan-Boltzmann const   SBCONST
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,2)
 Fld_6
  Prm_Foundation Stiffness        EFS
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,4)
 Fld_7
  Prm_Surface Tension             SURT
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,5)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Prm_In-plane thickness at I      TKI
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,7)
 Fld_3
  Prm_In-plane thickness at J      TKJ
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,8)
 Fld_7
 P_FL(FULL_ANS)
  Prm_Out-of-plane thickness      TKPS
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,12)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_19B
:! 
:N Fnc_rcon_2
:S    259,   124,   114
:T Cmd
:C )! Fnc_rcon_2
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE2
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cal_Fnc_rcon_2A,2,EQ,3
Cal_Fnc_rcon_2B,2,NE,3
:E End_OF_Fnc_rcon_2
:! 
:N Fnc_rcon_20
:S    216,   126,    68
:T Cmd
:C )! Fnc_rcon_20
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PIPE20
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PIPE20'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_20
:! 
:N Fnc_rcon_200
:S    236,   145,    68
:T Cmd
:C )! Fnc_rcon_200
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MESH200
:H Hlp_E_S4.200
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'MESH200'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_200
:! 
:N Fnc_rcon_201
:S    771,   181,   567
:T Cmd
:C )! Fnc_rcon_201
:C )/NOPR
:C )_z = _RC_SET
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FOLLW201
:H Hlp_E_S4.201
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Direction cosine for Force load
Fld_3
Prm_                    FX, FY, FZ
Typ_Real3
Def_*GET(rcon,_z,const,1),*GET(rcon,_z,const,2),*GET(rcon,_z,const,3)
Fld_0
Typ_Lab
Prm_Direction cosine for Moment load
Fld_6
Prm_              MOMX, MOMY, MOMZ
Typ_Real3
Def_*GET(rcon,_z,const,4),*GET(rcon,_z,const,5),*GET(rcon,_z,const,6)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_201
:! 
:N Fnc_rcon_202
:S    306,   185,    98
:T Cmd
:C )! Fnc_rcon_202
:C )/NOPR
:C )*GET,_z2,ETYP,_ET_TYPE,ATTR,KOP3
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER202
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*PAR(_z2)
Cal_Fnc_rcon_202A,2,EQ,3
Cal_Fnc_rcon_202B,2,NE,3
:E End_OF_Fnc_rcon_202
:! 
:N Fnc_rcon_202A
:S    565,   156,   385
:T Cmd
:C )! Fnc_rcon_202A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER202
:H Hlp_E_S4.202
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane Stress with Thickness (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_202A
:! 
:N Fnc_rcon_202B
:S    241,   148,    69
:T Cmd
:C )! Fnc_rcon_202B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER202
:H Hlp_E_S4.202
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INTER202'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_202B
:! 
:N Fnc_rcon_203
:S    306,   185,    98
:T Cmd
:C )! Fnc_rcon_203
:C )/NOPR
:C )*GET,_z2,ETYP,_ET_TYPE,ATTR,KOP3
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER203
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*PAR(_z2)
Cal_Fnc_rcon_203A,2,EQ,3
Cal_Fnc_rcon_203B,2,NE,3
:E End_OF_Fnc_rcon_203
:! 
:N Fnc_rcon_203A
:S    565,   156,   385
:T Cmd
:C )! Fnc_rcon_203A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER203
:H Hlp_E_S4.203
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane Stress with Thickness (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_203A
:! 
:N Fnc_rcon_203B
:S    241,   148,    69
:T Cmd
:C )! Fnc_rcon_203B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER203
:H Hlp_E_S4.203
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INTER203'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_203B
:! 
:N Fnc_rcon_204
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_204
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER204
:H Hlp_E_S4.204
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INTER204'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_204
:! 
:N Fnc_rcon_205
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_205
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INTER205
:H Hlp_E_S4.205
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INTER205'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_205
:! 
:N Fnc_rcon_208
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_208
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL208
:H Hlp_E_S4.208
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL208'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_208
:! 
:N Fnc_rcon_209
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_209
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL209
:H Hlp_E_S4.209
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL209'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_209
:! 
:N Fnc_rcon_21
:S    312,   126,   164
:T Cmd
:C )! Fnc_rcon_21
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MASS21
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cal_Fnc_rcon_21A,2,LE,1
Cal_Fnc_rcon_21B,2,EQ,2
Cal_Fnc_rcon_21C,2,EQ,3
Cal_Fnc_rcon_21D,2,EQ,4
:E End_OF_Fnc_rcon_21
:! 
:N Fnc_rcon_212
:S    271,   130,   118
:T Cmd
:C )! Fnc_rcon_212
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COUPL212
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cal_Fnc_rcon_212A,2,EQ,3
Cal_Fnc_rcon_212B,2,NE,3
:E End_OF_Fnc_rcon_212
:! 
:N Fnc_rcon_212A
:S    569,   156,   389
:T Cmd
:C )! Fnc_rcon_212A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COUPL212
:H Hlp_E_S4.212
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane Stress with Thickness (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_212A
:! 
:N Fnc_rcon_212B
:S    241,   148,    69
:T Cmd
:C )! Fnc_rcon_212B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COUPL212
:H Hlp_E_S4.212
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'COUPL212'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_212B
:! 
:N Fnc_rcon_213
:S    271,   130,   118
:T Cmd
:C )! Fnc_rcon_213
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COUPL213
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cal_Fnc_rcon_213A,2,EQ,3
Cal_Fnc_rcon_213B,2,NE,3
:E End_OF_Fnc_rcon_213
:! 
:N Fnc_rcon_213A
:S    569,   156,   389
:T Cmd
:C )! Fnc_rcon_213A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COUPL213
:H Hlp_E_S4.213
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane Stress with Thickness (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_213A
:! 
:N Fnc_rcon_213B
:S    241,   148,    69
:T Cmd
:C )! Fnc_rcon_213B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COUPL213
:H Hlp_E_S4.213
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'COUPL213'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_213B
:! 
:N Fnc_rcon_214
:S   1091,   146,   922
:T Cmd
:C )! Fnc_rcon_214
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COMBI214
:H Hlp_E_S4.214
Cmd_R
Fld_0
 Typ_Lab
 Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
 Typ_INT
 Prm_Real Constant Set No.
 Def_*PAR(_RC_SET)
Fld_0
 Typ_Sep
Fld_3
 Prm_Stiffness coefficients       K11
 Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
 Prm_                             K22
 Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
 Prm_                             K12
 Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
 Prm_                             K21
 Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
 Prm_Damping coefficients         C11
 Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
 Prm_                             C22
 Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_RMORE
Fld_2
 Prm_                             C12
 Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
 Prm_                             C21
 Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_214
:! 
:N Fnc_rcon_215
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_215
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COUPL215
:H Hlp_E_S4.215
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'COUPL215'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_215
:! 
:N Fnc_rcon_216
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_216
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COUPL216
:H Hlp_E_S4.216
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'COUPL216'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_216
:! 
:N Fnc_rcon_217
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_217
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COUPL217
:H Hlp_E_S4.217
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'COUPL217'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_217
:! 
:N Fnc_rcon_21A
:S   1162,   151,   988
:T Cmd
:C )! Fnc_rcon_21A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MASS21
:H Hlp_E_S4.21
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constants for 3-D Mass with Rotary Inertia (KEYOPT(3)=0)
Fld_3
Prm_Mass in X direction        MASSX
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Mass in Y direction        MASSY
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Mass in Z direction        MASSZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Rotary inertia about X       IXX
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Rotary inertia about Y       IYY
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Rotary inertia about Z       IZZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
Cmd_RMORE
K_CM(EDFRMPK1)
Fld_0
Typ_Sep
Fld_3
Prm_ID Number                     ID
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
K_CM(edfrmpk1)
Cmd_)KEYW,EDFRMPK1,0
Cmd_)/GO
:E End_OF_Fnc_rcon_21A
:! 
:N Fnc_rcon_21B
:S    749,   151,   575
:T Cmd
:C )! Fnc_rcon_21B
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MASS21
:H Hlp_E_S4.21
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for 3-D Mass without Rotary Inertia (KEYOPT(3)=2)
Fld_3
Prm_3-D mass                    MASS
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
Cmd_RMORE
K_CM(EDFRMPK1)
Fld_0
Typ_Sep
Fld_3
Prm_ID Number                     ID
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
K_CM(edfrmpk1)
Cmd_)KEYW,EDFRMPK1,0
Cmd_)/GO
:E End_OF_Fnc_rcon_21B
:! 
:N Fnc_rcon_21C
:S    830,   151,   656
:T Cmd
:C )! Fnc_rcon_21C
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MASS21
:H Hlp_E_S4.21
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constants for 2-D Mass with Rotary Inertia (KEYOPT(3)=3)
Fld_3
Prm_2-D mass                    MASS
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Rotary inertia about Z       IZZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
Cmd_RMORE
K_CM(EDFRMPK1)
Fld_0
Typ_Sep
Fld_3
Prm_ID Number                     ID
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
K_CM(edfrmpk1)
Cmd_)KEYW,EDFRMPK1,0
Cmd_)/GO
:E End_OF_Fnc_rcon_21C
:! 
:N Fnc_rcon_21D
:S    749,   151,   575
:T Cmd
:C )! Fnc_rcon_21D
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MASS21
:H Hlp_E_S4.21
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for 2-D Mass without Rotary Inertia (KEYOPT(3)=4)
Fld_3
Prm_2-D mass                    MASS
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
Cmd_RMORE
K_CM(EDFRMPK1)
Fld_0
Typ_Sep
Fld_3
Prm_ID Number                     ID
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
K_CM(edfrmpk1)
Cmd_)KEYW,EDFRMPK1,0
Cmd_)/GO
:E End_OF_Fnc_rcon_21D
:! 
:N Fnc_rcon_22
:S   1181,   141,  1018
:T Cmd
:C )! Fnc_rcon_22
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF22
:H Hlp_E_S4.22
Cmd_R
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
 Fld_2
  Typ_Int
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_3
  Prm_Form factor                FORMF
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_4
  Prm_Stefan-Boltzmann const   SBCONST
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,2)
 Fld_6
  Prm_Foundation Stiffness        EFS
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,4)
 Fld_7
  Prm_Surface Tension             SURT
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,5)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Prm_Thickness at node I          TKI
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,7)
 Fld_3
  Prm_Thickness at node J          TKJ
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,8)
 Fld_4
  Prm_Thickness at node K          TKK
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,9)
 Fld_5
  Prm_Thickness at node L          TKL
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,10)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_22
:! 
:N Fnc_rcon_220
:S    480,   146,   311
:T Cmd
:C )! Fnc_rcon_220
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID220
:H Hlp_E_S4.220
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Reference pressure          PREF
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_220
:! 
:N Fnc_rcon_221
:S    480,   146,   311
:T Cmd
:C )! Fnc_rcon_221
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID221
:H Hlp_E_S4.221
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Reference pressure          PREF
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_221
:! 
:N Fnc_rcon_223
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_223
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE223
:H Hlp_E_S4.223
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE223'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_223
:! 
:N Fnc_rcon_226
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_226
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID226
:H Hlp_E_S4.226
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID226'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_226
:! 
:N Fnc_rcon_227
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_227
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID227
:H Hlp_E_S4.227
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID227'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_227
:! 
:N Fnc_rcon_23
:S    216,   126,    68
:T Cmd
:C )! Fnc_rcon_23
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for BEAM23
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'BEAM23'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_23
:! 
:N Fnc_rcon_230
:S    306,   185,    98
:T Cmd
:C )! Fnc_rcon_230
:C )/NOPR
:C )*GET,_z2,ETYP,_ET_TYPE,ATTR,KOP3
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE230
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*PAR(_z2)
Cal_Fnc_rcon_230A,2,EQ,3
Cal_Fnc_rcon_230B,2,NE,3
:E End_OF_Fnc_rcon_230
:! 
:N Fnc_rcon_230A
:S    565,   156,   385
:T Cmd
:C )! Fnc_rcon_230A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE230
:H Hlp_E_S4.230
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane with Thickness        (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_230A
:! 
:N Fnc_rcon_230B
:S    241,   148,    69
:T Cmd
:C )! Fnc_rcon_230B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE230
:H Hlp_E_S4.230
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE230'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_230B
:! 
:N Fnc_rcon_231
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_231
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID231
:H Hlp_E_S4.231
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID231'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_231
:! 
:N Fnc_rcon_232
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_232
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID232
:H Hlp_E_S4.232
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID232'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_232
:! 
:N Fnc_rcon_233
:S    271,   130,   118
:T Cmd
:C )! Fnc_rcon_233
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE233
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
Cal_Fnc_rcon_233A,2,NE,2
Cal_Fnc_rcon_233B,2,EQ,2
:E End_OF_Fnc_rcon_213
:! 
:N Fnc_rcon_233A
:S    860,   270,   566
:T Cmd
:C )! Fnc_rcon_233A
:C )/NOPR
:C )KEYW,TKPS,0
:C )*GET,_z99,ETYP,_ET_TYPE,ATTR,KOP3
:C )*IF,_z99,EQ,1,THEN
:C )KEYW,TKPS,1
:C )*ENDIF
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE233
:H Hlp_E_S4.233
Cmd_R
Fld_0
 Typ_Lab
 Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
 Typ_INT
 Prm_Real Constant Set No.
 Def_*PAR(_RC_SET)
Fld_0
 Typ_Sep
Fld_0
 K_FL(tkps)
 Typ_Lab
 Prm_Real Constant for Plane (KEYOPT(3)=0)
Fld_3
 K_FL(tkps)
 Prm_Thickness                    THK
 Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_0
 K_FL(TKPS)
 Typ_Lab
 Prm_Real Constant for Axisymmetric (KEYOPT(3)=1)
Fld_3
 K_FL(TKPS)
 Prm_Fraction of the 360 basis  
 Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_233A
:! 
:N Fnc_rcon_233B
:S   1437,   270,  1143
:T Cmd
:C )! Fnc_rcon_233B
:C )/NOPR
:C )KEYW,TKPS,0
:C )*GET,_z99,ETYP,_ET_TYPE,ATTR,KOP3
:C )*IF,_z99,EQ,1,THEN
:C )KEYW,TKPS,1
:C )*ENDIF
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE233
:H Hlp_E_S4.233
Cmd_R
Fld_0
 Typ_Lab
 Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
 Typ_INT
 Prm_Real Constant Set No.
 Def_*PAR(_RC_SET)
Fld_0
 Typ_Sep
Fld_0
 K_FL(tkps)
 Typ_Lab
 Prm_Real Constant for Plane (KEYOPT(3)=0)
Fld_3
 K_FL(tkps)
 Prm_Thickness                    THK
 Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_0
 K_FL(TKPS)
 Typ_Lab
 Prm_Real Constant for Axisymmetric (KEYOPT(3)=1)
Fld_3
 K_FL(TKPS)
 Prm_Fraction of the 360 basis  
 Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
 Prm_Coil cross-section area       SC
 Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
 Prm_Number of coil turns          NC
 Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
 Prm_Mean radius of coil          RAD
 Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
 Prm_Current polarity              TZ
  Typ_Lis_OptionB
  LIS_Plane         ,1
  LIS_Axisymmetric  ,-1
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
 Prm_Coil resistance                R
 Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_RMORE
Fld_2
 Prm_Coil symmetry factor         SYM
 Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_233B
:! 
:N Fnc_rcon_236
:S    321,   146,   152
:T Cmd
:C )! Fnc_rcon_236
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID236
:H Hlp_E_S4.236
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID236'
Cmd_)/GO
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
Cal_Fnc_rcon_NA_2,2,NE,2
Cal_Fnc_rcon_236B,2,EQ,2
:E End_OF_Fnc_rcon_236
:! 
:N Fnc_rcon_236B
:S   1135,   148,   963
:T Cmd
:C )! Fnc_rcon_236B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID236
:H Hlp_E_S4.236
Cmd_R
Fld_0
 Typ_Lab
 Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
 Typ_INT
 Prm_Real Constant Set No.
 Def_*PAR(_RC_SET)
Fld_0
 Typ_Sep
Fld_3
 Prm_Coil cross-section area       SC
 Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
 Prm_Number of coil turns          NC
 Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
 Prm_Coil Volume                   VC
 Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_0
 Typ_Lab
 Prm_Coil winding cosines
Fld_6
 Prm_       X-directional          TX
 Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
 Prm_       Y-directional          TY
 Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
 Prm_       Z-directional          TZ
 Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_RMORE
Fld_2
 Prm_Coil resistance                R
 Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
 Prm_Coil symmetry factor         SYM
 Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_236B
:! 
:N Fnc_rcon_237
:S    321,   146,   152
:T Cmd
:C )! Fnc_rcon_237
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID237
:H Hlp_E_S4.237
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID237'
Cmd_)/GO
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
Cal_Fnc_rcon_NA_2,2,NE,2
Cal_Fnc_rcon_237B,2,EQ,2
:E End_OF_Fnc_rcon_237
:! 
:N Fnc_rcon_237B
:S   1135,   148,   963
:T Cmd
:C )! Fnc_rcon_237B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID237
:H Hlp_E_S4.237
Cmd_R
Fld_0
 Typ_Lab
 Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
 Typ_INT
 Prm_Real Constant Set No.
 Def_*PAR(_RC_SET)
Fld_0
 Typ_Sep
Fld_3
 Prm_Coil cross-section area       SC
 Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
 Prm_Number of coil turns          NC
 Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
 Prm_Coil Volume                   VC
 Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_0
 Typ_Lab
 Prm_Coil winding cosines
Fld_6
 Prm_       X-directional          TX
 Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
 Prm_       Y-directional          TY
 Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
 Prm_       Z-directional          TZ
 Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_RMORE
Fld_2
 Prm_Coil resistance                R
 Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
 Prm_Coil symmetry factor         SYM
 Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_237B
:! 
:N Fnc_rcon_238
:S    306,   185,    98
:T Cmd
:C )! Fnc_rcon_238
:C )/NOPR
:C )*GET,_z2,ETYP,_ET_TYPE,ATTR,KOP3
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE238
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*PAR(_z2)
Cal_Fnc_rcon_238A,2,EQ,3
Cal_Fnc_rcon_238B,2,NE,3
:E End_OF_Fnc_rcon_238
:! 
:N Fnc_rcon_238A
:S    565,   156,   385
:T Cmd
:C )! Fnc_rcon_238A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE238
:H Hlp_E_S4.238
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane with Thickness        (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_238A
:! 
:N Fnc_rcon_238B
:S    241,   148,    69
:T Cmd
:C )! Fnc_rcon_238B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE238
:H Hlp_E_S4.238
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE238'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_238B
:! 
:N Fnc_rcon_239
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_239
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID239
:H Hlp_E_S4.239
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID239'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_239
:! 
:N Fnc_rcon_24
:S    277,   187,    68
:T Cmd
:C )! Fnc_rcon_24
:A Element 24
:C )/NOPR
:C )*DEL,_z1
:C )_z1=_RC_SET
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for BEAM24
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'BEAM24'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_24
:! 
:N Fnc_rcon_240
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_240
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID240
:H Hlp_E_S4.240
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID240'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_240
:! 
:N Fnc_rcon_241
:S    563,   146,   394
:T Cmd
:C )! Fnc_rcon_241
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for HSFLD241
:H Hlp_E_S4.241
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Reference pressure          PREF
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_241
:! 
:N Fnc_rcon_242
:S    480,   146,   311
:T Cmd
:C )! Fnc_rcon_242
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for HSFLD242
:H Hlp_E_S4.242
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Reference pressure          PREF
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_242
:! 
:N Fnc_rcon_25
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_25
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE25
:H Hlp_E_S4.25
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE25'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_25
:! 
:N Fnc_rcon_251
:S    236,   145,    68
:T Cmd
:C )! Fnc_rcon_251
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF251
:H Hlp_E_S4.251
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SURF251'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_251
:! 
:N Fnc_rcon_252
:S    236,   145,    68
:T Cmd
:C )! Fnc_rcon_252
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SURF252
:H Hlp_E_S4.252
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SURF252'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_252
:! 
:N Fnc_rcon_26
:S    220,   128,    70
:T Cmd
:C )! Fnc_rcon_26
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTAC26
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'CONTAC26'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_26
:! 
:N Fnc_rcon_263
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_263
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for REINF263
:H Hlp_E_S4.263
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'REINF263'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_263
:! 
:N Fnc_rcon_264
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_264
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for REINF264
:H Hlp_E_S4.264
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'REINF264'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_264
:! 
:N Fnc_rcon_265
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_265
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for REINF265
:H Hlp_E_S4.265
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'REINF265'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_265
:! 
:N Fnc_rcon_27
:S    374,   187,   165
:T Cmd
:C )! Fnc_rcon_27
:A Element 27
:C )/NOPR
:C )*DEL,_z
:C )_z=_RC_SET
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MATRIX27
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
Cal_Fnc_rcon_27A,2,EQ,0
Cal_Fnc_rcon_NA_2,2,EQ,1
Cal_Fnc_rcon_27B,2,EQ,2
Cal_Fnc_rcon_27C,2,EQ,3
:E End_OF_Fnc_rcon_27
:! 
:N Fnc_rcon_272
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_272
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID272
:H Hlp_E_S4.272
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID272'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_272
:! 
:N Fnc_rcon_273
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_273
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID273
:H Hlp_E_S4.273
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID273'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_273
:! 
:N Fnc_rcon_278
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_278
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID278
:H Hlp_E_S4.278
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID278'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_278
:! 
:N Fnc_rcon_279
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_279
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID279
:H Hlp_E_S4.279
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID279'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_279
:! 
:N Fnc_rcon_27A
:S   4096,   167,  3906
:T Cmd
:C )! Fnc_rcon_27A
:C )/GO
:A Element 27
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MATRIX27
:H Hlp_E_S4.27
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_z)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Coefficients for Symmetric Matrices (KEYOPT(2)=0)
Fld_3
Prm_                    C1, C2, C3
Typ_Real3
Def_*GET(rcon,_z,const,1),*GET(rcon,_z,const,2),*GET(rcon,_z,const,3)
Fld_6
Prm_                    C4, C5, C6
Typ_Real3
Def_*GET(rcon,_z,const,4),*GET(rcon,_z,const,5),*GET(rcon,_z,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!  
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    C7, C8, C9
Typ_Real3
Def_*GET(rcon,_z,const,7),*GET(rcon,_z,const,8),*GET(rcon,_z,const,9)
Fld_5
Prm_                 C10, C11, C12
Typ_Real3
Def_*GET(rcon,_z,const,10),*GET(rcon,_z,const,11),*GET(rcon,_z,const,12)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C13, C14, C15
Typ_Real3
Def_*GET(rcon,_z,const,13),*GET(rcon,_z,const,14),*GET(rcon,_z,const,15)
Fld_5
Prm_                 C16, C17, C18
Typ_Real3
Def_*GET(rcon,_z,const,16),*GET(rcon,_z,const,17),*GET(rcon,_z,const,18)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C19, C20, C21
Typ_Real3
Def_*GET(rcon,_z,const,19),*GET(rcon,_z,const,20),*GET(rcon,_z,const,21)
Fld_5
Prm_                 C22, C23, C24
Typ_Real3
Def_*GET(rcon,_z,const,22),*GET(rcon,_z,const,23),*GET(rcon,_z,const,24)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C25, C26, C27
Typ_Real3
Def_*GET(rcon,_z,const,25),*GET(rcon,_z,const,26),*GET(rcon,_z,const,27)
Fld_5
Prm_                 C28, C29, C30
Typ_Real3
Def_*GET(rcon,_z,const,28),*GET(rcon,_z,const,29),*GET(rcon,_z,const,30)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C31, C32, C33
Typ_Real3
Def_*GET(rcon,_z,const,31),*GET(rcon,_z,const,32),*GET(rcon,_z,const,33)
Fld_5
Prm_                 C34, C35, C36
Typ_Real3
Def_*GET(rcon,_z,const,34),*GET(rcon,_z,const,35),*GET(rcon,_z,const,36)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C37, C38, C39
Typ_Real3
Def_*GET(rcon,_z,const,37),*GET(rcon,_z,const,38),*GET(rcon,_z,const,39)
Fld_5
Prm_                 C40, C41, C42
Typ_Real3
Def_*GET(rcon,_z,const,40),*GET(rcon,_z,const,41),*GET(rcon,_z,const,42)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C43, C44, C45
Typ_Real3
Def_*GET(rcon,_z,const,43),*GET(rcon,_z,const,44),*GET(rcon,_z,const,45)
Fld_5
Prm_                 C46, C47, C48
Typ_Real3
Def_*GET(rcon,_z,const,46),*GET(rcon,_z,const,47),*GET(rcon,_z,const,48)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C49, C50, C51
Typ_Real3
Def_*GET(rcon,_z,const,49),*GET(rcon,_z,const,50),*GET(rcon,_z,const,51)
Fld_5
Prm_                 C52, C53, C54
Typ_Real3
Def_*GET(rcon,_z,const,52),*GET(rcon,_z,const,53),*GET(rcon,_z,const,54)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C55, C56, C57
Typ_Real3
Def_*GET(rcon,_z,const,55),*GET(rcon,_z,const,56),*GET(rcon,_z,const,57)
Fld_5
Prm_                 C58, C59, C60
Typ_Real3
Def_*GET(rcon,_z,const,58),*GET(rcon,_z,const,59),*GET(rcon,_z,const,60)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C61, C62, C63
Typ_Real3
Def_*GET(rcon,_z,const,61),*GET(rcon,_z,const,62),*GET(rcon,_z,const,63)
Fld_5
Prm_                 C64, C65, C66
Typ_Real3
Def_*GET(rcon,_z,const,64),*GET(rcon,_z,const,65),*GET(rcon,_z,const,66)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C67, C68, C69
Typ_Real3
Def_*GET(rcon,_z,const,67),*GET(rcon,_z,const,68),*GET(rcon,_z,const,69)
Fld_5
Prm_                 C70, C71, C72
Typ_Real3
Def_*GET(rcon,_z,const,70),*GET(rcon,_z,const,71),*GET(rcon,_z,const,72)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C73, C74, C75
Typ_Real3
Def_*GET(rcon,_z,const,73),*GET(rcon,_z,const,74),*GET(rcon,_z,const,75)
Fld_5
Prm_                 C76, C77, C78
Typ_Real3
Def_*GET(rcon,_z,const,76),*GET(rcon,_z,const,77),*GET(rcon,_z,const,78)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_27A
:! 
:N Fnc_rcon_27B
:S   7377,   167,  7187
:T Cmd
:C )! Fnc_rcon_27B
:C )/GO
:A Element 27
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MATRIX27
:H Hlp_E_S4.27
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_z)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Coefficients for Unsymmetric Matrices (KEYOPT(2)=2)
Fld_3
Prm_                    C1, C2, C3
Typ_Real3
Def_*GET(rcon,_z,const,1),*GET(rcon,_z,const,2),*GET(rcon,_z,const,3)
Fld_6
Prm_                    C4, C5, C6
Typ_Real3
Def_*GET(rcon,_z,const,4),*GET(rcon,_z,const,5),*GET(rcon,_z,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!  
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    C7, C8, C9
Typ_Real3
Def_*GET(rcon,_z,const,7),*GET(rcon,_z,const,8),*GET(rcon,_z,const,9)
Fld_5
Prm_                 C10, C11, C12
Typ_Real3
Def_*GET(rcon,_z,const,10),*GET(rcon,_z,const,11),*GET(rcon,_z,const,12)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C13, C14, C15
Typ_Real3
Def_*GET(rcon,_z,const,13),*GET(rcon,_z,const,14),*GET(rcon,_z,const,15)
Fld_5
Prm_                 C16, C17, C18
Typ_Real3
Def_*GET(rcon,_z,const,16),*GET(rcon,_z,const,17),*GET(rcon,_z,const,18)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C19, C20, C21
Typ_Real3
Def_*GET(rcon,_z,const,19),*GET(rcon,_z,const,20),*GET(rcon,_z,const,21)
Fld_5
Prm_                 C22, C23, C24
Typ_Real3
Def_*GET(rcon,_z,const,22),*GET(rcon,_z,const,23),*GET(rcon,_z,const,24)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C25, C26, C27
Typ_Real3
Def_*GET(rcon,_z,const,25),*GET(rcon,_z,const,26),*GET(rcon,_z,const,27)
Fld_5
Prm_                 C28, C29, C30
Typ_Real3
Def_*GET(rcon,_z,const,28),*GET(rcon,_z,const,29),*GET(rcon,_z,const,30)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C31, C32, C33
Typ_Real3
Def_*GET(rcon,_z,const,31),*GET(rcon,_z,const,32),*GET(rcon,_z,const,33)
Fld_5
Prm_                 C34, C35, C36
Typ_Real3
Def_*GET(rcon,_z,const,34),*GET(rcon,_z,const,35),*GET(rcon,_z,const,36)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C37, C38, C39
Typ_Real3
Def_*GET(rcon,_z,const,37),*GET(rcon,_z,const,38),*GET(rcon,_z,const,39)
Fld_5
Prm_                 C40, C41, C42
Typ_Real3
Def_*GET(rcon,_z,const,40),*GET(rcon,_z,const,41),*GET(rcon,_z,const,42)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C43, C44, C45
Typ_Real3
Def_*GET(rcon,_z,const,43),*GET(rcon,_z,const,44),*GET(rcon,_z,const,45)
Fld_5
Prm_                 C46, C47, C48
Typ_Real3
Def_*GET(rcon,_z,const,46),*GET(rcon,_z,const,47),*GET(rcon,_z,const,48)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C49, C50, C51
Typ_Real3
Def_*GET(rcon,_z,const,49),*GET(rcon,_z,const,50),*GET(rcon,_z,const,51)
Fld_5
Prm_                 C52, C53, C54
Typ_Real3
Def_*GET(rcon,_z,const,52),*GET(rcon,_z,const,53),*GET(rcon,_z,const,54)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C55, C56, C57
Typ_Real3
Def_*GET(rcon,_z,const,55),*GET(rcon,_z,const,56),*GET(rcon,_z,const,57)
Fld_5
Prm_                 C58, C59, C60
Typ_Real3
Def_*GET(rcon,_z,const,58),*GET(rcon,_z,const,59),*GET(rcon,_z,const,60)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C61, C62, C63
Typ_Real3
Def_*GET(rcon,_z,const,61),*GET(rcon,_z,const,62),*GET(rcon,_z,const,63)
Fld_5
Prm_                 C64, C65, C66
Typ_Real3
Def_*GET(rcon,_z,const,64),*GET(rcon,_z,const,65),*GET(rcon,_z,const,66)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C67, C68, C69
Typ_Real3
Def_*GET(rcon,_z,const,67),*GET(rcon,_z,const,68),*GET(rcon,_z,const,69)
Fld_5
Prm_                 C70, C71, C72
Typ_Real3
Def_*GET(rcon,_z,const,70),*GET(rcon,_z,const,71),*GET(rcon,_z,const,72)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C73, C74, C75
Typ_Real3
Def_*GET(rcon,_z,const,73),*GET(rcon,_z,const,74),*GET(rcon,_z,const,75)
Fld_5
Prm_                 C76, C77, C78
Typ_Real3
Def_*GET(rcon,_z,const,76),*GET(rcon,_z,const,77),*GET(rcon,_z,const,78)
! Exclude_from_paths
Cmd_RMORE
P_CM(FULL_ANS)
Fld_2
Prm_                 C79, C80, C81
Typ_Real3
Def_*GET(rcon,_z,const,79),*GET(rcon,_z,const,80),*GET(rcon,_z,const,81)
Fld_5
Prm_                 C82, C83, C84
Typ_Real3
Def_*GET(rcon,_z,const,82),*GET(rcon,_z,const,83),*GET(rcon,_z,const,84)
! Exclude_from_paths
Cmd_RMORE
P_CM(FULL_ANS)
Fld_2
Prm_                 C85, C86, C87
Typ_Real3
Def_*GET(rcon,_z,const,85),*GET(rcon,_z,const,86),*GET(rcon,_z,const,87)
Fld_5
Prm_                 C88, C89, C90
Typ_Real3
Def_*GET(rcon,_z,const,88),*GET(rcon,_z,const,89),*GET(rcon,_z,const,90)
! Exclude_from_paths
Cmd_RMORE
P_CM(FULL_ANS)
Fld_2
Prm_                 C91, C92, C93
Typ_Real3
Def_*GET(rcon,_z,const,91),*GET(rcon,_z,const,92),*GET(rcon,_z,const,93)
Fld_5
Prm_                 C94, C95, C96
Typ_Real3
Def_*GET(rcon,_z,const,94),*GET(rcon,_z,const,95),*GET(rcon,_z,const,96)
! Exclude_from_paths
Cmd_RMORE
P_CM(FULL_ANS)
Fld_2
Prm_                 C97, C98, C99
Typ_Real3
Def_*GET(rcon,_z,const,97),*GET(rcon,_z,const,98),*GET(rcon,_z,const,99)
Fld_5
Prm_              C100, C101, C102
Typ_Real3
Def_*GET(rcon,_z,const,100),*GET(rcon,_z,const,101),*GET(rcon,_z,const,102)
! Exclude_from_paths
Cmd_RMORE
P_CM(FULL_ANS)
Fld_2
Prm_              C103, C104, C105
Typ_Real3
Def_*GET(rcon,_z,const,103),*GET(rcon,_z,const,104),*GET(rcon,_z,const,105)
Fld_5
Prm_              C106, C107, C108
Typ_Real3
Def_*GET(rcon,_z,const,106),*GET(rcon,_z,const,107),*GET(rcon,_z,const,108)
! Exclude_from_paths
Cmd_RMORE
P_CM(FULL_ANS)
Fld_2
Prm_              C109, C110, C111
Typ_Real3
Def_*GET(rcon,_z,const,109),*GET(rcon,_z,const,110),*GET(rcon,_z,const,111)
Fld_5
Prm_              C112, C113, C114
Typ_Real3
Def_*GET(rcon,_z,const,112),*GET(rcon,_z,const,113),*GET(rcon,_z,const,114)
! Exclude_from_paths
Cmd_RMORE
P_CM(FULL_ANS)
Fld_2
Prm_              C115, C116, C117
Typ_Real3
Def_*GET(rcon,_z,const,115),*GET(rcon,_z,const,116),*GET(rcon,_z,const,117)
Fld_5
Prm_              C118, C119, C120
Typ_Real3
Def_*GET(rcon,_z,const,118),*GET(rcon,_z,const,119),*GET(rcon,_z,const,120)
! Exclude_from_paths
Cmd_RMORE
P_CM(FULL_ANS)
Fld_2
Prm_              C121, C122, C123
Typ_Real3
Def_*GET(rcon,_z,const,121),*GET(rcon,_z,const,122),*GET(rcon,_z,const,123)
Fld_5
Prm_              C124, C125, C126
Typ_Real3
Def_*GET(rcon,_z,const,124),*GET(rcon,_z,const,125),*GET(rcon,_z,const,126)
! Exclude_from_paths
Cmd_RMORE
P_CM(FULL_ANS)
Fld_2
Prm_              C127, C128, C129
Typ_Real3
Def_*GET(rcon,_z,const,127),*GET(rcon,_z,const,128),*GET(rcon,_z,const,129)
Fld_5
Prm_              C130, C131, C132
Typ_Real3
Def_*GET(rcon,_z,const,130),*GET(rcon,_z,const,131),*GET(rcon,_z,const,132)
! Exclude_from_paths
Cmd_RMORE
P_CM(FULL_ANS)
Fld_2
Prm_              C133, C134, C135
Typ_Real3
Def_*GET(rcon,_z,const,133),*GET(rcon,_z,const,134),*GET(rcon,_z,const,135)
Fld_5
Prm_              C136, C137, C138
Typ_Real3
Def_*GET(rcon,_z,const,136),*GET(rcon,_z,const,137),*GET(rcon,_z,const,138)
! Exclude_from_paths
Cmd_RMORE
P_CM(FULL_ANS)
Fld_2
Prm_              C139, C140, C141
Typ_Real3
Def_*GET(rcon,_z,const,139),*GET(rcon,_z,const,140),*GET(rcon,_z,const,141)
Fld_5
Prm_              C142, C143, C144
Typ_Real3
Def_*GET(rcon,_z,const,142),*GET(rcon,_z,const,143),*GET(rcon,_z,const,144)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_27B
:! 
:N Fnc_rcon_27C
:S   3535,   167,  3345
:T Cmd
:C )! Fnc_rcon_27C
:C )/GO
:A Element 27
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MATRIX27
:H Hlp_E_S4.27
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_z)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Coefficients for Skew Symmetric Matrices (KEYOPT(2)=3)
Fld_3
Prm_                    C1, C2, C3
Typ_Real3
Def_*GET(rcon,_z,const,1),*GET(rcon,_z,const,2),*GET(rcon,_z,const,3)
Fld_6
Prm_                    C4, C5, C6
Typ_Real3
Def_*GET(rcon,_z,const,4),*GET(rcon,_z,const,5),*GET(rcon,_z,const,6)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    C7, C8, C9
Typ_Real3
Def_*GET(rcon,_z,const,7),*GET(rcon,_z,const,8),*GET(rcon,_z,const,9)
Fld_5
Prm_                 C10, C11, C12
Typ_Real3
Def_*GET(rcon,_z,const,10),*GET(rcon,_z,const,11),*GET(rcon,_z,const,12)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C13, C14, C15
Typ_Real3
Def_*GET(rcon,_z,const,13),*GET(rcon,_z,const,14),*GET(rcon,_z,const,15)
Fld_5
Prm_                 C16, C17, C18
Typ_Real3
Def_*GET(rcon,_z,const,16),*GET(rcon,_z,const,17),*GET(rcon,_z,const,18)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C19, C20, C21
Typ_Real3
Def_*GET(rcon,_z,const,19),*GET(rcon,_z,const,20),*GET(rcon,_z,const,21)
Fld_5
Prm_                 C22, C23, C24
Typ_Real3
Def_*GET(rcon,_z,const,22),*GET(rcon,_z,const,23),*GET(rcon,_z,const,24)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C25, C26, C27
Typ_Real3
Def_*GET(rcon,_z,const,25),*GET(rcon,_z,const,26),*GET(rcon,_z,const,27)
Fld_5
Prm_                 C28, C29, C30
Typ_Real3
Def_*GET(rcon,_z,const,28),*GET(rcon,_z,const,29),*GET(rcon,_z,const,30)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C31, C32, C33
Typ_Real3
Def_*GET(rcon,_z,const,31),*GET(rcon,_z,const,32),*GET(rcon,_z,const,33)
Fld_5
Prm_                 C34, C35, C36
Typ_Real3
Def_*GET(rcon,_z,const,34),*GET(rcon,_z,const,35),*GET(rcon,_z,const,36)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C37, C38, C39
Typ_Real3
Def_*GET(rcon,_z,const,37),*GET(rcon,_z,const,38),*GET(rcon,_z,const,39)
Fld_5
Prm_                 C40, C41, C42
Typ_Real3
Def_*GET(rcon,_z,const,40),*GET(rcon,_z,const,41),*GET(rcon,_z,const,42)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C43, C44, C45
Typ_Real3
Def_*GET(rcon,_z,const,43),*GET(rcon,_z,const,44),*GET(rcon,_z,const,45)
Fld_5
Prm_                 C46, C47, C48
Typ_Real3
Def_*GET(rcon,_z,const,46),*GET(rcon,_z,const,47),*GET(rcon,_z,const,48)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C49, C50, C51
Typ_Real3
Def_*GET(rcon,_z,const,49),*GET(rcon,_z,const,50),*GET(rcon,_z,const,51)
Fld_5
Prm_                 C52, C53, C54
Typ_Real3
Def_*GET(rcon,_z,const,52),*GET(rcon,_z,const,53),*GET(rcon,_z,const,54)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C55, C56, C57
Typ_Real3
Def_*GET(rcon,_z,const,55),*GET(rcon,_z,const,56),*GET(rcon,_z,const,57)
Fld_5
Prm_                 C58, C59, C60
Typ_Real3
Def_*GET(rcon,_z,const,58),*GET(rcon,_z,const,59),*GET(rcon,_z,const,60)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                 C61, C62, C63
Typ_Real3
Def_*GET(rcon,_z,const,61),*GET(rcon,_z,const,62),*GET(rcon,_z,const,63)
Fld_5
Prm_                 C64, C65, C66
Typ_Real3
Def_*GET(rcon,_z,const,64),*GET(rcon,_z,const,65),*GET(rcon,_z,const,66)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_27C
:! 
:N Fnc_rcon_28
:S    641,   142,   477
:T Cmd
:C )! Fnc_rcon_28
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL28
:H Hlp_E_S4.28
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Panel thickness             THCK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Ultimate shear stress       SULT
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Added mass/unit area      ADMSUA
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_28
:! 
:N Fnc_rcon_281
:S    233,   138,    72
:T Cmd
:C )! Fnc_rcon_281
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL281
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL281'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC_R
:E End_OF_Fnc_rcon_281
:! 
:N Fnc_rcon_285
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_285
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID285
:H Hlp_E_S4.285
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID285'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_285
:! 
:N Fnc_rcon_288
:S    236,   145,    68
:T Cmd
:C )! Fnc_rcon_288
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PIPE288
:H Hlp_E_S4.288
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PIPE288'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_288
:! 
:N Fnc_rcon_289
:S    236,   145,    68
:T Cmd
:C )! Fnc_rcon_289
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PIPE289
:H Hlp_E_S4.289
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PIPE289'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_289
:! 
:N Fnc_rcon_29
:S    475,   142,   311
:T Cmd
:C )! Fnc_rcon_29
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID29
:H Hlp_E_S4.29
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Reference pressure          PREF
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_29
:! 
:N Fnc_rcon_290
:S    238,   146,    69
:T Cmd
:C )! Fnc_rcon_290
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for ELBOW290
:H Hlp_E_S4.290
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'ELBOW290'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_290
:! 
:N Fnc_rcon_2A
:S    559,   148,   389
:T Cmd
:C )! Fnc_rcon_2A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE2
:H Hlp_E_S4.2
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane Stress with Thickness (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_2A
:! 
:N Fnc_rcon_2B
:S    237,   148,    67
:T Cmd
:C )! Fnc_rcon_2B
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE2
:H Hlp_E_S4.2
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE2'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_2B
:! 
:N Fnc_rcon_3
:S    211,   123,    67
:T Cmd
:C )! Fnc_rcon_3
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for BEAM3
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'BEAM3'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_3
:! 
:N Fnc_rcon_30
:S    475,   142,   311
:T Cmd
:C )! Fnc_rcon_30
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID30
:H Hlp_E_S4.30
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Reference pressure          PREF
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_30
:! 
:N Fnc_rcon_300
:S    808,   140,   661
:T Cmd
:C )! Fnc_rcon_300
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for USER300
:H Hlp_C_R
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)/GO
Cmd_)*CSET,100,101,'NOTE',' '
Cmd_)*CSET,110,110,'A generic real constant dialog  '
Cmd_)*CSET,111,111,' will be displayed for the      '
Cmd_)*CSET,112,112,' USER300       &' 
Cmd_)*CSET,113,113,' element type.  If more than 6  '
Cmd_)*CSET,114,114,' real constants are required,   '
Cmd_)*CSET,115,115,' please        &'
Cmd_)*CSET,116,116,' use either the ANSYS command   '
Cmd_)*CSET,117,117,' line or a system editor.       '
Cmd_)*CSET,118,122,' ',' ',' ',' ',' '
Cmd_)*CSET,123,131,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,132,139,' ',' ',' ',' ',' ',' ',' ',' '
Cal_Fnc_Message
Cal_Fnc_rcon_00
:E End
:! 
:N Fnc_rcon_31
:S    723,   141,   560
:T Cmd
:C )! Fnc_rcon_31
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for LINK31
:H Hlp_E_S4.31
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Radiating surface area      AREA
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Geometric form factor FORMFACTOR
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Emissivity            EMISSIVITY
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Stefan-Boltzmann Constant    SBC
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_31
:! 
:N Fnc_rcon_32
:S    216,   126,    68
:T Cmd
:C )! Fnc_rcon_32
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for LINK32
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'LINK32'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_32
:! 
:N Fnc_rcon_33
:S    474,   141,   311
:T Cmd
:C )! Fnc_rcon_33
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for LINK33
:H Hlp_E_S4.33
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Cross-sectional area        AREA
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_33
:! 
:N Fnc_rcon_34
:S    640,   141,   477
:T Cmd
:C )! Fnc_rcon_34
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for LINK34
:H Hlp_E_S4.34
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Convection surface area     AREA
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Empirical coefficient         EN
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Input constant                CC
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_34
:! 
:N Fnc_rcon_35
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_35
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE35
:H Hlp_E_S4.35
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE35'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_35
:! 
:N Fnc_rcon_36
:S    942,   142,   778
:T Cmd
:C )! Fnc_rcon_36
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOURC36
:H Hlp_E_S4.36
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Source type                 TYPE
Typ_Lis_OptionB
LIS_Coil         (1),1
LIS_Bar          (2),2
LIS_Arc          (3),3
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Total current thru source    CUR
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Characteristic Y dimension    DY
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Characteristic Z dimension    DZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!  
! Exclude_from_paths
Cmd_RMORE
Fld_4
Prm_Converg crit for Hs calcs    EPS
Typ_Real
Def_*GET(rcon,_RC_SET,const,9)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_36
:! 
:N Fnc_rcon_37
:S   1573,   143,  1408
:T Cmd
:C )! Fnc_rcon_37
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COMBIN37
:H Hlp_E_S4.37
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Spring stiffness            STIF
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Damping coefficient         DAMP
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Nodal mass at node J        MASJ
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_"On" control value         ONVAL
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_"Off" control value       OFFVAL
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Element load              AFORCE
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!  
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Nodal mass at node I        MASI
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
Prm_Initial element status     START
Typ_Int
Def_*GET(rcon,_RC_SET,const,8)
!  
Fld_4
Prm_1st scalar in RVMOD equation  C1
Typ_Real
Def_*GET(rcon,_RC_SET,const,9)
Fld_5
Prm_1st exponent in RVMOD eqn     C2
Typ_Real
Def_*GET(rcon,_RC_SET,const,10)
Fld_6
Prm_2nd scalar in RVMOD equation  C3
Typ_Real
Def_*GET(rcon,_RC_SET,const,11)
Fld_7
Prm_2nd exponent in RVMOD eqn     C4
Typ_Real
Def_*GET(rcon,_RC_SET,const,12)
!  
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Limiting sliding force    FSLIDE
Typ_Real
Def_*GET(rcon,_RC_SET,const,13)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_37
:! 
:N Fnc_rcon_38
:S    265,   127,   116
:T Cmd
:C )! Fnc_rcon_38
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID38
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cal_Fnc_rcon_38A,2,EQ,0
Cal_Fnc_rcon_38B,2,EQ,2
:E End_OF_Fnc_rcon_38
:! 
:N Fnc_rcon_38A
:S   1207,   152,  1032
:T Cmd
:C )! Fnc_rcon_38A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID38
:H Hlp_E_S4.38
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constants for Concentric Circular Cylinders (KEYOPT(3)=0)
Fld_3
Prm_Radius of outer cylinder      R2
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Radius of inner cylinder      R1
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Length of cylinders            L
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Darcy friction factor (turb)   F
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Est of max relative amplitude DX
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Est of max relative amplitude DZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!  
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Est of resonant X frequency   WX
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
Prm_Est of resonant Z frequency   WZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_38A
:! 
:N Fnc_rcon_38B
:S   1375,   152,  1200
:T Cmd
:C )! Fnc_rcon_38B
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID38
:H Hlp_E_S4.38
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constants for Concentric Arbitrary Cylinders (KEYOPT(3)=2)
Fld_3
Prm_Outer boundary fluid mass     M2
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Inner boundary fluid mass     M1
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Hydrodynamic mass in X dir   MHX
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Hydrodynamic mass in Z dir   MHZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Est of max relative amplitude DX
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Est of max relative amplitude DZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!  
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Est of resonant X frequency   WX
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
Prm_Est of resonant Z frequency   WZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
Fld_4
Prm_Flow + geometry const for X   CX
Typ_Real
Def_*GET(rcon,_RC_SET,const,9)
Fld_5
Prm_Flow + geometry const for Z   CZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,10)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_38B
:! 
:N Fnc_rcon_39
:S   3151,   143,  2986
:T Cmd
:C )! Fnc_rcon_39
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COMBIN39
:H Hlp_E_S4.39
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Displacement-force curve data          D             F
Fld_3
Prm_                    Data set 1
Typ_Real2
Def_*GET(rcon,_RC_SET,const,1),*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_                    Data set 2
Typ_Real2
Def_*GET(rcon,_RC_SET,const,3),*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_                    Data set 3
Typ_Real2
Def_*GET(rcon,_RC_SET,const,5),*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!  
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 4
Typ_Real2
Def_*GET(rcon,_RC_SET,const,7),*GET(rcon,_RC_SET,const,8)
Fld_4
Prm_                    Data set 5
Typ_Real2
Def_*GET(rcon,_RC_SET,const,9),*GET(rcon,_RC_SET,const,10)
Fld_6
Prm_                    Data set 6
Typ_Real2
Def_*GET(rcon,_RC_SET,const,11),*GET(rcon,_RC_SET,const,12)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 7
Typ_Real2
Def_*GET(rcon,_RC_SET,const,13),*GET(rcon,_RC_SET,const,14)
Fld_4
Prm_                    Data set 8
Typ_Real2
Def_*GET(rcon,_RC_SET,const,15),*GET(rcon,_RC_SET,const,16)
Fld_6
Prm_                    Data set 9
Typ_Real2
Def_*GET(rcon,_RC_SET,const,17),*GET(rcon,_RC_SET,const,18)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 10
Typ_Real2
Def_*GET(rcon,_RC_SET,const,19),*GET(rcon,_RC_SET,const,20)
Fld_4
Prm_                    Data set 11
Typ_Real2
Def_*GET(rcon,_RC_SET,const,21),*GET(rcon,_RC_SET,const,22)
Fld_6
Prm_                    Data set 12
Typ_Real2
Def_*GET(rcon,_RC_SET,const,23),*GET(rcon,_RC_SET,const,24)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 13
Typ_Real2
Def_*GET(rcon,_RC_SET,const,25),*GET(rcon,_RC_SET,const,26)
Fld_4
Prm_                    Data set 14
Typ_Real2
Def_*GET(rcon,_RC_SET,const,27),*GET(rcon,_RC_SET,const,28)
Fld_6
Prm_                    Data set 15
Typ_Real2
Def_*GET(rcon,_RC_SET,const,29),*GET(rcon,_RC_SET,const,30)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 16
Typ_Real2
Def_*GET(rcon,_RC_SET,const,31),*GET(rcon,_RC_SET,const,32)
Fld_4
Prm_                    Data set 17
Typ_Real2
Def_*GET(rcon,_RC_SET,const,33),*GET(rcon,_RC_SET,const,34)
Fld_6
Prm_                    Data set 18
Typ_Real2
Def_*GET(rcon,_RC_SET,const,35),*GET(rcon,_RC_SET,const,36)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 19
Typ_Real2
Def_*GET(rcon,_RC_SET,const,37),*GET(rcon,_RC_SET,const,38)
Fld_4
Prm_                    Data set 20
Typ_Real2
Def_*GET(rcon,_RC_SET,const,39),*GET(rcon,_RC_SET,const,40)
 Fld_0
 Typ_Sep
 Fld_6
K_FL(EDFRMPK1)
Typ_REAL
Prm_Graphical Offset         GOFFST
Def_*GET(rcon,_RC_SET,const,41)
 Fld_7
K_FL(EDFRMPK1)
Typ_INT
Prm_ID Number                    ID
Def_*GET(rcon,_RC_SET,const,42)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
K_CM(edfrmpk1)
Cmd_)KEYW,EDFRMPK1,0
Cmd_)/GO
:E End_OF_Fnc_rcon_39
:! 
:N Fnc_rcon_4
:S   1493,   137,  1335
:T Cmd
:C )! Fnc_rcon_4
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for BEAM4
:H Hlp_E_S4.4
Cmd_R
Fld_0
Typ_Lab
Prm_        *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Cross-sectional area        AREA
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Area moment of inertia       IZZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Area moment of inertia       IYY
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Thickness along Z axis       TKZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Thickness along Y axis       TKY
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Orientation about X axis   THETA
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Initial strain             ISTRN
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
Prm_Torsional moment of inertia  IXX
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
Fld_4
Prm_Shear deflection const Z  SHEARZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,9)
Fld_5
Prm_Shear deflection const Y  SHEARY
Typ_Real
Def_*GET(rcon,_RC_SET,const,10)
Fld_6
P_FL(FULL_ANS)
Prm_Rotational frequency        SPIN
Typ_Real
Def_*GET(rcon,_RC_SET,const,11)
Fld_7
Prm_Added mass/unit length    ADDMAS
Typ_Real
Def_*GET(rcon,_RC_SET,const,12)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_4
:! 
:N Fnc_rcon_40
:S    936,   143,   771
:T Cmd
:C )! Fnc_rcon_40
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COMBIN40
:H Hlp_E_S4.40
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Spring constant               K1
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
P_FL(FULL_ANS)
Prm_Damping coefficient            C
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Mass                           M
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Gap size                     GAP
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
P_FL(FULL_ANS)
Prm_Limiting sliding force    FSLIDE
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
P_FL(FULL_ANS)
Prm_Spring const (par to slide)   K2
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_40
:! 
:N Fnc_rcon_41
:S   1028,   142,   864
:T Cmd
:C )! Fnc_rcon_41
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL41
:H Hlp_E_S4.41
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Shell thickness at node I  TK(I)
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_                at node J  TK(J)
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_                at node K  TK(K)
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_                at node L  TK(L)
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Element X-axis rotation    THETA
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Elastic foundation stiffness EFS
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Added mass/unit area      ADMSUA
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_41
:! 
:N Fnc_rcon_42
:S    265,   127,   116
:T Cmd
:C )! Fnc_rcon_42
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE42
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cal_Fnc_rcon_42A,2,EQ,3
Cal_Fnc_rcon_42B,2,NE,3
:E End_OF_Fnc_rcon_42
:! 
:N Fnc_rcon_42A
:S    606,   152,   431
:T Cmd
:C )! Fnc_rcon_42A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE42
:H Hlp_E_S4.42
Cmd_R
Fld_0
Typ_Lab
Prm_        *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane Stress with Thickness (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_42A
:! 
:N Fnc_rcon_42B
:S    235,   144,    68
:T Cmd
:C )! Fnc_rcon_42B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE42
:H Hlp_E_S4.42
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE42'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_42B
:! 
:N Fnc_rcon_43
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_43
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL43
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL43'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_43
:! 
:N Fnc_rcon_44
:S    277,   187,    68
:T Cmd
:C )! Fnc_rcon_44
:A Element 44
:C )/NOPR
:C )*DEL,_z1
:C )_z1=_RC_SET
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for BEAM44
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'BEAM44'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_44
:! 
:N Fnc_rcon_45
:S    265,   127,   116
:T Cmd
:C )! Fnc_rcon_45
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID45
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
Cal_Fnc_rcon_45A,2,EQ,1
Cal_Fnc_rcon_45B,2,NE,1
:E End_OF_Fnc_rcon_45
:! 
:N Fnc_rcon_45A
:S    594,   152,   419
:T Cmd
:C )! Fnc_rcon_45A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID45
:H Hlp_E_S4.45
Cmd_R
Fld_0
Typ_Lab
Prm_        *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Reduced Integration (KEYOPT(2)=1)
Fld_3
Prm_Hourglass stiffness factor HGSTF
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_45A
:! 
:N Fnc_rcon_45B
:S    235,   144,    68
:T Cmd
:C )! Fnc_rcon_45B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID45
:H Hlp_E_S4.45
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID45'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_45B
:! 
:N Fnc_rcon_46
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_46
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID46
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID46'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_46
:! 
:N Fnc_rcon_47
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_47
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INFIN47
:H Hlp_E_S4.47
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INFIN47'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_47
:! 
:N Fnc_rcon_48
:S    220,   128,    70
:T Cmd
:C )! Fnc_rcon_48
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTAC48
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'CONTAC48'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_48
:! 
:N Fnc_rcon_49
:S    220,   128,    70
:T Cmd
:C )! Fnc_rcon_49
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTAC49
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'CONTAC49'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_49
:! 
:N Fnc_rcon_5
:S    226,   138,    67
:T Cmd
:C )! Fnc_rcon_5
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID5
:H Hlp_E_S4.5
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID5'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_5
:! 
:N Fnc_rcon_50
:S    234,   143,    69
:T Cmd
:C )! Fnc_rcon_50
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MATRIX50
:H Hlp_E_S4.50
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'MATRIX50'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_50
:! 
:N Fnc_rcon_51
:S    641,   142,   477
:T Cmd
:C )! Fnc_rcon_51
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL51
:H Hlp_E_S4.51
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Thickness at node I        TK(I)
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Thickness at node J        TK(J)
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Added mass/unit area      ADMSUA
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_51
:! 
:N Fnc_rcon_52
:S   1592,   473,  1097
:T Cmd
:C )! Fnc_rcon_52
:C )/NOPR
:C )KEYW,KEY21,0
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP2
:C )*IF,_z1,EQ,1,THEN
:C )KEYW,KEY21,1
:C )*ENDIF
:C )KEYW,KEY31,0
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP3
:C )*IF,_z1,EQ,1,THEN
:C )KEYW,KEY31,1
:C )*ENDIF
:C )KEYW,KEY51,1
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP5
:C )*IF,_z1,GE,1,THEN
:C )KEYW,KEY51,0
:C )*ENDIF
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CONTAC52
:H Hlp_E_S4.52
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Normal stiffness              KN
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Initial gap size             GAP
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Initial condition          START
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Sticking stiffness            KS
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
K_FL(KEY31)
Prm_KN reduction factor      REDFACT
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
K_FL(KEY51)
Prm_Defined gap normal - X comp.  NX
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
! 
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
! 
! Exclude_from_paths
Cmd_RMORE
Fld_2
K_FL(KEY51)
Prm_Defined gap normal - Y comp.  NY
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
! 
Fld_3
K_FL(KEY51)
Prm_Defined gap normal - Z comp.  NZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
! 
Fld_4
K_FL(KEY21)
Prm_Penetration tolerance       TOLN
Typ_Real
Def_*GET(rcon,_RC_SET,const,9)
! 
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_52
:! 
:N Fnc_rcon_53
:S    252,   118,   112
:T Cmd
:C )! Fnc_rcon_53
:D Real Constant Set Number %(I)_RC_SET%, for PLANE53
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
  Cal_Fnc_rcon_53A,2,LE,1
  Cal_Fnc_rcon_53B,2,GT,1
:E End_OF_Fnc_rcon_53
:! 
:N Fnc_rcon_53A
:S    442,   265,   154
:T Cmd
:C )! Fnc_rcon_53A
:C )/NOPR
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP2
:C )*IF,_z1,EQ,1,THEN
:C )KEYW,KEY1,1
:C )*ELSE
:C )KEYW,KEY1,0
:C )*ENDIF
:C )/GO
:D Real Constant Set Number %(I)_RC_SET%, for PLANE53
:H Hlp_E_S4.53
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE53'
Cmd_)/GO
Cmd_)!
 Fld_2
  Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
Cal_Fnc_rcon_53A1,2,NE,0
Cal_Fnc_rcon_NA_2,2,EQ,0
:E End_OF_Fnc_rcon_53A
:! 
:N Fnc_rcon_53A1
:S   1013,   137,   852
:T Cmd
:C )! Fnc_rcon_53A1
:D Real Constant Set Number %(I)_RC_SET%, for PLANE53
:H Hlp_E_S4.53
Cmd_R
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
!
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_0
 Typ_Lab
 Prm_Real Constant for velocity specification            (KEYOPT(2)=1)
 Fld_8
   Prm_Velocity in x-direction    VELOX
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,6)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_2
   Prm_Velocity in y-direction    VELOY
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,7)
 Fld_0
  Typ_Sep
 Fld_3
   Prm_Angular velocity          OMEGAZ
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,8)
 Fld_4
   Prm_Pivot point x-location      XLOC
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,9)
 Fld_5
   Prm_Pivot point y-location      YLOC
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,10)
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_53A1
:! 
:N Fnc_rcon_53B
:S    258,    81,   154
:T Cmd
:C )! Fnc_rcon_53B
:H Hlp_E_S4.53
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE53'
Cmd_)/GO
Cmd_)!
 Fld_2
  Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
Cal_Fnc_rcon_NA_3,2,NE,0
Cal_Fnc_rcon_53B1,2,EQ,0
:E End_OF_Fnc_rcon_53B
:! 
:N Fnc_rcon_53B1
:S   1575,   417,  1134
:T Cmd
:C )! Fnc_rcon_53B1
:C )/NOPR
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )*IF,_z1,EQ,2,THEN
:C )KEYW,KEY2,1
:C )*ELSE
:C )KEYW,KEY2,0
:C )*ENDIF
:C )*IF,_z1,EQ,3,THEN
:C )KEYW,KEY3,1
:C )*ELSE
:C )KEYW,KEY3,0
:C )*ENDIF
:C )*IF,_z1,EQ,4,THEN
:C )KEYW,KEY4,1
:C )*ELSE
:C )KEYW,KEY4,0
:C )*ENDIF
:C )/GO
:D Real Constant Set Number %(I)_RC_SET%, for PLANE53
:H Hlp_E_S4.53
Cmd_R
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  K_LN(KEY2)
   Prm_Real Constant for voltage forced stranded coil      (KEYOPT(1)=2)
  K_LN(KEY3)
   Prm_Real Constant for circuit-coupled stranded coil     (KEYOPT(1)=3)
  K_LN(KEY4)
   Prm_Real Constant for circuit-coupled massive conductor (KEYOPT(1)=4)
 Fld_3
  K_LN(key4)
   Prm_Coil cross-sectional area   CARE
  K_LN(KEY4)
   Prm_Cond cross-sectional area   CARE
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_4
  K_FL(key4)
   Prm_Total number of coil turns  TURN
   Typ_Real
   Def_*GET(rcon,_RC_SET,const,2)
 Fld_5
  K_LN(key4)
   Prm_Coil length in z-direction  LENG
  K_LN(KEY4)
   Prm_Cond length in z-direction  LENG
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,3)
 Fld_6
  Prm_Current in z-direction      DIRZ
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,4)
 Fld_7
  K_FL(key4)
   Prm_Coil fill factor            FILL
   Typ_Real
   Def_*GET(rcon,_RC_SET,const,5)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_53B1
:! 
:N Fnc_rcon_54
:S    216,   126,    68
:T Cmd
:C )! Fnc_rcon_54
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for BEAM54
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'BEAM54'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_54
:! 
:N Fnc_rcon_55
:S    389,   251,   116
:T Cmd
:C )! Fnc_rcon_55
:C )/nopr
:C )*GET,_zz,ETYP,_ET_TYPE,ATTR,KOP3
:C )keyw,plthck,0
:C )*if,_zz,gt,0,then
:C )keyw,plthck,1
:C )*endif
:C )/go
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE55
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
Cal_Fnc_rcon_55A,2,GT,0
Cal_Fnc_rcon_55D,2,LE,0
:E End_OF_Fnc_rcon_55
:! 
:N Fnc_rcon_55A
:S    864,   152,   689
:T Cmd
:C )! Fnc_rcon_55A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE55
:H Hlp_E_S4.55
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
K_FL(PLTHCK)
Typ_Sep
Fld_0
K_FL(PLTHCK)
Typ_Lab
Prm_Real Constants for PLANE55 with Plane Thickness (KEYOPT(3)=3)
Fld_3
K_FL(PLTHCK)
Prm_Z-Depth                    THICK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constants for PLANE55 with Mass Transport (KEYOPT(8)>0)
Fld_4
Prm_Mass transport velocity       VX
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Mass transport velocity       VY
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_55A
:! 
:N Fnc_rcon_55B
:S    243,   152,    68
:T Cmd
:C )! Fnc_rcon_55B
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE55
:H Hlp_E_S4.55
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE55'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_55B
:! 
:N Fnc_rcon_55C
:S    562,   152,   387
:T Cmd
:C )! Fnc_rcon_55C
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE55
:H Hlp_E_S4.55
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constants for PLANE55 with Plane Thickness (KEYOPT(3)=3)
Fld_3
Prm_Z-Depth                    THICK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_55C
:! 
:N Fnc_rcon_55D
:S    268,   129,   116
:T Cmd
:C )! Fnc_rcon_55D
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE55
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cal_Fnc_rcon_55C,2,GE,3
Cal_Fnc_rcon_55B,2,LT,3
:E End_OF_Fnc_rcon_55D
:! 
:N Fnc_rcon_56
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_56
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for HYPER56
:H Hlp_E_S4.56
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'HYPER56'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_56
:! 
:N Fnc_rcon_57
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_57
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL57
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL57'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_57
:! 
:N Fnc_rcon_58
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_58
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for HYPER58
:H Hlp_E_S4.58
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'HYPER58'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_58
:! 
:N Fnc_rcon_59
:S   1564,   141,  1401
:T Cmd
:C )! Fnc_rcon_59
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PIPE59
:H Hlp_E_S4.59
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Pipe outside diameter         DO
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Pipe wall thickness        TWALL
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Normal drag coefficient       CD
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Coefficient of inertia        CM
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Internal fluid density     DENSO
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Z coord of fluid free surf   FSO
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!  
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Fluid+hardware unit mass  CENMPL
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
Prm_Added mass ratio              CI
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
Fld_4
Prm_Buoyancy force ratio          CB
Typ_Real
Def_*GET(rcon,_RC_SET,const,9)
Fld_5
Prm_Tangential drag coefficient   CT
Typ_Real
Def_*GET(rcon,_RC_SET,const,10)
Fld_6
Prm_Initial axial strain        ISTR
Typ_Real
Def_*GET(rcon,_RC_SET,const,11)
Fld_7
Prm_Density of external insul DENSIN
Typ_Real
Def_*GET(rcon,_RC_SET,const,12)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Thickness of external insul TKIN
Typ_Real
Def_*GET(rcon,_RC_SET,const,13)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_59
:! 
:N Fnc_rcon_60
:S    216,   126,    68
:T Cmd
:C )! Fnc_rcon_60
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PIPE60
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PIPE60'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_60
:! 
:N Fnc_rcon_61
:S    641,   142,   477
:T Cmd
:C )! Fnc_rcon_61
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL61
:H Hlp_E_S4.61
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Shell thickness at node I  TK(I)
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Shell thickness at node J  TK(J)
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Added mass/unit area      ADMSUA
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_61
:! 
:N Fnc_rcon_62
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_62
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID62
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID62'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_62
:! 
:N Fnc_rcon_63
:S   1350,   142,  1186
:T Cmd
:C )! Fnc_rcon_63
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL63
:H Hlp_E_S4.63
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Shell thickness at node I  TK(I)
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_                at node J  TK(J)
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_                at node K  TK(K)
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_                at node L  TK(L)
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Elastic foundation stiffness EFS
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Element X-axis rotation    THETA
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!  
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Bending mom of inertia ratio RMI
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
Prm_Dist from mid surf to top   CTOP
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
Fld_4
Prm_Dist from mid surf to bot   CBOT
Typ_Real
Def_*GET(rcon,_RC_SET,const,9)
!  
!
! Exclude_from_paths
Cmd_RMORE
!
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Added mass/unit area      ADMSUA
Typ_Real
Def_*GET(rcon,_RC_SET,const,19)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_63
:! 
:N Fnc_rcon_64
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_64
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID64
:H Hlp_E_S4.64
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID64'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_64
:! 
:N Fnc_rcon_65
:S   1742,   142,  1578
:T Cmd
:C )! Fnc_rcon_65
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID65
:H Hlp_E_S4.65
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real constants for rebar 1
Fld_3
Prm_Material number             MAT1
Typ_Int
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Volume ratio                 VR1
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Orientation angle         THETA1
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Orientation angle           PHI1
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real constants for rebar 2
Fld_7
Prm_Material number             MAT2
Typ_Int
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Volume ratio                 VR2
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!  
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Orientation angle         THETA2
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
Fld_3
Prm_Orientation angle           PHI2
Typ_Real
Def_*GET(rcon,_RC_SET,const,8)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real constants for rebar 3
Fld_4
Prm_Material number             MAT3
Typ_Int
Def_*GET(rcon,_RC_SET,const,9)
Fld_5
Prm_Volume ratio                 VR3
Typ_Real
Def_*GET(rcon,_RC_SET,const,10)
Fld_6
Prm_Orientation angle         THETA3
Typ_Real
Def_*GET(rcon,_RC_SET,const,11)
Fld_7
Prm_Orientation angle           PHI3
Typ_Real
Def_*GET(rcon,_RC_SET,const,12)
! 
! Exclude_from_paths
Cmd_RMORE
Fld_0
Typ_Sep
Fld_2
Prm_Crushed stiffness factor   CSTIF
Typ_Real
Def_*GET(rcon,_RC_SET,const,13)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_65
:! 
:N Fnc_rcon_66
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_66
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID66
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'FLUID66'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_66
:! 
:N Fnc_rcon_67
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_67
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE67
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE67'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_67
:! 
:N Fnc_rcon_68
:S    474,   141,   311
:T Cmd
:C )! Fnc_rcon_68
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for LINK68
:H Hlp_E_S4.68
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Cross-sectional area        AREA
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_68
:! 
:N Fnc_rcon_69
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_69
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID69
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID69'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_69
:! 
:N Fnc_rcon_7
:S    215,   125,    69
:T Cmd
:C )! Fnc_rcon_7
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for COMBIN7
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'COMBIN7'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_7
:! 
:N Fnc_rcon_70
:S    265,   127,   116
:T Cmd
:C )! Fnc_rcon_70
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID70
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
Cal_Fnc_rcon_70A,2,EQ,1
Cal_Fnc_rcon_70B,2,NE,1
:E End_OF_Fnc_rcon_70
:! 
:N Fnc_rcon_70A
:S    734,   166,   545
:T Cmd
:C )! Fnc_rcon_70A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID70
:P (FULL_ANS)
:H Hlp_E_S4.70
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Typ_Lab
Prm_Real Constants for Mass Transport Effects (KEYOPT(8)=1)
Fld_3
Prm_X-dir mass transport velocity VX
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Y-dir mass transport velocity VY
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Z-dir mass transport velocity VZ
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_70A
:! 
:N Fnc_rcon_70B
:S    243,   152,    68
:T Cmd
:C )! Fnc_rcon_70B
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID70
:H Hlp_E_S4.70
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID70'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_70B
:! 
:N Fnc_rcon_71
:S   1031,   141,   868
:T Cmd
:C )! Fnc_rcon_71
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for MASS71
:H Hlp_E_S4.71
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_3
Prm_Volume or therm capacitance CON1
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
Fld_4
Prm_Constant for temp function    A1
Typ_Real
Def_*GET(rcon,_RC_SET,const,2)
Fld_5
Prm_Constant for temp function    A2
Typ_Real
Def_*GET(rcon,_RC_SET,const,3)
Fld_6
Prm_Constant for temp function    A3
Typ_Real
Def_*GET(rcon,_RC_SET,const,4)
Fld_7
Prm_Constant for temp function    A4
Typ_Real
Def_*GET(rcon,_RC_SET,const,5)
Fld_8
Prm_Constant for temp function    A5
Typ_Real
Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!  
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_Constant for temp function    A6
Typ_Real
Def_*GET(rcon,_RC_SET,const,7)
!  
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_71
:! 
:N Fnc_rcon_72
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_72
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID72
:H Hlp_E_S4.72
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID72'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_72
:! 
:N Fnc_rcon_73
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_73
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID73
:H Hlp_E_S4.73
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID73'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_73
:! 
:N Fnc_rcon_74
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_74
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for HYPER74
:H Hlp_E_S4.74
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'HYPER74'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_74
:! 
:N Fnc_rcon_75
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_75
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE75
:H Hlp_E_S4.75
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE75'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_75
:! 
:N Fnc_rcon_77
:S    300,   182,    96
:T Cmd
:C )! Fnc_rcon_77
:C )/NOPR
:C )*GET,_z2,ETYP,_ET_TYPE,ATTR,KOP3
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE77
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*PAR(_z2)
Cal_Fnc_rcon_77A,2,EQ,3
Cal_Fnc_rcon_77B,2,NE,3
:E End_OF_Fnc_rcon_77
:! 
:N Fnc_rcon_77A
:S    560,   152,   385
:T Cmd
:C )! Fnc_rcon_77A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE77
:H Hlp_E_S4.77
Cmd_R
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane with Thickness        (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_77A
:! 
:N Fnc_rcon_77B
:S    235,   144,    68
:T Cmd
:C )! Fnc_rcon_77B
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE77
:H Hlp_E_S4.77
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE77'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_77B
:! 
:N Fnc_rcon_78
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_78
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE78
:H Hlp_E_S4.78
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE78'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_78
:! 
:N Fnc_rcon_79
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_79
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID79
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'FLUID79'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_79
:! 
:N Fnc_rcon_8
:S    211,   123,    67
:T Cmd
:C )! Fnc_rcon_8
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for LINK8
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'LINK8'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_8
:! 
:N Fnc_rcon_80
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_80
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID80
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'FLUID80'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_80
:! 
:N Fnc_rcon_81
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_81
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for FLUID81
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'FLUID81'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_81
:! 
:N Fnc_rcon_82
:S    265,   127,   116
:T Cmd
:C )! Fnc_rcon_82
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE82
Inp_P
Cmd_)/NOPR
Cmd_)!
Fld_2
Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cal_Fnc_rcon_82A,2,EQ,3
Cal_Fnc_rcon_82B,2,NE,3
:E End_OF_Fnc_rcon_82
:! 
:N Fnc_rcon_82A
:S    606,   152,   431
:T Cmd
:C )! Fnc_rcon_82A
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE82
:H Hlp_E_S4.82
Cmd_R
Fld_0
Typ_Lab
Prm_        *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Real Constant for Plane Stress with Thickness (KEYOPT(3)=3)
Fld_3
Prm_Thickness                    THK
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_82A
:! 
:N Fnc_rcon_82B
:S    243,   152,    68
:T Cmd
:C )! Fnc_rcon_82B
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE82
:H Hlp_E_S4.82
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE82'
Cmd_)/GO
Cal_Fnc_rcon_NA_2
:E End_OF_Fnc_rcon_82B
:! 
:N Fnc_rcon_83
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_83
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for PLANE83
:H Hlp_E_S4.83
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE83'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_83
:! 
:N Fnc_rcon_84
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_84
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for HYPER84
:H Hlp_E_S4.84
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'HYPER84'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_84
:! 
:N Fnc_rcon_86
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_86
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for HYPER86
:H Hlp_E_S4.86
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'HYPER86'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_86
:! 
:N Fnc_rcon_87
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_87
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID87
:H Hlp_E_S4.87
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID87'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_87
:! 
:N Fnc_rcon_88
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_88
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for VISCO88
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'VISCO88'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_88
:! 
:N Fnc_rcon_89
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_89
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for VISCO89
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'VISCO89'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_89
:! 
:N Fnc_rcon_9
:S    226,   138,    67
:T Cmd
:C )! Fnc_rcon_9
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for INFIN9
:H Hlp_E_S4.9
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INFIN9'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_9
:! 
:N Fnc_rcon_90
:S    237,   147,    68
:T Cmd
:C )! Fnc_rcon_90
:A Element 90
:D Real Constant Set Number %(I)_RC_SET%, for SOLID90
:H Hlp_E_S4.90
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID90'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_90
:! 
:N Fnc_rcon_91
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_91
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL91
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL91'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_91
:! 
:N Fnc_rcon_92
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_92
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID92
:H Hlp_E_S4.92
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID92'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_92
:! 
:N Fnc_rcon_93
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_93
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL93
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL93'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_93
:! 
:N Fnc_rcon_94
:S    179,   142,    30
:T Cmd
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for CIRCU94
:C )! Fnc_rcon_94
:H Hlp_E_S4.94
Inp_P
Cmd_)!
Cal_Fnc_rcon_124
:E END
:! 
:N Fnc_rcon_95
:S    392,   262,   108
:T Cmd
:C )! Fnc_rcon_95
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )*IF,_z1,EQ,1,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID95
:H Hlp_E_S4.95
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID95'
Cmd_)/GO
K_LN(key1)
Cal_Fnc_rcon_NA_2
K_LN(KEY1)
Cal_Fnc_rcon_95_a
:E End_OF_Fnc_rcon_95
:! 
:N Fnc_rcon_95_a
:S    439,   146,   269
:T Cmd
:C )! Fnc_rcon_95_a
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID95
:H Hlp_E_S4.95
Cmd_R
Fld_0
Typ_Lab
Prm_        *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Element Type Reference No. %(I)_ET_TYPE%
!
Fld_2
Typ_INT
Prm_Real Constant Set No.
Def_*PAR(_RC_SET)
Fld_0
Typ_Sep
! 
Fld_3
Prm_Element X-axis rotation    THETA
Typ_Real
Def_*GET(rcon,_RC_SET,const,1)
!
:E End_OF_Fnc_rcon_95_a
:! 
:N Fnc_rcon_96
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_96
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID96
:H Hlp_E_S4.96
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID96'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_96
:! 
:N Fnc_rcon_97
:S    342,   118,   202
:T Cmd
:C )! Fnc_rcon_97
:D Real Constant Set Number %(I)_RC_SET%, for SOLID97
Inp_P
!Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
  Cal_Fnc_rcon_97A,2,EQ,0
  Cal_Fnc_rcon_97A,2,EQ,1
  Cal_Fnc_rcon_97B,2,NE,2
  Cal_Fnc_rcon_97B,2,NE,3
  Cal_Fnc_rcon_97B,2,NE,4
:E End_OF_Fnc_rcon_97
:! 
:N Fnc_rcon_97A
:S    442,   265,   154
:T Cmd
:C )! Fnc_rcon_97A
:C )/NOPR
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP2
:C )*IF,_z1,EQ,1,THEN
:C )KEYW,KEY1,1
:C )*ELSE
:C )KEYW,KEY1,0
:C )*ENDIF
:C )/GO
:D Real Constant Set Number %(I)_RC_SET%, for SOLID97
:H Hlp_E_S4.97
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID97'
Cmd_)/GO
Cmd_)!
 Fld_2
  Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
Cal_Fnc_rcon_97A1,2,NE,0
Cal_Fnc_rcon_NA_2,2,EQ,0
:E End_OF_Fnc_rcon_97A
:! 
:N Fnc_rcon_97A1
:S   1415,   137,  1254
:T Cmd
:C )! Fnc_rcon_97A1
:D Real Constant Set Number %(I)_RC_SET%, for SOLID97
:H Hlp_E_S4.97
Cmd_R
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
!
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
!
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 Fld_0
  Typ_Sep
 Fld_0
 Typ_Lab
 Prm_Real Constant for velocity specification            (KEYOPT(2)=1)
 Fld_4
   Prm_Velocity in x-direction    VELOX
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,9)
 Fld_5
   Prm_Velocity in y-direction    VELOY
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,10)
 Fld_6
   Prm_Velocity in z-direction    VELOZ
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,11)
 Fld_0
  Typ_Sep
 Fld_7
   Prm_Angular velo about X-axis OMEGAX
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,12)
! Exclude_from_paths
Cmd_RMORE
 Fld_2
   Prm_Angular velo about Y-axis OMEGAY
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,13)
 Fld_3
   Prm_Angular velo about Z-axis OMEGAZ
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,14)
 Fld_4
   Prm_Pivot point x-location      XLOC
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,15)
 Fld_5
   Prm_Pivot point y-location      YLOC
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,16)
 Fld_6
   Prm_Pivot point z-location      ZLOC
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,17)
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_97A1
:! 
:N Fnc_rcon_97B
:S    258,    81,   154
:T Cmd
:C )! Fnc_rcon_97B
:H Hlp_E_S4.97
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID97'
Cmd_)/GO
Cmd_)!
 Fld_2
  Typ_Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
Cal_Fnc_rcon_NA_3,2,NE,0
Cal_Fnc_rcon_97B1,2,EQ,0
:E End_OF_Fnc_rcon_97B
:! 
:N Fnc_rcon_97B1
:S   1935,   417,  1494
:T Cmd
:C )! Fnc_rcon_97B1
:C )/NOPR
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )*IF,_z1,EQ,2,THEN
:C )KEYW,KEY2,1
:C )*ELSE
:C )KEYW,KEY2,0
:C )*ENDIF
:C )*IF,_z1,EQ,3,THEN
:C )KEYW,KEY3,1
:C )*ELSE
:C )KEYW,KEY3,0
:C )*ENDIF
:C )*IF,_z1,EQ,4,THEN
:C )KEYW,KEY4,1
:C )*ELSE
:C )KEYW,KEY4,0
:C )*ENDIF
:C )/GO
:D Real Constant Set Number %(I)_RC_SET%, for SOLID97
:H Hlp_E_S4.97
Cmd_R
 Fld_0
  Typ_Lab
  Prm_Element Type Reference No. %(I)_ET_TYPE%
!  
 Fld_2
  Typ_INT
  Prm_Real Constant Set No.
  Def_*PAR(_RC_SET)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  K_LN(KEY2)
   Prm_Real Constant for voltage forced stranded coil      (KEYOPT(1)=2)
  K_LN(KEY3)
   Prm_Real Constant for circuit-coupled stranded coil     (KEYOPT(1)=3)
  K_LN(KEY4)
   Prm_Real Constant for circuit-coupled massive conductor (KEYOPT(1)=4)
 Fld_3
  K_LN(key4)
   Prm_Coil cross-sectional area   CARE
  K_LN(KEY4)
   Prm_Cond cross-sectional area   CARE
  Typ_Real
  Def_*GET(rcon,_RC_SET,const,1)
 Fld_4
  K_FL(key4)
   Prm_Total number of coil turns  TURN
   Typ_Real
   Def_*GET(rcon,_RC_SET,const,2)
 Fld_5
  K_FL(key4)
   Prm_Modeled coil volume         VOLU
   Typ_Real
   Def_*GET(rcon,_RC_SET,const,3)
 Fld_6
  K_FL(key4)
   Prm_X component of the current  DIRX
   Typ_Real
   Def_*GET(rcon,_RC_SET,const,4)
 Fld_7
  K_FL(key4)
   Prm_Y component of the current  DIRY
   Typ_Real
   Def_*GET(rcon,_RC_SET,const,5)
 Fld_8
  K_FL(key4)
   Prm_Z component of the current  DIRZ
   Typ_Real
   Def_*GET(rcon,_RC_SET,const,6)
!  
Cmd_)/NOPR
Cmd_)*GET,_RC_SET,CMD,0,FIELD,2
Cmd_)/GO
!
! Exclude_from_paths
Cmd_RMORE
 K_CM(key4)
  Fld_2
   K_FL(key4)
    Prm_Coil symmetry factor        CSYM
    Typ_Real
    Def_*GET(rcon,_RC_SET,const,7)
  Fld_3
   K_FL(key4)
    Prm_Coil fill factor            FILL
    Typ_Real
    Def_*GET(rcon,_RC_SET,const,8)
!
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End_OF_Fnc_rcon_97B1
:! 
:N Fnc_rcon_98
:S    232,   142,    68
:T Cmd
:C )! Fnc_rcon_98
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SOLID98
:H Hlp_E_S4.98
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID98'
Cmd_)/GO
Cal_Fnc_rcon_NA_1
:E End_OF_Fnc_rcon_98
:! 
:N Fnc_rcon_99
:S    218,   127,    69
:T Cmd
:C )! Fnc_rcon_99
:B Fnc_R
:D Real Constant Set Number %(I)_RC_SET%, for SHELL99
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL99'
Cmd_)/GO
Cal_Fnc_rcon_UNDOC
:E End_OF_Fnc_rcon_99
:! 
:N Fnc_rcon_NA_1
:S    530,    68,   455
:T Cmd
:C )! Fnc_rcon_NA_1
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)/GO
Cmd_)*CSET,100,101,'NOTE',' '
Cmd_)*CSET,110,110
 Fld_2
  Typ_Def_*STR('The %_z9% element type does ')
Cmd_)*CSET,111,111,' not require real constants     '
Cmd_)*CSET,112,112,' '
Cmd_)*CSET,113,113,' '
Cmd_)*CSET,114,122,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,123,131,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,132,139,' ',' ',' ',' ',' ',' ',' ',' '
!  
Cal_Fnc_Message
Cal_Fnc_rcon_NA_f
:E End
:! 
:N Fnc_rcon_NA_2
:S    552,    68,   477
:T Cmd
:C )! Fnc_rcon_NA_2
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)/GO
Cmd_)*CSET,100,101,'NOTE',' '
Cmd_)*CSET,110,110,'Please check and change keyopt  '
Cmd_)*CSET,111,111
 Fld_2
  Typ_Def_*STR(' settings for element %_z9%     ')
Cmd_)*CSET,112,112,' before proceeding.'
Cmd_)*CSET,113,113,' '
Cmd_)*CSET,114,122,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,123,131,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,132,139,' ',' ',' ',' ',' ',' ',' ',' '
!  
Cal_Fnc_Message
Cal_Fnc_rcon_NA_f
:E End
:! 
:N Fnc_rcon_NA_3
:S    633,    68,   541
:T Cmd
:C )! Fnc_rcon_NA_3
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)/GO
Cmd_)*CSET,100,101,'WARNING',' '
Cmd_)*CSET,110,110,'The current keyopt setting for  '
Cmd_)*CSET,111,111
 Fld_2
  Typ_Def_*STR(' the %_z9% element conflicts.   ')
Cmd_)*CSET,112,112,' Please check  &'
Cmd_)*CSET,113,113,'and change settings before '
Cmd_)*CSET,114,114,' doing a solution.'
Cmd_)*CSET,115,122,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,123,131,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,132,139,' ',' ',' ',' ',' ',' ',' ',' '
!
Cal_Fnc_Message
Cal_Fnc_rcon_NA_f
:E End_OF_Fnc_rcon_NA_3
:! 
:N Fnc_rcon_NA_f
:S    132,    68,    57
:T Cmd
:C )! Fnc_rcon_NA_f
Inp_P
Cmd_)/NOPR
Cmd_)RCON
Cmd_)STAT,,, ,,, ,,1
Cmd_)/GO
:E End
:! 
:N Fnc_rcon_UNDOC
:S    532,    70,   455
:T Cmd
:C )! Fnc_rcon_UNDOC
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)/GO
Cmd_)*CSET,100,101,'NOTE',' '
Cmd_)*CSET,110,110
 Fld_2
  Typ_Def_*STR('The %_z9% element type is no')
Cmd_)*CSET,111,111,' longer supported.              '
Cmd_)*CSET,112,112,' '
Cmd_)*CSET,113,113,' '
Cmd_)*CSET,114,122,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,123,131,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,132,139,' ',' ',' ',' ',' ',' ',' ',' '
!  
Cal_Fnc_Message
Cal_Fnc_rcon_NA_f
:E End
:! 
:N Fnc_rcon_UNDOC_R
:S    567,    74,   486
:T Cmd
:C )! Fnc_rcon_UNDOC_R
Inp_P
Cmd_)!
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)/GO
Cmd_)*CSET,100,101,'NOTE',' '
Cmd_)*CSET,110,110
 Fld_2
  Typ_Def_*STR('Real constants for the %_z9%')
Cmd_)*CSET,111,111,' element type are no longer     '
Cmd_)*CSET,112,112,' supported.                     '
Cmd_)*CSET,113,113,' '
Cmd_)*CSET,114,122,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,123,131,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,132,139,' ',' ',' ',' ',' ',' ',' ',' '
!  
Cal_Fnc_Message
Cal_Fnc_rcon_NA_f
:E End
:! 
:N Fnc_res_load
:S    157,    84,    65
:T Command
:C )! Fnc_res_load
:K (SOLUTION)
Inp_P
Cmd_FSRS
 Fld_2
 Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_*CPAR(2)
:E END 
:! 
:N Fnc_res_time
:S    152,    79,    65
:T Command
:C )! Fnc_res
:K (SOLUTION)
Inp_P
Cmd_FSRS
 Fld_2
 Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_*CPAR(2)
:E END 
:! 
:N Fnc_ss_Adv1
:S    571,   200,   364
:T Cmd
:A    Advanced Opts
:D Advanced Smart Size Options
:C )! Fnc_ss_Adv1
:C )/NOPR
:C )KEYW,KEY2,1
:C )*IF,_z(1),le,0,THEN
:C )KEYW,KEY2,0
:C )*ENDIF
:C )/GO
Inp_P
Cmd_ESIZE
K_CM(KEY2)
Fld_2
 Typ_Def_*PAR(_z(1))
Cmd_SMRTSIZE
 Fld_3
 Typ_Def_*PAR(_z(2))
 Fld_4
 Typ_Def_*PAR(_z(3))
 Fld_5
 Typ_Def_*PAR(_z(4))
 Fld_6
 Typ_Def_*PAR(_z(5))
 Fld_7
 Typ_Def_*PAR(_z(6))
 Fld_8
 Typ_Def_*PAR(_z(7))
 Fld_9
 Typ_Def_*PAR(_z(8))
 Fld_10
 Typ_Def_*PAR(_z(9))
 Fld_11
 Typ_Def_*PAR(_z(10))
 Fld_12
 Typ_Def_*PAR(_z(11))
Cal_REFRESH
:E END
:! 
:N Fnc_ss_Advopt
:S   1835,   232,  1596
:T Cmd
:A     Adv Opts
:D Advanced SmartSize Settings
:C )! Fnc_ss_Advopt
:C )/NOPR
:C )*DEL,_Z
:C )*DIM,_Z,,13
:C )*GET,_z4,common,,cfprp7,,int,103
:C )_z1=abs(_z4)
:C )/GO
:H Hlp_UI_advopt
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_0
 Typ_Lab
 Prm_[SMRTSIZE], [ESIZE],  [MOPT]  Smartsizing       
Fld_2
   Prm_SIZE    Global element size 
      Typ_REAL
      Def_*GET(common,,cfprp7,,real,13)
Fld_0
 Typ_Sep
Fld_3
   Prm_FAC      Scaling Factor
   Typ_REAL
   Def_*GET(common,,cfprp7,,real,401)
Fld_0
   Typ_Lab
   Prm_Used only if SIZE is blank or zero
Fld_0
   Typ_Sep
Fld_0
   Typ_Lab
   Prm_Interior Area Expansion and Transition
Fld_4
   Prm_EXPND    Expansion (Contraction) Factor  
      Typ_REAL
      Def_*GET(common,,mesh_tol,,real,1)
Fld_5
   Prm_TRANS    Transition Factor
      Typ_REAL
      Def_*GET(common,,mesh_tol,,real,7)
Fld_0
   Typ_Sep
Fld_0
   Typ_Lab
   Prm_Maximum angle per element for arcs
Fld_6
   Prm_ANGL     Lower-order Elements
      Typ_REAL
      Def_*GET(common,,cfprp7,,int,104)
Fld_7
   Prm_ANGH     Higher-order Elements
      Typ_REAL
      Def_*GET(common,,cfprp7,,int,105)
Fld_0
   Typ_Sep
Fld_0
   Typ_Lab
   Prm_Other Options
Fld_8
   Prm_GRATIO   Proximity Growth Ratio  
      Typ_REAL
      Def_*GET(common,,cfprp7,,real,402)
Fld_9
   Prm_SMHLC    Small Hole Coarsening
   Typ_Logi,Off    ,On
   Def_*GET(common,,mesh_tol,,int,23) 
Fld_10
   Prm_SMANC    Small Angle Coarsening
   Typ_Logi,Off    ,On
   Def_*GET(common,,mesh_tol,,int,25) 
Fld_11
   Prm_MXITR    Max Num of Iterations
      Typ_INT
      Def_*PAR(_z1)
Fld_13
   Typ_Def_1
Cmd_)*SET,_z(11)
Fld_2
  Prm_SPRX     Surface Proximity
     Typ_Lis_OPTIONB
     LIS_Off        ,0
     LIS_On Option 1,1
     LIS_On Option 2,2
     Def_*GET(common,,mesh_tol,,int,22)
Cmd_)/GO
Cal_Fnc_ss_Adv1
:E END
:! 
:N Fnc_ss_MESH
:S    119,    83,    29
:T Cmd
:C )! Fnc_ss_MESH
:A SmrtSize Levels
Inp_P
Cmd_)!
Cal_Fnc_ss_SIZE
:E END
:! 
:N Fnc_ss_SIZE 
:S    690,   274,   409
:T Cmd
:A     Basic
:D Basic SmartSize Settings
:C )! Fnc_ss_SIZE
:C )/NOPR
:C )*GET,_z5,common,,cfprp7,,int,106
:C )*GET,_z4,common,,cfprp7,,int,103
:C )*IF,_z4,lt,0,then
:C )_z5=0
:C )*ENDIF
:C )/GO
:K #(meshtool)
:H Hlp_C_SMRTSIZE
Cmd_SMRTSIZE
K_CM(meshtool)
Fld_0
 Typ_Lab
 Prm_[SMRTSIZE]  Smartsizing 
Fld_0
 Typ_Lab
 Prm_10 (coarse) ... 1 (fine)
Fld_2
 Prm_LVL    Size Level
 Typ_Lis_OptionB
 Lis_10 (coarse),10
 Lis_9            ,9
 Lis_8            ,8
 Lis_7            ,7
 Lis_6  (default) ,6
 Lis_5            ,5
 Lis_4            ,4
 Lis_3            ,3
 Lis_2            ,2
 Lis_1  (fine)    ,1
 Lis_Off          ,0
 Def_*PAR(_z5)
:E END
:! 
:N Fnc_ss_STAT
:S    132,   101,    24
:C )! Fnc_ss_STAT
:T Cmd_N
:A     Status
:D Smart Size Status
Inp_P
Cmd_SMRTSIZE,STAT
:E END
:! 
:N Fnc_tbd
:S    104,    67,    30
:T Command
:C )! Fnc_tbd ORPHAN
Cmd_/com
Fld_2
Prm_To Be Done
:E END
:! 
:N Fnc_thaddtbl
:S   1360,   906,   447
:T Command
:C )! Fnc_thaddtbl
:C )/NOPR
:C )KEYW,ff,0
:C )KEYW,bf,0
:C )KEYW,dl,0
:C )KEYW,bfe,0
:C )*IF,_z7,EQ,'F',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'FK',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'D',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'DK',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'DL',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'DA',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'DL',THEN
:C )KEYW,ff,1
:C )*ELSEIF,_z7,EQ,'BF',THEN
:C )KEYW,bf,1
:C )*ELSEIF,_z7,EQ,'BFL',THEN
:C )KEYW,bf,1
:C )*ELSEIF,_z7,EQ,'BFA',THEN
:C )KEYW,bf,1
:C )*ELSEIF,_z7,EQ,'BFE',THEN
:C )KEYW,bf,1
:C )*ELSEIF,_z7,EQ,'BFK',THEN
:C )KEYW,bf,1
:C )*ELSEIF,_z7,EQ,'BFV',THEN
:C )KEYW,bf,1
:C )*ENDIF
:C )*IF,_z7,EQ,'DL',THEN
:C )KEYW,dl,1
:C )*ENDIF
:C )*IF,_z7,EQ,'BFE',THEN
:C )KEYW,bfe,1
:C )*ENDIF
:C )/NOPR
:C )*SET,_z11,'TBL'
:C )/GOPR
:C)/GO
:D Apply %_z9% on %_z10%
:B Fnc_F_fm
:H Hlp_C_*DIM
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(13)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
Cmd_)!
K_CM(BF)
 Fld_1
  Typ_Def_*PAR(_z7)
 Fld_2
  Typ_Def_P51X
Fld_3
 Typ_DEF_TEMP
Fld_4
 K_FL(bfe)
 Dlm_%
Fld_4
 K_FL(BFE)
 Typ_def_*CPAR(1)
Fld_5
 K_FL(bfe)
 Typ_def_*CPAR(13)
 Dlm_%
Fld_5
 K_FL(BFE)
 Dlm_%
Fld_6
 K_FL(bfe)
 Typ_Lab
Fld_6
 K_FL(BFE)
 Typ_def_*CPAR(13)
 Dlm_%
Fld_7
 K_FL(BFE)
 Typ_Lab
Cal_Fnc_thld
:E End
:! 
:N Fnc_thld
:S   2421,   351,  2063
:T Command
:C )! Fnc_thld
:C )/NOPR
:C )KEYW,dl,0
:C )KEYW,dk,0
:C )KEYW,d,0
:C )KEYW,tbl,0
:C )*IF,_z7,EQ,'DL',THEN
:C )KEYW,dl,1
:C )*ENDIF
:C )*IF,_z7,EQ,'DK',THEN
:C )KEYW,dk,1
:C )*ENDIF
:C )*IF,_z7,EQ,'D',THEN
:C )KEYW,d,1
:C )*ENDIF
:C )*IF,_z11,EQ,'TBL',THEN
:C )KEYW,tbl,1
:C )*ENDIF
:C)/GO
:C )! Fnc_thld
Inp_P
Cmd_)!
K_CM(bf)
 Fld_1
  Typ_Def_*PAR(_z7)
 Fld_2
  Typ_Def_P51X
Fld_3
 K_FL(dk)
 Typ_def_*CPAR(1)
Fld_4
 K_FL(tbl*DL)
 Typ_def_*CPAR(2)
Fld_4
 K_FL(TBL+dl)
 Dlm_%
Fld_5
 K_FL(tbl)
 K_FL(dl*dk*d)
 K_FL(HARMONIC)
 Typ_def_*CPAR(3)
Fld_5
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(3)
Fld_5
 K_FL(tbl+DL)
 Typ_def_*CPAR(3)
Fld_5
 K_FL(TBL+DL)
 Dlm_%
Fld_5
 K_FL(TBL+dl)
 K_FL(D)
 Typ_def_*CPAR(10)
 Dlm_%
Fld_5
 K_FL(TBL+dl)
 Typ_def_*CPAR(13)
 Dlm_%
Fld_6
 K_FL(TBL+DL)
 Typ_def_*CPAR(13)
 Dlm_%
Fld_6
 K_FL(tbl+DL)
 K_FL(HARMONIC)
 Typ_def_*CPAR(4)
Fld_6
 K_FL(tbl+DL)
 K_FL(harmonic)
 Typ_def_*CPAR(4)
Fld_6
 K_FL(tbl+DK)
 K_FL(HARMONIC)
 Typ_def_*CPAR(4)
Fld_6
 K_FL(tbl+DK)
 K_FL(harmonic)
 Typ_def_*CPAR(4)
Fld_6
 K_FL(TBL+dl)
 Typ_Lab
Fld_7
 K_FL(TBL+DL)
 Dlm_%
Fld_7
 K_FL(tbl+DK)
 K_FL(HARMONIC)
 Typ_def_*CPAR(5)
Fld_7
 K_FL(tbl+DK)
 K_FL(harmonic)
 Typ_def_*CPAR(5)
Fld_7
 K_FL(TBL)
 K_FL(DK*D)
Fld_8
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(6)
Fld_8
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(harmonic)
 Typ_def_*CPAR(6)
Fld_8
 K_FL(TBL+DK)
 Typ_def_*CPAR(4)
Fld_8
 K_FL(TBL+D)
Fld_9
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(7)
Fld_9
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(harmonic)
 Typ_def_*CPAR(7)
Fld_9
 K_FL(TBL+DK)
 Typ_def_*CPAR(5)
Fld_10
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(8)
Fld_10
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(harmonic)
 Typ_def_*CPAR(8)
Fld_10
 K_FL(TBL)
 K_FL(DK*D)
 Typ_def_*CPAR(6)
Fld_11
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(9)
Fld_11
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(harmonic)
 Typ_def_*CPAR(9)
Fld_11
 K_FL(TBL)
 K_FL(DK*D)
 Typ_def_*CPAR(7)
Fld_12
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(10)
Fld_12
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(harmonic)
 Typ_def_*CPAR(10)
Fld_12
 K_FL(TBL)
 K_FL(DK*D)
 Typ_def_*CPAR(8)
Fld_13
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(HARMONIC)
 Typ_def_*CPAR(11)
Fld_13
 K_FL(tbl)
 K_FL(DK*D)
 K_FL(harmonic)
 Typ_def_*CPAR(11)
Fld_13
 K_FL(TBL)
 K_FL(DK*D)
 Typ_def_*CPAR(9)
Fld_14
 K_FL(TBL)
 K_FL(DK*D)
 Typ_def_*CPAR(10)
Fld_15
 K_FL(TBL+D)
 Typ_def_*CPAR(11)
:E END
:! 
:N Fnc_thnewtbl
:S    268,   111,   150
:T Command
:C )! Fnc_thnewtbl
:D Apply %_z9% on %_z10%
:H Hlp_C_%_z7% 
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,13,13
 Fld_0
  Prm_Apply Table Loads
 Fld_2
  Prm_Name of new table
  Typ_Char,32,32
!
 Cmd_)/GO
 Cal_Fnc_thnewtbl2
:E END
:! 
:N Fnc_thnewtbl2
:S    744,   108,   629
:T Command
:C )! Fnc_thnewtbl2
:D Add New Table Load
:H Hlp_C_*DIM
! Exclude_from_paths
Cmd_*DIM
 Fld_0
  Typ_Lab
  Prm_[*DIM] Add New Table
 Fld_2
  Typ_Def_*CPAR(13)
 Fld_3
 Typ_Def_TABLE
 Fld_4
  Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
  Prm_NameI   Variable for rows
  Typ_Char,8
 Fld_8
  Prm_NameJ   Variable for cols
  Typ_Char,8
 Fld_9
  Prm_NameK   Variable for planes
  Typ_Char,8
 Fld_10
Prm_CSYSID  Coordinate System Id
  Typ_LIS_OptionB
  LIS_*READ,CSYS
!
Cmd_)!
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Options for new table parameter
   Typ_Lis_RadioB
     Lis_Edit on screen,1
     Lis_Read from file,2
!
  Cal_Fnc_thaddtbl,2,EQ,1,2
  Cal_Fnc_thnewtbl3,2,EQ,2,2
:E END
:! 
:N Fnc_thnewtbl3
:S    305,   106,   192
:T Command
:C )! Fnc_thnewtbl3
:D Read from file
:H Hlp_C_*TREAD
Inp_NoApply
! Exclude_from_paths
Cmd_)*TREAD
 Fld_2
  Typ_Def_*CPAR(13)
 Fld_3
  Prm_File,ext,dir Read from file
  Typ_File
 Fld_6
  Prm_Nskip  Skipped lines number
  Typ_Int
Cal_Fnc_thaddtbl
:E END
:! 
:N Fnc_tholdtable
:S    296,   153,   136
:T Command
:C )! Fnc_tholdtable
:C )/NOPR
:C )*SET,_z11,'TBL'
:C )KEYW,bf,0
:C )/GOPR
:D Apply %_z9% on %_z10%
Cmd_)/NOPR
Cmd_)*CSET,13,13
Fld_0
  Prm_Apply Table Loads
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
Cmd_)/GO
  Cal_Fnc_thld
:E END
:! 
:N Fnc_thvalue
:S    157,   122,    28
:T Command
:C )! Fnc_thvalue
:C )/NOPR
:C )KEYW,bf,0
:C )*SET,_z11,'XXX'
:C )/GOPR
Inp_P
Cmd_)!
  Cal_Fnc_thld
:E END
:! 
:N Fnc_tranld
:S    210,   190,    13
:T Hidden
:C )/NOPR
:C )*del,_z
:C )*dim,_z,array
:C )*get,_z(1),common,,lsdynacom,,int,69
:C )keyw,tran%_z(1)%,1
:C )/GO
:A Transient only
:K (LSDYNA)
Inp_P
Cmd_)!
:E END
:! 
:N Men_-REZONE-
:S    186,    67,   112
:T Menu
:A Manual Rezoning
Fnc_RZN_Start
Men_RZN_CreateZn
Fnc_RZN_ReadFile
Fnc_RZN_SplitElm
Fnc_RZN_Finish
Sep_
Fnc_RZN_DONE
Fnc_RZN_Solve
:E END
:! 
:N Men_P1_-REZONE-
:S     94,    70,    17
:T Menu
:A Manual Rezoning
Fnc_RZN_CreateCM
:E END
:! 
:N Men_RZN_CreateZn
:S    230,   117,   106
:T Menu
:A Create Remesh Zone(s)
:D Create Remesh Zone(s)
:K #(REMESHRZ)
Fnc_RZN_SelCM
Fnc_RZN_SelElem
Fnc_RZN_SelNode
Fnc_AREMESH
Men_RZN_MeshCtrl
Men_RZN_GeomCtrl
Fnc_Mesh_tool
:E END
:! 
:N Men_RZN_GeomCtrl
:S     94,    73,    14
:T Menu
:A Geometry Controls
Fnc_RZN_LCCAT
:E END
:! 
:N Men_RZN_MeshCtrl
:S    178,    69,   102
:T Menu
:A Mesh Controls
Fnc_Mesh_tool
Fnc_RZN_DESIZE
Fnc_RZN_MshrOpts
-Element Shape Checking-
Fnc_Shpp_Check
Fnc_SHPP_toggle
:E END
:! 
:X INDEX ADDED BY ANSYS 
Fnc_FN-stress       4994
Fnc_Mesh_silicon    2944
Fnc_Mesh_steel      2548
Fnc_Model_DDof      3317
Fnc_Model_SSolve    3899
Fnc_My_silicon       825
Fnc_My_steel          89
Fnc_OMEGA_dele      6457
Fnc_OPNCONTROL      6775
Fnc_OUTPR           7180
Fnc_OUTPR_ADD1      8501
Fnc_OUTPR_ADD2      8802
Fnc_OUTPR_cw        9095
Fnc_OUTRES          9299
Fnc_OUTRES_31      11364
Fnc_OUTRES_311     11671
Fnc_OUTRES_32      11873
Fnc_OUTRES_321     12183
Fnc_OUTRES_322     12446
Fnc_OUTRES_323     12677
Fnc_OUTRES_ADD1    12879
Fnc_OUTRES_ADD2    13949
Fnc_OUTRES_ADD3    15021
Fnc_OUTRES_ADD4    15710
Fnc_OUTRES_cw      15837
Fnc_OUT_stat       16066
Fnc_OceanRead      16321
Fnc_OptFil         17448
Fnc_OutOpts2       17734
Fnc_OutOpts3       18984
Fnc_OutOpts_p1     19937
Fnc_P26VAR_ADD     23658
Fnc_P26VAR_ADD2    24016
Fnc_P26VAR_EDIT    24734
Fnc_P26_E_p        25995
Fnc_P26_N_p        26195
Fnc_PAGET_AR       26389
Fnc_PAGET_C0       27024
Fnc_PAGET_C1       27446
Fnc_PAGET_LA       27925
Fnc_PAGET_PO       28070
Fnc_PAGET_RR       28215
Fnc_PAGET_TA       28584
Fnc_PAPUT_AR       28729
Fnc_PAPUT_C0       29448
Fnc_PAPUT_C1       29968
Fnc_PAPUT_DD       30489
Fnc_PAPUT_EE       30907
Fnc_PAPUT_RQ       31915
Fnc_PAPUT_RR       32420
Fnc_PARRES         32972
Fnc_PARSAV         33368
Fnc_PATHDELALL     33753
Fnc_PATHDELNAM     34012
Fnc_PATHEDIT       34328
Fnc_PATHOPTS       35020
Fnc_PATHPLOT       35487
Fnc_PATHRECALL     35639
Fnc_PATHRESU       35930
Fnc_PATHSAVALL     36179
Fnc_PATHSAVE       36446
Fnc_PATHSAVNAM     36769
Fnc_PATHSTAT_1     37130
Fnc_PATHSTAT_2     37259
Fnc_PBAKQTY        37405
Fnc_PBAK_COLR      38141
Fnc_PBAK_EXEC      39241
Fnc_PBAK_TXTR      39633
Fnc_PBAK_TXTR2     41186
Fnc_PBAK_bmp       41898
Fnc_PBAK_jpg       42446
Fnc_PBAK_png       42950
Fnc_PCALC_acos     43451
Fnc_PCALC_add      44070
Fnc_PCALC_asin     44778
Fnc_PCALC_cos      45393
Fnc_PCALC_deri     45980
Fnc_PCALC_div      46558
Fnc_PCALC_exp      47116
Fnc_PCALC_intg     47801
Fnc_PCALC_log      48374
Fnc_PCALC_mult     48989
Fnc_PCALC_sin      49551
Fnc_PCIRC          50153
Fnc_PCROSS         50626
Fnc_PDANL          51751
Fnc_PDANL_ENTRY    52882
Fnc_PDANL_WARN     53184
Fnc_PDBBM_ENTRY    53714
Fnc_PDCCD_ENTRY    54788
Fnc_PDCDF          55861
Fnc_PDCFLD_ENTRY   57123
Fnc_PDCLR_ENTRY    57896
Fnc_PDCMAT_ENTRY   58509
Fnc_PDCMAT_MATX    59297
Fnc_PDCMAT_SNGL    59886
Fnc_PDCORR_ADD     60531
Fnc_PDCORR_DEL     61019
Fnc_PDCORR_ENTRY   61275
Fnc_PDCORR_PRE     61762
Fnc_PDCORR_WARN    62328
Fnc_PDDIS_BETA     62843
Fnc_PDDIS_EXPO     63794
Fnc_PDDIS_GAMA     64617
Fnc_PDDIS_GAUS     65423
Fnc_PDDIS_LOG1     66237
Fnc_PDDIS_LOG2     67053
Fnc_PDDIS_TGAU     67883
Fnc_PDDIS_TRIA     68863
Fnc_PDDIS_UNIF     69782
Fnc_PDDIS_WEIB     70643
Fnc_PDDMCS_ALL     71545
Fnc_PDDMCS_AUTO    72468
Fnc_PDDMCS_ENTRY   74283
Fnc_PDDOEL_BBM0    75280
Fnc_PDDOEL_BBM1    75871
Fnc_PDDOEL_BBM2    77109
Fnc_PDDOEL_CCD0    77961
Fnc_PDDOEL_CCD1    78552
Fnc_PDDOEL_CCD2    79790
Fnc_PDEF           80695
Fnc_PDEF_2        119370
Fnc_PDEF_clear    119722
Fnc_PDEXE_ENTRYP  120070
Fnc_PDEXE_ENTRYS  120878
Fnc_PDEXE_MCS     121682
Fnc_PDEXE_PAR     123012
Fnc_PDEXE_PAR_AF  123239
Fnc_PDEXE_PAR_HP  123468
Fnc_PDEXE_RSM     123695
Fnc_PDEXE_SER     124879
Fnc_PDEXE_SERCPY  125497
Fnc_PDEXE_SERRUN  126083
Fnc_PDEXE_WARN1   126535
Fnc_PDEXE_WARN2   126895
Fnc_PDEXE_WARN3   127424
Fnc_PDHIST        127981
Fnc_PDINQR_ENTRY  128944
Fnc_PDLHS_ALL     129755
Fnc_PDLHS_AUTO    130745
Fnc_PDLHS_ENTRY   132622
Fnc_PDMETH_ENTRY  133930
Fnc_PDMETH_MCS    134476
Fnc_PDMETH_RSM    135266
Fnc_PDMETH_WIZ    137049
Fnc_PDOT          137927
Fnc_PDPINV        138898
Fnc_PDPLOT_ENTRY  140004
Fnc_PDPROB        140607
Fnc_PDREP_OPT     141816
Fnc_PDREP_WRT     143888
Fnc_PDRESU        144403
Fnc_PDSAVE        145554
Fnc_PDSCAT        146705
Fnc_PDSENS        147688
Fnc_PDSHIS        148663
Fnc_PDUSER_ENTRY  149929
Fnc_PDVAR_ADDRP   150305
Fnc_PDVAR_ADDRV   150711
Fnc_PDVAR_EDITRV  151699
Fnc_PDVAR_RP      153264
Fnc_PDVAR_RV      153509
Fnc_PD_AnFile     153776
Fnc_PD_NOPRM      155813
Fnc_PD_STATUS     156536
Fnc_PERBC2D       156685
Fnc_PERBC2DI      157129
Fnc_PERBC2D_0     157312
Fnc_PERBC2D_1     158190
Fnc_PERBC2D_2     159076
Fnc_PFACT_mult    159962
Fnc_PFACT_psd     160844
Fnc_PFEDEF        161887
Fnc_PGSE_A        162056
Fnc_PGSE_R        162358
Fnc_PGSE_S        162635
Fnc_PGSE_U        162914
Fnc_PHFDEF        163191
Fnc_PHFDEF_2      164467
Fnc_PLCAMPBELL    164644
Fnc_PLCRACK       165358
Fnc_PLDISP        165948
Fnc_PLESOL        166342
Fnc_PLESOL_2      166555
Fnc_PLETAB        166857
Fnc_PLETAB_dummy  167290
Fnc_PLF2D         167472
Fnc_PLHFFAR_1     168172
Fnc_PLHFFAR_2     168989
Fnc_PLLS          169335
Fnc_PLNSOL        170022
Fnc_PLNSOL_2      170233
Fnc_PLORBIT       170532
Fnc_PLPAGM        170664
Fnc_PLPATH        171144
Fnc_PLPATH_dummy  171464
Fnc_PLRECALL      171636
Fnc_PLSECT        171960
Fnc_PLSECT_dummy  172819
Fnc_PLTRAC        173014
Fnc_PLTRAC_00     174766
Fnc_PLTRAC_EM     175192
Fnc_PLVAR_p26     176140
Fnc_PLVECT        176770
Fnc_PLVECT2       182395
Fnc_PLVECT_user   182819
Fnc_PMGTRAN       183709
Fnc_PMGTRAN_1     185210
Fnc_PMGTRAN_2     185696
Fnc_PMGTRAN_3     186176
Fnc_PMLOPT        187483
Fnc_PMLOPTH       187801
Fnc_PMLOPTM       188754
Fnc_PMLOPT_CL1    189659
Fnc_PMLOPT_CL2    189783
Fnc_PMLOPT_CLE    189949
Fnc_PMLOPT_ST     190578
Fnc_PMLPAR_CL0    190801
Fnc_PMLPAR_CL1    191028
Fnc_PMLSIZ        191267
Fnc_POLY_PTXY     191969
Fnc_POWERH        192127
Fnc_PPATH_Ci0     192552
Fnc_PPATH_Ci1     192887
Fnc_PPATH_Ci2     193275
Fnc_PPATH_Ci3     194015
Fnc_PPATH_Lc      195472
Fnc_PPATH_Lc_1    196104
Fnc_PPATH_NE      196737
Fnc_PPATH_Nd      196868
Fnc_PPATH_Nd1     197155
Fnc_PPATH_WP      197582
Fnc_PPATH_WP0     198388
Fnc_PPATH_WP1     198691
Fnc_PPATH_WPE     199139
Fnc_PRANGE_p1     199292
Fnc_PRCAMPBELL    199744
Fnc_PRED          200461
Fnc_PRED2         201001
Fnc_PRERR         201301
Fnc_PRESOL        201518
Fnc_PRETAB        201786
Fnc_PRETAB_dummy  202455
Fnc_PRI2          202626
Fnc_PRI2_2d       202902
Fnc_PRITER        203207
Fnc_PRNLD         203365
Fnc_PRNSOL        205918
Fnc_PRNSOL_2      206148
Fnc_PRO           206387
Fnc_PROD          206506
Fnc_PRORBIT       207184
Fnc_PRPATH        207314
Fnc_PRPATH_dummy  207597
Fnc_PRRECALL      207766
Fnc_PRRSOL        208090
Fnc_PRSECT        216353
Fnc_PRSECT_dummy  216783
Fnc_PRVAR_p26     216968
Fnc_PRVECT        217435
Fnc_PSDFRQ_eras   222145
Fnc_PSDFRQ_eras2  222540
Fnc_PSDFRQ_erasP  222768
Fnc_PSDGRAPH      222967
Fnc_PSDRES        223452
Fnc_PSDSPL        224597
Fnc_PSDUNIT_psd   225151
Fnc_PSDVAL_psd    226574
Fnc_PSDVAL_psd1   226973
Fnc_PSDVAL_psd2   230622
Fnc_PSDVAL_psd3   230868
Fnc_PSDVAL_psd4   234146
Fnc_PSDWAV        236101
Fnc_PSME_a2n      236851
Fnc_PSME_a2on     237483
Fnc_PSME_a2ov     238302
Fnc_PSME_an       239136
Fnc_PSME_aon      239564
Fnc_PSME_aov      239995
Fnc_PSME_e2n      240317
Fnc_PSME_e2on     240945
Fnc_PSME_e2ov     241760
Fnc_PSME_e2p      242590
Fnc_PSME_e3p      242904
Fnc_PSME_en       243232
Fnc_PSME_eon      243671
Fnc_PSME_eov      244113
Fnc_PSME_ep       244426
Fnc_PSME_l2n      244736
Fnc_PSME_l2on     245368
Fnc_PSME_l2ov     246187
Fnc_PSME_ln       247021
Fnc_PSME_lon      247449
Fnc_PSME_lov      247880
Fnc_PSME_sel2n    248202
Fnc_PSME_sel2on   248834
Fnc_PSME_seln     249653
Fnc_PSME_selon    249992
Fnc_PSME_selov    250334
Fnc_PSME_v2n      251166
Fnc_PSME_v2on     251825
Fnc_PSME_v2ov     252671
Fnc_PSME_vn       253532
Fnc_PSME_von      253962
Fnc_PSME_vov      254395
Fnc_PSecLd        254719
Fnc_PSecLdAll     255033
Fnc_PSecLdDel     255795
Fnc_PSecLdDelAll  256260
Fnc_PSecLdDelEX   256631
Fnc_PSecLdM       256978
Fnc_PSecLdM_2     257407
Fnc_PSecLd_2      258371
Fnc_PVECT         259660
Fnc_Perturb       260150
Fnc_Phys_clear    261232
Fnc_Phys_dele     261478
Fnc_Phys_list     261845
Fnc_Phys_rea1     261998
Fnc_Phys_rea2     262182
Fnc_Phys_read     262502
Fnc_Phys_stat     262920
Fnc_Phys_writ     263076
Fnc_Pick_Beam     263460
Fnc_Pick_Beam_db  264649
Fnc_Pick_Mats     265189
Fnc_Pick_Mats2    265539
Fnc_PiezoT0       265907
Fnc_PiezoTr       266377
Fnc_PipeAdd       266630
Fnc_PipeAddEdit2  266892
Fnc_PipeAddEdit3  267515
Fnc_PipeEdit      269843
Fnc_PipeFactors   270328
Fnc_PipeFactors2  270973
Fnc_Pl_/ANGLE     272048
Fnc_Pl_/ANGLE_A   273206
Fnc_Pl_/DIST      273588
Fnc_Pl_/DIST_A    274672
Fnc_Pl_/DIST_B    275021
Fnc_Pl_/DSCALE    275362
Fnc_Pl_/DSCALE_A  277252
Fnc_Pl_/FACET     277754
Fnc_Pl_/FOCUS     278319
Fnc_Pl_/FOCUS_A   279600
Fnc_Pl_/FOCUS_B   279952
Fnc_Pl_/FOCUS_C   280352
Fnc_Pl_/GFO       280748
Fnc_Pl_/GRESUME   281583
Fnc_Pl_/GSAVE     281879
Fnc_Pl_/LIGHT     282168
Fnc_Pl_/LIGHT1    283188
Fnc_Pl_/LIGHT2    283800
Fnc_Pl_/LIGHT3    284891
Fnc_Pl_/LIGHT4    285070
Fnc_Pl_/NORMAL    285863
Fnc_Pl_/NORMAL_A  286750
Fnc_Pl_/SEG       287071
Fnc_Pl_/SEG1      287258
Fnc_Pl_/SEG2      287698
Fnc_Pl_/SEG2A     288445
Fnc_Pl_/SHOW      288756
Fnc_Pl_/SHOW2     289692
Fnc_Pl_/SHOW3     290336
Fnc_Pl_/TRLCY     290997
Fnc_Pl_/TRLZCAP   291628
Fnc_Pl_/UDOCCN    291973
Fnc_Pl_/UDOCTX    292859
Fnc_Pl_/UDOCZZ    294007
Fnc_Pl_/VCONE     294320
Fnc_Pl_/VCONE_A   295347
Fnc_Pl_/VCONE_B   295670
Fnc_Pl_/VSCALE    295985
Fnc_Pl_/VSCALE_A  296982
Fnc_Pl_/XFRM      297329
Fnc_Pl_ANCMERR    297654
Fnc_Pl_ANCNTR     298024
Fnc_Pl_ANCNTR0    298241
Fnc_Pl_ANCNTR2    329054
Fnc_Pl_ANCYC      329231
Fnc_Pl_ANCYC0     329611
Fnc_Pl_ANCYC2     361902
Fnc_Pl_ANDATA     362193
Fnc_Pl_ANDATA0    362407
Fnc_Pl_ANDATA2    397199
Fnc_Pl_ANDSCL     398349
Fnc_Pl_ANDSCL0    398559
Fnc_Pl_ANDSCL2    399257
Fnc_Pl_ANDYNA     399434
Fnc_Pl_ANDYNA0    399646
Fnc_Pl_ANDYNA2    435789
Fnc_Pl_ANHARM     436221
Fnc_Pl_ANIM       436484
Fnc_Pl_ANIMERR    436929
Fnc_Pl_ANISOS     437240
Fnc_Pl_ANISOS0    437444
Fnc_Pl_ANISOS2    466026
Fnc_Pl_ANMODE     466203
Fnc_Pl_ANMODE0    466405
Fnc_Pl_ANMODE2    500502
Fnc_Pl_ANPLTR     500795
Fnc_Pl_ANPLTR0    501003
Fnc_Pl_ANPLTR1    503149
Fnc_Pl_ANQCNT     504250
Fnc_Pl_ANQCNT0    504487
Fnc_Pl_ANQCNT2    532567
Fnc_Pl_ANQCNT3    532826
Fnc_Pl_ANQVEC     533183
Fnc_Pl_ANQVEC0    533405
Fnc_Pl_ANQVEC2    537158
Fnc_Pl_ANQVEC3    537396
Fnc_Pl_ANRESU     537681
Fnc_Pl_ANSAVE     538268
Fnc_Pl_ANTIME     538852
Fnc_Pl_ANTIME0    539096
Fnc_Pl_ANTIME2    572832
Fnc_Pl_AutoFit    573706
Fnc_Pl_AutoFit_A  574357
Fnc_Pl_BCMERR     574739
Fnc_Pl_BCM_OK     575074
Fnc_Pl_BandCntrC  576026
Fnc_Pl_BandCntrM  576710
Fnc_Pl_ClrBC      576919
Fnc_Pl_ClrComp    581719
Fnc_Pl_ClrEntit1  582222
Fnc_Pl_ClrEntity  583241
Fnc_Pl_ClrGraph   584542
Fnc_Pl_ClrMap     587273
Fnc_Pl_ClrMapSav  587546
Fnc_Pl_ClrNumber  587836
Fnc_Pl_ClrStress  589980
Fnc_Pl_ClrWindow  592978
Fnc_Pl_ContLab    594112
Fnc_Pl_ContLab_A  595382
Fnc_Pl_ContLab_C  595703
Fnc_Pl_ContNon    596021
Fnc_Pl_ContNon1   597831
Fnc_Pl_ContStyl1  598388
Fnc_Pl_ContStyl2  598612
Fnc_Pl_ContStyl3  598836
Fnc_Pl_ContStyl4  599529
Fnc_Pl_ContStyl5  599952
Fnc_Pl_ContStyl6  600419
Fnc_Pl_ContStyle  600790
Fnc_Pl_ContUni    601599
Fnc_Pl_ContUni_A  603117
Fnc_Pl_ContUni_B  603526
Fnc_Pl_Device     604267
Fnc_Pl_Edge       606781
Fnc_Pl_Edge_A     608022
Fnc_Pl_Graph0     608428
Fnc_Pl_Graph1     608600
Fnc_Pl_Graph10    608792
Fnc_Pl_Graph2     609079
Fnc_Pl_Graph3     609272
Fnc_Pl_Graph4     609448
Fnc_Pl_Graph9     609693
Fnc_Pl_Hidden     609931
Fnc_Pl_Hidden_A   611970
Fnc_Pl_Hpgl       612472
Fnc_Pl_Hpgl2      614027
Fnc_Pl_IMMED      615620
Fnc_Pl_JPEG       616349
Fnc_Pl_ModAxes    617772
Fnc_Pl_ModCurv    622648
Fnc_Pl_ModGrid    624585
Fnc_Pl_Number     625509
Fnc_Pl_Number2    628442
Fnc_Pl_Orient     628833
Fnc_Pl_Orient_A   630236
Fnc_Pl_PNG        630680
Fnc_Pl_Pscr       632443
Fnc_Pl_Pscr_A     635296
Fnc_Pl_QUALITY    636262
Fnc_Pl_QUALITY1   639001
Fnc_Pl_Size       639396
Fnc_Pl_Size_A     641883
Fnc_Pl_Symbols    642600
Fnc_Pl_Symbols2   651951
Fnc_Pl_Symbols3   655415
Fnc_Pl_Symbols4   655618
Fnc_Pl_Symbols5   655950
Fnc_Pl_Symbols5a  656299
Fnc_Pl_Symbols5b  661749
Fnc_Pl_Symbols5c  663554
Fnc_Pl_Symbols6   664594
Fnc_Pl_TIFF       664926
Fnc_Pl_Trans1     666440
Fnc_Pl_Trans2     667406
Fnc_Pl_Trans3     668015
Fnc_Pl_VRML       668554
Fnc_Pl_WinCopy    669009
Fnc_Pl_WinDele    669579
Fnc_Pl_WinLay     669975
Fnc_Pl_WinOnOff   671008
Fnc_Pl_WinOpts    672344
Fnc_Pl_WinPick1   675815
Fnc_Pl_WinPick2   676078
Fnc_Planar_Sym    676428
Fnc_Plt_Dio_2     676878
Fnc_Plt_Dio_3     677186
Fnc_Plt_Dio_4     677471
Fnc_Plt_Dio_5     678207
Fnc_Plt_Dio_6     678894
Fnc_Plt_Diode     679689
Fnc_Plt_EMT       679973
Fnc_Plt_EMT_1     680254
Fnc_Plt_EMT_2     680536
Fnc_Plt_EMT_3     680974
Fnc_Plt_EMT_4     681259
Fnc_Plt_EMT_5     681554
Fnc_Plt_EMT_6     681972
Fnc_Plt_EMT_7     682642
Fnc_Plt_Spr_2     683362
Fnc_Plt_Spr_3     683700
Fnc_Plt_Spr_6     683988
Fnc_Plt_Spring    684716
Fnc_PreSecModNam  685006
Fnc_PreSecModNor  685412
Fnc_PreSecMod_2   685879
Fnc_Pref_Msg1     686811
Fnc_Pref_Msg2     687850
Fnc_Pref_Success  688307
Fnc_Prefer_exec   689526
Fnc_Prefer_exec2  690683
Fnc_Preferences   693962
Fnc_Preintegrate  696145
Fnc_QDVAL         696467
Fnc_QDVAL1        696993
Fnc_QDVAL2        700769
Fnc_QDVAL3        700990
Fnc_QDVAL4        704533
Fnc_QESOL         706750
Fnc_QESOL_2       709472
Fnc_QGSOL         709714
Fnc_QGSOL_2       733051
Fnc_QNSOL         733284
Fnc_QNSOL_2       756559
Fnc_QUAD          756788
Fnc_QUAD2         757244
Fnc_QUADFREE      757864
Fnc_QUADMAP34     758246
Fnc_QUADMAPA      758630
Fnc_QUASISTAT     758992
Fnc_QUOT          759349
Fnc_R             759901
Fnc_RACE          760159
Fnc_RADAR         760915
Fnc_RADAR_L       762118
Fnc_RADAR_N       763321
Fnc_RADAR_NL      764562
Fnc_RADOPT        765802
Fnc_RAPPND        766706
Fnc_RBE3          767052
Fnc_RBE3_a        767402
Fnc_RBREAD        767913
Fnc_RCREAD        768556
Fnc_REAL_p26      769188
Fnc_RECTNG        769693
Fnc_REFLCOE1      770052
Fnc_REFLCOE2      770291
Fnc_REFLCOEF      770510
Fnc_REFRESH       771305
Fnc_RESCONTROL    771419
Fnc_RESCONTROL_2  772709
Fnc_RESET_p1      773551
Fnc_RESET_p26     773981
Fnc_RESP          774367
Fnc_RFORCE        775140
Fnc_RFORCE1       776413
Fnc_RFORCE1A      776807
Fnc_RFORCE1e      778933
Fnc_RFORCE_A      781196
Fnc_RFORCE_Ae     781490
Fnc_RFORCE_e      781786
Fnc_RLIST         783064
Fnc_RMANL         783363
Fnc_RMANL2        783959
Fnc_RMANL3        784163
Fnc_RMFLVEC       784402
Fnc_RMLVSCALE     784770
Fnc_RMLVSCALE_de  785892
Fnc_RMNDISP       786248
Fnc_RMNEVEC       786768
Fnc_RMRESU        787148
Fnc_RMSAVE        787418
Fnc_RMXPORT       787685
Fnc_ROMBRS        787922
Fnc_ROMELM        788194
Fnc_ROMELM_0      788897
Fnc_ROM_VSweep    789167
Fnc_RPOLY         789898
Fnc_RPOLY_major   790235
Fnc_RPOLY_minor   790609
Fnc_RPR4          790975
Fnc_RPR4_2d       791404
Fnc_RPR4_4        791792
Fnc_RPR4_4_2d     792217
Fnc_RPR4_5        792614
Fnc_RPR4_5_2d     793036
Fnc_RPR4_6        793416
Fnc_RPR4_6_2d     793835
Fnc_RPR4_7        794213
Fnc_RPR4_7_2d     794634
Fnc_RPR4_8        795014
Fnc_RPR4_8_2d     795433
Fnc_RPRISM        795811
Fnc_RPRISM_major  796221
Fnc_RPRISM_minor  796668
Fnc_RPRT_GEN      797107
Fnc_RPSD          797277
Fnc_RPSD_1        797650
Fnc_RSFIT1        798450
Fnc_RSFIT2        799595
Fnc_RSFIT_ENTRY   801409
Fnc_RSOUT         801765
Fnc_RSPLOT        802625
Fnc_RSPLOT_ENTRY  803825
Fnc_RSPRNT1       804189
Fnc_RSPRNT2       804854
Fnc_RSPRNT3       805139
Fnc_RSPRNT_ENTRY  805748
Fnc_RSSIMS        806114
Fnc_RSSIMS_CONT   807679
Fnc_RSSIMS_ENTRY  807896
Fnc_RSSIMS_INIT   808266
Fnc_RSSIMS_SEED   808540
Fnc_RSSIMS_TIME   809065
Fnc_RS_NORSSET    809339
Fnc_RS_NOSOLSET   809997
Fnc_RTHICK        810576
Fnc_RZN_CreateCM  811169
Fnc_RZN_DESIZE    811658
Fnc_RZN_DONE      811780
Fnc_RZN_Finish    812097
Fnc_RZN_KSCON     812383
Fnc_RZN_LCCAT     812494
Fnc_RZN_LCCAT_de  812601
Fnc_RZN_LCOMB     812804
Fnc_RZN_MshrOpts  812979
Fnc_RZN_ReadFile  813097
Fnc_RZN_SelCM     813563
Fnc_RZN_SelElem   814081
Fnc_RZN_SelNode   814393
Fnc_RZN_SelNode2  814843
Fnc_RZN_Solve     815280
Fnc_RZN_SplitEl2  815741
Fnc_RZN_SplitEl3  816109
Fnc_RZN_SplitElm  816456
Fnc_RZN_Start     816847
Fnc_R_solu        817060
Fnc_R_too         817229
Fnc_RadOpt12      817489
Fnc_RadOpt12_0    820017
Fnc_RadOpt13      820991
Fnc_RadOpt13_0    822457
Fnc_RadOpt13_1    822802
Fnc_RaiseSectMen  823241
Fnc_ReadOpts_p1   823420
Fnc_RebarNorm     823740
Fnc_RebarOnly     823930
Fnc_RebarPlus     824425
Fnc_ReduceGui     824925
Fnc_ReduceMatGui  825162
Fnc_ReinfAddEdit  825383
Fnc_RemoveDialog  825750
Fnc_Restart       825986
Fnc_ResultView    827439
Fnc_RetBox        827574
Fnc_RetBox_0      828377
Fnc_RetBox_1      828520
Fnc_RomAAC2       828794
Fnc_RomAAC3       829084
Fnc_RomAAC4       829640
Fnc_RomAAC5       830583
Fnc_RomAddAllCap  832041
Fnc_RomAddSingCa  832415
Fnc_RomCapList    832772
Fnc_RomDefMN      832914
Fnc_RomDefRS2     833162
Fnc_RomDefineRS   833342
Fnc_RomDelCap     834269
Fnc_RomDelMN      834527
Fnc_RomDelMN_1    834784
Fnc_RomElementLo  835084
Fnc_RomFitRS      835835
Fnc_RomListMN     836097
Fnc_RomModalAnal  836240
Fnc_RomModeList   836726
Fnc_RomModeList2  836877
Fnc_RomModeS2     837030
Fnc_RomModeSAuto  837747
Fnc_RomModeSManu  838330
Fnc_RomPlotRS     838837
Fnc_RomPolyOrder  839468
Fnc_RomRSStatus   841185
Fnc_RomRunSample  841506
Fnc_RomTestLoad   842215
Fnc_RotCoriolis   843163
Fnc_Rot_Dam_1     843596
Fnc_Rot_Dam_2     844345
Fnc_Rot_Dam_No    845161
Fnc_Rot_Damper    845436
Fnc_Rot_Spr_1     845704
Fnc_Rot_Spr_2     846453
Fnc_Rot_Spr_No    847234
Fnc_Rot_Spring    847516
Fnc_RunStatFil    847770
Fnc_SABS          848011
Fnc_SADD          848530
Fnc_SALLOW        849278
Fnc_SALLOW_reset  849582
Fnc_SBCTRAN       849734
Fnc_SCENERGY      850210
Fnc_SCENERGY_H    850480
Fnc_SCENERGY_S    850812
Fnc_SCLIST        851144
Fnc_SDELETE       851499
Fnc_SE            852359
Fnc_SECCONreinf   852838
Fnc_SECPLOTbeam   853533
Fnc_SECPLOTfit    854281
Fnc_SECPLOTpipe   854649
Fnc_SECPLOTrein2  855397
Fnc_SECPLOTreinf  855754
Fnc_SECPLOTshel   856659
Fnc_SEDLIS        857170
Fnc_SEEXP         857591
Fnc_SEGEN         858244
Fnc_SEGEN_2a      858688
Fnc_SEGEN_2b      858928
Fnc_SEGEN_2c      859439
Fnc_SELIST        859952
Fnc_SENERGY       860414
Fnc_SENERGY_H     860694
Fnc_SENERGY_S     861021
Fnc_SEQ_Sequen    861348
Fnc_SEQ_Simul     861783
Fnc_SESYMM        862184
Fnc_SETFGAP       862901
Fnc_SETFGAP_1     863391
Fnc_SETMOD        864739
Fnc_SETRAN_cs     868491
Fnc_SETRAN_geom   869309
Fnc_SET_detailed  870041
Fnc_SET_detl_ord  870224
Fnc_SET_first     870466
Fnc_SET_last      870665
Fnc_SET_list      870859
Fnc_SET_list_ord  871022
Fnc_SET_lstep     871252
Fnc_SET_next      872349
Fnc_SET_nset      872543
Fnc_SET_prev      873566
Fnc_SET_sum_ord   873772
Fnc_SET_summary   874003
Fnc_SET_time      874173
Fnc_SEW_Ar        875371
Fnc_SEW_Li        875651
Fnc_SEW_Vo        875931
Fnc_SEXP          876217
Fnc_SE_Man_EXP    876910
Fnc_SE_Man_GEN    877079
Fnc_SE_Man_USE    877249
Fnc_SFACT         877412
Fnc_SFACT_0       877931
Fnc_SFADELE_FSIn  878120
Fnc_SFADELE_all   878525
Fnc_SFADELE_chr2  879168
Fnc_SFADELE_chrg  879475
Fnc_SFADELE_con2  879886
Fnc_SFADELE_conv  880178
Fnc_SFADELE_frsf  880498
Fnc_SFADELE_fsi   880809
Fnc_SFADELE_fsi2  881134
Fnc_SFADELE_hfl2  881438
Fnc_SFADELE_hflu  881732
Fnc_SFADELE_imp2  882052
Fnc_SFADELE_impE  882343
Fnc_SFADELE_impd  882712
Fnc_SFADELE_inf   883024
Fnc_SFADELE_inf2  883386
Fnc_SFADELE_mci   883681
Fnc_SFADELE_mxwf  884056
Fnc_SFADELE_port  884439
Fnc_SFADELE_pre2  884801
Fnc_SFADELE_pres  885091
Fnc_SFADELE_rad   885401
Fnc_SFADELE_rad2  885761
Fnc_SFADELE_rdmx  886049
Fnc_SFADELE_shld  886360
Fnc_SFADEL_p      886716
Fnc_SFADEL_p2     886986
Fnc_SFALIS        887552
Fnc_SFA_FSInt     887797
Fnc_SFA_chrgs     888240
Fnc_SFA_chrgs2    888682
Fnc_SFA_conv      889104
Fnc_SFA_frsf      889532
Fnc_SFA_frsf2     889866
Fnc_SFA_fsi       890133
Fnc_SFA_hflux     890427
Fnc_SFA_impd      890859
Fnc_SFA_impd2     891191
Fnc_SFA_impd4     891590
Fnc_SFA_impdE     891928
Fnc_SFA_inf       892294
Fnc_SFA_mci       892644
Fnc_SFA_mci2      893053
Fnc_SFA_mxwf      893372
Fnc_SFA_p         893746
Fnc_SFA_p2        894038
Fnc_SFA_port      894796
Fnc_SFA_port1     895185
Fnc_SFA_port2     895497
Fnc_SFA_pres      895769
Fnc_SFA_rad       896183
Fnc_SFA_rad2      896561
Fnc_SFA_radF      896997
Fnc_SFA_rdmx      897750
Fnc_SFA_rdmx2     898084
Fnc_SFA_shld      898385
Fnc_SFA_shld4     898738
Fnc_SFBEAM        899049
Fnc_SFBEAM2       899387
Fnc_SFCALC        900181
Fnc_SFCUM         900961
Fnc_SFDELE_FSInt  905160
Fnc_SFDELE_chrg   905543
Fnc_SFDELE_conv   905947
Fnc_SFDELE_frsf   906259
Fnc_SFDELE_fsi    906566
Fnc_SFDELE_hflu   906882
Fnc_SFDELE_impd   907195
Fnc_SFDELE_impdE  907499
Fnc_SFDELE_inf    907837
Fnc_SFDELE_mci    908191
Fnc_SFDELE_mxwf   908560
Fnc_SFDELE_port   908914
Fnc_SFDELE_prCM   909246
Fnc_SFDELE_pres   909641
Fnc_SFDELE_rad    909943
Fnc_SFDELE_rdmx   910292
Fnc_SFDELE_shld   910599
Fnc_SFDEL_p       910924
Fnc_SFDEL_p2      911194
Fnc_SFDEL_vf      911695
Fnc_SFE3_conv     912022
Fnc_SFEDELE_FSIn  912489
Fnc_SFEDELE_all   912906
Fnc_SFEDELE_selv  913309
Fnc_SFEDEL_chrg   913741
Fnc_SFEDEL_chrg2  914197
Fnc_SFEDEL_conv   914582
Fnc_SFEDEL_conv2  914947
Fnc_SFEDEL_frsf   915317
Fnc_SFEDEL_frsf2  915676
Fnc_SFEDEL_hflu   916056
Fnc_SFEDEL_hflu2  916421
Fnc_SFEDEL_impd   916793
Fnc_SFEDEL_impd2  917150
Fnc_SFEDEL_impdE  917519
Fnc_SFEDEL_inf    917932
Fnc_SFEDEL_mci    918354
Fnc_SFEDEL_mxwf   918780
Fnc_SFEDEL_p      919213
Fnc_SFEDEL_p2     919499
Fnc_SFEDEL_pr2CM  920124
Fnc_SFEDEL_prCM   920515
Fnc_SFEDEL_pres   920976
Fnc_SFEDEL_pres2  921331
Fnc_SFEDEL_rad    921699
Fnc_SFEDEL_rad2   922101
Fnc_SFEDEL_rdmx   922464
Fnc_SFEDEL_rdmx2  922823
Fnc_SFEDEL_vf     923180
Fnc_SFEDEL_vf2    923541
Fnc_SFELIS        923908
Fnc_SFE_FSInt     924155
Fnc_SFE_VFRC      924752
Fnc_SFE_chrgs     925401
Fnc_SFE_chrgs2    925836
Fnc_SFE_convt     926504
Fnc_SFE_convt2    926994
Fnc_SFE_convt3    927783
Fnc_SFE_convu     928273
Fnc_SFE_frsf      928854
Fnc_SFE_frsf2     929197
Fnc_SFE_hflux     929512
Fnc_SFE_impd      930096
Fnc_SFE_impd2     930437
Fnc_SFE_p         931078
Fnc_SFE_p2        931339
Fnc_SFE_pres      932285
Fnc_SFE_presCM    933588
Fnc_SFE_rad       935019
Fnc_SFE_rad2      935556
Fnc_SFE_rad3      936100
Fnc_SFE_radF      936439
Fnc_SFE_rdmx      937122
Fnc_SFE_rdmx1     937644
Fnc_SFE_rdmx2     938081
Fnc_SFE_selv      938464
Fnc_SFFUN         938864
Fnc_SFGRAD        939733
Fnc_SFLDELE_FSIn  940684
Fnc_SFLDELE_all   941072
Fnc_SFLDELE_chrg  941536
Fnc_SFLDELE_conv  941945
Fnc_SFLDELE_frsf  942262
Fnc_SFLDELE_fsi   942573
Fnc_SFLDELE_hflu  942894
Fnc_SFLDELE_impd  943212
Fnc_SFLDELE_inf   943521
Fnc_SFLDELE_mxwf  943880
Fnc_SFLDELE_pres  944247
Fnc_SFLDELE_rad   944554
Fnc_SFLDELE_rdmx  944910
Fnc_SFLDEL_p      945221
Fnc_SFLDEL_p2     945494
Fnc_SFLDEL_vf     946001
Fnc_SFLIST        946315
Fnc_SFLLIS        946558
Fnc_SFL_FSInt     946803
Fnc_SFL_VFRC      947246
Fnc_SFL_chrgs     947965
Fnc_SFL_chrgs2    948407
Fnc_SFL_conv      948822
Fnc_SFL_frsf      949251
Fnc_SFL_frsf2     949585
Fnc_SFL_fsi       949851
Fnc_SFL_hflux     950145
Fnc_SFL_impd      950577
Fnc_SFL_impd2     950909
Fnc_SFL_inf       951295
Fnc_SFL_mxwf      951645
Fnc_SFL_p         952019
Fnc_SFL_p2        952274
Fnc_SFL_pres      953161
Fnc_SFL_rad       953587
Fnc_SFL_rad2      953966
Fnc_SFL_radF      954400
Fnc_SFL_rdmx      955153
Fnc_SFL_rdmx2     955487
Fnc_SFSCALE       955788
Fnc_SFTRAN        956790
Fnc_SF_FSInt      957202
Fnc_SF_chrgs      957638
Fnc_SF_chrgs2     958058
Fnc_SF_conv       958339
Fnc_SF_frsf       958761
Fnc_SF_frsf2      959089
Fnc_SF_fsi        959350
Fnc_SF_hflux      959639
Fnc_SF_impd       960064
Fnc_SF_impd2      960390
Fnc_SF_impd4      960648
Fnc_SF_impdE      960959
Fnc_SF_inf        961319
Fnc_SF_mci        961648
Fnc_SF_mci2       962034
Fnc_SF_mxwf       962347
Fnc_SF_p          962676
Fnc_SF_p2         962962
Fnc_SF_port       963580
Fnc_SF_port1      963938
Fnc_SF_port2      964237
Fnc_SF_pres       964490
Fnc_SF_pres1      965586
Fnc_SF_presCM     969554
Fnc_SF_rad        970757
Fnc_SF_rad2       971130
Fnc_SF_radF       971570
Fnc_SF_rdmx       972318
Fnc_SF_rdmx2      972646
Fnc_SF_shld       972941
Fnc_SF_shld4      973288
Fnc_SHPP_change   973593
Fnc_SHPP_toggle   978071
Fnc_SHPP_toggle2  979586
Fnc_SLIST         980551
Fnc_SLOAD         981819
Fnc_SLREAD        982051
Fnc_SMALL         982683
Fnc_SMAX          983384
Fnc_SMIN          984037
Fnc_SMOOTH_data   984690
Fnc_SMULT         984825
Fnc_SOLCONTROL    985520
Fnc_SOLCONTROL_0  986321
Fnc_SOLCONTROL_1  986744
Fnc_SOLC_VolChk   987314
Fnc_SOLU          987912
Fnc_SOLVE         990627
Fnc_SOLVE2        990850
Fnc_SOLVEDYN      991046
Fnc_SOLVE_PERT    991231
Fnc_SOLVE_PERT2   991425
Fnc_SPCNOD        991889
Fnc_SPCNOD_1      992452
Fnc_SPCREAD       992826
Fnc_SPCTEMP       993125
Fnc_SPCTEMP_1     993720
Fnc_SPFREQ        994168
Fnc_SPFREQ_2      997275
Fnc_SPFREQ_3      997502
Fnc_SPFRQ_eras   1000083
Fnc_SPFRQ_eras2  1000514
Fnc_SPGRAPH      1000740
Fnc_SPH4         1001218
Fnc_SPH4_hollow  1001550
Fnc_SPH4_iges    1001941
Fnc_SPH5         1002286
Fnc_SPHERE       1002664
Fnc_SPLINE       1003153
Fnc_SPLINE_end   1003413
Fnc_SPLINE_op    1003740
Fnc_SPOINT_node  1004018
Fnc_SPOINT_xyz   1004310
Fnc_SPUNIT       1004617
Fnc_SPVAL        1006172
Fnc_SPVAL_1      1006777
Fnc_SQRT         1013995
Fnc_SRCS         1014443
Fnc_SSLN         1015192
Fnc_SSUM         1015615
Fnc_STAT_/aux12  1015936
Fnc_STAT_/opt    1016319
Fnc_STAT_Dynstat 1016659
Fnc_STAT_atyp    1017082
Fnc_STAT_bf      1017511
Fnc_STAT_bioo    1017953
Fnc_STAT_calc_p1 1018420
Fnc_STAT_ceqn    1018813
Fnc_STAT_cnfg    1019192
Fnc_STAT_coup    1019589
Fnc_STAT_d       1019958
Fnc_STAT_data_p1 1020432
Fnc_STAT_deac    1020814
Fnc_STAT_def_p26 1021271
Fnc_STAT_defi_p1 1021638
Fnc_STAT_disp_p1 1022013
Fnc_STAT_dyno    1022389
Fnc_STAT_elem    1022847
Fnc_STAT_etyp    1023206
Fnc_STAT_f       1023577
Fnc_STAT_fals    1024002
Fnc_STAT_fati_p1 1024785
Fnc_STAT_gap     1025164
Fnc_STAT_geno    1025594
Fnc_STAT_inrt    1026033
Fnc_STAT_lcca_p1 1026463
Fnc_STAT_lsop    1026861
Fnc_STAT_mast    1027349
Fnc_STAT_mate    1027770
Fnc_STAT_nlop    1028133
Fnc_STAT_no1     1028593
Fnc_STAT_no2     1029140
Fnc_STAT_no3     1029738
Fnc_STAT_node    1030332
Fnc_STAT_outo    1030680
Fnc_STAT_path_p1 1031113
Fnc_STAT_plo_p26 1031514
Fnc_STAT_poin_p1 1031869
Fnc_STAT_pri_p26 1032243
Fnc_STAT_prin_p1 1032596
Fnc_STAT_rcon    1032970
Fnc_STAT_reor    1033346
Fnc_STAT_selm    1033722
Fnc_STAT_sf      1034093
Fnc_STAT_solid   1034544
Fnc_STAT_solu    1035599
Fnc_STAT_sort_p1 1035985
Fnc_STAT_spec_p1 1036355
Fnc_STAT_spto    1036734
Fnc_STAT_tble    1037192
Fnc_STAT_true    1037556
Fnc_STAT_yes1    1038758
Fnc_STAT_yes2    1038931
Fnc_STAT_yes3    1039208
Fnc_STAT_yes4    1039554
Fnc_STEFBOL      1039775
Fnc_STORE        1040037
Fnc_STRSOPT      1040752
Fnc_SUBSET       1041197
Fnc_SUBSET_l     1043488
Fnc_SUBSET_ll    1043668
Fnc_SUBSET_ln    1043951
Fnc_SUBSET_n     1044229
Fnc_SUBSET_nl    1044409
Fnc_SUBSET_nn    1044746
Fnc_SUCALC_abs   1045078
Fnc_SUCALC_acos  1045572
Fnc_SUCALC_add   1046078
Fnc_SUCALC_asin  1046697
Fnc_SUCALC_atan  1047214
Fnc_SUCALC_atan2 1047736
Fnc_SUCALC_cos   1048343
Fnc_SUCALC_div   1048850
Fnc_SUCALC_exp   1049439
Fnc_SUCALC_init  1050202
Fnc_SUCALC_log   1050608
Fnc_SUCALC_mult  1051124
Fnc_SUCALC_sin   1051732
Fnc_SUCALC_sub   1052234
Fnc_SUCR_SPH1    1052862
Fnc_SUCR_SPH2    1053436
Fnc_SUCR_SPH3    1053761
Fnc_SUCR_by_dim  1054222
Fnc_SUCR_comp    1054620
Fnc_SUCR_comp2   1055098
Fnc_SUCR_cplane  1055404
Fnc_SUCR_cplane2 1055904
Fnc_SUCR_elem    1056079
Fnc_SUCR_elem2   1056439
Fnc_SUCR_infc    1056869
Fnc_SUDEL_surf   1057274
Fnc_SUEVAL_avg   1057540
Fnc_SUEVAL_intg  1057951
Fnc_SUEVAL_sum   1058366
Fnc_SUGET        1058769
Fnc_SUMAP_itm    1059307
Fnc_SUMAP_srfclr 1059464
Fnc_SUPL         1059810
Fnc_SUPL_2       1060279
Fnc_SUPL_rset    1060632
Fnc_SUPL_srf     1060805
Fnc_SUPL_vect    1060951
Fnc_SUPR_glb     1061383
Fnc_SUPR_srfs    1061518
Fnc_SURESU       1061930
Fnc_SUSAVE       1062240
Fnc_SUSEL        1062662
Fnc_SUVECT_cross 1063046
Fnc_SUVECT_dot   1063787
Fnc_SUVECT_smult 1064415
Fnc_SV           1065100
Fnc_SV0          1065531
Fnc_SV1          1065855
Fnc_SV2          1067360
Fnc_SVTYP_etc    1069223
Fnc_SV_stat      1070982
Fnc_SWADD3       1071199
Fnc_SWADD_an     1072166
Fnc_SWADD_cn     1072465
Fnc_SWDEL        1073673
Fnc_SWDLIS       1073982
Fnc_SWGEN2       1074359
Fnc_SWGEN3       1075687
Fnc_SWGEN_an     1076989
Fnc_SWGEN_cn     1077403
Fnc_SWLIST       1077716
Fnc_SXFil        1078023
Fnc_SYNCRO       1078243
Fnc_SecLib       1078628
Fnc_SecRead      1079013
Fnc_SecWrite_A   1080076
Fnc_SecWrite_B   1080787
Fnc_SecWrite_F   1081214
Fnc_SecWrite_X   1082512
Fnc_SectControl  1082738
Fnc_Sect_EREF    1083564
Fnc_Sect_EREF_1  1084063
Fnc_Sect_EREF_ex 1084497
Fnc_SetUp_aux12  1084946
Fnc_ShellAddEdit 1085623
Fnc_Shpp_Check   1085909
Fnc_Silicon_plat    2156
Fnc_Slide_Film   1086827
Fnc_Slide_Film_1 1087095
Fnc_Spec_Exit    1088615
Fnc_Spec_VZ      1088822
Fnc_StLoad       1090414
Fnc_StLoad2      1092356
Fnc_StLoad4      1092502
Fnc_StLoad50     1092795
Fnc_StLoad6      1094308
Fnc_StLoad7      1094603
Fnc_StLoad8      1095345
Fnc_StLoad9      1095619
Fnc_Staddtbl     1095926
Fnc_Stat_Mesh    1097290
Fnc_Status       1097471
Fnc_Steel_column    1396
Fnc_Stld         1097638
Fnc_Stnewtbl     1100009
Fnc_Stnewtbl2    1100281
Fnc_Stnewtbl3    1101031
Fnc_Stoldtable   1101340
Fnc_Strain_Rate  1101640
Fnc_Stvalue      1102079
Fnc_TALLOW       1102240
Fnc_TALLOW2      1103409
Fnc_TALLOW_reset 1103844
Fnc_TB           1103995
Fnc_TBCOPY       1107245
Fnc_TBDELE       1110106
Fnc_TBDELE_2     1113157
Fnc_TBLIST       1113534
Fnc_TBLIST_2     1117002
Fnc_TBLIST_A     1117295
Fnc_TBLIST_B     1117498
Fnc_TBPLOT       1117696
Fnc_TBPLOT_ex1   1119619
Fnc_TBPLOT_ex2   1119847
Fnc_TBPLOT_ex3   1120438
Fnc_TBTEMP       1121123
Fnc_TBTEMP_2     1121691
Fnc_TB_edit      1122005
Fnc_TB_mooney    1122290
Fnc_TB_status    1122773
Fnc_TCHG         1122951
Fnc_TCHG2        1123665
Fnc_TCHG3        1123824
Fnc_TCHG4        1124120
Fnc_TDMA_Warn    1124297
Fnc_TETFREE      1124700
Fnc_TIME_sub     1125080
Fnc_TIME_sub2    1127152
Fnc_TIME_time    1127583
Fnc_TIME_time2   1129662
Fnc_TIMINT_TINT  1130095
Fnc_TIMINT_TINT2 1132023
Fnc_TIMP         1133987
Fnc_TIMP_a       1134250
Fnc_TLSPARM      1134516
Fnc_TLSWP1       1136027
Fnc_TLSWP2       1136531
Fnc_TORQ2D       1136908
Fnc_TORQC2D      1137491
Fnc_TORQSUM      1138255
Fnc_TORQSUM_2    1138709
Fnc_TORQSUM_3    1139741
Fnc_TORQSUM_4    1140063
Fnc_TORUS        1141138
Fnc_TRANS        1141681
Fnc_TRANS_2      1141991
Fnc_TREF         1142388
Fnc_TRIFREE      1142800
Fnc_TRIMAP34     1143180
Fnc_TRIMAPA      1143562
Fnc_TRPDEL       1143940
Fnc_TRPLIS       1144261
Fnc_TRPLIS_2     1144699
Fnc_TRPOIN       1145028
Fnc_TRPOIN_2     1145483
Fnc_TRPOIN_cs    1145874
Fnc_TRTIME       1146222
Fnc_TSRES_30     1146890
Fnc_TSRES_31     1147010
Fnc_TSRES_311    1147299
Fnc_TSRES_32     1147465
Fnc_TSRES_321    1147772
Fnc_TSRES_322    1148033
Fnc_TSRES_323    1148262
Fnc_TUNIF        1148428
Fnc_Taper_explct 1148711
Fnc_Taper_pick   1149707
Fnc_Taper_pick_2 1150526
Fnc_Taper_pick_3 1150833
Fnc_Taper_pick_4 1151266
Fnc_Taper_pick_5 1151570
Fnc_TempUnits    1152288
Fnc_To_Be_Done   1152701
Fnc_TopoFil      1152831
Fnc_Total-Struct    6172
Fnc_Transduc_1   1153064
Fnc_Transducer   1154318
Fnc_Trn_Dam_1    1154570
Fnc_Trn_Dam_2    1155335
Fnc_Trn_Dam_No   1156169
Fnc_Trn_Damper   1156439
Fnc_Trn_Spr_1    1156702
Fnc_Trn_Spr_2    1157468
Fnc_Trn_Spr_No   1158262
Fnc_Trn_Spring   1158545
Fnc_Tutorial     1158796
Fnc_Tutorial_2   1158972
Fnc_UIMP_iso     1160689
Fnc_UIMP_iso_2   1161013
Fnc_UIMP_ortho   1166574
Fnc_UIMP_ortho2  1166909
Fnc_UNADAPTED_ET 1172842
Fnc_UNADPT_BETA0 1173511
Fnc_UNDO         1174167
Fnc_UPMOD        1174263
Fnc_USRCAL       1174742
Fnc_User_Beam    1175261
Fnc_V            1176779
Fnc_VA           1177036
Fnc_VA53         1177283
Fnc_VADD         1177539
Fnc_VADD_igs     1177778
Fnc_VAGeoRepair  1178028
Fnc_VATT         1178298
Fnc_VATT_p       1179462
Fnc_VATT_p2      1179897
Fnc_VCLEAR       1181225
Fnc_VCNTRL       1181478
Fnc_VCROSS       1182002
Fnc_VDELE        1183218
Fnc_VDELE_sweep  1183477
Fnc_VDGL         1183778
Fnc_VDOT         1183936
Fnc_VDRAG        1184924
Fnc_VEORa        1185286
Fnc_VEORa2       1185667
Fnc_VEORdel      1186028
Fnc_VEORdel2     1186313
Fnc_VEORk        1186605
Fnc_VEORk2       1187074
Fnc_VEORl        1187510
Fnc_VEORl2       1187886
Fnc_VEORth       1188247
Fnc_VEORth2      1188528
Fnc_VEXT         1188821
Fnc_VEXT_2       1189137
Fnc_VFCALC       1189523
Fnc_VFOPTS       1189843
Fnc_VFOPTS_1     1190525
Fnc_VFOPTS_2     1190783
Fnc_VFQUERY      1190921
Fnc_VFQUERY_1    1191421
Fnc_VFQUERY_2    1191871
Fnc_VFRC_01      1192102
Fnc_VFRC_02      1192983
Fnc_VFRC_03      1193984
Fnc_VFRC_04      1195107
Fnc_VFRC_Q       1196392
Fnc_VGEN         1196796
Fnc_VGEN2        1197107
Fnc_VGEN_move    1197763
Fnc_VGEN_move_2  1198089
Fnc_VGET         1198484
Fnc_VGLUE        1199006
Fnc_VIMP         1199251
Fnc_VIMP_a       1199507
Fnc_VINP         1199766
Fnc_VINV         1200042
Fnc_VLIST_p      1200314
Fnc_VLSCAL       1200548
Fnc_VLSCAL_2     1200862
Fnc_VMESH        1201517
Fnc_VMESH6       1202027
Fnc_VMESH6_1     1202553
Fnc_VMESH6_2     1202726
Fnc_VMESH6_3     1203215
Fnc_VMESH6_4     1203548
Fnc_VMESH6_5     1204195
Fnc_VMESH_1      1204750
Fnc_VMESH_2      1204919
Fnc_VMESH_3      1205206
Fnc_VMESH_4      1205535
Fnc_VMESH_5      1205980
Fnc_VMESH_m      1206333
Fnc_VMOR21       1206539
Fnc_VMOR22       1206747
Fnc_VMOR23       1207079
Fnc_VMORP1       1207391
Fnc_VMORPH       1207870
Fnc_VOFFST       1208244
Fnc_VOFFST_2     1208554
Fnc_VOVLAP       1208971
Fnc_VPLOT        1209229
Fnc_VPLOT_deg    1209617
Fnc_VPLO_calc    1210155
Fnc_VPLO_eval    1211094
Fnc_VPTN         1211682
Fnc_VPUT         1211933
Fnc_VROTAT       1212456
Fnc_VROTAT_2     1212897
Fnc_VSBA_div     1213296
Fnc_VSBA_div_op2 1213640
Fnc_VSBA_div_opt 1214351
Fnc_VSBV         1214808
Fnc_VSBV_igs     1215155
Fnc_VSBV_opt     1215513
Fnc_VSBV_opt_2   1215974
Fnc_VSBW_div     1216652
Fnc_VSBW_div_igs 1216921
Fnc_VSBW_div_op2 1217201
Fnc_VSBW_div_opt 1217755
Fnc_VSEL_A       1218116
Fnc_VSEL_R       1218434
Fnc_VSEL_S       1218692
Fnc_VSEL_U       1218952
Fnc_VSUM         1219210
Fnc_VSWEEP       1219427
Fnc_VSWEEP_1     1219764
Fnc_VSWEEP_2     1219990
Fnc_VSWEEP_3     1220221
Fnc_VSWEEP_4     1220563
Fnc_VSWEEP_m     1220984
Fnc_VSWEEPa      1221141
Fnc_VSWEEPb      1221558
Fnc_VSWEEPb1     1222067
Fnc_VSWEEPb2     1222240
Fnc_VSWEEPb3     1222530
Fnc_VSWEEPb4     1222863
Fnc_VSWEEPb5     1223311
Fnc_VSYMM        1223667
Fnc_VSYMM_2      1223991
Fnc_VTRAN        1224640
Fnc_VTRAN_2      1224967
Fnc_VariView     1225614
Fnc_WAVES        1225748
Fnc_WERASE       1226384
Fnc_WFRONT       1226572
Fnc_WFRONT_2     1227144
Fnc_WMORE        1227469
Fnc_WPAV         1227970
Fnc_WPAVE_000    1228215
Fnc_WPCSYS       1228464
Fnc_WPCSYS_activ 1228762
Fnc_WPLA         1228932
Fnc_WRFULL       1229204
Fnc_WRFULL_a     1229851
Fnc_WRFULL_b     1230031
Fnc_WRFULL_c     1230217
Fnc_WRNMODCYC    1230402
Fnc_WSORT        1230747
Fnc_WSPRINGS     1231630
Fnc_WSTART       1231770
Fnc_Wave_List    1232264
Fnc_Weld2        1232474
Fnc_Whatsnew     1233143
Fnc_Whatsnew_2   1233324
Fnc_Wire         1234733
Fnc_Wire0        1234958
Fnc_Write_Beam   1235294
Fnc_Write_aux12  1236523
Fnc_X-Structure-    5260
Fnc_XFAPPEND_lsm 1237297
Fnc_XFAPPEND_p   1237631
Fnc_XFDATA_lsm   1237955
Fnc_XFDATA_p     1238369
Fnc_XFDELETE     1238687
Fnc_XFENRICH_ls2 1238976
Fnc_XFENRICH_lsm 1239372
Fnc_XFENRICH_p   1240382
Fnc_XFENRICH_p2  1241389
Fnc_XFLIST       1241785
Fnc_X_stress        4166
Fnc_Y-Structure-    5564
Fnc_Y_stress        4442
Fnc_Z-Structure-    5868
Fnc_ZLoad        1242082
Fnc_ZLoad2       1246132
Fnc_ZLoad4       1246353
Fnc_ZLoad42      1247000
Fnc_ZLoad50      1247347
Fnc_ZLoad6       1252217
Fnc_ZLoad62      1252671
Fnc_ZLoad7       1253204
Fnc_ZLoad72      1253915
Fnc_ZLoad8       1254657
Fnc_ZLoad82      1255011
Fnc_ZLoad9       1255260
Fnc_ZLoad92      1255555
Fnc_ZReCo2       1255849
Fnc_ZReCo4       1256070
Fnc_ZReCo42      1256462
Fnc_ZReCo50      1256728
Fnc_ZReCo6       1258053
Fnc_ZReCo62      1258341
Fnc_ZReCo7       1258770
Fnc_ZReCo72      1259392
Fnc_ZReCo8       1260017
Fnc_ZReCo82      1260367
Fnc_ZReCo9       1260612
Fnc_ZReCo92      1260885
Fnc_Z_stress        4718
Fnc_ZeDiode      1261158
Fnc_accept_rjct  1261428
Fnc_accept_rjct2 1261897
Fnc_adDYNROT     1262237
Fnc_bothld       1262440
Fnc_chkelms      1262671
Fnc_dDYNROT      1262927
Fnc_del_Coriolis 1264308
Fnc_dynld        1264768
Fnc_etyp_UNDOC   1264994
Fnc_oldPLESOL    1265510
Fnc_oldPLNSOL    1298746
Fnc_oldPRESOL    1342541
Fnc_oldPRNSOL    1355205
Fnc_p26DataSet   1380905
Fnc_p26DefineVar 1381648
Fnc_p26FileSet   1381898
Fnc_p26GrphSet   1382264
Fnc_p26ListSet   1383843
Fnc_rcedit_124   1384844
Fnc_rcedit_124_2 1385137
Fnc_rcon_0       1385706
Fnc_rcon_00      1386297
Fnc_rcon_1       1386992
Fnc_rcon_10      1387207
Fnc_rcon_106     1387427
Fnc_rcon_107     1387669
Fnc_rcon_108     1387911
Fnc_rcon_109     1388153
Fnc_rcon_11      1388581
Fnc_rcon_110     1389225
Fnc_rcon_111     1389467
Fnc_rcon_115     1389693
Fnc_rcon_116     1389904
Fnc_rcon_117     1394130
Fnc_rcon_118     1394357
Fnc_rcon_119     1394578
Fnc_rcon_12      1394799
Fnc_rcon_120     1395932
Fnc_rcon_121     1396153
Fnc_rcon_122     1396379
Fnc_rcon_123     1396605
Fnc_rcon_124     1396847
Fnc_rcon_124_0   1397695
Fnc_rcon_124_1   1398427
Fnc_rcon_124_10  1399257
Fnc_rcon_124_11  1399989
Fnc_rcon_124_12  1400741
Fnc_rcon_124_2   1401493
Fnc_rcon_124_34a 1402328
Fnc_rcon_124_3_0 1403500
Fnc_rcon_124_3_1 1404391
Fnc_rcon_124_3_2 1405609
Fnc_rcon_124_3_3 1406954
Fnc_rcon_124_3_4 1408258
Fnc_rcon_124_5   1408617
Fnc_rcon_124_6   1409404
Fnc_rcon_124_7   1410156
Fnc_rcon_124_8   1410904
Fnc_rcon_124_9   1411812
Fnc_rcon_124_xx  1412568
Fnc_rcon_125     1413363
Fnc_rcon_125_0   1413674
Fnc_rcon_125_1   1414900
Fnc_rcon_126     1415432
Fnc_rcon_126_0   1415710
Fnc_rcon_126_00  1416740
Fnc_rcon_126_01  1417754
Fnc_rcon_127     1420729
Fnc_rcon_128     1420927
Fnc_rcon_129     1421125
Fnc_rcon_13      1421764
Fnc_rcon_130     1422000
Fnc_rcon_131     1422695
Fnc_rcon_132     1422937
Fnc_rcon_136     1423179
Fnc_rcon_138     1424096
Fnc_rcon_139     1424928
Fnc_rcon_14      1426091
Fnc_rcon_141     1427833
Fnc_rcon_142     1428060
Fnc_rcon_143     1428287
Fnc_rcon_144     1428514
Fnc_rcon_145     1428752
Fnc_rcon_146     1428950
Fnc_rcon_147     1429157
Fnc_rcon_148     1429365
Fnc_rcon_15      1429573
Fnc_rcon_150     1430120
Fnc_rcon_151     1430323
Fnc_rcon_151a    1432637
Fnc_rcon_151b    1433085
Fnc_rcon_151c    1434120
Fnc_rcon_151d    1434434
Fnc_rcon_151i    1434911
Fnc_rcon_151j    1435454
Fnc_rcon_151k    1435801
Fnc_rcon_151l    1436174
Fnc_rcon_151m    1436495
Fnc_rcon_151x    1436851
Fnc_rcon_151y    1437536
Fnc_rcon_151yy   1438265
Fnc_rcon_151z    1438996
Fnc_rcon_152     1439813
Fnc_rcon_152a    1441895
Fnc_rcon_152b    1442343
Fnc_rcon_152c    1443378
Fnc_rcon_152d    1443692
Fnc_rcon_152i    1444169
Fnc_rcon_152j    1444712
Fnc_rcon_152k    1445059
Fnc_rcon_152l    1445432
Fnc_rcon_152m    1445753
Fnc_rcon_152x    1446109
Fnc_rcon_152y    1446820
Fnc_rcon_152yy   1447575
Fnc_rcon_152z    1448332
Fnc_rcon_153     1449175
Fnc_rcon_154     1450531
Fnc_rcon_155     1451627
Fnc_rcon_156     1451864
Fnc_rcon_157     1452104
Fnc_rcon_158     1452920
Fnc_rcon_159     1453162
Fnc_rcon_16      1454077
Fnc_rcon_160     1455656
Fnc_rcon_161     1456119
Fnc_rcon_161A    1456501
Fnc_rcon_161B    1458346
Fnc_rcon_161C    1460006
Fnc_rcon_161E    1461400
Fnc_rcon_161F    1462619
Fnc_rcon_161G    1463230
Fnc_rcon_161H    1464496
Fnc_rcon_161H2   1465160
Fnc_rcon_161I    1467453
Fnc_rcon_161x    1469573
Fnc_rcon_162     1471293
Fnc_rcon_163     1471535
Fnc_rcon_163A    1471923
Fnc_rcon_163B    1473531
Fnc_rcon_163B1   1474675
Fnc_rcon_163B2   1475327
Fnc_rcon_163B3   1477979
Fnc_rcon_163C    1478366
Fnc_rcon_163C1   1479027
Fnc_rcon_163C2   1480348
Fnc_rcon_163C3   1481066
Fnc_rcon_163C3A  1483049
Fnc_rcon_163C4   1484803
Fnc_rcon_163C5   1486099
Fnc_rcon_163x    1486485
Fnc_rcon_164     1487973
Fnc_rcon_165     1488215
Fnc_rcon_166     1489072
Fnc_rcon_166A    1489346
Fnc_rcon_166B    1489913
Fnc_rcon_167     1490904
Fnc_rcon_168     1491452
Fnc_rcon_169     1491694
Fnc_rcon_17      1492381
Fnc_rcon_170     1492601
Fnc_rcon_171     1493303
Fnc_rcon_172     1493654
Fnc_rcon_173     1494005
Fnc_rcon_174     1494356
Fnc_rcon_175     1494707
Fnc_rcon_176     1495058
Fnc_rcon_177     1495409
Fnc_rcon_178     1495760
Fnc_rcon_179     1500607
Fnc_rcon_17X_a   1501316
Fnc_rcon_17X_b   1502489
Fnc_rcon_17X_c   1502838
Fnc_rcon_17X_d   1503527
Fnc_rcon_17X_e   1504201
Fnc_rcon_17X_f   1504881
Fnc_rcon_17X_g   1505251
Fnc_rcon_17X_h   1505600
Fnc_rcon_17X_i   1505998
Fnc_rcon_17X_j   1506386
Fnc_rcon_17X_k   1506787
Fnc_rcon_17X_x   1507187
Fnc_rcon_18      1507315
Fnc_rcon_180     1508680
Fnc_rcon_181     1509391
Fnc_rcon_182     1509628
Fnc_rcon_182A    1510139
Fnc_rcon_182B    1510950
Fnc_rcon_183     1511195
Fnc_rcon_183A    1511470
Fnc_rcon_183B    1512039
Fnc_rcon_184     1512292
Fnc_rcon_185     1512516
Fnc_rcon_185A    1512791
Fnc_rcon_185B    1513354
Fnc_rcon_186     1513599
Fnc_rcon_187     1513841
Fnc_rcon_188     1514083
Fnc_rcon_189     1514323
Fnc_rcon_19      1514563
Fnc_rcon_190     1514819
Fnc_rcon_191     1515061
Fnc_rcon_192     1515288
Fnc_rcon_192A    1515651
Fnc_rcon_192B    1516220
Fnc_rcon_193     1516465
Fnc_rcon_193A    1516828
Fnc_rcon_193B    1517397
Fnc_rcon_194     1517642
Fnc_rcon_195     1517884
Fnc_rcon_19A     1518126
Fnc_rcon_19B     1519210
Fnc_rcon_2       1520411
Fnc_rcon_20      1520674
Fnc_rcon_200     1520894
Fnc_rcon_201     1521134
Fnc_rcon_202     1521909
Fnc_rcon_202A    1522219
Fnc_rcon_202B    1522788
Fnc_rcon_203     1523033
Fnc_rcon_203A    1523343
Fnc_rcon_203B    1523912
Fnc_rcon_204     1524157
Fnc_rcon_205     1524399
Fnc_rcon_208     1524641
Fnc_rcon_209     1524883
Fnc_rcon_21      1525125
Fnc_rcon_212     1525441
Fnc_rcon_212A    1525716
Fnc_rcon_212B    1526289
Fnc_rcon_213     1526534
Fnc_rcon_213A    1526809
Fnc_rcon_213B    1527382
Fnc_rcon_214     1527627
Fnc_rcon_215     1528722
Fnc_rcon_216     1528964
Fnc_rcon_217     1529206
Fnc_rcon_21A     1529448
Fnc_rcon_21B     1530614
Fnc_rcon_21C     1531367
Fnc_rcon_21D     1532201
Fnc_rcon_22      1532954
Fnc_rcon_220     1534139
Fnc_rcon_221     1534623
Fnc_rcon_223     1535107
Fnc_rcon_226     1535349
Fnc_rcon_227     1535591
Fnc_rcon_23      1535833
Fnc_rcon_230     1536053
Fnc_rcon_230A    1536363
Fnc_rcon_230B    1536932
Fnc_rcon_231     1537177
Fnc_rcon_232     1537419
Fnc_rcon_233     1537661
Fnc_rcon_233A    1537936
Fnc_rcon_233B    1538800
Fnc_rcon_236     1540241
Fnc_rcon_236B    1540566
Fnc_rcon_237     1541705
Fnc_rcon_237B    1542030
Fnc_rcon_238     1543169
Fnc_rcon_238A    1543479
Fnc_rcon_238B    1544048
Fnc_rcon_239     1544293
Fnc_rcon_24      1544535
Fnc_rcon_240     1544816
Fnc_rcon_241     1545058
Fnc_rcon_242     1545625
Fnc_rcon_25      1546109
Fnc_rcon_251     1546345
Fnc_rcon_252     1546585
Fnc_rcon_26      1546825
Fnc_rcon_263     1547049
Fnc_rcon_264     1547291
Fnc_rcon_265     1547533
Fnc_rcon_27      1547775
Fnc_rcon_272     1548153
Fnc_rcon_273     1548395
Fnc_rcon_278     1548637
Fnc_rcon_279     1548879
Fnc_rcon_27A     1549121
Fnc_rcon_27B     1553221
Fnc_rcon_27C     1560602
Fnc_rcon_28      1564141
Fnc_rcon_281     1564786
Fnc_rcon_285     1565023
Fnc_rcon_288     1565265
Fnc_rcon_289     1565505
Fnc_rcon_29      1565745
Fnc_rcon_290     1566224
Fnc_rcon_2A      1566466
Fnc_rcon_2B      1567029
Fnc_rcon_3       1567270
Fnc_rcon_30      1567485
Fnc_rcon_300     1567964
Fnc_rcon_31      1568776
Fnc_rcon_32      1569503
Fnc_rcon_33      1569723
Fnc_rcon_34      1570201
Fnc_rcon_35      1570845
Fnc_rcon_36      1571081
Fnc_rcon_37      1572027
Fnc_rcon_38      1573604
Fnc_rcon_38A     1573873
Fnc_rcon_38B     1575084
Fnc_rcon_39      1576463
Fnc_rcon_4       1579618
Fnc_rcon_40      1581115
Fnc_rcon_41      1582055
Fnc_rcon_42      1583087
Fnc_rcon_42A     1583356
Fnc_rcon_42B     1583966
Fnc_rcon_43      1584205
Fnc_rcon_44      1584427
Fnc_rcon_45      1584708
Fnc_rcon_45A     1584977
Fnc_rcon_45B     1585575
Fnc_rcon_46      1585814
Fnc_rcon_47      1586036
Fnc_rcon_48      1586272
Fnc_rcon_49      1586496
Fnc_rcon_5       1586720
Fnc_rcon_50      1586950
Fnc_rcon_51      1587188
Fnc_rcon_52      1587833
Fnc_rcon_53      1589429
Fnc_rcon_53A     1589685
Fnc_rcon_53A1    1590131
Fnc_rcon_53B     1591148
Fnc_rcon_53B1    1591410
Fnc_rcon_54      1592989
Fnc_rcon_55      1593209
Fnc_rcon_55A     1593602
Fnc_rcon_55B     1594470
Fnc_rcon_55C     1594717
Fnc_rcon_55D     1595283
Fnc_rcon_56      1595555
Fnc_rcon_57      1595791
Fnc_rcon_58      1596013
Fnc_rcon_59      1596249
Fnc_rcon_60      1597817
Fnc_rcon_61      1598037
Fnc_rcon_62      1598682
Fnc_rcon_63      1598904
Fnc_rcon_64      1600258
Fnc_rcon_65      1600494
Fnc_rcon_66      1602240
Fnc_rcon_67      1602462
Fnc_rcon_68      1602684
Fnc_rcon_69      1603162
Fnc_rcon_7       1603384
Fnc_rcon_70      1603603
Fnc_rcon_70A     1603872
Fnc_rcon_70B     1604610
Fnc_rcon_71      1604857
Fnc_rcon_72      1605892
Fnc_rcon_73      1606128
Fnc_rcon_74      1606364
Fnc_rcon_75      1606600
Fnc_rcon_77      1606836
Fnc_rcon_77A     1607140
Fnc_rcon_77B     1607704
Fnc_rcon_78      1607943
Fnc_rcon_79      1608179
Fnc_rcon_8       1608401
Fnc_rcon_80      1608616
Fnc_rcon_81      1608838
Fnc_rcon_82      1609060
Fnc_rcon_82A     1609329
Fnc_rcon_82B     1609939
Fnc_rcon_83      1610186
Fnc_rcon_84      1610422
Fnc_rcon_86      1610658
Fnc_rcon_87      1610894
Fnc_rcon_88      1611130
Fnc_rcon_89      1611352
Fnc_rcon_9       1611574
Fnc_rcon_90      1611804
Fnc_rcon_91      1612045
Fnc_rcon_92      1612267
Fnc_rcon_93      1612503
Fnc_rcon_94      1612725
Fnc_rcon_95      1612908
Fnc_rcon_95_a    1613304
Fnc_rcon_96      1613747
Fnc_rcon_97      1613983
Fnc_rcon_97A     1614329
Fnc_rcon_97A1    1614775
Fnc_rcon_97B     1616194
Fnc_rcon_97B1    1616456
Fnc_rcon_98      1618395
Fnc_rcon_99      1618631
Fnc_rcon_NA_1    1618853
Fnc_rcon_NA_2    1619387
Fnc_rcon_NA_3    1619943
Fnc_rcon_NA_f    1620580
Fnc_rcon_UNDOC   1620716
Fnc_rcon_UNDOC_R 1621252
Fnc_res_load     1621823
Fnc_res_time     1621984
Fnc_ss_Adv1      1622140
Fnc_ss_Advopt    1622715
Fnc_ss_MESH      1624554
Fnc_ss_SIZE      1624677
Fnc_ss_STAT      1625371
Fnc_tbd          1625507
Fnc_thaddtbl     1625615
Fnc_thld         1626979
Fnc_thnewtbl     1629404
Fnc_thnewtbl2    1629676
Fnc_thnewtbl3    1630424
Fnc_tholdtable   1630733
Fnc_thvalue      1631033
Fnc_tranld       1631194
Men_-REZONE-     1631408
Men_P1_-REZONE-  1631598
Men_RZN_CreateZn 1631696
Men_RZN_GeomCtrl 1631930
Men_RZN_MeshCtrl 1632028
Men_P1_-REZONE-  1632332
Men_RZN_CreateZn 1632430
Men_RZN_GeomCtrl 1632664
Men_RZN_MeshCtrl 1632762
Men_RZN_GeomCtrl 1633358
Men_RZN_MeshCtrl 1633456
Men_RZN_MeshCtrl 1633973
