:F UIFUNC1.GRN
:D Modified on %E%, Revision (SID) = %I% 
:I   2570, 1989853, 2054128
:! 
:N Fnc_*AFUN
:S    466,   261,   198
:T Cmd
:C )! Fnc_*AFUN
:C )/NOPR
:C )*get,_z1,common,,parmcm,,int,802
:C )*IF,_z1,eq,1,THEN
:C )_z2='DEG'
:C )*ELSE
:C )_z2='RAD'
:C )*ENDIF
:C )/GO
:A Angular Units 
:D Angular Units for Parametric Functions
:H Hlp_C_*AFUN
Cmd_*AFUN
 Fld_2
  Prm_[*AFUN]  Units for angular -
  Typ_LIS_OPTIONB
   LIS_Radians      RAD,RAD
   LIS_Degrees      DEG,DEG
   Def_*PAR(_z2)
 Fld_0
  Typ_Lab
  Prm_         - parametric functions
:E END
:! 
:N Fnc_*ASK
:S   3571,  2121,  1443
:T Cmd
:A Multi *ASK
:D Multi-Prompt for Variables
:C )! Fnc_*ASK
:!
:! *** NOTICE:             This is not supported directly on the
:!                         ANSYS distribution
:!
:! *** primary function:   This function block is used to display a dialog
:!                         with multiple promts for variables.  A maximum of
:!                         ten prompts may be displayed.
:!                         This is used in conjunction with the Multi-Prompt
:!                         macro (MULTIPRO.MAC).  Issue MULTIPRO,'HELP' to see
:!                         help on using this function.
:!
:! input arguments:
:!    variable (typ,siz,intent)    description
:!    CPAR     (chr,ary,out)     - CPAR should be filled by MULTIPRO
:!
:! output arguments:
:!    variable (typ,siz,intent)    description
:!    _BUTTON                    - 0 if the OK button is pressed
:!                                 1 if the Cancel button is pressed
:!
:! The :C lines here check to determine if a default value was given.  If not
:! then the data is not written to a file unless the macro was called with a
:! second argument.
:C )/NOPR
:C )_tiny=2**(-100)
:C )KEYW,ASK1,1,ASK2,1,ASK3,1,ASK4,1,ASK5,1
:C )KEYW,ASK6,1,ASK7,1,ASK8,1,ASK9,1,ASK10,1
:C )*GET,_z1,CPAR,3
:C )*IF,_z1,EE,_tiny,THEN
:C )   KEYW,ASK1,0
:C )*ENDIF
:C )*GET,_z1,CPAR,6
:C )*IF,_z1,EE,_tiny,THEN
:C )   KEYW,ASK2,0
:C )*ENDIF
:C )*GET,_z1,CPAR,9
:C )*IF,_z1,EE,_tiny,THEN
:C )   KEYW,ASK3,0
:C )*ENDIF
:C )*GET,_z1,CPAR,12
:C )*IF,_z1,EE,_tiny,THEN
:C )   KEYW,ASK4,0
:C )*ENDIF
:C )*GET,_z1,CPAR,15
:C )*IF,_z1,EE,_tiny,THEN
:C )   KEYW,ASK5,0
:C )*ENDIF
:C )*GET,_z1,CPAR,18
:C )*IF,_z1,EE,_tiny,THEN
:C )   KEYW,ASK6,0
:C )*ENDIF
:C )*GET,_z1,CPAR,21
:C )*IF,_z1,EE,_tiny,THEN
:C )   KEYW,ASK7,0
:C )*ENDIF
:C )*GET,_z1,CPAR,24
:C )*IF,_z1,EE,_tiny,THEN
:C )   KEYW,ASK8,0
:C )*ENDIF
:C )*GET,_z1,CPAR,27
:C )*IF,_z1,EE,_tiny,THEN
:C )   KEYW,ASK9,0
:C )*ENDIF
:C )*GET,_z1,CPAR,30
:C )*IF,_z1,EE,_tiny,THEN
:C )   KEYW,ASK10,0
:C )*ENDIF
:C )*DEL,_tiny
:C )*DEL,_ask
:C )*DIM,_ask,char,80
:C )/OUTPUT,ansuitmp
Inp_P
Cmd_)/COM
  Fld_2
   K_FL(ASK1*MLTPRM1)
    Typ_Def_*CPAR(2)
Cmd_)/COM
  Fld_2
   K_FL(ASK1*MLTPRM1)
    Typ_Def_*CPAR(1)
Cmd_)/COM
  Fld_2
   K_FL(ASK2*MLTPRM2)
    Typ_Def_*CPAR(5)
Cmd_)/COM
  Fld_2
   K_FL(ASK2*MLTPRM2)
    Typ_Def_*CPAR(4)
Cmd_)/COM
  Fld_2
   K_FL(ASK3*MLTPRM3)
    Typ_Def_*CPAR(8)
Cmd_)/COM
  Fld_2
   K_FL(ASK3*MLTPRM3)
    Typ_Def_*CPAR(7)
Cmd_)/COM
  Fld_2
   K_FL(ASK4*MLTPRM4)
    Typ_Def_*CPAR(11)
Cmd_)/COM
  Fld_2
   K_FL(ASK4*MLTPRM4)
    Typ_Def_*CPAR(10)
Cmd_)/COM
  Fld_2
   K_FL(ASK5*MLTPRM5)
    Typ_Def_*CPAR(14)
Cmd_)/COM
  Fld_2
   K_FL(ASK5*MLTPRM5)
    Typ_Def_*CPAR(13)
Cmd_)/COM
  Fld_2
   K_FL(ASK6*MLTPRM6)
    Typ_Def_*CPAR(17)
Cmd_)/COM
  Fld_2
   K_FL(ASK6*MLTPRM6)
    Typ_Def_*CPAR(16)
Cmd_)/COM
  Fld_2
   K_FL(ASK7*MLTPRM7)
    Typ_Def_*CPAR(20)
Cmd_)/COM
  Fld_2
   K_FL(ASK7*MLTPRM7)
    Typ_Def_*CPAR(19)
Cmd_)/COM
  Fld_2
   K_FL(ASK8*MLTPRM8)
    Typ_Def_*CPAR(23)
Cmd_)/COM
  Fld_2
   K_FL(ASK8*MLTPRM8)
    Typ_Def_*CPAR(22)
Cmd_)/COM
  Fld_2
   K_FL(ASK9*MLTPRM9)
    Typ_Def_*CPAR(26)
Cmd_)/COM
  Fld_2
   K_FL(ASK9*MLTPRM9)
    Typ_Def_*CPAR(25)
Cmd_)/COM
  Fld_2
   K_FL(ASK10*MLTPRM10)
    Typ_Def_*CPAR(29)
Cmd_)/COM
  Fld_2
   K_FL(ASK10*MLTPRM10)
    Typ_Def_*CPAR(28)
Cmd_)/output,term
!
Cmd_)/NOPR
! This next line uses the file created in MULTIPRO.MAC to read the data in to
! an ANSYS acceptable character parameter array.
Cmd_)/input,ansuimac
!
Cal_Fnc_*ASK_HELP
:E End
:! 
:N Fnc_*ASK_2
:S   3056,   665,  2384
:T Cmd
:A Multi-*ASK
:D Multi-Prompt for Variables
:C )! Fnc_*ASK_2
:! The %#_ask(n)% brings in the parameter w/o compressing spaces
:! The :C lines here get the default values and place them in a parameter.
:C )!/NOPR
:C )*DEL,_var
:C )*DIM,_var,array,10
:C )*GET,_var(1),CPAR,3
:C )*GET,_var(2),CPAR,6
:C )*GET,_var(3),CPAR,9
:C )*GET,_var(4),CPAR,12
:C )*GET,_var(5),CPAR,15
:C )*GET,_var(6),CPAR,18
:C )*GET,_var(7),CPAR,21
:C )*GET,_var(8),CPAR,24
:C )*GET,_var(9),CPAR,27
:C )*GET,_var(10),CPAR,30
:C )*SET,_BUTTON,1
:C )*DEL,_h
:C )*DIM,_h,char,8
:C )*DO,_i,1,8,1
:C )*SET,_h(_i),_z(_i+8)
:C )*ENDDO
:C )*SET,_i
:C )/GO
Inp_NoApply
Cmd_)!
 K_CM(HLP1)
  Fld_0
  Typ_Lab
  Prm_%#_z(1)%%#_z(2)%%#_z(3)%%#_z(4)%%#_z(5)%%#_z(6)%%#_z(7)%%#_z(8)%
Cmd_)!
 K_CM(HLP2)
  Fld_0
  Typ_Lab
  Prm_%#_h(1)%%#_h(2)%%#_h(3)%%#_h(4)%%#_h(5)%%#_h(6)%%#_h(7)%%#_h(8)%
Cmd_)!
 K_CM(HLP1)
  Fld_0
  Typ_Sep
Cmd_*SET
 K_CM(ASK1*MLTPRM1)
  Fld_0
   Typ_Lab
   Prm_%#_ask(1)%%#_ask(2)%%#_ask(3)%%#_ask(4)%
  Fld_2
   Typ_Def_*CPAR(1)
  Fld_3
   Typ_Real
   Prm_                   %_ask(5)%
   Def_*PAR(_var(1))
Cmd_*SET
 K_CM(ASK2*MLTPRM2)
  Fld_0
   Typ_Lab
   Prm_%#_ask(9)%%#_ask(10)%%#_ask(11)%%#_ask(12)%
  Fld_2
   Typ_Def_*CPAR(4)
  Fld_3
   Typ_Real
   Prm_                   %_ask(13)%
   Def_*PAR(_var(2))
Cmd_*SET
 K_CM(ASK3*MLTPRM3)
  Fld_0
   Typ_Lab
   Prm_%#_ask(17)%%#_ask(18)%%#_ask(19)%%#_ask(20)%
  Fld_2
   Typ_Def_*CPAR(7)
  Fld_3
   Typ_Real
   Prm_                   %_ask(21)%
   Def_*PAR(_var(3))
Cmd_*SET
 K_CM(ASK4*MLTPRM4)
  Fld_0
   Typ_Lab
   Prm_%#_ask(25)%%#_ask(26)%%#_ask(27)%%#_ask(28)%
  Fld_2
   Typ_Def_*CPAR(10)
  Fld_3
   Typ_Real
   Prm_                   %_ask(29)%
   Def_*PAR(_var(4))
Cmd_*SET
 K_CM(ASK5*MLTPRM5)
  Fld_0
   Typ_Lab
   Prm_%#_ask(33)%%#_ask(34)%%#_ask(35)%%#_ask(36)%
  Fld_2
   Typ_Def_*CPAR(13)
  Fld_3
   Typ_Real
   Prm_                   %_ask(37)%
   Def_*PAR(_var(5))
Cmd_*SET
 K_CM(ASK6*MLTPRM6)
  Fld_0
   Typ_Lab
   Prm_%#_ask(41)%%#_ask(42)%%#_ask(43)%%#_ask(44)%
  Fld_2
   Typ_Def_*CPAR(16)
  Fld_3
   Typ_Real
   Prm_                   %_ask(45)%
   Def_*PAR(_var(6))
Cmd_*SET
 K_CM(ASK7*MLTPRM7)
  Fld_0
   Typ_Lab
   Prm_%#_ask(49)%%#_ask(50)%%#_ask(51)%%#_ask(52)%
  Fld_2
   Typ_Def_*CPAR(19)
  Fld_3
   Typ_Real
   Prm_                   %_ask(53)%
   Def_*PAR(_var(7))
Cmd_*SET
 K_CM(ASK8*MLTPRM8)
  Fld_0
   Typ_Lab
   Prm_%#_ask(57)%%#_ask(58)%%#_ask(59)%%#_ask(60)%
  Fld_2
   Typ_Def_*CPAR(22)
  Fld_3
   Typ_Real
   Prm_                   %_ask(61)%
   Def_*PAR(_var(8))
Cmd_*SET
 K_CM(ASK9*MLTPRM9)
  Fld_0
   Typ_Lab
   Prm_%#_ask(65)%%#_ask(66)%%#_ask(67)%%#_ask(68)%
  Fld_2
   Typ_Def_*CPAR(25)
  Fld_3
   Typ_Real
   Prm_                   %_ask(69)%
   Def_*PAR(_var(9))
Cmd_*SET
 K_CM(ASK10*MLTPRM10)
  Fld_0
   Typ_Lab
   Prm_%#_ask(73)%%#_ask(74)%%#_ask(75)%%#_ask(76)%
  Fld_2
   Typ_Def_*CPAR(28)
  Fld_3
   Typ_Real
   Prm_                   %_ask(77)%
   Def_*PAR(_var(10))
Cmd_)/NOPR
Cmd_)*SET,_BUTTON,0
Cmd_)/GO
Fld_0
 Typ_SEP
:E End
:! 
:N Fnc_*ASK_HELP
:S   1019,   582,   430
:T Cmd
:A Multi *ASK
:D Multi-Prompt for Variables
:C )! Fnc_*ASK_HELP
:!
:! The :C lines here check to determine if a HELP value was given.  If not
:! then the data is not written to a file.
:C )/NOPR
:C )_tiny=999
:C )KEYW,HLP1,1,HLP2,1
:C )*GET,_z1,CPAR,61
:C )*IF,_z1,EQ,_tiny,THEN
:C )   KEYW,HLP1,0
:C )*ENDIF
:C )*GET,_z1,CPAR,63
:C )*IF,_z1,EQ,_tiny,THEN
:C )   KEYW,HLP2,0
:C )*ENDIF
:C )*DEL,_tiny
:C )*CREATE,ansuimac
:C )*VREAD,_z(1),ansuitmp
:C )(1X,8A)
:C )/RMTEMP
:C )*END
:C )*DEL,_z
:C )*DIM,_z,char,16
:C )/OUTPUT,ansuitmp
Inp_P
Cmd_)/COM
  Fld_2
   K_FL(HLP1)
    Typ_Def_*CPAR(61)
    Dlm_~
  Fld_3
   K_FL(HLP1)
    Typ_Def_*CPAR(62)
Cmd_)/COM
  Fld_2
   K_FL(HLP2)
    Typ_Def_*CPAR(63)
    Dlm_~
  Fld_3
   K_FL(HLP2)
    Typ_Def_*CPAR(64)
Cmd_)/output,term
!
Cmd_)/NOPR
! This next line uses the file created in MULTIPRO.MAC to read the data in to
! an ANSYS acceptable character parameter array.
Cmd_)/input,ansuimac
 K_CM(HLP1)
!
Cal_Fnc_*ASK_2
:E End
:! 
:N Fnc_*CREATE
:S   1527,   206,  1314
:T Cmd
:C )!  Fnc_*CREATE
:H Hlp_C_*CREATE
:A Create Macro
:C )/NOPR
:C )_z1=2**(-100) ! Establish 'tiny' to force blank defaults at all times
:C )/GO
:D Create Macro
Fmt_H
Cmd_*CREATE
 Fld_2
  Prm_[*CREATE]  Macro file name 
  Typ_FILE_INLINE
  Def_*PAR(_z1)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
Prm_Enter commands to be included in macro                                 .
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
Cmd_)!
 Fld_1
  Typ_Char,80,80
  Prm_
  Def_*PAR(_z1)
! Exclude_from_paths
Cmd_*END
:E End
:! 
:N Fnc_*GET
:S   3868,   110,  3751
:T Cmd
:C )! Fnc_*GET
:A Get Scalar Data
:H Hlp_C_*GET
:D Get Scalar Data
Inp_NoApply
Cmd_)/NOPR
Cmd_)*set,_z1
 Fld_0
  Typ_Lab
  Prm_[*GET]  Get Scalar Data
 Fld_2
  Prm_Type of data to be retrieved
  Typ_IDX
  IDX_Current settings,Current settings,1
  IDX_Graphics data   ,Graphics data   ,2
  IDX_Model data      ,Nodes           ,3
  IDX_Model data      ,Elements        ,4
  IDX_Model data      ,Keypoints       ,5
  IDX_Model data      ,Lines           ,6
  IDX_Model data      ,Areas           ,7
  IDX_Model data      ,Volumes         ,8
  IDX_Model data      ,For selected set,9
  IDX_Model data      ,Coord systems   ,10
  IDX_Model data      ,Element types   ,11
  IDX_Model data      ,Real constants  ,12
  IDX_Model data      ,Material props  ,13
  IDX_Model data      ,Data tables     ,14
  IDX_Results data    ,Global measures ,15
  IDX_Results data    ,Nodal results   ,16
  IDX_Results data    ,Element results ,17
   P_LN(LINPLUS*ELECMAG)
  IDX_Results data    ,Modal results   ,18
  IDX_Results data    ,Elem table data ,19
  IDX_Results data    ,Elem table sums ,20
  IDX_Results data    ,Elem table misc ,21
  IDX_Results data    ,Path operations ,22
  IDX_Results data    ,Other operations,23
  IDX_Results data    ,Time-hist var's ,24
  IDX_Design opt data ,Design opt data ,25
  IDX_Topo opt data   ,General         ,36
  IDX_Topo opt data   ,Elem densities  ,37
  IDX_Topo opt data   ,Frequencies     ,38
  IDX_Topo opt data   ,Constraints     ,39
  IDX_Topo opt data   ,Iter history    ,40
  IDX_Parameters      ,Parameters      ,26
  IDX_Parameters      ,Parameter Loc   ,27
  IDX_Components      ,Component Type  ,28
  IDX_Components      ,No of components,29
  IDX_Components      ,Component name  ,30
  IDX_Components      ,Subcomponent num,31
  IDX_Components      ,Subcomponent nam,32
  IDX_Radiosity       ,Radiosity Meth  ,52
K_LN(LSDYNA)
  IDX_Parts           ,Number of parts ,41
K_LN(LSDYNA)
  IDX_Parts           ,Element type    ,42
K_LN(LSDYNA)
  IDX_Parts           ,Material number ,43
K_LN(LSDYNA)
  IDX_Parts           ,Real Const Set  ,44
K_LN(LSDYNA)
  IDX_Spotwelds       ,Number of welds ,45
K_LN(LSDYNA)
  IDX_Spotwelds       ,Highest weld no ,46
K_LN(LSDYNA)
  IDX_Spotwelds       ,Lowest weld no  ,47
K_LN(LSDYNA)
  IDX_Spotwelds       ,Next weld no    ,48
K_LN(LSDYNA)
  IDX_Spotwelds       ,Weld nodes      ,49
K_LN(LSDYNA)
  IDX_Contact         ,No of cont defs ,50
K_LN(LSDYNA)
  IDX_Contact         ,Contact entities,51
  IDX_Run time stats  ,Run time stats  ,33
  IDX_Loads           ,On Nodes        ,34
  IDX_Loads           ,On Elements     ,35
Cmd_)/GOPR
Cal_Fnc_*GET_active, 2,eq,1,2
Cal_Fnc_*GET_graph,  2,eq,2,2
Cal_Fnc_*GET_node,   2,eq,3,2
Cal_Fnc_*GET_elem,   2,eq,4,2
Cal_Fnc_*GET_kp,     2,eq,5,2
Cal_Fnc_*GET_line,   2,eq,6,2
Cal_Fnc_*GET_area,   2,eq,7,2
Cal_Fnc_*GET_volu,   2,eq,8,2
Cal_Fnc_*GET_ent,    2,eq,9,2
Cal_Fnc_*GET_cdsy,   2,eq,10,2
Cal_Fnc_*GET_etyp,   2,eq,11,2
Cal_Fnc_*GET_rcon,   2,eq,12,2
Cal_Fnc_*GET_mat,    2,eq,13,2
Cal_Fnc_*GET_tb,     2,eq,14,2
Cal_Fnc_*GET_p1_gm,  2,eq,15,2
Cal_Fnc_*GET_p1_node,2,eq,16,2
Cal_Fnc_*GET_p1_elem,2,eq,17,2
Cal_Fnc_*GET_p1_mode,2,eq,18,2
Cal_Fnc_*GET_p1_etab,2,eq,19,2
Cal_Fnc_*GET_p1_ssum,2,eq,20,2
Cal_Fnc_*GET_p1_misc,2,eq,21,2
Cal_Fnc_*GET_p1_path,2,eq,22,2
Cal_Fnc_*GET_p1_othr,2,eq,23,2
Cal_Fnc_*GET_p26    ,2,eq,24,2
Cal_Fnc_*GET_opt    ,2,eq,25,2
Cal_Fnc_*GET_parm   ,2,eq,26,2
Cal_Fnc_*GET_parmloc,2,eq,27,2 
Cal_Fnc_*GET_comptyp,2,eq,28,2
Cal_Fnc_*GET_compsno,2,eq,29,2 
Cal_Fnc_*GET_compchr,2,eq,30,2
Cal_Fnc_*GET_subcomp,2,eq,31,2
Cal_Fnc_*GET_subcnam,2,eq,32,2
Cal_Fnc_*GET_runst  ,2,eq,33,2
Cal_Fnc_*GET_onnodes,2,eq,34,2
Cal_Fnc_*GET_onelems,2,eq,35,2
!Below the scheme was changed because max # of Cal_Fnc=40
!jrbaker (working with mrlovell - 990813)
Cal_Fnc_*GET_more   ,2,gt,35,2
:E END
:! 
:N Fnc_*GET_active
:S   3319,   130,  3182
:T Cmd
:C )! Fnc_*GET_active
:A Current settings
:H Hlp_C_*GET
:D Get Current Settings
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,ACTIVE   Get Current Settings
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_ACTIVE
 Fld_5
  Prm_Settings to be retrieved
  Typ_IDX
  IDX_General         ,Current routine ,"ROUT"
  IDX_General         ,Analysis type   ,"ANTY"
  IDX_General         ,Active coord sys,"CSYS"
  IDX_General         ,Display coor sys,"DSYS"
  IDX_General         ,Results coor sys,"RSYS"
  IDX_General         ,Material number ,"MAT"
  IDX_General         ,Element type num,"TYPE"
  IDX_General         ,Real set number ,"REAL"
  IDX_General         ,Element CS num  ,"ESYS"
  IDX_General         ,Max cpld set num,"CP"
  IDX_General         ,Max ceqn set num,"CE"
  IDX_Solution items  ,Analysis type   ,"ANTY"
  IDX_Solution items  ,Time step size  ,"SOLU,DTIME"
  IDX_Solution items  ,No of equil iter,"SOLU,EQIT"
  IDX_Solution items  ,Cumulative iter ,"SOLU,NCMIT"
  IDX_Solution items  ,Cum load steps  ,"SOLU,NCMLS"
  IDX_Solution items  ,Cum substeps    ,"SOLU,NCMSS"
  IDX_Solution items  ,Convergence stat,"SOLU,CNVG"
  IDX_Solution items  ,Max DOF value   ,"SOLU,MXDVL"
  IDX_Solution items  ,Max wavefront   ,"WFRO,MAX"
  IDX_Solution items  ,RMS wavefront   ,"WFRO,RMS"
  IDX_Solution items  ,Descent parametr,"SOLU,DSPRM"
  IDX_Solution items  ,Max creep ratio ,"SOLU,CRPRAT"
  IDX_Solution items  ,Mx pl strain inc,"SOLU,PSINC"
  IDX_Solution items  ,Resp freq I ord ,"SOLU,RESEIG"
  IDX_Solution items  ,Resp freq II ord,"SOLU,RESFRQ"
  IDX_Convergence vals,Force           ,"SOLU,FOCV"
  IDX_Convergence vals,Moment          ,"SOLU,MOCV"
  IDX_Convergence vals,Displacement    ,"SOLU,DICV"
  IDX_Convergence vals,Rotation        ,"SOLU,ROCV"
  IDX_Convergence vals,Heat flow rate  ,"SOLU,HFCV"
  IDX_Convergence vals,Temperature     ,"SOLU,TECV"
  IDX_Convergence vals,Magnetic flux   ,"SOLU,MFCV"
  IDX_Convergence vals,Mag scalar poten,"SOLU,SMCV"
  IDX_Convergence vals,Current segment ,"SOLU,CSCV"
  IDX_Convergence vals,Mag vector poten,"SOLU,VMCV"
  IDX_Convergence vals,Electric current,"SOLU,CUCV"
  IDX_Convergence vals,Voltage         ,"SOLU,VOCV"
  IDX_Convergence vals,Fluid flow rate ,"SOLU,FFCV"
  IDX_Convergence vals,Pressure        ,"SOLU,PRCV"
  IDX_Convergence vals,Velocity        ,"SOLU,VECV"
  IDX_Unconverged elem,No. of CONTAC48s,"SOLU,NC48"
  IDX_Unconverged elem,No. of CONTAC49s,"SOLU,NC49"
  IDX_Postprocessing  ,Load step num   ,"SET,LSTP"
  IDX_Postprocessing  ,Substep number  ,"SET,SBST"
  IDX_Postprocessing  ,Time of ld step ,"SET,TIME"
  IDX_Postprocessing  ,Freq of ld step ,"SET,FREQ"
  IDX_Postprocessing  ,Results coor sys,"RSYS"
  IDX_Postprocessing  ,DB modify date  ,"DBASE,LDATE"
  IDX_Postprocessing  ,DB modify time  ,"DBASE,LTIME"
  IDX_Miscellaneous   ,Jobname         ,"JOBNAM"
  IDX_Miscellaneous   ,Units           ,"UNITS"
  IDX_Miscellaneous   ,Wall clock time ,"TIME,WALL"
  IDX_Miscellaneous   ,CPU time        ,"TIME,CPU"
  IDX_Miscellaneous   ,Interactive key ,"INT"
  IDX_Miscellaneous   ,Menu key        ,"MENU"
  IDX_Miscellaneous   ,Immed mode key  ,"IMME"
  IDX_Miscellaneous   ,ANSYS rev number,"REV"
  IDX_Miscellaneous   ,Printout suppres,"PRKEY"
:E END
:! 
:N Fnc_*GET_area
:S    706,   108,   591
:T Cmd
:C )! Fnc_*GET_area
:A Areas
:H Hlp_C_*GET
:D Get Area Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,AREA,N   Get Area Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_AREA
 Fld_4
  Prm_Area number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Area data to be retrieved
  Typ_LIS
  LIS_Material number ,"ATTR,MAT"
  LIS_Elem type number,"ATTR,TYPE"
  LIS_Real const num  ,"ATTR,REAL"
  LIS_Elem CS number  ,"ATTR,ESYS"
  LIS_No. of nodes    ,"ATTR,NNOD"
  LIS_No. of elements ,"ATTR,NELM"
  LIS_Area            ,"AREA"
  LIS_Select status   ,"ASEL"
  LIS_Next higher area,"NXTH"
  LIS_Next lower area ,"NXTL"
Cmd_)*DEL,_Z1
:E END
:! 
:N Fnc_*GET_cdsy
:S    879,   129,   743
:T Cmd
:C )! Fnc_*GET_cdsy
:A Coord systems
:H Hlp_C_*GET
:D Get Coordinate System Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,CDSY,N   Get Coordinate System Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_CDSY
 Fld_4
  Prm_Coordinate system number N
  Typ_INT
  Def_11
 Fld_5
  Prm_Coord sys data to be retrieved
  Typ_LIS
  LIS_X loc of origin ,"LOC,X"
  LIS_Y loc of origin ,"LOC,Y"
  LIS_Z loc of origin ,"LOC,Z"
  LIS_XY rotation angl,"ANG,XY"
  LIS_YZ rotation angl,"ANG,YZ"
  LIS_ZX rotation angl,"ANG,ZX"
  LIS_Coord sys type  ,"ATTR,KCS"
  LIS_Ratio Y-rad/X-rd,"ATTR,PAR1"
  LIS_Ratio Z-rad/X-rd,"ATTR,PAR2"
  LIS_Maj rad of torus,"ATTR,PAR1"
  LIS_Theta singularit,"ATTR,KTHET"
  LIS_Phi singularity ,"ATTR,KPHI"
  LIS_Max coord system,"NUM,MAX"
  LIS_No.of coor sys's,"NUM,COUNT"
:E END
:! 
:N Fnc_*GET_compchr
:S    443,   163,   272
:T Cmd
:C )! Fnc_*GET_compchr
:A Character Name of Nth Component 
:H Hlp_C_*GET
:D Get Character name of Nth Component
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,COMP,n,NAME    Get Component Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'COMP'
 Fld_4
  Prm_Character component in location
  Typ_INT
  Def_1
 Fld_5
  Prm_Data to be retrieved
  Typ_Def_NAME
:E END 
:! 
:N Fnc_*GET_compsno
:S    391,   156,   227
:T Cmd
:C )! Fnc_*GET_compsno
:A Number of Defined Components
:H Hlp_C_*GET
:D Get Number of Defined Components
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,COMP, ,NCOMP     Get Component Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'COMP'
 Fld_4
  Def_0
 Fld_5
  Prm_Data to be retrieved
  Typ_Def_NCOMP
:E END 
:! 
:N Fnc_*GET_comptyp
:S    380,   133,   239
:T Cmd
:C )! Fnc_*GET_comptyp
:A Component Data
:D Get Component Type Data
:H Hlp_C_*GET
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,COMP,,TYPE     Get Component Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'COMP'
 Fld_4
  Prm_Existing Component
  Typ_LIS
  LIS_*READ,CM
 Fld_5
  Typ_Def_TYPE
:E END 
:! 
:N Fnc_*GET_continfo
:S    506,   130,   368
:T Cmd
:C )! Fnc_*GET_continfo
:A Contact Entity
:H Hlp_C_*GET
:D Get Contact Entity
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,EDCC,N       Get Contact Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'EDCC'
 Fld_4
  Prm_Contact Def Number  N
  Typ_INT
 Fld_5
  Prm_Type of model entity
  Typ_Lis_RadioB
  Lis_Component,COMP
  Lis_Part,PART
 Fld_6
  Prm_Contact or target
  Typ_Lis_RadioB
  Lis_Contact,1
  Lis_Target,2
:E END 
:! 
:N Fnc_*GET_contno
:S    362,   156,   198
:T Cmd
:C )! Fnc_*GET_contno
:A Number of Contact Definitions
:H Hlp_C_*GET
:D Get Number of Contact Definitions
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,EDCC, ,COUNT     Get Contact Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'EDCC'
 Fld_4
  Def_0
 Fld_5
  Typ_Def_COUNT
:E END 
:! 
:N Fnc_*GET_elem
:S   1961,   114,  1840
:T Cmd
:C )! Fnc_*GET_elem
:A Elements
:H Hlp_C_*GET
:D Get Element Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,ELEM,N   Get Element Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_ELEM
 Fld_4
  Prm_Element number N
  Typ_INT
   Def_1
 Fld_5
  Prm_Element data to be retrieved
  Typ_LIS
  LIS_Material number ,"ATTR,MAT"
  LIS_Elem type number,"ATTR,TYPE"
  LIS_Real const num  ,"ATTR,REAL"
  LIS_Elem CS number  ,"ATTR,ESYS"
  LIS_Element name    ,"ATTR,ENAM"
  LIS_Live/dead status,"ATTR,LIVE"
  K_LN(PMETHOD)
  LIS_PSTAT-Incl/Excl ,"ATTR,PSTAT"
  LIS_Element volume  ,"VOLU"
  LIS_Element area    ,"AREA"
  LIS_X projected area,"APROJ,X"
  LIS_Y projected area,"APROJ,Y"
  LIS_Z projected area,"APROJ,Z"
  LIS_Element length  ,"LENG"
  LIS_X projected leng,"LPROJ,X"
  LIS_Y projected leng,"LPROJ,Y"
  LIS_Z projected leng,"LPROJ,Z"
  LIS_Select status   ,"ESEL"
  LIS_Next higher elem,"NXTH"
  LIS_Next lower elem ,"NXTL"
  LIS_Centroid X coord,"CENT,X"
  LIS_Centroid Y coord,"CENT,Y"
  LIS_Centroid Z coord,"CENT,Z"
  LIS_El adj to face 1,"ADJ,1"
  LIS_El adj to face 2,"ADJ,2"
  LIS_El adj to face 3,"ADJ,3"
  LIS_El adj to face 4,"ADJ,4"
  LIS_El adj to face 5,"ADJ,5"
  LIS_El adj to face 6,"ADJ,6"
  LIS_Node in pos'n 1 ,"NODE,1"
  LIS_Node in pos'n 2 ,"NODE,2"
  LIS_Node in pos'n 3 ,"NODE,3"
  LIS_Node in pos'n 4 ,"NODE,4"
  LIS_Node in pos'n 5 ,"NODE,5"
  LIS_Node in pos'n 6 ,"NODE,6"
  LIS_Node in pos'n 7 ,"NODE,7"
  LIS_Node in pos'n 8 ,"NODE,8"
  LIS_Node in pos'n 9 ,"NODE,9"
  LIS_Node in pos'n 10,"NODE,10"
  LIS_Node in pos'n 11,"NODE,11"
  LIS_Node in pos'n 12,"NODE,12"
  LIS_Node in pos'n 13,"NODE,13"
  LIS_Node in pos'n 14,"NODE,14"
  LIS_Node in pos'n 15,"NODE,15"
  LIS_Node in pos'n 16,"NODE,16"
  LIS_Node in pos'n 17,"NODE,17"
  LIS_Node in pos'n 18,"NODE,18"
  LIS_Node in pos'n 19,"NODE,19"
  LIS_Node in pos'n 20,"NODE,20"
Cmd_)*DEL,_Z1
:E END
:! 
:N Fnc_*GET_ent
:S   9679,   136,  9536
:T Cmd
:C )! Fnc_*GET_ent
:A For selected set
:D Get Data for Selected Entity Set
:H Hlp_C_*GET
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,Entity,0   Get Data for Selected Entity Set
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Prm_Data to be retrieved
  Typ_IDX
  IDX_Current node set,No. of nodes    ,"NODE,,COUNT"
  IDX_Current node set,Highest node num,"NODE,,NUM,MAX"
  IDX_Current node set,Lowest node num ,"NODE,,NUM,MIN"
  IDX_Current node set,Min X coordinate,"NODE,,MNLOC,X"
  IDX_Current node set,Min Y coordinate,"NODE,,MNLOC,Y"
  IDX_Current node set,Min Z coordinate,"NODE,,MNLOC,Z"
  IDX_Current node set,Max X coordinate,"NODE,,MXLOC,X"
  IDX_Current node set,Max Y coordinate,"NODE,,MXLOC,Y"
  IDX_Current node set,Max Z coordinate,"NODE,,MXLOC,Z"
  IDX_Current elem set,Number of elem's,"ELEM,,COUNT"
  IDX_Current elem set,Highest elem num,"ELEM,,NUM,MAX"
  IDX_Current elem set,Lowest elem num ,"ELEM,,NUM,MIN"
  IDX_Current elem set,Tot mass X-comp ,"ELEM,,MTOT,X"
  IDX_Current elem set,Tot mass Y-comp ,"ELEM,,MTOT,Y"
  IDX_Current elem set,Tot mass Z-comp ,"ELEM,,MTOT,Z"
  IDX_Current elem set,Mass ctr X-comp ,"ELEM,,MC,X"
  IDX_Current elem set,Mass ctr Y-comp ,"ELEM,,MC,Y"
  IDX_Current elem set,Mass ctr Z-comp ,"ELEM,,MC,Z"
  IDX_Current elem set,Ix about origin ,"ELEM,,IOR,X"
  IDX_Current elem set,Iy about origin ,"ELEM,,IOR,Y"
  IDX_Current elem set,Iz about origin ,"ELEM,,IOR,Z"
  IDX_Current elem set,Ixy about origin,"ELEM,,IOR,XY"
  IDX_Current elem set,Iyz about origin,"ELEM,,IOR,YZ"
  IDX_Current elem set,Izx about origin,"ELEM,,IOR,ZX"
  IDX_Current elem set,Ix about mass ct,"ELEM,,IMC,X"
  IDX_Current elem set,Iy about mass ct,"ELEM,,IMC,Y"
  IDX_Current elem set,Iz about mass ct,"ELEM,,IMC,Z"
  IDX_Current elem set,Ixy about mass  ,"ELEM,,IMC,XY"
  IDX_Current elem set,Iyz about mass  ,"ELEM,,IMC,YZ"
  IDX_Current elem set,Izx about mass  ,"ELEM,,IMC,ZX"
  IDX_Current elem set,Fx at mass ctr  ,"ELEM,,FMC,X"
  IDX_Current elem set,Fy at mass ctr  ,"ELEM,,FMC,Y"
  IDX_Current elem set,Fz at mass ctr  ,"ELEM,,FMC,Z"
  IDX_Current elem set,Mx at origin    ,"ELEM,,MMOR,X"
  IDX_Current elem set,My at origin    ,"ELEM,,MMOR,Y"
  IDX_Current elem set,Mz at origin    ,"ELEM,,MMOR,Z"
  IDX_Current elem set,Mx at mass ctr  ,"ELEM,,MMMC,X"
  IDX_Current elem set,My at mass ctr  ,"ELEM,,MMMC,Y"
  IDX_Current elem set,Mz at mass ctr  ,"ELEM,,MMMC,Z"
  IDX_Current volu set,No. of volumes  ,"VOLU,,COUNT"
  IDX_Current volu set,Highest volu num,"VOLU,,NUM,MAX"
  IDX_Current volu set,Lowest volu num ,"VOLU,,NUM,MIN"
  IDX_Current volu set,Combined volume ,"VOLU,,VOLU"
  IDX_Current volu set,Centroid X loc'n,"VOLU,,CENT,X"
  IDX_Current volu set,Centroid Y loc'n,"VOLU,,CENT,Y"
  IDX_Current volu set,Centroid Z loc'n,"VOLU,,CENT,Z"
  IDX_Current volu set,Ix about origin ,"VOLU,,IOR,X"
  IDX_Current volu set,Iy about origin ,"VOLU,,IOR,Y"
  IDX_Current volu set,Iz about origin ,"VOLU,,IOR,Z"
  IDX_Current volu set,Ixy about origin,"VOLU,,IOR,XY"
  IDX_Current volu set,Iyz about origin,"VOLU,,IOR,YZ"
  IDX_Current volu set,Izx about origin,"VOLU,,IOR,ZX"
  IDX_Current volu set,Ix about mass ct,"VOLU,,IMC,X"
  IDX_Current volu set,Iy about mass ct,"VOLU,,IMC,Y"
  IDX_Current volu set,Iz about mass ct,"VOLU,,IMC,Z"
  IDX_Current volu set,Ixy about mass  ,"VOLU,,IMC,XY"
  IDX_Current volu set,Iyz about mass  ,"VOLU,,IMC,YZ"
  IDX_Current volu set,Izx about mass  ,"VOLU,,IMC,ZX"
  IDX_Current volu set,Principal Ix    ,"VOLU,,IPR,X"
  IDX_Current volu set,Principal Iy    ,"VOLU,,IPR,Y"
  IDX_Current volu set,Principal Iz    ,"VOLU,,IPR,Z"
  IDX_Current volu set,X-orient X-comp ,"VOLU,,IXV,X"
  IDX_Current volu set,X-orient Y-comp ,"VOLU,,IXV,Y"
  IDX_Current volu set,X-orient Z-comp ,"VOLU,,IXV,Z"
  IDX_Current volu set,Y-orient X-comp ,"VOLU,,IYV,X"
  IDX_Current volu set,Y-orient Y-comp ,"VOLU,,IYV,Y"
  IDX_Current volu set,Y-orient Z-comp ,"VOLU,,IYV,Z"
  IDX_Current volu set,Z-orient X-comp ,"VOLU,,IZV,X"
  IDX_Current volu set,Z-orient Y-comp ,"VOLU,,IZV,Y"
  IDX_Current volu set,Z-orient Z-comp ,"VOLU,,IZV,Z"
  IDX_Current area set,No. of areas    ,"AREA,,COUNT"
  IDX_Current area set,Highest area num,"AREA,,NUM,MAX"
  IDX_Current area set,Lowest area num ,"AREA,,NUM,MIN"
  IDX_Current area set,Combined area   ,"AREA,,AREA"
  IDX_Current area set,Combined volume ,"AREA,,VOLU"
  IDX_Current area set,Centroid X loc'n,"AREA,,CENT,X"
  IDX_Current area set,Centroid Y loc'n,"AREA,,CENT,Y"
  IDX_Current area set,Centroid Z loc'n,"AREA,,CENT,Z"
  IDX_Current area set,Ix about origin ,"AREA,,IOR,X"
  IDX_Current area set,Iy about origin ,"AREA,,IOR,Y"
  IDX_Current area set,Iz about origin ,"AREA,,IOR,Z"
  IDX_Current area set,Ixy about origin,"AREA,,IOR,XY"
  IDX_Current area set,Iyz about origin,"AREA,,IOR,YZ"
  IDX_Current area set,Izx about origin,"AREA,,IOR,ZX"
  IDX_Current area set,Ix about mass ct,"AREA,,IMC,X"
  IDX_Current area set,Iy about mass ct,"AREA,,IMC,Y"
  IDX_Current area set,Iz about mass ct,"AREA,,IMC,Z"
  IDX_Current area set,Ixy about mass  ,"AREA,,IMC,XY"
  IDX_Current area set,Iyz about mass  ,"AREA,,IMC,YZ"
  IDX_Current area set,Izx about mass  ,"AREA,,IMC,ZX"
  IDX_Current area set,Principal Ix    ,"AREA,,IPR,X"
  IDX_Current area set,Principal Iy    ,"AREA,,IPR,Y"
  IDX_Current area set,Principal Iz    ,"AREA,,IPR,Z"
  IDX_Current area set,X-orient X-comp ,"AREA,,IXV,X"
  IDX_Current area set,X-orient Y-comp ,"AREA,,IXV,Y"
  IDX_Current area set,X-orient Z-comp ,"AREA,,IXV,Z"
  IDX_Current area set,Y-orient X-comp ,"AREA,,IYV,X"
  IDX_Current area set,Y-orient Y-comp ,"AREA,,IYV,Y"
  IDX_Current area set,Y-orient Z-comp ,"AREA,,IYV,Z"
  IDX_Current area set,Z-orient X-comp ,"AREA,,IZV,X"
  IDX_Current area set,Z-orient Y-comp ,"AREA,,IZV,Y"
  IDX_Current area set,Z-orient Z-comp ,"AREA,,IZV,Z"
  IDX_Current line set,No. of lines    ,"LINE,,COUNT"
  IDX_Current line set,Highest line num,"LINE,,NUM,MAX"
  IDX_Current line set,Lowest line num ,"LINE,,NUM,MIN"
  IDX_Current line set,Combined length ,"LINE,,LENG"
  IDX_Current line set,Centroid X loc'n,"LINE,,CENT,X"
  IDX_Current line set,Centroid Y loc'n,"LINE,,CENT,Y"
  IDX_Current line set,Centroid Z loc'n,"LINE,,CENT,Z"
  IDX_Current line set,Ix about origin ,"LINE,,IOR,X"
  IDX_Current line set,Iy about origin ,"LINE,,IOR,Y"
  IDX_Current line set,Iz about origin ,"LINE,,IOR,Z"
  IDX_Current line set,Ixy about origin,"LINE,,IOR,XY"
  IDX_Current line set,Iyz about origin,"LINE,,IOR,YZ"
  IDX_Current line set,Izx about origin,"LINE,,IOR,ZX"
  IDX_Current line set,Ix about mass ct,"LINE,,IMC,X"
  IDX_Current line set,Iy about mass ct,"LINE,,IMC,Y"
  IDX_Current line set,Iz about mass ct,"LINE,,IMC,Z"
  IDX_Current line set,Ixy about mass  ,"LINE,,IMC,XY"
  IDX_Current line set,Iyz about mass  ,"LINE,,IMC,YZ"
  IDX_Current line set,Izx about mass  ,"LINE,,IMC,ZX"
  IDX_Current line set,Principal Ix    ,"LINE,,IPR,X"
  IDX_Current line set,Principal Iy    ,"LINE,,IPR,Y"
  IDX_Current line set,Principal Iz    ,"LINE,,IPR,Z"
  IDX_Current line set,X-orient X-comp ,"LINE,,IXV,X"
  IDX_Current line set,X-orient Y-comp ,"LINE,,IXV,Y"
  IDX_Current line set,X-orient Z-comp ,"LINE,,IXV,Z"
  IDX_Current line set,Y-orient X-comp ,"LINE,,IYV,X"
  IDX_Current line set,Y-orient Y-comp ,"LINE,,IYV,Y"
  IDX_Current line set,Y-orient Z-comp ,"LINE,,IYV,Z"
  IDX_Current line set,Z-orient X-comp ,"LINE,,IZV,X"
  IDX_Current line set,Z-orient Y-comp ,"LINE,,IZV,Y"
  IDX_Current line set,Z-orient Z-comp ,"LINE,,IZV,Z"
  IDX_Current KP set  ,No. of Keypoints,"KP,,COUNT"
  IDX_Current KP set  ,Highest KP num  ,"KP,,NUM,MAX"
  IDX_Current KP set  ,Lowest KP number,"KP,,NUM,MIN"
  IDX_Current KP set  ,Max X coordinate,"KP,,MXLOC,X"
  IDX_Current KP set  ,Max Y coordinate,"KP,,MXLOC,Y"
  IDX_Current KP set  ,Max Z coordinate,"KP,,MXLOC,Z"
  IDX_Current KP set  ,Min X coordinate,"KP,,MNLOC,X"
  IDX_Current KP set  ,Min Y coordinate,"KP,,MNLOC,Y"
  IDX_Current KP set  ,Min Z coordinate,"KP,,MNLOC,Z"
  IDX_Current KP set  ,Centroid X loc'n,"KP,,CENT,X"
  IDX_Current KP set  ,Centroid Y loc'n,"KP,,CENT,Y"
  IDX_Current KP set  ,Centroid Z loc'n,"KP,,CENT,Z"
  IDX_Current KP set  ,KP nearest ele N,"KP,,NRELM"
  IDX_Current KP set  ,Ix about origin ,"KP,,IOR,X"
  IDX_Current KP set  ,Iy about origin ,"KP,,IOR,Y"
  IDX_Current KP set  ,Iz about origin ,"KP,,IOR,Z"
  IDX_Current KP set  ,Ixy about origin,"KP,,IOR,XY"
  IDX_Current KP set  ,Iyz about origin,"KP,,IOR,YZ"
  IDX_Current KP set  ,Izx about origin,"KP,,IOR,ZX"
  IDX_Current KP set  ,Ix about mass ct,"KP,,IMC,X"
  IDX_Current KP set  ,Iy about mass ct,"KP,,IMC,Y"
  IDX_Current KP set  ,Iz about mass ct,"KP,,IMC,Z"
  IDX_Current KP set  ,Ixy about mass  ,"KP,,IMC,XY"
  IDX_Current KP set  ,Iyz about mass  ,"KP,,IMC,YZ"
  IDX_Current KP set  ,Izx about mass  ,"KP,,IMC,ZX"
  IDX_Current KP set  ,Principal Ix    ,"KP,,IPR,X"
  IDX_Current KP set  ,Principal Iy    ,"KP,,IPR,Y"
  IDX_Current KP set  ,Principal Iz    ,"KP,,IPR,Z"
  IDX_Current KP set  ,X-orient X-comp ,"KP,,IXV,X"
  IDX_Current KP set  ,X-orient Y-comp ,"KP,,IXV,Y"
  IDX_Current KP set  ,X-orient Z-comp ,"KP,,IXV,Z"
  IDX_Current KP set  ,Y-orient X-comp ,"KP,,IYV,X"
  IDX_Current KP set  ,Y-orient Y-comp ,"KP,,IYV,Y"
  IDX_Current KP set  ,Y-orient Z-comp ,"KP,,IYV,Z"
  IDX_Current KP set  ,Z-orient X-comp ,"KP,,IZV,X"
  IDX_Current KP set  ,Z-orient Y-comp ,"KP,,IZV,Y"
  IDX_Current KP set  ,Z-orient Z-comp ,"KP,,IZV,Z"
 Fld_6
  Prm_Element number M -
  Typ_INT
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_- required only for "Current KP set" > "KP nearest ele N" selection
:E END
:! 
:N Fnc_*GET_etyp
:S    919,   124,   788
:T Cmd
:C )! Fnc_*GET_etyp
:A Element types
:H Hlp_C_*GET
:D Get Element Type Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,ETYP,N   Get Element Type Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_ETYP
 Fld_4
  Prm_Element type number N
  Typ_INT
  Def_1
 Fld_5
  Prm_Elem type data to be retrieved
  Typ_LIS
  LIS_Element name    ,"ATTR,ENAM"
  LIS_Keyopt(1)  value,"ATTR,KOP1"
  LIS_Keyopt(2)  value,"ATTR,KOP2"
  LIS_Keyopt(3)  value,"ATTR,KOP3"
  LIS_Keyopt(4)  value,"ATTR,KOP4"
  LIS_Keyopt(5)  value,"ATTR,KOP5"
  LIS_Keyopt(6)  value,"ATTR,KOP6"
  LIS_Keyopt(7)  value,"ATTR,KOP7"
  LIS_Keyopt(8)  value,"ATTR,KOP8"
  LIS_Keyopt(9)  value,"ATTR,KOP9"
  LIS_Keyopt(10) value,"ATTR,KO10"
  LIS_Keyopt(11) value,"ATTR,KO11"
  LIS_Keyopt(12) value,"ATTR,KO12"
  LIS_Max element type,"NUM,MAX"
  LIS_No.of elem types,"NUM,COUNT"
:E END
:! 
:N Fnc_*GET_graph
:S   8162,   122,  8033
:T Cmd
:C )! Fnc_*GET_graph
:A Graphics data
:H Hlp_C_*GET
:D Get Graphics Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,GRAPH    Get Graphics Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_GRAPH
 Fld_4
  Prm_Graphics data to be retrieved
  Typ_IDX
  IDX_General         ,Raster/vectr key,"0,DISPLAY"
  IDX_General         ,Erase/noeras key,"0,ERASE"
  IDX_General         ,Number/color key,"0,NUMBER"
  IDX_General         ,Legend column st,"0,PLOPTS,INFO"
  IDX_General         ,Legend 1 status ,"0,PLOPTS,LEG1"
  IDX_General         ,Legend 2 status ,"0,PLOPTS,LEG2"
  IDX_General         ,Legend 3 status ,"0,PLOPTS,LEG3"
  IDX_General         ,Frame status    ,"0,PLOPTS,FRAM"
  IDX_General         ,Title status    ,"0,PLOPTS,TITL"
  IDX_General         ,Min-Max label st,"0,PLOPTS,MINM"
  IDX_General         ,Logo status     ,"0,PLOPTS,LOGO"
  IDX_General         ,Shrink ratio    ,"0,SHRINK"
  IDX_General         ,Segment capabil ,"0,SEG"
  IDX_For window 1    ,XMIN coordinate ,"1,RANGE,XMIN"
  IDX_For window 1    ,XMAX coordinate ,"1,RANGE,XMAX"
  IDX_For window 1    ,YMIN coordinate ,"1,RANGE,YMIN"
  IDX_For window 1    ,YMAX coordinate ,"1,RANGE,YMAX"
  IDX_For window 1    ,On/off status   ,"1,ACTIVE"
  IDX_For window 1    ,Focus pt X coord,"1,FOCUS,X"
  IDX_For window 1    ,Focus pt Y coord,"1,FOCUS,Y"
  IDX_For window 1    ,Focus pt Z coord,"1,FOCUS,Z"
  IDX_For window 1    ,View pt X coord ,"1,VIEW,X"
  IDX_For window 1    ,View pt Y coord ,"1,VIEW,Y"
  IDX_For window 1    ,View pt Z coord ,"1,VIEW,Z"
  IDX_For window 1    ,View distance   ,"1,DIST"
  IDX_For window 1    ,View angle      ,"1,ANGLE"
  IDX_For window 1    ,View cone angle ,"1,VCONE,ANGLE"
  IDX_For window 1    ,Display type    ,"1,TYPE"
  IDX_For window 1    ,Auto fit key    ,"1,MODE"
  IDX_For window 1    ,Edge plot key   ,"1,EDGE"
  IDX_For window 1    ,Elem outline key,"1,GLINE"
  IDX_For window 1    ,Normal key      ,"1,NORMAL"
  IDX_For window 1    ,No. of contours ,"1,CONTOUR,NCONT"
  IDX_For window 1    ,Min contour valu,"1,CONTOUR,VMIN"
  IDX_For window 1    ,Contour increm't,"1,CONTOUR,VINC"
  IDX_For window 1    ,Displace multip ,"1,DSCALE"
  IDX_For window 1    ,Topograph multip,"1,SSCALE,SMULT"
  IDX_For window 1    ,Vect scale factr,"1,VSCALE,VRATIO"
  IDX_For window 1    ,X distort factor,"1,RATIO,X"
  IDX_For window 1    ,Y distort factor,"1,RATIO,Y"
  IDX_For window 2    ,XMIN coordinate ,"2,RANGE,XMIN"
  IDX_For window 2    ,XMAX coordinate ,"2,RANGE,XMAX"
  IDX_For window 2    ,YMIN coordinate ,"2,RANGE,YMIN"
  IDX_For window 2    ,YMAX coordinate ,"2,RANGE,YMAX"
  IDX_For window 2    ,On/off status   ,"2,ACTIVE"
  IDX_For window 2    ,Focus pt X coord,"2,FOCUS,X"
  IDX_For window 2    ,Focus pt Y coord,"2,FOCUS,Y"
  IDX_For window 2    ,Focus pt Z coord,"2,FOCUS,Z"
  IDX_For window 2    ,View pt X coord ,"2,VIEW,X"
  IDX_For window 2    ,View pt Y coord ,"2,VIEW,Y"
  IDX_For window 2    ,View pt Z coord ,"2,VIEW,Z"
  IDX_For window 2    ,View distance   ,"2,DIST"
  IDX_For window 2    ,View angle      ,"2,ANGLE"
  IDX_For window 2    ,View cone angle ,"2,VCONE,ANGLE"
  IDX_For window 2    ,Display type    ,"2,TYPE"
  IDX_For window 2    ,Auto fit key    ,"2,MODE"
  IDX_For window 2    ,Edge plot key   ,"2,EDGE"
  IDX_For window 2    ,Elem outline key,"2,GLINE"
  IDX_For window 2    ,Normal key      ,"2,NORMAL"
  IDX_For window 2    ,No. of contours ,"2,CONTOUR,NCONT"
  IDX_For window 2    ,Min contour valu,"2,CONTOUR,VMIN"
  IDX_For window 2    ,Contour increm't,"2,CONTOUR,VINC"
  IDX_For window 2    ,Displace multip ,"2,DSCALE"
  IDX_For window 2    ,Topograph multip,"2,SSCALE,SMULT"
  IDX_For window 2    ,Vect scale factr,"2,VSCALE,VRATIO"
  IDX_For window 2    ,X distort factor,"2,RATIO,X"
  IDX_For window 2    ,Y distort factor,"2,RATIO,Y"
  IDX_For window 3    ,XMIN coordinate ,"3,RANGE,XMIN"
  IDX_For window 3    ,XMAX coordinate ,"3,RANGE,XMAX"
  IDX_For window 3    ,YMIN coordinate ,"3,RANGE,YMIN"
  IDX_For window 3    ,YMAX coordinate ,"3,RANGE,YMAX"
  IDX_For window 3    ,On/off status   ,"3,ACTIVE"
  IDX_For window 3    ,Focus pt X coord,"3,FOCUS,X"
  IDX_For window 3    ,Focus pt Y coord,"3,FOCUS,Y"
  IDX_For window 3    ,Focus pt Z coord,"3,FOCUS,Z"
  IDX_For window 3    ,View pt X coord ,"3,VIEW,X"
  IDX_For window 3    ,View pt Y coord ,"3,VIEW,Y"
  IDX_For window 3    ,View pt Z coord ,"3,VIEW,Z"
  IDX_For window 3    ,View distance   ,"3,DIST"
  IDX_For window 3    ,View angle      ,"3,ANGLE"
  IDX_For window 3    ,View cone angle ,"3,VCONE,ANGLE"
  IDX_For window 3    ,Display type    ,"3,TYPE"
  IDX_For window 3    ,Auto fit key    ,"3,MODE"
  IDX_For window 3    ,Edge plot key   ,"3,EDGE"
  IDX_For window 3    ,Elem outline key,"3,GLINE"
  IDX_For window 3    ,Normal key      ,"3,NORMAL"
  IDX_For window 3    ,No. of contours ,"3,CONTOUR,NCONT"
  IDX_For window 3    ,Min contour valu,"3,CONTOUR,VMIN"
  IDX_For window 3    ,Contour increm't,"3,CONTOUR,VINC"
  IDX_For window 3    ,Displace multip ,"3,DSCALE"
  IDX_For window 3    ,Topograph multip,"3,SSCALE,SMULT"
  IDX_For window 3    ,Vect scale factr,"3,VSCALE,VRATIO"
  IDX_For window 3    ,X distort factor,"3,RATIO,X"
  IDX_For window 3    ,Y distort factor,"3,RATIO,Y"
  IDX_For window 4    ,XMIN coordinate ,"4,RANGE,XMIN"
  IDX_For window 4    ,XMAX coordinate ,"4,RANGE,XMAX"
  IDX_For window 4    ,YMIN coordinate ,"4,RANGE,YMIN"
  IDX_For window 4    ,YMAX coordinate ,"4,RANGE,YMAX"
  IDX_For window 4    ,On/off status   ,"4,ACTIVE"
  IDX_For window 4    ,Focus pt X coord,"4,FOCUS,X"
  IDX_For window 4    ,Focus pt Y coord,"4,FOCUS,Y"
  IDX_For window 4    ,Focus pt Z coord,"4,FOCUS,Z"
  IDX_For window 4    ,View pt X coord ,"4,VIEW,X"
  IDX_For window 4    ,View pt Y coord ,"4,VIEW,Y"
  IDX_For window 4    ,View pt Z coord ,"4,VIEW,Z"
  IDX_For window 4    ,View distance   ,"4,DIST"
  IDX_For window 4    ,View angle      ,"4,ANGLE"
  IDX_For window 4    ,View cone angle ,"4,VCONE,ANGLE"
  IDX_For window 4    ,Display type    ,"4,TYPE"
  IDX_For window 4    ,Auto fit key    ,"4,MODE"
  IDX_For window 4    ,Edge plot key   ,"4,EDGE"
  IDX_For window 4    ,Elem outline key,"4,GLINE"
  IDX_For window 4    ,Normal key      ,"4,NORMAL"
  IDX_For window 4    ,No. of contours ,"4,CONTOUR,NCONT"
  IDX_For window 4    ,Min contour valu,"4,CONTOUR,VMIN"
  IDX_For window 4    ,Contour increm't,"4,CONTOUR,VINC"
  IDX_For window 4    ,Displace multip ,"4,DSCALE"
  IDX_For window 4    ,Topograph multip,"4,SSCALE,SMULT"
  IDX_For window 4    ,Vect scale factr,"4,VSCALE,VRATIO"
  IDX_For window 4    ,X distort factor,"4,RATIO,X"
  IDX_For window 4    ,Y distort factor,"4,RATIO,Y"
  IDX_For window 5    ,XMIN coordinate ,"5,RANGE,XMIN"
  IDX_For window 5    ,XMAX coordinate ,"5,RANGE,XMAX"
  IDX_For window 5    ,YMIN coordinate ,"5,RANGE,YMIN"
  IDX_For window 5    ,YMAX coordinate ,"5,RANGE,YMAX"
  IDX_For window 5    ,On/off status   ,"5,ACTIVE"
  IDX_For window 5    ,Focus pt X coord,"5,FOCUS,X"
  IDX_For window 5    ,Focus pt Y coord,"5,FOCUS,Y"
  IDX_For window 5    ,Focus pt Z coord,"5,FOCUS,Z"
  IDX_For window 5    ,View pt X coord ,"5,VIEW,X"
  IDX_For window 5    ,View pt Y coord ,"5,VIEW,Y"
  IDX_For window 5    ,View pt Z coord ,"5,VIEW,Z"
  IDX_For window 5    ,View distance   ,"5,DIST"
  IDX_For window 5    ,View angle      ,"5,ANGLE"
  IDX_For window 5    ,View cone angle ,"5,VCONE,ANGLE"
  IDX_For window 5    ,Display type    ,"5,TYPE"
  IDX_For window 5    ,Auto fit key    ,"5,MODE"
  IDX_For window 5    ,Edge plot key   ,"5,EDGE"
  IDX_For window 5    ,Elem outline key,"5,GLINE"
  IDX_For window 5    ,Normal key      ,"5,NORMAL"
  IDX_For window 5    ,No. of contours ,"5,CONTOUR,NCONT"
  IDX_For window 5    ,Min contour valu,"5,CONTOUR,VMIN"
  IDX_For window 5    ,Contour increm't,"5,CONTOUR,VINC"
  IDX_For window 5    ,Displace multip ,"5,DSCALE"
  IDX_For window 5    ,Topograph multip,"5,SSCALE,SMULT"
  IDX_For window 5    ,Vect scale factr,"5,VSCALE,VRATIO"
  IDX_For window 5    ,X distort factor,"5,RATIO,X"
  IDX_For window 5    ,Y distort factor,"5,RATIO,Y"
:E END
:! 
:N Fnc_*GET_kp
:S    810,   112,   691
:T Cmd
:C )! Fnc_*GET_kp
:A Keypoints
:H Hlp_C_*GET
:D Get Keypoint Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,KP,N   Get Keypoint Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_KP
 Fld_4
  Prm_Keypoint number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Keypoint data to be retrieved
  Typ_LIS
  LIS_X coordinate    ,"LOC,X"
  LIS_Y coordinate    ,"LOC,Y"
  LIS_Z coordinate    ,"LOC,Z"
  LIS_Material number ,"ATTR,MAT"
  LIS_Elem type number,"ATTR,TYPE"
  LIS_Real const num  ,"ATTR,REAL"
  LIS_Elem CS number  ,"ATTR,ESYS"
  LIS_Node number     ,"ATTR,NODE"
  LIS_Element number  ,"ATTR,ELEM"
  LIS_Element size    ,"DIV"
  LIS_Select status   ,"KSEL"
  LIS_Next higher KP  ,"NXTH"
  LIS_Next lower KP   ,"NXTL"
Cmd_)*DEL,_Z1
:E END
:! 
:N Fnc_*GET_line
:S    801,   108,   686
:T Cmd
:C )! Fnc_*GET_line
:A Lines
:H Hlp_C_*GET
:D Get Line Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,LINE,N   Get Line Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_LINE
 Fld_4
  Prm_Line number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Line data to be retrieved
  Typ_LIS
  LIS_Material number ,"ATTR,MAT"
  LIS_Elem type number,"ATTR,TYPE"
  LIS_Real const num  ,"ATTR,REAL"
  LIS_Elem CS number  ,"ATTR,ESYS"
  LIS_No. of nodes    ,"ATTR,NNOD"
  LIS_No. of elements ,"ATTR,NELM"
  LIS_No. of divisions,"ATTR,NDIV"
  LIS_Line length     ,"LENG"
  LIS_Select status   ,"LSEL"
  LIS_Next higher line,"NXTH"
  LIS_Next lower line ,"NXTL"
  LIS_KP in position 1,"KP,1"
  LIS_KP in position 2,"KP,2"
Cmd_)*DEL,_Z1
:E END
:! 
:N Fnc_*GET_mat
:S   3040,   125,  2908
:T Cmd
:C )! Fnc_*GET_mat
:A Material props
:H Hlp_C_*GET
:D Get Material Properties
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,MPlab,N   Get Material Properties
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_4
  Prm_Material number N
  Typ_INT
  Def_1
 Fld_3
  Prm_Mat'l property to be retrieved
  Typ_IDX
   P_LN(LINPLUS)
  IDX_Elastic modulus ,EX              ,EX
   P_LN(LINPLUS)
  IDX_Elastic modulus ,EY              ,EY
   P_LN(LINPLUS)
  IDX_Elastic modulus ,EZ              ,EZ
   P_LN(LINPLUS)
  IDX_Therm expan coef,ALPX            ,ALPX
   P_LN(LINPLUS)
  IDX_Therm expan coef,ALPY            ,ALPY
   P_LN(LINPLUS)
  IDX_Therm expan coef,ALPZ            ,ALPZ
   P_LN(LINPLUS)
  IDX_Reference temp  ,REFT            ,REFT
   P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXY            ,PRXY
   P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRYZ            ,PRYZ
   P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXZ            ,PRXZ
   P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXY            ,NUXY
   P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUYZ            ,NUYZ
   P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXZ            ,NUXZ
   P_LN(LINPLUS)
  IDX_Shear modulus   ,GXY             ,GXY
   P_LN(LINPLUS)
  IDX_Shear modulus   ,GYZ             ,GYZ
   P_LN(LINPLUS)
  IDX_Shear modulus   ,GXZ             ,GXZ
   P_LN(LINPLUS)
  IDX_Damping multip  ,DAMP            ,DAMP
   P_LN(FULL_ANS)
  IDX_Friction coeff  ,MU              ,MU
   P_LN(LINPLUS*THERMAL*FLOTRAN)
  IDX_Density         ,DENS            ,DENS
   P_LN(THERMAL*FLOTRAN)
  IDX_Specific heat   ,C               ,C
   P_LN(THERMAL)
  IDX_Enthalpy        ,ENTH            ,ENTH
   P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KXX             ,KXX
   P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KYY             ,KYY
   P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KZZ             ,KZZ
   P_LN(THERMAL)
  IDX_Conv film coeff ,HF              ,HF
   P_LN(THERMAL)
  IDX_Emissivity      ,EMIS            ,EMIS
   P_LN(THERMAL)
  IDX_Heat gen rate   ,QRATE           ,QRATE
   P_LN(FULL_ANS)
  IDX_Viscosity       ,VISC            ,VISC
   P_LN(FULL_ANS)
  IDX_Sonic velocity  ,SONC            ,SONC
   P_LN(ELECMAG)
  IDX_Elec resistivity,RSVX            ,RSVX
   P_LN(ELECMAG)
  IDX_Elec resistivity,RSVY            ,RSVY
   P_LN(ELECMAG)
  IDX_Elec resistivity,RSVZ            ,RSVZ
   P_LN(ELECMAG)
  IDX_Elec permittivit,PERX            ,PERX
   P_LN(ELECMAG)
  IDX_Elec permittivit,PERY            ,PERY
   P_LN(ELECMAG)
  IDX_Elec permittivit,PERZ            ,PERZ
   P_LN(ELECMAG)
  IDX_Rel permeability,MURX            ,MURX
   P_LN(ELECMAG)
  IDX_Rel permeability,MURY            ,MURY
   P_LN(ELECMAG)
  IDX_Rel permeability,MURZ            ,MURZ
   P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGXX            ,MGXX
   P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGYY            ,MGYY
   P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGZZ            ,MGZZ
 Fld_5
  Typ_Def_TEMP
 Fld_6
  Prm_Temp at which to retrieve proprt
  Typ_REAL
  Def_Blank
:E END
:! 
:N Fnc_*GET_more
:S    734,   128,   599
:T Cmd
:C )! Fnc_*GET_more
:A More *GET Functions
:H Hlp_C_*GET
:D More *GET Functions
Inp_P
Cmd_)/NOPR
Cmd_)*set,_z2
  Fld_2
  Typ_Def_*PAR(_z1)
Cmd_)/GOPR
Cal_Fnc_*GET_topo1  ,2,eq,36,2
Cal_Fnc_*GET_topo2  ,2,eq,37,2
Cal_Fnc_*GET_topo3  ,2,eq,38,2
Cal_Fnc_*GET_topo4  ,2,eq,39,2
Cal_Fnc_*GET_topo5  ,2,eq,40,2
Cal_Fnc_*GET_partno ,2,eq,41,2
Cal_Fnc_*GET_partel ,2,eq,42,2
Cal_Fnc_*GET_partmat,2,eq,43,2
Cal_Fnc_*GET_partrl ,2,eq,44,2
Cal_Fnc_*GET_weldno ,2,eq,45,2
Cal_Fnc_*GET_weldmax,2,eq,46,2
Cal_Fnc_*GET_weldmin,2,eq,47,2
Cal_Fnc_*GET_weldnxt,2,eq,48,2
Cal_Fnc_*GET_weldnod,2,eq,49,2
Cal_Fnc_*GET_contno ,2,eq,50,2
Cal_Fnc_*GET_continfo ,2,eq,51,2
Cal_Fnc_*GET_rad    ,2,eq,52,2
:E END
:! 
:N Fnc_*GET_node
:S    656,   109,   540
:T Cmd
:C )! Fnc_*GET_node
:A Nodes
:H Hlp_C_*GET
:D Get Nodal Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,NODE,N   Get Nodal Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_NODE
 Fld_4
  Prm_Node number N
  Typ_INT
   Def_1
 Fld_5
  Prm_Nodal data to be retrieved
  Typ_LIS
  LIS_X coordinate    ,"LOC,X"
  LIS_Y coordinate    ,"LOC,Y"
  LIS_Z coordinate    ,"LOC,Z"
  LIS_XY rotation angl,"ANG,XY"
  LIS_YZ rotation angl,"ANG,YZ"
  LIS_ZX rotation angl,"ANG,ZX"
  LIS_Select status   ,"NSEL"
  LIS_Next higher node,"NXTH"
  LIS_Next lower node ,"NXTL"
Cmd_)*DEL,_Z1
:E END
:! 
:N Fnc_*GET_onelems
:S    618,   129,   482
:T Cmd
:C )! Fnc_*GET_onelems
:A Current settings
:H Hlp_C_*GET
:D Get Applied Loads
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,ELEM,n,Dof,(displacement) Get Applied Element Loads
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_ELEM
 Fld_4
  Prm_Get load at element number
  Typ_INT
 Fld_5
  Prm_Load to be retrieved at element number
  Typ_Idx
  IDX_Heat Generation ,HGEN            ,HGEN,1
  IDX_Heat Coefficient,HCOE            ,HCOE
  IDX_Bulk Temperature,TBULK           ,TBULK
 Fld_6
  Prm_Element face number
  Typ_INT
  Def_1
!
:E END
:! 
:N Fnc_*GET_onnodes
:S   1015,   129,   879
:T Cmd
:C )! Fnc_*GET_onnodes
:A Current settings
:H Hlp_C_*GET
:D Get Applied Loads
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,NODE,n,D,(displacement) Get Applied Displacements
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_NODE
 Fld_4
  Prm_Get load at node number
  Typ_INT
 Fld_5
  Prm_Load to be retrieved at node number
  Typ_Idx
  IDX_Force           ,FX              ,F,FX
  IDX_Force           ,FY              ,F,FY
  IDX_Force           ,FZ              ,F,FZ
  IDX_Force           ,MX              ,F,MX
  IDX_Force           ,MY              ,F,MY
  IDX_Force           ,MZ              ,F,MZ
!
  IDX_Displacement    ,UX              ,U,X
  IDX_Displacement    ,UY              ,U,Y
  IDX_Displacement    ,UZ              ,U,Z
  IDX_Displacement    ,ROTX            ,U,ROTX
  IDX_Displacement    ,ROTY            ,U,ROTY
  IDX_Displacement    ,ROTZ            ,U,ROTZ
!
  IDX_Heat Generation ,HGEN            ,HGEN,1
!
:E END
:! 
:N Fnc_*GET_opt
:S    641,   131,   503
:T Cmd
:C )! Fnc_*GET_opt
:A Design opt data
:H Hlp_C_*GET
:D Get Design Optimization Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,OPT      Get Design Optimization Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_OPT
 Fld_5
  Prm_Design opt data to be retrieved
  Typ_LIS
  LIS_Cumulative iter ,"TOTAL"
  LIS_Recent no of itr,"ITER"
  LIS_Termination cond,"TERM"
  LIS_Best set number ,"BEST"
  LIS_Feasib of set N ,"FEAS"
 Fld_6
  Prm_Design set number N -
  Typ_INT
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_- required only for "Feasibility of set N" selection
:E END
:! 
:N Fnc_*GET_p1_elem
:S   2049,   141,  1901
:T Cmd
:C )! Fnc_*GET_p1_elem
:A Element results
:H Hlp_UI_stgetelem
:D Get Element Results Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,ELEM,N   Get Element Results Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_ELEM
 Fld_4
  Prm_Element number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Results data to be retrieved
  Typ_IDX
P_LN(ELECMAG)
IDX_Flux & gradient ,Mag source   HSX,HS,X
P_LN(ELECMAG)
IDX_Flux & gradient ,             HSY,HS,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,             HSZ,HS,Z
!
P_LN(ELECMAG)
IDX_Current Density ,Total        JTX,JT,X
P_LN(ELECMAG)
IDX_Current Density ,             JTY,JT,Y
P_LN(ELECMAG)
IDX_Current Density ,             JTZ,JT,Z
P_LN(ELECMAG)
IDX_Current Density ,Cpl'd Source JSX,JS,X
P_LN(ELECMAG)
IDX_Current Density ,             JSY,JS,Y
P_LN(ELECMAG)
IDX_Current Density ,             JSZ,JS,Z
!
P_LN(ELECMAG)
IDX_Reynold's Number,Magnetic     MRE,MRE
!
P_LN(LINPLUS)
IDX_Energy          ,Strain enrg SENE,SENE,
P_LN(LINPLUS)
IDX_Energy          ,Kinetc enrg KENE,KENE,
P_LN(THERMAL)
IDX_Energy          ,Therm enrg  TENE,TENE,
P_LN(ELECMAG)
IDX_Energy          ,Mag energy  SENE,SENE,
P_LN(THERMAL*ELECMAG)
IDX_Energy          ,Joule heat JHEAT,JHEAT,
P_LN(ELECMAG)
IDX_Energy          ,Elec energy SENE,SENE,
P_LN(ELECMAG)
IDX_Energy          ,Flow energy SENE,SENE,
!
P_LN(LINPLUS)
IDX_Error estimation,StruErrEnrg SERR,SERR,
P_LN(THERMAL)
IDX_Error estimation,TherErrEnrg TERR,TERR,
P_LN(LINPLUS)
IDX_Error estimation,Strs deviat SDSG,SDSG,
P_LN(THERMAL)
IDX_Error estimation,Grad deviat TDSG,TDSG,
!
IDX_Geometry        ,Elem volume VOLU,VOLU,
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!
 Fld_0
  Typ_Lab
  Prm_                               (For "By sequence num", enter sequence
 Fld_0
  Typ_Lab
  Prm_                                no. in Selection box.  See Table 4.xx-3
 Fld_0
  Typ_Lab
  Prm_                                in Elements Manual for seq.  numbers.)
!
Cmd_)*DEL,_Z1
:E END
:! 
:N Fnc_*GET_p1_etab
:S    472,   133,   332
:T Cmd
:C )! Fnc_*GET_p1_etab
:A Elem table data
:H Hlp_C_*GET
:D Get Element Table Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,ELEM,N,ETAB   Get Element Table Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_ELEM
 Fld_4
  Prm_Element number N
  Typ_INT
  Def_Blank
 Fld_5
  Typ_Def_ETAB
 Fld_6
  Prm_Elem table data to be retrieved
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
Cmd_)*DEL,_Z1
:E END
:! 
:N Fnc_*GET_p1_gm
:S  13010,   149, 12854
:T Cmd
:C )! Fnc_*GET_p1_gm
:A Global measures
:H Hlp_C_*GET
:D Get Global Measures from Selected Node Set
Cmd_NSORT
 Fld_0
  Typ_Lab
  Prm_[NSORT] [*GET]     Get Global Measures from Selected Node Set
 Fld_2
  Prm_[NSORT]  Glb measure to retrieve
  Typ_IDX
   P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
   P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
   P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
   P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
   P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
   P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
   P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
   P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
   P_LN(THERMAL)
   K_LN(lsdyna)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_DOF solution    ,MagVectPoten  AX,A,X
   K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration  AX,A,X
   P_LN(ELECMAG*LSDYNA)
  IDX_DOF solution    ,              AY,A,Y
   P_LN(ELECMAG*LSDYNA)
  IDX_DOF solution    ,              AZ,A,Z
   P_LN(ELECMAG*LSDYNA)
  IDX_DOF solution    ,            ASUM,A,SUM
   P_LN(THERMAL*ELECMAG)
   K_LN(lsdyna)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_DOF solution    ,EMF drop     EMF,EMF,
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_DOF solution    ,Current     CURR,CURR,
   P_LN(FLOTRAN*LSDYNA)
  IDX_DOF solution    ,Velocity      VX,V,X
   P_LN(FLOTRAN*LSDYNA)
  IDX_DOF solution    ,              VY,V,Y
   P_LN(FLOTRAN*LSDYNA)
  IDX_DOF solution    ,              VZ,V,Z
   P_LN(FLOTRAN*LSDYNA)
  IDX_DOF solution    ,            VSUM,V,SUM
   P_LN(FLOTRAN*FULL_ANS*LSDYNA)
  IDX_DOF solution    ,Pressure    PRES,PRES,
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
   P_LN(FLOTRAN*FULL_ANS)
   K_LN(lsdyna)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
   P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,X-direction   SX,S,X
   P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,Y-direction   SY,S,Y
   P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,Z-direction   SZ,S,Z
   P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,XY-shear     SXY,S,XY
   P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
   P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
   P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,1st principal S1,S,1
   P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,2nd principal S2,S,2
   P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,3rd principal S3,S,3
   P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,Intensity   SINT,S,INT
   P_LN(LINPLUS*LSDYNA)
  IDX_Stress          ,von Mises   SEQV,S,EQV
   P_LN(FULL_ANS*LSDYNA)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
   P_LN(FULL_ANS*LSDYNA)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
   P_LN(THERMAL)
   K_LN(lsdyna)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
   P_LN(THERMAL)
   K_LN(lsdyna)
  IDX_Flux & gradient ,             TFY,TF,Y
   P_LN(THERMAL)
   K_LN(lsdyna)
  IDX_Flux & gradient ,             TFZ,TF,Z
   P_LN(THERMAL)
   K_LN(lsdyna)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
   P_LN(THERMAL)
   K_LN(lsdyna)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
   P_LN(THERMAL)
   K_LN(lsdyna)
  IDX_Flux & gradient ,             TGY,TG,Y
   P_LN(THERMAL)
   K_LN(lsdyna)
  IDX_Flux & gradient ,             TGZ,TG,Z
   P_LN(THERMAL)
   K_LN(lsdyna)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,              BY,B,Y
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,              BZ,B,Z
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,            BSUM,B,SUM
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,Mag field     HX,H,X
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,              HY,H,Y
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,              HZ,H,Z
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,            HSUM,H,SUM
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,              DY,D,Y
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,              DZ,D,Z
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,            DSUM,D,SUM
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,             EFY,EF,Y
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,             EFZ,EF,Z
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Flux & gradient ,             PGY,PG,Y
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Flux & gradient ,             PGZ,PG,Z
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
!
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Nodal force data,           FMAGY,FMAG,Y
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
   P_LN(ELECMAG)
   K_LN(lsdyna)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Density     DENS,DENS
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Viscosity   VISC,VISC
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Conductivit COND,COND
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Eff Viscos  EVIS,EVIS
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Eff Conduct ECON,ECON
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Total temp  TTOT,TTOT
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Strm func2D STRM,STRM
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,PressurCoef PCOE,PCOE
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Mach number MACH,MACH
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Total pres  PTOT,PTOT
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Heat flux   HFLU,HFLU
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Film coeff  HFLM,HFLM
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Turb law Y+ YPLU,YPLU
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Wall shear  TAUW,TAUW
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Sp1 lamMass LMD1,LMD1
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Sp2 lamMass LMD2,LMD2
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Sp3 lamMass LMD3,LMD3
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Sp4 lamMass LMD4,LMD4
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Sp5 lamMass LMD5,LMD5
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Sp6 lamMass LMD6,LMD6
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Sp1 turbMas EMD1,EMD1
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Sp2 turbMas EMD2,EMD2
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Sp3 turbMas EMD3,EMD3
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Sp4 turbMas EMD4,EMD4
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Sp5 turbMas EMD5,EMD5
   P_LN(FLOTRAN)
   K_LN(lsdyna)
  IDX_Flotran solution,Sp6 turbMas EMD6,EMD6
!
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
   P_LN(LINPLUS*LSDYNA)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
   P_LN(LINPLUS)
   K_LN(lsdyna)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
   P_LN(LINPLUS)
   K_LN(lsdyna)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
   P_LN(LINPLUS)
   K_LN(lsdyna)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
   P_LN(LINPLUS)
   K_LN(lsdyna)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
   P_LN(LINPLUS)
   K_LN(lsdyna)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
   P_LN(LINPLUS)
   K_LN(lsdyna)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
   P_LN(LINPLUS)
   K_LN(lsdyna)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
   P_LN(LINPLUS)
   K_LN(lsdyna)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
   P_LN(LINPLUS)
   K_LN(lsdyna)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
   P_LN(LINPLUS)
   K_LN(lsdyna)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
   P_LN(LINPLUS)
   K_LN(lsdyna)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
   P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
   P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
   P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
   P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
   P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
   P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
   P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
   P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
   P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
   P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
   P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
   P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Contact         ,Status      STAT,CONT,STAT
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Contact         ,Penetration PENE,CONT,PENE
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
   P_LN(FULL_ANS)
   K_LN(lsdyna)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!!
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,SORT
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_SORT
 Fld_5
  Prm_Retrieve max or min value?
  Typ_LIS_OPTIONB
  LIS_Maximum value   ,MAX
  LIS_Minimum value   ,MIN
:E END
:! 
:N Fnc_*GET_p1_misc
:S    671,   147,   517
:T Cmd
:C )! Fnc_*GET_p1_misc
:A Elem table misc
:H Hlp_C_*GET
:D Get Miscellaneous Element Table Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,ETAB   Get Misc Element Table Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_ACTIVE
 Fld_5
  Prm_Data to be retrieved
  Typ_LIS
  LIS_Tot ETABLE cols ,"NCOL,MAX"
  LIS_Highest elem no.,"NLENG,MAX"
  LIS_ETABLE col label,"LAB"
  LIS_Value (col&elem),"ELEM"
 Fld_0
  Typ_Lab
  Prm_Following used for 'Column label' and 'Value'
 Fld_4
  Prm_Column number 
  Typ_INT
  Def_Blank
 Fld_6
  Prm_Element number for 'Value'
  Typ_INT
  Def_Blank
:E END
:! 
:N Fnc_*GET_p1_mode
:S    496,   126,   363
:T Cmd
:C )! Fnc_*GET_p1_mode
:A Modal results
:H Hlp_C_*GET
:D Get Modal Results
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,MODE,N   Get Modal Results
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_MODE
 Fld_4
  Prm_Mode number N
  Typ_INT
  Def_1
 Fld_5
  Prm_Modal data to be retrieved
  Typ_LIS
  LIS_Frequency   FREQ,FREQ
  LIS_PartcpFact PFACT,PFACT
  LIS_Mode coeff MCOEF,MCOEF
  LIS_Damp value  DAMP,DAMP
:E END
:! 
:N Fnc_*GET_p1_node
:S  13085,   131, 12947
:T Cmd
:C )! Fnc_*GET_p1_node
:A Nodal results
:H Hlp_C_*GET
:D Get Nodal Results Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,NODE,N   Get Nodal Results Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_NODE
 Fld_4
  Prm_Node number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Results data to be retrieved
  Typ_IDX
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,              UY,U,Y
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,            USUM,U,SUM
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,            ROTZ,ROT,Z
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,          ROTSUM,ROT,SUM
P_LN(THERMAL*FLOTRAN)
K_LN(lsdyna)
IDX_DOF solution    ,Temperature TEMP,TEMP,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,MagVectPoten  AX,A,X
K_LN(LSDYNA)
IDX_DOF solution    ,Acceleration  AX,A,X
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AY,A,Y
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AZ,A,Z
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,            ASUM,A,SUM
P_LN(THERMAL*ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,Elec poten  VOLT,VOLT,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,EMF drop     EMF,EMF,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,Current     CURR,CURR,
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN*FULL_ANS*LSDYNA)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
K_LN(lsdyna)
IDX_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,1st principal S1,S,1
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS*LSDYNA)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS*LSDYNA)
IDX_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TGSUM,TG,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Mag source   HSX,HS,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             HSY,HS,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             HSZ,HS,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,           EFSUM,EF,SUM
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
P_LN(FULL_ANS*LSDYNA)
IDX_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
P_LN(LINPLUS)
Idx_Gasket          ,Stress         GKS   X,GKS,X
!
K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
P_LN(LINPLUS)
Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
P_LN(LINPLUS)
Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
K_LN((STRUCTRL)+(pmethod+lsdyna+flotran))
P_LN(LINPLUS)
Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
 Fld_5
  K_FL(CFD)
  Prm_Results data to be retrieved
  Typ_IDX
IDX_DOF solution    ,Velocity      VX,V,X
IDX_DOF solution    ,              VY,V,Y
IDX_DOF solution    ,              VZ,V,Z
IDX_DOF solution    ,            VSUM,V,SUM
IDX_DOF solution    ,Pressure    PRES,PRES,
IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
IDX_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(FULL_ANS)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
IDX_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!
IDX_Other quantities,Density     DENS,DENS,
IDX_Other quantities,Viscosity   VISC,VISC,
IDX_Other quantities,Conductivit COND,COND,
IDX_Other quantities,Eff Viscos  EVIS,EVIS,
IDX_Other quantities,Eff Conduct ECON,ECON,
IDX_Other quantities,Total temp  TTOT,TTOT,
IDX_Other quantities,Strm func2D STRM,STRM,
IDX_Other quantities,PressurCoef PCOE,PCOE,
IDX_Other quantities,Mach number MACH,MACH,
IDX_Other quantities,Total pres  PTOT,PTOT,
IDX_Other quantities,Heat flux   HFLU,HFLU,
IDX_Other quantities,Film coeff  HFLM,HFLM,
IDX_Other quantities,Turb law Y+ YPLU,YPLU,
IDX_Other quantities,Wall shear  TAUW,TAUW,
!
Cmd_)*DEL,_Z1
:E END
:! 
:N Fnc_*GET_p1_othr
:S   2404,   148,  2249
:T Cmd
:C )! Fnc_*GET_p1_othr
:A Other operations
:H Hlp_C_*GET
:D Get Data from Other POST1 Operations
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,SORT_etc     Get Data from Other POST1 Operations
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Prm_Data to be retrieved
  Typ_IDX
  IDX_From sort oper'n,Maximum value   ,"SORT,,MAX"
  IDX_From sort oper'n,Minimum value   ,"SORT,,MIN"
  IDX_From force sum  ,X force       FX,"FSUM,,ITEM,FX"
  IDX_From force sum  ,Y force       FY,"FSUM,,ITEM,FY"
  IDX_From force sum  ,Z force       FZ,"FSUM,,ITEM,FZ"
  IDX_From force sum  ,X moment      MX,"FSUM,,ITEM,MX"
  IDX_From force sum  ,Y moment      MY,"FSUM,,ITEM,MY"
  IDX_From force sum  ,Z moment      MZ,"FSUM,,ITEM,MZ"
  IDX_From force sum  ,Heat flow   HEAT,"FSUM,,ITEM,HEAT"
  IDX_From force sum  ,Mag flux    FLUX,"FSUM,,ITEM,FLUX"
  IDX_From force sum  ,Elec currnt AMPS,"FSUM,,ITEM,AMPS"
  IDX_From force sum  ,Fluid flow  FLOW,"FSUM,,ITEM,AMPS"
    P_LN(LINPLUS)
  IDX_Strs intens fact,KI              ,"KCAL,,K,1"
    P_LN(LINPLUS)
  IDX_Strs intens fact,KII             ,"KCAL,,K,2"
    P_LN(LINPLUS)
  IDX_Strs intens fact,KIII            ,"KCAL,,K,3"
   P_LN(LINPLUS*FLOTRAN)
  IDX_Surface integral,X force       FX,"INTS,,ITEM,FX"
   P_LN(LINPLUS*FLOTRAN)
  IDX_Surface integral,Y force       FY,"INTS,,ITEM,FY"
   P_LN(LINPLUS*FLOTRAN)
  IDX_Surface integral,Z force       FZ,"INTS,,ITEM,FZ"
   P_LN(LINPLUS*FLOTRAN)
  IDX_Surface integral,X moment      MX,"INTS,,ITEM,MX"
   P_LN(LINPLUS*FLOTRAN)
  IDX_Surface integral,Y moment      MY,"INTS,,ITEM,MY"
   P_LN(LINPLUS*FLOTRAN)
  IDX_Surface integral,Z moment      MZ,"INTS,,ITEM,MZ"
  IDX_NodeSolu Contour,Maximum value   ,"PLNS,,MAX"
  IDX_NodeSolu Contour,Minimum value   ,"PLNS,,MIN"
  IDX_NodeSolu Contour,Upper bound     ,"PLNS,,BMAX"
  IDX_NodeSolu Contour,Lower bound     ,"PLNS,,BMIN"
   P_LN(LINPLUS*THERMAL)
  IDX_Error estimation,Structrl % error,"PRER,,SEPC"
   P_LN(LINPLUS*THERMAL)
  IDX_Error estimation,Thermal % error ,"PRER,,TEPC"
   P_LN(LINPLUS*THERMAL)
  IDX_Error estimation,Str err enrg sum,"PRER,,SERSM"
   P_LN(LINPLUS*THERMAL)
  IDX_Error estimation,Thr err enrg sum,"PRER,,TERSM"
   P_LN(LINPLUS*THERMAL)
  IDX_Error estimation,Struc energy sum,"PRER,,SENSM"
   P_LN(LINPLUS*THERMAL)
  IDX_Error estimate  ,Therm energy sum,"PRER,,TENSM"
:E END
:! 
:N Fnc_*GET_p1_path
:S    550,   140,   403
:T Cmd
:C )! Fnc_*GET_p1_path
:A Path operations
:H Hlp_C_*GET
:D Get Data from Path Operations
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,PATH     Get Data from Path Operations
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_PATH
 Fld_6
  Prm_Path item label -
  Typ_LIS
  LIS_*READ,PATH
 Fld_0
  Prm_- from last path operation
 Fld_5
  Prm_Path data to be retrieved
  Typ_LIS_OPTIONB
  LIS_Maximum valu MAX,MAX
  LIS_Minimum valu MIN,MIN
  LIS_Last value  LAST,LAST
:E END
:! 
:N Fnc_*GET_p1_ssum
:S    468,   140,   321
:T Cmd
:C )! Fnc_*GET_p1_ssum
:A Elem table sums
:H Hlp_C_*GET
:D Get Element Table Sum Results
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,SSUM,,ITEM   Get Element Table Sum Results
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_SSUM
 Fld_5
  Typ_Def_ITEM
 Fld_6
  Prm_Element table item -
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_0
  Typ_Lab
  Prm_- whose summation is to be retrieved
:E END
:! 
:N Fnc_*GET_p26
:S    961,   138,   816
:T Cmd
:C )! Fnc_*GET_p26
:A Time-hist var's
:H Hlp_C_*GET
:D Get Data for Time-history Variables
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,VARI     Get Data for Time-history Variables
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_VARI
 Fld_4
  Prm_Variable number N -
  Typ_INT
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_- (leave blank for "No. of variables" selection)
 Fld_5
  Prm_Data to be retrieved
  Typ_LIS
  LIS_No. of variables,NSETS
  LIS_Maximum val VMAX,EXTREM,VMAX
  LIS_Minimum val VMIN,EXTREM,VMIN
  LIS_Last value  VLAS,EXTREM,VLAS
  LIS_Time @ VMAX TMAX,EXTREM,TMAX
  LIS_Time @ VMIN TMIN,EXTREM,TMIN
  LIS_Time @ VLAS TLAS,EXTREM,TLAS
  LIS_Real val @ time>,RTIME
  LIS_Imag val @ time>,ITIME
  LIS_Real val @ loc >,RSET
  LIS_Imag val @ loc >,ISET
 Fld_6
  Prm_Time or location number -
  Typ_REAL
 Fld_0
  Typ_Lab
  Prm_- required only for selections ending with ">"
:E END
:! 
:N Fnc_*GET_parm
:S    572,   122,   443
:T Cmd
:C )! Fnc_*GET_parm
:A Parameter data
:H Hlp_C_*GET
:D Get Parameter Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,PARM     Get Parameter Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR
 Fld_3
  Typ_Def_'PARM'
 Fld_4
  Prm_Existing parameter
  Typ_LIS
  LIS_*READ,PAR
 Fld_5
  Prm_Data to be retrieved
  Typ_LIS_OptionB
  LIS_Parameter Type  ,"TYPE"
  LIS_Basic Parameters,"BASI"
  LIS_Array X dimen   ,"DIM,X"
  LIS_Array Y dimen   ,"DIM,Y"
  LIS_Array Z dimen   ,"DIM,Z"
  LIS_Total no. params,"MAX"
:E END
:! 
:N Fnc_*GET_parmloc
:S    409,   165,   237
:T Cmd
:C )! Fnc_*GET_parmloc
:A Parameter data location in parameter table
:H Hlp_C_*GET
:D Get Parameter Location Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,PARM     Get Parameter Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR
 Fld_3
  Typ_Def_'PARM'
 Fld_5
  Typ_Def_LOC
 Fld_6
  Prm_Character Parameter in Location n
  Typ_Int
  Def_1
:E END
:! 
:N Fnc_*GET_partel
:S    385,   132,   245
:T Cmd
:C )! Fnc_*GET_partel
:A Element Type
:H Hlp_C_*GET
:D Get Element Type for Parts
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,PART,N,TYPE     Get Part Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'PART'
 Fld_4
   Prm_Part number  N
   Typ_INT
 Fld_5
  Prm_Data to be retrieved
  Typ_Def_TYPE
:E END 
:! 
:N Fnc_*GET_partmat
:S    364,   140,   216
:T Cmd
:C )! Fnc_*GET_partmat
:A Material Number
:H Hlp_C_*GET
:D Get Material Number for Parts
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,PART,N,MAT     Get Part Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'PART'
 Fld_4
   Prm_Part number  N
   Typ_INT
 Fld_5
  Typ_Def_MAT
:E END 
:! 
:N Fnc_*GET_partno
:S    356,   128,   220
:T Cmd
:C )! Fnc_*GET_partno
:A Number of Parts
:H Hlp_C_*GET
:D Get Number of Parts
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,PART, ,NUMP     Get Part Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'PART'
 Fld_4
  Def_0
 Fld_5
  Prm_Data to be retrieved
  Typ_Def_NUMP
:E END 
:! 
:N Fnc_*GET_partrl
:S    395,   142,   245
:T Cmd
:C )! Fnc_*GET_partrl
:A Real Constant Set
:H Hlp_C_*GET
:D Get Real Constant Set for Parts
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,PART,N,REAL     Get Part Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'PART'
 Fld_4
   Prm_Part number  N
   Typ_INT
 Fld_5
  Prm_Data to be retrieved
  Typ_Def_REAL
:E END 
:! 
:N Fnc_*GET_rad
:S    450,   120,   323
:T Cmd
:C )! Fnc_*GET_rad
:A Radiosity data
:H Hlp_C_*GET
:D Get Radiosity Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,RAD     Get Radiosity Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR
 Fld_3
  Typ_Def_'RAD '
 Fld_4
  Prm_Encl Number (If Net Heat Rate)
  Typ_Int
  Def_0
 Fld_5
  Prm_Data to be retrieved
  Typ_LIS_OptionB
  LIS_Avg View Factor,"VFAV"
  LIS_Net Heat Rate  ,"NETHF"
:E END
:! 
:N Fnc_*GET_rcon
:S    433,   122,   304
:T Cmd
:C )! Fnc_*GET_rcon
:A Real constants
:H Hlp_C_*GET
:D Get Real Constants
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,RCON,N,CONST   Get Real Constants
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_RCON
 Fld_4
  Prm_Real constant set number N
  Typ_INT
  Def_1
 Fld_5
  Typ_Def_CONST
 Fld_6
  Prm_Retrieve value of constant no.
  Typ_INT
  Def_1
:E END
:! 
:N Fnc_*GET_runst
:S   2775,   158,  2610
:T Cmd
:C )! Fnc_*GET_runst
:A Run time stats
:H Hlp_C_*GET
:D Get Run Time Statistics
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,RUNST,0   Get Run Time Statistics
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_RUNST
 Fld_5
  Prm_Run time data to be retrieved
  Typ_IDX
  IDX_System settings ,MIPS rating     ,"RSPEED,MIPS"
  IDX_System settings ,Scalar MFLOPS   ,"RSPEED,SMFLOP"
  IDX_System settings ,Vector MFLOPS   ,"RSPEED,VMFLOP"
  IDX_System settings ,No.of processors,"RSPEED,NPROC"
  IDX_File sizes      ,Total      TOTAL,"RFILSZ,TOTAL"
  IDX_File sizes      ,Elem matrix EMAT,"RFILSZ,EMAT"
  IDX_File sizes      ,Rot el matr EROT,"RFILSZ,EROT"
  IDX_File sizes      ,El save dat ESAV,"RFILSZ,ESAVE"
  IDX_File sizes      ,Assm matrix FULL,"RFILSZ,FULL"
  IDX_File sizes      ,Modal matrx MODE,"RFILSZ,MODE"
  IDX_File sizes      ,Red displac RDSP,"RFILSZ,RDSP"
  IDX_File sizes      ,Red struct  REDM,"RFILSZ,REDM"
  IDX_File sizes      ,Red complx  RFRQ,"RFILSZ,RFRQ"
  IDX_File sizes      ,Resul geom RGEOM,"RFILSZ,RGEOM"
  IDX_File sizes      ,Results load RST,"RFILSZ,RST"
  IDX_File sizes      ,Triang stiff TRI,"RFILSZ,TRI"
  IDX_Run times       ,Total solu TOTAL,"RTIMST,TOTAL"
  IDX_Run times       ,1st iter  TFIRST,"RTIMST,TFIRST"
  IDX_Run times       ,2+ iters   TITER,"RTIMST,TITER"
  IDX_Run times       ,Elem prep EQPREP,"RTIMST,EQPREP"
  IDX_Run times       ,Wavfrt sol SOLVE,"RTIMST,SOLVE"
  IDX_Run times       ,Back subst  BSUB,"RTIMST,BSUB"
  IDX_Run times       ,Eigen calc EIGEN,"RTIMST,EIGEN"
  IDX_Run times       ,Elem form ELFORM,"RTIMST,ELFORM"
  IDX_Run times       ,Ele resul ELSTRS,"RTIMST,ELSTRS"
  IDX_Run times       ,No.of elems NELM,"RTIMST,NELM"
  IDX_Memory stats    ,Req space  WSREQ,"RMEMRY,WSREQ"
  IDX_Memory stats    ,AvailSpac WSAVAI,"RMEMRY,WSAVAIL"
  IDX_Memory stats    ,DB PageSz DBPSIZ,"RMEMRY,DBPSIZE"
  IDX_Memory stats    ,DB DiskPg DBPDIS,"RMEMRY,DBPDISK"
  IDX_Memory stats    ,DB Size   DBSIZE,"RMEMRY,DBSIZE"
  IDX_Memory stats    ,DB PgInMemDBPMEM,"RMEMRY,DBPMEM"
  IDX_Memory stats    ,DB mem pag DBMEM,"RMEMRY,DBMEM"
  IDX_Memory stats    ,ANSYS scr SCRSIZ,"RMEMRY,SCRSIZE"
  IDX_Memory stats    ,Avail scr SCRAVA,"RMEMRY,SCRAVAIL"
  IDX_Memory stats    ,I/O scr memIOMEM,"RMEMRY,IOMEM"
  IDX_Memory stats    ,I/O PgSiz IOPSIZ,"RMEMRY,IOPSIZ"
  IDX_Memory stats    ,I/O buffrs IOBUF,"RMEMRY,IOBUF"
  IDX_Wavefront stats ,Max wavefrnt MAX,"RWFRNT,MAX"
  IDX_Wavefront stats ,RMS wavefrnt RMS,"RWFRNT,RMS"
  IDX_Wavefront stats ,Mean wavefr MEAN,"RWFRNT,MEAN"
 Fld_6
  Prm_Element type number -
  Typ_INT
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_- used only for ELFORM, ELSTRS, and NELM under 'Run times'
:E END
:! 
:N Fnc_*GET_subcnam
:S    473,   160,   305
:T Cmd
:C )! Fnc_*GET_subcnam
:A Subcomponent Name Data
:H Hlp_C_*GET
:D Get Subcomponent Name Data from Assemblies
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,COMP,,SNAME,n  Get subcomponent Data 
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'COMP'
 Fld_4
  Prm_Existing Assembly
  Typ_LIS
  LIS_*READ,ASSM
 Fld_5
  Typ_Def_SNAM
 Fld_6
  Prm_Character name of nth subcomp
  Typ_Int
  Def_1
:E END 
:! 
:N Fnc_*GET_subcomp
:S    403,   150,   245
:T Cmd
:C )! Fnc_*GET_subcomp
:A Subcomponent Data
:H Hlp_C_*GET
:D Get Subcomponent Data from Assemblies
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,COMP,,NSCOMP     Get subcomponent Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'COMP'
 Fld_4
  Prm_Existing Assembly
  Typ_LIS
  LIS_*READ,ASSM
 Fld_5
  Typ_Def_NSCO
:E END 
:! 
:N Fnc_*GET_tb
:S   1463,   123,  1333
:T Cmd
:C )! Fnc_*GET_tb
:A Data tables
:H Hlp_C_*GET
:D Get Data Table Information
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,TBlab,N   Get Data Table Information
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_4
  Prm_Material number N
  Typ_INT
  Def_1
 Fld_3
  Prm_Table from which to retrieve inf
  Typ_LIS
   P_LN(FULL_ANS)
  LIS_Bilin kinem BKIN,BKIN
   P_LN(FULL_ANS)
  LIS_Multi kinem MKIN,MKIN
   P_LN(FULL_ANS)
  LIS_Multi isotr MISO,MISO
   P_LN(FULL_ANS)
  LIS_Bilin isotr BISO,BISO
   P_LN(FULL_ANS)
  LIS_Anisotrop  ANISO,ANISO
   P_LN(FULL_ANS)
  LIS_Drucker-Pragr DP,DP
   P_LN(FULL_ANS)
  LIS_Anand plas ANAND,ANAND
   P_LN(FULL_ANS)
  LIS_Multi elas MELAS,MELAS
   P_LN(FULL_ANS)
  LIS_User define USER,USER
   P_LN(FULL_ANS)
  LIS_Creep      CREEP,CREEP
   P_LN(FULL_ANS)
  LIS_Swelling   SWELL,SWELL
   P_LN(LINPLUS)
  LIS_FailureCrit FAIL,FAIL
   P_LN(FULL_ANS)
  LIS_Hyperelast HYPER,HYPER
   P_LN(FULL_ANS)
  LIS_WaterMot'n WATER,WATER
   P_LN(FULL_ANS)
  LIS_Aniso elast ANEL,ANEL
   P_LN(FULL_ANS)
  LIS_Concrete   CONCR,CONCR
   P_LN(FULL_ANS)
  LIS_Pipe flow  PFLOW,PFLOW
   P_LN(FULL_ANS)
  LIS_Viscoelast EVISC,EVISC
   P_LN(ELECMAG)
  LIS_MagField data BH,BH
   P_LN(FULL_ANS)
  LIS_PiezoMatrix PIEZ,PIEZ
 Fld_5
  Typ_Def_TEMP
 Fld_6
  Prm_Temp at which to retrieve data
  Typ_REAL
 Fld_7
  Typ_Def_CONST
 Fld_8
  Prm_Retrieve value of constant no.
  Typ_INT
  Def_1
:E END
:! 
:N Fnc_*GET_topo1
:S    795,   138,   650
:T Cmd
:C )! Fnc_*GET_topo1
:A Topo opt data
:H Hlp_C_*GET
:D Get Topological Optimization Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,TOPO     Get Topological Optimization Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_TOPO
 Fld_5
  Prm_Topo opt data to be retrieved
  Typ_LIS
  LIS_Status of topo  ,"ACT "
  LIS_No of topo elem ,"TOEL"
  LIS_No of load cases,"LOAD"
  LIS_No of topo iter ,"ITER"
  LIS_Max no of iter  ,"MXIT"
  LIS_Termination flag,"CONV"
  LIS_Dimensionality  ,"DIM "
  LIS_Axisym option   ,"KAXI"
  LIS_Power for axisym,"POWP"
  LIS_No of freq      ,"NEV "
  LIS_Accuracy        ,"TOAC"
  LIS_Lower bound dens,"LOWD"
  LIS_No of constraint,"NTOC"
  LIS_Solution method ,"SFLA"
 Fld_0
:E END
:! 
:N Fnc_*GET_topo2
:S    389,   138,   244
:T Cmd
:C )! Fnc_*GET_topo2
:A Topo opt data
:H Hlp_C_*GET
:D Get Topological Optimization Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,TOPO,N,DENS   Get Topological Densities
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_TOPO
 Fld_4
  Prm_Element number N
  Typ_INT
  Def_1
 Fld_5
  Typ_Def_DENS
 Fld_0
:E END
:! 
:N Fnc_*GET_topo3
:S    396,   138,   251
:T Cmd
:C )! Fnc_*GET_topo3
:A Topo opt data
:H Hlp_C_*GET
:D Get Topological Optimization Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,TOPO,N   Get Topological Constraint Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_TOPO
 Fld_4
  Prm_Frequency identifier N
  Typ_INT
  Def_1
 Fld_5
  Typ_Def_FRQI
 Fld_0
:E END
:! 
:N Fnc_*GET_topo4
:S    631,   138,   486
:T Cmd
:C )! Fnc_*GET_topo4
:A Topo opt data
:H Hlp_C_*GET
:D Get Topological Optimization Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,TOPO,N   Get Topo constraint data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_TOPO
 Fld_4
  Prm_Constraint identifier N
  Typ_INT
  Def_1
 Fld_5
  Prm_Constraint data to be retrieved
  Typ_LIS
  LIS_Bounds          ,"TCBO"
  LIS_Percentage flag ,"TCBF"
 Fld_6
  Prm_Lower / Upper Bound
  Typ_LIS_RADIOB
  LIS_Lower bound,0
  LIS_Upper bound,1
 Fld_7
  Typ_Lab
  Prm_only needed for "Bounds" selection
 Fld_0
:E END
:! 
:N Fnc_*GET_topo5
:S    648,   194,   447
:T Cmd
:C )! Fnc_*GET_topo5
:C )/NOPR
:C )*get,_Z1,topo,,iter
:C )_Z1=_Z1-1
:C )/GO
:A Topo opt data
:H Hlp_C_*GET
:D Get Topological Optimization Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,TOPO,N   Get Topo iteration data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_TOPO
 Fld_4
  Prm_Iteration counter N
  Typ_INT
  Def_*PAR(_z1)
 Fld_5
  Prm_Iteration data to be retrieved
  Typ_LIS
  LIS_Objective ,"TOHO"
  LIS_Constraint,"TOHC"
 Fld_6
  Prm_Constraint Identifier
  Typ_INT
  Def_Blank
 Fld_7
  Typ_Lab
  Prm_only needed for "Constraint" selection
 Fld_0
:E END
:! 
:N Fnc_*GET_volu
:S    716,   112,   597
:T Cmd
:C )! Fnc_*GET_volu
:A Volumes
:H Hlp_C_*GET
:D Get Volume Data
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],Par,VOLU,N   Get Volume Data
 Fld_2
  Prm_Name of parameter to be defined
  Typ_CHAR,32,33
 Fld_3
  Typ_Def_VOLU
 Fld_4
  Prm_Volume number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Volume data to be retrieved
  Typ_LIS
  LIS_Material number ,"ATTR,MAT"
  LIS_Elem type number,"ATTR,TYPE"
  LIS_Real const num  ,"ATTR,REAL"
  LIS_Elem CS number  ,"ATTR,ESYS"
  LIS_No. of nodes    ,"ATTR,NNOD"
  LIS_No. of elements ,"ATTR,NELM"
  LIS_Volume          ,"VOLU"
  LIS_Select status   ,"VSEL"
  LIS_Next higher volu,"NXTH"
  LIS_Next lower volu ,"NXTL"
Cmd_)*DEL,_Z1
:E END
:! 
:N Fnc_*GET_weldmax
:S    375,   146,   221
:T Cmd
:C )! Fnc_*GET_weldmax
:A Maximum Spotweld Number
:H Hlp_C_*GET
:D Get Maximum Spotweld Number
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,WELD, ,NUM,MAX     Get Spotweld Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'WELD'
 Fld_4
  Def_0
 Fld_5
  Typ_Def_NUM
 Fld_6
  Typ_Def_MAX 
:E END 
:! 
:N Fnc_*GET_weldmin
:S    374,   146,   220
:T Cmd
:C )! Fnc_*GET_weldmin
:A Minimum Spotweld Number
:H Hlp_C_*GET
:D Get Minimum Spotweld Number
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,WELD, ,NUM,MIN     Get Spotweld Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'WELD'
 Fld_4
  Def_0
 Fld_5
  Typ_Def_NUM
 Fld_6
  Typ_Def_MIN
:E END 
:! 
:N Fnc_*GET_weldno
:S    344,   137,   199
:T Cmd
:C )! Fnc_*GET_weldmax
:A Number of Spotwelds
:H Hlp_C_*GET
:D Get Number of Spotwelds
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,WELD, ,COUNT     Get Spotweld Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'WELD'
 Fld_4
  Def_0
 Fld_5
  Typ_Def_COUNT
:E END 
:! 
:N Fnc_*GET_weldnod
:S    465,   133,   324
:T Cmd
:C )! Fnc_*GET_weldnod
:A Spotweld Node
:H Hlp_C_*GET
:D Get Spotweld Node Number
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,WELD,N,NODE        Get Weld Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'WELD'
 Fld_4
   Prm_Spotweld number  N
   Typ_INT
 Fld_5
  Typ_def_'NODE'
 Fld_6
  Prm_Node number choice
  Typ_Lis_RadioB
  Lis_Get 1st Node No,1
  Lis_Get 2nd Node No,2
:E END 
:! 
:N Fnc_*GET_weldnxt
:S    371,   140,   223
:T Cmd
:C )! Fnc_*GET_weldnxt
:A Next Spotweld Number
:H Hlp_C_*GET
:D Get Next Spotweld Number
Cmd_*GET
 Fld_0
  Typ_Lab
  Prm_[*GET],par,WELD,N,NXTH      Get Weld Data
 Fld_2
  Prm_Name of resulting parameter 
  Typ_CHAR,32,33
 Fld_3
  Typ_def_'WELD'
 Fld_4
   Prm_Spotweld number  N
   Typ_INT
 Fld_5
  Typ_def_NXTH
:E END 
:! 
:N Fnc_*MFOURI
:S    621,   129,   484
:T Cmd
:C )! Fnc_*MFOURI
:A Matrix Fourier
:D Fourier Series Calculation
:H Hlp_C_*MFOURI
Cmd_*MFOURI
 Fld_0
  Typ_Lab
  Prm_[*MFOURI]  Fourier Series Calculation
 Fld_2
  Prm_Oper   Type of Fourier operation
  Typ_LIS_OPTIONB
   LIS_Calc coeff   FIT,FIT
   LIS_Eval curve  EVAL,EVAL
 Fld_3
  Typ_CHAR,32
  Prm_COEFF  Vector of Fourier coeffs
 Fld_4 
  Typ_CHAR,32
  Prm_MODE   Vector of Mode numbers 
 Fld_5
  Typ_CHAR,32
  Prm_ISYM   Vector of Symmetry keys
 Fld_6
  Typ_CHAR,32
  Prm_THETA  Vector of Theta values
 Fld_7
  Typ_CHAR,32
  Prm_CURVE  Vector of Curve values
:E End 
:! 
:N Fnc_*MFUN
:S    433,   133,   293
:T Cmd
:C )!  Fnc_*MFUN
:A Matrix Functions
:D Array Parameter Matrix Functions 
:H Hlp_C_*MFUN
Cmd_*MFUN
 Fld_0
  Typ_Lab
  Prm_[*MFUN]   ParR(i,j,k) = Func( Par1(i,j,k) )
 Fld_2
  Typ_CHAR,32
  Prm_ParR  Result array parameter
 Fld_4
  Typ_CHAR,32 
  Prm_Par1  Input array parameter
 Fld_3
  Prm_Func  Function
  Typ_LIS_OPTIONB
   LIS_Copy        COPY,COPY
   LIS_Transpose   TRAN,TRAN
:E End
:! 
:N Fnc_*MOONEY
:S   1709,   390,  1312
:T Command
:C )!Fnc_*MOONEY
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,5
:C )*GET,_zc(1),ACTIVE,,JOBNAM,,START,1
:C )*GET,_zc(2),ACTIVE,,JOBNAM,,START,9
:C )*GET,_zc(3),ACTIVE,,JOBNAM,,START,17
:C )*GET,_zc(4),ACTIVE,,JOBNAM,,START,25
:C )/GO
:A Calculate Const
:D Calculate Mooney-Rivlin Constants from Experimental Data
:H Hlp_C_*MOONEY
:P (FULL_ANS)
Cmd_)/NOPR 
Cmd_)*CSET,101,101
 Fld_0
  Typ_Lab
  Prm_[*MOONEY]  Calculate Mooney-Rivlin Constants from Experimental Data
 Fld_2
  K_FL(lsdyna)
  Typ_Lis_OptionB
   Lis_2,2
   Lis_5,5
   Lis_9,9
  Prm_Number of Mooney-Rivlin Const
!
 Fld_0
  Typ_Sep
Cmd_)*CSET,1,2
 Fld_0
  Typ_Lab
  Prm_(Note: All parameters must already be defined.
 Fld_0
   Typ_Lab
  Prm_ Enter array names ONLY; do NOT include the indices.)
 Fld_0
  Typ_Lab
  Prm_ Array parameters which contain experimental data...
 Fld_2
  Prm_STRAIN  Strain data array
  Typ_CHAR
 Fld_3
  Prm_STRESS  Stress data array
  Typ_CHAR
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Array parameter names accepting Mooney-Rivlin data
Cmd_)*CSET,3,3
 Fld_2
  Prm_CONST   Hyper mat'l constants
  Typ_Char,8
  Def_CONST
Cmd_)*CSET,4,4
 Fld_2
  Prm_CALC    Calculated eng'g stress
  Typ_Char,8
  Def_CALC
Cmd_)*CSET,5,5
 Fld_2
  Prm_SORTSN  Sorted test strain data
  Typ_Char,8
  Def_SORTSN
Cmd_)*CSET,6,6
 Fld_2
  Prm_SORTSS  Sorted test stress data
  Typ_Char,8
  Def_SORTSS
 Fld_0
  Typ_Lab
  Prm_Write Mooney-Rivlin constants to a file
Cmd_)*CSET,15,15
 Fld_2
  Prm_                      Fname
  Typ_Char,32,32
  Def_*STR(%_zc(1)%%_zc(2)%%_zc(3)%%_zc(4)%)
Cmd_)*CSET,16,16
 Fld_2
  Prm_                        Ext
  Typ_Char,16,16
  Def_tb
Cmd_)/GO
Cal_Fnc_*MOONEY2
:E END
:! 
:N Fnc_*MOONEY2
:S    209,    58,   144
:C )!Fnc_*MOONEY2
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z5
 Fld_2
  Typ_Def_PARLOC(
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(1)
  Dlm_'
 Fld_4
  Typ_Def_)
Cmd_)/GO
Cal_Fnc_*MOONEY2a
:E END
:! 
:N Fnc_*MOONEY2a
:S    988,   165,   816
:C )!Fnc_*MOONEY2a
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )*GET,_z(1),CPAR,101
:C )_z(2)=pariqr(_z5,11)
:C )/GO
:T Command
Inp_P
! Exclude_from_paths
Cmd_*DIM
 Fld_2
  Typ_Def_*CPAR(3)
 Fld_4
  Typ_Def_*PAR(_z(1))
Cmd_*DIM
 Fld_2
  Typ_Def_*CPAR(4)
 Fld_3
  Typ_Def_table
 Fld_4
  Typ_Def_*PAR(_z(2))
 Fld_5
  Typ_Def_3
Cmd_*DIM
 Fld_2
  Typ_Def_*CPAR(5)
 Fld_3
  Typ_Def_table
 Fld_4
  Typ_Def_*PAR(_z(2))
 Fld_5
  Typ_Def_3
Cmd_*DIM
 Fld_2
  Typ_Def_*CPAR(6)
 Fld_3
  Typ_Def_table
 Fld_4
  Typ_Def_*PAR(_z(2))
 Fld_5
  Typ_Def_3
Cmd_*MOONEY
 Fld_2
  Typ_Def_*CPAR(1)
  Dlm_(
 Fld_3
  Typ_Def_1,1)
 Fld_4
  Typ_Def_*CPAR(2)
  Dlm_(
 Fld_5
  Typ_Def_1,1)
 Fld_7
  Typ_Def_*CPAR(3)
  Dlm_(
 Fld_8
  Typ_Def_1)
 Fld_9
  Typ_Def_*CPAR(4)
  Dlm_(
 Fld_10
  Typ_Def_1,1)
 Fld_11
  Typ_Def_*CPAR(5)
  Dlm_(
 Fld_12
  Typ_Def_1,1)
 Fld_13
  Typ_Def_*CPAR(6)
  Dlm_(
 Fld_14
  Typ_Def_1,1)
 Fld_15
  Typ_Def_*CPAR(15)
 Fld_16
  Typ_Def_*CPAR(16)
:E END
:! 
:N Fnc_*MOPER
:S    606,   138,   461
:T Cmd
:C )!  Fnc_*MOPER
:A Matrix Operations
:D Array Parameter Matrix Operations 
:H Hlp_C_*MOPER
Cmd_*MOPER
 Fld_0
  Typ_Lab
  Prm_[*MOPER]   ParR(i,j,k) = Par1(i,j,k) <Oper> Par2(i,j,k)
 Fld_2
  Typ_CHAR,32
  Prm_ParR   Result array parameter
 Fld_3
  Typ_CHAR,32
  Prm_Par1   1st input array parameter
 Fld_4
  Prm_Oper   Operation
  Typ_LIS_OPTIONB
   LIS_Multiply    MULT,MULT
   LIS_Simult eqns SOLV,SOLV
   LIS_Sort        SORT,SORT
   LIS_Covariance COVAR,COVAR
   LIS_Correlation CORR,CORR
 Fld_5
  Typ_CHAR,32
  Prm_Par2   2nd input array parameter
:E END
:! 
:N Fnc_*STAT
:S   1034,   183,   844
:T Cmd
:C )!  Fnc_*STAT
:C )/NOPR
:C )*get,_z1,PARM,,MAX
:C )keyw,key1,_z1
:C )/GO
:A Named Parameters
:D Named-Parameter Status
:H Hlp_C_*STATUS
Cmd_*STATUS
 Fld_0
  Typ_Lab
  Prm_[*STAT]  Named-Parameter Status
 Fld_2
 K_FL(key1)
  Typ_LIS
  Prm_Par      Name of parameter
   LIS_Local macro parm,ARGX
 Fld_2
 K_FL(KEY1)
  Typ_LIS
  Prm_Par      Name of parameter
   LIS_Local macro parm,ARGX
   LIS_*READ,PAR
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Following used only for array parameters
 Fld_3
  Typ_INT2
  Def_1,Blank
  Prm_IMIN,IMAX  Range of array rows
 Fld_5
  Typ_INT2
  Def_1,Blank
  Prm_JMIN,JMAX  Range of array cols
 Fld_7
  Typ_INT2
  Def_1,Blank
  Prm_KMIN,KMAX  Range of array planes
 Fld_9
  Typ_INT2
  Def_1,Blank
  Prm_LMIN,LMAX  Range of array books
 Fld_11
  Typ_INT2
  Def_1,Blank
  Prm_MMIN,MMAX  Range of array shelfs
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Following used only for table parameters
 Fld_13
  Typ_LOGI,No,Yes
  Def_1
  Prm_List primary variable(s)
:E End
:! 
:N Fnc_*STAT_array
:S    235,   143,    85
:T Cmd
:A Define/Edit
:D Array Parameters -> Define/Edit
:C )!  Fnc_*STAT_array
:H Hlp_UI_Arry_Stat
Inp_P
Cmd_)*STATUS,,, ,,, ,,,  ,,, ,,, ,1
! Cust_Cal_Fnc_ARRAY_ADD
! Cust_Cmd_*VEDIT
:E End
:! 
:N Fnc_*TOPER
:S    979,   243,   729
:T Cmd
:C )!  Fnc_*TOPER
:C )/NOPR
:C )keyw,notable,1
:C )*get,_zz,parm,0,tabl
:C )*if,_zz,gt,0,then
:C )keyw,notable,0
:C )*endif
:C )/GO
:A Table Operations
:D Table Parameter Operations
:H Hlp_C_*TOPER
Cmd_*TOPER
K_CM(notable)
 Fld_0
  Typ_Lab
  Prm_[*TOPER] ParR(i,j,k)=Par1(i,j,k)*CON1 <Oper> Par2(i,j,k)*CON2 + CON3
 Fld_2
  Typ_CHAR,8
  Prm_ParR   Result table parameter
 Fld_3
  Prm_Par1   1st input table parameter
  Typ_LIS_OPTIONB
  LIS_*READ,PATB
 Fld_4
  Prm_Oper   Operation
  Typ_LIS_OPTIONB
   LIS_Add            +,ADD
 Fld_5
  Prm_Par2   2nd input table parameter
  Typ_LIS_OPTIONB
  LIS_*READ,PATB
 Fld_6
  Typ_REAL
  Prm_CON1   1st constant
  Def_1
 Fld_7
  Typ_REAL
  Prm_CON2   2nd constant
  Def_1
 Fld_8
  Typ_REAL
  Prm_CON3   3rd constant
  Def_0
Cmd_)!
K_CM(NOTABLE)
 Fld_0
  Typ_Lab
  Prm_There are no tables defined for Table Operations.
 Fld_0
  Typ_Lab
  Prm_Use *DIM command to define table parameters.
:E END
:! 
:N Fnc_*VFILL
:S    981,   112,   862
:T Cmd
:C )!  Fnc_*VFILL
:H Hlp_C_*VFILL
:A Fill
:D Fill Array Parameter 
Inp_NoApply
Cmd_)!
 Fld_0
  Prm_[*VFILL]   Fill Array Parameter
 Fld_2
  Prm_Type of fill function
  Typ_LIS_RADIOB
  LIS_Ramp            ,1
  LIS_Specified values,2
  LIS_Random numbers  ,3
  LIS_Gaussian distrib,4
  LIS_Triangular distr,5
  LIS_Beta distrib    ,6
  LIS_Gamma distrib   ,7
K_LN(BETA)
  LIS_Node            ,8
K_LN(BETA)
  LIS_Elem            ,9
K_LN(BETA)
  LIS_Keypoint       ,10
K_LN(BETA)
  LIS_Line           ,11
K_LN(BETA)
  LIS_Area           ,12
K_LN(BETA)
  LIS_Volume         ,13
Cal_Fnc_*VFILL_ramp,2,eq,1
Cal_Fnc_*VFILL_data,2,eq,2
Cal_Fnc_*VFILL_rand,2,eq,3
Cal_Fnc_*VFILL_gdis,2,eq,4
Cal_Fnc_*VFILL_tria,2,eq,5
Cal_Fnc_*VFILL_beta,2,eq,6
Cal_Fnc_*VFILL_gamm,2,eq,7
Cal_Fnc_*VFILL_node,2,eq,8
Cal_Fnc_*VFILL_elem,2,eq,9
Cal_Fnc_*VFILL_keyp,2,eq,10
Cal_Fnc_*VFILL_line,2,eq,11
Cal_Fnc_*VFILL_area,2,eq,12
Cal_Fnc_*VFILL_volu,2,eq,13
:E End
:! 
:N Fnc_*VFILL_beta
:S    546,   146,   393
:T Cmd
:C )!  Fnc_*VFILL_beta
:H Hlp_C_*VFILL
:D Fill Array Parameter using Beta Distribution Function
Cmd_*VFILL
 Fld_0
  Typ_Lab
  Prm_[*VFILL],ParR,BETA    ParR(i,j,k) = BETA(CON1,CON2,CON3,CON4)
 Fld_2
  Typ_CHAR
  Prm_ParR   Result array parameter
 Fld_3
  Typ_Def_BETA
 Fld_4
  Prm_CON1   Lower bound
  Typ_REAL
  Def_0.0
 Fld_5
  Prm_CON2   Upper bound
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_CON3   Alpha parameter
  Typ_REAL
  Def_1.0
 Fld_7
  Prm_CON4   Beta parameter
  Typ_REAL
  Def_1.0
:E End
:! 
:N Fnc_*VFILL_data
:S    836,   135,   694
:T Cmd
:C )!  Fnc_*VFILL_data
:H Hlp_C_*VFILL
:D Fill Array Parameter with Specified Values
Cmd_*VFILL
 Fld_0
  Typ_Lab
  Prm_[*VFILL],ParR,DATA   ParR(i,j,k) = (CON1, CON2, CON3, ..., CON10)
 Fld_2
  Typ_CHAR,32
  Prm_ParR   Result array parameter
 Fld_3
  Typ_Def_DATA
 Fld_4
  Prm_CON1   Value 1
  Typ_REAL
  Def_Blank
 Fld_5
  Prm_CON2   Value 2
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_CON3   Value 3
  Typ_REAL
  Def_Blank
 Fld_7
  Prm_CON4   Value 4
  Typ_REAL
  Def_Blank
 Fld_8
  Prm_CON5   Value 5
  Typ_REAL
  Def_Blank
 Fld_9
  Prm_CON6   Value 6
  Typ_REAL
  Def_Blank
 Fld_10
  Prm_CON7   Value 7
  Typ_REAL
  Def_Blank
 Fld_11
  Prm_CON8   Value 8
  Typ_REAL
  Def_Blank
 Fld_12
  Prm_CON9   Value 9
  Typ_REAL
  Def_Blank
 Fld_13
  Prm_CON10  Value 10
  Typ_REAL
  Def_Blank
:E End
:! 
:N Fnc_*VFILL_gamm
:S    487,   147,   333
:T Cmd
:C )!  Fnc_*VFILL_gamm
:H Hlp_C_*VFILL
:D Fill Array Parameter using Gamma Distribution Function
Cmd_*VFILL
 Fld_0
  Typ_Lab
  Prm_[*VFILL],ParR,GAMM    ParR(i,j,k) = GAMM(CON1,CON2,CON3)
 Fld_2
  Typ_CHAR
  Prm_ParR   Result array parameter
 Fld_3
  Typ_Def_GAMM
 Fld_4
  Prm_CON1   Lower bound
  Typ_REAL
  Def_0.0
 Fld_5
  Prm_CON2   Alpha parameter
  Typ_REAL
  Def_1.0
 Fld_6
  Prm_CON3   Beta parameter
  Typ_REAL
  Def_1.0
:E End
:! 
:N Fnc_*VFILL_gdis
:S    434,   150,   277
:T Cmd
:C )!  Fnc_*VFILL_gdis
:H Hlp_C_*VFILL
:D Fill Array Parameter using Gaussian Distribution Function
Cmd_*VFILL
 Fld_0
  Typ_Lab
  Prm_[*VFILL],ParR,GDIS    ParR(i,j,k) = GDIS(CON1,CON2)
 Fld_2
  Typ_CHAR,32
  Prm_ParR   Result array parameter
 Fld_3
  Typ_Def_GDIS
 Fld_4
  Prm_CON1   Mean value
  Typ_REAL
  Def_0.0
 Fld_5
  Prm_CON2   Standard deviation
  Typ_REAL
  Def_1.0
:E End
:! 
:N Fnc_*VFILL_ramp
:S    401,   133,   261
:T Cmd
:C )!  Fnc_*VFILL_ramp
:H Hlp_C_*VFILL
:D Fill Array Parameter using Ramp Function
Cmd_*VFILL
 Fld_0
  Typ_Lab
  Prm_[*VFILL],ParR,RAMP    ParR(i,j,k) = (CON1 + (n-1)*CON2)
 Fld_2
  Typ_CHAR,32
  Prm_ParR   Result array parameter
 Fld_3
  Typ_Def_RAMP
 Fld_4
  Prm_CON1   Starting value
  Typ_REAL
 Fld_5
  Prm_CON2   Ramp increment
  Typ_REAL
:E End
:! 
:N Fnc_*VFILL_rand
:S    422,   142,   273
:T Cmd
:C )!  Fnc_*VFILL_rand
:H Hlp_C_*VFILL
:D Fill Array Parameter using Random Number Function
Cmd_*VFILL
 Fld_0
  Typ_Lab
  Prm_[*VFILL],ParR,RAND    ParR(i,j,k) = Random(CON1,CON2)
 Fld_2
  Typ_CHAR,32
  Prm_ParR   Result array parameter
 Fld_3
  Typ_Def_RAND
 Fld_4
  Prm_CON1   Lower bound
  Typ_REAL
  Def_0.0
 Fld_5
  Prm_CON2   Upper bound
  Typ_REAL
  Def_1.0
:E End
:! 
:N Fnc_*VFILL_tria
:S    500,   152,   341
:T Cmd
:C )!  Fnc_*VFILL_tria
:H Hlp_C_*VFILL
:D Fill Array Parameter using Triangular Distribution Function
Cmd_*VFILL
 Fld_0
  Typ_Lab
  Prm_[*VFILL],ParR,TRIA    ParR(i,j,k) = TRIA(CON1,CON2,CON3)
 Fld_2
  Typ_CHAR
  Prm_ParR   Result array parameter
 Fld_3
  Typ_Def_TRIA
 Fld_4
  Prm_CON1   Lower bound
  Typ_REAL
  Def_0.0
 Fld_5
  Prm_CON2   Location of peak value
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_CON3   Upper bound
  Typ_REAL
  Def_Blank
:E End
:! 
:N Fnc_*VFUN
:S   1307,   133,  1167
:T Cmd
:C )!  Fnc_*VFUN
:A Vector Functions
:D Array Parameter Vector Functions 
:H Hlp_C_*VFUN
Cmd_*VFUN
 Fld_0
  Typ_Lab
  Prm_[*VFUN]   ParR(i,j,k) = Func( Par1(i,j,k) )
 Fld_2
  Typ_CHAR
  Prm_ParR  Result array parameter
 Fld_4
  Typ_CHAR
  Prm_Par1  Input array parameter
 Fld_3
  Prm_Func  Function
  Typ_LIS_OPTIONB
   LIS_Sine         SIN,SIN
   LIS_Cosine       COS,COS     
   LIS_Tangent      TAN,TAN
   LIS_Arcsine     ASIN,ASIN
   LIS_Arccosine   ACOS,ACOS
   LIS_Arctangent  ATAN,ATAN
   LIS_HyperSine   SINH,SINH 
   LIS_HyperCosine COSH,COSH
   LIS_HyperTangen TANH,TANH
   LIS_Power        PWR,PWR
   LIS_Square root SQRT,SQRT
   LIS_Exponential  EXP,EXP
   LIS_Natural log  LOG,LOG
   LIS_Common log LOG10,LOG10
   LIS_Nearest int NINT,NINT
   LIS_Complement   NOT,NOT 
   LIS_Tan to Path TANG,TANG
   LIS_Norm to Pth NORM,NORM
   LIS_Transfr to LOCAL,LOCAL
   LIS_Transf to GLOBAL,GLOBAL
   LIS_Copy        COPY,COPY
   LIS_Sort up    ASORT,ASORT
   LIS_Sort down  DSORT,DSORT
   LIS_Compress    COMP,COMP
   LIS_Expand      EXPA,EXPA
 Fld_5
  Prm_CON1  Constant for PWR, NORM, -
  Typ_REAL
 Fld_0 
  Typ_Lab
  Prm_      - LOCAL, GLOBAL
 Fld_6
  Prm_CON2  2nd constant for NORM
  Typ_REAL
 Fld_7
  Prm_CON3  3rd constant for NORM  
  Typ_REAL
:E End
:! 
:N Fnc_*VGET
:S   1010,   111,   892
:T Cmd
:C )! Fnc_*VGET
:A Get Array Data
:H Hlp_C_*VGET
:D Get Array Data
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_[*VGET]  Get Array Data
 Fld_2
  Prm_Type of data to be retrieved
  Typ_IDX
  IDX_Model data      ,Nodes           ,1
  IDX_Model data      ,Elements        ,2
  IDX_Model data      ,Keypoints       ,3
  IDX_Model data      ,Lines           ,4
  IDX_Model data      ,Areas           ,5
  IDX_Model data      ,Volumes         ,6
  IDX_Model data      ,Coord systems   ,7
  IDX_Model data      ,Real constants  ,8
  IDX_Model data      ,Data tables     ,9
  IDX_Results data    ,Nodal results   ,10
  IDX_Results data    ,Elem table data ,11
Cal_Fnc_*VGET_node,  2,eq,1
Cal_Fnc_*VGET_elem,  2,eq,2
Cal_Fnc_*VGET_kp,    2,eq,3
Cal_Fnc_*VGET_line,  2,eq,4
Cal_Fnc_*VGET_area,  2,eq,5
Cal_Fnc_*VGET_volu,  2,eq,6
Cal_Fnc_*VGET_cdsy,  2,eq,7
Cal_Fnc_*VGET_rcon,  2,eq,8
Cal_Fnc_*VGET_tb,    2,eq,9
Cal_Fnc_*VGET_p1_nod,2,eq,10
Cal_Fnc_*VGET_p1_eta,2,eq,11
:E END
:! 
:N Fnc_*VGET_area
:S    911,   132,   772
:T Cmd
:C )! Fnc_*VGET_area
:A Areas
:H Hlp_C_*VGET
:D Get Area Data into Array Parameter
Cmd_*VGET
 Fld_0
  Typ_Lab
  Prm_[*VGET],ParR,AREA,N   Get Area Data into Array Parameter
 Fld_2
  Prm_Name of array parameter
  Typ_CHAR,32
 Fld_3
  Typ_Def_AREA
 Fld_4
  Prm_Area number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Area data to be retrieved
  Typ_IDX
  IDX_Attributes      ,Material num MAT,"ATTR,MAT"
  IDX_Attributes      ,ElemTyp num TYPE,"ATTR,TYPE"
  IDX_Attributes      ,RealCon num REAL,"ATTR,REAL"
  IDX_Attributes      ,Elem CS num ESYS,"ATTR,ESYS"
  IDX_Attributes      ,No. of nods NNOD,"ATTR,NNOD"
  IDX_Attributes      ,No. of elem NELM,"ATTR,NELM"
  IDX_Geometry        ,Area        AREA,"AREA"
  IDX_Select status   ,ASEL            ,"ASEL"
 Fld_8
  Prm_Fill array by looping on
  Typ_LIS_OPTIONB
  LIS_Area number     ,2
  LIS_Data Selection  ,4
:E END
:! 
:N Fnc_*VGET_cdsy
:S   1120,   153,   960
:T Cmd
:C )! Fnc_*VGET_cdsy
:A Coord systems
:H Hlp_C_*VGET
:D Get Coordinate System Data into Array Parameter
Cmd_*VGET
 Fld_0
  Typ_Lab
  Prm_[*VGET],ParR,CDSY,N   Get Coordinate System into Array Parameter
 Fld_2
  Prm_Name of array parameter
  Typ_CHAR,32
 Fld_3
  Typ_Def_CDSY
 Fld_4
  Prm_Coordinate system number N
  Typ_INT
 Fld_5
  Prm_Coord sys data to be retrieved
  Typ_IDX
  IDX_Origin location ,X               ,LOC,X
  IDX_Origin location ,Y               ,LOC,Y
  IDX_Origin location ,Z               ,LOC,Z
  IDX_Rotation angle  ,XY              ,ANG,XY
  IDX_Rotation angle  ,YZ              ,ANG,YZ
  IDX_Rotation angle  ,ZX              ,ANG,ZX
  IDX_Attributes      ,Coord sys type  ,ATTR,KCS
  IDX_Attributes      ,Ratio Y-rad/X-rd,ATTR,PAR1
  IDX_Attributes      ,Ratio Z-rad/X-rd,ATTR,PAR2
  IDX_Attributes      ,Maj rad of torus,ATTR,PAR1
  IDX_Attributes      ,Theta singularit,ATTR,KTHET
  IDX_Attributes      ,Phi singularity ,ATTR,KPHI
 Fld_8
  Prm_Fill array by looping on
  Typ_LIS_OPTIONB
  LIS_Coord sys number,2
  LIS_Data Selection  ,4
:E END
:! 
:N Fnc_*VGET_elem
:S   2300,   138,  2155
:T Cmd
:C )! Fnc_*VGET_elem
:A Elements
:H Hlp_C_*VGET
:D Get Element Data into Array Parameter
Cmd_*VGET
 Fld_0
  Typ_Lab
  Prm_[*VGET],ParR,ELEM,N   Get Element Data into Array Parameter
 Fld_2
  Prm_Name of array parameter
  Typ_CHAR,32
 Fld_3
  Typ_Def_ELEM
 Fld_4
  Prm_Element number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Element data to be retrieved
  Typ_IDX
  IDX_Attributes      ,Material num MAT,"ATTR,MAT"
  IDX_Attributes      ,ElemTyp num TYPE,"ATTR,TYPE"
  IDX_Attributes      ,RealCon num REAL,"ATTR,REAL"
  IDX_Attributes      ,Elem CS num ESYS,"ATTR,ESYS"
  IDX_Attributes      ,Elem name   NAME,"ATTR,ENAM"
  IDX_Length/area/volu,GEOM            ,"GEOM"
  IDX_Select status   ,ESEL            ,"ESEL"
  IDX_Centroid locat'n,X coordinate   X,"CENT,X"
  IDX_Centroid locat'n,Y coordinate   Y,"CENT,Y"
  IDX_Centroid locat'n,Z coordinate   Z,"CENT,Z"
  IDX_Elem adjacent to,Face 1          ,"ADJ,1"
  IDX_Elem adjacent to,Face 2          ,"ADJ,2"
  IDX_Elem adjacent to,Face 3          ,"ADJ,3"
  IDX_Elem adjacent to,Face 4          ,"ADJ,4"
  IDX_Elem adjacent to,Face 5          ,"ADJ,5"
  IDX_Elem adjacent to,Face 6          ,"ADJ,6"
  IDX_Node number in  ,Position 1      ,"NODE,1"
  IDX_Node number in  ,Position 2      ,"NODE,2"
  IDX_Node number in  ,Position 3      ,"NODE,3"
  IDX_Node number in  ,Position 4      ,"NODE,4"
  IDX_Node number in  ,Position 5      ,"NODE,5"
  IDX_Node number in  ,Position 6      ,"NODE,6"
  IDX_Node number in  ,Position 7      ,"NODE,7"
  IDX_Node number in  ,Position 8      ,"NODE,8"
  IDX_Node number in  ,Position 9      ,"NODE,9"
  IDX_Node number in  ,Position 10     ,"NODE,10"
  IDX_Node number in  ,Position 11     ,"NODE,11"
  IDX_Node number in  ,Position 12     ,"NODE,12"
  IDX_Node number in  ,Position 13     ,"NODE,13"
  IDX_Node number in  ,Position 14     ,"NODE,14"
  IDX_Node number in  ,Position 15     ,"NODE,15"
  IDX_Node number in  ,Position 16     ,"NODE,16"
  IDX_Node number in  ,Position 17     ,"NODE,17"
  IDX_Node number in  ,Position 18     ,"NODE,18"
  IDX_Node number in  ,Position 19     ,"NODE,19"
  IDX_Node number in  ,Position 20     ,"NODE,20"
 Fld_8
  Prm_Fill array by looping on
  Typ_LIS_OPTIONB
  LIS_Element number  ,2
  LIS_Data selection  ,4
:E END
:! 
:N Fnc_*VGET_kp
:S   1062,   136,   919
:T Cmd
:C )! Fnc_*VGET_kp
:A Keypoints
:H Hlp_C_*VGET
:D Get Keypoint Data into Array Parameter
Cmd_*VGET
 Fld_0
  Typ_Lab
  Prm_[*VGET],ParR,KP,N   Get Keypoint Data into Array Parameter
 Fld_2
  Prm_Name of array parameter
  Typ_CHAR,32
 Fld_3
  Typ_Def_KP
 Fld_4
  Prm_Keypoint number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Keypoint data to be retrieved
  Typ_IDX
  IDX_Location        ,X               ,LOC,X
  IDX_Location        ,Y               ,LOC,Y
  IDX_Location        ,Z               ,LOC,Z
  IDX_Attributes      ,Material num MAT,"ATTR,MAT"
  IDX_Attributes      ,ElemTyp num TYPE,"ATTR,TYPE"
  IDX_Attributes      ,RealCon num REAL,"ATTR,REAL"
  IDX_Attributes      ,Elem CS num ESYS,"ATTR,ESYS"
  IDX_Attributes      ,Node number NODE,"ATTR,NODE"
  IDX_Attributes      ,Elem number ELEM,"ATTR,ELEM"
  IDX_Element size    ,DIV             ,"DIV,"
  IDX_Select status   ,KSEL            ,"KSEL,"
 Fld_8
  Prm_Fill array by looping on
  Typ_LIS_OPTIONB
  LIS_Keypoint number ,2
  LIS_Data Selection  ,4
:E END
:! 
:N Fnc_*VGET_line
:S   1057,   132,   918
:T Cmd
:C )! Fnc_*VGET_line
:A Lines
:H Hlp_C_*VGET
:D Get Line Data into Array Parameter
Cmd_*VGET
 Fld_0
  Typ_Lab
  Prm_[*VGET],ParR,LINE,N   Get Line Data into Array Parameter
 Fld_2
  Prm_Name of array parameter
  Typ_CHAR,32
 Fld_3
  Typ_Def_LINE
 Fld_4
  Prm_Line number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Line data to be retrieved
  Typ_IDX
  IDX_Attributes      ,Material num MAT,"ATTR,MAT"
  IDX_Attributes      ,ElemTyp num TYPE,"ATTR,TYPE"
  IDX_Attributes      ,RealCon num REAL,"ATTR,REAL"
  IDX_Attributes      ,Elem CS num ESYS,"ATTR,ESYS"
  IDX_Attributes      ,No. of nods NNOD,"ATTR,NNOD"
  IDX_Attributes      ,No. of elem NELM,"ATTR,NELM"
  IDX_Attributes      ,No. of divs NDIV,"ATTR,NDIV"
  IDX_Geometry        ,Length      LENG,"LENG"
  IDX_Select status   ,LSEL            ,"LSEL"
  IDX_KP number in    ,Position 1      ,"KP,1"
  IDX_KP number in    ,Position 2      ,"KP,2"
 Fld_8
  Prm_Fill array by looping on
  Typ_LIS_OPTIONB
  LIS_Line number     ,2
  LIS_Data Selection  ,4
:E END
:! 
:N Fnc_*VGET_node
:S    834,   133,   694
:T Cmd
:C )! Fnc_*VGET_node
:A Nodes
:H Hlp_C_*VGET
:D Get Nodal Data into Array Parameter
Cmd_*VGET
 Fld_0
  Typ_Lab
  Prm_[*VGET],ParR,NODE,N   Get Nodal Data into Array Parameter
 Fld_2
  Prm_Name of array parameter
  Typ_CHAR,32
 Fld_3
  Typ_Def_NODE
 Fld_4
  Prm_Node number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Nodal data to be retrieved
  Typ_IDX
  IDX_Location        ,X               ,LOC,X
  IDX_Location        ,Y               ,LOC,Y
  IDX_Location        ,Z               ,LOC,Z
  IDX_Rotation angle  ,XY              ,ANG,XY
  IDX_Rotation angle  ,YZ              ,ANG,YZ
  IDX_Rotation angle  ,ZX              ,ANG,ZX
  Idx_Select status   ,NSEL            ,NSEL,
 Fld_8
  Prm_Fill array by looping on
  Typ_LIS_OPTIONB
  LIS_Node number     ,2
  LIS_Data selection  ,4
:E END
:! 
:N Fnc_*VGET_p1_eta
:S    594,   155,   432
:T Cmd
:C )! Fnc_*VGET_p1_eta
:A Elem table data
:H Hlp_C_*VGET
:D Get Element Table Data into Array Parameter
Cmd_*VGET
 Fld_0
  Typ_Lab
  Prm_[*VGET],ParR,ELEM,N   Get Element Table Data into Array Parameter
 Fld_2
  Prm_Name of array parameter
  Typ_CHAR,32
 Fld_3
  Typ_Def_ELEM
 Fld_4
  Prm_Element number N
  Typ_INT
  Def_Blank
 Fld_5
  Typ_Def_ETAB
 Fld_6
  Prm_Elem table item to be retrieved
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_9
  Prm_Fill array by looping on
  Typ_LIS_OPTIONB
  LIS_Element number  ,2
  LIS_Elem table item ,4
:E END
:! 
:N Fnc_*VGET_p1_nod
:S  12775,   148, 12620
:T Cmd
:C )! Fnc_*VGET_p1_nod
:A Nodal results
:H Hlp_C_*VGET
:D Get Nodal Results into Array Parameter
Cmd_*VGET
 Fld_0
  Typ_Lab
  Prm_[*VGET],ParR,NODE,N   Get Nodal Results Data into Array Parameter
 Fld_2
  Prm_Name of array parameter
  Typ_CHAR,32
 Fld_3
  Typ_Def_NODE
 Fld_4
  Prm_Node number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Results data to be retrieved
  Typ_IDX
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,              UY,U,Y
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,            ROTZ,ROT,Z
P_LN(THERMAL*FLOTRAN)
K_LN(lsdyna)
IDX_DOF solution    ,Temperature TEMP,TEMP,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,MagVectPoten  AX,A,X
K_LN(LSDYNA)
IDX_DOF solution    ,Acceleration  AX,A,X
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AY,A,Y
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AZ,A,Z
P_LN(THERMAL*ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,Elec poten  VOLT,VOLT,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,EMF drop     EMF,EMF,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,EMF drop     EMF,EMF,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,Current     CURR,CURR,
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN*FULL_ANS*LSDYNA)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
K_LN(lsdyna)
IDX_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,1st principal S1,S,1
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS*LSDYNA)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS*LSDYNA)
IDX_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TGSUM,TG,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Mag source   HSX,HS,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             HSY,HS,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             HSZ,HS,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,           EFSUM,EF,SUM
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
P_LN(FULL_ANS*LSDYNA))
IDX_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
P_LN(LINPLUS*LSDYNA))
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS*LSDYNA))
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS*LSDYNA))
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS*LSDYNA))
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS*LSDYNA))
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS*LSDYNA))
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS*LSDYNA))
IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
IDX_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
 Fld_5
  K_FL(CFD+lsdyna)
  Prm_Results data to be retrieved
  Typ_IDX
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(FLOTRAN)
IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
P_LN(FLOTRAN)
IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
P_LN(FLOTRAN)
IDX_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(FULL_ANS)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
IDX_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!
P_LN(FLOTRAN)
IDX_Other quantities,Density     DENS,DENS,
P_LN(FLOTRAN)
IDX_Other quantities,Viscosity   VISC,VISC,
P_LN(FLOTRAN)
IDX_Other quantities,Eff Viscos  EVIS,EVIS,
P_LN(FLOTRAN)
IDX_Other quantities,Eff Conduct ECON,ECON,
P_LN(FLOTRAN)
IDX_Other quantities,Total temp  TTOT,TTOT,
P_LN(FLOTRAN)
IDX_Other quantities,Strm func2D STRM,STRM,
P_LN(FLOTRAN)
IDX_Other quantities,PressurCoef PCOE,PCOE,
P_LN(FLOTRAN)
IDX_Other quantities,Mach number MACH,MACH,
P_LN(FLOTRAN)
IDX_Other quantities,Total pres  PTOT,PTOT,
P_LN(FLOTRAN)
IDX_Other quantities,Heat flux   HFLU,HFLU,
P_LN(FLOTRAN)
IDX_Other quantities,Film coeff  HFLM,HFLM,
P_LN(FLOTRAN)
IDX_Other quantities,Turb law Y+ YPLU,YPLU,
P_LN(FLOTRAN)
IDX_Other quantities,Wall shear  TAUW,TAUW,
!
 Fld_8
  Prm_Fill array by looping on
  Typ_LIS_OPTIONB
  LIS_Node number     ,2
  LIS_Data Selection  ,4
:E END
:! 
:N Fnc_*VGET_rcon
:S    582,   150,   425
:T Cmd
:C )! Fnc_*VGET_rcon
:A Real constants
:H Hlp_C_*VGET
:D Get Real Constant Data into Array Parameter
Cmd_*VGET
 Fld_0
  Typ_Lab
  Prm_[*VGET],ParR,RCON,N   Get Real Constant Data into Array Parameter
 Fld_2
  Prm_Name of array parameter
  Typ_CHAR,32
 Fld_3
  Typ_Def_RCON
 Fld_4
  Prm_Real constant set number N
  Typ_INT
  Def_Blank
 Fld_5
  Typ_Def_CONST
 Fld_6
  Prm_Retrieve value of constant no.
  Typ_INT
  Def_1
 Fld_8
  Prm_Fill array by looping on
  Typ_LIS_OPTIONB
  LIS_RealConst set no,2
  LIS_Constant number ,4
:E END
:! 
:N Fnc_*VGET_tb
:S   1614,   140,  1467
:T Cmd
:C )! Fnc_*VGET_tb
:A Data tables
:H Hlp_C_*VGET
:D Get Data Table Info into Array Parameter
Cmd_*VGET
 Fld_0
  Typ_Lab
  Prm_[*VGET],ParR,TB,N   Get Data Table Info into Array Parameter
 Fld_2
  Prm_Name of array parameter
  Typ_CHAR,32
 Fld_4
  Prm_Material number N
  Typ_INT
  Def_1
 Fld_3
  Prm_Table from which to retrieve inf
  Typ_LIS
   P_LN(FULL_ANS)
  LIS_Bilin kinem BKIN,BKIN
   P_LN(FULL_ANS)
  LIS_Multi kinem MKIN,MKIN
   P_LN(FULL_ANS)
  LIS_Multi isotr MISO,MISO
   P_LN(FULL_ANS)
  LIS_Bilin isotr BISO,BISO
   P_LN(FULL_ANS)
  LIS_Anisotrop  ANISO,ANISO
   P_LN(FULL_ANS)
  LIS_Drucker-Pragr DP,DP
   P_LN(FULL_ANS)
  LIS_Anand plas ANAND,ANAND
   P_LN(FULL_ANS)
  LIS_Multi elas MELAS,MELAS
   P_LN(FULL_ANS)
  LIS_User define USER,USER
   P_LN(FULL_ANS)
  LIS_Creep      CREEP,CREEP
   P_LN(FULL_ANS)
  LIS_Swelling   SWELL,SWELL
   P_LN(LINPLUS)
  LIS_FailureCrit FAIL,FAIL
   P_LN(FULL_ANS)
  LIS_Hyperelast HYPER,HYPER
   P_LN(FULL_ANS)
  LIS_WaterMot'n WATER,WATER
   P_LN(FULL_ANS)
  LIS_Aniso elast ANEL,ANEL
   P_LN(FULL_ANS)
  LIS_Concrete   CONCR,CONCR
   P_LN(FULL_ANS)
  LIS_Pipe flow  PFLOW,PFLOW
   P_LN(FULL_ANS)
  LIS_Viscoelast EVISC,EVISC
   P_LN(ELECMAG)
  LIS_MagField data BH,BH
   P_LN(FULL_ANS)
  LIS_PiezoMatrix PIEZ,PIEZ
 Fld_5
  Typ_Def_TEMP
 Fld_6
  Prm_Temp at which to retrieve data
  Typ_REAL
 Fld_7
  Typ_Def_CONST
 Fld_8
  Prm_Retrieve value of constant no.
  Typ_INT
  Def_1
 Fld_8
  Prm_Fill array by looping on
  Typ_LIS_OPTIONB
  LIS_Material number ,2
  LIS_Temperature valu,4
  LIS_Constant number ,6
:E END
:! 
:N Fnc_*VGET_volu
:S    921,   136,   778
:T Cmd
:C )! Fnc_*VGET_volu
:A Volumes
:H Hlp_C_*VGET
:D Get Volume Data into Array Parameter
Cmd_*VGET
 Fld_0
  Typ_Lab
  Prm_[*VGET],ParR,VOLU,N   Get Volume Data into Array Parameter
 Fld_2
  Prm_Name of array parameter
  Typ_CHAR,32
 Fld_3
  Typ_Def_VOLU
 Fld_4
  Prm_Volume number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Volume data to be retrieved
  Typ_IDX
  IDX_Attributes      ,Material num MAT,"ATTR,MAT"
  IDX_Attributes      ,ElemTyp num TYPE,"ATTR,TYPE"
  IDX_Attributes      ,RealCon num REAL,"ATTR,REAL"
  IDX_Attributes      ,Elem CS num ESYS,"ATTR,ESYS"
  IDX_Attributes      ,No. of nods NNOD,"ATTR,NNOD"
  IDX_Attributes      ,No. of elem NELM,"ATTR,NELM"
  IDX_Geometry        ,Volume      VOLU,"VOLU"
  IDX_Select status   ,VSEL            ,"VSEL"
 Fld_8
  Prm_Fill array by looping on
  Typ_LIS_OPTIONB
  LIS_Volume number   ,2
  LIS_Data Selection  ,4
:E END
:! 
:N Fnc_*VITRP
:S    528,   142,   379
:T Cmd
:C )!  Fnc_*VITRP
:A Vector Interpolate
:D Array Parameter Vector Interpolation 
:H Hlp_C_*VITRP
Cmd_*VITRP
 Fld_0
  Typ_Lab
  Prm_[*VITRP]   ParR(i,j,k) = Func( ParT(), ParI(), ParJ(), ParK() ) 
 Fld_2
  Typ_CHAR,32
  Prm_ParR  Result array parameter
 Fld_3
  Typ_CHAR,32
  Prm_ParT  Table array parameter 
 Fld_4 
  Typ_CHAR,32
  Prm_ParI  I (row) index vector
 Fld_5
  Typ_CHAR,32
  Prm_ParJ  J (column) index vector
 Fld_6
  Typ_CHAR,32
  Prm_ParK  K (plane) index vector
:E End
:! 
:N Fnc_*VOPER
:S   1139,   138,   994
:T Cmd
:C )!  Fnc_*VOPER
:A Vector Operations
:D Array Parameter Vector Operations 
:H Hlp_C_*VOPER
Cmd_*VOPER
 Fld_0
  Typ_Lab
  Prm_[*VOPER]   ParR(i,j,k) = Par1(i,j,k) <Oper> Par2(i,j,k)
 Fld_2
  Typ_CHAR,32
  Prm_ParR   Result array parameter
 Fld_3
  Typ_CHAR,32
  Prm_Par1   1st input array parameter
 Fld_4
  Prm_Oper   Operation
  Typ_LIS_OPTIONB
   LIS_Add            +,ADD
   LIS_Subtract       -,SUB
   LIS_Multiply       *,MULT
   LIS_Divide         /,DIV
   LIS_Minimum of   MIN,MIN
   LIS_Maximum of   MAX,MAX
   LIS_Less than     LT,LT
   LIS_Less or =     LE,LE  
   LIS_Greater than  GT,GT
   LIS_Greater or =  GE,GE
   LIS_Not equal to  NE,NE
   LIS_Equal to      EQ,EQ
   LIS_1st derivative  ,DER1
   LIS_2nd derivative  ,DER2
   LIS_Single integral ,INT1
   LIS_Double integral ,INT2
   LIS_Dot Product    o,DOT
   LIS_Cross Product  X,CROSS
   LIS_Gather      GATH,GATH  
   LIS_Scatter     SCAT,SCAT
 Fld_5
  Typ_CHAR,32
  Prm_Par2   2nd input array parameter
 Fld_6
  Typ_REAL
  Prm_CON1   1st integration constant
 Fld_7
  Typ_REAL
  Prm_CON2   2nd integration constant
:E END
:! 
:N Fnc_*VPLOT
:S    763,   124,   631
:T Cmd
:C )! Fnc_*VPLOT
:H Hlp_C_*VPLOT
:A Array Parameters
:D Graph Array Parameters
Cmd_*VPLOT
 Fld_0
  Typ_Lab
  Prm_[*VPLOT]  Graph Array Parameters 
 Fld_2 
  Prm_ParX  X-axis array parameter
  Typ_CHAR
 Fld_3
  Prm_ParY  Y-axis array parameter
  Typ_CHAR
 Fld_0  
  Typ_Lab
  Prm_Additional ParY columns to be plotted
 Fld_4  
  Typ_INT
  Prm_Y2              2nd column no.
 Fld_5  
  Typ_INT
  Prm_Y3              3rd column no.
 Fld_6  
  Typ_INT
  Prm_Y4              4th column no.
 Fld_7  
  Typ_INT
  Prm_Y5              5th column no.
 Fld_8  
  Typ_INT
  Prm_Y6              6th column no.
 Fld_9  
  Typ_INT
  Prm_Y7              7th column no.
 Fld_10  
  Typ_INT
  Prm_Y8              8th column no.
:E End 
:! 
:N Fnc_*VPLO_choice
:S   1389,   252,  1132
:T Command
:C )! Fnc_*VPLO_choice
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,6
:C )*GET,_z(3),CPAR,103
:C )*GET,_z(6),CPAR,106
:C )/GO
:A Graph
:D Graph Mooney-Rivlin Hyperelastic Stress-Strain Curve
:H Hlp_C_*VPLOT
Inp_NoApply
Cmd_)/NOPR
Cmd_)!
Fld_0
 Typ_Lab
 Prm_[*VPLOT]  Stress-strain curve compared with experimental data
Fld_0
 Typ_Sep
Fld_2
 Prm_Stress at strains given by
 Typ_Lis_RADIOB
 Lis_Experimntal Data,0
 Lis_Specified Range ,1
Fld_0
 Typ_Sep
Cmd_)*CSET,10,11
Fld_0
 Typ_Lab
 Prm_Default parameters for experimental data
Fld_2
 Typ_CHAR
 Def_*CPAR(5)
 Prm_ Table with experimental strain
Fld_3
 Typ_CHAR
 Def_*CPAR(6)
 Prm_ Table with experimental stress
Cmd_)*SET,_zc12
Fld_2
 Typ_Def_
 Dlm_'
Fld_3
 Typ_CHAR
 Def_*CPAR(4)
 Prm_ Table with calculated stress
 Dlm_'
Fld_4
 Typ_Def_
 Dlm_
Cmd_)*CSET,103,103
Fld_2
 Prm_Type of hyperelastic test data
 Typ_Lis_OPTIONB
 Lis_Uniaxial      ,1
 Lis_Equibiaxial   ,2
 Lis_Shear (Planar),3
 Def_*PAR(_z(3))
Fld_0
 Typ_Sep
Cmd_)*CSET,13,13
Fld_0
 Typ_Lab
 Prm_Default parameters for specified range
Fld_2
 Typ_CHAR
 Def_*CPAR(7)
 Prm_ Table with strain data
Cmd_)*SET,_zc14
Fld_2
 Typ_Def_
 Dlm_'
Fld_3
 Typ_CHAR
 Def_*CPAR(8)
 Prm_ Table with stress data
 Dlm_'
Fld_4
 Typ_Def_
 Dlm_
Cmd_)/AXLAB,X,Strain
Cmd_)/AXLAB,Y,Stress
Cmd_)/GO
Cal_Fnc_VPLO_calc,2,eq,0,2
Cal_Fnc_VPLO_eval,2,eq,1,2
:END
:! 
:N Fnc_*VPUT
:S    386,   129,   250
:T Cmd
:C )!  Fnc_*VPUT
:A Put Array Data
:D Put Results Data into Database 
:H Hlp_C_*VPUT
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_[*VPUT]  Put Results Data From Array Parameter into Database
 Fld_2
  Prm_  Type of data
  Typ_LIS_RADIOB
  LIS_Nodal Results   ,0
  LIS_Element Table   ,1
Cal_Fnc_*VPUT_node,2,EQ,0
Cal_Fnc_*VPUT_etab,2,EQ,1
:E End
:! 
:N Fnc_*VPUT_etab
:S    620,   125,   488
:T Cmd
:C )! Fnc_*VPUT_etab
:D Put Element Table Data into Database
:H Hlp_C_*VPUT
Cmd_*VPUT
 Fld_0
  Typ_Lab
  Prm_[*VPUT],ParR,ELEM,N  Put Elem Table Data From Array Param into Database
 Fld_2
  Prm_Name of array parameter -
  Typ_CHAR,32,33
 Fld_0
  Typ_Lab
  Prm_- containing data to be put into database
 Fld_3
  Typ_Def_ELEM
 Fld_4
  Prm_Element number N
  Typ_INT
  Def_Blank
 Fld_5
  Typ_Def_ETAB
 Fld_6
  Prm_Element table item to be put
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_9
  Prm_Loop on
  Typ_LIS_OPTIONB
  LIS_Element number  ,2
  LIS_Elem table item ,4
:E END
:! 
:N Fnc_*VPUT_node
:S  12496,   125, 12364
:T Cmd
:C )! Fnc_*VPUT_node
:C )/GO
:D Put Nodal Data into Database
:H Hlp_C_*VPUT
Cmd_*VPUT
 Fld_0
  Typ_Lab
  Prm_[*VPUT],ParR,NODE,N  Put Nodal Data From Array Parameter into Database
 Fld_2
  Prm_Name of array parameter -
  Typ_CHAR,32,33
 Fld_0
  Typ_Lab
  Prm_- containing data to be put into database
 Fld_3
  Typ_Def_NODE
 Fld_4
  Prm_Node number N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_Data to be put 
  Typ_IDX
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,              UY,U,Y
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,            ROTZ,ROT,Z
P_LN(THERMAL*FLOTRAN)
K_LN(lsdyna)
IDX_DOF solution    ,Temperature TEMP,TEMP,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,MagVectPoten  AX,A,X
K_LN(LSDYNA)
IDX_DOF solution    ,Acceleration  AX,A,X
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AY,A,Y
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AZ,A,Z
P_LN(THERMAL*ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,Elec poten  VOLT,VOLT,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,EMF drop     EMF,EMF,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,Current     CURR,CURR,
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN*FULL_ANS*LSDYNA)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
K_LN(lsdyna)
IDX_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,1st principal S1,S,1
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS*LSDYNA)
IDX_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS*LSDYNA)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS*LSDYNA)
IDX_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS*LSDYNA)
IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TGSUM,TG,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,           EFSUM,EF,SUM
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
P_LN(FULL_ANS*LSDYNA)
IDX_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS*LSDYNA)
IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS*LSDYNA)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
 Fld_5
  K_FL(CFD)
  Prm_Data to be put 
  Typ_IDX
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(FLOTRAN)
IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
P_LN(FLOTRAN)
IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
P_LN(THERMAL*FLOTRAN)
IDX_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(FULL_ANS)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
IDX_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!
P_LN(FLOTRAN)
IDX_Other quantities,Density     DENS,DENS,
P_LN(FLOTRAN)
IDX_Other quantities,Viscosity   VISC,VISC,
P_LN(FLOTRAN)
IDX_Other quantities,Conductivit COND,COND,
P_LN(FLOTRAN)
IDX_Other quantities,Eff Viscos  EVIS,EVIS,
P_LN(FLOTRAN)
IDX_Other quantities,Eff Conduct ECON,ECON,
P_LN(FLOTRAN)
IDX_Other quantities,Total temp  TTOT,TTOT,
P_LN(FLOTRAN)
IDX_Other quantities,Strm func2D STRM,STRM,
P_LN(FLOTRAN)
IDX_Other quantities,PressurCoef PCOE,PCOE,
P_LN(FLOTRAN)
IDX_Other quantities,Mach number MACH,MACH,
P_LN(FLOTRAN)
IDX_Other quantities,Total pres  PTOT,PTOT,
P_LN(FLOTRAN)
IDX_Other quantities,Heat flux   HFLU,HFLU,
P_LN(FLOTRAN)
IDX_Other quantities,Film coeff  HFLM,HFLM,
P_LN(FLOTRAN)
IDX_Other quantities,Turb law Y+ YPLU,YPLU,
P_LN(FLOTRAN)
IDX_Other quantities,Wall shear  TAUW,TAUW,
!
!
 Fld_8
  Prm_Loop on
  Typ_LIS_OPTIONB
  LIS_Node number     ,2
  LIS_Data Selection  ,4
:E END
:! 
:N Fnc_*VREAD
:S    287,   137,   143
:T Cmd
:C )! Fnc_*VREAD
:A Read from File
:D Read Array Parameter Data from File
:H Hlp_UI_stvread
Cmd_)!
Fld_2
Prm_Type of Parameter 
Typ_Lis_RadioB
LIS_ Array  (*VREAD),1
LIS_ Table  (*TREAD),2
Cal_Fnc_*VREAD1,2,eq,1
Cal_Fnc_*VREAD2,2,eq,2
:E END
:! 
:N Fnc_*VREAD1
:S    969,   189,   773
:T Cmd
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),' '
:C )! Fnc_*VREAD
:A Read from File
:D Read Array Parameter Data from File
:H Hlp_C_*VREAD
! Exclude_from_paths
Cmd_*CREATE,ansuitmp
Fld_0
Typ_Lab
Prm_[*VREAD]  Read Array Parameter Data From File (format must be specified)
 Cmd_*VREAD
Fld_2
 Typ_CHAR,80,80
 Prm_ParR   Result array parameter
Fld_3
 Prm_File,ext   Read from file
  Typ_File
  Def_*PAR(_zc(1))
Fld_6
 Prm_Label Loop order
 Typ_LIS_OPTIONB
  LIS_IJK,IJK
  LIS_IKJ,IKJ
  LIS_JIK,JIK
  LIS_JKI,JKI
  LIS_KIJ,KIJ
  LIS_KJI,KJI
  Def_IJK
Fld_7
 Typ_INT
 Prm_n1 Number of rows    (IJK order)
Def_1
Fld_8
 Typ_INT
 Prm_n2 Number of columns (IJK order)
Def_1
Fld_9
 Typ_INT
 Prm_n3 Number of planes  (IJK order)
Def_1
Fld_10
 Prm_Nskip  Number of skipped lines
 Typ_Int
Cmd_!
Fld_1
Typ_CHAR,80,80
Prm_Enter format surrounded by ( )
! 
! Exclude_from_paths
Cmd_*END
! Exclude_from_paths
Cmd_/INPUT,ansuitmp
:E END
:! 
:N Fnc_*VREAD2
:S    412,   137,   268
:T Command
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),' '
:D Read from file
:H Hlp_C_*TREAD
Cmd_*TREAD
 Fld_0
 Typ_Lab
  Prm_[*TREAD]  Read Table Parameter From File 
 Fld_2
  Prm_ParP  Table Parameter Name
  Typ_LIS
  LIS_*READ,PATB
 Fld_3
  Prm_File,ext,dir Read from file
  Typ_File
  Def_*PAR(_zc(1)) 
 Fld_6
  Prm_Nskip  Number of skipped lines
  Typ_Int
:E END
:! 
:N Fnc_*VSCFUN
:S    755,   142,   605
:T Cmd
:C )!  Fnc_*VSCFUN
:A Vector-Scalar Func
:D Vector-Scalar Parameter Functions 
:H Hlp_C_*VSCFUN
Cmd_*VSCFUN
 Fld_0
  Typ_Lab
  Prm_[*VSCFUN]   ParR = Func( Par1(i,j,k) )
 Fld_2
  Typ_CHAR,32
  Prm_ParR  Result scalar parameter
 Fld_4
  Typ_CHAR,32
  Prm_Par1  Input array parameter
 Fld_3
  Prm_Func  Function
  Typ_LIS_OPTIONB
   LIS_Maximum      MAX,MAX
   LIS_Minimum      MIN,MIN
   LIS_Max val loc LMAX,LMAX
   LIS_Min val loc LMIN,LMIN
   LIS_1st val loc FIRS,FIRST
   LIS_LastVal loc LAST,LAST
   LIS_Summation    SUM,SUM
   LIS_Median      MEDI,MEDI
   LIS_Mean        MEAN,MEAN
   LIS_Variance    VARI,VARI
   LIS_Std deviatn STDV,STDV
   LIS_RMS value    RMS,RMS
   LIS_Number       NUM,NUM
:E End 
:! 
:N Fnc_*VWRITE
:S   1165,   160,   998
:T Cmd
:C )! Fnc_*VWRITE
:C )/NOPR
:C ) _z1='()'
:C )/GO
:A Write to File
:D Write Parameters to File
:H Hlp_UI_stvwrite
Fmt_H
! Exclude_from_paths
Cmd_*CREATE,ansuitmp
!
! Exclude_from_paths
Cmd_*CFOPEN
Fld_2
Prm_[*CFOPEN]  Name of file
Typ_FILE_INLINE
Fld_0
Typ_Lab
Prm_[*VWRITE]  Write Parameters To File (format must be specified)
!
Cmd_*VWRITE
Fld_2
Prm_Par1       1st Parameter name
Typ_CHAR,32,32
!
Fld_3
Prm_Par2       2nd Parameter name
Typ_CHAR,32,32
!
Fld_4
Prm_Par3       3rd Parameter name
Typ_CHAR,32,32
!
Fld_5
Prm_Par4       4th Parameter name
Typ_CHAR,32,32
!
Fld_6
Prm_Par5       5th Parameter name
Typ_CHAR,32,32
!
Fld_7
Prm_Par6       6th Parameter name
Typ_CHAR,32,32
!
Fld_8
Prm_Par7       7th Parameter name
Typ_CHAR,32,32
!
Fld_9
Prm_Par8       8th Parameter name
Typ_CHAR,32,32
!
Fld_10
Prm_Par9       9th Parameter name
Typ_CHAR,32,32
!
Fld_11
Prm_Par10     10th Parameter name
Typ_CHAR,32,32
!
Fld_0
Typ_Sep
! 
Cmd_!
Fld_1
Typ_CHAR,80,80
Prm_Enter format between the ( )
Def_*PAR(_z1)
! Exclude_from_paths
Cmd_*CFCLOS
! 
! Exclude_from_paths
Cmd_*END
! Exclude_from_paths
Cmd_/INPUT,ansuitmp
:E END
:! 
:N Fnc_*V_settings
:S   1469,   156,  1306
:T Cmd
:C )!  Fnc_*V_settings
:A Operation Settings
:D Settings for Array Parameters Operations
:H Hlp_UI_stvset
Cmd_*VCUM
 Fld_2
  Prm_[*VCUM]  Results will be
  Typ_LIS_OPTIONB
   LIS_Non-cumulative  ,0
   LIS_Cumulative      ,1
 Fld_0
  Typ_Sep
Cmd_*VABS
 Fld_0
  Typ_Lab
  Prm_[*VABS]  Use absolute values for
 Fld_2
  Prm_          Result parameter  ParR
  Typ_LOGI,No              ,Yes
 Fld_3
  Prm_          First parameter   Par1
  Typ_LOGI,No              ,Yes
 Fld_4
  Prm_          Second parameter  Par2
  Typ_LOGI,No              ,Yes
 Fld_5 
  Prm_          Third parameter   Par3 
  Typ_LOGI,No              ,Yes
 Fld_0
  Typ_Sep
Cmd_*VFACT
 Fld_0
  Typ_Lab
  Prm_[*VFACT] Scale factor for
 Fld_2
  Typ_REAL
  Prm_          Result parameter  ParR 
  Def_1.0
 Fld_3
  Typ_REAL
  Prm_          First parameter   Par1 
  Def_1.0
 Fld_4
  Typ_REAL
  Prm_          Second parameter  Par2
  Def_1.0
 Fld_5
  Typ_REAL
  Prm_          Third parameter   Par3
  Def_1.0
 Fld_0
  Typ_Sep
Cmd_*VLEN
 Fld_0
  Typ_Lab
  Prm_[*VLEN]  Number of rows to be included in operations
 Fld_2
  Prm_          No. of rows, row incr
  Typ_INT2
  Def_Blank,1
 Fld_0
  Typ_Sep
Cmd_*VCOL
 Fld_0
  Typ_Lab
  Prm_[*VCOL]  Number of columns to be included in matrix operations -
 Fld_2
  Prm_          - for Par1, Par2
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Typ_Sep
Cmd_*VMASK
 Fld_2
  Typ_CHAR,32
  Prm_[*VMASK]  Vector mask parameter
:E End
:! 
:N Fnc_/CLEAR
:S    443,   160,   276
:T Cmd
:A Clear & Start New
:C )! Fnc_/CLEAR
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,10,1,2
:C )_z9 = '/CLEAR_2'
:C )/GO
K_LN(pr_sgui)
Inp_P
K_LN(PR_SGUI)
Inp_NoApply
Cmd_)!
 Fld_2
  K_FL(PR_SGUI)
  Typ_Lab
  Prm_Use the "New Model" button in the Mechanical Toolbar to clear the model 
K_LN(begin&pr_sgui)
Cal_Fnc_CHK_ROUT
K_LN(BEGIN&pr_sgui)
Cal_Fnc_/CLEAR_2
K_LN(begin&pr_sgui)
Cal_Fnc_/CLEAR_2
:E END
:! 
:N Fnc_/CLEAR_2
:S    847,   336,   504
:T Cmd
:C )! Fnc_/CLEAR_2
:C )/NOPR
:C )*DEL,_z1
:C )*DEL,_z2
:C )*DEL,_z3
:C )*DEL,_z4
:C )*DEL,_z5
:C )*DEL,_z6
:C )_z1 = _zc(1,1,2)
:C )_z2 = _zc(2,1,2)
:C )_z3 = _zc(3,1,2)
:C )_z4 = _zc(4,1,2)
:C )_z5 = _zc(5,1,2)
:C )_z6 = _zc(6,1,2)
:C )/GO
:D Clear Database and Start New
:H Hlp_C_/CLEAR
Inp_NoApply
! Exclude_from_paths
Cmd_FINISH
 K_CM(begin)
 Fld_0
  Typ_Lab
  Prm_                      *** WARNING ***
 Fld_0
  Typ_Lab
  Prm_Clearing the database requires that files currently open be closed,
 Fld_0
  Typ_Lab
  Prm_continuing will exit %_z1%%_z2%%_z3%%_z4%%_z5%%_z6%
 Fld_0
  Typ_Sep
Cmd_/CLEAR
 Fld_0
!
 Fld_0
  Typ_Lab
  Prm_[/CLEAR]  Clear database and start new!
 Fld_2
  Prm_Read start.ans after clear?
  Typ_Lis_RadioB
   Lis_Read file       ,START
   Lis_Do not read file,NOSTART
:E END
:! 
:N Fnc_/COLOR_p
:S    548,   138,   403
:T Cmd
:C )! Fnc_/COLOR_p
:C )/GO
:A Picked Entity Colors
:D Picked Entity Colors
:H Hlp_C_/COLOR
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_Def_'
  Dlm_~
 Fld_3
  Prm_Clab  User-specified color
  Typ_Color
  Dlm_~
 Fld_4
  Typ_Def_'
Cmd_)!
 Fld_2
  Prm_Lab   Apply color to
  Typ_LIS_OPTIONB
  LIS_Elements        ,1
  LIS_Lines           ,2
  LIS_Areas           ,3
  LIS_Volumes         ,4
Cmd_)/GOPR
!
Cal_Fnc_/ColE_p,2,EQ,1,3
Cal_Fnc_/ColL_p,2,EQ,2,3
Cal_Fnc_/ColA_p,2,EQ,3,3
Cal_Fnc_/ColV_p,2,EQ,4,3
:E END
:! 
:N Fnc_/CWD
:S    563,   410,   146
:T Cmd
:A Change Directory
:D Change Directory
:C )! Fnc_/CWD
:C )/NOPR
:C )*GET,_z1,ACTIVE,,CWD,,START,1
:C )*GET,_z2,ACTIVE,,CWD,,START,9
:C )*GET,_z3,ACTIVE,,CWD,,START,17
:C )*GET,_z4,ACTIVE,,CWD,,START,25
:C )*GET,_z5,ACTIVE,,CWD,,START,33
:C )*GET,_z6,ACTIVE,,CWD,,START,41
:C )*GET,_z7,ACTIVE,,CWD,,START,49
:C )*GET,_z8,ACTIVE,,CWD,,START,57
:C )/GO
:H Hlp_C_CWD_sl
Fmt_H
Inp_NoApply
Cmd_/CWD
 Fld_2
  Prm_[/CWD]  Enter new directory
  Typ_CHAR,64,64
  Def_*STR(%#_z1%%#_z2%%#_z3%%#_z4%%#_z5%%#_z6%%#_z7%%#_z8%)
:E END
:! 
:N Fnc_/CYCEXPAND
:S    727,   189,   531
:T Cmd
:C )!Fnc_/CYCEXPAND
:A Cyc Expansion
:D Cyclic Symmetry Analysis Expansion
:K (lsdyna)
:K #(cycgen)
:P (FULL_ANS*PROFS)
:H Hlp_C_/CYCEXPAND
Inp_NoApply
 Fld_0
  Prm_[/CYCEXPAND] Cyclic Analysis Expansion
  Typ_Lab
 Cmd_)/NOPR
 Cmd_)*CSET,1,2
 Fld_2
  Typ_def_1
 Fld_3
  Prm_OPTION  Expansion option
  Typ_LIS_OptionB
  LIS_On          ,ON
  LIS_Default     ,DEFAULT
  LIS_Off         ,OFF
  LIS_Status      ,STATUS
  LIS_Amount      ,5
  LIS_What        ,6
  LIS_Edge        ,7
  K_LN(prep7)
  LIS_Phase angle ,8
  Def_1
Cmd_)/GO
Cal_Fnc_CYCEXPAND_05,3,eq,5,2
Cal_Fnc_CYCEXPAND_06,3,eq,6,2
Cal_Fnc_CYCEXPAND_07,3,eq,7,2
Cal_Fnc_CYCEXPAND_08,3,eq,8,2
Cal_Fnc_CYCEXPAND_01
:E END
:! 
:N Fnc_/ColA_p
:S    289,   114,   168
:T Cmd_P
:C )! Fnc_/ColA_p
:A Select areas
:D Select areas
:H Hlp_C_/COLOR
Inp_P
Cmd_/COLOR
 Fld_2
  Typ_DEF_AREA
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
Prm_[/COLOR], Pick or enter areas for /color change
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  Sel_S
:E END
:! 
:N Fnc_/ColE_p
:S    298,   120,   171
:T Cmd_P
:C )! Fnc_/ColE_p
:A Select elements
:D Select elements
:H Hlp_C_/COLOR
Inp_P
Cmd_/COLOR
 Fld_2
  Typ_DEF_ELEM
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
Prm_[/COLOR], Pick or enter elements for /color change
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  Sel_S
:E END
:! 
:N Fnc_/ColL_p
:S    289,   114,   168
:T Cmd_P
:C )! Fnc_/ColL_p
:A Select lines
:D Select lines
:H Hlp_C_/COLOR
Inp_P
Cmd_/COLOR
 Fld_2
  Typ_DEF_LINE
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
Prm_[/COLOR], Pick or enter lines for /color change
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  Sel_S
:E END
:! 
:N Fnc_/ColV_p
:S    295,   118,   170
:T Cmd_P
:C )! Fnc_/ColV_p
:A Select volumes
:D Select volumes
:H Hlp_C_/COLOR
Inp_P
Cmd_/COLOR
 Fld_2
  Typ_DEF_VOLU
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
Prm_[/COLOR], Pick or enter volumes for /color change
  Typ_VOLU
  Min_1
  Cnt_s
  PCN_1
  Sel_S
:E END
:! 
:N Fnc_/EXIT
:S    178,    93,    78
:T Cmd
:A Exit
:D Exit
:C )! Fnc_/EXIT
:H Hlp_UI_slexit
Inp_P
Cmd_)!
P_LN(aistarwb)
Cal_Fnc_/EXIT_ANS
P_LN(AISTARWB)
Cal_Fnc_/EXIT_WB
:E END
:! 
:N Fnc_/EXIT_ANS
:S    532,   227,   298
:T Cmd
:A Exit
:D Exit
:C )! Fnc_/EXIT_ANS
:C )/NOPR
:C )~eui,'ans_greygui 0 1'
:C )~eui,'ans_greygui 1 1'
:C )~eui,'ans_greygui 3 1'
:C )~eui,'ans_greygui 4 1'
:C )/GO
:H Hlp_UI_slexit
Fmt_H
Inp_NoApply
! Exclude_from_paths
Cmd_FINISH
Cmd_)/NOPR
Cmd_)*CREATE,ansuitmp
Cmd_)*END
Cmd_)/DELETE,ansuitmp
Cmd_)/GO
Cmd_/EXIT
 Fld_2
Prm_ - Exit from Mechanical APDL -
  Typ_LIS_radiob
LIS_Save Geom+Loads ,MODEL
LIS_Save Geo+Ld+Solu,SOLU
LIS_Save Everything ,ALL
LIS_Quit - No Save! ,NOSAV
:E END
:! 
:N Fnc_/EXIT_WB
:S    291,    91,   193
:T Cmd
:A Exit
:C )! Fnc_/EXIT_WB
:H Hlp_UI_slexit
Inp_P
! Exclude_from_paths
Cmd_FINISH
Cmd_)/NOPR
Cmd_)*CREATE,ansuitmp
Cmd_)*END
Cmd_)/DELETE,ansuitmp
Cmd_)/GO
Cmd_)~eui
 Fld_2
   Typ_Def_'::AnsysWBGUI::exitANSYS
   Dlm_ 
 Fld_3
  Typ_Def_'
:E END
:! 
:N Fnc_/EXPAND1
:S    490,   140,   343
:T Cmd
:D Periodic/Cyclic Symmetry Expansion
:A Periodic/Cyclic Symmetry Expansion
:H Hlp_C_/EXPAND
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_[/EXPAND] Expansion of Periodic/Cyclic Symmetry
 Fld_2
  Prm_Select type of cyclic symmetry
  Typ_Lis_RadioB
  Lis_1/4 Dihedral Sym, 2
  Lis_1/8 Dihedral Sym, 3
  Lis_Reflect about XY, 4
  Lis_Reflect about YZ, 5
  Lis_Reflect about XZ, 6
  Lis_No Expansion,1
  Def_2
Cmd_)/GO
Cal_Fnc_/EXPAND1A
:E END
:! 
:N Fnc_/EXPAND1A
:S    692,   410,   275
:T Cmd_N
:C )/NOPR
:C )KEYW,key1,0
:C )KEYW,key2,0
:C )KEYW,key3,0
:C )KEYW,key4,0
:C )KEYW,key5,0
:C )KEYW,key6,0
:C )*IF,_z1,EQ,1,THEN
:C )  KEYW,key1,1
:C )*ELSEIF,_z1,EQ,2
:C )  KEYW,key2,1
:C )*ELSEIF,_z1,EQ,3
:C )  KEYW,key3,1
:C )*ELSEIF,_z1,EQ,4
:C )  KEYW,key4,1
:C )*ELSEIF,_z1,EQ,5
:C )  KEYW,key5,1
:C )*ELSEIF,_z1,EQ,6
:C )  KEYW,key6,1
:C )*ENDIF
:C )/GO
Inp_P
Cmd_/EXPAND,
K_CM(KEY1)
Cmd_/EXPAND,4,POLAR,HALF,,90
K_CM(KEY2)
Cmd_/EXPAND,8,POLAR,HALF,,45
K_CM(KEY3)
Cmd_/EXPAND,2,RECT,HALF,,,0.00001
K_CM(KEY4)
Cmd_/EXPAND,2,RECT,HALF,0.00001
K_CM(KEY5)
Cmd_/EXPAND,2,RECT,HALF,,0.00001
K_CM(KEY6)
! Exclude_from_paths
Cmd_/REPLOT
:E END
:! 
:N Fnc_/EXPAND_axi
:S    493,    97,   389
:T Cmd
:D 2D Axi-Symmetric Expansion
:H Hlp_C_/EXPAND
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_[/EXPAND] 2D Axi-Symmetric Expansion
 Fld_2
  Prm_Select expansion amount
  Typ_Lis_RadioB
  Lis_1/4  expansion,2
  Lis_1/2  expansion,3
  Lis_3/4  expansion,4
  Lis_Full expansion,5
  Lis_No Expansion,1
  Def_5
Cmd_)*SET,_z2
 Fld_0
  Typ_Sep
 Fld_2
  Typ_LOGI,No,Yes
  Prm_Also reflect about x-z plane
  Def_0
Cmd_)/GO
Cal_Fnc_/EXPAND_axi1
:E END
:! 
:N Fnc_/EXPAND_axi1
:S   1091,   645,   439
:T Cmd_N
:C )/NOPR
:C )KEYW,key1,0
:C )KEYW,key2,0
:C )KEYW,key3,0
:C )KEYW,key4,0
:C )KEYW,key5,0
:C )KEYW,key6,0
:C )KEYW,key7,0
:C )KEYW,key8,0
:C )KEYW,key9,0
:C )*IF,_z1,EQ,1,THEN
:C )  KEYW,key1,1
:C )*ENDIF
:C )*IF,_z2,EQ,0,THEN
:C )*IF,_z1,EQ,2,THEN
:C )  KEYW,key2,1
:C )*ELSEIF,_z1,EQ,3
:C )  KEYW,key3,1
:C )*ELSEIF,_z1,EQ,4
:C )  KEYW,key4,1
:C )*ELSEIF,_z1,EQ,5
:C )  KEYW,key5,1
:C )*ENDIF
:C )*ELSE
:C )*IF,_z1,EQ,2,THEN
:C )  KEYW,key6,1
:C )*ELSEIF,_z1,EQ,3
:C )  KEYW,key7,1
:C )*ELSEIF,_z1,EQ,4
:C )  KEYW,key8,1
:C )*ELSEIF,_z1,EQ,5
:C )  KEYW,key9,1
:C )*ENDIF
:C )*ENDIF
:C )/GO
Inp_P
Cmd_/EXPAND,
K_CM(KEY1)
Cmd_/EXPAND, 9,AXIS,,,10
K_CM(KEY2)
Cmd_/EXPAND,18,AXIS,,,10
K_CM(KEY3)
Cmd_/EXPAND,27,AXIS,,,10
K_CM(KEY4)
Cmd_/EXPAND,36,AXIS,,,10
K_CM(KEY5)
Cmd_/EXPAND, 9,AXIS,,,10,,2,RECT,HALF,,0.00001
K_CM(KEY6)
Cmd_/EXPAND,18,AXIS,,,10,,2,RECT,HALF,,0.00001
K_CM(KEY7)
Cmd_/EXPAND,27,AXIS,,,10,,2,RECT,HALF,,0.00001
K_CM(KEY8)
Cmd_/EXPAND,36,AXIS,,,10,,2,RECT,HALF,,0.00001
K_CM(KEY9)
! Exclude_from_paths
Cmd_/REPLOT
:E END
:! 
:N Fnc_/EXPAND_modal
:S    813,   137,   669
:T Cmd
:D Modal Cyclic Symmetry Results Expansion
:A Modal Cyclic Symmetry
:H Hlp_C_/EXPAND
Cmd_/EXPAND
 Fld_0
  Typ_Lab
  Prm_[/EXPAND] Expansion of Modal Cyclic Symmetry Results
 Fld_2
  Prm_NREPEAT   No. of repetitions
  Typ_Int
  Def_*GET(COMMON,,GRCOM,,INT,50)
 Fld_0
  Typ_Lab
  Prm_          (Use zero or blank to suppress expansion)
 Fld_3
  Typ_Def_MODAL
 Fld_4
  Prm_HIDX    Harmonic index
  Typ_Int
 Fld_0
  Typ_Lab
  Prm_          (Usually not required)
 Fld_5
  Prm_ICSYS   Coordinate system ID
  Typ_Int
 Fld_0
  Typ_Lab
  Prm_          (Usually not required)
 Fld_6
  Prm_SCTANG   Sector angle
  Typ_Real
 Fld_0
  Typ_Lab
  Prm_          (Usually not required)
 Fld_8
  Prm_PHASE   Phase angle
  Typ_Real
  Def_0
! Exclude_from_paths
Cmd_/REPLOT
:E END
:! 
:N Fnc_/EXPAND_user
:S   1968,   114,  1847
:T Cmd
:D Expansion by values
:A Expansion by values
:H Hlp_C_/EXPAND
Cmd_/EXPAND
 Fld_0
  Typ_Lab
  Prm_[/EXPAND] 1st Expansion of Symmetry
 Fld_2
  Prm_NREPEAT   No. of repetitions
  Typ_Int
 Fld_0
  Typ_Lab
  Prm_          (Use zero or blank to suppress expansion)
 Fld_3
  Prm_TYPE      Type of expansion
  Typ_Lis_OptionB
  Lis_Cartesian,RECT
  Lis_Polar,POLAR
  Lis_Modal,MODAL
  Lis_Axi-Symmetric,AXIS
  Lis_Local Cartesian,LRECT
  Lis_Local Polar,LPOLAR
 Fld_4
  Prm_PATTERN   Repeat Pattern
  Typ_Lis_OptionB
  Lis_Normal Repeat ,FULL
  Lis_Alternate Symm,HALF
 Fld_5
  Prm_DX,DY,DZ  Increments
  Typ_REAL3
 Fld_0
  Typ_Lab
  Prm_     (Small number (.00001) is required for continuous expansion)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[/EXPAND] 2nd Expansion of Symmetry
 Fld_8
  Prm_NREPEAT   No. of repetitions
  Typ_Int
 Fld_0
  Typ_Lab
  Prm_          (Use zero or blank to suppress expansion)
 Fld_9
  Prm_TYPE      Type of expansion
  Typ_Lis_OptionB
  Lis_Cartesian,RECT
  Lis_Polar,POLAR
  Lis_Local Cartesian,LRECT
  Lis_Local Polar,LPOLAR
 Fld_10
  Prm_PATTERN   Repeat Pattern
  Typ_Lis_OptionB
  Lis_Normal Repeat ,FULL
  Lis_Alternate Symm,HALF
 Fld_11
  Prm_DX,DY,DZ  Increments
  Typ_REAL3
 Fld_0
  Typ_Lab
  Prm_     (Small number (.00001) is required for continuous expansion)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[/EXPAND] 3rd Expansion of Symmetry
 Fld_14
  Prm_NREPEAT   No. of repetitions
  Typ_Int
 Fld_0
  Typ_Lab
  Prm_          (Use zero or blank to suppress expansion)
 Fld_15
  Prm_TYPE      Type of expansion
  Typ_Lis_OptionB
  Lis_Cartesian,RECT
  Lis_Polar,POLAR
  Lis_Local Cartesian,LRECT
  Lis_Local Polar,LPOLAR
 Fld_16
  Prm_PATTERN   Repeat Pattern
  Typ_Lis_OptionB
  Lis_Normal Repeat ,FULL
  Lis_Alternate Symm,HALF
 Fld_17
  Prm_DX,DY,DZ  Increments
  Typ_REAL3
 Fld_0
  Typ_Lab
  Prm_     (Small number (.00001) is required for continuous expansion)
Cmd_/REPLOT
:E END
:! 
:N Fnc_/FILNAM
:S    285,   177,   100
:T Cmd
:A Change Jobname
:D Change Jobname
:C )! Fnc_/FILNAM
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,10,1,2
:C )_z9 = '/FILNAM2'
:C )/GO
Inp_P
Cmd_)!
K_LN(begin)
Cal_Fnc_CHK_ROUT
K_LN(BEGIN)
Cal_Fnc_/FILNAM2
K_LN(begin)
Cal_Fnc_ExitRout
:E END 
:! 
:N Fnc_/FILNAM2
:S    564,   315,   242
:T Cmd
:C )! Fnc_/FILNAM2
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,4
:C )*GET,_zc(1),ACTIVE,,JOBNAM,,START,1
:C )*GET,_zc(2),ACTIVE,,JOBNAM,,START,9
:C )*GET,_zc(3),ACTIVE,,JOBNAM,,START,17
:C )*GET,_zc(4),ACTIVE,,JOBNAM,,START,25
:C )/GO
:D Change Jobname
:H Hlp_C_/FILNAME
Inp_NoApply
Fmt_H
! Exclude_from_paths
Cmd_FINISH
K_CM(begin)
Cmd_/FILNAME
 Fld_2
  Prm_[/FILNAM] Enter new jobname
  Typ_CHAR,32,32
  Def_*STR(%_zc(1)%%_zc(2)%%_zc(3)%%_zc(4)%)
 Fld_3
  Prm_        New log and error files?
  Typ_LOGI,No,Yes
:E END
:! 
:N Fnc_/GRAPHICS
:S    434,   250,   177
:T Cmd
:C )! Fnc_/GRAPHICS
:C )/NOPR
:C )*GET,_z1,COMMON,,D3COM,,INT,133
:C )*IF,_z1,EQ,1,THEN
:C ) _z1='POWER'
:C )*ELSE
:C ) _z1='FULL'
:C )*ENDIF
:C )/GO
:D PowerGraphics Display Setting
:H Hlp_C_/GRAPHICS
Inp_NoApply
Cmd_/GRAPHICS
 Fld_2
  Prm_[/GRAPHICS]        PowerGraphics
  Typ_Lis_RadioB
   Lis_OFF             ,FULL
   Lis_ON              ,POWER
   Def_*PAR(_z1)
Cal_REFRESH
:E END
:! 
:N Fnc_/GST
:S    271,   138,   126
:T Command
:C )! Fnc_/GST
:A Grph Solu Track
:D Graphical Solution Tracking
:K (lsdyna)
:H Hlp_C_/GST
Inp_NoApply
Cmd_/GST
 Fld_0
  Typ_Lab
  Prm_[/GST] Graphical Solution Tracking
 Fld_2
  Prm_Lab    Tracking
  Typ_LOGI,Off,On
:E END
:! 
:N Fnc_/MPLIB
:S    125,    65,    53
:T Command
:A Library Path
Inp_P
Cmd_)~eui,'euidl::MaterialLibraryPath::create'
:E END
:! 
:N Fnc_/MPLIB_STATUS
:S    193,   164,    22
:T Cmd_N
:C )! Fnc_/MPLIB_STATUS
:A Lib Path Status
:D Report Material Library Path Status
:K (lsdyna)
:H Hlp_C_/MPLIB
Inp_P
Cmd_/MPLIB,STAT
:E END
:! 
:N Fnc_/PSEARCH
:S    350,   139,   204
:T Cmd
:C )!  Fnc_/PSEARCH
:A Macro Search Path
:D Macro Search Path
:H Hlp_C_/PSEARCH
:K #(BEGIN)
Cmd_/PSEARCH
 Fld_0
  Typ_Lab
  Prm_[/PSEARCH]  Search path for "Unknown Command" Macros
 Fld_2
  Typ_CHAR,32
  Prm_  Directory to be searched -
 Fld_0
  Typ_Lab
  Prm_  - in place of user home directory
:E End
:! 
:N Fnc_/TITLE
:S    618,   459,   152
:T Cmd
:A Change Title
:D Change Title
:C )! Fnc_/TITLE
:C )/NOPR
:C )*GET,_z1,ACTIVE,,TITLE,,START,1
:C )*GET,_z2,ACTIVE,,TITLE,,START,9
:C )*GET,_z3,ACTIVE,,TITLE,,START,17
:C )*GET,_z4,ACTIVE,,TITLE,,START,25
:C )*GET,_z5,ACTIVE,,TITLE,,START,33
:C )*GET,_z6,ACTIVE,,TITLE,,START,41
:C )*GET,_z7,ACTIVE,,TITLE,,START,49
:C )*GET,_z8,ACTIVE,,TITLE,,START,57
:C )*GET,_z9,ACTIVE,,TITLE,,START,65
:C )/GO
:H Hlp_C_/TITLE
Fmt_H
Inp_NoApply
Cmd_/TITLE
 Fld_2
  Prm_[/TITLE]  Enter new title
  Typ_CHAR,72,72
  Def_*STR(%#_z1%%#_z2%%#_z3%%#_z4%%#_z5%%#_z6%%#_z7%%#_z8%%#_z9%)
:E END
:! 
:N Fnc_/TRLCY_p
:S    421,    96,   318
:T Cmd
:C )! Fnc_/TRLCY
:D Translucency
:H Hlp_C_/TRLCY
Inp_NoApply
Cmd_)/NOPR
Cmd_)*set,_z1
 Fld_2
  Prm_TLEVEL  Translucency level (0-1)
  Typ_Real
  Def_0.0
Cmd_)!
 Fld_2
  Prm_Lab     Apply translucency to
  Typ_LIS_OPTIONB
  LIS_Elements        ,1
  LIS_Areas           ,2
  LIS_Volumes         ,3
!
Cal_Fnc_/TrnE_p,2,EQ,1
Cal_Fnc_/TrnA_p,2,EQ,2
Cal_Fnc_/TrnV_p,2,EQ,3
:E END
:! 
:N Fnc_/TXTRE2
:S   1167,    80,  10800
:T Command
:D Texturing
:H Hlp_C_/TXTRE
Cmd_/TXTRE
 Fld_0
  Typ_Lab
  Prm_[/TXTRE]  Texturing
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Prm_NUM   Type of texturing
  Typ_LIS_OPTIONB
   LIS_Aluminum        ,1
   LIS_Aluminum brushed,2
   LIS_Steel with bumps,3
   LIS_Steel embossed  ,4
   LIS_Steel pattern   ,6
   LIS_Steel riveted   ,7
   LIS_Steel scratched ,8
   LIS_Steel etched    ,11
   LIS_Iron            ,5
   LIS_Iron - grainy   ,13
   LIS_Gold            ,31
   LIS_Brass           ,32
   LIS_Silver          ,33
   LIS_Tin             ,9
   LIS_Metal           ,10
   LIS_Metal - hot     ,12
   LIS_Metal - rusty   ,14
   LIS_Brick           ,15
   LIS_Block           ,16
   LIS_Wood            ,17
   LIS_Wood - light    ,18
   LIS_Wood - walnut   ,19
   LIS_Plastic - red   ,37
   LIS_Plastic - green ,39
   LIS_Plastic - blue  ,36
   LIS_Plastic - ivory ,35
   LIS_Plastic - yellow,38
   LIS_Plastic - brown ,40
   LIS_Plastic - black ,34
   LIS_Plastic hard red,22
   LIS_Plast hard blue ,20
   LIS_Plast hard Lblue,21
   LIS_No Texture      ,0
 Fld_4
  Typ_Def_*PAR(_z2)
Cmd_/COM
 Fld_1
  Typ_Def_*PAR(_z3)
:E END
:! 
:N Fnc_/TXTRE_a
:S    284,   146,   131
:T Cmd
:C )! Fnc_/TXTRE_a
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,1
:C )/GO
:A Texturing  (3D)
:H Hlp_C_/TXTRE
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
  Typ_Def_*GET(ACTIVE,,KEYWORD,,X3D)
Cal_Fnc_/TXTRE_err,2,EQ,0,2
Cal_Fnc_/TXTRE_a2,2,EQ,1,2
:E END
:! 
:N Fnc_/TXTRE_a2
:S    188,   152,    290
:T Command
:C )/NOPR
:C )_z1='AREA'
:C )_z2='ALL'
:C )_z3='APLOT'
:C )/GO
:A Hidden
:D Texturing on All Areas
Inp_P
Cmd_)!
Cal_Fnc_/TXTRE2
:E END
:! 
:N Fnc_/TXTRE_a2_of
:S    120,    81,    320
:T Command
:D No Texturing on Areas
Inp_P
Cmd_/TXTRE,AREA
Cmd_APLOT
:E END
:! 
:N Fnc_/TXTRE_a2_p
:S    340,   191,   1420
:T Cmd_P
:C )/NOPR
:C )_z1='AREA'
:C )_z2='P51X'
:C )_z3='APLOT'
:C )/GO
:A Texturing on Picked Areas
:D Texturing on Picked Areas
:H Hlp_C_/TXTRE
Inp_P
Cmd_)!
 Fld_4
  Prm_[/TXTRE,AREA]  Pick or enter areas for texturing
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
  Sel_S
Cal_Fnc_/TXTRE2
:E END
:! 
:N Fnc_/TXTRE_a_off
:S    279,   138,   134
:T Cmd
:C )! Fnc_/TXTRE_a_off
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,1
:C )/GO
:A Texturing  (3D)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
  Typ_Def_*GET(ACTIVE,,KEYWORD,,X3D)
Cal_Fnc_/TXTRE_err,2,EQ,0,2
Cal_Fnc_/TXTRE_a2_of,2,EQ,1,2
:E END
:! 
:N Fnc_/TXTRE_a_p
:S    290,   150,   133
:T Cmd
:C )! Fnc_/TXTRE_a_p
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,1
:C )/GO
:A Texturing  (3D)
:H Hlp_C_/TXTRE
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
  Typ_Def_*GET(ACTIVE,,KEYWORD,,X3D)
Cal_Fnc_/TXTRE_err,2,EQ,0,2
Cal_Fnc_/TXTRE_a2_p,2,EQ,1,2
:E END
:! 
:N Fnc_/TXTRE_bmp
:S    343,   142,   176
:T Cmd
:A Bitmap Filename
:D Bitmap Filename
:H Hlp_C_/TXTRE
:C )! Assign a texture BMP to an index
Fmt_H
Cmd_/TXTRE,FILE
Fld_2
  Typ_Def_*PAR(_z(1))
Fld_3
  Prm_[/TXTRE]  Texture file
  Typ_FILE
K_LN(intelnt+alphant)
  Def_*Str(*.img)
K_LN(INTELNT*ALPHANT)
  Def_*Str(*.bmp)
:E END OF Fnc_/TXTRE_bmp
:! 
:N Fnc_/TXTRE_cm
:S    287,   148,   132
:T Cmd
:C )! Fnc_/TXTRE_cm
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,1
:C )/GO
:A Texturing  (3D)
:H Hlp_C_/TXTRE
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
  Typ_Def_*GET(ACTIVE,,KEYWORD,,X3D)
Cal_Fnc_/TXTRE_err,2,EQ,0,2
Cal_Fnc_/TXTRE_cm2,2,EQ,1,2
:E END
:! 
:N Fnc_/TXTRE_cm2
:S   1240,   124,  11090
:T Command
:A Texturing on Components
:D Texturing on Components
:H Hlp_C_/TXTRE
Cmd_/TXTRE
 Fld_0
  Typ_Lab
  Prm_[/TXTRE]  Texturing
 Fld_2
  Typ_Def_CM
 Fld_3
  Prm_NUM   Type of texturing
  Typ_LIS_OPTIONB
   LIS_Aluminum        ,1
   LIS_Aluminum brushed,2
   LIS_Steel with bumps,3
   LIS_Steel embossed  ,4
   LIS_Steel pattern   ,6
   LIS_Steel riveted   ,7
   LIS_Steel scratched ,8
   LIS_Steel etched    ,11
   LIS_Iron            ,5
   LIS_Iron - grainy   ,13
   LIS_Gold            ,31
   LIS_Brass           ,32
   LIS_Silver          ,33
   LIS_Tin             ,9
   LIS_Metal           ,10
   LIS_Metal - hot     ,12
   LIS_Metal - rusty   ,14
   LIS_Brick           ,15
   LIS_Block           ,16
   LIS_Wood            ,17
   LIS_Wood - light    ,18
   LIS_Wood - walnut   ,19
   LIS_Plastic - red   ,37
   LIS_Plastic - green ,39
   LIS_Plastic - blue  ,36
   LIS_Plastic - ivory ,35
   LIS_Plastic - yellow,38
   LIS_Plastic - brown ,40
   LIS_Plastic - black ,34
   LIS_Hard plastic red,22
   LIS_Hard plast blue ,20
   LIS_Hard plast Lblue,21
   LIS_No Texture      ,0
 Fld_4
  Prm_N1    Component or assembly name
  Typ_Lis
  LIS_*READ,CM
  LIS_*READ,ASSM
Cmd_CMPLOT
:E END
:! 
:N Fnc_/TXTRE_e
:S    284,   146,   131
:T Cmd
:C )! Fnc_/TXTRE_e
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,1
:C )/GO
:A Texturing  (3D)
:H Hlp_C_/TXTRE
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
  Typ_Def_*GET(ACTIVE,,KEYWORD,,X3D)
Cal_Fnc_/TXTRE_err,2,EQ,0,2
Cal_Fnc_/TXTRE_e2,2,EQ,1,2
:E END
:! 
:N Fnc_/TXTRE_e2
:S    191,   155,    290
:T Command
:C )/NOPR
:C )_z1='ELEM'
:C )_z2='ALL'
:C )_z3='EPLOT'
:C )/GO
:A Hidden
:D Texturing on All Elements
Inp_P
Cmd_)!
Cal_Fnc_/TXTRE2
:E END
:! 
:N Fnc_/TXTRE_e2_of
:S    123,    84,    320
:T Command
:D No Texturing on Elements
Inp_P
Cmd_/TXTRE,ELEM
Cmd_EPLOT
:E END
:! 
:N Fnc_/TXTRE_e2_p
:S    349,   197,   1450
:T Cmd_P
:C )/NOPR
:C )_z1='ELEM'
:C )_z2='P51X'
:C )_z3='EPLOT'
:C )/GO
:A Texturing on Picked Elements
:D Texturing on Picked Elements
:H Hlp_C_/TXTRE
Inp_P
Cmd_)!
 Fld_4
  Prm_[/TXTRE,ELEM]  Pick or enter elements for texturing
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  PFM_1
  Sel_S
Cal_Fnc_/TXTRE2
:E END
:! 
:N Fnc_/TXTRE_e_off
:S    279,   138,   134
:T Cmd
:C )! Fnc_/TXTRE_e_off
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,1
:C )/GO
:A Texturing  (3D)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
  Typ_Def_*GET(ACTIVE,,KEYWORD,,X3D)
Cal_Fnc_/TXTRE_err,2,EQ,0,2
Cal_Fnc_/TXTRE_e2_of,2,EQ,1,2
:E END
:! 
:N Fnc_/TXTRE_e_p
:S    290,   150,   133
:T Cmd
:C )! Fnc_/TXTRE_e_p
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,1
:C )/GO
:A Texturing  (3D)
:H Hlp_C_/TXTRE
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
  Typ_Def_*GET(ACTIVE,,KEYWORD,,X3D)
Cal_Fnc_/TXTRE_err,2,EQ,0,2
Cal_Fnc_/TXTRE_e2_p,2,EQ,1,2
:E END
:! 
:N Fnc_/TXTRE_err
:S    471,    78,   386
:T Cmd
:C )! Fnc_/TXTRE_err
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)*CSET,100,101,'WARN',' '
Cmd_)*CSET,110,110,'Texturing is available only on'
Cmd_)*CSET,111,111,' 3D OpenGL devices            '
Cmd_)*CSET,112,112,' '
Cmd_)*CSET,113,121,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,122,130,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,131,139,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)/GO
!
Cal_Fnc_Message
:E END
:! 
:N Fnc_/TXTRE_jpg
:S    301,   138,   138
:T Cmd
:A JPEG Filename
:D JPEG Filename
:H Hlp_C_/TXTRE
:C )! Assign a texture JPG to an index
Fmt_H
Cmd_/TXTRE,FILE
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Prm_[/TXTRE]  Texture file
  Typ_FILE
  Def_*Str(*.jpg)
 Fld_6
  Typ_Def_JPEG
:E END OF Fnc_/TXTRE_jpg
:! 
:N Fnc_/TXTRE_load
:S    514,   186,   302
:T Cmd
:H Hlp_C_/TXTRE
:C )! Assign a texture to an index
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,8
:C )/GO
:A Load Bitmap File
:D Load Bitmap File
Cmd_)!
 Fld_2
  Prm_    File Format           
  Typ_LIS_OPTIONB
   LIS_Bitmap,1
   LIS_JPEG  ,2
   LIS_PNG   ,3
  Def_1
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Prm_      Texture Index(51-99)
  Typ_INT
  Def_88
Cmd_)/GOPR
Cal_Fnc_/TXTRE_bmp,2,EQ,1,1
Cal_Fnc_/TXTRE_jpg,2,EQ,2,1
Cal_Fnc_/TXTRE_png,2,EQ,3,1
:E END OF Fnc_/TXTRE_load
:! 
:N Fnc_/TXTRE_off
:S    274,   134,   133
:T Cmd
:C )! Fnc_/TXTRE_off
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,1
:C )/GO
:A Texturing  (3D)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
  Typ_Def_*GET(ACTIVE,,KEYWORD,,X3D)
Cal_Fnc_/TXTRE_err,2,EQ,0,2
Cal_Fnc_/TXTRE_off2,2,EQ,1,2
:E END
:! 
:N Fnc_/TXTRE_off2
:S    112,    71,    340
:T Command
:D No Texturing
Inp_P
Cmd_/TXTRE,DEFA
Cmd_/REPLOT
:E END
:! 
:N Fnc_/TXTRE_png
:S    298,   136,   137
:T Cmd
:A PNG Filename
:D PNG Filename
:H Hlp_C_/TXTRE
:C )! Assign a texture PNG to an index
Fmt_H
Cmd_/TXTRE,FILE
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Prm_[/TXTRE]  Texture file
  Typ_FILE
  Def_*Str(*.png)
 Fld_6
  Typ_Def_PNG
:E END OF Fnc_/TXTRE_png
:! 
:N Fnc_/TXTRE_unload
:S    242,   112,   102
:T Cmd
:H Hlp_C_/TXTRE
:A Unload Bitmap File
:D Unload Bitmap File
Fmt_H
Cmd_/TXTRE,FILE
Fld_2
  Prm_       Texture Index(51-99)
  Typ_INT
  Def_88
Fld_3
  Typ_Def_DEFA
:E END OF Fnc_/TXTRE_unload
:! 
:N Fnc_/TXTRE_v
:S    284,   146,   131
:T Cmd
:C )! Fnc_/TXTRE_v
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,1
:C )/GO
:A Texturing  (3D)
:H Hlp_C_/TXTRE
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
  Typ_Def_*GET(ACTIVE,,KEYWORD,,X3D)
Cal_Fnc_/TXTRE_err,2,EQ,0,2
Cal_Fnc_/TXTRE_v2,2,EQ,1,2
:E END
:! 
:N Fnc_/TXTRE_v2
:S    190,   154,    290
:T Command
:C )/NOPR
:C )_z1='VOLU'
:C )_z2='ALL'
:C )_z3='VPLOT'
:C )/GO
:A Hidden
:D Texturing on All Volumes
Inp_P
Cmd_)!
Cal_Fnc_/TXTRE2
:E END
:! 
:N Fnc_/TXTRE_v2_of
:S    122,    83,    320
:T Command
:D No Texturing on Volumes
Inp_P
Cmd_/TXTRE,VOLU
Cmd_VPLOT
:E END
:! 
:N Fnc_/TXTRE_v2_p
:S    346,   195,   1440
:T Cmd_P
:C )/NOPR
:C )_z1='VOLU'
:C )_z2='P51X'
:C )_z3='VPLOT'
:C )/GO
:A Texturing on Picked Volumes
:D Texturing on Picked Volumes
:H Hlp_C_/TXTRE
Inp_P
Cmd_)!
 Fld_4
  Prm_[/TXTRE,VOLU]  Pick or enter volumes for texturing
  Typ_VOLU
  Min_1
  Cnt_s
  PCN_1
  PFM_1
  Sel_S
Cal_Fnc_/TXTRE2
:E END
:! 
:N Fnc_/TXTRE_v_off
:S    279,   138,   134
:T Cmd
:C )! Fnc_/TXTRE_v_off
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,1
:C )/GO
:A Texturing  (3D)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
  Typ_Def_*GET(ACTIVE,,KEYWORD,,X3D)
Cal_Fnc_/TXTRE_err,2,EQ,0,2
Cal_Fnc_/TXTRE_v2_of,2,EQ,1,2
:E END
:! 
:N Fnc_/TXTRE_v_p
:S    290,   150,   133
:T Cmd
:C )! Fnc_/TXTRE_v_p
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,1
:C )/GO
:A Texturing  (3D)
:H Hlp_C_/TXTRE
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
  Typ_Def_*GET(ACTIVE,,KEYWORD,,X3D)
Cal_Fnc_/TXTRE_err,2,EQ,0,2
Cal_Fnc_/TXTRE_v2_p,2,EQ,1,2
:E END
:! 
:N Fnc_/TrnA_p
:S    293,   114,   172
:T Cmd_P
:C )! Fnc_/TrnA_p
:A Select areas
:D Select areas
:H Hlp_C_/TRLCY
Inp_P
Cmd_/TRLCY
 Fld_2
  Typ_DEF_AREA
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
Prm_[/TRLCY], Pick or enter areas to be set translucent
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  Sel_S
:E END
:! 
:N Fnc_/TrnE_p
:S    302,   120,   175
:T Cmd_P
:C )! Fnc_/TrnE_p
:A Select elements
:D Select elements
:H Hlp_C_/TRLCY
Inp_P
Cmd_/TRLCY
 Fld_2
  Typ_DEF_ELEM
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
Prm_[/TRLCY], Pick or enter elements to be set translucent
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  Sel_S
:E END
:! 
:N Fnc_/TrnV_p
:S    299,   118,   174
:T Cmd_P
:C )! Fnc_/TrnV_p
:A Select volumes
:D Select volumes
:H Hlp_C_/TRLCY
Inp_P
Cmd_/TRLCY
 Fld_2
  Typ_DEF_VOLU
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
Prm_[/TRLCY], Pick or enter volumes to be set translucent
  Typ_VOLU
  Min_1
  Cnt_s
  PCN_1
  Sel_S
:E END
:! 
:N Fnc_/XFRM_p
:S    481,   100,   374
:T Cmd
:C )! Fnc_/XFRM_p
:D Rotational Center
:H Hlp_C_/XFRM
Inp_NoApply
Cmd_)!
 Fld_2
  Prm_Lab     Select center from:
  Typ_LIS_OPTIONB
  LIS_Nodes           ,1
  LIS_Keypoints       ,3
  LIS_Lines           ,4
  LIS_Elements        ,2
  LIS_Areas           ,5
  LIS_Volumes         ,6
!
Cal_Fnc_/XFrmN_p,2,EQ,1
Cal_Fnc_/XFrmE_p,2,EQ,2
Cal_Fnc_/XFrmK_p,2,EQ,3
Cal_Fnc_/XFrmL_p,2,EQ,4
Cal_Fnc_/XFrmA_p,2,EQ,5
Cal_Fnc_/XFrmV_p,2,EQ,6
:E END
:! 
:N Fnc_/XFrmA_p
:S    278,   115,   156
:T Cmd_P
:C )! Fnc_/XFrmA_p
:A Select areas
:D Select areas
:H Hlp_C_/XFRM
Inp_P
Cmd_/XFRM
 Fld_2
  Typ_DEF_AREA
 Fld_3
Prm_[/XFRM], Pick or enter areas for rotation anchor points
  Typ_AREA
  Min_1
  Cnt_2
  PCN_0
  PFM_2
  Sel_S
:E END
:! 
:N Fnc_/XFrmE_p
:S    287,   121,   159
:T Cmd_P
:C )! Fnc_/XFrmE_p
:A Select elements
:D Select elements
:H Hlp_C_/XFRM
Inp_P
Cmd_/XFRM
 Fld_2
  Typ_DEF_ELEM
 Fld_3
Prm_[/XFRM], Pick or enter elements for rotation anchor points
  Typ_ELEM
  Min_1
  Cnt_2
  PCN_0
  PFM_2
  Sel_S
:E END
:! 
:N Fnc_/XFrmK_p
:S    290,   123,   160
:T Cmd_P
:C )! Fnc_/XFrmK_p
:A Select keypoints
:D Select keypoints
:H Hlp_C_/XFRM
Inp_P
Cmd_/XFRM
 Fld_2
  Typ_DEF_KEYP
 Fld_3
Prm_[/XFRM], Pick or enter keypoints for rotation anchor points
  Typ_KEYP
  Min_1
  Cnt_2
  PCN_0
  PFM_2
  Sel_S
:E END
:! 
:N Fnc_/XFrmL_p
:S    278,   115,   156
:T Cmd_P
:C )! Fnc_/XFrmL_p
:A Select lines
:D Select lines
:H Hlp_C_/XFRM
Inp_P
Cmd_/XFRM
 Fld_2
  Typ_DEF_LINE
 Fld_3
Prm_[/XFRM], Pick or enter lines for rotation anchor points
  Typ_LINE
  Min_1
  Cnt_2
  PCN_0
  PFM_2
  Sel_S
:E END
:! 
:N Fnc_/XFrmN_p
:S    278,   115,   156
:T Cmd_P
:C )! Fnc_/XFrmN_p
:A Select nodes
:D Select nodes
:H Hlp_C_/XFRM
Inp_P
Cmd_/XFRM
 Fld_2
  Typ_DEF_NODE
 Fld_3
Prm_[/XFRM], Pick or enter nodes for rotation anchor points
  Typ_NODE
  Min_1
  Cnt_2
  PCN_0
  PFM_2
  Sel_S
:E END
:! 
:N Fnc_/XFrmV_p
:S    284,   119,   158
:T Cmd_P
:C )! Fnc_/XFrmV_p
:A Select volumes
:D Select volumes
:H Hlp_C_/XFRM
Inp_P
Cmd_/XFRM
 Fld_2
  Typ_DEF_VOLU
 Fld_3
Prm_[/XFRM], Pick or enter volumes for rotation anchor points
  Typ_VOLU
  Min_1
  Cnt_2
  PCN_0
  PFM_2
  Sel_S
:E END
:! 
:N Fnc_/ZOO
:S    289,   120,   162
:T Cmd_P
:C )! Fnc_/ZOO ORPHAN
:A Zoom by picking
:H Hlp_C_/ZOOM
:D Zoom by picking
Inp_P
Cmd_/ZOOM
 Fld_2
  Typ_DEF_1
 Fld_3
  Typ_DEF_SCRN
 Fld_4
Prm_[/ZOOM]  Pick center and edge of zoom region
  Typ_XYZ_SCREEN
  Min_2
  Max_2
  PFM_2
  RUB_8
:E END
:! 
:N Fnc_-AppCharDens-
:S    238,   218,    13
:T Cmd_N
:C )!Fnc_-AppCharDens-
:A -Charge Density-
:D Apply Charge Density
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K #((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppCharge-
:S    227,   207,    13
:T Cmd_N
:C )!Fnc_-AppCharge-
:A -Charge-
:D Apply Electric Charge
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K #((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppCurrDens-
:S    229,   209,    13
:T Cmd_N
:C )! Fnc_-AppCurrDens-
:A -Curr Density-
:D Apply Mag Current Density
:K (PR_ELMAG*pr_set)
:K #((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppCurrSeg-
:S    189,   169,    13
:T Cmd_N
:C )!Fnc_-AppCurrSeg-
:A -Curr Segment-
:K (PR_ELMAG*pr_set)
:K #((MAGNETIC+VECTORP+edgeflx)*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppCurrent-
:S    247,   227,    13
:T Cmd_N
:C )!Fnc_-AppCurrent-
:A -Current-
:D Apply Electric Current
:K #((PREP7*SOLUTION))
:K ((ELECTRIC+elecstat+vfed+circ+edgeelc+timeintp)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppElecField-
:S    188,   168,    13
:T Cmd_N
:A -Electric Field-
:D Apply Electric Field 
:K (PR_ELMAG*pr_set)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppImped_E-
:S    194,   174,    13
:T Cmd_N
:C )!Fnc_-AppImped_E-
:A -Impedance-
:D Apply Impedance
:K #(PREP7*SOLUTION)
:K #(EDGEELC*NOFILTER)
:P (ELECMAG*THERMAL)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppInfinite-
:S    181,   161,    13
:T Cmd_N
:C )! Fnc_-AppInfinite-
:A -Infinite Surf-
:K (PR_ELMAG*pr_set)
:K #((MAGNETIC+edgeflx*ELECSTAT)*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppMCI-
:S    203,   183,    13
:T Cmd_N
:C )! Fnc_-AppMCI-
:A -Mag circ intf-
:K #(PREP7*SOLUTION)
:K #((CIRC+VECTORP+ELEM3D+MAGNETIC)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppMagField-
:S    210,   190,    13
:T Cmd_N
:C )!Fnc_-AppMagField-
:A -Magnetic Field-
:D Apply Magnetic Field 
:K (PR_ELMAG*pr_set)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppMagFlux-
:S    177,   157,    13
:T Cmd_N
:C )!Fnc_-AppMagFlux-
:A -Magnetic Flux-
:K (PR_ELMAG*pr_set)
:K #((MAGNETIC+SCALARP+edgeflx)*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppMaxwell-
:S    177,   157,    13
:T Cmd_N
:C )!Fnc_-AppMaxwell-
:A -Maxwell Surf-
:K (PR_ELMAG*pr_set)
:K #((MAGNETIC*EDGEFLX*ELECSTAT)*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppShield-
:S    177,   157,    13
:T Cmd_N
:C )!Fnc_-AppShield-
:A -Shield-
:D Apply Shield
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppSurfChar-
:S    232,   212,    13
:T Cmd_N
:C )!Fnc_-AppSurfChar-
:A -Surf Chrg Den-
:D Apply Surface Charge Density
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K #((ELECSTAT+edgeelc)*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppVirtDisp-
:S    186,   166,    13
:T Cmd_N
:C )!Fnc_-AppVirtDisp-
:A -Virtual Disp-
:K (PR_ELMAG*pr_set)
:K #((harmonic*ELEM2D+MAGNETIC*EDGEFLX)*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-AppVoltDrop-
:S    198,   178,    13
:T Cmd_N
:C )!Fnc_-AppVoltDrop-
:A -Voltage Drop-
:D Apply Mag Current Density
:K #(PREP7*SOLUTION)
:K #(VFED*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-BasePSD-
:S    134,   114,    13
:T Cmd_N
:C )! Fnc_-BasePSD-
:A -Base PSD Excit-
:K #(PSDRANDM*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-BodyForces-
:S    154,   134,    13
:T Cmd_N
:C )! Fnc_-BodyForces-
:A -Body Forces-
:K #((PREP7*SOLUTION)+(CFD)
:P (FLOTRAN)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-ConcPlot-
:S    160,   140,    13
:T Cmd_N
:C )! Fnc_-ConcPlot-
:A -Concrete Plot-
:K (lsdyna)
:K #(POST1+RESULTS+STRUCTRL+pmethod)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-DelCurrDens-
:S    216,   196,    13
:T Cmd_N
:C )!Fnc_-DelCurrDens-
:A -Curr Density-
:D Delete Mag Current Density
:K (PR_ELMAG*pr_set)
:K #((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-DelElecField-
:S    176,   156,    13
:T Cmd_N
:A -Electric field-
:D Delete Electric Field 
:K (PR_ELMAG*pr_set)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-DelExtPort-
:S    167,   147,    13
:T Cmd_N
:C )! Fnc_ExtPort
:A -Exterior Port-
:K #(PREP7*SOLUTION)
:K #(EDGEELC*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-DelIntPort-
:S    167,   147,    13
:T Cmd_N
:C )! Fnc_IntPort
:A -Interior Port-
:K #(PREP7*SOLUTION)
:K #(EDGEELC*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-DelMagField-
:S    198,   178,    13
:T Cmd_N
:C )!Fnc_-DelMagField-
:A -Magnetic field-
:D Delete Magnetic Field 
:K (PR_ELMAG*pr_set)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-EdgeEDOF-
:S    188,   168,    13
:T Cmd_N
:C )! Fnc_-EdgeEDOF-
:A -Edge DOF-
:K #(PREP7*SOLUTION*NOFILTER)
:K #(EDGEELC*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-EdgeMVP-
:S    146,   126,    13
:T Cmd_N
:C )! Fnc_-EdgeMVP-
:A -Edge DOF-
:K #((PREP7*SOLUTION)+(EDGEFLX*NOFILTER))
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-Electric-
:S    171,   151,    13
:T Cmd_N
:C )! Fnc_-Electric-
:A -Electric-
:K (lsdyna)
:K #((ELECTRIC+vfed)*CIRC*TIMEINTP*EDGEELC*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-Fluence-
:S    103,    83,    13
:T Cmd_N
:C )! Fnc_-Fluence-
:A -Fluence-
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-FluidANSYS-
:S    155,   135,    13
:T Cmd_N
:C )! Fnc_-FluidANSYS-
:A -Fluid/ANSYS-
:K (lsdyna*PR_FLUID)
:K #(FLUID*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-FluidCFD-
:S    145,   125,    13
:T Cmd_N
:C )! Fnc_-FluidCFD-
:A -Fluid/CFD-
:K (lsdyna*PR_CFD)
:K #(CFD*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-ImprCurr-
:S    168,   148,    13
:T Cmd_N
:C )! Fnc_-ImprCurr-
:A -Impressed Curr-
:K ((ELECTRIC+elecstat+circ+edgeelc+TIMEINTP)*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-InitialCon-
:S    123,   103,    13
:T Cmd_N
:C )! Fnc_-InitialCon- ORPHAN
:A -Initial Cond'n-
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-J-Normal-
:S    221,   201,    13
:T Cmd_N
:C )! Fnc_-J-Normal-
:A    -J-Normal-
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-J-Normal-T
:S    197,   177,    13
:T Cmd_N
:C )! Fnc_-J-Normal-T
:A    -J-Normal-
:K ((PREP7*SOLUTION)+(elem3d+edgeelc+TIMEINTP)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-Magnetic-
:S    144,   124,    13
:T Cmd_N
:C )! Fnc_-Magnetic-
:A -Magnetic-
:K (lsdyna)
:K #((MAGNETIC)*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-MultiPt-
:S    131,   111,    13
:T Cmd_N
:C )! Fnc_-MultiPt-
:A -Multi Point-
:K #(MULTIPNT*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-MultiPtBas-
:S    139,   119,    13
:T Cmd_N
:C )! Fnc_-MultiPtBas-
:A -Multi Pt Base-
:K #(MULTIPNT*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-MultiPtNod-
:S    140,   120,    13
:T Cmd_N
:C )! Fnc_-MultiPtNod-
:A -Multi Pt Nodal-
:K #(MULTIPNT*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-NodePSD-
:S    134,   114,    13
:T Cmd_N
:C )! Fnc_-NodePSD-
:A -Node PSD Excit-
:K #(PSDRANDM*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-Options Only-
:S    141,   121,    13
:T Cmd_N
:C )! Fnc_-Options Only-
:A -Options Only-
:K #(SCALARP*NOFILTER)
Inp_P
Cmd_)!
:E End
:! 
:N Fnc_-PMLOpt-
:S    185,   165,    13
:T Cmd_N
:C )! Fnc_-PMLOPT
:A -PML Options-
:K #(PREP7*SOLUTION*NOFILTER)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_PMLOPT
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-PMLParamDel-
:S    180,   160,    13
:T Cmd_N
:C )! Fnc_-PMLParamDel
:A -PML Options-
:K #(PREP7*SOLUTION*NOFILTER)
:K #(EDGEELC*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-PSD-
:S    115,    95,    13
:T Cmd_N
:C )! Fnc_-PSD-
:A -PSD-
:K #(PSDRANDM*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-PerfEC-
:S    177,   157,    13
:T Cmd_N
:C )! Fnc_-PerfEC-
:A -Electric Wall-
:K (((PREP7*SOLUTION)+EDGEELC)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-RotateNode-
:S    116,    96,    13
:T Cmd_N
:C )! Fnc_-RotateNode-
:A -Rotate Node CS-
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-ScalFluxN-
:S    144,   124,    13
:T Cmd_N
:C )! Fnc_-ScalFluxN- ORPHAN
:A    -Flux Normal-
:K #(SCALARP*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-ScalFluxP-
:S    143,   123,    13
:T Cmd_N
:C )! Fnc_-ScalFluxP- ORPHAN
:A    -Flux Par'l-
:K #(SCALARP*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-ScalarPot-
:S    145,   125,    13
:T Cmd_N
:C )! Fnc_-ScalarPot-
:A -Scalar Poten-
:K #((SCALARP+edgeelc)*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-SinglPtFor-
:S    140,   120,    13
:T Cmd_N
:C )! Fnc_-SinglPtFor-
:A -SinglePt Force-
:K #(SINGLEPT*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-SinglePt-
:S    134,   114,    13
:T Cmd_N
:C )! Fnc_-SinglePt-
:A -Single Point-
:K #(SINGLEPT*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-Solve-
:S    135,   115,    13
:T Cmd_N
:C )! Fnc_-Solve-
:A -Solve-
:D -Solve-
:K (lsdyna)
:P (pp*LSDYNA)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-StaticMag-
:S    147,   127,    13
:T Cmd_N
:C )! Fnc_-StaticMag-
:A -Static Analy-
:K #(harmonic+trnsient)*(NOFILTER)
Inp_P
Cmd_)!
:E End
:! 
:N Fnc_-Structural-
:S    136,   116,    13
:T Cmd_N
:C )! Fnc_-Structural-
:A -Structural-
:K #(STRUCTRL*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-Superelem-
:S    132,   112,    13
:T Cmd_N
:C )! Fnc_-Superelem-
:A -Superelements-
:K #(cfd*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-Temperature-
:S    237,   217,    13
:T Cmd_N
:C )! Fnc_-Temperature-
:A -Temperature-
:K #(PREP7*SOLUTION*NOFILTER)
:K #((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-Thermal-
:S    148,   128,    13
:T Cmd_N
:C )! Fnc_-Thermal-
:A -Thermal-
:K (lsdyna)
:K #(THERMAL*FLUID*CFD*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-TimeInt-
:S    223,   203,    13
:T Cmd_N
:C )! Fnc_-TimeInt-
:A -TimeIntegrated-
:K #(PREP7*SOLUTION*NOFILTER)
:K #(((ELECTRIC*ELECSTAT)+TIMEINTP+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-VectorPot-
:S    145,   125,    13
:T Cmd_N
:C )! Fnc_-VectorPot-
:A -Vector Poten-
:K #((VECTORP+edgeelc)*NOFILTER)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_-Voltage-
:S    216,   196,    13
:T Cmd_N
:C )! Fnc_-Voltage-
:A -Voltage-
:K #(PREP7*SOLUTION*NOFILTER)
:K #(((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_A
:S    231,   116,   108
:T Cmd_P
:C )! Fnc_A
:A Through KPs
:D Create Area thru KPs
:K #(PREP7)
:H Hlp_C_A
Inp_P
Cmd_A
 Fld_2
  Typ_KEYP
  Prm_[A]  Pick or enter keypoints defining the area
  Rub_53
  Min_3
  Cnt_s
:E END
:! 
:N Fnc_AADD
:S    218,   108,   103
:T Cmd_P
:C )! Fnc_AADD
:A Areas
:D Add Areas
:K #(PREP7)
:H Hlp_C_AADD
Inp_P
Cmd_AADD
 Fld_2
  Typ_AREA
  Prm_[AADD]  Pick or enter areas to be added
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_AATT
:S   1353,   597,   749
:T Command
:C )! Fnc_AATT
:C )/NOPR
:C )KEYW,ETLIST,0
:C )KEYW,RLLIST,0
:C )KEYW,MPLIST,0
:C )KEYW,CSLIST,0
:C )KEYW,SELIST,0
:C )_z1=ETYIQR(0,12)
:C )*IF,_z1,gt,10,then
:C )KEYW,ETLIST,1
:C )*ENDIF
:C )_z2=RLINQR(0,12)
:C )*IF,_z2,gt,10,then
:C )KEYW,RLLIST,1
:C )*ENDIF
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )_z4=CSYIQR(0,12)
:C )*IF,_z4,gt,10,then
:C )KEYW,CSLIST,1
:C )*ENDIF
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A All Areas
:D Area Attributes
:K #(PREP7)
:H Hlp_C_AATT
Cmd_AATT
 Fld_0
  Typ_Lab
  Prm_[AATT]  Assign Attributes to All Selected Areas
 Fld_0
  Typ_Sep
 Fld_2
  Prm_MAT   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
 Fld_0
  Typ_Sep
 Fld_3
  Prm_REAL  Real constant set number
  K_LN(rllist)
  Typ_LIS_OPTIONB
  K_LN(RLLIST)
  Typ_LIS
  LIS_*READ,REAL
 Fld_0
  Typ_Sep
 Fld_4
  Prm_TYPE  Element type number
  K_LN(etlist)
  Typ_LIS_OPTIONB
  K_LN(ETLIST)
  Typ_LIS
  LIS_*READ,TYPE
 Fld_0
  Typ_Sep
 Fld_5
  Prm_ESYS  Element coordinate sys
  K_LN(cslist)
  Typ_LIS_OPTIONB
  K_LN(CSLIST)
  Typ_LIS
  LIS_*READ,ESYS
 Fld_0
 Typ_Sep
 Fld_6
  Prm_SECT  Element section
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
 Fld_0
 Typ_Sep
:E END
:! 
:N Fnc_AATT_p
:S    414,   125,   282
:T Cmd_P
:C )! Fnc_AATT_p
:A Picked Areas
:D Area Attributes
:K #(PREP7)
:H Hlp_C_AATT
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
! Exclude_from_paths
Cmd_ASEL
 Fld_5
  Prm_[AATT]  Pick or enter areas for attribute assignment
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,AREA
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_AATT_p2
:E END
:! 
:N Fnc_AATT_p2
:S   1536,   606,   923
:T Command
:C )! Fnc_AATT_p2
:C )/NOPR
:C )KEYW,ETLIST,0
:C )KEYW,RLLIST,0
:C )KEYW,MPLIST,0
:C )KEYW,CSLIST,0
:C )KEYW,SELIST,0
:C )_z1=ETYIQR(0,12)
:C )*IF,_z1,gt,10,then
:C )KEYW,ETLIST,1
:C )*ENDIF
:C )_z2=RLINQR(0,12)
:C )*IF,_z2,gt,10,then
:C )KEYW,RLLIST,1
:C )*ENDIF
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )_z4=CSYIQR(0,12)
:C )*IF,_z4,gt,10,then
:C )KEYW,CSLIST,1
:C )*ENDIF
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A Picked Areas
:D Area Attributes
:K #(PREP7)
:H Hlp_C_AATT
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
Cmd_)/GO
Cmd_AATT
 Fld_0
  Typ_Lab
  Prm_[AATT]  Assign Attributes to Picked Areas
 Fld_0
 Typ_Sep
 Fld_2
  Prm_MAT   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
 Fld_0
 Typ_Sep
 Fld_3
  Prm_REAL  Real constant set number
  K_LN(rllist)
  Typ_LIS_OPTIONB
  K_LN(RLLIST)
  Typ_LIS
  LIS_*READ,REAL
 Fld_0
 Typ_Sep
 Fld_4
  Prm_TYPE  Element type number
  K_LN(etlist)
  Typ_LIS_OPTIONB
  K_LN(ETLIST)
  Typ_LIS
  LIS_*READ,TYPE
 Fld_0
 Typ_Sep
 Fld_5
  Prm_ESYS  Element coordinate sys
  K_LN(cslist)
  Typ_LIS_OPTIONB
  K_LN(CSLIST)
  Typ_LIS
  LIS_*READ,ESYS
 Fld_0
 Typ_Sep
 Fld_6
  Prm_SECT  Element section
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
 Fld_0
 Typ_Sep
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_ABBRESU
:S    418,   164,   247
:T Cmd
:C )! Fnc_ABBRESU
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A Restore Abbr
:D Restore Toolbar/Abbreviations
:H Hlp_C_ABBRES
Cmd_ABBRES
Fld_0
Typ_Lab
Prm_[ABBRES]  Restore Toolbar/Abbreviations             
Fld_2
Prm_  Existing abbreviations will be
Typ_Lis_OptionB
LIS_Replaced        ,NEW
LIS_Merged with new ,CHANGE
Fld_3
Prm_  Restore from file
Typ_FILE
Def_*PAR(_zx)
:E END
:! 
:N Fnc_ABBSAVE
:S    291,   158,   126
:T Cmd
:C )! Fnc_ABBSAVE
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A Save Abbr
:D Save Toolbar/Abbreviations
:H Hlp_C_ABBSAV
Fmt_H
Cmd_ABBSAV
Fld_0
Typ_Lab
Prm_[ABBSAV]  Save Toolbar/Abbreviations             
Fld_3
Typ_FILE_INLINE
Prm_
Def_*PAR(_zx)
:E END
:! 
:N Fnc_ABEXTRACT
:S    694,   207,   480
:T Command
:C )! Fnc_ABEXTRACT
:C )/NOPR
:C )*set,_z1
:C )/GO
:A RayleighDamp
:D Extract damping parameters (Raleigh damping)
:K #(SOLUTION+TFILM)
:H Hlp_C_ABEXTRACT
Inp_Noapply
Cmd_)/NOPR
Cmd_)*CSET,1,2
 Fld_0
  Typ_Lab
  Prm_[ABEXTRACT] ALPHA-BETA coefficients extraction for Rayleigh damping
 Fld_2
  Prm_mode1,mode2  First, second mode
  Typ_Int2
Cmd_)*SET,_z1
K_CM(MODAL)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Note: This command requires modal displacements
 Fld_0
  Typ_Lab
  Prm_      extracted in advance using RMFLVEC
 Fld_2
  Prm_          Run RMFLVEC ?
  Typ_Lis_OptionB
   Lis_No,0
   Lis_Yes,1
   Def_0
Cmd_)/GO
Cal_Fnc_ABEXTRACT2
:E END
:! 
:N Fnc_ABEXTRACT2
:S    271,   159,   105
:T Cmd_P
:C )! Fnc_ABEXTRACT2
:C )/NOPR
:C )keyw,eigvex,0
:C )*if,_z1,gt,0,then
:C )keyw,eigvex,1
:C )*endif
:C )/GO
Inp_P
Cmd_RMFLVEC
K_CM(EIGVEX+MODAL)
!
Cmd_ABEXTRACT
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
:E END
:! 
:N Fnc_ABS
:S    441,   147,   287
:T Command
:C )! Fnc_ABS
:A Absolute Value
:D Absolute Value of Time-History Variable
:K #(POST26)
:H Hlp_C_ABS
Cmd_ABS
Fld_0
Typ_Lab
Prm_[ABS]                  IR = |FACTA * IA|
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_ACCAT
:S    242,   123,   112
:T Cmd_P
:C )! Fnc_ACCAT
:A     Areas
:D Concatenate Areas
:K #(PREP7)
:H Hlp_C_ACCAT
Inp_P
Cmd_ACCAT
 Fld_2
  Typ_AREA
  Prm_[ACCAT]  Pick or enter areas to be concatenated
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ACCAT_del
:S    824,    94,   723
:T Cmd_N
:C )! Fnc_ACCAT_del
:A    Areas
:K #(PREP7)
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
! Exclude_from_paths
Cmd_)/GO
! Exclude_from_paths
Cmd_ASEL,R,ACCA
! Exclude_from_paths
Cmd_)/NOPR
Cmd__Z1=ARINQR(0,13)
! Exclude_from_paths
Cmd_*IF,_z1,ne,0,then
! Exclude_from_paths
Cmd_)/GO
! Exclude_from_paths
Cmd_ADELE,ALL
! Exclude_from_paths
Cmd_)/NOPR
! Exclude_from_paths
Cmd__Z2=ARINQR(0,13)
! Exclude_from_paths
Cmd__Z3=_Z1-_Z2
! Exclude_from_paths
Cmd_*IF,_Z3,NE,0,THEN
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_*ENDIF
! Exclude_from_paths
Cmd_*ELSE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_*ENDIF
! Exclude_from_paths
Cmd_)/GO
! Exclude_from_paths
:E END
:! 
:N Fnc_ACCAT_m
:S    242,   123,   112
:T Cmd_P
:C )! Fnc_ACCAT_m
:A Areas
:D Concatenate Areas
:K #(PREP7)
:H Hlp_C_ACCAT
Inp_P
Cmd_ACCAT
 Fld_2
  Typ_AREA
  Prm_[ACCAT]  Pick or enter areas to be concatenated
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ACEL
:S    594,   242,   345
:T Command
:C )! Fnc_ACEL
:A    Global
:D Apply (Gravitational) Acceleration
:K (lsdyna)
:K (PR_STRUC*PR_FLUID*PR_CFD*pr_set)
:K #((PREP7*SOLUTION)+(STRUCTRL*FLUID*CFD*NOFILTER))
:P (LINPLUS)
:H Hlp_C_ACEL
Inp_NoApply
Cmd_ACEL
Fld_0
 Typ_LAB
 Prm_[ACEL]  Apply (Gravitational) Acceleration
Fld_2
 Typ_REAL
 Prm_ACELX  Global Cartesian X-comp
 Def_*GET(common,,flowcm,,real,21)
Fld_3
 Typ_REAL
 Prm_ACELY  Global Cartesian Y-comp
 Def_*GET(common,,flowcm,,real,22)
Fld_4
 Typ_REAL
 Prm_ACELZ  Global Cartesian Z-comp
 Def_*GET(common,,flowcm,,real,23)
:E END
:! 
:N Fnc_ACEL_dele
:S    396,   253,   136
:T Command
:C )! Fnc_ACEL_dele
:A    Gravity
:D Delete (Gravitational) Acceleration
:K ((PR_STRUC*PR_FLUID*PR_CFD*pr_set) + lsdyna)
:K #((PREP7*SOLUTION)+(STRUCTRL*FLUID*CFD*NOFILTER))
:P (LINPLUS)
:H Hlp_C_ACEL
Inp_NoApply
Cmd_ACEL,0,0,0
Fld_0
 Typ_Lab
 Prm_[ACEL]  This function sets all linear accelerations
Fld_0
 Typ_Lab
 Prm_        to zero!
:E END
:! 
:N Fnc_ACLEAR
:S    232,   116,   109
:T Cmd_P
:C )! Fnc_ACLEAR
:A Areas
:D Clear Areas
:K #(PREP7)
:H Hlp_C_ACLEAR
Inp_P
Cmd_ACLEAR
 Fld_2
  Typ_AREA
  Prm_[ACLEAR]  Pick or enter areas to be cleared
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ACNTRL
:S    865,   135,   723
:T Command
:C )! Fnc_ACNTRL
:A     Area Cntrls
:D Global Element Sizes
:K #(PREP7)
:H Hlp_C_MOPT
Inp_NoApply
Cmd_MOPT
K_CM(moptrv51)
 Fld_0
  Typ_Lab
  Prm_[MOPT]  Global internal element sizing (areas only)
 Fld_2
  Typ_Def_EXPND
 Fld_3
  Typ_Real
  Prm_EXPND  Element expansion factor-
  Def_*GET(common,,mesh_tol,,real,1)
 Fld_0
  Typ_Lab
  Prm_       - use 0.5 (fine) thru 4.0 (coarse). 
Cmd_MOPT
K_CM(moptrv51)
 Fld_2
  Typ_Def_TRANS
 Fld_3
  Typ_Real
  Prm_TRANS  Mesh transition factor -
  Def_*GET(common,,mesh_tol,,real,7)
 Fld_0
  Typ_Lab
  Prm_       - use value of 1.0 (gradual) thru 4.0 (rapid).
!Cmd_MOPT
!K_CM(moptrv51)
! Fld_2
!  Typ_Def_IESZ
! Fld_3
!  Typ_Real
!  Prm_IESZ   Internal element length -
!  Def_*GET(common,,mesh_tol,,real,24)
! Fld_0
!  Typ_Lab
!  Prm_       - (used only for flat areas)
:E END
:! 
:N Fnc_ADAMSOUT
:S    137,    87,    43
:T Cmd
:A Export to ADAMS
:D Create ADAMS-file
Inp_P
Cmd_)~eui,'::euidl::adamsout::entry'
:E END
:! 
:N Fnc_ADAMSOUT1
:S    285,   138,   140
:T Cmd
:A Export to ADAMS
:D Reselect attchment nodes
:C )/ANNO,DELE
:C )/REPLO
:H Hlp_G_ADVexad
Inp_P
Cmd_NSEL
 Fld_2
  Typ_DEF_R
 Fld_5
Prm_[NSEL],R Pick or enter two or more nodes as interface nodes
  Typ_NODE
  Min_2
  Cnt_s
  Pcn_1
:E END
:! 
:N Fnc_ADAPT
:S    868,   230,   631
:T Command
:C )! Fnc_ADAPT
:A Adaptive Mesh
:D Adaptive Meshing and Solution
:K (lsdyna)
:K #((BEGIN*SOLUTION)+(STRUCTRL*THERMAL*NOFILTER)+cfd+pmethod)
:P (LINPLUS*THERMAL)+(pp)
:H Hlp_C_ADAPT
Inp_NoApply
Cmd_ADAPT
 Fld_0
  Typ_Lab
  Prm_[ADAPT]  Do Adaptive Meshing and Solution
 Fld_2
  Prm_NSOLN   Number of solutions
  Typ_INT
  Def_5
 Fld_3
  K_FL(STRUCTRL)
  Prm_STARGT Structural % error target
  Typ_REAL
  Def_5.0
 Fld_4
  K_FL(THERMAL)
  Prm_TTARGT  Thermal % error target
  Typ_REAL
  Def_1.0
 Fld_5
  Prm_FACMN   Min. size change factor
  Typ_REAL
  Def_0.25
 Fld_6
  Prm_FACMX   Max. size change factor
  Typ_REAL
  Def_2.0
 Fld_7
  Prm_KYKPS   Element size changed at
  Typ_LIS_OPTIONB
  LIS_All Keypoints   ,0
  LIS_Selected KPs    ,1
 Fld_8
  Prm_KYMAC   Use user ADAPT macros?
  Typ_LOGI,No,Yes
Cal_REFRESH
:E END
:! 
:N Fnc_ADD
:S    659,   123,   529
:T Command
:C )! Fnc_ADD
:A Add
:D Add Time-History Variables
:K #(POST26)
:H Hlp_C_ADD
Cmd_ADD
Fld_0
Typ_Lab
Prm_[ADD]        IR = (FACTA * IA) + (FACTB * IB) + (FACTC * IC)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  1st Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     1st Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_10
Prm_FACTB  2nd Factor
Typ_real
Def_1.0
Fld_4
Prm_IB     2nd Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_11
Prm_FACTC  3rd Factor
Typ_real
Def_1.0
Fld_5
Prm_IC     3rd Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_ADELE
:S    238,   124,   107
:T Cmd_P
:C )! Fnc_ADELE
:A Areas Only
:D Delete Areas Only
:K #(PREP7)
:H Hlp_C_ADELE
Inp_P
Cmd_ADELE
 Fld_2
  Typ_AREA
  Prm_[ADELE]  Pick or enter areas to be deleted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ADELE_sweep
:S    282,   144,   131
:T Cmd_P
:C )! Fnc_ADELE_sweep
:A Area and Below
:D Delete Area and Below
:K #(PREP7)
:H Hlp_C_ADELE
Inp_P
Cmd_ADELE
 Fld_5
  Typ_DEF_1
 Fld_2
  Typ_AREA
  Prm_[ADELE],,,,1  Pick or enter areas to be deleted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ADGL
:S    141,   119,    15
:T Cmd_N
:C )! Fnc_ADGL
:A List Degen Areas
:D List Degenerate Areas
:H Hlp_C_ADGL
Inp_P
Cmd_ADGL
:E END
:! 
:N Fnc_ADRAG
:S    347,   134,   206
:T Cmd_P
:C )! Fnc_ADRAG
:A    Along Lines
:D Sweep Lines along Lines
:K #(PREP7)
:H Hlp_C_ADRAG
Inp_P
Cmd_ADRAG
 Fld_2
  Typ_LINE
  Prm_[ADRAG]  Pick or enter lines to be swept (dragged)
  Min_1
  Cnt_s
  PCN_1
 Fld_8
  Typ_LINE
  Prm_Pick or enter lines defining the sweep (drag) path
  Min_1
  Cnt_s
:E END
:! 
:N Fnc_AESIZE
:S    317,   146,   164
:T Cmd
:C )! Fnc_AESIZE
:A     All Areas
:D Element Sizes on All Selected Areas
:K #(PREP7)
:H Hlp_C_AESIZE
Cmd_AESIZE
 Fld_0
  Typ_Lab
  Prm_[AESIZE]  Element sizes on all selected areas
 Fld_2
  Typ_Def_ALL
 Fld_3
  Typ_REAL
  Prm_SIZE   Element edge length
  Def_Blank
:E END
:! 
:N Fnc_AESIZE_p
:S    326,   182,   137
:T Cmd_P
:C )! Fnc_AESIZE_p
:C )! Areas for AESIZE command below
:A     Picked Areas
:D Elem Size at Picked Areas
:K #(PREP7)
:H Hlp_C_AESIZE
Inp_P
Cmd_)!
 Fld_2
  Prm_[AESIZE]  Pick or enter areas for size assignment
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_AESIZE_p2
:E END
:! 
:N Fnc_AESIZE_p2
:S    317,   152,   158
:T Command
:C )! Fnc_AESIZE_p2
:A     Picked Areas
:D Element Size at Picked Areas
:K #(PREP7)
:H Hlp_C_AESIZE
Cmd_AESIZE
 Fld_0
  Typ_Lab
  Prm_[AESIZE]  Element size at picked areas
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_REAL
  Prm_SIZE   Element edge length
  Def_blank
:E END
:! 
:N Fnc_AESIZE_pdel
:S    336,   181,   148
:T Cmd_P
:C )! Fnc_AESIZE_p
:C )! Areas for AESIZE command below
:A     Clr Size
:D Elem Size at Picked Areas
:K #(PREP7)
:H Hlp_C_AESIZE
Inp_P
Cmd_)!
 Fld_2
  Prm_[AESIZE]  Pick or enter areas to remove sizes
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_AESIZE
 Fld_2
  Typ_Def_P51X
:E END
:! 
:N Fnc_AFILLT
:S    335,   170,   158
:T Cmd_P
:C )! Fnc_AFILLT
:A    Area Fillet
:D Area Fillet
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )/GO
:K #(PREP7)
:H Hlp_C_AFILLT
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Typ_AREA
  Prm_[AFILLT]  Pick or enter the two intersecting areas
  Min_2
  Cnt_2
  PFM_2
Cmd_)/GO
Cal_Fnc_AFILLT_2
:E END
:! 
:N Fnc_AFILLT_2
:S    339,   128,   204
:T Command
:C )! Fnc_AFILLT_2
:A Area Fillet
:D Area Fillet
:K #(PREP7)
:H Hlp_C_AFILLT
Cmd_AFILLT
 Fld_0
  Typ_Lab
  Prm_[AFILLT]  Create Fillet Area
 Fld_2
  Typ_INT2
  Prm_NA1,NA2  Intersecting areas
  Def_*PAR(_z(1)),*PAR(_z(2))
 Fld_4
  Typ_REAL
  Prm_RAD      Fillet radius
  Def_Blank
:E END
:! 
:N Fnc_AFILLT_3d
:S    352,   184,   161
:T Cmd_P
:C )! Fnc_AFILLT_3d ORPHAN
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )/GO
:A Volume Fillet
:D Volume Fillet
:K #(PREP7)
:H Hlp_C_AFILLT
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Typ_AREA
  Prm_[AFILLT]  Pick or enter the two intersecting areas
  Min_2
  Cnt_2
  PFM_2
Cmd_)/GO
Cal_Fnc_AFILLT_3d_2
:E END
:! 
:N Fnc_AFILLT_3d_2
:S    380,   145,   228
:T Command
:C )! Fnc_AFILLT_3d_2 ORPHAN
:A Volume Fillet
:D Volume Fillet
:K #(PREP7)
:H Hlp_C_AFILLT
Cmd_AFILLT
 Fld_0
  Typ_Lab
  Prm_[AFILLT]  Create Fillet Volume
 Fld_2
  Typ_INT2
  Prm_NA1,NA2  Intersecting areas
  Def_*PAR(_z(1)),*PAR(_z(2))
 Fld_4
  Typ_REAL
  Prm_RAD      Fillet radius
  Def_Blank
 Fld_5
  Typ_DEF_VOLU
:E END
:! 
:N Fnc_AFLIST
:S    236,   125,   104
:T Cmd_N
:C )! Fnc_AFLIST
:A Database Summary
:D List Database Summary
:H Hlp_C_AFLIST
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
Cal_Fnc_AFLIST_yes,2,eq,17
Cal_Fnc_AFLIST_no,2,ne,17
:E END
:! 
:N Fnc_AFLIST_no
:S    521,   123,   391
:T Cmd
:C )! Fnc_AFLIST_no
:D List Database Summary
:B Fnc_AFLIST
:H Hlp_C_AFLIST
Inp_P
Cmd_)/NOPR
Cmd_)_z1='POP'
Cmd_)/GO
Cmd_)*CSET,110,117,' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,118,124,' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,125,132,' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,133,139,' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,100,101,'NOTE',' '
Cmd_)*CSET,110,110,'<List Database Summary> is avail'
Cmd_)*CSET,111,111,'able only in the preprocessor   '
Cal_Fnc_Message
:E END
:! 
:N Fnc_AFLIST_yes
:S    135,   111,    17
:T Cmd
:C )! Fnc_AFLIST_yes
:D List Database Summary
:H Hlp_C_AFLIST
Inp_P
Cmd_AFLIST
:E END
:! 
:N Fnc_AGEN
:S    288,   157,   124
:T Cmd_P
:C )! Fnc_AGEN
:C )! Areas for AGEN command below
:A Areas
:D Copy Areas
:K #(PREP7)
:K #(priges)
:H Hlp_C_AGEN
Inp_P
Cmd_)!
 Fld_3
  Typ_AREA
  Prm_[AGEN]  Pick or enter areas to be copied
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_AGEN2
:E END
:! 
:N Fnc_AGEN2
:S    646,   113,   526
:T Command
:C )! Fnc_AGEN2
:A Areas
:D Copy Areas
:K #(PREP7)
:H Hlp_C_AGEN
Cmd_AGEN
Fld_0
Typ_Lab
Prm_[AGEN]  Copy Areas
 Fld_2
  Prm_ITIME   Number of copies -
  Typ_INT
  Def_2
Fld_0
 Typ_Lab
  Prm_        - including original
 Fld_3
  Typ_Def_P51X
 Fld_6
  Prm_DX      X-offset in active CS
  Typ_REAL
 Fld_7
  Prm_DY      Y-offset in active CS
  Typ_REAL
 Fld_8
  Prm_DZ      Z-offset in active CS
  Typ_REAL
 Fld_0
  Typ_Sep
 Fld_9
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_10
  Prm_NOELEM  Items to be copied
  Typ_LIS_OptionB
  LIS_Areas and mesh  ,0
  LIS_Areas only      ,1
:E END
:! 
:N Fnc_AGEN_move
:S    306,   170,   129
:T Cmd_P
:C )! Fnc_AGEN_move
:C )! Areas for AGEN command below
:A    Areas
:D Move Areas
:K #(PREP7)
:K #(priges)
:H Hlp_C_AGEN
Inp_P
Cmd_)!
 Fld_3
  Typ_AREA
  Prm_[AGEN]  Pick or enter areas to be moved
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_AGEN_move_2
:E END
:! 
:N Fnc_AGEN_move_2
:S    388,   128,   253
:T Command
:C )! Fnc_AGEN_move_2
:A    Areas
:D Move Areas
:K #(PREP7)
:H Hlp_C_AGEN
Cmd_AGEN
Fld_0
 Typ_Lab
  Prm_[AGEN]  Move Areas
 Fld_3
  Typ_Def_P51X
 Fld_6
  Prm_DX      X-offset in active CS
  Typ_REAL
 Fld_7
  Prm_DY      Y-offset in active CS
  Typ_REAL
 Fld_8
  Prm_DZ      Z-offset in active CS
  Typ_REAL
 Fld_11
  Typ_DEF_1
:E END
:! 
:N Fnc_AGLUE
:S    224,   112,   105
:T Cmd_P
:C )! Fnc_AGLUE
:A Areas
:D Glue Areas
:K #(PREP7)
:H Hlp_C_AGLUE
Inp_P
Cmd_AGLUE
 Fld_2
  Typ_AREA
  Prm_[AGLUE]  Pick or enter areas to be glued
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_AINA
:S    251,   126,   118
:T Cmd_P
:C )! Fnc_AINA
:A    Areas
:D Intersect Areas (Common)
:K #(PREP7)
:H Hlp_C_AINA
Inp_P
Cmd_AINA
 Fld_2
  Typ_AREA
  Prm_[AINA]  Pick or enter areas to be intersected (common)
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_AINP
:S    255,   128,   120
:T Cmd_P
:C )! Fnc_AINP
:A    Areas
:D Intersect Areas (Pairwise)
:K #(PREP7)
:H Hlp_C_AINP
Inp_P
Cmd_AINP
 Fld_2
  Typ_AREA
  Prm_[AINP]  Pick or enter areas to be intersected (pairwise)
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_AINV
:S    333,   143,   183
:T Cmd_P
:C )! Fnc_AINV
:A Area with Volume
:D Intersect Area w/ Volu
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_AINV
Inp_P
Cmd_AINV
 Fld_2
  Typ_AREA
  Prm_[AINV]  Pick or enter area to be intersected
  Min_1
  Cnt_1
 Fld_3
  Typ_VOLU
  Prm_Pick or enter the volume to be intersected
  Min_1
  Cnt_1
:E END
:! 
:N Fnc_AL
:S    228,   116,   105
:T Cmd_P
:C )! Fnc_AL
:A By Lines
:D Create Area by Lines
:K #(PREP7)
:H Hlp_C_AL
Inp_P
Cmd_AL
 Fld_2
  Typ_LINE
  Prm_[AL]  Pick or enter lines defining the area
  Min_2
  Cnt_s
  PCN_2
:E END
:! 
:N Fnc_ALIST_p
:S    224,   111,   106
:T Cmd_P
:C )! Fnc_ALIST_p
:D List Picked Areas
:A Areas
:H Hlp_C_ALIST
Inp_P
Cmd_ALIST
 Fld_2
  Prm_[ALIST]  Pick or enter areas to be listed
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ALLSEL
:S    140,    92,    41
:T Cmd_P
:C )! Fnc_ALLSEL
:A By Picking
:D By Picking
Inp_P
Cmd_ALLS
Cmd_EPLOT
Cal_Fnc_ESEL_S1
:E END
:! 
:N Fnc_AMAP
:S    457,   198,   252
:T Cmd_P
:C )! Fnc_AMAP
:C )/NOPR
:C )CMDEL,_Y
:C )CMDEL,_Y1
:C )CMDEL,_Y2
:C )/GO
:A By Corners
:D Map Mesh Area by Corners
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_AMAP
Inp_P
Cmd_)/NOPR
Cmd_)*CSET,1,5
 Fld_2
  Typ_AREA
  Prm_[AMAP]  Pick or enter area to be map-meshed
  Min_1
  Cnt_1
  PCN_0
 Fld_3
  Typ_KP
  Prm_Pick or enter 3 or 4 corners (keypoints)
  Rub_53
  Min_3
  Max_4
  Pdp_0
  PFM_2
Cmd_)/GO
Cal_Fnc_AMAP_1
:E END
:! 
:N Fnc_AMAP_1
:S    214,   123,    84
:T Cmd
:C )! Fnc_AMAP_1
:C )/NOPR
:C )*GET,_z1,CPAR,1
:C )_z2=ARINQR(_z1,-6)
:C )/GO
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z2)
Cal_Fnc_AMAP_2,2,gt,0
Cal_Fnc_AMAP_3,2,eq,0
:E END
:! 
:N Fnc_AMAP_2
:S    219,    62,   150
:T Cmd
:C )! Fnc_AMAP_2
Inp_Noapply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
 Typ_Lab
 Prm_Area is already meshed.
 Fld_2
 Typ_Logi,No ,Yes
 Prm_Remesh ?
 Def_1
Cal_Fnc_AMAP_4,2,eq,1
:E END
:! 
:N Fnc_AMAP_3
:S    382,   179,   196
:T Cmd
:C )! Fnc_AMAP_3
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='ACLEAR'
:C )*GET,_z7,CPAR,1
:C )*GET,_z4,elem,,count
:C )/GO
Inp_P
 Cmd_AMAP
 Fld_2
 Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_*CPAR(2)
 Fld_4
 Typ_Def_*CPAR(3)
 Fld_5
 Typ_Def_*CPAR(4)
 Fld_6
 Typ_Def_*CPAR(5)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
:E END
:! 
:N Fnc_AMAP_4
:S    461,   154,   300
:T Cmd
:C )! Fnc_AMAP_4
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='ACLEAR'
:C )*GET,_z7,CPAR,1
:C )/GO
Inp_P
! Exclude_from_paths
 Cmd_ACLEAR
 Fld_2
 Typ_Def_*CPAR(1)
Cmd_)/NOPR
Cmd_)*GET,_z4,elem,,count
Cmd_)/GO
 Cmd_AMAP
 Fld_2
 Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_*CPAR(2)
 Fld_4
 Typ_Def_*CPAR(3)
 Fld_5
 Typ_Def_*CPAR(4)
 Fld_6
 Typ_Def_*CPAR(5)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
:E END
:! 
:N Fnc_AMESH
:S    491,   174,   310
:T Cmd_P
:C )! Fnc_AMESH
:C )/NOPR
:C )CMDEL,_Y
:C )CMDEL,_Y1
:C )CMDEL,_Y2
:C )/GO
:A     Free
:D Mesh Areas
:K #(PREP7)
:H Hlp_C_AMESH
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
! Exclude_from_paths
Cmd_ASEL
 Fld_5
  Typ_AREA
  Prm_[AMESH]  Pick or enter areas to be meshed
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,AREA
! Exclude_from_paths
Cmd_CHKMSH,'AREA'
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_AMESH_1
:E END
:! 
:N Fnc_AMESH4
:S    518,   200,   311
:T Cmd_P
:C )! Fnc_AMESH4
:C )/NOPR
:C )CMDEL,_Y
:C )CMDEL,_Y1
:C )CMDEL,_Y2
:C )/GO
:A 3 or 4 sided
:D Mesh Areas
:K #(PREP7+meshtool)
:P (mdl2d)
:H Hlp_C_AMESH
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
! Exclude_from_paths
Cmd_ASEL
 Fld_5
  Typ_AREA
  Prm_[AMESH]  Pick or enter areas to be meshed
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,AREA
! Exclude_from_paths
Cmd_CHKMSH,'AREA'
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_AMESH4_1
:E END
:! 
:N Fnc_AMESH4_1
:S    169,    66,    96
:T Cmd
:C )! Fnc_AMESH4_1
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*PAR(ABS(_CHKMSH))
Cal_Fnc_AMESH4_2,2,eq,0
Cal_Fnc_AMESH4_3,2,eq,1
:E END
:! 
:N Fnc_AMESH4_2
:S    469,   289,   173
:T Cmd
:C )! Fnc_AMESH4_2
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z9,common,,cfprp7,,int,107
:C )*IF,_z9,LT,1,THEN
:C )KEYW,KEY1,1
:C )_z9=0
:C )*ENDIF
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='ACLEAR'
:C )*GET,_z4,elem,,count
:C )_z7='_Y1'
:C )/GO
Inp_P
Cmd_MSHKEY,1
K_CM(KEY1)
Cmd_AMESH,_Y1
Cmd_MSHKEY
K_CM(KEY1)
 Fld_2
 Typ_Def_*PAR(_z9)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_AMESH4_3
:S    327,    66,   254
:T Cmd
:C )! Fnc_AMESH4_3
Inp_NOapply
Cmd_)/NOPR  ! MATCH ING GO IS IN CALLED GRANS
Cmd_)*SET,_z1
 Fld_0
 Typ_Lab
 Prm_Some of the picked areas are already meshed  
 Fld_2
 Prm_Do you want to remesh them ?
 Typ_Logi,No  ,Yes
 Def_1
Cal_Fnc_AMESH4_4,2,eq,0
Cal_Fnc_AMESH4_5,2,eq,1
:E END
:! 
:N Fnc_AMESH4_4
:S    637,   369,   261
:T Cmd
:C )! Fnc_AMESH4_4
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z9,common,,cfprp7,,int,107
:C )*IF,_z9,LT,1,THEN
:C )KEYW,KEY1,1
:C )_z9=0
:C )*ENDIF
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='ACLEAR'
:C )*GET,_z4,elem,,count
:C )_z7='_Y2'
:C )KEYW,KEY2,0
:C )*IF,_CHKMSH,EQ,-1,THEN
:C )KEYW,KEY2,1
:C )_z1=0
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)/GO
Cmd_MSHKEY,1
K_CM(KEY1+key2)
Cmd_! ANSYS MACRO CHKMSH CREATED COMPONENT _Y2
K_CM(key2)
Cmd_AMESH,_Y2
K_CM(key2)
Cmd_MSHKEY
K_CM(KEY1+key2)
 Fld_2
 Typ_Def_*PAR(_z9)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_AMESH4_5
:S    535,   264,   264
:T Cmd
:C )! Fnc_AMESH4_5
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z9,common,,cfprp7,,int,107
:C )*IF,_z9,LT,1,THEN
:C )KEYW,KEY1,1
:C )_z9=0
:C )*ENDIF
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='ACLEAR'
:C )_z7='_Y1'
:C )/GO
Inp_P
Cmd_)/GO
! Exclude_from_paths
Cmd_ACLEAR,_Y1
Cmd_)/NOPR
Cmd_)*GET,_z4,elem,,count
Cmd_)/GO
Cmd_MSHKEY,1
K_CM(KEY1)
Cmd_AMESH,_Y1
Cmd_MSHKEY
K_CM(KEY1)
 Fld_2
 Typ_Def_*PAR(_z9)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_AMESH_1
:S    165,    64,    94
:T Cmd
:C )! Fnc_AMESH_1
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*PAR(ABS(_CHKMSH))
Cal_Fnc_AMESH_2,2,eq,0
Cal_Fnc_AMESH_3,2,eq,1
:E END
:! 
:N Fnc_AMESH_2
:S    283,   175,   101
:T Cmd
:C )! Fnc_AMESH_2
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='ACLEAR'
:C )*GET,_z4,elem,,count
:C )_z7='_Y1'
:C )/GO
Inp_P
Cmd_AMESH,_Y1
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_AMESH_3
:S    358,    99,   252
:T Cmd
:C )! Fnc_AMESH_3
:D Remesh Entities
:H Hlp_UI_Dummy
Inp_NOapply
Cmd_)/NOPR  ! MATCH ING GO IS IN CALLED GRANS
Cmd_)*SET,_z1
 Fld_0
 Typ_Lab
 Prm_Some of the picked areas are already meshed  
 Fld_2
 Prm_Do you want to remesh them ?
 Typ_Logi,No  ,Yes
 Def_1
Cal_Fnc_AMESH_4,2,eq,0
Cal_Fnc_AMESH_5,2,eq,1
:E END
:! 
:N Fnc_AMESH_4
:S    441,   255,   179
:T Cmd
:C )! Fnc_AMESH_4
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='ACLEAR'
:C )*GET,_z4,elem,,count
:C )_z7='_Y2'
:C )KEYW,KEY1,0
:C )*IF,_CHKMSH,EQ,-1,THEN
:C )_z1=0
:C )KEYW,KEY1,1
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)/GO
Cmd_! ANSYS MACRO CHKMSH CREATED COMPONENT _Y2
K_CM(key1)
Cmd_AMESH,_Y2
K_CM(key1)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_AMESH_5
:S    349,   150,   192
:T Cmd
:C )! Fnc_AMESH_5
:C )/NOPR
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='ACLEAR'
:C )_z7='_Y1'
:C )/GO
Inp_P
Cmd_)/GO
! Exclude_from_paths
Cmd_ACLEAR,_Y1
Cmd_)/NOPR
Cmd_)*GET,_z4,elem,,count
Cmd_)/GO
Cmd_AMESH,_Y1
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_AMESH_m
:S    174,   140,    27
:T Cmd_P
:C )! Fnc_AMESH_m
:C MSHKEY,0
:A     Free
:D Mesh Areas
:K #(PREP7+meshtool)
:H Hlp_C_AMESH
Inp_P
Cmd_)!
Cal_Fnc_AMESH
:E END
:! 
:N Fnc_AMESHtar
:S    527,   207,   313
:T Cmd_P
:C )! Fnc_AMESHtar
:C )/NOPR
:C )CMDEL,_Y
:C )CMDEL,_Y1
:C )CMDEL,_Y2
:C )/GO
:A     Target Surf
:D Mesh Areas
:K #(PREP7+meshtool)
:P (mdl2d)
:H Hlp_C_AMESH
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
! Exclude_from_paths
Cmd_ASEL
 Fld_5
  Typ_AREA
  Prm_[AMESH]  Pick or enter areas to be meshed
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,AREA
! Exclude_from_paths
Cmd_CHKMSH,'AREA'
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_AMESHtar_1
:E END
:! 
:N Fnc_AMESHtar_1
:S    177,    70,   100
:T Cmd
:C )! Fnc_AMESHtar_1
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*PAR(ABS(_CHKMSH))
Cal_Fnc_AMESHtar_2,2,eq,0
Cal_Fnc_AMESHtar_3,2,eq,1
:E END
:! 
:N Fnc_AMESHtar_2
:S    473,   293,   173
:T Cmd
:C )! Fnc_AMESHtar_2
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z9,common,,cfprp7,,int,107
:C )*IF,_z9,LT,1,THEN
:C )KEYW,KEY1,1
:C )_z9=0
:C )*ENDIF
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='ACLEAR'
:C )*GET,_z4,elem,,count
:C )_z7='_Y1'
:C )/GO
Inp_P
Cmd_MSHKEY,2
K_CM(KEY1)
Cmd_AMESH,_Y1
Cmd_MSHKEY
K_CM(KEY1)
 Fld_2
 Typ_Def_*PAR(_z9)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_AMESHtar_3
:S    335,    70,   258
:T Cmd
:C )! Fnc_AMESHtar_3
Inp_NOapply
Cmd_)/NOPR  ! MATCH ING GO IS IN CALLED GRANS
Cmd_)*SET,_z1
 Fld_0
 Typ_Lab
 Prm_Some of the picked areas are already meshed  
 Fld_2
 Prm_Do you want to remesh them ?
 Typ_Logi,No  ,Yes
 Def_1
Cal_Fnc_AMESHtar_4,2,eq,0
Cal_Fnc_AMESHtar_5,2,eq,1
:E END
:! 
:N Fnc_AMESHtar_4
:S    641,   373,   261
:T Cmd
:C )! Fnc_AMESHtar_4
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z9,common,,cfprp7,,int,107
:C )*IF,_z9,LT,1,THEN
:C )KEYW,KEY1,1
:C )_z9=0
:C )*ENDIF
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='ACLEAR'
:C )*GET,_z4,elem,,count
:C )_z7='_Y2'
:C )KEYW,KEY2,0
:C )*IF,_CHKMSH,EQ,-1,THEN
:C )KEYW,KEY2,1
:C )_z1=0
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)/GO
Cmd_MSHKEY,2
K_CM(KEY1+key2)
Cmd_! ANSYS MACRO CHKMSH CREATED COMPONENT _Y2
K_CM(key2)
Cmd_AMESH,_Y2
K_CM(key2)
Cmd_MSHKEY
K_CM(KEY1+key2)
 Fld_2
 Typ_Def_*PAR(_z9)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_AMESHtar_5
:S    539,   268,   264
:T Cmd
:C )! Fnc_AMESHtar_5
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z9,common,,cfprp7,,int,107
:C )*IF,_z9,LT,1,THEN
:C )KEYW,KEY1,1
:C )_z9=0
:C )*ENDIF
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )_z2='ACLEAR'
:C )_z7='_Y1'
:C )/GO
Inp_P
Cmd_)/GO
! Exclude_from_paths
Cmd_ACLEAR,_Y1
Cmd_)/NOPR
Cmd_)*GET,_z4,elem,,count
Cmd_)/GO
Cmd_MSHKEY,2
K_CM(KEY1)
Cmd_AMESH,_Y1
Cmd_MSHKEY
K_CM(KEY1)
 Fld_2
 Typ_Def_*PAR(_z9)
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_chkelms,2,eq,1
Cal_Fnc_MESH_clnup,2,eq,0
:E END
:! 
:N Fnc_AMOR21
:S    204,    62,   135
:T Cmd
:C )! Fnc_AMOR21
Inp_P
Cmd_)/NOPR
Cmd_DAMORPH
 Fld_4
 Typ_Def_*PAR(_z1)
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
:E END
:! 
:N Fnc_AMOR22
:S    326,   101,   218
:T Cmd_P
:D Morphing on areas
:C )!Fnc_AMOR22
:H Hlp_C_DAMORPH
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y0,LINE
! Exclude_from_paths
Cmd_LSEL
 Fld_5
  Prm_[DAMORPH]  Pick or enter excluded lines from morphing
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/GO
Cal_Fnc_AMOR23
:E END
:! 
:N Fnc_AMOR23
:S    308,    62,   239
:T Cmd
:C )! Fnc_AMOR23
Inp_p
Cmd_)/NOPR
Cmd_DAMORPH
 Fld_3
 Typ_Def_all
 Fld_4
 Typ_Def_*PAR(_z1)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMSEL,S,_Y0
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y0
Cmd_)/GO
:E END
:! 
:N Fnc_AMORP1
:S    471,    99,   365
:T Cmd
:D Morphing on areas
:C )!Fnc_AMORP1
:H Hlp_C_DAMORPH
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_0
Typ_Lab
Prm_[DAMORPH] Morph mesh attached to areas
 Fld_2
  Prm_RMSHKY Remesh option key
  Typ_Lis_OptionB
  Lis_Morph or Remesh,0
  Lis_Remesh only    ,1
  Lis_Morph only     ,2
  Def_0
Cmd_)/GO
 Fld_0
  Typ_Sep
Fld_2
 Prm_Exclude lines from morphing?
 Typ_LOGI,No, Yes
 Def_0
Cal_Fnc_AMOR21,2,eq,0
Cal_Fnc_AMOR22,2,gt,0
:E END
:! 
:N Fnc_AMORPH
:S    346,   132,   207
:T Cmd_P
:A    Areas
:D Morphing on areas
:C )!Fnc_AMORPH
:H Hlp_C_DAMORPH
:K (PREP7+RESULTS)
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
! Exclude_from_paths
Cmd_ASEL
 Fld_5
  Prm_[DAMORPH]  Pick or enter areas for morphing
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/GO
Cal_Fnc_AMORP1
:E END
:! 
:N Fnc_ANORM
:S    318,   146,   165
:T Cmd_P
:C )! Fnc_ANORM
:A    Area Normals
:D Reorient Area Normals
:K #(PREP7)
:K #(priges)
:H Hlp_C_ANORM
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_[ANORM]  Pick or enter area having 'correct' normal direction
  Typ_AREA
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_ANORM2
:E End
:! 
:N Fnc_ANORM2
:S    274,   109,   158
:D Make area normals consistent
:T Cmd
:C )! Fnc_ANORM2
:H Hlp_C_ANORM
Cmd_ANORM
 Fld_0
 Typ_Lab
 Prm_[ANORM]  Make area normals consistent
 Fld_2
 Typ_Def_*PAR(_z1)
 Fld_3
 Prm_Suppress element reversal
 Typ_LOGI,No, Yes
 Def_0
:E End
:! 
:N Fnc_ANSYS_1st
:S    526,   184,   335
:T Command
:C )! Fnc_ANSYS_1st
:A Fnc_ANSYS_1st
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFRELAX
:H Hlp_C_MFCLEAR
:H Hlp_C_MFPS
:H Hlp_C_MFSORDER
Inp_P
Fld_0
  Typ_lab
Cmd_MFCL
 Fld_2
   Typ_Def_MFPS
Cmd_MFPS
 Fld_0
 Fld_2
  Typ_Def_group1
 Fld_3
  Typ_Def_ANSYS
 Fld_0
  Typ_Sep
Cmd_MFPS
 Fld_2
  Typ_Def_group2
 Fld_3
  Typ_Def_CFX
 Fld_0
  Typ_Sep
Cmd_MFSO
 Fld_2
  Typ_Def_group1
 Fld_3
  Typ_Def_group2
 Fld_0
  Typ_Sep
Cmd_MFRE
 Fld_2
 Typ_Def_ALL
 Fld_3
  Typ_Def_*PAR(_z1)
:E END
:! 
:N Fnc_ANTDIR
:S   1634,   266,  1361
:T Command
:C )! Fnc_ANTDIR
:C )/NOPR
:C )KEYW,HFFAR,0
:C )/GO
:A      Direct Gain
:D Compute Antenna Directive Gain
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PLHFFAR
:H Hlp_C_HFSYM
:H Hlp_C_HFANG
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_2
  Typ_Def_'DGAIN'
Cmd_)*CSET,2,2
 Fld_0
  Typ_Lab
  Prm_[PLHFFAR]  Compute Antenna Directive Gain
 Fld_2
  Prm_Lab       Plotting option:
   Typ_Lis_RadioB
    Lis_Rectangular plot,RECT
    Lis_Polar plot      ,POLAR
Cmd_)/GO
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cmd_HFANG
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFANG] Integral Interval of Radiation Surface
 Fld_2
  Prm_Lab        Command option
   Typ_Lis_OptionB
    Lis_ANGLE           ,ANGLE
    Lis_STAT            ,STAT
 Fld_3
  Prm_Phi1   Start angle: X to Y axis
  Typ_Real
  Def_0
 Fld_4
  Prm_Phi2     End angle: X to Y axis
  Typ_Real
  Def_360
 Fld_5
  Prm_Theta1  Start angle from Z axis
  Typ_Real
  Def_0
 Fld_6
  Prm_Theta2    End angle from Z axis
  Typ_Real
  Def_180
Cal_Fnc_PLHFFAR_1
:E End
:! 
:N Fnc_ANTDIR_L
:S   1632,   268,  1357
:T Command
:C )! Fnc_ANTDIR
:C )/NOPR
:C )KEYW,HFFAR,0
:C )/GO
:A      Direct Gain
:D Compute Antenna Directive Gain
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PLHFFAR
:H Hlp_C_HFSYM
:H Hlp_C_HFANG
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_2
  Typ_Def_'DGAIN'
Cmd_)*CSET,2,2
 Fld_0
  Typ_Lab
  Prm_[PRHFFAR]  Compute Antenna Directive Gain
 Fld_2
  Prm_Lab       Listing option 
   Typ_Lis_OptionB
    Lis_Directivity     ,MAX
    Lis_Directive Gain  ,RECT
Cmd_)/GO
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cmd_HFANG
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFANG] Integral Interval of Radiation Surface
 Fld_2
  Prm_Lab        Command option
   Typ_Lis_OptionB
    Lis_ANGLE           ,ANGLE
    Lis_STAT            ,STAT
 Fld_3
  Prm_Phi1   Start angle: X to Y axis
  Typ_Real
  Def_0
 Fld_4
  Prm_Phi2     End angle: X to Y axis
  Typ_Real
  Def_360
 Fld_5
  Prm_Theta1  Start angle from Z axis
  Typ_Real
  Def_0
 Fld_6
  Prm_Theta2    End angle from Z axis
  Typ_Real
  Def_180
Cal_Fnc_HFFAR_1
:E End
:! 
:N Fnc_ANTEFF
:S   1444,   196,  1241
:T Command
:A      Efficiency
:D Compute Antenna Efficiency
:C )! Fnc_ANTEFF
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PRHFFAR
Cmd_PRHFFAR
 Fld_0
  Typ_Lab
  Prm_[PRHFFAR]  Compute Antenna Efficiency
 Fld_2
  Typ_Def_'EFF'
 Fld_3
  Prm_Val      Input power (Watts)
  Typ_Real
  Def_0
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cmd_HFANG
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFANG] Integral Interval of Radiation Surface
 Fld_2
  Prm_Lab        Command option
   Typ_Lis_OptionB
    Lis_ANGLE           ,ANGLE
    Lis_STAT            ,STAT
 Fld_3
  Prm_Phi1   Start angle: X to Y axis
  Typ_Real
  Def_0
 Fld_4
  Prm_Phi2     End angle: X to Y axis
  Typ_Real
  Def_360
 Fld_5
  Prm_Theta1  Start angle from Z axis
  Typ_Real
  Def_0
 Fld_6
  Prm_Theta2    End angle from Z axis
  Typ_Real
  Def_180
:E End
:! 
:N Fnc_ANTPAT
:S   1123,   240,   876
:T Command
:C )! Fnc_ANTPAT
:C )/NOPR
:C )KEYW,HFFAR,0
:C )/GO
:A      Pattern
:D Compute Antenna Pattern
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PLHFFAR
:H Hlp_C_HFSYM
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_2
  Typ_Def_'PATT'
Cmd_)*CSET,2,2
 Fld_0
  Typ_Lab
  Prm_[PLHFFAR]  Compute Antenna Pattern
 Fld_2
  Prm_Lab      Plotting option:
   Typ_Lis_RadioB
    Lis_Rectangular plot,RECT
    Lis_Polar plot      ,POLAR
Cmd_)/GO
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cal_Fnc_PLHFFAR_1
:E End
:! 
:N Fnc_ANTPAT_L
:S   1090,   242,   841
:T Command
:C )! Fnc_ANTPAT
:C )/NOPR
:C )KEYW,HFFAR,0
:C )/GO
:A      Pattern
:D Compute Antenna Pattern
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PRHFFAR
:H Hlp_C_HFSYM
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_2
  Typ_Def_'PATT'
Cmd_)*CSET,2,2
 Fld_0
  Typ_Lab
  Prm_[PRHFFAR]  Compute Antenna Pattern
 Fld_2
  Prm_Lab       Listing option 
   Typ_Lis_OptionB
    Lis_Table values ,RECT
Cmd_)/GO
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cal_Fnc_HFFAR_1
:E End
:! 
:N Fnc_ANTPGAIN
:S   1450,   200,  1243
:T Command
:A      Power Gain
:D Compute Antenna Power Gain
:C )! Fnc_ANTPGAIN
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PRHFFAR
Cmd_PRHFFAR
 Fld_0
  Typ_Lab
  Prm_[PRHFFAR]  Compute Antenna Power Gain
 Fld_2
  Typ_Def_'PGAIN'
 Fld_3
  Prm_Val      Input power (Watts)
  Typ_Real
  Def_0
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cmd_HFANG
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFANG] Integral Interval of Radiation Surface
 Fld_2
  Prm_Lab        Command option
   Typ_Lis_OptionB
    Lis_ANGLE           ,ANGLE
    Lis_STAT            ,STAT
 Fld_3
  Prm_Phi1   Start angle: X to Y axis
  Typ_Real
  Def_0
 Fld_4
  Prm_Phi2     End angle: X to Y axis
  Typ_Real
  Def_360
 Fld_5
  Prm_Theta1  Start angle from Z axis
  Typ_Real
  Def_0
 Fld_6
  Prm_Theta2    End angle from Z axis
  Typ_Real
  Def_180
:E End
:! 
:N Fnc_ANTPRAD
:S   1395,   202,  1186
:T Command
:A      Rad Power
:D Compute Antenna Radiation Power
:C )! Fnc_ANTPRAD
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PRHFFAR
Cmd_PRHFFAR
 Fld_0
  Typ_Lab
  Prm_[PRHFFAR]  Compute Antenna Radiation Power
 Fld_2
  Typ_Def_'PRAD'
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cmd_HFANG
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFANG] Integral Interval of Radiation Surface
 Fld_2
  Prm_Lab        Command option
   Typ_Lis_OptionB
    Lis_ANGLE           ,ANGLE
    Lis_STAT            ,STAT
 Fld_3
  Prm_Phi1   Start angle: X to Y axis
  Typ_Real
  Def_0
 Fld_4
  Prm_Phi2     End angle: X to Y axis
  Typ_Real
  Def_360
 Fld_5
  Prm_Theta1  Start angle from Z axis
  Typ_Real
  Def_0
 Fld_6
  Prm_Theta2    End angle from Z axis
  Typ_Real
  Def_180
:E End
:! 
:N Fnc_ANTYPE
:S   1075,   805,   263
:T Cmd
:C )! Fnc_ANTYPE
:C )/NOPR
:C )keyw,flltrans,0
:C )KEYW,KEY1,0
:C )KEYW,KEY2,0
:C )KEYW,KEY3,0
:C )KEYW,KEY4,0
:C )*GET,_z1,ACTIVE,,KEYWORD,,STRUCTRL
:C )*GET,_z2,ACTIVE,,KEYWORD,,MAGNETIC
:C )*GET,_z3,ACTIVE,,KEYWORD,,FLUID
:C )*GET,_z4,ACTIVE,,KEYWORD,,CIRC    
:C )*GET,_z5,ACTIVE,,KEYWORD,,QUASISTA
:C )*GET,_z6,ACTIVE,,KEYWORD,,ELECCOND
:C )*IF,_z1,EQ,1,THEN
:C )   KEYW,KEY3,1
:C )*ELSEIF,_z2,EQ,1,THEN
:C )  KEYW,KEY3,1
:C )*ELSEIF,_z3,EQ,1,THEN
:C )   KEYW,KEY3,1
:C )*ELSEIF,_z4,EQ,1,THEN
:C )   KEYW,KEY3,1
:C )*ELSEIF,_z5,EQ,1,THEN
:C )   KEYW,KEY3,1
:C )*IF,_z6,EQ,1,THEN
:C )   KEYW,KEY4,1
:C )*ENDIF
:C )*ENDIF
:C )/GO
:A New Analysis
:D New Analysis
:K (lsdyna)
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_ANTYPE
Inp_P
Cmd_)/NOPR
Cmd_)KEYW,KEY1,1
 K_CM(structrl+thermal+electric+magnetic+fluid+cfd)
Cmd_)KEYW,KEY2,1
 K_CM(PR_STRUC*PR_THERM*PR_ELMAG*PR_FLUID*pr_set)
Cmd_)/GO
Cmd_)!
K_LN(SOLUTION+LSTEPGT1)
Cal_Fnc_ANTYPE_01
K_LN((SOLUTION*PREP7)+(lstepgt1))
Cal_Fnc_ANTYPE_02
:E End
:! 
:N Fnc_ANTYPE_01
:S    761,   118,   636
:T Command
:C )! Fnc_ANTYPE_01
:A    New Analysis
:D WARNING
:H Hlp_C_ANTYPE
Inp_P
Cmd_)/NOPR
Cmd_)_z1=' '
Cmd_)*CSET,100,101,'WARN',' '
Cmd_)*CSET,110,110,'Changing the analysis type is   '
Cmd_)*CSET,111,111,' only valid within the first    '
Cmd_)*CSET,112,112,' load step.    &'
Cmd_)*CSET,113,113,' Pressing OK will cause you to  '
Cmd_)*CSET,114,114,' exit and re-enter SOLUTION. Thi'
Cmd_)*CSET,115,115,'s will reset   &'
Cmd_)*CSET,116,116,' the load step count to 1       '
Cmd_)*CSET,117,117,' '
Cmd_)*CSET,118,118,' '
Cmd_)*CSET,119,127,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,128,136,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,137,139,' ',' ',' '
Cmd_)/GO
Cal_Fnc_Message
Cal_Fnc_ANTYPE_02
:E End
:! 
:N Fnc_ANTYPE_02
:S   1540,   123,  1410
:T Command
:C )! Fnc_ANTYPE_02
:A    New Analysis
:D New Analysis
:H Hlp_C_ANTYPE
Inp_NoApply
! Exclude_from_paths
Cmd_FINISH
K_CM(SOLUTION+LSTEPGT1)
! Exclude_from_paths
Cmd_/SOLUTION
K_CM(SOLUTION+LSTEPGT1)
Cmd_ANTYPE
 Fld_2
  Prm_[ANTYPE]   Type of analysis
  Typ_LIS_RADIOB
  K_LN((STRUCTRL*MAGNETIC)+edgeelc+key1)*(PR_STRUC*PR_ELMAG*pr_set)
  K_LN((STRUCTRL*MAGNETIC)+edgeelc+key1)*(maghfe+KEY1)
  LIS_Static          ,0
  K_LN((THERMAL*ELECTRIC*FLUID)+transduc+key1)*((PR_THERM*PR_FLUID)+KEY1)
  LIS_Steady-State    ,0
  P_LN(LINPLUS*ELECMAG)
  K_LN((STRUCTRL*FLUID*EDGEELC)+transduc+key1)*((PR_STRUC*pr_set*MAGHFE)+KEY1)
  LIS_Modal           ,2
  P_LN(LINPLUS*ELECMAG)
  K_LN((KEY3+transduc)*((PR_STRUC*PR_ELMAG*PR_FLUID*pr_set)+KEY1))
  LIS_Harmonic        ,3
  K_LN((STRUCTRL*THERMAL*CIRC*MAGNETIC*FLUID)+edgeelc+key1)*(KEY2+KEY1)*(KEY4)
  K_LN((STRUCTRL*THERMAL*CIRC*MAGNETIC*FLUID)+edgeelc+key1)*(maghfe)*(KEY4)
  LIS_Transient       ,4
  P_LN(LINPLUS)
  K_LN((STRUCTRL)+transduc+key1)*((PR_STRUC*pr_set)+KEY1)
  LIS_Spectrum        ,8
  P_LN(LINPLUS)
  K_LN((STRUCTRL)+transduc+key1)*((PR_STRUC*pr_set)+KEY1)
  LIS_Eigen Buckling  ,1
  P_LN(FULL_ANS)
  K_LN(THERMAL+transduc+key1)*((PR_THERM*pr_set)+KEY1)*PR_THERM
  LIS_Substructuring  ,7
  K_LN((STRUCTRL+thermal+pr_therm)+transduc+key1)*((PR_STRUC+pr_therm)+KEY1)
  LIS_Substructuring/CMS,7
  Def_*GET(ACTIVE,,ANTYPE)
Cal_REFRESH,2,ne,4
P_LN(LINPLUS*ELECMAG)
Cal_Fnc_An_Opts_4x,2,eq,4
P_LN(linplus+elecmag)
Cal_REFRESH,2,eq,4
:E END
:! 
:N Fnc_AOFFST
:S    301,   130,   164
:T Cmd_P
:C )! Fnc_AOFFST
:A By Offset
:D Create Area by Offset
:K #(PREP7)
:H Hlp_C_AOFFST
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_AREA
  Prm_[AOFFST]  Pick or enter the base area from which to offset
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_AOFFST_2
:E END
:! 
:N Fnc_AOFFST_2
:S    415,   151,   257
:T Command
:C )! Fnc_AOFFST_2
:A By Offset
:D Create Area by Offset From Base Area
:K #(PREP7)
:H Hlp_C_AOFFST
Cmd_AOFFST
 Fld_0
  Typ_Lab
  Prm_[AOFFST]  Create Area by Offset From Base Area
 Fld_2
  Typ_INT
  Prm_NAREA  Base area
  Def_*PAR(_z1)
 Fld_3
  Typ_REAL
  Prm_DIST   Offset distance
  Def_Blank
 Fld_4
  Typ_INT
  Prm_KINC   Keypoint increment
  Def_Blank
:E END
:! 
:N Fnc_AOVLAP
:S    237,   118,   112
:T Cmd_P
:C )! Fnc_AOVLAP
:A Areas
:D Overlap Areas
:K #(PREP7)
:H Hlp_C_AOVLAP
Inp_P
Cmd_AOVLAP
 Fld_2
  Typ_AREA
  Prm_[AOVLAP]  Pick or enter areas to be overlapped
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_APLOT
:S    374,   109,   258
:T Cmd
:C )! Fnc_APLOT
:H Hlp_C_APLOT
:A Areas
:D Plot Specified Areas 
Cmd_APLOT
 Fld_0
  Typ_Lab
  Prm_[APLOT]  Plot Specified Areas                        
 Fld_2
  Typ_INT
  Prm_NA1   First area in range
  Def_1
 Fld_3 
  Typ_INT
  Prm_NA2   Last area in range
  Def_Blank
 Fld_4
  Typ_INT
  Prm_NINC  Range increment
  Def_1
:E End
:! 
:N Fnc_APLOT_deg
:S    515,   143,   365
:T Command
:C )! Fnc_APLOT_deg
:H Hlp_C_APLOT
:A Plot Degen Areas
:D Plot Areas and Show Degeneracies
Cmd_APLOT
 Fld_0
  Typ_Lab
  Prm_[APLOT],,,,DEGEN  Plot Areas and Show Degeneracies
 Fld_2
  Typ_INT
  Prm_NA1   First area in range
  Def_ALL
 Fld_3 
  Typ_INT
  Prm_NA2   Last area in range
  Def_Blank
 Fld_4
  Typ_INT
  Prm_NINC  Range increment
  Def_1
 Fld_5
  Typ_Def_DEGEN
 Fld_0
  Typ_Sep
 Fld_6
  Typ_REAL
  Prm_SCALE "Degen star" scale factor
  Def_0.075
:E End
:! 
:N Fnc_APPEND
:S   2293,   297,  1989
:T Command
:C )! Fnc_APPEND ORPHAN
:A    Append Selected
:D Append Results for Selected Subset
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,9
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,7
:C )_zc(1)='FIRST','LAST','NEXT',' ','NEAR','VELO','ACEL'
:C )/GO
:H Hlp_C_APPEND
:K #(POST1)
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[APPEND]  Append Results for Selected Subset
!
Fld_0
Typ_Sep
!  
 Fld_2
  K_FL(SPECTRUM*MODAL*BUCKLING*SUBSTRUC)
  Prm_LSTEP         Data set to read
  Typ_LIS_RADIOB
   LIS_First           ,1
   LIS_Last            ,2
   LIS_Next            ,3
   LIS_Specified set   ,99
 Fld_2
  K_FL(STATIC*TRNSIENT)
  Prm_LSTEP         Data set to read
  Typ_LIS_RADIOB
   LIS_First           ,1
   LIS_Last            ,2
   LIS_Next            ,3
   LIS_At specif time  ,4
   LIS_Near specif time,5
   LIS_Specified set   ,99
 Fld_2
  K_FL(HARMONIC)
  Prm_LSTEP         Data set to read
  Typ_LIS_RADIOB
   LIS_First           ,1
   LIS_Last            ,2
   LIS_Next            ,3
   LIS_Specified freq  ,4
   LIS_Specified set   ,99
!  
 Fld_6
  K_FL(STATIC*TRNSIENT)
  Prm_TIMFRQ        Specified time
  Typ_REAL
 Fld_6
  K_FL(HARMONIC)
  Prm_TIMFRQ        Specified freq
  Typ_REAL
!  
 Fld_0
  Typ_Lab
  Prm_Specified set -
 Fld_8
  K_FL(STATIC*SPECTRUM*TRNSIENT*HARMONIC*SUBSTRUC)
  Prm_  LSTEP,SBSTEP  LdStep, substep
  Typ_INT2
 Fld_8
  K_FL(MODAL*BUCKLING)
  Prm_  LSTEP,SBSTEP  LdStep, mode no.
  Typ_INT2
 Fld_0
  Typ_Lab
  Prm_                  - or -
 Fld_11
  Prm_  NSET          Set number
  Typ_INT
  Def_Blank
!  
Fld_0
Typ_Sep
!  
 Fld_10
  K_FL(HARMONIC*MODAL)
  Prm_FACT   Scale factor
  Typ_LIS_RADIOB
   LIS_Specified factor,-1
   LIS_(2pi*f)     VELO,6
   LIS_(2pi*f)**2  ACEL,7
 Fld_4
  K_FL(HARMONIC*MODAL)
  Prm_       Specified scale factor
  Typ_REAL
  Def_1.0
 Fld_4
  K_FL(STATIC*SPECTRUM*TRNSIENT*BUCKLING*SUBSTRUC)
  Prm_FACT   Scale factor
  Typ_REAL
  Def_1.0
!  
 Fld_5
  K_FL(HARMONIC)
  Prm_KIMG   Real or imaginary part
  Typ_LIS_OptionB
  LIS_Real part       ,0
  LIS_Imaginary part  ,1
 Fld_7
  K_FL(STRUCTRL*THERMAL)
  Prm_ANGLE  Circumferential location
  Typ_REAL
 Fld_0
  K_FL(STRUCTRL*THERMAL)
  Typ_Lab
  Prm_       - for harmonic elements only -
!
Fld_0
Cal_Fnc_APPEND_l,2,NE,99
Cal_Fnc_APPEND_n,2,EQ,99
:E End
:! 
:N Fnc_APPEND_l
:S    176,    77,    92
:T Command
:C )! Fnc_APPEND_l ORPHAN
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(9))
Cal_Fnc_APPEND_ll,2,GT,0
Cal_Fnc_APPEND_ln,2,LE,0
:E END
:! 
:N Fnc_APPEND_ll
:S    267,    79,   181
:T Command
:C )! Fnc_APPEND_ll ORPHAN
Inp_P
Cmd_)/GO
Cmd_APPEND
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_4
  Typ_Def_*PAR(_zc(_z(9)))
 Fld_5
  Typ_Def_*PAR(_z(4))
 Fld_6
  Typ_Def_*PAR(_z(5))
 Fld_7
  Typ_Def_*PAR(_z(6))
:E END
:! 
:N Fnc_APPEND_ln
:S    262,    79,   176
:T Command
:C )! Fnc_APPEND_ln ORPHAN
Inp_P
Cmd_)/GO
Cmd_APPEND
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_4
  Typ_Def_*PAR(_z(3))
 Fld_5
  Typ_Def_*PAR(_z(4))
 Fld_6
  Typ_Def_*PAR(_z(5))
 Fld_7
  Typ_Def_*PAR(_z(6))
:E END
:! 
:N Fnc_APPEND_n
:S    176,    77,    92
:T Command
:C )! Fnc_APPEND_n ORPHAN
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(9))
Cal_Fnc_APPEND_nl,2,GT,0
Cal_Fnc_APPEND_nn,2,LE,0
:E END
:! 
:N Fnc_APPEND_nl
:S    321,    79,   235
:T Command
:C )! Fnc_APPEND_nl ORPHAN
Inp_P
Cmd_)/GO
Cmd_APPEND
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_zc(_z(9)))
 Fld_5
  Typ_Def_*PAR(_z(4))
 Fld_6
  Typ_Def_*PAR(_z(5))
 Fld_7
  Typ_Def_*PAR(_z(6))
 Fld_8
  Typ_Def_*PAR(_z(10))
:E END
:! 
:N Fnc_APPEND_nn
:S    316,    79,   230
:T Command
:C )! Fnc_APPEND_nn ORPHAN
Inp_P
Cmd_)/GO
Cmd_APPEND
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_z(3))
 Fld_5
  Typ_Def_*PAR(_z(4))
 Fld_6
  Typ_Def_*PAR(_z(5))
 Fld_7
  Typ_Def_*PAR(_z(6))
 Fld_8
  Typ_Def_*PAR(_z(10))
:E END
:! 
:N Fnc_APTN
:S    230,   114,   109
:T Cmd_P
:C )! Fnc_APTN
:A Areas
:D Partition Areas
:K #(PREP7)
:H Hlp_C_APTN
Inp_P
Cmd_APTN
 Fld_2
  Typ_AREA
  Prm_[APTN]  Pick or enter areas to be partitioned
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ARC_opts
:S   1577,   480,  1090
:T Command
:C )! Fnc_ARC_opts
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,9
:C )*SET,_zc(1),'OFF','U','L','UX','UY','UZ','ROTX','ROTY','ROTZ'
:C )*GET,_z1,common,,stepcm,,int,96    ! Solution Termination key  
:C )*GET,_z2,common,,stepcm,,int,95    ! Degree of Freedom key     
:C )/GO
:A Arc-Length Opts
:D Arc-Length Options
:K #(SOLUTION+STATIC)
:K #((pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL)
:P (FULL_ANS)
:H Hlp_UI_arcopts
Inp_NoApply
Cmd_ARCLEN
Fld_0
Typ_Lab
 Prm_[ARCLEN] [ARCTRM]  Arc-Length Options
Fld_0
Typ_Sep
Fld_0
 Typ_Lab
 Prm_[ARCLEN]  Activates Arc-Length Method
Fld_2
 Prm_KEY     Arc-length method on/off
 Typ_LOGI,Off  ,On
 Def_*GET(common,,stepcm,,int,70)
Fld_0
 Typ_Lab
 Prm_Arc-length radius multipliers
Fld_3
 Prm_MAXARC  Maximum multiplier 
 Typ_REAL
 Def_*GET(common,,stepcm,,real,214)
Fld_4
 Prm_MINARC  Minimum multiplier
 Typ_REAL
 Def_*GET(common,,stepcm,,real,213)
Fld_0
Typ_Sep
!
Cmd_ARCTRM
Fld_0
 Typ_Lab
 Prm_[ARCTRM] Arc-Length Solution Termination Controls
Fld_2
 Prm_Lab   Terminate solution at
 Typ_LIS_OPTIONB
  LIS_No termination  ,OFF
  LIS_First limit pt  ,L  
  LIS_Displacement lim,U
  Def_*PAR(_zc(_z1+1))
Fld_0
 Typ_Lab
 Prm_For termination at displacement limit (U)
Fld_3
 Prm_ VAL   Max desired U (abs val)
 Typ_REAL
 Def_*GET(common,,stepcm,,real,219)
Fld_4
 Prm_ NODE  Node number for VAL
 Typ_INT
 Def_*GET(common,,stepcm,,int,97)
Fld_5
 Prm_ DOF   Degree of freedom
 Typ_LIS_OPTIONB
  LIS_UX
  LIS_UY
  LIS_UZ
  LIS_ROTX
  LIS_ROTY
  LIS_ROTZ
  Def_*PAR(_zc(_z2+3))
:E END
:! 
:N Fnc_AREF
:S    451,   130,   314
:T Cmd_P
:A    Areas
:D Refine mesh at areas
:C )!Fnc_AREF
:C )/NOPR
:C )/GO
:H Hlp_C_AREFINE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
! Exclude_from_paths
Cmd_ASEL
 Fld_5
  Prm_[AREF]  Pick or enter areas for refinement
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,AREA
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_AREF_1
:E END
:! 
:N Fnc_AREF_1
:S    563,   142,   414
:T Cmd
:A Refine Mesh at AREA
:D Refine Mesh at Area
:C )!Fnc_AREF_1
:C )/NOPR
:C )/GO
:H Hlp_C_AREFINE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_0
Typ_Lab
Prm_[AREF] Refine mesh at areas
 Fld_2
  Prm_LEVEL   Level of refinement
  Typ_Lis_OptionB
  Lis_1 (Minimal),1
  Lis_2     ,2
  Lis_3     ,3
  Lis_4     ,4
  Lis_5 (Maximum),5
  Def_1
Cmd_LSCLEAR,FE
K_CM(PR_SGUI)
Cmd_MTchgmsh
K_CM(PR_SGUI)
Cmd_)/GO
Fld_2
 K_FL(pr_sgui)
 Prm_Advanced options
 Typ_LOGI,No, Yes
 Def_0
Cal_Fnc_AREF_2a,2,eq,0
Cal_Fnc_AREF_2b,2,eq,1
:E END
:! 
:N Fnc_AREF_2a
:S    280,    64,   209
:T Cmd
:C )! Fnc_AREF_2a
Inp_p
Cmd_AREFINE
 Fld_2
 Typ_Def__Y1
 Fld_3
 Typ_Def_ 
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
 Typ_Def_0
 Fld_7
 Typ_Def_1
 Fld_8
 Typ_Def_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_AREF_2b
:S    625,   122,   496
:T Cmd
:D Refine mesh at areas advanced options
:C )! Fnc_AREF_2b
:H Hlp_C_AREFINE
Cmd_AREFINE
 Fld_2
 Typ_Def__Y1
 Fld_3
 Typ_Def_ 
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
  Prm_DEPTH   Depth of refinement
  Typ_INT
  Def_0
 Fld_7
  Prm_POST    Postprocessing
  Typ_Lis_OptionB
  Lis_Off             ,0
  Lis_Cleanup + Smooth,1
  Lis_Smooth          ,2
   Def_1
 Fld_8
  Prm_RETAIN  Retain Quads
  Typ_LOGI,No    ,Yes
   Def_1
Fld_0
  Typ_Lab
  Prm_        Note: This option is only valid with an all quad mesh.
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_AREMESH
:S    482,   103,   372
:T Cmd
:A Create Rezone Area
:D Create an area zone
:K #(PREP7)
Inp_NoApply
! Exclude_from_paths
Cmd_/UI,COLL,0
Fld_0
 Typ_Lab
 Prm_[AREMESH] Generate an area in which to create a new mesh for rezoning
! Exclude_from_paths
Cmd_CMDEL,REZONE_CM
Cmd_AREMESH
 Fld_2
  Prm_Combine line segments using
  Typ_Lis_OptionB
      Lis_End to End,0
      Lis_None,-1
 Fld_3
  Prm_Maximum angle of logic fit lines
  Typ_Int
   Def_30
Cmd_/UI,COLL,1
:E End
:! 
:N Fnc_AREVERSE
:S    467,   151,   309
:T Cmd_P
:C )! Fnc_AREVERSE
:A of Areas    
:D Reverse Area Normals
:K #(PREP7)
:K #(priges)
:H Hlp_C_AREVERSE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
! Exclude_from_paths
Cmd_ASEL
 Fld_5
  Prm_[AREVERSE]  Pick or enter areas to reverse
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,AREA
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_AREVERSE2
:E End
:! 
:N Fnc_AREVERSE2
:S    324,   111,   206
:T Cmd
:D Reverse area normals
:C )! Fnc_AREVERSE2
:H Hlp_C_AREVERSE2
Cmd_AREVERSE
 Fld_0
 Typ_Lab
 Prm_[AREVERSE]  Reverse area normals
 Fld_2
 Typ_Def__Y1
 Fld_3
 Prm_Suppress element reversal
 Typ_LOGI,No, Yes
 Def_0
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E End
:! 
:N Fnc_AROTAT
:S    426,   186,   233
:T Cmd_P
:C )! Fnc_AROTAT
:C )! Lines and Keypoints for AROTAT command below
:A    About Axis
:D Sweep Lines about Axis
:K #(PREP7)
:H Hlp_C_AROTAT
Inp_P
Cmd_)!
 Fld_2
  Typ_LINE
  Prm_[AROTAT]  Pick or enter lines to be swept about axis
  Min_1
  Cnt_s
  PCN_1
  PFM_1
 Fld_8
  Typ_KEYP
  Prm_Pick or enter two keypoints defining the axis
  Min_2
  Cnt_2
  PFM_1
Cal_Fnc_AROTAT_2
:E END
:! 
:N Fnc_AROTAT_2
:S    395,   141,   247
:T Command
:C )! Fnc_AROTAT_2
:A    About Axis
:D Sweep Lines about Axis
:K #(PREP7)
:H Hlp_C_AROTAT
Cmd_AROTAT
 Fld_0
  Typ_Lab
  Prm_[AROTAT]  Sweep Lines about Axis
 Fld_2
  Typ_Def_P51X
 Fld_8
  Typ_Def_P51X
 Fld_10
  Typ_REAL
  Prm_ARC        Arc length in degrees
  Def_360
 Fld_11
  Typ_INT
  Prm_NSEG       No. of area segments
  Def_Blank
:E END
:! 
:N Fnc_ARRAY_ADD
:S    624,   126,   491
:T Cmd
:C )! Fnc_ARRAY_ADD
:A Add New Array
:D Add New Array Parameter
:H Hlp_C_*DIM
Cmd_*DIM
Fld_0
Typ_Lab
Prm_[*DIM]
 Fld_2
Prm_Par     Parameter name 
  Typ_CHAR,32,33
 Fld_3
Prm_Type    Parameter type
  Typ_Lis_Radiob
LIS_Array ,"ARRAY"
LIS_Table ,"TABLE"
LIS_Character Array ,"CHAR"
 Fld_4
Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_0
  Typ_Lab
  Prm_      For Type="TABLE" only:
 Fld_7
Prm_Var1  Row Variable
  Typ_Char,8
 Fld_8
Prm_Var2  Column Variable
  Typ_Char,8
 Fld_9
Prm_Var3  Plane Variable
  Typ_Char,8
Cmd_)*STATUS,,, ,,, ,,,  ,,, ,,, ,1
:E END
:! 
:N Fnc_ARSCAL
:S    291,   154,   130
:T Cmd_P
:C )! Fnc_ARSCAL
:C )! Areas for ARSCAL command below
:A Areas
:D Scale Areas
:K #(PREP7)
:H Hlp_C_ARSCALE
Inp_P
Cmd_)!
 Fld_2
  Typ_AREA
  Prm_[ARSCALE]  Pick or enter areas to be scaled
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_ARSCAL_2
:E END
:! 
:N Fnc_ARSCAL_2
:S    644,   123,   514
:T Command
:C )! Fnc_ARSCAL_2
:A Areas
:D Scale Areas
:K #(PREP7)
:H Hlp_C_ARSCALE
Cmd_ARSCALE
 Fld_0
  Typ_Lab
  Prm_[ARSCALE]  Scale Areas
 Fld_2
  Typ_Def_P51X
 Fld_5
  Typ_REAL3
  Prm_RX,RY,RZ  Scale factors -
  Def_1.0,1.0,1.0
 Fld_0
  Typ_Lab 
  Prm_          - in the active coordinate system
 Fld_8
  Typ_INT
  Prm_KINC   Keypoint increment
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_9
 Prm_NOELEM  Items to be scaled
  Typ_LIS_OptionB
  LIS_Areas and mesh  ,0
  LIS_Areas only      ,1
 Fld_10
  Prm_IMOVE  Existing areas will be
  Typ_LIS_OptionB
  LIS_Copied          ,0
  LIS_Moved           ,1
:E END
:! 
:N Fnc_ARSYM
:S    301,   164,   130
:T Cmd_P
:C )! Fnc_ARSYM
:C )! Areas for ARSYM command below
:A Areas
:D Reflect Areas
:K #(PREP7)
:K #(priges)
:H Hlp_C_ARSYM
Inp_P
Cmd_)!
 Fld_3
  Typ_AREA
  Prm_[ARSYM]  Pick or enter areas to be reflected
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_ARSYM_2
:E END
:! 
:N Fnc_ARSYM_2
:S    637,   121,   509
:T Command
:C )! Fnc_ARSYM_2
:A Areas
:D Reflect Areas
:K #(PREP7)
:H Hlp_C_ARSYM
Cmd_ARSYM
 Fld_0
  Typ_Lab
  Prm_[ARSYM]  Reflect Areas
 Fld_2
  Prm_Ncomp  Plane of symmetry
  Typ_LIS_RADIOB
  LIS_Y-Z plane      X,X
  LIS_X-Z plane      Y,Y
  LIS_X-Y plane      Z,Z
 Fld_3
  Typ_Def_P51X
 Fld_6
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_7
 Prm_NOELEM  Items to be reflected
  Typ_LIS_OptionB
  LIS_Areas and mesh  ,0
  LIS_Areas only      ,1
 Fld_8
  Prm_IMOVE   Existing areas will be
  Typ_LIS_OptionB
  LIS_Copied          ,0
  LIS_Moved           ,1
:E END
:! 
:N Fnc_ASBA
:S    324,   113,   204
:T Cmd_P
:C )! Fnc_ASBA
:A Areas
:D Subtract Areas
:K #(PREP7)
:H Hlp_C_ASBA
Inp_P
Cmd_ASBA
 Fld_2
  Typ_AREA
  Prm_[ASBA]  Pick or enter base areas from which to subtract
  Min_1
  Cnt_s
  PCN_1
 Fld_3
  Typ_AREA
  Prm_Pick or enter areas to be subtracted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ASBA_div
:S    326,   133,   186
:T Cmd_P
:C )! Fnc_ASBA_div
:A Area by Area
:D Divide Area by Area
:K #(PREP7)
:H Hlp_C_ASBA
Inp_P
Cmd_ASBA
 Fld_2
  Typ_AREA
  Prm_[ASBA]  Pick or enter areas to be divided
  Min_1
  Cnt_s
  PCN_1
 Fld_3
  Typ_AREA
  Prm_Pick or enter the dividing areas
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ASBA_div_op2
:S    688,   156,   525
:T Command
:C )! Fnc_ASBA_div_op2
:A Area by Area
:D Divide Area by Area with Options
:K #(PREP7)
:H Hlp_C_ASBA
Cmd_ASBA
 Fld_0
  Typ_Lab
  Prm_[ASBA]  Divide Area by Area with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_P51X
 Fld_4
  Prm_SEPO  Intersect bndry will have
  Typ_LIS_OptionB
  LIS_Shared entities ," "
  LIS_Separate entity ,SEPO
 Fld_5
  Prm_KEEP1  Base areas will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
 Fld_6
  Prm_KEEP2  Subtracted areas will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_ASBA_div_opt
:S    421,   187,   227
:T Cmd_P
:C )! Fnc_ASBA_div_opt
:C )! Areas for ASBA command below
:A Area by Area
:D Divide Area by Area w/ Options
:K #(PREP7)
:H Hlp_C_ASBA
Inp_P
! 
Cmd_)!
 Fld_2
  Typ_AREA
  Prm_[ASBA]  Pick or enter areas to be divided
  Min_1
  Cnt_s
  PCN_1
  PFM_1
 Fld_3
  Typ_AREA
  Prm_Pick or enter the dividing areas
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_ASBA_div_op2
:E END
:! 
:N Fnc_ASBA_opt
:S    414,   167,   240
:T Cmd_P
:C )! Fnc_ASBA_opt
:C )! Areas for ASBA command below
:A Areas
:D Subtract Areas w/ Options
:K #(PREP7)
:H Hlp_C_ASBA
Inp_P
Cmd_)!
 Fld_2
  Typ_AREA
  Prm_[ASBA]  Pick or enter base areas from which to subtract
  Min_1
  Cnt_s
  PCN_1
  PFM_1
 Fld_3
  Typ_AREA
  Prm_Pick or enter areas to be subtracted
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_ASBA_opt_2
:E END
:! 
:N Fnc_ASBA_opt_2
:S    665,   138,   520
:T Command
:C )! Fnc_ASBA_opt_2
:A Areas
:D Subtract Areas w/ Options
:K #(PREP7)
:H Hlp_C_ASBA
Cmd_ASBA
 Fld_0
  Typ_Lab
  Prm_[ASBA]  Subtract Areas with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_P51X
 Fld_4
  Prm_SEPO  Intersect bndry will have
  Typ_LIS_OptionB
  LIS_Shared entities ," "
  LIS_Separate entity ,SEPO
 Fld_5
  Prm_KEEP1  Base areas will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
 Fld_6
  Prm_KEEP2  Subtracted areas will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_ASBL_div
:S    326,   133,   186
:T Cmd_P
:C )! Fnc_ASBL_div
:A Area by Line
:D Divide Area by Line
:K #(PREP7)
:H Hlp_C_ASBL
Inp_P
Cmd_ASBL
 Fld_2
  Typ_AREA
  Prm_[ASBL]  Pick or enter areas to be divided
  Min_1
  Cnt_s
  Pcn_1
 Fld_3
  Typ_LINE
  Prm_Pick or enter the dividing lines
  Min_1
  Cnt_s
  Pcn_1
:E END
:! 
:N Fnc_ASBL_div_op2
:S    570,   156,   407
:T Command
:C )! Fnc_ASBL_div_op2
:A Area by Line
:D Divide Area by Line with Options
:K #(PREP7)
:H Hlp_C_ASBL
Cmd_ASBL
 Fld_0
  Typ_Lab
  Prm_[ASBL]  Divide Area by Line with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_P51X
 Fld_5
  Prm_KEEPA  Base areas will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
 Fld_6
  Prm_KEEPL  Subtracted lines will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_ASBL_div_opt
:S    425,   191,   227
:T Cmd_P
:C )! Fnc_ASBL_div_opt
:C )! Areas and Lines for ASBL command
:A Area by Line
:D Divide Area by Line w/ Options
:K #(PREP7)
:H Hlp_C_ASBL
Inp_P
! 
Cmd_)!
 Fld_2
  Typ_AREA
  Prm_[ASBL]  Pick or enter areas to be divided
  Min_1
  Cnt_s
  PCN_1
  PFM_1
 Fld_3
  Typ_LINE
  Prm_Pick or enter the dividing lines
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_ASBL_div_op2
:E END
:! 
:N Fnc_ASBV_div
:S    343,   148,   188
:T Cmd_P
:C )! Fnc_ASBV_div
:A Area by Volume
:D Divide Area by Volume
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_ASBV
Inp_P
Cmd_ASBV
 Fld_2
  Typ_AREA
  Prm_[ASBV]  Pick or enter areas to be divided
  Min_1
  Cnt_s
  Pcn_1
 Fld_3
  Typ_VOLU
  Prm_Pick or enter the dividing volumes
  Min_1
  Cnt_s
  Pcn_1
:E END
:! 
:N Fnc_ASBV_div_igs
:S    352,   157,   188
:T Cmd_P
:C )! Fnc_ASBV_div_igs
:A    Area by Volu
:D Divide Area by Volume
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_ASBV
Inp_P
Cmd_ASBV
 Fld_2
  Typ_AREA
  Prm_[ASBV]  Pick or enter areas to be divided
  Min_1
  Cnt_s
  Pcn_1
 Fld_3
  Typ_VOLU
  Prm_Pick or enter the dividing volumes
  Min_1
  Cnt_s
  Pcn_1
:E END
:! 
:N Fnc_ASBV_div_op2
:S    704,   171,   526
:T Command
:C )! Fnc_ASBV_div_op2
:A Area by Volume
:D Divide Area by Volume with Options
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_ASBV
Cmd_ASBV
 Fld_0
  Typ_Lab
  Prm_[ASBV]  Divide Area by Volume with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_P51X
 Fld_4
  Prm_SEPO  Intersect bndry will have
  Typ_LIS_OptionB
  LIS_Shared entities ," "
  LIS_Separate entity ,SEPO
 Fld_5
  Prm_KEEPA  Base areas will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
 Fld_6
  Prm_KEEPV  Subtracted vols will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_ASBV_div_opt
:S    444,   208,   229
:T Cmd_P
:C )! Fnc_ASBV_div_opt
:C )! Areas and Volumes for ASBV command
:A Area by Volume
:D Divide Area by Volume w/ Options
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_ASBV
Inp_P
! 
Cmd_)!
 Fld_2
  Typ_AREA
  Prm_[ASBV]  Pick or enter areas to be divided
  Min_1
  Cnt_s
  PCN_1
  PFM_1
 Fld_3
  Typ_VOLU
  Prm_Pick or enter the dividing volumes
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_ASBV_div_op2
:E END
:! 
:N Fnc_ASBW_div
:S    253,   141,   105
:T Cmd_P
:C )! Fnc_ASBW_div
:A Area by WrkPlane
:D Divide Area by WrkPlane
:K #(PREP7)
:H Hlp_C_ASBW
Inp_P
Cmd_ASBW
 Fld_2
  Typ_AREA
  Prm_[ASBW]  Pick or enter areas to be divided
  Min_1
  Cnt_s
  Pcn_1
:E END
:! 
:N Fnc_ASBW_div_igs
:S    264,   152,   105
:T Cmd_P
:C )! Fnc_ASBW_div_igs
:A    Area by WrkPlane
:D Divide Area by WrkPlane
:K #(PREP7)
:H Hlp_C_ASBW
Inp_P
Cmd_ASBW
 Fld_2
  Typ_AREA
  Prm_[ASBW]  Pick or enter areas to be divided
  Min_1
  Cnt_s
  Pcn_1
:E END
:! 
:N Fnc_ASBW_div_op2
:S    533,   164,   362
:T Command
:C )! Fnc_ASBW_div_op2
:A Area by WrkPlane
:D Divide Area by WrkPlane with Options
:K #(PREP7)
:H Hlp_C_ASBW
Cmd_ASBW
 Fld_0
  Typ_Lab
  Prm_[ASBW]  Divide Area by WrkPlane with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Prm_SEPO  Intersect bndry will have
  Typ_LIS_OptionB
  LIS_Shared entities ," "
  LIS_Separate entity ,SEPO
 Fld_4
  Prm_KEEP  Original areas will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_ASBW_div_opt
:S    334,   189,   138
:T Cmd_P
:C )! Fnc_ASBW_div_opt
:C )! Areas for ASBW command
:A Area by WrkPlane
:D Divide Area by WrkPlane w/ Options
:K #(PREP7)
:H Hlp_C_ASBW
Inp_P
! 
Cmd_)!
 Fld_2
  Typ_AREA
  Prm_[ASBW]  Pick or enter areas to be divided
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_ASBW_div_op2
:E END
:! 
:N Fnc_ASELH_A
:S    303,   126,   170
:T Cmd_P
:C )! Fnc_ASEL_A
:A Also select areas
:D Also select areas
:H Hlp_UI_AREAHARD
Inp_P
Cmd_ASEL
 Fld_2
  Typ_DEF_A
 Fld_3
  Typ_DEF_HPT
 Fld_5
Prm_[ASEL],A  Pick or enter areas to be added to be selected set
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  Sel_U
:E END
:! 
:N Fnc_ASELH_R
:S    275,   120,   148
:T Cmd_P
:C )! Fnc_ASEL_R
:A Reselect areas
:D Reselect areas
:H Hlp_UI_AREAHARD
Inp_P
Cmd_ASEL
 Fld_2
  Typ_DEF_R
 Fld_3
  Typ_DEF_HPT
 Fld_5
Prm_[ASEL],R  Pick or enter areas to be reselected
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ASELH_S
:S    277,   116,   154
:T Cmd_P
:C )! Fnc_ASEL_S
:A Select areas
:D Select areas
:H Hlp_UI_AREAHARD
Inp_P
Cmd_ASEL
 Fld_2
  Typ_DEF_S
 Fld_3
  Typ_DEF_HPT
 Fld_5
Prm_[ASEL],S  Pick or enter areas to be selected
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  Sel_D
:E END
:! 
:N Fnc_ASELH_U
:S    275,   120,   148
:T Cmd_P
:C )! Fnc_ASEL_U
:A Unselect areas
:D Unselect areas
:H Hlp_UI_AREAHARD
Inp_P
Cmd_ASEL
 Fld_2
  Typ_DEF_U
 Fld_3
  Typ_DEF_HPT
 Fld_5
Prm_[ASEL],U  Pick or enter areas to be unselected
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ASEL_A
:S    276,   120,   149
:T Cmd_P
:C )! Fnc_ASEL_A
:A Also select areas
:D Also select areas
:H Hlp_C_ASEL
Inp_P
Cmd_ASEL
 Fld_2
  Typ_DEF_A
 Fld_5
Prm_[ASEL],A  Pick or enter areas to be added to be selected set
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  Sel_U
:E END
:! 
:N Fnc_ASEL_R
:S    248,   114,   127
:T Cmd_P
:C )! Fnc_ASEL_R
:A Reselect areas
:D Reselect areas
:H Hlp_C_ASEL
Inp_P
Cmd_ASEL
 Fld_2
  Typ_DEF_R
 Fld_5
Prm_[ASEL],R  Pick or enter areas to be reselected
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ASEL_S
:S    250,   110,   133
:T Cmd_P
:C )! Fnc_ASEL_S
:A Select areas
:D Select areas
:H Hlp_C_ASEL
Inp_P
Cmd_ASEL
 Fld_2
  Typ_DEF_S
 Fld_5
Prm_[ASEL],S  Pick or enter areas to be selected
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  Sel_D
:E END
:! 
:N Fnc_ASEL_U
:S    248,   114,   127
:T Cmd_P
:C )! Fnc_ASEL_U
:A Unselect areas
:D Unselect areas
:H Hlp_C_ASEL
Inp_P
Cmd_ASEL
 Fld_2
  Typ_DEF_U
 Fld_5
Prm_[ASEL],U  Pick or enter areas to be unselected
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ASKIN
:S    247,   130,   110
:T Cmd_P
:C )! Fnc_ASKIN
:A By Skinning
:D Create Area / Skinning
:K #(PREP7)
:H Hlp_C_ASKIN
Inp_P
Cmd_ASKIN
 Fld_2
  Typ_LINE
  Prm_[ASKIN]  Pick or enter guiding lines for skinned area
  Min_2
  Cnt_s
:E END
:! 
:N Fnc_ASUB
:S    339,   131,   201
:T Cmd_P
:C )! Fnc_ASUB
:A Overlaid on Area
:D Area Overlaid on Area
:K #(PREP7)
:H Hlp_C_ASUB
Inp_P
Cmd_ASUB
 Fld_2
  Typ_AREA
  Prm_[ASUB]  Pick or enter the base area on which to overlay
  Min_1
  Cnt_1
  PFM_2
 Fld_3
  Typ_KEYP
  Prm_Pick or enter keypoints defining new area
  Min_3
  Cnt_s
:E END
:! 
:N Fnc_ASUM
:S    211,   124,    80
:T Command
:C )! Fnc_LANG_2
:A Of Areas
:D Calc Geom of Areas
:K #(PREP7)
:H Hlp_C_ASUM
Cmd_ASUM
  Fld_2
  TYP_LIS_RADIOB
  LIS_Normal, DEFAULT
  Lis_Fine facets, FINE
:E END
:! 
:N Fnc_ATAN
:S    473,   179,   287
:T Command
:C )! Fnc_ATAN
:A Arctangent
:D Arctangent of Complex Variable
:K (lsdyna)
:K #(POST26+HARMONIC)
:P (LINPLUS*ELECMAG)
:H Hlp_C_ATAN
Cmd_ATAN
Fld_0
Typ_Lab
Prm_[ATAN]           IR = ATAN(FACTA * b/a)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_ATRAN
:S    304,   165,   132
:T Cmd_P
:C )! Fnc_ATRAN
:C )! Areas for ATRAN command below
:A Areas
:D Transfer Areas
:K #(PREP7)
:K #(priges)
:H Hlp_C_ATRAN
Inp_P
Cmd_)!
 Fld_3
  Typ_AREA
  Prm_[ATRAN]  Pick or enter areas to be transferred
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_ATRAN_2
:E END
:! 
:N Fnc_ATRAN_2
:S    646,   135,   504
:T Command
:C )! Fnc_ATRAN_2
:A Areas
:D Coord Sys Transfer of Areas
:K #(PREP7)
:H Hlp_C_ATRAN
Cmd_ATRAN
 Fld_0
  Typ_Lab
  Prm_[ATRAN]  Coordinate System Transfer of Areas
 Fld_2
  Prm_KCNTO  No. of coordinate sys -
  Typ_INT
 Fld_0
  Typ_Lab
  Prm_       - areas are to be transferred to
 Fld_3
  Typ_Def_P51X
 Fld_6
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_7
  Prm_NOELEM  Items to be transferred
  Typ_LIS_OptionB
  LIS_Areas and mesh  ,0
  LIS_Areas only      ,1
 Fld_8
  Prm_IMOVE   Existing areas will be
  Typ_LIS_OptionB
  LIS_Copied          ,0
  LIS_Moved           ,1
:E END
:! 
:N Fnc_An_Opts
:S    892,   280,   605
:T Command
:C )! Fnc_An_Opts
:A Analysis Options
:C )/nopr
:C )KEYW,PURETHRM,0
:C )*get,_z1,active,,antype
:C )/go
:K (lsdyna)
:K #(PREP7*(SOLUTION+lstepgt1+(pr_cfd+cfd*PR_STRUC*PR_FLUID*PR_THERM)))
:K #(expass)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z1)
Cmd_)KEYW,KEY1,1
 K_CM(structrl+thermal+electric+magnetic+fluid+cfd)
Cmd_)KEYW,PURETHRM,1
 K_CM(structrl+electric+magnetic+fluid+cfd+THERMAL)
Cmd_)/GO
Cmd_)!
K_LN(STRUCTRL*PR_STRUC+pr_therm)+electric+magnetic+fluid+cfd+thermal
Cal_Fnc_An_Sub_CMS,2,EQ,7,2
K_LN(ELECTRIC*MAGNETIC*FLUID*CFD*THERMAL*KEY1)*PR_THERM
Cal_Fnc_An_Opts_%(I)_z1%,2,EQ,7,2
Cal_Fnc_An_Opts_%(I)_z1%,2,NE,7,2
! Cust_Cal_Fnc_An_Opts_0
! Cust_Cal_Fnc_An_Opts_1
! Cust_Cal_Fnc_An_Opts_2
! Cust_Cal_Fnc_An_Opts_3
! Cust_Cal_Fnc_An_Opts_4
! Cust_Cal_Fnc_An_Opts_7
! Cust_Cal_Fnc_An_Opts_8
:E END
:! 
:N Fnc_An_Opts_0
:S   7104,  3178,  3919
:T Command
:C )! Fnc_An_Opts_0
:C )/NOPR
:C )*GET,_z16,common,,anscom,,int,52
:C )KEYW,NLCNTRL,_z16
:C )*DEL,_zc
:C )*DIM,_zc,char,30
:C )*SET,_zc(1),'AUTO','FULL','MODI','INIT'
:C )*SET,_zc(5),'    ','    ' ,'JCG','PCG','PCG','ICCG','     ','JCG'
:C )*SET,_zc(13),'SPAR','    ','    ','DDS ','PCG','JCG','    ','QMR'
:C )*SET,_zc(21),'UNSY'
:C )*SET,_zc(22),'AUTO','NO','YES','AUTO','OOC','INCORE','    ','    '
:C )*GET,_z1,common,,stepcm,,int,1      ! Newton-Raphson option key 
:C )*GET,_z2,common,,stepcm,,int,69     ! Adaptive descent key     
:C )*GET,_z3,common,,soptcm,,int,39     ! Equation solver key
:C )*GET,_z7,common,,soptcm,,int,66     ! Auto Solve Method
:C )*GET,_z8,common,,stepcm,,int,138    ! pcg out-of-core key
:C )*GET,_z12,common,,stepcm,,int,134    ! pcg Elem by Elem key
:C )*GET,_z14,common,,soptcm,,int,108    ! nropt unsymmetric key
:C )*GET,_z15,common,,stepcm,,int,169   ! frontal was requested
:C )*GET,_z17,common,,soptcm,,int,163   ! pcg reduced IO key
:C )*GET,_z21,common,,soptcm,,int,133   ! cadoe_antype
:C )*GET,_z22,common,,soptcm,,int,166   ! pcg memory mode
:C )*GET,_z23,common,,stepcm,,int,257   ! sparse file save key
:C )*SET,_zc(28),'DEFA'
:C )*IF,_z21,EQ,0,THEN
:C )*SET,_zc(28),'VT'
:C )*ENDIF
:C )*SET,_zc(29),'DELE'
:C )*IF,_z23,EQ,1,THEN
:C )*SET,_zc(29),'KEEP'
:C )*ENDIF
:C )*IF,_z14,EQ,1,THEN
:C )*SET,_z1,20
:C )*ENDIF
:C )*IF,_z3,NE,3,THEN
:C )*SET,_zs,0
:C )*ENDIF
:C )*IF,_z3,EQ,0,THEN
:C )*IF,_z15,EQ,0,THEN
:C )*IF,_z16,EQ,1,THEN
:C )_z3=6
:C )*ENDIF
:C )*ENDIF
:C )*ENDIF
:C )*IF,_z8,EQ,1,THEN
:C )*SET,_z3,4
:C )*ENDIF
:C )*IF,_z7,EQ,1,THEN
:C )KEYW,KEY1,1
:C )_z3=1
:C )*GET,_z9,common,,stepcm,,real,230    
:C )*ELSE
:C )KEYW,KEY1,0
:C )*GET,_z9,common,,soptcm,,real,2
:C )*ENDIF
:C )*IF,_z2,EQ,-1,THEN
:C )_z4=' '
:C )*ELSEIF,_z2,EQ,1,THEN
:C )_z4='ON'
:C )*ELSE
:C )_z4='OFF'
:C )*ENDIF
:C )*GET,_z5,common,,stepcm,,int,2      ! Calculate prestress (y or n)  
:C )*IF,_z5,EQ,-1,THEN
:C )_z5=1
:C )*ELSE    
:C )_z5=0
:C )*ENDIF
:C )_zr1='*.rom'
:C )*GET,_z18,common,,soptcm,,int,161   ! PCGOPT level
:C )*IF,_z18,LE,1,THEN
:C )_z20=_z18
:C )*ELSEIF,_z18,EQ,3,THEN
:C )_z20=5
:C )*ELSE
:C )*GET,_z19,common,,soptcm,,int,116   ! PCGOPT level
:C )*IF,_z19,LE,1,THEN
:C )_z20=2
:C )*ELSEIF,_z19,EQ,2,THEN
:C )_z20=3
:C )*ELSE
:C )_z20=4
:C )*ENDIF
:C )*ENDIF
:C )_zcundoc='    '
:C )*IF,_z3,eq,0,then
:C )_zcundoc='FRONT'
:C )*ENDIF
:C )*IF,_z3,eq,1,then
:C )_zcundoc='ITER'
:C )*ENDIF
:C )*IF,_z3,eq,14,then
:C )_zcundoc='DSPARSE'
:C )*ENDIF
:C )*IF,_z3,eq,2,then
:C )_zcundoc='JCGOUT'
:C )*ENDIF
:C )*IF,_z3,eq,4,then
:C )_zcundoc='PCGOUT'
:C )*ENDIF
:C )*IF,_z3,eq,13,then
:C )_zcundoc='DJCG'
:C )*ENDIF
:C )*IF,_z3,eq,14,then
:C )_zcundoc='DPCG'
:C )*ENDIF
:C )*IF,_z3,eq,10,then
:C )_zcundoc='AMG'
:C )*ENDIF
:C )*IF,_zcundoc,ne,'    ',then
:C )*create,ansuitmp
:C )*msg,ui,_zcundoc,
:C )The equation solver was previously set to &
:C )%C.  This type is no longer supported.  &
:C )Please refer to the EQSLV command.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C )/GO
:D Static or Steady-State Analysis
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_UI_anopts0
Inp_NoApply
Cmd_NLGEOM
K_CM(purethrm)
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
P_CM(LINPLUS)
 Fld_0
  Typ_Lab
  Prm_Nonlinear Options
 Fld_2
  Prm_ [NLGEOM]  Large deform effects
  Typ_LOGI,Off,On
  Def_*GET(common,,soptcm,,int,2)
Cmd_NROPT
K_CM(elecstat*pmethod)
P_CM(THERMAL*ELECMAG*FULL_ANS)
 Fld_2
  Prm_ [NROPT]   Newton-Raphson option
  Typ_LIS_OPTIONB
  LIS_Program chosen  ,AUTO
  LIS_Full N-R        ,FULL
  LIS_Modified N-R    ,MODI
  LIS_Initial stiffnes,INIT
  LIS_Full N-R unsymm ,UNSY
  Def_*PAR(_zc(_z1+1))
 Fld_4
  Prm_           Adaptive descent
  Typ_LIS_OPTIONB
  LIS_ON if necessary ," "
  LIS_ON              ,ON
  LIS_OFF             ,OFF
  Def_*PAR(_z4)
Cmd_STAOPT
K_CM(elecstat*pmethod)
P_CM(THERMAL*ELECMAG*FULL_ANS)
 Fld_2
  Prm_ [STAOPT]  VT Speedup
  Typ_LIS_OPTIONB
  LIS_No              ,DEFA
  LIS_Yes             ,VT
  Def_*PAR(_zc(28))
Fld_0
Typ_SEP
Cmd_LUMPM
K_CM(purethrm)
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
P_CM(LINPLUS)
 Fld_0
  Typ_Lab
  Prm_Linear Options
 Fld_2
  Prm_ [LUMPM] Use lumped mass approx?
  Typ_LOGI,No,Yes
  Def_*GET(common,,stepcm,,int,3)
 Fld_0
K_FL(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
P_FL(LINPLUS)
  Typ_SEP
Cmd_EQSLV
P_CM(LINPLUS*THERMAL*ELECMAG)
 Fld_2
  Prm_[EQSLV]  Equation solver
  Typ_LIS_OPTIONB
  K_LN(NLCNTRL)
  LIS_Program Chosen    ,"    "
  K_LN(elecstat*pmethod)
  LIS_Sparse solver     ,SPAR
  LIS_Jacobi Conj Gradnt,JCG
  LIS_Precondition CG   ,PCG
  K_LN(BETA)
  LIS_Distributed Domain,DDS 
  LIS_Inc Cholesky CG   ,ICCG
  Def_*PAR(_zc(_z3+5))
 Fld_3
  Prm_          Tolerance/Level -
  Typ_Real
 Fld_0
  Typ_Lab
  Prm_              - valid for all except Sparse Solver
 Fld_0
  Typ_Lab
  Prm_
 Fld_4
  Prm_          Multiplier -
  Typ_Real
  Def_*GET(common,,soptcm,,REAL,27)
 Fld_0
  Typ_Lab
  Prm_              - valid only for Precondition CG
 Fld_6
  Prm_          Matrix files -
  Typ_LIS_OPTIONB
  LIS_Delete upon FINISH,DELE
  LIS_Keep for restart  ,KEEP
  Def_*PAR(_zc(29))
 Fld_0
  Typ_Lab
  Prm_              - valid only for Sparse
Cmd_MSAVE
 Fld_2
  Prm_[MSAVE]   Memory Save -
  Typ_LOGI,Off,On
  Def_*PAR(_z12)
 Fld_0
  Typ_Lab
  Prm_              - valid only for Precondition CG
Cmd_PCGOPT
 Fld_2
  Prm_[PCGOPT]  Level of Difficulty -
  Typ_LIS_OPTIONB
  LIS_Program Chosen  ,0
  LIS_1               ,1
  LIS_2               ,2
  LIS_3               ,3
  LIS_4               ,4
  LIS_5               ,5
  Def_*PAR(_z20)
 Fld_0
  Typ_Lab
  Prm_              - valid only for Precondition CG
 Fld_4
  Prm_[PCGOPT]  Reduced I/O -
  Typ_LIS_OPTIONB
  LIS_Program Chosen  ,AUTO
  LIS_No              ,NO
  LIS_Yes             ,YES
  Def_*PAR(_zc(_z17+22))
 Fld_0
  Typ_Lab
  Prm_              - valid only for Precondition CG
 Fld_7
  Prm_[PCGOPT]  Memory Mode -
  Typ_LIS_OPTIONB
  LIS_Program Chosen  ,AUTO
  LIS_In Core         ,INCORE
  LIS_Out of Core     ,OOC
  Def_*PAR(_zc(_z22+25))
 Fld_0
  Typ_Lab
  Prm_              - valid only for Precondition CG
 Fld_0
Cmd_PIVCHECK
K_CM(elecstat*pmethod)
P_CM(LINPLUS*THERMAL*ELECMAG)
 Fld_2
  Prm_[PIVCHECK] Pivots Check
  Typ_LOGI,Off,On
  Def_*GET(common,,stepcm,,int,149)
 Fld_0
  Typ_Lab
  Prm_              - valid only for Sparse and PCG Solvers
 Fld_0
  Typ_SEP
Cmd_PSTRESS
K_CM(purethrm)
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
P_CM(LINPLUS)
 Fld_2
  Prm_[PSTRES] Incl prestress effects?
  Typ_LOGI,No,Yes
  Def_*PAR(_z5)
Cmd_TOFFST
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
P_CM(THERMAL)
 Fld_2
  Prm_[TOFFST] Temperature difference-
  Typ_REAL
  Def_*GET(common,,soptcm,,real,1)
 Fld_0
  Typ_Lab
  Prm_         - between absolute zero and zero of active temp scale
Cmd_RMRESU
K_CM(ROMES)
 Fld_0
  Typ_SEP
 Fld_2
  Prm_[RMRESU]  Select ROM Database
  Typ_FILE
  Def_*PAR(_zr1)
Cmd_RMUSE
K_CM(ROMES)
 Fld_2
  Prm_[RMUSE]   ROM Use Pass
  Typ_LOGI,Off,On
  Def_0
Cal_REFRESH
:E END
:! 
:N Fnc_An_Opts_1
:S    791,   153,   631
:T Command
:C )! Fnc_An_Opts_1
:D Eigenvalue Buckling Options
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_BUCOPT
Inp_NoApply
Cmd_BUCOPT
 Fld_0
  Typ_Lab
  Prm_[BUCOPT]  Buckling Analysis Options
 Fld_2
  Prm_Method    Mode extraction method
  Typ_LIS_OPTIONB
  LIS_Block Lanczos   ,LANB
  LIS_Subspace iter   ,SUBSP
  Def_LANB
 Fld_3
  Prm_NMODE     No. of modes to extract
  Typ_INT
  Def_*GET(common,,stepcm,,int,58)
 Fld_4
  Prm_SHIFT     Shift pt for eigenvalue
  Typ_REAL
  Def_*GET(common,,stepcm,,real,11)
 Fld_5
  Prm_LDMULTE   Load multiplier boundary
  Typ_REAL
  Def_*GET(common,,stepcm,,real,12)
 Fld_6
  Prm_RangeKey  Eigenvalue extraction 
  Typ_LIS_OPTIONB
  LIS_Modes centered  ,CENTER
  LIS_Modes in range  ,RANGE
  Def_CENTER
:E END
:! 
:N Fnc_An_Opts_2
:S   3137,  1647,  1466
:T Command
:C )! Fnc_An_Opts_2
:D Modal Analysis
:C )/nopr
:C )KEYW,KEY1,0
:C )*del,_zv
:C )*dim,_zv,char,3
:C )*SET,_zv(1),'CAVI','CUTO','GAMM'
:C )*del,_zc
:C )*dim,_zc,char,11
:C )*SET,_zc(1),'SUBSP','LANB','LANP','REDUC','UNSYM','DAMP'
:C )*SET,_zc(7),'QRDAMP','AUTO','NO','YES','SNODE'
:C )*del,_z
:C )*dim,_z,,9
:C )*GET,_z1,common,,soptcm,,int,4 ! Mode extraction method key   
:C )*GET,_z5,common,,soptcm,,int,14 ! 
:C )*GET,_z6,common,,soptcm,,int,14 ! modexp
:C )*GET,_z12,common,,stepcm,,int,134    ! pcg Elem by Elem key
:C )! Define value of tiny for blank defaults
:C )*IF,_z6,EQ,-1,THEN
:C )_z6=2**(-100)
:C )*ENDIF
:C )*IF,_z1,EQ,3,THEN
:C )_z2=5
:C )*ELSEIF,_z1,EQ,4,THEN
:C )_z2=6
:C )*ELSEIF,_z1,EQ,7,THEN
:C )_z2=7
:C )*ELSEIF,_z1,EQ,6,THEN
:C )_z2=2
:C )*ELSEIF,_z1,EQ,0,THEN
:C )*create,ansuitmp
:C )*msg,ui,
:C )The mode extraction method was previously set to &
:C )Reduced.  This method is no longer &
:C )supported.  Please refer to the MODOPT command.
:C )*end
:C )/input,ansuitmp
:C )_z2=4
:C )*ELSEIF,_z1,EQ,1,THEN
:C )*create,ansuitmp
:C )*msg,ui,
:C )The mode extraction method was previously set to &
:C )Subspace iteration.  This method is no longer &
:C )supported.  Please refer to the MODOPT command.
:C )*end
:C )/input,ansuitmp
:C )_z2=1
:C )*ELSEIF,_z1,EQ,8,THEN
:C )_z2=11
:C )*ELSEIF,_z1,EQ,9,THEN
:C )_z2=3
:C )*ELSE
:C )_z2=2
:C )*ENDIF
:C )*GET,_z3,common,,stepcm,,int,2 ! Incl prestress effects (y or n)    
:C )*IF,_z3,EQ,-1,THEN
:C )_z3=1
:C )*ELSE    
:C )_z3=0
:C )*ENDIF
:C )_zr1='*.rom'
:C )/go
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_UI_anopts2
Inp_NoApply
Cmd_)/nopr
Cmd_)*set,_z(1)
 Fld_2
  Prm_[MODOPT] Mode extraction method
  Typ_LIS_RADIOB
  P_LN(FULL_ANS*LINPLUS*ELECMAG)
  LIS_Block Lanczos   ,2
  K_LN(maghfe+edgeelc)
  P_LN(FULL_ANS)
  LIS_PCG Lanczos   ,3
  K_LN(maghfe+edgeelc)
  P_LN(FULL_ANS)
  LIS_Unsymmetric     ,5
  K_LN(maghfe+edgeelc)
  P_LN(FULL_ANS)
  LIS_Damped          ,6
  K_LN(maghfe+edgeelc)
  P_LN(FULL_ANS)
  LIS_QR Damped       ,7
  P_LN(FULL_ANS*LINPLUS*ELECMAG)
  LIS_Supernode       ,11
  Def_*PAR(_z2)
Cmd_)*CSET,1,1
 Fld_2
  Prm_         No. of modes to extract
  Typ_INT
  Def_*GET(common,,stepcm,,int,58)
 Fld_0
  Typ_SEP
Cmd_)*SET,_z(3)
 Fld_0
  Prm_[MXPAND]
 Fld_2
  Prm_   Expand mode shapes 
  Typ_Logi,  No, Yes
  Def_1
Cmd_)*CSET,2,2
 Fld_2
  Prm_NMODE No. of modes to expand
  Typ_INT
  Def_*PAR(_z6)
Cmd_)*SET,_z(5)
 Fld_2
  Prm_Elcalc  Calculate elem results?
  Typ_LOGI,No,Yes
  Def_*GET(COMMON,,SOPTCM,,INT,13)
Fld_0
Typ_SEP
K_FL(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
Cmd_)*SET,_z(6)
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
 Fld_2
  Prm_[LUMPM]  Use lumped mass approx?
  Typ_LOGI,No,Yes
  Def_*GET(common,,stepcm,,int,3)
 Fld_3
  Prm_[PSTRES] Incl prestress effects?
  Typ_LOGI,No,Yes
  Def_*PAR(_z3)
Cmd_)/go
Cmd_RMRESU
K_CM(ROMES)
 Fld_0
  Typ_SEP
 Fld_2
  Prm_[RMRESU]  Select ROM Database
  Typ_FILE
  Def_*PAR(_zr1)
Cmd_RMUSE
K_CM(ROMES)
 Fld_2
  Prm_[RMUSE]   ROM Use Pass
  Typ_LOGI,Off,On
  Def_0
Cal_Fnc_An_Opts_2a
:E END OF Fnc_An_Opts_2
:! 
:N Fnc_An_Opts_2a
:S   1374,   700,   649
:T Command
:C )! Fnc_An_Opts_2a
:C )/NOPR
:C )*GET,_z4,common,,soptcm,,int,60      ! Normalize mode shapes key 
:C )*IF,_z4,EQ,0,THEN 
:C )_z5='OFF' 
:C )*ELSE 
:C )_z5='ON' 
:C )*ENDIF 
:C )*GET,_z6,common,,stepcm,,real,11     ! Frequency range   
:C )*GET,_z7,common,,stepcm,,real,12     ! Frequency range   
:C )*GET,_z8,common,,soptcm,,int,12      ! No. of modes to print     
:C )*IF,_z(1),eq,3,THEN
:C )keyw,KEY1,1
:C )keyw,KEY3,0
:C )*ELSEIF,_z(1),eq,2,THEN
:C )keyw,KEY1,0
:C )keyw,KEY3,1
:C )*ELSE
:C )keyw,KEY1,0
:C )keyw,KEY3,0
:C )*ENDIF
:C )*IF,_z(3),eq,1,THEN
:C )keyw,KEY2,1
:C )*ELSE
:C )keyw,KEY2,0
:C )*ENDIF
:C )/GOPR
:P (LINPLUS*ELECMAG)
Inp_P
Cmd_MODOPT
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*CPAR(1)
Cmd_EQSLV
K_CM(KEY1)
 Fld_2
  Typ_Def_PCG
Cmd_EQSLV
K_CM(KEY3)
 Fld_2
  Typ_Def_SPAR
Cmd_MXPAND
K_CM(KEY2)
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_5
  Typ_Def_*PAR(_z(5))
Cmd_LUMPM
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
 Fld_2
  Typ_Def_*PAR(_z(6))
Cmd_PSTRES
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
 Fld_2
  Typ_Def_*PAR(_z(7))
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(1))
Cal_Fnc_An_Opts_2a2,2,eq,11
Cal_Fnc_An_Opts_2a5,2,eq,2
Cal_Fnc_An_Opts_2a6,2,eq,3
Cal_Fnc_An_Opts_2a3,2,eq,5
Cal_Fnc_An_Opts_2a4,2,eq,6
Cal_Fnc_An_Opts_2a7,2,eq,7
Cal_REFRESH
:E END OF Fnc_An_Opts_2a
:! 
:N Fnc_An_Opts_2a2
:S   1634,   457,  1151
:T Command
:C )! Fnc_An_Opts_2a2
:C )/NOPR
:C )*DEL,_zc1
:C )*DIM,_zc1,char,3
:C )*SET,_zc1(1),'EVEC','BOTH','EVAL'
:C )*GET,_z101,common,,soptcm,,real,54  ! rangefact
:C )*GET,_z102,common,,stepcm,,int,219  ! blocksize
:C )*GET,_z103,common,,soptcm,,real,55  ! robustlev
:C )*GET,_z104,common,,soptcm,,int,203  ! compute
:C )_z104=_z104+2
:C )/GO
:D Supernode Modal Analysis
:K #(PREP7*SOLUTION)
:H Hlp_UI_anopts
Inp_NoApply
Cmd_MODOPT
 Fld_0
  Typ_Lab
  Prm_[MODOPT]  Mode Extraction Options
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Prm_FREQB Start Freq (initial shift)
  Typ_REAL
  Def_*PAR(_z6)
 Fld_5
  Prm_FREQE End Frequency
  Typ_REAL
  Def_*PAR(_z7)
 Fld_7
  Prm_Nrmkey   Normalize mode shapes
  Typ_LIS_OPTIONB
  LIS_To mass matrix  ,OFF
  LIS_To unity        ,ON
  Def_*PAR(_z5)
Fld_0
Typ_SEP
Cmd_SNOPTION
 Fld_0
  Typ_Lab
  Prm_[SNOPTION]  Supernode eigensolver options
 Fld_2
  Prm_Eigenvalue range factor(-2=AUTO)
  Typ_REAL
  Def_*PAR(_z101)
 Fld_3
  Prm_Block size       (-1=MAX,0=AUTO)
  Typ_INT
  Def_*PAR(_z102)
 Fld_4
  Prm_Robustness level
  Typ_LIS_OPTIONB
  LIS_0 Automatic    ,0
  Lis_1 (Fastest)    ,1
  Lis_2              ,2
  Lis_3              ,3
  Lis_4              ,4
  Lis_5              ,5
  Lis_6              ,6
  Lis_7              ,7
  Lis_8              ,8
  Lis_9              ,9
  Lis_10 (Most Accur),10
  Def_*PAR(_z103)
 Fld_5
  Prm_Computations to perform
  Typ_LIS_OPTIONB
  LIS_Only eigenvalues,EVAL
  LIS_Only eigenvector,EVEC
  LIS_Values + vectors,BOTH
  Def_*PAR(_zc1(_z104))
Cal_REFRESH
:E END OF Fnc_An_Opts_2a2
:! 
:N Fnc_An_Opts_2a3
:S    624,   151,   447
:T Command
:C )! Fnc_An_Opts_2a3
:C )/GO
:D Unsymmetric Modal Analysis
:K #(PREP7*SOLUTION)
:H Hlp_C_MODOPT
Inp_NoApply
Cmd_MODOPT
 Fld_0
  Typ_Lab
  Prm_[MODOPT]  Options for Unsymmetric Modal Analysis
Fld_0
Typ_SEP
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Prm_FREQB Start Freq (initial shift)
  Typ_REAL
  Def_*PAR(_z6)
 Fld_5
  Prm_FREQE End Frequency  
  Typ_REAL
  Def_*PAR(_z7)
 Fld_7
  Prm_Nrmkey   Normalize mode shapes
  Typ_LIS_OPTIONB
  LIS_To mass matrix  ,OFF
  LIS_To unity        ,ON
  Def_*PAR(_z5)
Cal_REFRESH
:E END OF Fnc_An_Opts_2a3
:! 
:N Fnc_An_Opts_2a4
:S    614,   146,   442
:T Command
:C )! Fnc_An_Opts_2a4
:C )/GO
:D Damped Modal Analysis
:K #(PREP7*SOLUTION)
:H Hlp_C_MODOPT
Inp_NoApply
Cmd_MODOPT
 Fld_0
  Typ_Lab
  Prm_[MODOPT]  Options for Damped Modal Analysis
Fld_0
Typ_SEP
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Prm_FREQB Start Freq (initial shift)
  Typ_REAL
  Def_*PAR(_z6)
 Fld_5
  Prm_FREQE End Frequency  
  Typ_REAL
  Def_*PAR(_z7)
 Fld_7
  Prm_Nrmkey   Normalize mode shapes
  Typ_LIS_OPTIONB
  LIS_To mass matrix  ,OFF
  LIS_To unity        ,ON
  Def_*PAR(_z5)
Cal_REFRESH
:E END OF Fnc_An_Opts_2a4
:! 
:N Fnc_An_Opts_2a5
:S    328,   255,    66
:T Command
:C )! Fnc_An_Opts_2a5
:C )! This granule just filters the next for Block Lanczos
:C )! Do not go any further if the number of modes is zero
:D Block Lanczos Method
:K #(PREP7*SOLUTION)
:H Hlp_C_MODOPT
Inp_P
Cmd_)!
Fld_2
  Typ_Def_*CPAR(1)
Cal_Fnc_An_Opts_2a5a,2,gt,0
:E END
:! 
:N Fnc_An_Opts_2a5a
:S    822,   263,   532
:T Command
:C )! Fnc_An_Opts_2a5a
:C )/NOPR
:C )*IF,_z(1),EQ,2,THEN
:C )KEYW,QRDAMP,0
:C )*ENDIF
:C )*IF,_z(1),EQ,7,THEN
:C )KEYW,QRDAMP,1
:C )*ENDIF
:C )/GO
:D Block Lanczos Method
:K #(PREP7*SOLUTION)
:H Hlp_C_MODOPT
Inp_NoApply
Cmd_MODOPT
 Fld_0
  Typ_Lab
  K_LN(qrdamp)
  Prm_[MODOPT]  Options for Block Lanczos Modal Analysis
  K_LN(QRDAMP)
  Prm_[MODOPT]  Options for QR Damped Modal Analysis
Fld_0
Typ_SEP
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Prm_FREQB Start Freq (initial shift)
  Typ_REAL
  Def_*PAR(_z6)
 Fld_5
  Prm_FREQE End Frequency  
  Typ_REAL
  Def_*PAR(_z7)
 Fld_7
  Prm_Nrmkey   Normalize mode shapes
  Typ_LIS_OPTIONB
  LIS_To mass matrix  ,OFF
  LIS_To unity        ,ON
  Def_*PAR(_z5)
Cal_REFRESH
:E END OF Fnc_An_Opts_2a5a
:! 
:N Fnc_An_Opts_2a6
:S   1890,   726,  1138
:T Command
:C )! Fnc_An_Opts_2a6
:C )/NOPR
:C )*DEL,_zc1
:C )*DIM,_zc1,char,3
:C )*SET,_zc1(1),'AUTO','OOC','INCORE'
:C )*GET,_z17,common,,soptcm,,int,163   ! pcg reduced IO key
:C )*GET,_z16,common,,soptcm,,int,164   ! pcg strum check
:C )*GET,_z18,common,,soptcm,,int,161   ! PCGOPT level
:C )*GET,_z22,common,,soptcm,,int,166   ! PCGOPT memory mode
:C )*IF,_z18,LE,1,THEN
:C )_z20=_z18
:C )*ELSEIF,_z18,EQ,3,THEN
:C )_z20=5
:C )*ELSE
:C )*GET,_z19,common,,soptcm,,int,116   ! PCGOPT level
:C )*IF,_z19,LE,1,THEN
:C )_z20=2
:C )*ELSEIF,_z19,EQ,2,THEN
:C )_z20=3
:C )*ELSE
:C )_z20=4
:C )*ENDIF
:C )*ENDIF
:C )/GO
:D PCG Lanczos Modal Analysis
:K #(PREP7*SOLUTION)
:H Hlp_UI_anopts
Inp_NoApply
Cmd_MODOPT
 Fld_0
  Typ_Lab
  Prm_    Options for PCG Lanczos Modal Analysis
Fld_0
Typ_SEP
 Fld_0
  Typ_Lab
  Prm_[MODOPT]  Mode Extraction Options
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Prm_FREQB Start Freq (initial shift)
  Typ_REAL
  Def_*PAR(_z6)
 Fld_5
  Prm_FREQE End Frequency  
  Typ_REAL
  Def_*PAR(_z7)
Fld_0
Typ_SEP
 Fld_0
  Typ_Lab
  Prm_PCG Lanczos Options
Cmd_PCGOPT
 Fld_2
  Prm_Level of Difficulty
  Typ_LIS_OPTIONB
  LIS_Program Chosen  ,0
  LIS_1               ,1
  LIS_2               ,2
  LIS_3               ,3
  LIS_4               ,4
  LIS_5               ,5
  Def_*PAR(_z20)
 Fld_4
  Prm_Reduced I/O -
  Typ_LIS_OPTIONB
  LIS_Program Chosen  ,AUTO
  LIS_No              ,NO
  LIS_Yes             ,YES
  Def_*PAR(_zc(_z17+8))
 Fld_5
  Prm_Sturm Check
  Typ_LIS_OPTIONB
  LIS_Yes,   YES
  LIS_No,     NO
  Def_*PAR(_zc(_z16+9))
 Fld_7
  Prm_Memory Mode -
  Typ_LIS_OPTIONB
  LIS_Program Chosen  ,AUTO
  LIS_In Core         ,INCORE
  LIS_Out of Core     ,OOC
  Def_*PAR(_zc1(_z22+1))
Cmd_MSAVE
 Fld_2
  Prm_[MSAVE]  Memory save
  Typ_LOGI,No,Yes
  Def_*PAR(_z12)
Cal_REFRESH
:E END OF Fnc_An_Opts_2a6
:! 
:N Fnc_An_Opts_2a7
:S    323,   250,    66
:T Command
:C )! Fnc_An_Opts_2a7
:C )! This granule just filters the next for QR Damp 
:C )! Do not go any further if the number of modes is zero
:D Block Lanczos Method
:K #(PREP7*SOLUTION)
:H Hlp_C_MODOPT
Inp_P
Cmd_)!
Fld_2
  Typ_Def_*CPAR(1)
Cal_Fnc_An_Opts_2a7a,2,gt,0
:E END
:! 
:N Fnc_An_Opts_2a7a
:S    961,   263,   671
:T Command
:C )! Fnc_An_Opts_2a7a
:C )/NOPR
:C )*IF,_z(1),EQ,2,THEN
:C )KEYW,QRDAMP,0
:C )*ENDIF
:C )*IF,_z(1),EQ,7,THEN
:C )KEYW,QRDAMP,1
:C )*ENDIF
:C )/GO
:D Block Lanczos Method
:K #(PREP7*SOLUTION)
:H Hlp_C_MODOPT
Inp_NoApply
Cmd_MODOPT
 Fld_0
  Typ_Lab
  K_LN(qrdamp)
  Prm_[MODOPT]  Options for Block Lanczos Modal Analysis
  K_LN(QRDAMP)
  Prm_[MODOPT]  Options for QR Damped Modal Analysis
Fld_0
Typ_SEP
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Prm_FREQB Start Freq (initial shift)
  Typ_REAL
  Def_*PAR(_z6)
 Fld_5
  Prm_FREQE End Frequency  
  Typ_REAL
  Def_*PAR(_z7)
 Fld_6
  Prm_Calculate Complex Eigenvectors
  Typ_LOGI,No,Yes
 Fld_7
  Prm_Nrmkey   Normalize mode shapes
  Typ_LIS_OPTIONB
  LIS_To mass matrix  ,OFF
  LIS_To unity        ,ON
  Def_*PAR(_z5)
 Fld_0
  Typ_LAB
  Prm_         -Complex Eigenvectors use unit normalization
Cal_REFRESH
:E END OF Fnc_An_Opts_2a7a
:! 
:N Fnc_An_Opts_3
:S   1843,  1085,   751
:T Command
:C )! Fnc_An_Opts_3
:D Harmonic Analysis
:C )/nopr
:C )*del,_zv
:C )*dim,_zv,char,3
:C )*SET,_zv(1),'SCAT','TOTAL','OFF'
:C )*del,_zc
:C )*dim,_zc,char,8
:C )*SET,_zc(1),'FULL','REDUC','MSUP','ON','OFF'
:C )*SET,_zc(6),'VT  ','VTPA','VTRU'
:C )*del,_z
:C )*dim,_z,,5
:C )*GET,_z1,common,,soptcm,,int,6      ! Solution method key  
:C )*GET,_z2,common,,soptcm,,int,16     ! DOF printout format 
:C )*if,_z1,eq,1,then
:C )*create,ansuitmp
:C )*msg,ui,
:C )The solution method was previously set to &
:C )Reduced.  This method is no longer &
:C )supported.  Please refer to the HROPT command.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C )*if,_z1,eq,0,then
:C )*GET,_z3,common,,soptcm,,int,206    ! cadoe_frqswp_vt
:C )*if,_z3,eq,1,then
:C )_z1=5
:C )*GET,_z4,common,,hfoptcm,,int,32    ! key_cadoe_pml
:C )*GET,_z5,common,,soptcm,,int,135    ! cadoe_pass_input
:C )*if,_z4,eq,1,then
:C )_z1=6
:C )*endif
:C )*if,_z5,eq,3,then
:C )_z1=7
:C )*endif
:C )*endif
:C )*endif
:C )/go
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_UI_anopts3
Inp_NoApply
Cmd_)/nopr
Cmd_)*set,_z(1)
 Fld_2
 P_FL(LINPLUS)
  Prm_[HROPT]  Solution method
  Typ_LIS_OptionB
  LIS_Full            ,1
  K_LN(magnetic+vectorp+edgeelc+edgeflx+quasista)
  LIS_Mode Superpos'n ,3
  LIS_VT Full         ,6
  LIS_VTPA Prfct Absrb,7
  LIS_VTRU Reuse      ,8
  Def_*PAR(_z1+1)
Fld_0
P_FL(LINPLUS)
Typ_SEP
 Fld_3
  Prm_[HROUT]  DOF printout format
  Typ_LIS_OptionB
  LIS_Real + imaginary,4
  LIS_Amplitud + phase,5
  Def_*PAR(_z2+4)
Fld_0
Typ_SEP
 K_FL(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
 P_FL(LINPLUS)
 Fld_4
 K_FL(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
 P_FL(LINPLUS)
  Prm_[LUMPM]  Use lumped mass approx?
  Typ_LOGI,No,Yes
  Def_*GET(common,,stepcm,,int,3)
Cmd_)/go
Cal_Fnc_An_Opts_3a
:E END
:! 
:N Fnc_An_Opts_3a
:S    807,   417,   383
:T Command
:C )! Fnc_An_Opts_3a
:C )/NOPR
:C )*GET,_z1,common,,soptcm,,int,8    ! Spacing of solutions  
:C )*IF,_z1,EQ,0,THEN
:C )_z2='OFF'
:C )*ELSE
:C )_z2='ON'
:C )*ENDIF
:C )*GET,_z3,common,,soptcm,,int,7    ! No. of modes for solu 
:C )*GET,_z4,common,,soptcm,,int,71   ! Print mode contrib 
:C )KEYW,MCOUT,0
:C )*IF,_z(1),EQ,3,THEN
:C )KEYW,MCOUT,1
:C )*ENDIF
:C )/GO
Inp_P
Cmd_HROPT
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_5
 K_FL(MCOUT)
  Typ_Def_*GET(COMMON,,SOPTCM,,INT,113)
Cmd_HROUT
 Fld_2
  Typ_Def_*PAR(_zc(_z(2)))
Cmd_LUMPM
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*PAR(_z(3))
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(1))
Cal_Fnc_An_Opts_3a3,2,eq,1
Cal_Fnc_An_Opts_3a2,2,eq,3
Cal_REFRESH
:E END
:! 
:N Fnc_An_Opts_3a2
:S    827,   176,   644
:T Command
:C )! Fnc_An_Opts_3a2
:C )/GO
:D Mode Sup Harmonic Analysis
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_UI_anopts3a2
Inp_NoApply
Cmd_HROPT
P_CM(LINPLUS)
 Fld_0
  Typ_Lab
  Prm_        Options for Mode Superposition Harmonic Analysis
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Prm_[HROPT]  Maximum mode number
  Typ_INT
  Def_*PAR(_z3)
 Fld_4
  Prm_[HROPT]  Minimum mode number
  Typ_INT
  Def_blank
 Fld_5
  Prm_Modal coords output to MCF file
  Typ_LOGI,No,Yes
  Def_*GET(COMMON,,SOPTCM,,INT,113)
Cmd_HROUT
 Fld_2
  Typ_Def_*PAR(_zc(_z(2)))
 Fld_3
  Prm_[HROUT]  Spacing of solutions
  Typ_LIS_RADIOB
  LIS_Uniform         ,OFF
  LIS_Cluster at modes,ON
  Def_*PAR(_z2)
 Fld_4
  Prm_         Print mode contrib's?
  Typ_LOGI,No,Yes
  Def_*PAR(_z4)
Cal_REFRESH
:E END
:! 
:N Fnc_An_Opts_3a3
:S   2480,  1366,  1107
:T Command
:C )! Fnc_An_Opts_3a3
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,16
:C )*SET,_zc(1),'    ','    ' ,'JCG','PCG','PCG','ICCG','     ','JCG'
:C )*SET,_zc(9),'SPAR','    ','    ','DDS ','PCG','JCG','    ','QMR'
:C )*GET,_z3,common,,soptcm,,int,39     ! Equation solver key
:C )*GET,_z15,common,,stepcm,,int,169   ! frontal was requested
:C )*GET,_z16,common,,anscom,,int,52
:C )KEYW,NLCNTRL,_z16
:C )_zr1='*.rom'
:C )*IF,_z3,EQ,0,THEN
:C )*IF,_z15,EQ,0,THEN
:C )*IF,_z16,EQ,1,THEN
:C )_z3=6
:C )*ENDIF
:C )*ENDIF
:C )*ENDIF
:C )_zcundoc='    '
:C )*IF,_z3,eq,0,then
:C )_zcundoc='FRONT'
:C )*ENDIF
:C )*IF,_z3,eq,1,then
:C )_zcundoc='ITER'
:C )*ENDIF
:C )*IF,_z3,eq,14,then
:C )_zcundoc='DSPARSE'
:C )*ENDIF
:C )*IF,_z3,eq,2,then
:C )_zcundoc='JCGOUT'
:C )*ENDIF
:C )*IF,_z3,eq,4,then
:C )_zcundoc='PCGOUT'
:C )*ENDIF
:C )*IF,_z3,eq,13,then
:C )_zcundoc='DJCG'
:C )*ENDIF
:C )*IF,_z3,eq,14,then
:C )_zcundoc='DPCG'
:C )*ENDIF
:C )*IF,_z3,eq,10,then
:C )_zcundoc='AMG'
:C )*ENDIF
:C )*IF,_zcundoc,ne,'    ',then
:C )*create,ansuitmp
:C )*msg,ui,_zcundoc,
:C )The equation solver was previously set to &
:C )%C.  This type is no longer supported.  &
:C )Please refer to the EQSLV command.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C )/GO
:D Full Harmonic Analysis
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_EQSLV
Inp_NoApply
Cmd_)!
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
 Fld_0
  Typ_Lab
  Prm_    Options for Full Harmonic Analysis
Cmd_EQSLV
P_CM(LINPLUS*ELECMAG)
 Fld_2
 K_FL(edgeelc)
  Prm_[EQSLV]  Equation solver
  Typ_LIS_OPTIONB
  K_LN(NLCNTRL)
  LIS_Program Chosen  ,"    "
  LIS_Jacobi Conj Grad,JCG
  K_LN(ppdspar)
  LIS_Inc Cholesky CG ,ICCG
  LIS_Sparse solver   ,SPAR
  Def_*PAR(_zc(_z3+1))
 Fld_2
 K_FL(EDGEELC)
  Prm_[EQSLV]  Equation solver
  Typ_LIS_OPTIONB
  LIS_Sparse solver   ,SPAR
  LIS_Inc Cholesky CG ,ICCG
  Def_*PAR(_zc(_z3+1))
 Fld_3
  Prm_          Tolerance -
  Typ_Real
  Def_*GET(common,,soptcm,,REAL,2)     ! Equation solver tolerance
 Fld_0
  Typ_Lab
  Prm_              - valid for all except Sparse Solver
Cmd_PSTRES
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
 Fld_2
  Prm_[PSTRES] Incl prestress effects?
  Typ_LOGI,No,Yes
  Def_*PAR(_z1)
Cmd_RMRESU
K_CM(ROMES)
 Fld_0
  Typ_SEP
 Fld_2
  Prm_[RMRESU]  Select ROM Database
  Typ_FILE
  Def_*PAR(_zr1)
Cmd_RMUSE
K_CM(ROMES)
 Fld_2
  Prm_[RMUSE]   ROM Use Pass
  Typ_LOGI,Off,On
  Def_0
Cal_REFRESH
:E END
:! 
:N Fnc_An_Opts_4
:S    507,   396,   104
:T Command
:C )! Fnc_An_Opts_4
:C )/NOPR
:C )*GET,_z6,common,,soptcm,,int,5  ! Method on TRNOPT
:C )*if,_z6,eq,1,then
:C )*create,ansuitmp
:C )*msg,ui,
:C )The solution method was previously set to &
:C )Reduced.  This method is no longer &
:C )supported.  Please refer to the TRNOPT command.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C )_z6=_z6+1
:C )/GO
Inp_P
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z6)
Cal_Fnc_An_Opts_4a1,2,eq,1
Cal_Fnc_An_Opts_4a3,2,eq,3
Cal_REFRESH
:E END
:! 
:N Fnc_An_Opts_4a0
:S    755,   399,   349
:T Command
:C )! Fnc_An_Opts_4a0
:C )/NOPR
:C )*GET,_z6,common,,soptcm,,int,9   ! Damp key on TRNOPT
:C )*IF,_z6,EQ,1,THEN
:C )_z2='NODAMP'
:C )*ELSEIF,_z6,EQ,0,THEN
:C )_z2='DAMP'
:C )*ELSE
:C )_z2='DAMP'
:C )*ENDIF
:C )*GET,_z3,common,,soptcm,,int,7    ! No. of modes for solu
:C )KEYW,MCOUT,0
:C )*IF,_z(1),EQ,3,THEN
:C )KEYW,MCOUT,1
:C )*ENDIF
:C )/GO
Inp_P
Cmd_TRNOPT
P_CM(FULL_ANS*ELECMAG)
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_6
 K_FL(MCOUT)
  Typ_Def_*GET(COMMON,,SOPTCM,,INT,113)
Cmd_LUMPM
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*PAR(_z(2))
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(1))
K_LN(romes)
Cal_Fnc_An_Opts_4a1a
K_LN(ROMES)
Cal_Fnc_An_Opts_4a1r
:E END
:! 
:N Fnc_An_Opts_4a1
:S   5226,  2314,  2905
:T Command
:C )! Fnc_An_Opts_4a1
:C )/NOPR
:C )*GET,_z1,common,,anscom,,int,52
:C )KEYW,NLCNTRL,_z1
:C )*DEL,_zc
:C )*DIM,_zc,char,20
:C )*DEL,_z
:C )*DIM,_z,,2
:C )*SET,_zc(1),'AUTO','FULL','MODI','INIT'
:C )*SET,_zc(5),'    ','    ' ,'JCG','PCG','PCG','ICCG','     ','JCG'
:C )*SET,_zc(13),'SPAR','    ','    ','DDS ','PCG','JCG','    ','QMR'
:C )*GET,_z6,common,,stepcm,,int,1    ! N-R option on NROPT
:C )*GET,_z2,common,,stepcm,,int,69     ! Adaptive descent key
:C )*GET,_z3,common,,soptcm,,int,39     ! Equation solver key
:C )*GET,_z7,common,,soptcm,,int,66     ! Auto Solve Method
:C )*GET,_z10,ACTIVE,,SOLU,NCMLS
:C )*GET,_z8,common,,stepcm,,int,138    ! pcg out-of-core key
:C )*GET,_z12,common,,stepcm,,int,134    ! pcg Elem by Elem key
:C )*GET,_z21,common,,soptcm,,int,133   ! cadoe_antype
:C )*GET,_z22,common,,stepcm,,int,257   ! sparse file save key
:C )*SET,_zc(20),'FULL'
:C )*IF,_z21,EQ,0,THEN
:C )*SET,_zc(20),'VT'
:C )*ENDIF
:C )*SET,_zc(19),'DELE'
:C )*IF,_z22,EQ,1,THEN
:C )*SET,_zc(19),'KEEP'
:C )*ENDIF
:C )*IF,_z3,NE,4,THEN
:C )*SET,_zs,0
:C )*ENDIF
:C )*IF,_z8,EQ,1,THEN
:C )*SET,_z3,4
:C )*ENDIF
:C )*IF,_z10,LE,1,THEN
:C )KEYW,KEY2,1
:C )*ELSE
:C )KEYW,KEY2,0
:C )*ENDIF
:C )*IF,_z7,EQ,1,THEN
:C )KEYW,KEY1,1
:C )*GET,_z9,common,,stepcm,,real,230    
:C )*ELSE
:C )KEYW,KEY1,0
:C )*GET,_z9,common,,soptcm,,real,2
:C )*ENDIF
:C )*IF,_z2,EQ,-1,THEN
:C )_z4=' '
:C )*ELSEIF,_z2,EQ,1,THEN
:C )_z4='ON'
:C )*ELSE
:C )_z4='OFF'
:C )*ENDIF
:C )_zcundoc='    '
:C )*IF,_z3,eq,0,then
:C )_zcundoc='FRONT'
:C )*ENDIF
:C )*IF,_z3,eq,1,then
:C )_zcundoc='ITER'
:C )*ENDIF
:C )*IF,_z3,eq,14,then
:C )_zcundoc='DSPARSE'
:C )*ENDIF
:C )*IF,_z3,eq,2,then
:C )_zcundoc='JCGOUT'
:C )*ENDIF
:C )*IF,_z3,eq,4,then
:C )_zcundoc='PCGOUT'
:C )*ENDIF
:C )*IF,_z3,eq,13,then
:C )_zcundoc='DJCG'
:C )*ENDIF
:C )*IF,_z3,eq,14,then
:C )_zcundoc='DPCG'
:C )*ENDIF
:C )*IF,_z3,eq,10,then
:C )_zcundoc='AMG'
:C )*ENDIF
:C )*IF,_zcundoc,ne,'    ',then
:C )*create,ansuitmp
:C )*msg,ui,_zcundoc,
:C )The equation solver was previously set to &
:C )%C.  This type is no longer supported.  &
:C )Please refer to the EQSLV command.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C )/GO
:D Full Transient Analysis
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG*THERMAL)
:H Hlp_UI_anopts4a1
Inp_NoApply
Cmd_NLGEOM
K_CM(purethrm)
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
P_CM(LINPLUS)
 Fld_2
  Prm_[NLGEOM]  Large deform effects
  Typ_LOGI,Off,On
  Def_*GET(common,,soptcm,,int,2)
!
Cmd_NROPT
K_CM(purethrm)
P_CM(ELECMAG*FULL_ANS*THERMAL)
 Fld_2
  Prm_[NROPT]   Newton-Raphson option
  Typ_LIS_OPTIONB
  LIS_Program chosen  ,AUTO
  LIS_Full N-R        ,FULL
  LIS_Modified N-R    ,MODI
  LIS_Initial stiffnes,INIT
  Def_*PAR(_zc(_z6+1))
 Fld_4
  Prm_          Adaptive descent
  Typ_LIS_OPTIONB
  LIS_ON if necessary ," "
  LIS_ON              ,ON
  LIS_OFF             ,OFF
  Def_*PAR(_z4)
Cmd_TRNOPT
K_CM(FULL)
P_CM(THERMAL*FULL_ANS)
 Fld_2
  Prm_[TRNOPT]  VT Speedup
  Typ_LIS_OPTIONB
  LIS_No              ,FULL
  LIS_Yes             ,VT
  Def_*PAR(_zc(20))
!
Cmd_THOPT
K_CM(PURETHRM)
P_CM(LINPLUS*THERMAL*ELECMAG)
 Fld_2
  Prm_[THOPT]   Solution Options
  Typ_LIS_OPTIONB
  LIS_Full    ,FULL
  LIS_Quasi   ,QUASI
 Fld_0
  Typ_Lab
  Prm_             Quasi solution options
 Fld_3
  Prm_Property change for reformation
  Typ_Real
  Def_0.05
 Fld_4
  Prm_Number of points in fast table
  Typ_Int
  Def_64
 Fld_5
  Prm_Min temperature for fast table
  Typ_Real
  Def_Blank
 Fld_6
  Prm_Max temperature for fast table
  Typ_Real
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_         - If blank, defaults to minimum and maximum
 Fld_0
  Typ_Lab
  Prm_           temperature defined by MPTEMP command
 Fld_8
  Prm_Algorithm
  Typ_LIS_OPTIONB
  LIS_Multipass       ,0
  LIS_Iterative       ,1
  Def_0
 Fld_0
  Typ_Sep
!
Cmd_EQSLV
P_CM(LINPLUS*THERMAL*ELECMAG)
 Fld_2
  Prm_[EQSLV]   Equation solver
  Typ_LIS_OPTIONB
  K_LN(NLCNTRL)
  LIS_Program Chosen  ," "
  LIS_Sparse solver   ,SPAR
  LIS_Jacobi Conj Grad,JCG
  LIS_Precondition CG ,PCG
  LIS_Inc Cholesky CG ,ICCG
  K_LN(BETA)
  LIS_Distrbutd Domain,DDS 
  K_LN(key1+nlcntrl)
  Def_*PAR(_zc(_z3+5))
  K_LN(KEY1+nlcntrl)
  Def_*PAR(_zc(6))
 Fld_3
  Prm_          Tolerance/Level -
  Typ_Real
 Fld_0
  Typ_Lab
  Prm_              - valid for all except Sparse Solver
 Fld_0
  Typ_Lab
  Prm_
 Fld_4
  Prm_          Multiplier -
  Typ_Real
  Def_*GET(common,,soptcm,,REAL,27)    ! Equation solver multiplier
 Fld_0
  Typ_Lab
  Prm_              - valid only for Precondition CG
 Fld_6
  Prm_          Matrix files -
  Typ_LIS_OPTIONB
  LIS_Delete upon FINISH,DELE
  LIS_Keep for restart  ,KEEP
  Def_*PAR(_zc(19))
 Fld_0
  Typ_Lab
  Prm_              - valid only for Sparse
Cmd_MSAVE
 Fld_2
  Prm_          Memory Save -
  Typ_LOGI,Off,On
  Def_*PAR(_z12)
 Fld_0
  Typ_Lab
  Prm_              - valid only for Precondition CG
 Fld_0
 P_FL(THERMAL)
  Typ_Sep
Cmd_TOFFST
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL+KEY2
P_CM(THERMAL)
 Fld_2
  Prm_[TOFFST] Temperature difference-
  Typ_REAL
  Def_*GET(common,,soptcm,,real,1)
 Fld_0
  Typ_Lab
  Prm_         - between absolute zero and zero of active temp scale
Cal_REFRESH
:E END
:! 
:N Fnc_An_Opts_4a1a
:S    203,   171,    25
:T Command
:C )! Fnc_An_Opts_4a1a
:C )/NOPR
:C )KEYW,FLLTRANS,0
:C )*IF,_z(1),EQ,1,THEN
:C )KEYW,FLLTRANS,1
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)!
Cal_REFRESH
:E END
:! 
:N Fnc_An_Opts_4a1r
:S    412,   239,   166
:T Command
:C )! Fnc_An_Opts_4a1r
:C )/NOPR
:C )KEYW,FLLTRANS,0
:C )*IF,_z(1),EQ,1,THEN
:C )KEYW,FLLTRANS,1
:C )*ENDIF
:C )_zr1='*.rom'
:C )/GO
:D Full Transient Analysis for ROM
:H Hlp_C_RMRESU
Cmd_RMRESU
 Fld_2
  Prm_[RMRESU]  Select ROM Database
  Typ_FILE
  Def_*PAR(_zr1)
Cmd_RMUSE
 Fld_2
  Prm_[RMUSE]   ROM Use Pass
  Typ_LOGI,Off,On
  Def_0
Cal_REFRESH
:E END
:! 
:N Fnc_An_Opts_4a3
:S    545,   158,   380
:T Command
:C )! Fnc_An_Opts_4a3
:D Mode Sup Transient Analysis
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_TRNOPT
Inp_NoApply
Cmd_TRNOPT
 Fld_0
  Typ_Lab
  Prm_      Option for Mode Superposition Transient Analysis
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Prm_[TRNOPT]  Maximum mode number
  Typ_INT
  Def_*PAR(_z3)
 Fld_5
  Prm_[TRNOPT]  Minimum mode number
  Typ_INT
  Def_blank
 Fld_6
  Prm_Modal coords output to MCF file
  Typ_LOGI,No,Yes
  Def_*GET(COMMON,,SOPTCM,,INT,113)
Cal_REFRESH
:E END
:! 
:N Fnc_An_Opts_4x
:S   1171,   678,   486
:T Command
:C )! Fnc_An_Opts_4x
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),'FULL','REDUC','MSUP'
:C )*DEL,_z
:C )*DIM,_z,,2
:C )*GET,_z6,common,,soptcm,,int,5  ! Method on TRNOPT
:C )*if,_z6,eq,1,then
:C )*create,ansuitmp
:C )*msg,ui,
:C )The solution method was previously set to &
:C )Reduced.  This method is no longer &
:C )supported.  Please refer to the TRNOPT command.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C )/go
:C )! Fnc_An_Opts_4x
:C )! The following default is for Ansys/LinearPlus
:C )! TRNOPT is not valid - so _z(1) must be set here
:P (LINPLUS*ELECMAG*THERMAL)
:D Transient Analysis
:H Hlp_UI_anopts4
Inp_NoApply
Cmd_)/NOPR
Cmd_)*set,_z(1)
 Fld_2
 P_FL(elecmag)
  Typ_Def_1
 Fld_2
 P_FL(FULL_ANS*ELECMAG)
  Prm_[TRNOPT]  Solution method
  Typ_LIS_RADIOB
  LIS_Full            ,1
  K_LN(magnetic+quasista)
  LIS_Mode Superpos'n ,3
  Def_*PAR(_z6+1)
Fld_0
P_FL(LINPLUS+ELECMAG)
Typ_SEP
 Fld_3
P_FL(LINPLUS)
  K_FL(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
  Prm_[LUMPM]  Use lumped mass approx?
  Typ_LOGI,No,Yes
  Def_*GET(common,,stepcm,,int,3)
Cmd_)/go
Cal_Fnc_An_Opts_4a0
:E END
:! 
:N Fnc_An_Opts_7
:S   1582,   152,  1423
:T Command
:C )! Fnc_An_Opts_7
:D Substructuring Analysis
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_UI_anopts7
Inp_NoApply
Cmd_SEOPT
 Fld_0
  Typ_Lab
  Prm_[SEOPT]  Substructuring Analysis Options
 Fld_2
  Prm_Sename  Name to be assigned to -
  Typ_CHAR,32,8
  Def_*GET(active,,jobnam)
 Fld_0
  Typ_Lab
  Prm_        - superelement matrix file
 Fld_3
  Prm_SEMATR  Matrices to be generated
  Typ_LIS_OPTIONB
  LIS_Stiffness       ,1
  LIS_Stiffness+Mass  ,2
  LIS_Stiff+Mass+Damp ,3
  Def_*GET(common,,soptcm,,int,17)
 Fld_4
  Prm_SEPR    Items to be printed
  Typ_LIS_OPTIONB
  LIS_No printout     ,0
  LIS_LoadVect+Matrix ,1
  LIS_LoadVectors only,2
  Def_*GET(common,,soptcm,,int,18)
 Fld_5
  Prm_SESST   Save space for [S]?
  Typ_LOGI,No,Yes
  Def_*GET(common,,soptcm,,int,76)
 Fld_0
  Typ_Lab
  Prm_        ([S] is the stress stiffness matrix)
  Fld_6
  Prm_EXPMTH Expansion pass method
  Typ_LIS_OPTIONB
  LIS_Backsubstitution  ,0
  LIS_Re-solve          ,1
  Def_*GET(common,,soptcm,,int,105)
Fld_0
Typ_SEP
Cmd_LUMPM
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
 Fld_2
  Prm_[LUMPM]  Use lumped mass approx?
  Typ_LOGI,No,Yes
  Def_*GET(common,,stepcm,,int,3)
 Fld_0
  Typ_Lab
  Prm_         (if mass matrix is to be generated)
Cmd_)!
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[SEGEN]  Automatic superelement generation
 Fld_2
  Prm_Generate during SOLVE?
  Typ_Lis_RadioB
   Lis_No     ,0
   Lis_Yes    ,1
   Lis_Preview,2
Cal_Fnc_SEGEN_2a,2,eq,0,4
Cal_Fnc_SEGEN_2b,2,eq,1,4
Cal_Fnc_SEGEN_2c,2,eq,2,4
Cal_REFRESH
:E END
:! 
:N Fnc_An_Opts_8
:S   1039,   373,   659
:T Command
:C )! Fnc_An_Opts_8
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,4
:C )*SET,_zc(1),'SPRS','DDAM','MPRS','PSD'
:C )*GET,_z1,common,,soptcm,,int,62     ! Solution method key  2
:C )*GET,_z2,common,,anscom,,int,52
:C )KEYW,NLCNTRL,_z2
:C )/GO
:D Spectrum Analysis
:K (lsdyna)
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_UI_anopts8
Inp_NoApply
Cmd_SPOPT
 Fld_0
  Typ_Lab
  Prm_[SPOPT]  Spectrum Analysis Options
 Fld_2
  Prm_Sptype  Type of spectrum
  Typ_LIS_RADIOB
  LIS_Single-pt resp  ,SPRS
  LIS_Multi-pt respons,MPRS
  P_LN(FULL_ANS)
  LIS_D.D.A.M.        ,DDAM
  P_LN(FULL_ANS)
  LIS_P.S.D.          ,PSD
  Def_*PAR(_zc(_z1+1))
Fld_0
Typ_SEP
 Fld_3
  Prm_NMODE   No. of modes for solu
  Typ_INT
  Def_*GET(common,,soptcm,,int,63)
 Fld_4
  Prm_Elcalc  Calculate elem stresses?
  Typ_LOGI,No,Yes
  Def_*GET(common,,soptcm,,int,64)
 Fld_0
  Typ_Lab
  Prm_        (for P.S.D. only)
 Fld_5
  Prm_modeReuseKey for MODE file
  Typ_LOGI,No,Yes
  Def_*GET(common,,soptcm,,int,214)
Cal_REFRESH
:E END
:! 
:N Fnc_An_Sub_CMS
:S    299,   131,   161
:T Command
:C )! Fnc_An_Sub_CMS
:D Substructuring/CMS
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
Inp_NoApply
Cmd_)!
 Fld_2
  Prm_ Analysis Type
  Typ_LIS_RADIOB
  LIS_Substructuring ,0
  LIS_CMS            ,1
Cal_Fnc_An_Opts_7,2,EQ,0
Cal_Fnc_Cms_Opts,2,EQ,1
:E END
:! 
:N Fnc_App_Coriolis
:S    702,   424,   271
:T Command
:C )! Fnc_App_Coriolis
:C )/NOPR
:C )*GET,_z1,common,,ACELCM,,real,16   ! global Cartesian coords (x) 
:C )*GET,_z2,common,,ACELCM,,real,17   ! global Cartesian coords (y) 
:C )*GET,_z3,common,,ACELCM,,real,18   ! global Cartesian coords (z) 
:C )/GO
:A Set Accel CS
:D Define Acceleration Coordinate System
:K #(PREP7*SOLUTION)
:K (LSDYNA)
:P (LINPLUS)
:H Hlp_C_CGLOC
Inp_NoApply
Cmd_CGLOC
Fld_0
 Typ_LAB
 Prm_[CGLOC]  Define Acceleration Coordinate System
Fld_0
 Typ_Sep
Fld_0
 Typ_Lab
 Prm_Set origin of acceleration coordinate system:
Fld_2
 Prm_X,Y,Z global cartesian coords
 Typ_REAL3
 Def_*PAR(_z1),*PAR(_z2),*PAR(_z3)
Fld_0
Typ_Sep
:E END
:! 
:N Fnc_App_Stress
:S    850,   215,   628
:T Command
:C )! Fnc_App_Stress
:C )/NOPR
:C )_z10= '*.*'
:C )_z11= '*'
:A Import Stress
:D Import initial stresses from a results file
:K (SOLUTION*PREP7)
:H Hlp_C_RIMPORT
Inp_NoApply
Cmd_RIMPORT
Fld_0
 Typ_LAB
 Prm_[RIMPORT]  Read stress and strain results for shell elements
Fld_0
 Typ_Sep
Fld_2
 Prm_SOURCE  Get results from
 Typ_Lis_OptionB
 Lis_DYNA run,DYNA
!Lis_User prog func,USER
 Lis_Don't import,OFF
Fld_3
 Typ_Def_STRESS
Fld_4
 Typ_Def_ELEM
Fld_5
 Prm_LSTEP   Load Step
  Typ_CHAR,4
  Def_LAST
Fld_6
 Prm_SBSTEP  Substep
  Typ_CHAR,4
  Def_LAST
Fld_7
 Prm_Filename, Extension, Directory
 Typ_FILE
K_LN(INTELNT*ALPHANT)
  Def_*PAR(_z10)
K_LN(intelnt+alphant)
  Def_*PAR(_z11)
Fld_8
 Prm_SPSCALE Stabilization Factor
  Typ_REAL
Fld_9
 Prm_MSCALE Acceptable Stab Limit
  Typ_REAL
Cmd_)/GOPR
:END  
:! 
:N Fnc_ArclenWarn
:S    350,   330,    13
:T Cmd
:C )! Fnc_ArclenWarn
:C )/NOPR
:C )*create,ansuitmp
:C )*msg,ui,
:C )Arc-length is not valid with LNSRCH, PRED, or &
:C )AUTOTS.  These commands will all be reset. &
:C )Please review the "Basic" and "Nonlinear" tabs &
:C )for related changes.
:C )*end
:C )/input,ansuitmp
:C )/GO
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_Aux12Fil
:S    235,   194,    34
:T Cmd
:C )! Fnc_Aux12Fil
:C )! The purpose of this block is to make the conversion
:C )! from UIDL to EUIDL function properly
:A Radiation Opts
:K aux12
Inp_P
! Exclude_from_paths
Cmd_)!
:E END
:! 
:N Fnc_AxisAdd
:S    237,   115,   115
:T Cmd
:C )! Fnc_AxisAdd
:A    Add
:D Add Axis Section
:K #(PREP7*SOLUTION)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_Add Axis Section with ID
  Typ_INT
Cmd_)/GO
Cal_Fnc_AxisAddEdit2
:E END
:! 
:N Fnc_AxisAddEdit2
:S    620,   520,    93
:T Cmd
:C )! Fnc_AxisAddEdit2
:C )/NOPR
:C )_zc3 = '    '
:C )_z2=sectinqr(_z1,1)
:C )*if,_z2,eq,1,then
:C )*get,_zc3,axis,_z1,type
:C )*if,_zc3,ne,'AXIS',then
:C )_z2=-1
:C )*endif
:C )*endif
:C )*if,_z2,eq,-1,then
:C )*create,ansuitmp
:C )*msg,ui,
:C )Section %_z1% is not an AXIS section. Please &
:C )delete this section first via the SDELETE &
:C )command.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C )/GO
:A    Add / Edit
:D Add or Edit Axis Section
:K #(PREP7*SOLUTION)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z2
Fld_2
Typ_Def_*PAR(_z2)
Cmd_)/GO
Cal_Fnc_AxisAddEdit3,2,NE,-1
:E END
:! 
:N Fnc_AxisAddEdit3
:S   1263,   508,   748
:T Cmd
:C )! Fnc_AxisAddEdit3
:C )/NOPR
:C )KEYW,AXISEXIS,_z2
:C )_z11=1
:C )_z12=0
:C )_z13=0
:C )_z14=0
:C )_z15=0
:C )_z16=0
:C )_z17=0
:C )_zcname=''
:C )*if,_z2,eq,1,then
:C )*GET,_zcname,axis,_z1,name
:C )*GET,_z11,axis,_z1,data,1
:C )*GET,_z12,axis,_z1,data,2
:C )*GET,_z13,axis,_z1,data,3
:C )*GET,_z14,axis,_z1,data,4
:C )*GET,_z15,axis,_z1,data,5
:C )*GET,_z16,axis,_z1,data,6
:C )*GET,_z17,axis,_z1,data,7
:C )*endif
:C )/GO
:D Add or Edit Axis Section
Cmd_SECTYPE
 Fld_0
 K_FL(AXISEXIS)
  Typ_Lab
  Prm_[SECTYPE]  Edit Axis Section %(I)_z1%
 Fld_0
 K_FL(axisexis)
  Typ_Lab
  Prm_[SECTYPE]  Add Axis Section %(I)_z1%
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_AXIS
 Fld_5
  Prm_          Section Name
  Typ_CHAR
  Def_*PAR(_zcname)
Cmd_SECDATA
 Fld_0
  Typ_Lab
  Prm_[SECDATA] Section Data
 Fld_2
  Prm_  Pattern
  Typ_LIS_OPTIONB
  Lis_2 Points        ,1
  Lis_CSYS plus axis  ,2
  Lis_Origin plus dir ,3
  Def_*PAR(_z11)
 Fld_3
  Prm_  V1
  Typ_REAL
  Def_*PAR(_z12)
 Fld_4
  Prm_  V2
  Typ_REAL
  Def_*PAR(_z13)
 Fld_5
  Prm_  V3
  Typ_REAL
  Def_*PAR(_z14)
 Fld_6
  Prm_  V4
  Typ_REAL
  Def_*PAR(_z15)
 Fld_7
  Prm_  V5
  Typ_REAL
  Def_*PAR(_z16)
 Fld_8
  Prm_  V6
  Typ_REAL
  Def_*PAR(_z17)
:E END
:! 
:N Fnc_AxisEdit
:S    460,   256,   197
:T Cmd
:C )! Fnc_AxisEdit
:C )/NOPR
:C )*get,_z1,active,,sect
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A    Edit
:D Edit Axis Section
:K #(PREP7*SOLUTION)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_Edit Axis Section with ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
Cmd_)/GO
Cal_Fnc_AxisAddEdit2
:E END
:! 
:N Fnc_BFADELE_all
:S    416,   180,   229
:T Command
:C )! Fnc_BFADELE_all
:A    On All Areas
:D Delete All Body Loads on All Selected Areas
:K #(PREP7*SOLUTION)
:H Hlp_C_BFADELE
Inp_NoApply
Cmd_BFADELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[BFADELE]  This function deletes all body loads
Fld_0
 Typ_Lab
 Prm_           on all selected areas and on all
Fld_0
 Typ_Lab
 Prm_           elements attached to those areas!
:E END
:! 
:N Fnc_BFADELE_chrg
:S    395,   249,   139
:T Cmd_P
:C )! Fnc_BFADELE_chrg
:A    On Areas
:D Delete CHRG on Areas
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFADELE
Inp_P
Cmd_BFADELE
Fld_2
 Prm_[BFADELE]  Pick or enter areas for charge density deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_CHRG
:E END
:! 
:N Fnc_BFADELE_ef
:S    358,   214,   137
:T Cmd_P
:C )! Fnc_BFADELE_ef
:A    On Areas
:D Delete EF on Areas
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFADELE
Inp_P
Cmd_BFADELE
Fld_2
 Prm_[BFADELE]  Pick or enter areas for electric field deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_EF
:E END
:! 
:N Fnc_BFADELE_flue
:S    328,   189,   132
:T Cmd_P
:C )! Fnc_BFADELE_flue
:A    On Areas
:D Delete FLUE on Areas
:K #((PREP7*SOLUTION)+(STRUCTRL*NOFILTER))
:P (FULL_ANS)
:H Hlp_C_BFADELE
Inp_P
Cmd_BFADELE
Fld_2
 Prm_[BFADELE]  Pick or enter areas for fluence deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FLUE
:E END
:! 
:N Fnc_BFADELE_h
:S    354,   211,   136
:T Cmd_P
:C )! Fnc_BFADELE_h
:A    On Areas
:D Delete H on Areas
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFADELE
Inp_P
Cmd_BFADELE
Fld_2
 Prm_[BFADELE]  Pick or enter areas for magnetic field deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_H
:E END
:! 
:N Fnc_BFADELE_hgen
:S    312,   165,   140
:T Cmd_P
:C )! Fnc_BFADELE_hgen
:A On Areas
:D Delete HGEN on Areas
:K #((PREP7*SOLUTION))
:P (THERMAL)
:H Hlp_C_BFADELE
Inp_P
Cmd_BFADELE
Fld_2
 Prm_[BFADELE]  Pick or enter areas for heat generation deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_HGEN
:E END
:! 
:N Fnc_BFADELE_js
:S    375,   230,   138
:T Cmd_P
:C )! Fnc_BFADELE_js
:A    On Areas
:D Delete JS on Areas
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFADELE
Inp_P
Cmd_BFADELE
Fld_2
 Prm_[BFADELE]  Pick or enter areas for current density deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_JS
:E END
:! 
:N Fnc_BFADELE_port
:S    358,   188,   163
:T Cmd_P
:C )! Fnc_BFADELE_port
:A    On Areas
:D Delete PORT on Areas
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFADELE
Inp_P
Cmd_BFADELE
Fld_2
 Prm_[BFADELE]  Pick or enter areas for interior ports deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Fld_3
 Typ_DEF_1
Fld_4
 Typ_DEF_PORT
:E END
:! 
:N Fnc_BFADELE_temp
:S    314,   171,   136
:T Cmd_P
:C )! Fnc_BFADELE_temp
:A On Areas
:D Delete TEMP on Areas
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFADELE
Inp_P
Cmd_BFADELE
Fld_2
 Prm_[BFADELE]  Pick or enter areas for temperature deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_BFADELE_vltg
:S    329,   185,   137
:T Cmd_P
:C )! Fnc_BFADELE_vltg
:A    On Areas
:D Delete VLTG on Areas
:K #(PREP7*SOLUTION)
:K (VFED*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFADELE
Inp_P
Cmd_BFADELE
Fld_2
 Prm_[BFADELE]  Pick or enter areas for voltage drop deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_VLTG
:E END
:! 
:N Fnc_BFADE_norm_v
:S    324,   176,   141
:T Cmd_P
:C )! Fnc_Fnc_BFADE_norm_v
:A On Areas
:D Delete Normal Velocity on Areas
:K #(PREP7*SOLUTION+TFILM*NOFILTER)
:H Hlp_C_BFA
Inp_P
Cmd_BFADELE
Fld_2
 Prm_[BFADELE]  Pick or enter areas for Normal Velosity deletioin
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FLUE
:E END
:! 
:N Fnc_BFALIS
:S    240,   125,   108
:T Cmd_P
:C )! Fnc_BFALIST
:A On Picked Areas
:D List Area Body Loads
:H Hlp_C_BFALIST
Inp_P
Cmd_BFALIST
Fld_2
Typ_AREA
Prm_[BFALIST] Pick or enter areas for Body Loads listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_BFA_chrg
:S    383,   236,   140
:T Cmd_P
:C )! Fnc_BFA_chrg
:A    On Areas
:D Apply CHRG on Areas
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFA
Inp_P
Cmd_)!
Fld_2
 Prm_[BFA]  Pick or enter areas for charge density specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFA_chrg2
:E END
:! 
:N Fnc_BFA_chrg2
:S    292,   124,   161
:T Command
:C )! Fnc_BFA_chrg2
:D Apply CHRG on Areas
:B Fnc_BFA_chrg
:H Hlp_C_BFA
Cmd_BFA,P51X
Fld_0
 Typ_LAB
 Prm_[BFA]  Apply Volumetric charge density (CHRG) on Areas
Fld_2
 Typ_DEF_CHRG
Fld_3
 Typ_REAL
 Prm_VAL1  Volumetric charge density
:E END
:! 
:N Fnc_BFA_ef
:S    347,   202,   138
:T Cmd_P
:C )! Fnc_BFA_ef
:A    On Areas
:D Apply EF on Areas
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFA
Inp_P
Cmd_)!
Fld_2
 Prm_[BFA]  Pick or enter areas for magnetic field specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFA_ef2
:E END
:! 
:N Fnc_BFA_ef2
:S    415,   116,   292
:T Command
:C )! Fnc_BFA_ef2
:D Apply EF on Areas
:B Fnc_BFA_ef
:H Hlp_C_BFA
Cmd_BFA,P51X
Fld_0
 Typ_LAB
 Prm_[BFA]  Apply Electric Field (EF) on Areas
Fld_2
 Typ_DEF_EF
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  EFX,EFY,EFZ components
 Typ_REAL3
Fld_5
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Mag field value (EFZ)
 Typ_REAL
Fld_6
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
:E END
:! 
:N Fnc_BFA_flue
:S    316,   176,   133
:T Cmd_P
:C )! Fnc_BFA_flue
:A    On Areas
:D Apply FLUE on Areas
:K #((PREP7*SOLUTION)+(STRUCTRL*NOFILTER))
:P (FULL_ANS)
:H Hlp_C_BFA
Inp_P
Cmd_)!
Fld_2
 Prm_[BFA]  Pick or enter areas for fluence specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFA_flue2
:E END
:! 
:N Fnc_BFA_flue2
:S    256,   124,   125
:T Command
:C )! Fnc_BFA_flue2
:D Apply FLUE on Areas
:B Fnc_BFA_flue
:H Hlp_C_BFA
Cmd_BFA,P51X
Fld_0
 Typ_LAB
 Prm_[BFA]  Apply Fluence (FLUE) on Areas
Fld_2
 Typ_DEF_FLUE
Fld_3
 Typ_REAL
 Prm_VAL1  Fluence
:E END
:! 
:N Fnc_BFA_h
:S    343,   199,   137
:T Cmd_P
:C )! Fnc_BFA_h
:A    On Areas
:D Apply H on Areas
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFA
Inp_P
Cmd_)!
Fld_2
 Prm_[BFA]  Pick or enter areas for magnetic field specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFA_h2
:E END
:! 
:N Fnc_BFA_h2
:S    405,   112,   286
:T Command
:C )! Fnc_BFA_h2
:D Apply H on Areas
:B Fnc_BFA_h
:H Hlp_C_BFA
Cmd_BFA,P51X
Fld_0
 Typ_LAB
 Prm_[BFA]  Apply Magnetic Field (H) on Areas
Fld_2
 Typ_DEF_H
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  HX,HY,HZ components
 Typ_REAL3
Fld_5
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Mag field value (HZ)
 Typ_REAL
Fld_6
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
:E END
:! 
:N Fnc_BFA_hgen
:S    386,   227,   152
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'BFA'
:C )*SET,_z9,'HGEN'
:C )/GO
:C )! Fnc_BFA_hgen
:A On Areas
:D Apply HGEN on ARs
:K #((PREP7*SOLUTION)
:P (THERMAL)
:H Hlp_C_BFA
Inp_P
Cmd_)!
Fld_2
 Prm_[BFA]  Pick or enter areas for heat generation specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
! Cust_Cmd_BFA
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_BFA_js
:S    364,   218,   139
:T Cmd_P
:C )! Fnc_BFA_js
:A    On Areas
:D Apply JS on Areas
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFA
Inp_P
Cmd_)!
Fld_2
 Prm_[BFA]  Pick or enter areas for current density specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFA_js2
:E END
:! 
:N Fnc_BFA_js2
:S    611,   159,   445
:T Command
:C )! Fnc_BFA_js2
:C )/NOPR
:C )*DEL,_zj
:C )*DIM,_zj,,5,1,1
:D Apply JS on Areas
:B Fnc_BFA_js
:H Hlp_C_BFA
Cmd_)*SET,_zj(1)
Fld_0
 Typ_LAB
 Prm_[BFA]  Apply Current Density (JS) on Areas
Fld_2
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  JSX,JSY,JSZ components
 Typ_REAL3
Fld_4
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Curr density value (JSZ)
 Typ_REAL
Fld_5
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
Fld_0
 Typ_Sep
Fld_0
 Typ_LAB
 Prm_Note:  If used to excite Transmission Line Port
Fld_6
 Prm_          enter Port number
 Typ_Int
 Def_0
Cmd_)/GO
Cal_Fnc_BFA_js3
:E END
:! 
:N Fnc_BFA_js3
:S    511,   184,   320
:T Command
:C )! Fnc_BFA_js3
:C )/NOPR
:C )*IF,_zj(5),le,0,THEN
:C )keyw,nospar,1
:C )*ELSE
:C )keyw,nospar,0
:C )_zp=-_zj(5)
:C )*ENDIF
:C )/GO
Inp_P
Cmd_BFA,P51X
Fld_2
 Typ_DEF_JS
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Typ_Def_*PAR(_zj(1))
Fld_4
 K_FL(ELEM3D*NOFILTER)
 Typ_Def_*PAR(_zj(2))
Fld_5
 K_FL(ELEM3D*NOFILTER)
 Typ_Def_*PAR(_zj(3))
Fld_5
 K_FL(ELEM2D+elem3d)
 Typ_Def_*PAR(_zj(3))
Fld_6
 K_FL(NOSPAR)
 Typ_Def_*PAR(_zj(4))
Fld_6
 K_FL(nospar)
 Typ_Def_*PAR(_zp)
:E END
:! 
:N Fnc_BFA_norm_v
:S    308,   167,   134
:T Cmd_P
:C )! Fnc_BFA_norm_v
:A On Areas
:D Apply Normal Velocity on Areas
:K #(PREP7*SOLUTION+TFILM*NOFILTER)
:H Hlp_C_BFA
Inp_P
Cmd_)!
Fld_2
 Prm_[BFA]  Pick or enter areas for Normal Velocity Load
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFA_norm_v1
:E END
:! 
:N Fnc_BFA_norm_v1
:S    281,   123,   151
:T Command
:C )! Fnc_BFA_norm_v1
:D Apply Normal Velocity on Areas
:H Hlp_C_BFA
Cmd_BFA,P51X
Fld_0
 Typ_LAB
 Prm_[BFA]  Apply Normal Velocity on Areas
Fld_2
 Typ_DEF_FLUE
Fld_3
 Prm_VAL1  Normal velocity value
 Typ_Real
 DEF_Blank
:E END
:! 
:N Fnc_BFA_temp
:S    302,   158,   137
:T Cmd_P
:C )! Fnc_BFA_temp
:A On Areas
:D Apply TEMP on Areas
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFA
Inp_P
Cmd_)!
Fld_2
 Prm_[BFA]  Pick or enter areas for temperature specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFA_temp2
:E END
:! 
:N Fnc_BFA_temp2
:S    595,   205,   383
:T Command
:C )! Fnc_BFA_temp2
:C )/NOPR
:C )*SET,_z7,'BFA'
:C )*SET,_z9,'TEMP'
:C )*SET,_z10,'Areas'
:C )/GOPR
:D Apply TEMP on Areas
:B Fnc_BFA_temp
:H Hlp_C_BFA
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[BFA]  Apply Temperature (TEMP) on Areas
Fld_8
  Prm_       Apply as
  Typ_LIS_OPTIONB
  LIS_Constant value,0
  LIS_Existing table,1
  LIS_New table,2
  Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_2
 Typ_REAL
 Prm_VAL1  Temperature 
cmd_)/GOPR
 Cal_Fnc_BF_tem3a,8,eq,0,2
 Cal_Fnc_BF_tem3b2,8,eq,1,2
 Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_BFA_vltg
:S    317,   172,   138
:T Cmd_P
:C )! Fnc_BFA_vltg
:A    On Areas
:D Apply VLTG on Areas
:K #(PREP7*SOLUTION)
:K (VFED*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFA
Inp_P
Cmd_)!
Fld_2
 Prm_[BFA]  Pick or enter areas for voltage drop specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFA_vltg2
:E END
:! 
:N Fnc_BFA_vltg2
:S    346,   124,   215
:T Command
:C )! Fnc_BFA_vltg2
:D Apply VLTG on Areas
:B Fnc_BFA_vltg
:H Hlp_C_BFA
Cmd_BFA,P51X
Fld_0
 Typ_LAB
 Prm_[BFA]  Apply Uniform Voltage drop (VLTG) on Areas
Fld_2
 Typ_DEF_VLTG
Fld_3
 Prm_VAL1  Voltage drop mag. (VLTG)
 Typ_REAL
Fld_4
 Typ_REAL
 DEF_Blank
 Prm_VAL2  Phase angle (degrees)
:E END
:! 
:N Fnc_BFCUM
:S   3618,  1678,  1933
:T Command
:C )! Fnc_BFCUM
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,8
:C )*GET,_z1,common,,loadcm,,int,18  ! New load values operation key 
:C )*IF,_z1,eq,0,then
:C )_zc(1)='REPL'
:C )*ELSEIF,_z1,eq,1,then
:C )_zc(1)='ADD'
:C )*ELSEIF,_z1,eq,-1,then
:C )_zc(1)='IGNO'
:C )*ENDIF
:C )*GET,_z2,common,,loadcm,,int,19  ! New load values operation key 
:C )*IF,_z2,eq,0,then
:C )_zc(2)='REPL'
:C )*ELSEIF,_z2,eq,1,then
:C )_zc(2)='ADD'
:C )*ELSEIF,_z2,eq,-1,then
:C )_zc(2)='IGNO'
:C )*ENDIF
:C )*GET,_z3,common,,loadcm,,int,40  ! New load values operation key 
:C )*IF,_z3,eq,0,then
:C )_zc(3)='REPL'
:C )*ELSEIF,_z3,eq,1,then
:C )_zc(3)='ADD'
:C )*ELSEIF,_z3,eq,-1,then
:C )_zc(3)='IGNO'
:C )*ENDIF
:C )*GET,_z4,common,,loadcm,,int,20  ! New load values operation key 
:C )*IF,_z4,eq,0,then
:C )_zc(4)='REPL'
:C )*ELSEIF,_z4,eq,1,then
:C )_zc(4)='ADD'
:C )*ELSEIF,_z4,eq,-1,then
:C )_zc(4)='IGNO'
:C )*ENDIF
:C )*GET,_z5,common,,loadcm,,int,21  ! New load values operation key 
:C )*IF,_z5,eq,0,then
:C )_zc(5)='REPL'
:C )*ELSEIF,_z5,eq,1,then
:C )_zc(5)='ADD'
:C )*ELSEIF,_z5,eq,-1,then
:C )_zc(5)='IGNO'
:C )*ENDIF
:C )*GET,_z6,common,,loadcm,,int,23  ! New load values operation key 
:C )*IF,_z6,eq,0,then
:C )_zc(6)='REPL'
:C )*ELSEIF,_z6,eq,1,then
:C )_zc(6)='ADD'
:C )*ELSEIF,_z6,eq,-1,then
:C )_zc(6)='IGNO'
:C )*ENDIF
:C )*GET,_z7,common,,loadcm,,int,23  ! New load values operation key 
:C )*IF,_z7,eq,0,then
:C )_zc(7)='REPL'
:C )*ELSEIF,_z7,eq,1,then
:C )_zc(7)='ADD'
:C )*ELSEIF,_z7,eq,-1,then
:C )_zc(7)='IGNO'
:C )*ENDIF
:C )/GO
:A    Nodal Body Ld
:D Replace/Add Setting for Nodal Body Loads
:K #(PREP7*SOLUTION)
:H Hlp_C_BFCUM
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[BFCUM]  Replace/Add Setting for Nodal Body Loads
 Fld_0
 Typ_Sep
Cmd_BFCUM
P_CM(LINPLUS*ELECMAG)
 Fld_0
  Prm_Temperature          (TEMP)
 Fld_2
 Typ_Def_TEMP
 Fld_3
  Prm_   Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(1))
 Fld_4
  Prm_   FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,27)
 Fld_5
  Prm_   TBASE  Base temperature
  Typ_REAL
  Def_*GET(common,,loadcm,,real,34)
Cmd_BFCUM
P_CM(THERMAL*FLOTRAN)
 Fld_0
 Typ_Sep
 Fld_0
  Prm_Heat generation      (HGEN)
 Fld_2
 Typ_Def_HGEN
 Fld_3
  Prm_   Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(2))
 Fld_4
  Prm_   FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,28)
Cmd_BFCUM
P_CM(ELECMAG)
 Fld_0
 Typ_Sep
 Fld_0
  Prm_Charge Density       (CHRGD)
 Fld_2
 Typ_Def_CHRGD
 Fld_3
  Prm_   Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(3))
 Fld_4
  Prm_   FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,39)
Cmd_BFCUM
P_CM(FULL_ANS)
 Fld_0
 Typ_Sep
 Fld_0
  Prm_Fluence              (FLUE)
 Fld_2
 Typ_Def_FLUE
 Fld_3
  Prm_   Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(4))
 Fld_4
  Prm_   FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,29)
Cmd_BFCUM
P_CM(ELECMAG)
 Fld_0
 Typ_Sep
 Fld_0
  Prm_Current density      (JS)
 Fld_2
  Typ_Def_JS
 Fld_3
  Prm_   Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(7))
 Fld_4
  Prm_   FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,32)
:E END
:! 
:N Fnc_BFDELE_Force
:S    322,   182,   133
:T Cmd_P
:C )! Fnc_BFDELE_Force
:A On Nodes
:D Delete FORCE on Nodes
:K (lsdyna)
:K ((PREP7*SOLUTION)+(CFD))
:P (FLOTRAN)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE
Fld_2
 Prm_[BFDELE]  Pick or enter nodes for body force deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FORC
:E END
:! 
:N Fnc_BFDELE_all
:S    337,   177,   153
:T Command
:C )! Fnc_BFDELE_all
:A    On All Nodes
:D Delete All Body Loads on All Selected Nodes
:K #(PREP7*SOLUTION)
:H Hlp_C_BFDELE
Inp_NoApply
Cmd_BFDELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[BFEDELE]  This function deletes all body loads
Fld_0
 Typ_Lab
 Prm_           on all selected nodes!
:E END
:! 
:N Fnc_BFDELE_chrg
:S    392,   247,   138
:T Cmd_P
:C )! Fnc_BFDELE_chrg
:A    On Nodes
:D Delete CHRGD on Nodes
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE
Fld_2
 Prm_[BFDELE]  Pick or enter nodes for charge density deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_CHRGD
:E END
:! 
:N Fnc_BFDELE_dyna
:S    151,   118,    26
:T Cmd_N
:C )! Fnc_BFDELE_dyna
:A Delete Temps
:K (LSDYNA)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE,ALL,TEMP
:E END
:! 
:N Fnc_BFDELE_ef
:S    353,   211,   135
:T Cmd_P
:C )! Fnc_BFDELE_ef
:A    On Nodes
:D Delete EF on Nodes
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE
Fld_2
 Prm_[BFDELE]  Pick or enter nodes for electric field deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_EF
:E END
:! 
:N Fnc_BFDELE_flue
:S    323,   186,   130
:T Cmd_P
:C )! Fnc_BFDELE_flue
:A    On Nodes
:D Delete FLUE on Nodes
:K #((PREP7*SOLUTION)+(STRUCTRL*NOFILTER))
:P (FULL_ANS)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE
Fld_2
 Prm_[BFDELE]  Pick or enter nodes for fluence deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FLUE
:E END
:! 
:N Fnc_BFDELE_h
:S    349,   208,   134
:T Cmd_P
:C )! Fnc_BFDELE_h
:A    On Nodes
:D Delete H on Nodes
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE
Fld_2
 Prm_[BFDELE]  Pick or enter nodes for magnetic field deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_H
:E END
:! 
:N Fnc_BFDELE_hgen
:S    313,   168,   138
:T Cmd_P
:C )! Fnc_BFDELE_hgen
:A On Nodes
:D Delete HGEN on Nodes
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE
Fld_2
 Prm_[BFDELE]  Pick or enter nodes for heat generation deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_HGEN
:E END
:! 
:N Fnc_BFDELE_js
:S    370,   227,   136
:T Cmd_P
:C )! Fnc_BFDELE_js
:A    On Nodes
:D Delete JS on Nodes
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE
Fld_2
 Prm_[BFDELE]  Pick or enter nodes for current density deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_JS
:E END
:! 
:N Fnc_BFDELE_mvdi
:S    344,   194,   143
:T Cmd_P
:C )! Fnc_BFDELE_mvdi
:A    On Nodes
:D Delete MVDI on Nodes
:K #(PREP7*SOLUTION)
:K (MAGNETIC*EDGEFLX*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE
Fld_2
 Prm_[BFDELE]  Pick or enter nodes for virtual displacement deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_MVDI
:E END
:! 
:N Fnc_BFDELE_port
:S    329,   185,   137
:T Cmd_P
:C )! Fnc_BFDELE_port
:A    On Nodes
:D Delete PORT on Nodes
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE
Fld_2
 Prm_[BFDELE]  Pick or enter nodes for interior ports deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_PORT
:E END
:! 
:N Fnc_BFDELE_teCM
:S    402,   251,   144
:T Cmd_P
:C )! Fnc_BFDELE_teCM
:C )/UI,CMPF,NODE ! *** restrict picker to NODE components ***
:A On Node Components
:D Delete TEMP on Node Components
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE
Fld_2
 Prm_[BFDELE]  Pick or enter node components for temperature deletion
 Typ_COMP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_BFDELE_temp
:S    309,   168,   134
:T Cmd_P
:C )! Fnc_BFDELE_temp
:A On Nodes
:D Delete TEMP on Nodes
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE
Fld_2
 Prm_[BFDELE]  Pick or enter nodes for temperature deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_BFDEL_p
:S    268,   129,   132
:T Cmd_P
:C )! Fnc_BFDEL_p ORPHAN
:A    On Nodes
:D Dele Body Ld on Nodes
:H Hlp_C_BFDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFDELE]  Pick or enter nodes for body load deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFDEL_p2
:E END
:! 
:N Fnc_BFDEL_p2
:S    453,   133,   313
:T Command
:C )! Fnc_BFDEL_p2 ORPHAN
:D Dele Body Ld on Nodes
:B Fnc_BFDEL_p
:H Hlp_C_BFDELE
Cmd_BFDELE,P51X
Fld_0
 Typ_LAB
 Prm_[BFDELE]  Delete Body Load on Nodes
Fld_2
 Prm_Lab     Type of body load
 Typ_LIS_OPTIONB
 LIS_All loads       ,ALL
 LIS_Temperature     ,TEMP
 LIS_Fluence         ,FLUE
 LIS_Heat generation ,HGEN
 LIS_Current density ,JS
 LIS_Mag virtual disp,MVDI
 LIS_Charge density  ,CHRGD
:E END
:! 
:N Fnc_BFECUM
:S   3529,  1385,  2137
:T Command
:C )! Fnc_BFECUM
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,7
:C )*GET,_z1,common,,loadcm,,int,11  ! New load values operation key 
:C )*IF,_z1,eq,0,then
:C )_zc(1)='REPL'
:C )*ELSEIF,_z1,eq,-1,then
:C )_zc(1)='IGNO'
:C )*ENDIF
:C )*GET,_z2,common,,loadcm,,int,12  ! New load values operation key 
:C )*IF,_z2,eq,0,then
:C )_zc(2)='REPL'
:C )*ELSEIF,_z2,eq,-1,then
:C )_zc(2)='IGNO'
:C )*ENDIF
:C )*GET,_z3,common,,loadcm,,int,39  ! New load values operation key 
:C )*IF,_z3,eq,0,then
:C )_zc(3)='REPL'
:C )*ELSEIF,_z3,eq,-1,then
:C )_zc(3)='IGNO'
:C )*ENDIF
:C )*GET,_z4,common,,loadcm,,int,13  ! New load values operation key 
:C )*IF,_z4,eq,0,then
:C )_zc(4)='REPL'
:C )*ELSEIF,_z4,eq,-1,then
:C )_zc(4)='IGNO'
:C )*ENDIF
:C )*GET,_z5,common,,loadcm,,int,14  ! New load values operation key 
:C )*IF,_z5,eq,0,then
:C )_zc(5)='REPL'
:C )*ELSEIF,_z5,eq,-1,then
:C )_zc(5)='IGNO'
:C )*ENDIF
:C )*GET,_z6,common,,loadcm,,int,16  ! New load values operation key 
:C )*IF,_z6,eq,0,then
:C )_zc(6)='REPL'
:C )*ELSEIF,_z6,eq,-1,then
:C )_zc(6)='IGNO'
:C )*ENDIF
:C )*GET,_z7,common,,loadcm,,int,15  ! New load values operation key 
:C )*IF,_z7,eq,0,then
:C )_zc(7)='REPL'
:C )*ELSEIF,_z7,eq,-1,then
:C )_zc(7)='IGNO'
:C )*ENDIF
:C )/GO
:A    Elem Body Lds
:D Replace/Ignore Setting for Element Body Loads
:K #(PREP7*SOLUTION)
:H Hlp_C_BFECUM
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[BFECUM]  Replace/Ignore Setting for Element Body Loads
 Fld_0
  Typ_Sep
Cmd_BFECUM
P_CM(LINPLUS)
 Fld_0
  Prm_Temperature          (TEMP)
 Fld_2
 Typ_Def_TEMP
 Fld_3
  Prm_   Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(1))
 Fld_4
  Prm_   FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,19)
 Fld_5
  Prm_   TBASE  Base temperature
  Typ_REAL
  Def_*GET(common,,loadcm,,real,26)
Cmd_BFECUM
P_CM(THERMAL*FLOTRAN)
 Fld_0
 Typ_Sep
 Fld_0
  Prm_Heat generation      (HGEN)
 Fld_2
 Typ_Def_HGEN
 Fld_3
  Prm_   Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(2))
 Fld_4
  Prm_   FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,20)
Cmd_BFECUM
P_CM(ELECMAG)
 Fld_0
 Typ_Sep
 Fld_0
  Prm_Charge Density       (CHRGD)
 Fld_2
 Typ_Def_CHRGD
 Fld_3
  Prm_   Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(3))
 Fld_4
  Prm_   FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,38)
Cmd_BFECUM
P_CM(FULL_ANS)
 Fld_0
 Typ_Sep
 Fld_0
  Prm_Fluence              (FLUE)
 Fld_2
 Typ_Def_FLUE
 Fld_3
  Prm_   Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(4))
 Fld_4
  Prm_   FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,21)
Cmd_BFECUM
P_CM(ELECMAG)
 Fld_0
 Typ_Sep
 Fld_0
  Prm_Current density      (JS)
 Fld_2
  Typ_Def_JS
 Fld_3
  Prm_   Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(6))
 Fld_4
  Prm_   FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,24)
Cmd_BFECUM
P_CM(ELECMAG)
K_CM(VFED)
 Fld_0
 Typ_Sep
 Fld_0
  Prm_Voltage drop         (VLTG)
 Fld_2
  Typ_Def_VLTG
 Fld_3
  Prm_   Oper   New load values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_zc(7))
 Fld_4
  Prm_   FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,23)
:E END
:! 
:N Fnc_BFEDELE_FVIN
:S    291,   151,   133
:T Cmd_P
:C )! Fnc_BFEDEL_FVIN
:A On Elements
:D Delete FVIN on Elements
:K #(PREP7*SOLUTION)
:H Hlp_C_BFE
Inp_P
Cmd_BFEDELE
Fld_2
 Prm_[BFEDELE]  Pick or enter elements for FVIN deletioin
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FVIN
:E END
:! 
:N Fnc_BFEDELE_all
:S    347,   183,   157
:T Command
:C )! Fnc_BFEDELE_all
:A    On All Elems
:D Delete All Body Loads on All Selected Elements
:K #(PREP7*SOLUTION)
:H Hlp_C_BFEDELE
Inp_NoApply
Cmd_BFEDELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[BFEDELE]  This function deletes all body loads
Fld_0
 Typ_Lab
 Prm_           on all selected elements!
:E END
:! 
:N Fnc_BFEDELE_chrg
:S    403,   253,   143
:T Cmd_P
:C )! Fnc_BFEDELE_chrg
:A    On Elements
:D Delete CHRGD on Elems
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFEDELE
Inp_P
Cmd_BFEDELE
Fld_2
 Prm_[BFEDELE]  Pick or enter elements for charge density deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_CHRGD
:E END
:! 
:N Fnc_BFEDELE_ef
:S    364,   217,   140
:T Cmd_P
:C )! Fnc_BFEDELE_ef
:A    On Elements
:D Delete EF on Elems
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFEDELE
Inp_P
Cmd_BFEDELE
Fld_2
 Prm_[BFEDELE]  Pick or enter elements for electric field deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_EF
:E END
:! 
:N Fnc_BFEDELE_flue
:S    312,   170,   135
:T Cmd_P
:C )! Fnc_BFEDELE_flue
:A    On Elements
:D Delete FLUE on Elems
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_BFEDELE
Inp_P
Cmd_BFEDELE
Fld_2
 Prm_[BFEDELE]  Pick or enter elements for fluence deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FLUE
:E END
:! 
:N Fnc_BFEDELE_h
:S    360,   214,   139
:T Cmd_P
:C )! Fnc_BFEDELE_h
:A    On Elements
:D Delete H on Elems
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFEDELE
Inp_P
Cmd_BFEDELE
Fld_2
 Prm_[BFEDELE]  Pick or enter elements for magnetic field deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_H
:E END
:! 
:N Fnc_BFEDELE_hgen
:S    324,   174,   143
:T Cmd_P
:C )! Fnc_BFEDELE_hgen
:A On Elements
:D Delete HGEN on Elems
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_BFEDELE
Inp_P
Cmd_BFEDELE
Fld_2
 Prm_[BFEDELE]  Pick or enter elements for heat generation deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_HGEN
:E END
:! 
:N Fnc_BFEDELE_js
:S    381,   233,   141
:T Cmd_P
:C )! Fnc_BFEDELE_js
:A    On Elements
:D Delete JS on Elems
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFEDELE
Inp_P
Cmd_BFEDELE
Fld_2
 Prm_[BFEDELE]  Pick or enter elements for current density deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_JS
:E END
:! 
:N Fnc_BFEDELE_p
:S    282,   137,   138
:T Cmd_P
:C )! Fnc_BFEDELE_p ORPHAN
:A    On Elements
:D Dele Body Ld on Elems
:H Hlp_C_BFEDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFEDELE]  Pick or enter elements for body load deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFEDELE_p2
:E END
:! 
:N Fnc_BFEDELE_p2
:S    464,   140,   317
:T Command
:C )! Fnc_BFEDELE_p2 ORPHAN
:D Dele Body Ld on Elems
:B Fnc_BFEDELE_p
:H Hlp_C_BFEDELE
Cmd_BFEDELE,P51X
Fld_0
 Typ_LAB
 Prm_[BFEDELE]  Delete Body Load on Elements
Fld_2
 Prm_Lab    Type of body load
 Typ_LIS_OPTIONB
 LIS_All loads       ,ALL
 LIS_Temperature     ,TEMP
 LIS_Fluence         ,FLUE
 LIS_Heat generation ,HGEN
 LIS_Current density ,JS
 LIS_Mag virtual disp,MVDI
 LIS_Charge density  ,CHRGD
:E END
:! 
:N Fnc_BFEDELE_teCM
:S    408,   252,   149
:T Cmd_P
:C )! Fnc_BFEDELE_teCM
:C )/UI,CMPF,ELEM ! *** restrict picker to ELEM components ***
:A On Element Components
:D Delete TEMP on Element Components
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_BFEDELE
Inp_P
Cmd_BFEDELE
Fld_2
 Prm_[BFEDELE]  Pick or enter element components for temperature deletion
 Typ_COMP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_BFEDELE_temp
:S    312,   166,   139
:T Cmd_P
:C )! Fnc_BFEDELE_temp
:A On Elements
:D Delete TEMP on Elems
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_BFEDELE
Inp_P
Cmd_BFEDELE
Fld_2
 Prm_[BFEDELE]  Pick or enter elements for temperature deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_BFEDELE_vltg
:S    355,   188,   140
:T Cmd_P
:C )! Fnc_BFEDELE_vltg
:A    On Elements
:D Delete VLTG on Elems
:K #(PREP7*SOLUTION)
:K (VFED*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFEDELE
Inp_P
Cmd_BFEDELE
Fld_2
 Prm_[BFEDELE]  Pick or enter elements for voltage drop deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_VLTG
:E END_of_Fnc_BFEDELE_vltg
:! 
:N Fnc_BFEDE_norm_v
:S    333,   182,   144
:T Cmd_P
:C )! Fnc_Fnc_BFEDE_norm_v
:A On Elements
:D Delete Normal Velocity on Elements
:K #(PREP7*SOLUTION+TFILM*NOFILTER)
:H Hlp_C_BFE
Inp_P
Cmd_BFEDELE
Fld_2
 Prm_[BFEDELE]  Pick or enter elements for Normal Velosity deletioin
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FLUE
:E END
:! 
:N Fnc_BFELIS
:S    241,   124,   110
:T Cmd_P
:C )! Fnc_BFELIS
:A On Picked Elems
:D List Elem Body Loads
:H Hlp_C_BFELIST
Inp_P
Cmd_BFELIST
Fld_2
Typ_ELEM
Prm_[BFELIST] Pick or enter elements for body load listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_BFESCAL
:S    799,   154,   638
:T Command
:C )! Fnc_BFESCAL
:A    Elem Body Lds
:D Scale Element Body Loads
:K #(PREP7*SOLUTION)
:H Hlp_C_BFESCAL
Cmd_BFESCAL
 Fld_0
  Typ_Lab
  Prm_[BFESCAL]  Scale Element Body Loads on All Selected Elements
 Fld_2
  Prm_Lab    Type of body load
  Typ_LIS_OPTIONB
  LIS_All body loads  ,ALL
   P_LN(LINPLUS)
  LIS_Temperature     ,TEMP
   P_LN(THERMAL*FLOTRAN)
  LIS_Heat generation ,HGEN
   P_LN(FULL_ANS)
  LIS_Fluence         ,FLUE
   P_LN(ELECMAG)
  LIS_Current density ,JS
   P_LN(ELECMAG)
  LIS_Charge density  ,CHRGD
   K_LN(VFED)
   P_LN(ELECMAG)
  LIS_Voltage drop    ,VLTG
 Fld_3
  Prm_FACT   Scale factor
  Typ_REAL
  Def_1.0
 Fld_4
  Prm_TBASE  Base temperature -
  Typ_REAL
 Fld_0
  Typ_Lab
  Prm_       - used for temperature load only
:E END
:! 
:N Fnc_BFE_EF
:S    389,   241,   141
:T Cmd_P
:C )! Fnc_BFE_EF
:C )! Elements for BFE command below
:A    On Elements
:D Apply EF on Elems
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+ELEM3D)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for electric field specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFE_EF2
:E END
:! 
:N Fnc_BFE_EF2
:S    312,   116,   189
:T Command
:C )! Fnc_BFE_EF2
:D Apply EF on Elems
:B Fnc_BFE_EF
:H Hlp_C_BFE
Cmd_BFE,P51X
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Electric Field (EF) on Elements
Fld_2
 Typ_DEF_EF
Fld_3
 Typ_Def_1
Fld_4
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  EFX,EFY,EFZ components
 Typ_REAL3
:E END
:! 
:N Fnc_BFE_FVI2
:S    281,   109,   165
:T Command
:C )! Fnc_BFE_FVI2
:D Apply FVIN on Elements
:H Hlp_C_BFE
Cmd_BFE,P51X
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Field Volume Interface (FVIN) on Elements
Fld_2
 Typ_DEF_FVIN
Fld_4
 Prm_VAL1     Interface number
 Typ_Int
 DEF_Blank
:E END
:! 
:N Fnc_BFE_FVIN
:S    286,   143,   136
:T Cmd_P
:C )! Fnc_BFE_FVIN
:A On Elements
:D Apply FVIN on Elements
:K #(PREP7*SOLUTION)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for Field Volume Interface
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFE_FVI2
:E END
:! 
:N Fnc_BFE_chrgd
:S    430,   279,   144
:T Cmd_P
:C )! Fnc_BFE_chrgd
:C )! Elements for BFE command below
:A    On Elements
:D Apply CHRGD on Elems
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for charge density specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFE_chrgd2
:E END
:! 
:N Fnc_BFE_chrgd2
:S    542,   128,   407
:T Command
:C )! Fnc_BFE_chrgd2
:D Apply CHRGD on Elems
:B Fnc_BFE_chrgd
:H Hlp_C_BFE
Cmd_BFE,P51X
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Charge Density (CHRGD) on Elements
Fld_2
 Typ_DEF_CHRGD
Fld_3
 Typ_INT
 Prm_STLOC  Starting location N
Fld_4
 Typ_REAL
 DEF_Blank
 Prm_VAL1   Charge density at loc N
Fld_5
 Typ_REAL
 DEF_Blank
 Prm_VAL2   Charge density at loc N+1
Fld_6
 Typ_REAL
 DEF_Blank
 Prm_VAL3   Charge density at loc N+2
Fld_7
 Typ_REAL
 DEF_Blank
 Prm_VAL4   Charge density at loc N+3
:E END
:! 
:N Fnc_BFE_ef
:S    390,   242,   141
:T Cmd_P
:C )! Fnc_BFE_ef
:C )! Elements for BFE command below
:A    On Elements
:D Apply EF on Elems
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for magnetic field specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFE_ef2
:E END
:! 
:N Fnc_BFE_ef2
:S    454,   116,   331
:T Command
:C )! Fnc_BFE_ef2
:D Apply EF on Elems
:B Fnc_BFE_ef
:H Hlp_C_BFE
Cmd_BFE,P51X
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Uniform Electric Field (EF) on Elements
Fld_2
 Typ_DEF_EF
Fld_3
 Typ_Def_1
Fld_4
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  EFX,EFY,EFZ components
 Typ_REAL3
Fld_6
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Mag field value (EFZ)
 Typ_REAL
Fld_7
 Typ_REAL
 DEF_Blank
 Prm_VAL4    Phase angle (degrees)
:E END
:! 
:N Fnc_BFE_flue
:S    360,   216,   137
:T Cmd_P
:C )! Fnc_BFE_flue
:C )! Elements for BFE command below
:A    On Elements
:D Apply FLUE on Elems
:K #((PREP7*SOLUTION)+(STRUCTRL*NOFILTER))
:P (FULL_ANS)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for fluence specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BFE_flue2
:E END
:! 
:N Fnc_BFE_flue2
:S    528,   124,   397
:T Command
:C )! Fnc_BFE_flue2
:D Apply FLUE on Elems
:B Fnc_BFE_flue
:H Hlp_C_BFE
Cmd_BFE,P51X
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Fluence (FLUE) on Elements
Fld_2
 Typ_DEF_FLUE
Fld_3
 Prm_STLOC  Starting location N
 Typ_INT
 Def_1
Fld_4
 Typ_REAL
 DEF_Blank
 Prm_VAL1   Fluence at location N
Fld_5
 Typ_REAL
 DEF_Blank
 Prm_VAL2   Fluence at location N+1
Fld_6
 Typ_REAL
 DEF_Blank
 Prm_VAL3   Fluence at location N+2
Fld_7
 Typ_REAL
 DEF_Blank
 Prm_VAL4   Fluence at location N+3
:E END
:! 
:N Fnc_BFE_h
:S    386,   239,   140
:T Cmd_P
:C )! Fnc_BFE_h
:C )! Elements for BFE command below
:A    On Elements
:D Apply H on Elems
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for magnetic field specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFE_h2
:E END
:! 
:N Fnc_BFE_h2
:S    448,   116,   325
:T Command
:C )! Fnc_BFE_h2
:D Apply H on Elems
:B Fnc_BFE_chrgd
:H Hlp_C_BFE
Cmd_BFE,P51X
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Uniform Magnetic Field (H) on Elements
Fld_2
 Typ_DEF_H
Fld_3
 Typ_Def_1
Fld_4
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  HX,HY,HZ components
 Typ_REAL3
Fld_6
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Mag field value (HZ)
 Typ_REAL
Fld_7
 Typ_REAL
 DEF_Blank
 Prm_VAL4    Phase angle (degrees)
:E END
:! 
:N Fnc_BFE_hgen
:S    438,   276,   155
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'elems'
:C )*SET,_z8,'BFE'
:C )*SET,_z9,'HGEN'
:C )/GO
:C )! Fnc_BFE_hgen
:C )! Elements for BFE command below
:A On Elements
:D Apply HGEN on Elems
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for heat generation specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
! Cust_Cmd_BFE
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_BFE_js
:S    407,   258,   142
:T Cmd_P
:C )! Fnc_BFE_js
:C )! Elements for BFE command below
:A    On Elements
:D Apply JS on Elems
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for current density specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFE_js2
:E END
:! 
:N Fnc_BFE_js2
:S    461,   119,   335
:T Command
:C )! Fnc_BFE_js2
:D Apply JS on Elems
:B Fnc_BFE_chrgd
:H Hlp_C_BFE
Cmd_BFE,P51X
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Uniform Current Density (JS) on Elements
Fld_2
 Typ_DEF_JS
Fld_3
 Typ_Def_1
Fld_4
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  JSX,JSY,JSZ components
 Typ_REAL3
Fld_6
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Curr density value (JSZ)
 Typ_REAL
Fld_7
 Typ_REAL
 DEF_Blank
 Prm_VAL4    Phase angle (degrees)
:E END
:! 
:N Fnc_BFE_norm_v
:S    317,   173,   137
:T Cmd_P
:C )! Fnc_BFE_norm_v
:A On Elements
:D Apply Normal Velocity on Elements
:K #(PREP7*SOLUTION+TFILM*NOFILTER)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for Normal Velocity Load
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFE_norm_v1
:E END
:! 
:N Fnc_BFE_norm_v1
:S    287,   126,   154
:T Command
:C )! Fnc_BFE_norm_v1
:D Apply Normal Velocity on Elements
:H Hlp_C_BFE
Cmd_BFE,P51X
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Normal Velocity on Elements
Fld_2
 Typ_DEF_FLUE
Fld_4
 Prm_VAL1  Normal velocity value
 Typ_Real
 DEF_Blank
:E END
:! 
:N Fnc_BFE_p
:S    268,   126,   135
:T Cmd_P
:C )! Fnc_BFE_p ORPHAN
:A    On Elements
:D Apply Body Ld on Elems
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for body load specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFE_p2
:E END
:! 
:N Fnc_BFE_p2
:S    715,   125,   583
:T Command
:C )! Fnc_BFE_p2 ORPHAN
:D Apply Body Ld on Elems
:B Fnc_BFE_p
:H Hlp_C_BFE
Cmd_BFE,P51X
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Body Load on Elements
Fld_2
 Prm_Lab    Type of body load
 Typ_LIS_OPTIONB
 LIS_Temperature     ,TEMP
 LIS_Fluence         ,FLUE
 LIS_Heat generation ,HGEN
 LIS_Current density ,JS
 LIS_Mag virtual disp,MVDI
 LIS_Charge density  ,CHRGD
Fld_3
 Prm_STLOC  Starting location N
 Typ_INT
 DEF_1
Fld_4
 Prm_VAL1   Load value at location N
 Typ_REAL
 DEF_Blank
Fld_5
 Prm_VAL2   Load value at loc N+1
 Typ_REAL
 DEF_Blank
Fld_6
 Prm_VAL3   Load value at loc N+2
 Typ_REAL
 DEF_Blank
Fld_7
 Prm_VAL4   Load value at loc N+3
 Typ_REAL
 DEF_Blank
:E END
:! 
:N Fnc_BFE_temp
:S    338,   190,   141
:T Cmd_P
:C )! Fnc_BFE_temp
:C )! Elements for BFE command below
:A On Elements
:D Apply TEMP on Elems
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for temperature specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BFE_temp2
:E END
:! 
:N Fnc_BFE_temp2
:S    869,   205,   657
:T Command
:C )! Fnc_BFE_temp2
:C )/NOPR
:C )*SET,_z7,'BFE'
:C )*SET,_z9,'TEMP'
:C )*SET,_z10,'Elems'
:C )/GOPR
:D Apply TEMP on Elems
:B Fnc_BFE_temp
:H Hlp_C_BFE
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Structural Temperatures (TEMP) on Elements
Fld_2
 Prm_STLOC  Starting location N
 Typ_INT
 DEF_1
Fld_8
 Prm_       Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 Prm_VAL1   Temperature at location N
 Typ_REAL
 DEF_Blank
Fld_4
 Prm_VAL2   Temperature at loc N+1
 Typ_REAL
 DEF_Blank
Fld_5
 Prm_VAL3   Temperature at loc N+2
 Typ_REAL
 DEF_Blank
Fld_6
 Prm_VAL4   Temperature at loc N+3
 Typ_REAL
 DEF_Blank
cmd_)/GOPR
 Cal_Fnc_BF_tem3a,8,eq,0,2
 Cal_Fnc_BF_tem3b2,8,eq,1,2
 Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_BFE_temp2CM
:S    898,   224,   667
:T Command
:C )! Fnc_BFE_temp2CM
:C )/NOPR
:C )*SET,_z7,'BFE'
:C )*SET,_z9,'TEMP'
:C )*SET,_z10,'Elems'
:C )/GOPR
:D Apply TEMP on Element Components
:B Fnc_BFE_tempCM
:H Hlp_C_BFE
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Structural Temperatures (TEMP) on Element Components
Fld_2
 Prm_STLOC  Starting location N
 Typ_INT
 DEF_1
Fld_8
 Prm_       Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 Prm_VAL1   Temperature at location N
 Typ_REAL
 DEF_Blank
Fld_4
 Prm_VAL2   Temperature at loc N+1
 Typ_REAL
 DEF_Blank
Fld_5
 Prm_VAL3   Temperature at loc N+2
 Typ_REAL
 DEF_Blank
Fld_6
 Prm_VAL4   Temperature at loc N+3
 Typ_REAL
 DEF_Blank
cmd_)/GOPR
 Cal_Fnc_BF_tem3a,8,eq,0,2
 Cal_Fnc_BF_tem3b2,8,eq,1,2
 Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_BFE_tempCM
:S    450,   290,   153
:T Cmd_P
:C )! Fnc_BFE_tempCM
:C )! Element Components for BFE command below
:C )/UI,CMPF,ELEM ! *** restrict picker to ELEM components ***
:A On Element Components
:D Apply TEMP on Element Components
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter element components for temperature specification
 Typ_COMP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BFE_temp2CM
:E END
:! 
:N Fnc_BFE_vltg
:S    376,   212,   141
:T Cmd_P
:C )! Fnc_BFE_vltg
:C )! Elements for BFE command below
:A    On Elements
:D Apply VLTG on Elems
:K #(PREP7*SOLUTION)
:K (VFED*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for voltage drop specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFE_vltg2
:E END_of_Fnc_BFE_vltg
:! 
:N Fnc_BFE_vltg2
:S    367,   108,   235
:T Command
:C )! Fnc_BFE_vltg2
:D Apply VLTG on Elems
:H Hlp_C_BFE
Cmd_BFE,P51X
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Uniform Voltage drop (VLTG) on Elements
Fld_2
 Typ_DEF_VLTG
Fld_3
 Typ_Def_1
Fld_4
 Prm_VAL1  Voltage drop mag. (VLTG)
 Typ_REAL
Fld_5
 Typ_REAL
 DEF_Blank
 Prm_VAL2  Phase angle (degrees)
:E END_of_Fnc_BFE_vltg2
:! 
:N Fnc_BFINT
:S    841,   168,   666
:T Command
:C )! Fnc_BFINT
:A Interp Body Forc
:D Interpolate Body Force Data to Submodel Nodes
:K #(POST1+RESULTS)
:H Hlp_C_BFINT
Cmd_BFINT
 Fld_0
  Typ_Lab
  Prm_[BFINT]  Interpolate Body Force Data to Submodel Nodes
 Fld_2
  Prm_Fname1  File containing nodes -
  Typ_File
 Fld_0
  Typ_Lab
  Prm_        - on the submodel (defaults to jobname.NODE)
 Fld_5
  Prm_Fname2  File to which body forc-
  Typ_File
 Fld_0
  Typ_Lab
  Prm_        - data are to be written (defaults to jobname.BFIN)
 Fld_8
  Prm_KPOS    Append to Fname2 file?
  Typ_LOGI,No              ,Yes
 Fld_9
  Prm_Clab    Label for data block
  Typ_CHAR,8
 Fld_0
  Typ_Lab
  Prm_        (up to 7 characters; defaults to BFn)
 Fld_10
  Prm_KSHS    Type of submodeling
  Typ_LIS_OPTIONB
LIS_Solid-to-solid  ,0
LIS_Shell-to-solid  ,1
:E END
:! 
:N Fnc_BFKDELE_all
:S    452,   211,   234
:T Command
:C )! Fnc_BFKDELE_all
:A    On All KPs
:D Delete All Body Loads on All Selected Keypoints
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_BFKDELE
Inp_NoApply
Cmd_BFKDELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[BFKDELE]  This function deletes all body loads
Fld_0
 Typ_Lab
 Prm_           on all selected keypoints and on all
Fld_0
 Typ_Lab
 Prm_           nodes attached to those keypoints!
:E END
:! 
:N Fnc_BFKDELE_chrg
:S    403,   252,   144
:T Cmd_P
:C )! Fnc_BFKDELE_chrg
:A    On Keypoints
:D Delete CHRGD on KPs
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFKDELE
Inp_P
Cmd_BFKDELE
Fld_2
 Prm_[BFKDELE]  Pick or enter keypoints for charge density deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_CHRGD
:E END
:! 
:N Fnc_BFKDELE_ef
:S    364,   216,   141
:T Cmd_P
:C )! Fnc_BFKDELE_ef
:A    On Keypoints
:D Delete EF on KPs
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFKDELE
Inp_P
Cmd_BFKDELE
Fld_2
 Prm_[BFKDELE]  Pick or enter keypoints for electric field deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_EF
:E END
:! 
:N Fnc_BFKDELE_flue
:S    333,   190,   136
:T Cmd_P
:C )! Fnc_BFKDELE_flue
:A    On Keypoints
:D Delete FLUE on KPs
:K #((PREP7*SOLUTION)+(STRUCTRL*NOFILTER))
:P (LINPLUS)
:H Hlp_C_BFKDELE
Inp_P
Cmd_BFKDELE
Fld_2
 Prm_[BFKDELE]  Pick or enter keypoints for fluence deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FLUE
:E END
:! 
:N Fnc_BFKDELE_h
:S    360,   213,   140
:T Cmd_P
:C )! Fnc_BFKDELE_h
:A    On Keypoints
:D Delete H on KPs
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFKDELE
Inp_P
Cmd_BFKDELE
Fld_2
 Prm_[BFKDELE]  Pick or enter keypoints for magnetic field deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_H
:E END
:! 
:N Fnc_BFKDELE_hgen
:S    341,   190,   144
:T Cmd_P
:C )! Fnc_BFKDELE_hgen
:A On Keypoints
:D Delete HGEN on KPs
:K #((PREP7*SOLUTION)+(cfd*THERMAL*NOFILTER))
:P (THERMAL)
:H Hlp_C_BFKDELE
Inp_P
Cmd_BFKDELE
Fld_2
 Prm_[BFKDELE]  Pick or enter keypoints for heat generation deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_HGEN
:E END
:! 
:N Fnc_BFKDELE_js
:S    381,   232,   142
:T Cmd_P
:C )! Fnc_BFKDELE_js
:A    On Keypoints
:D Delete JS on KPs
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFKDELE
Inp_P
Cmd_BFKDELE
Fld_2
 Prm_[BFKDELE]  Pick or enter keypoints for current density deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_JS
:E END
:! 
:N Fnc_BFKDELE_mvdi
:S    355,   199,   149
:T Cmd_P
:C )! Fnc_BFKDELE_mvdi
:A    On Keypoints
:D Delete MVDI on KPs
:K #(PREP7*SOLUTION)
:K (MAGNETIC*EDGEFLX*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFKDELE
Inp_P
Cmd_BFKDELE
Fld_2
 Prm_[BFKDELE]  Pick or enter keypoints for virtual displacement deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_MVDI
:E END
:! 
:N Fnc_BFKDELE_temp
:S    312,   165,   140
:T Cmd_P
:C )! Fnc_BFKDELE_temp
:A On Keypoints
:D Delete TEMP on KPs
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_BFKDELE
Inp_P
Cmd_BFKDELE
Fld_2
 Prm_[BFKDELE]  Pick or enter keypoints for temperature deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_BFKDEL_p
:S    278,   133,   138
:T Cmd_P
:C )! Fnc_BFKDEL_p ORPHAN
:A    On Keyoints
:D Dele Body Ld on KPs
:H Hlp_C_BFKDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFKDELE]  Pick or enter keypoints for body load deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFKDEL_p2
:E END
:! 
:N Fnc_BFKDEL_p2
:S    461,   135,   319
:T Command
:C )! Fnc_BFKDEL_p2 ORPHAN
:D Dele Body Ld on KPs
:B Fnc_BFKDEL_p
:H Hlp_C_BFKDELE
Cmd_BFKDELE,P51X
Fld_0
 Typ_LAB
 Prm_[BFKDELE]  Delete Body Load on Keypoints
Fld_2
 Prm_Lab     Type of body load
 Typ_LIS_OPTIONB
 LIS_All loads       ,ALL
 LIS_Temperature     ,TEMP
 LIS_Fluence         ,FLUE
 LIS_Heat generation ,HGEN
 LIS_Current density ,JS
 LIS_Mag virtual disp,MVDI
 LIS_Charge density  ,CHRGD
:E END
:! 
:N Fnc_BFKLIS
:S    240,   122,   111
:T Cmd_P
:C )! Fnc_BFKLIS
:A On Picked KPs
:D List Keyp Body Loads
:H Hlp_C_BFKLIST
Inp_P
Cmd_BFKLIST
Fld_2
Typ_KEYP
Prm_[BFKLIST] Pick or enter keypoints for body load listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_BFK_chrgd
:S    432,   279,   146
:T Cmd_P
:C )! Fnc_BFK_chrgd
:C )! Keypoints for BFK command below
:A    On Keypoints
:D Apply CHRGD on KPs
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFK
Inp_P
Cmd_)!
Fld_2
 Prm_[BFK]  Pick or enter keypoints for charge density specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BFK_chrgd2
:E END
:! 
:N Fnc_BFK_chrgd2
:S    290,   127,   156
:T Command
:C )! Fnc_BFK_chrgd2
:D Apply CHRGD on KPs
:B Fnc_BFK_chrgd2
:H Hlp_C_BFK
Cmd_BFK,P51X
Fld_0
 Typ_LAB
 Prm_[BFK]  Apply Charge Density (CHRGD) on Keypoints
Fld_2
 Typ_DEF_CHRGD
Fld_3
 Typ_REAL
 Prm_VAL1  Volumetric charge density
:E END
:! 
:N Fnc_BFK_ef
:S    392,   242,   143
:T Cmd_P
:C )! Fnc_BFK_ef
:C )! Keypoints for BFK command below
:A    On Keypoints
:D Apply EF on KPs
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFK
Inp_P
Cmd_)!
Fld_2
 Prm_[BFK]  Pick or enter keypoints for magnetic field specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BFK_ef2
:E END
:! 
:N Fnc_BFK_ef2
:S    417,   114,   296
:T Command
:C )! Fnc_BFK_ef2
:D Apply EF on KPs
:B Fnc_BFK_ef
:H Hlp_C_BFK
Cmd_BFK,P51X
Fld_0
 Typ_LAB
 Prm_[BFK]  Apply Electric Field (EF) on Keypoints
Fld_2
 Typ_DEF_EF
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  EFX,EFY,EFZ components
 Typ_REAL3
Fld_5
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Mag field value (EFZ)
 Typ_REAL
Fld_6
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
:E END
:! 
:N Fnc_BFK_flue
:S    360,   215,   138
:T Cmd_P
:C )! Fnc_BFK_flue
:C )! Keypoints for BFK command below
:A    On Keypoints
:D Apply FLUE on KPs
:K #((PREP7*SOLUTION)+(STRUCTRL*NOFILTER))
:P (LINPLUS)
:H Hlp_C_BFK
Inp_P
Cmd_)!
Fld_2
 Prm_[BFK]  Pick or enter keypoints for fluence specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BFK_flue2
:E END
:! 
:N Fnc_BFK_flue2
:S    253,   118,   128
:T Command
:C )! Fnc_BFK_flue2
:D Apply Fluence on Keypoints
:B Fnc_BFK_flue
Cmd_BFK,P51X
Fld_0
 Typ_LAB
 Prm_[BFK]  Apply Fluence on Keypoints
Fld_2
 Typ_DEF_FLUE
Fld_3
 Typ_REAL
 Prm_VAL1  Fluence value
:E END
:! 
:N Fnc_BFK_h
:S    388,   239,   142
:T Cmd_P
:C )! Fnc_BFK_h
:C )! Keypoints for BFK command below
:A    On Keypoints
:D Apply H on KPs
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFK
Inp_P
Cmd_)!
Fld_2
 Prm_[BFK]  Pick or enter keypoints for magnetic field specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BFK_h2
:E END
:! 
:N Fnc_BFK_h2
:S    407,   110,   290
:T Command
:C )! Fnc_BFK_h2
:D Apply H on KPs
:B Fnc_BFK_h
:H Hlp_C_BFK
Cmd_BFK,P51X
Fld_0
 Typ_LAB
 Prm_[BFK]  Apply Magnetic Field (H) on Keypoints
Fld_2
 Typ_DEF_H
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  HX,HY,HZ components
 Typ_REAL3
Fld_5
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Mag field value (HZ)
 Typ_REAL
Fld_6
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
:E END
:! 
:N Fnc_BFK_hgen
:S    457,   293,   157
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'keypt'
:C )*SET,_z8,'BFK'
:C )*SET,_z9,'HGEN'
:C )/GO
:C )! Fnc_BFK_hgen
:C )! Keypoints for BFK command below
:A On Keypoints
:D Apply HGEN on KPs
:K #((PREP7*SOLUTION)+(cfd*THERMAL*NOFILTER))
:P (THERMAL)
:H Hlp_C_BFK
Inp_P
Cmd_)!
Fld_2
 Prm_[BFK]  Pick or enter keypoints for heat generation specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_BFK
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_BFK_js
:S    409,   258,   144
:T Cmd_P
:C )! Fnc_BFK_js
:C )! Keypoints for BFK command below
:A    On Keypoints
:D Apply JS on KPs
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFK
Inp_P
Cmd_)!
Fld_2
 Prm_[BFK]  Pick or enter keypoints for current density specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BFK_js2
:E END
:! 
:N Fnc_BFK_js2
:S    421,   114,   300
:T Command
:C )! Fnc_BFK_js2
:D Apply JS on KPs
:B Fnc_BFK_js
:H Hlp_C_BFK
Cmd_BFK,P51X
Fld_0
 Typ_LAB
 Prm_[BFK]  Apply Current Density (JS) on Keypoints
Fld_2
 Typ_DEF_JS
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  JSX,JSY,JSZ components
 Typ_REAL3
Fld_5
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Curr density value (JSZ)
 Typ_REAL
Fld_6
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
:E END
:! 
:N Fnc_BFK_mvdi
:S    400,   242,   151
:T Cmd_P
:C )! Fnc_BFK_mvdi
:C )! Keypoints for BFK command below
:A    On Keypoints
:D Apply MVDI on KPs
:K #(PREP7*SOLUTION)
:K ((harmonic*ELEM2D+MAGNETIC*EDGEFLX)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFK
Inp_P
Cmd_)!
Fld_2
 Prm_[BFK]  Pick or enter keypoints for virtual displacement specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BFK_mvdi2
:E END
:! 
:N Fnc_BFK_mvdi2
:S    303,   122,   174
:T Command
:C )! Fnc_BFK_mvdi2
:D Apply MVDI on KPs
:B Fnc_BFK_mvdi
:H Hlp_C_BFK
Cmd_BFK,P51X
Fld_0
 Typ_LAB
 Prm_[BFK]  Apply Mag Virtual Displacement (MVDI) on Keypoints
Fld_2
 Typ_DEF_MVDI
Fld_3
 Prm_VAL1  Virtual displacement value
 Typ_REAL
 Def_1.0
:E END
:! 
:N Fnc_BFK_p
:S    268,   125,   136
:T Cmd_P
:C )! Fnc_BFK_p ORPHAN
:A    On Keypoints
:D Apply Body Ld on KPs
:H Hlp_C_BFK
Inp_P
Cmd_)!
Fld_2
 Prm_[BFK]  Pick or enter keypoints for body load specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFK_p2
:E END
:! 
:N Fnc_BFK_p2
:S    694,   123,   564
:T Command
:C )! Fnc_BFK_p2 ORPHAN
:D Apply Body Ld on KPs
:B Fnc_BFK_p
:H Hlp_C_BFK
Cmd_BFK,P51X
Fld_0
 Typ_LAB
 Prm_[BFK]  Apply Body Load on Keypoints
Fld_2
 Prm_Lab     Type of body load
 Typ_LIS_OPTIONB
 LIS_Temperature     ,TEMP
 LIS_Fluence         ,FLUE
 LIS_Heat generation ,HGEN
 LIS_Current density ,JS
 LIS_Mag virtual disp,MVDI
 LIS_Charge density  ,CHRGD
Fld_3
 Prm_VAL1    Load value
 Typ_REAL
Fld_0
Typ_SEP
 Fld_0
 Prm_For current density (JS),
 Fld_0
 Prm_ VAL1 is the X component (JSX)
Fld_4
 Prm_ VAL2   Y component (JSY)
 Typ_REAL
Fld_5
 Prm_ VAL3   Z component (JSZ)
 Typ_REAL
Fld_6
 Prm_ PHASE  Phase angle (degrees)
 Typ_REAL
:E END
:! 
:N Fnc_BFK_temp
:S    339,   190,   142
:T Cmd_P
:C )! Fnc_BFK_temp
:C )! Keypoints for BFK command below
:A On Keypoints
:D Apply TEMP on KPs
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_BFK
Inp_P
Cmd_)!
Fld_2
 Prm_[BFK]  Pick or enter keypoints for temperature specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BFK_temp2
:E END
:! 
:N Fnc_BFK_temp2
:S    601,   201,   393
:T Command
:C )! Fnc_BFK_temp2
:C )/NOPR
:C )*SET,_z7,'BFK'
:C )*SET,_z9,'TEMP'
:C )*SET,_z10,'KPs'
:C )/GOPR
:D Apply TEMP on KPs
:B Fnc_BFK_temp
:H Hlp_C_BFK
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[BFK]  Apply Structural Temperatures (TEMP) on Keypoints
Fld_8
  Prm_       Apply as
  Typ_LIS_OPTIONB
  LIS_Constant value,0
  LIS_Existing table,1
  LIS_New table,2
  Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_2
 Typ_REAL
 Prm_VAL1  Temperature value
 Cal_Fnc_BF_tem3a,8,eq,0,2
 Cal_Fnc_BF_tem3b2,8,eq,1,2
 Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_BFLDELE_all
:S    413,   180,   226
:T Command
:C )! Fnc_BFLDELE_all
:A    On All Lines
:D Delete All Body Loads on All Selected Lines
:K #(PREP7*SOLUTION)
:H Hlp_C_BFLDELE
Inp_NoApply
Cmd_BFLDELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[BFLDELE]  This function deletes all body loads
Fld_0
 Typ_Lab
 Prm_           on all selected lines and on all
Fld_0
 Typ_Lab
 Prm_           nodes attached to those lines!
:E END
:! 
:N Fnc_BFLDELE_chrg
:S    395,   249,   139
:T Cmd_P
:C )! Fnc_BFLDELE_chrg
:A    On Lines
:D Delete CHRG on Lines
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFLDELE
Inp_P
Cmd_BFLDELE
Fld_2
 Prm_[BFLDELE]  Pick or enter lines for charge density deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_CHRG
:E END
:! 
:N Fnc_BFLDELE_ef
:S    358,   214,   137
:T Cmd_P
:C )! Fnc_BFLDELE_ef
:A    On Lines
:D Delete EF on Lines
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFLDELE
Inp_P
Cmd_BFLDELE
Fld_2
 Prm_[BFLDELE]  Pick or enter lines for electric field deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_EF
:E END
:! 
:N Fnc_BFLDELE_flue
:S    328,   189,   132
:T Cmd_P
:C )! Fnc_BFLDELE_flue
:A    On Lines
:D Delete FLUE on Lines
:K #((PREP7*SOLUTION)+(STRUCTRL*NOFILTER))
:P (FULL_ANS)
:H Hlp_C_BFLDELE
Inp_P
Cmd_BFLDELE
Fld_2
 Prm_[BFLDELE]  Pick or enter lines for fluence deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FLUE
:E END
:! 
:N Fnc_BFLDELE_h
:S    354,   211,   136
:T Cmd_P
:C )! Fnc_BFLDELE_h
:A    On Lines
:D Delete H on Lines
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFLDELE
Inp_P
Cmd_BFLDELE
Fld_2
 Prm_[BFLDELE]  Pick or enter lines for magnetic field deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_H
:E END
:! 
:N Fnc_BFLDELE_hgen
:S    335,   188,   140
:T Cmd_P
:C )! Fnc_BFLDELE_hgen
:A On Lines
:D Delete HGEN on Lines
:K #((PREP7*SOLUTION)+(cfd*THERMAL*NOFILTER))
:P (THERMAL)
:H Hlp_C_BFLDELE
Inp_P
Cmd_BFLDELE
Fld_2
 Prm_[BFLDELE]  Pick or enter lines for heat generation deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_HGEN
:E END
:! 
:N Fnc_BFLDELE_js
:S    375,   230,   138
:T Cmd_P
:C )! Fnc_BFLDELE_js
:A    On Lines
:D Delete JS on Lines
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFLDELE
Inp_P
Cmd_BFLDELE
Fld_2
 Prm_[BFLDELE]  Pick or enter lines for current density deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_JS
:E END
:! 
:N Fnc_BFLDELE_temp
:S    314,   171,   136
:T Cmd_P
:C )! Fnc_BFLDELE_temp
:A On Lines
:D Delete TEMP on Lines
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFLDELE
Inp_P
Cmd_BFLDELE
Fld_2
 Prm_[BFLDELE]  Pick or enter lines for temperature deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_BFLIST
:S    236,   124,   105
:T Cmd_P
:C )! Fnc_BFLIST
:A On Picked Nodes
:D List Nodal Body Loads
:H Hlp_C_BFLIST
Inp_P
Cmd_BFLIST
Fld_2
Typ_NODE
Prm_[BFLIST] Pick or enter nodes for body load listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_BFLIST_dyna
:S    160,   116,    21
:T Cmd_N
:C )! Fnc_BFLIST_dyna
:A List Temps
:K (LSDYNA)
:H Hlp_C_BFLIST
Inp_P
Cmd_BFLIST,ALL
:E End_Fnc_BFLIST_dyna
:! 
:N Fnc_BFLLIS
:S    240,   125,   108
:T Cmd_P
:C )! Fnc_BFLLIST
:A On Picked Lines
:D List Line Body Loads
:H Hlp_C_BFLLIST
Inp_P
Cmd_BFLLIST
Fld_2
Typ_LINE
Prm_[BFLLIST] Pick or enter lines for Body Loads listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_BFL_chrg
:S    383,   236,   140
:T Cmd_P
:C )! Fnc_BFL_chrg
:A    On Lines
:D Apply CHRG on Lines
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFL
Inp_P
Cmd_)!
Fld_2
 Prm_[BFL]  Pick or enter lines for charge density specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFL_chrg2
:E END
:! 
:N Fnc_BFL_chrg2
:S    292,   124,   161
:T Command
:C )! Fnc_BFL_chrg2
:D Apply CHRG on Lines
:B Fnc_BFL_chrg
:H Hlp_C_BFL
Cmd_BFL,P51X
Fld_0
 Typ_LAB
 Prm_[BFL]  Apply Volumetric charge density (CHRG) on Lines
Fld_2
 Typ_DEF_CHRG
Fld_3
 Typ_REAL
 Prm_VAL1  Volumetric charge density
:E END
:! 
:N Fnc_BFL_ef
:S    347,   202,   138
:T Cmd_P
:C )! Fnc_BFL_ef
:A    On Lines
:D Apply EF on Lines
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFL
Inp_P
Cmd_)!
Fld_2
 Prm_[BFL]  Pick or enter lines for magnetic field specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFL_ef2
:E END
:! 
:N Fnc_BFL_ef2
:S    415,   116,   292
:T Command
:C )! Fnc_BFL_ef2
:D Apply EF on Lines
:B Fnc_BFL_ef
:H Hlp_C_BFL
Cmd_BFL,P51X
Fld_0
 Typ_LAB
 Prm_[BFL]  Apply Electric Field (EF) on Lines
Fld_2
 Typ_DEF_EF
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  EFX,EFY,EFZ components
 Typ_REAL3
Fld_5
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Mag field value (EFZ)
 Typ_REAL
Fld_6
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
:E END
:! 
:N Fnc_BFL_flue
:S    316,   176,   133
:T Cmd_P
:C )! Fnc_BFL_flue
:A    On Lines
:D Apply FLUE on Lines
:K #((PREP7*SOLUTION)+(STRUCTRL*NOFILTER))
:P (FULL_ANS)
:H Hlp_C_BFL
Inp_P
Cmd_)!
Fld_2
 Prm_[BFL]  Pick or enter lines for fluence specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFL_flue2
:E END
:! 
:N Fnc_BFL_flue2
:S    256,   124,   125
:T Command
:C )! Fnc_BFL_flue2
:D Apply FLUE on Lines
:B Fnc_BFL_flue
:H Hlp_C_BFL
Cmd_BFL,P51X
Fld_0
 Typ_LAB
 Prm_[BFL]  Apply Fluence (FLUE) on Lines
Fld_2
 Typ_DEF_FLUE
Fld_3
 Typ_REAL
 Prm_VAL1  Fluence
:E END
:! 
:N Fnc_BFL_h
:S    343,   199,   137
:T Cmd_P
:C )! Fnc_BFL_h
:A    On Lines
:D Apply H on Lines
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFL
Inp_P
Cmd_)!
Fld_2
 Prm_[BFL]  Pick or enter lines for magnetic field specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFL_h2
:E END
:! 
:N Fnc_BFL_h2
:S    405,   112,   286
:T Command
:C )! Fnc_BFL_h2
:D Apply H on Lines
:B Fnc_BFL_h
:H Hlp_C_BFL
Cmd_BFL,P51X
Fld_0
 Typ_LAB
 Prm_[BFL]  Apply Magnetic Field (H) on Lines
Fld_2
 Typ_DEF_H
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  HX,HY,HZ components
 Typ_REAL3
Fld_5
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Mag field value (HZ)
 Typ_REAL
Fld_6
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
:E END
:! 
:N Fnc_BFL_hgen
:S    410,   251,   152
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'BFL'
:C )*SET,_z9,'HGEN'
:C )/GO
:C )! Fnc_BFL_hgen
:A On Lines
:D Apply HGEN on LNs
:K #((PREP7*SOLUTION)+(cfd*THERMAL*NOFILTER))
:P (THERMAL)
:H Hlp_C_BFL
Inp_P
Cmd_)!
Fld_2
 Prm_[BFL]  Pick or enter lines for heat generation specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
! Cust_Cmd_BFL
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_BFL_js
:S    364,   218,   139
:T Cmd_P
:C )! Fnc_BFL_js
:A    On Lines
:D Apply JS on Lines
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFL
Inp_P
Cmd_)!
Fld_2
 Prm_[BFL]  Pick or enter lines for current density specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFL_js2
:E END
:! 
:N Fnc_BFL_js2
:S    611,   159,   445
:T Command
:C )! Fnc_BFL_js2
:C )/NOPR
:C )*DEL,_zj
:C )*DIM,_zj,,5,1,1
:D Apply JS on Lines
:B Fnc_BFL_js
:H Hlp_C_BFL
Cmd_)*SET,_zj(1)
Fld_0
 Typ_LAB
 Prm_[BFL]  Apply Current Density (JS) on Lines
Fld_2
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  JSX,JSY,JSZ components
 Typ_REAL3
Fld_2
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Curr density value (JSZ)
 Typ_REAL
Fld_5
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
Fld_0
 Typ_Sep
Fld_0
 Typ_LAB
 Prm_Note:  If used to excite Transmission Line Port
Fld_6
 Prm_          enter Port number
 Typ_Int
 Def_0
Cmd_)/GO
Cal_Fnc_BFL_js3
:E END
:! 
:N Fnc_BFL_js3
:S    511,   184,   320
:T Command
:C )! Fnc_BFL_js3
:C )/NOPR
:C )*IF,_zj(5),le,0,THEN
:C )keyw,nospar,1
:C )*ELSE
:C )keyw,nospar,0
:C )_zp=-_zj(5)
:C )*ENDIF
:C )/GO
Inp_P
Cmd_BFL,P51X
Fld_2
 Typ_DEF_JS
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Typ_Def_*PAR(_zj(1))
Fld_4
 K_FL(ELEM3D*NOFILTER)
 Typ_Def_*PAR(_zj(2))
Fld_5
 K_FL(ELEM3D*NOFILTER)
 Typ_Def_*PAR(_zj(3))
Fld_5
 K_FL(ELEM2D+elem3d)
 Typ_Def_*PAR(_zj(3))
Fld_6
 K_FL(NOSPAR)
 Typ_Def_*PAR(_zj(4))
Fld_6
 K_FL(nospar)
 Typ_Def_*PAR(_zp)
:E END
:! 
:N Fnc_BFL_temp
:S    302,   158,   137
:T Cmd_P
:C )! Fnc_BFL_temp
:A On Lines
:D Apply TEMP on Lines
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFL
Inp_P
Cmd_)!
Fld_2
 Prm_[BFL]  Pick or enter lines for temperature specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFL_temp2
:E END
:! 
:N Fnc_BFL_temp2
:S    595,   205,   383
:T Command
:C )! Fnc_BFL_temp2
:C )/NOPR
:C )*SET,_z7,'BFL'
:C )*SET,_z9,'TEMP'
:C )*SET,_z10,'Lines'
:C )/GOPR
:D Apply TEMP on Lines
:B Fnc_BFL_temp
:H Hlp_C_BFL
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[BFL]  Apply Temperature (TEMP) on Lines
Fld_8
  Prm_       Apply as
  Typ_LIS_OPTIONB
  LIS_Constant value,0
  LIS_Existing table,1
  LIS_New table,2
  Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_2
 Typ_REAL
 Prm_VAL1  Temperature 
cmd_)/GOPR
 Cal_Fnc_BF_tem3a,8,eq,0,2
 Cal_Fnc_BF_tem3b2,8,eq,1,2
 Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_BFSCALE
:S    740,   152,   581
:T Command
:C )! Fnc_BFSCALE
:A    Nodal Body Ld
:D Scale Nodal Body Loads
:K #(PREP7*SOLUTION)
:H Hlp_C_BFSCALE
Cmd_BFSCALE
 Fld_0
  Typ_Lab
  Prm_[BFSCALE]  Scale Nodal Body Loads on All Selected Nodes
 Fld_2
  Prm_Lab    Type of body load
  Typ_LIS_OPTIONB
  LIS_All body loads  ,ALL
   P_LN(LINPLUS*ELECMAG)
  LIS_Temperature     ,TEMP
   P_LN(THERMAL*FLOTRAN)
  LIS_Heat generation ,HGEN
   P_LN(ELECMAG)
  LIS_Current density ,JS
   P_LN(ELECMAG)
  LIS_Mag virtual disp,MVDI
   P_LN(ELECMAG)
  LIS_Charge density  ,CHRGD
 Fld_3
  Prm_FACT   Scale factor
  Typ_REAL
  Def_1.0
 Fld_4
  Prm_TBASE  Base temperature -
  Typ_REAL
 Fld_0
  Typ_Lab
  Prm_       - used for temperature load only
:E END
:! 
:N Fnc_BFTRAN
:S    384,   190,   187
:T Command
:C )! Fnc_BFTRAN
:A    Body Loads
:D Transfer Keypoint Body Loads to Nodes
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_BFTRAN
Inp_NoApply
Cmd_BFTRAN
 Fld_0
  Typ_Lab
  Prm_[BFTRAN]  This function transfers body loads from currently
 Fld_0
  Typ_Lab
  Prm_          selected keypoints to currently selected nodes.
:E END
:! 
:N Fnc_BFUNIF_flue
:S    297,   194,    96
:T Command
:C )! Fnc_BFUNIF_flue
:A    Uniform Fluen
:D Uniform Nodal Fluence
:K #((PREP7*SOLUTION)+(STRUCTRL*NOFILTER))
:P (FULL_ANS)
:H Hlp_C_BFUNIF
Inp_NoApply
Cmd_BFUNIF
Fld_2
 Typ_DEF_FLUE
Fld_3
 Prm_[BFUNIF]  Uniform fluence value
 Typ_REAL
:E END
:! 
:N Fnc_BFUNIF_hgen
:S    346,   292,    47
:T Command
:C )! Fnc_BFUNIF_hgen
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'BFUNIF'
:C )*SET,_z9,'HGEN'
:C )/GO
:A Uniform Heat Gen
:D Uniform Heat Generation Rate
:K #((PREP7*SOLUTION)+(cfd*THERMAL*NOFILTER))
:P (THERMAL*FLOTRAN)
:H Hlp_C_BFUNIF
Inp_P
Cmd_)!
!
! Cust_Cmd_BFUNIF
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_BFUNIF_temp
:S    292,   152,   133
:T Command
:C )! Fnc_BFUNIF_temp ORPHAN
:A Unif Nodal Temp
:D Uniform Nodal Temperature
:K #(PREP7*SOLUTION)
Cmd_BFUNIF
Fld_0
 Typ_LAB
 Prm_[BFUNIF]  Uniform Nodal Temperature
Fld_2
 Typ_DEF_TEMP
Fld_3
 Prm_VALUE  Temperature value
 Typ_REAL
:E END
:! 
:N Fnc_BFVDELE_all
:S    422,   182,   233
:T Command
:C )! Fnc_BFVDELE_all
:A    On All Volms
:D Delete All Body Loads on All Selected Volumes
:K #(PREP7*SOLUTION)
:H Hlp_C_BFVDELE
Inp_NoApply
Cmd_BFVDELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[BFVDELE]  This function deletes all body loads
Fld_0
 Typ_Lab
 Prm_           on all selected volumes and on all
Fld_0
 Typ_Lab
 Prm_           elements attached to those volumes!
:E END
:! 
:N Fnc_BFVDELE_chrg
:S    401,   253,   141
:T Cmd_P
:C )! Fnc_BFVDELE_chrg
:A    On Volumes
:D Delete CHRG on Volumes
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFVDELE
Inp_P
Cmd_BFVDELE
Fld_2
 Prm_[BFVDELE]  Pick or enter volumes for charge density deletion
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_CHRG
:E END
:! 
:N Fnc_BFVDELE_ef
:S    364,   218,   139
:T Cmd_P
:C )! Fnc_BFVDELE_ef
:A    On Volumes
:D Delete EF on Volumes
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFVDELE
Inp_P
Cmd_BFVDELE
Fld_2
 Prm_[BFVDELE]  Pick or enter volumes for electric field deletion
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_EF
:E END
:! 
:N Fnc_BFVDELE_flue
:S    334,   193,   134
:T Cmd_P
:C )! Fnc_BFVDELE_flue
:A    On Volumes
:D Delete FLUE on Volumes
:K #((PREP7*SOLUTION)+(STRUCTRL*NOFILTER))
:P (FULL_ANS)
:H Hlp_C_BFVDELE
Inp_P
Cmd_BFVDELE
Fld_2
 Prm_[BFVDELE]  Pick or enter volumes for fluence deletion
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FLUE
:E END
:! 
:N Fnc_BFVDELE_h
:S    360,   215,   138
:T Cmd_P
:C )! Fnc_BFVDELE_h
:A    On Volumes
:D Delete H on Volumes
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFVDELE
Inp_P
Cmd_BFVDELE
Fld_2
 Prm_[BFVDELE]  Pick or enter volumes for magnetic field deletion
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_H
:E END
:! 
:N Fnc_BFVDELE_hgen
:S    318,   169,   142
:T Cmd_P
:C )! Fnc_BFVDELE_hgen
:A On Volumes
:D Delete HGEN on Volumes
:K #((PREP7*SOLUTION))
:P (THERMAL)
:H Hlp_C_BFVDELE
Inp_P
Cmd_BFVDELE
Fld_2
 Prm_[BFVDELE]  Pick or enter volumes for heat generation deletion
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_HGEN
:E END
:! 
:N Fnc_BFVDELE_js
:S    381,   234,   140
:T Cmd_P
:C )! Fnc_BFVDELE_js
:A    On Volumes
:D Delete JS on Volumes
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFVDELE
Inp_P
Cmd_BFVDELE
Fld_2
 Prm_[BFVDELE]  Pick or enter volumes for current density deletion
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_JS
:E END
:! 
:N Fnc_BFVDELE_temp
:S    320,   175,   138
:T Cmd_P
:C )! Fnc_BFVDELE_temp
:A On Volumes
:D Delete TEMP on Volumes
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFVDELE
Inp_P
Cmd_BFVDELE
Fld_2
 Prm_[BFVDELE]  Pick or enter volumes for temperature deletion
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_BFVDELE_vltg
:S    335,   189,   139
:T Cmd_P
:C )! Fnc_BFVDELE_vltg
:A    On Volumes
:D Delete VLTG on Volumes
:K #(PREP7*SOLUTION)
:K (VFED*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFVDELE
Inp_P
Cmd_BFVDELE
Fld_2
 Prm_[BFVDELE]  Pick or enter volumes for voltage drop deletion
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_VLTG
:E END
:! 
:N Fnc_BFVLIS
:S    246,   129,   110
:T Cmd_P
:C )! Fnc_BFVLIST
:A On Picked Volumes
:D List Volume Body Loads
:H Hlp_C_BFVLIST
Inp_P
Cmd_BFVLIST
Fld_2
Typ_VOLU
Prm_[BFVLIST] Pick or enter volumes for Body Loads listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_BFV_chrg
:S    389,   240,   142
:T Cmd_P
:C )! Fnc_BFV_chrg
:A    On Volumes
:D Apply CHRG on Volumes
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFV
Inp_P
Cmd_)!
Fld_2
 Prm_[BFV]  Pick or enter volumes for charge density specification
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFV_chrg2
:E END
:! 
:N Fnc_BFV_chrg2
:S    296,   126,   163
:T Command
:C )! Fnc_BFV_chrg2
:D Apply CHRG on Volumes
:B Fnc_BFV_chrg
:H Hlp_C_BFV
Cmd_BFV,P51X
Fld_0
 Typ_LAB
 Prm_[BFV]  Apply Volumetric charge density (CHRG) on Volumes
Fld_2
 Typ_DEF_CHRG
Fld_3
 Typ_REAL
 Prm_VAL1  Volumetric charge density
:E END
:! 
:N Fnc_BFV_ef
:S    353,   206,   140
:T Cmd_P
:C )! Fnc_BFV_ef
:A    On Volumes
:D Apply EF on Volumes
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFV
Inp_P
Cmd_)!
Fld_2
 Prm_[BFV]  Pick or enter volumes for magnetic field specification
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFV_ef2
:E END
:! 
:N Fnc_BFV_ef2
:S    419,   118,   294
:T Command
:C )! Fnc_BFV_ef2
:D Apply EF on Volumes
:B Fnc_BFV_ef
:H Hlp_C_BFV
Cmd_BFV,P51X
Fld_0
 Typ_LAB
 Prm_[BFV]  Apply Electric Field (EF) on Volumes
Fld_2
 Typ_DEF_EF
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  EFX,EFY,EFZ components
 Typ_REAL3
Fld_5
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Mag field value (EFZ)
 Typ_REAL
Fld_6
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
:E END
:! 
:N Fnc_BFV_flue
:S    322,   180,   135
:T Cmd_P
:C )! Fnc_BFV_flue
:A    On Volumes
:D Apply FLUE on Volumes
:K #((PREP7*SOLUTION)+(STRUCTRL*NOFILTER))
:P (FULL_ANS)
:H Hlp_C_BFV
Inp_P
Cmd_)!
Fld_2
 Prm_[BFV]  Pick or enter volumes for fluence specification
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFV_flue2
:E END
:! 
:N Fnc_BFV_flue2
:S    260,   126,   127
:T Command
:C )! Fnc_BFV_flue2
:D Apply FLUE on Volumes
:B Fnc_BFV_flue
:H Hlp_C_BFV
Cmd_BFV,P51X
Fld_0
 Typ_LAB
 Prm_[BFV]  Apply Fluence (FLUE) on Volumes
Fld_2
 Typ_DEF_FLUE
Fld_3
 Typ_REAL
 Prm_VAL1  Fluence
:E END
:! 
:N Fnc_BFV_h
:S    349,   203,   139
:T Cmd_P
:C )! Fnc_BFV_h
:A    On Volumes
:D Apply H on Volumes
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFV
Inp_P
Cmd_)!
Fld_2
 Prm_[BFV]  Pick or enter volumes for magnetic field specification
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFV_h2
:E END
:! 
:N Fnc_BFV_h2
:S    409,   114,   288
:T Command
:C )! Fnc_BFV_h2
:D Apply H on Volumes
:B Fnc_BFV_h
:H Hlp_C_BFV
Cmd_BFV,P51X
Fld_0
 Typ_LAB
 Prm_[BFV]  Apply Magnetic Field (H) on Volumes
Fld_2
 Typ_DEF_H
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  HX,HY,HZ components
 Typ_REAL3
Fld_5
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Mag field value (HZ)
 Typ_REAL
Fld_6
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
:E END
:! 
:N Fnc_BFV_hgen
:S    391,   230,   154
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'volume'
:C )*SET,_z8,'BFV'
:C )*SET,_z9,'HGEN'
:C )/GO
:C )! Fnc_BFV_hgen
:A On Volumes
:D Apply HGEN on VLs
:K #((PREP7*SOLUTION)
:P (THERMAL)
:H Hlp_C_BFV
Inp_P
Cmd_)!
Fld_2
 Prm_[BFV]  Pick or enter volumes for heat generation specification
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
 PFM_1
! Cust_Cmd_BFV
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_BFV_js
:S    370,   222,   141
:T Cmd_P
:C )! Fnc_BFV_js
:A    On Volumes
:D Apply JS on Volumes
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFV
Inp_P
Cmd_)!
Fld_2
 Prm_[BFV]  Pick or enter volumes for current density specification
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFV_js2
:E END
:! 
:N Fnc_BFV_js2
:S    423,   118,   298
:T Command
:C )! Fnc_BFV_js2
:D Apply JS on Volumes
:B Fnc_BFV_js
:H Hlp_C_BFV
Cmd_BFV,P51X
Fld_0
 Typ_LAB
 Prm_[BFV]  Apply Current Density (JS) on Volumes
Fld_2
 Typ_DEF_JS
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  JSX,JSY,JSZ components
 Typ_REAL3
Fld_5
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Curr density value (JSZ)
 Typ_REAL
Fld_6
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
:E END
:! 
:N Fnc_BFV_temp
:S    308,   162,   139
:T Cmd_P
:C )! Fnc_BFV_temp
:A On Volumes
:D Apply TEMP on Volumes
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFV
Inp_P
Cmd_)!
Fld_2
 Prm_[BFV]  Pick or enter volumes for temperature specification
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFV_temp2
:E END
:! 
:N Fnc_BFV_temp2
:S    601,   209,   385
:T Command
:C )! Fnc_BFV_temp2
:C )/NOPR
:C )*SET,_z7,'BFV'
:C )*SET,_z9,'TEMP'
:C )*SET,_z10,'Volumes'
:C )/GOPR
:D Apply TEMP on Volumes
:B Fnc_BFV_temp
:H Hlp_C_BFV
Cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[BFV]  Apply Temperature (TEMP) on Volumes
Fld_8
  Prm_       Apply as
  Typ_LIS_OPTIONB
  LIS_Constant value,0
  LIS_Existing table,1
  LIS_New table,2
  Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_2
 Typ_REAL
 Prm_VAL1  Temperature 
cmd_)/GOPR
 Cal_Fnc_BF_tem3a,8,eq,0,2
 Cal_Fnc_BF_tem3b2,8,eq,1,2
 Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_BFV_vltg
:S    323,   176,   140
:T Cmd_P
:C )! Fnc_BFV_vltg
:A    On Volumes
:D Apply VLTG on Volumes
:K #(PREP7*SOLUTION)
:K (VFED*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BFV
Inp_P
Cmd_)!
Fld_2
 Prm_[BFV]  Pick or enter volumes for voltage drop specification
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BFV_vltg2
:E END
:! 
:N Fnc_BFV_vltg2
:S    350,   126,   217
:T Command
:C )! Fnc_BFV_vltg2
:D Apply VLTG on Volumes
:B Fnc_BFV_vltg
:H Hlp_C_BFV
Cmd_BFV,P51X
Fld_0
 Typ_LAB
 Prm_[BFV]  Apply Uniform Voltage drop (VLTG) on Volumes
Fld_2
 Typ_DEF_VLTG
Fld_3
 Prm_VAL1  Voltage drop mag. (VLTG)
 Typ_REAL
Fld_4
 Typ_REAL
 DEF_Blank
 Prm_VAL2  Phase angle (degrees)
:E END
:! 
:N Fnc_BF_Force
:S    706,   345,   354
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'BF'
:C )*SET,_z9,'FORC'
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),'X-Comp.','Y-Comp.','Z-Comp.'
:C )/GO
:C )! Fnc_BF_Force
:C )! Nodes for BF command below
:A    On Nodes
:D Apply BF on Nodes
:K ((PREP7*SOLUTION)+(CFD)
:P (FLOTRAN)
:H Hlp_C_BF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,NODE
Cmd_)/GO
! Exclude_from_paths
Cmd_NSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[BF]  Pick or enter nodes for body force specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_BF_chrgd
:S    416,   269,   140
:T Cmd_P
:C )! Fnc_BF_chrgd
:C )! Nodes for BF command below
:A    On Nodes
:D Apply CHRGD on Nodes
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BF
Inp_P
Cmd_)!
Fld_2
 Prm_[BF]  Pick or enter nodes for charge density specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BF_chrgd2
:E END
:! 
:N Fnc_BF_chrgd2
:S    281,   124,   150
:T Command
:C )! Fnc_BF_chrgd2
:D Apply CHRGD on Nodes
:B Fnc_BF_chrgd
:H Hlp_C_BF
Cmd_BF,P51X
Fld_0
 Typ_LAB
 Prm_[BF]  Apply charge density (CHRGD) on Nodes
Fld_2
 Typ_Def_CHRGD
Fld_3
 Typ_REAL
 Prm_VAL1  Volumetric charge density
:E END
:! 
:N Fnc_BF_ef
:S    376,   232,   137
:T Cmd_P
:C )! Fnc_BF_ef
:C )! Nodes for BF command below
:A    On Nodes
:D Apply EF on Nodes
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BF
Inp_P
Cmd_)!
Fld_2
 Prm_[BF]  Pick or enter nodes for magnetic field specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BF_ef2
:E END
:! 
:N Fnc_BF_ef2
:S    409,   112,   290
:T Command
:C )! Fnc_BF_ef2
:D Apply EF on Nodes
:B Fnc_BF_ef
:H Hlp_C_BF
Cmd_BF,P51X
Fld_0
 Typ_LAB
 Prm_[BF]  Apply Electric Field (EF) on Nodes
Fld_2
 Typ_DEF_EF
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  EFX,EFY,EFZ components
 Typ_REAL3
Fld_5
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Mag field value (EFZ)
 Typ_REAL
Fld_6
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
:E END
:! 
:N Fnc_BF_flue
:S    345,   206,   132
:T Cmd_P
:C )! Fnc_BF_flue
:C )! Nodes for BF command below
:A    On Nodes
:D Apply FLUE on Nodes
:K #((PREP7*SOLUTION)+(STRUCTRL*NOFILTER))
:P (FULL_ANS)
:H Hlp_C_BF
Inp_P
Cmd_)!
Fld_2
 Prm_[BF]  Pick or enter nodes for fluence specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BF_flue2
:E END
:! 
:N Fnc_BF_flue2
:S    256,   120,   129
:T Command
:C )! Fnc_BF_flue2
:D Apply FLUE on Nodes
:B Fnc_BF_flue
:H Hlp_C_BF
Cmd_BF,P51X
Fld_0
 Typ_LAB
 Prm_[BF]  Apply Fluence (FLUE) on Nodes
Fld_2
 Typ_DEF_FLUE
Fld_3
 Typ_REAL
 Prm_VAL1  Fluence value
:E END
:! 
:N Fnc_BF_h
:S    372,   229,   136
:T Cmd_P
:C )! Fnc_BF_h
:C )! Nodes for BF command below
:A    On Nodes
:D Apply H on Nodes
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BF
Inp_P
Cmd_)!
Fld_2
 Prm_[BF]  Pick or enter nodes for magnetic field specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BF_h2
:E END
:! 
:N Fnc_BF_h2
:S    399,   108,   284
:T Command
:C )! Fnc_BF_h2
:D Apply H on Nodes
:B Fnc_BF_h
:H Hlp_C_BF
Cmd_BF,P51X
Fld_0
 Typ_LAB
 Prm_[BF]  Apply Magnetic Field (H) on Nodes
Fld_2
 Typ_DEF_H
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  HX,HY,HZ components
 Typ_REAL3
Fld_5
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Mag field value (HZ)
 Typ_REAL
Fld_6
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
:E END
:! 
:N Fnc_BF_hgen
:S    423,   265,   151
:T Cmd_P
:C )! Fnc_BF_hgen
:C )! Nodes for BF command below
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'BF'
:C )*SET,_z9,'HGEN'
:C )/GO
:A On Nodes
:D Apply HGEN on Nodes
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_BF
Inp_P
Cmd_)!
Fld_2
 Prm_[BF]  Pick or enter nodes for heat generation specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_BF
Cal_Fnc_ZLoad
:E END
:! 
:N Fnc_BF_js
:S    393,   248,   138
:T Cmd_P
:C )! Fnc_BF_js
:C )! Nodes for BF command below
:A    On Nodes
:D Apply JS on Nodes
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((MAGNETIC+VECTORP*EDGEFLX*EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BF
Inp_P
Cmd_)!
Fld_2
 Prm_[BF]  Pick or enter nodes for current density specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BF_js2
:E END
:! 
:N Fnc_BF_js2
:S    605,   155,   443
:T Command
:C )! Fnc_BF_js2
:C )/NOPR
:C )*DEL,_zj
:C )*DIM,_zj,,5,1,1
:D Apply JS on Nodes
:B Fnc_BF_js
:H Hlp_C_BF
Cmd_)*SET,_zj(1)
Fld_0
 Typ_LAB
 Prm_[BF]  Apply Current Density (JS) on Nodes
Fld_2
 K_FL(ELEM3D*NOFILTER)
 Prm_VAL1-3  JSX,JSY,JSZ components
 Typ_REAL3
Fld_4
 K_FL(ELEM2D+elem3d)
 Prm_VAL3    Curr density value (JSZ)
 Typ_REAL
Fld_5
 Typ_REAL
 Prm_PHASE   Phase angle (degrees)
Fld_0
 Typ_Sep
Fld_0
 Typ_LAB
 Prm_Note:  If used to excite Transmission Line Port
Fld_6
 Prm_          enter Port number
 Typ_Int
 Def_0
Cmd_)/GO
Cal_Fnc_BF_js3
:E END
:! 
:N Fnc_BF_js3
:S    508,   182,   319
:T Command
:C )! Fnc_BF_js3
:C )/NOPR
:C )*IF,_zj(5),le,0,THEN
:C )keyw,nospar,1
:C )*ELSE
:C )keyw,nospar,0
:C )_zp=-_zj(5)
:C )*ENDIF
:C )/GO
Inp_P
Cmd_BF,P51X
Fld_2
 Typ_DEF_JS
Fld_3
 K_FL(ELEM3D*NOFILTER)
 Typ_Def_*PAR(_zj(1))
Fld_4
 K_FL(ELEM3D*NOFILTER)
 Typ_Def_*PAR(_zj(2))
Fld_5
 K_FL(ELEM3D*NOFILTER)
 Typ_Def_*PAR(_zj(3))
Fld_5
 K_FL(ELEM2D+elem3d)
 Typ_Def_*PAR(_zj(3))
Fld_6
 K_FL(NOSPAR)
 Typ_Def_*PAR(_zj(4))
Fld_6
 K_FL(nospar)
 Typ_Def_*PAR(_zp)
:E END
:! 
:N Fnc_BF_mvdi
:S    384,   232,   145
:T Cmd_P
:C )! Fnc_BF_mvdi
:C )! Nodes for BF command below
:A    On Nodes
:D Apply MVDI on Nodes
:K #(PREP7*SOLUTION)
:K ((harmonic*ELEM2D+MAGNETIC*EDGEFLX)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_BF
Inp_P
Cmd_)!
Fld_2
 Prm_[BF]  Pick or enter nodes for virtual displacement specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BF_mvdi2
:E END
:! 
:N Fnc_BF_mvdi2
:S    286,   120,   159
:T Command
:C )! Fnc_BF_mvdi2
:D Apply MVDI on Nodes
:B Fnc_BF_mvdi
:H Hlp_C_BF
Cmd_BF,P51X
Fld_0
 Typ_LAB
 Prm_[BF]  Apply Mag Virtual Displacement (MVDI) on Nodes
Fld_2
 Typ_DEF_MVDI
Fld_3
 Typ_REAL
 Prm_VAL1  Virtual displacement value
:E END
:! 
:N Fnc_BF_p
:S    257,   120,   130
:T Cmd_P
:C )! Fnc_BF_p ORPHAN
:A    On Nodes
:D Apply Body Ld on Nodes
:H Hlp_C_BF
Inp_P
Cmd_)!
Fld_2
 Prm_[BF]  Pick or enter nodes for body load specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_BF_p2
:E END
:! 
:N Fnc_BF_p2
:S    686,   121,   558
:T Command
:C )! Fnc_BF_p2 ORPHAN
:D Apply Body Ld on Nodes
:B Fnc_BF_p
:H Hlp_C_BF
Cmd_BF,P51X
Fld_0
 Typ_LAB
 Prm_[BF]  Apply Body Load on Nodes
Fld_2
 Prm_Lab     Type of body load
 Typ_LIS_OPTIONB
 LIS_Temperature     ,TEMP
 LIS_Fluence         ,FLUE
 LIS_Heat generation ,HGEN
 LIS_Current density ,JS
 LIS_Mag virtual disp,MVDI
 LIS_Charge density  ,CHRGD
Fld_3
 Prm_VAL1    Load value
 Typ_REAL
Fld_0
Typ_SEP
 Fld_0
 Prm_For current density (JS),
 Fld_0
 Prm_ VAL1 is the X component (JSX)
Fld_4
 Prm_ VAL2   Y component (JSY)
 Typ_REAL
Fld_5
 Prm_ VAL3   Z component (JSZ)
 Typ_REAL
Fld_6
 Prm_ PHASE  Phase angle (degrees)
 Typ_REAL
:E END
:! 
:N Fnc_BF_tem3a
:S    462,   209,   246
:T Command
:C )! Fnc_BF_tem3a
:C )/NOPR
:C )KEYW,bfe,0
:C )*IF,_z7,EQ,'BFE',THEN
:C )KEYW,bfe,1
:C )*ENDIF
:C )/GOPR
:D Apply TEMP on KPs
:B Fnc_BFK_temp
:H Hlp_C_%_z7%
Inp_P
Cmd_)!
 Fld_1
  Typ_Def_*PAR(_z7)
 Fld_2
  Typ_Def_P51X
Fld_3
 Typ_DEF_TEMP
Fld_4
 Typ_def_*CPAR(1)
Fld_5
 K_FL(BFE)
 Typ_def_*CPAR(2)
Fld_6
 K_FL(BFE)
 Typ_def_*CPAR(3)
Fld_7
 K_FL(BFE)
 Typ_def_*CPAR(4)
Fld_8
 K_FL(BFE)
 Typ_def_*CPAR(5)
:E END
:! 
:N Fnc_BF_tem3b2
:S    233,    97,   129
:T Command
:C )! Fnc_BF_tem3b2
:D Apply %_z9% on %_z10%
Cmd_)*CSET,11,11
Fld_0
  Prm_Apply Table Loads
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
Cmd_)/GO
 Cal_Fnc_BF_tem3b3
:E END
:! 
:N Fnc_BF_tem3b3
:S    488,   159,   322
:T Command
:C )! Fnc_BF_tem3b3
:C )/NOPR
:C )KEYW,bfe,0
:C )*IF,_z7,EQ,'BFE',THEN
:C )KEYW,bfe,1
:C )*ENDIF
:C )/GOPR
Inp_P
Cmd_)!
K_CM(bfe)
 Fld_1
  Typ_Def_*PAR(_z7)
 Fld_2
  Typ_Def_P51X
Fld_3
 Typ_DEF_TEMP
Fld_4
 Dlm_%
Fld_5
 Typ_def_*CPAR(11)
 Dlm_%
Fld_6
 Typ_Lab
Cmd_)!
K_CM(BFE)
 Fld_1
  Typ_Def_*PAR(_z7)
 Fld_2
  Typ_Def_P51X
Fld_3
 Typ_DEF_TEMP
Fld_4
 Typ_def_*CPAR(1)
Fld_5
 Dlm_%
Fld_6
 Typ_def_*CPAR(11)
 Dlm_%
Fld_7
 Typ_Lab
:E END
:! 
:N Fnc_BF_temp
:S    331,   188,   136
:T Cmd_P
:C )! Fnc_BF_temp
:C )! Nodes for BF command below
:A On Nodes
:D Apply TEMP on Nodes
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BF
Inp_P
Cmd_)!
Fld_2
 Prm_[BF]  Pick or enter nodes for temperature specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BF_temp2
:E END
:! 
:N Fnc_BF_temp2
:S    606,   200,   399
:T Command
:C )! Fnc_BF_temp2
:C )/NOPR
:C )*SET,_z7,'BF'
:C )*SET,_z9,'TEMP'
:C )*SET,_z10,'Nodes'
:C )/GOPR
:D Apply TEMP on Nodes
:B Fnc_BF_temp
:H Hlp_C_BF
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[BF]  Apply Structural Temperatures (TEMP) on Nodes
Fld_8
  Prm_       Apply as
  Typ_LIS_OPTIONB
  LIS_Constant value,0
  LIS_Existing table,1
  LIS_New table,2
  Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_2
 Typ_REAL
 Prm_VAL1  Temperature value
cmd_)/GOPR
 Cal_Fnc_BF_tem3a,8,eq,0,2
 Cal_Fnc_BF_tem3b2,8,eq,1,2
 Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_BF_temp2CM
:S    631,   215,   409
:T Command
:C )! Fnc_BF_temp2CM
:C )/NOPR
:C )*SET,_z7,'BF'
:C )*SET,_z9,'TEMP'
:C )*SET,_z10,'Nodes'
:C )/GOPR
:D Apply TEMP on Node Component
:B Fnc_BF_tempCM
:H Hlp_C_BF
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[BF]  Apply Structural Temperatures (TEMP) on Node Components
Fld_8
  Prm_       Apply as
  Typ_LIS_OPTIONB
  LIS_Constant value,0
  LIS_Existing table,1
  LIS_New table,2
  Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_2
 Typ_REAL
 Prm_VAL1  Temperature value
cmd_)/GOPR
 Cal_Fnc_BF_tem3a,8,eq,0,2
 Cal_Fnc_BF_tem3b2,8,eq,1,2
 Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_BF_tempCM
:S    440,   285,   148
:T Cmd_P
:C )! Fnc_BF_tempCM
:C )! Node Components for BF command below
:C )/UI,CMPF,NODE ! *** restrict picker to NODE components ***
:A On Node Components
:D Apply TEMP on Node Components
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BF
Inp_P
Cmd_)!
Fld_2
 Prm_[BF]  Pick or enter node components for temperature specification
 Typ_COMP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_BF_temp2CM
:E END
:! 
:N Fnc_BIOT
:S    413,   197,   209
:T Command
:C )! Fnc_BIOT
:A    Biot-Savart
:D Calculate Biot-Savart Source Field
:K #((PREP7*SOLUTION)+((edgeflx+SCALARP)*NOFILTER))
:P (ELECMAG)
:H Hlp_C_BIOT
Inp_NoApply
Cmd_BIOT
 Fld_0
  Typ_Lab
  Prm_[BIOT]  Calculate Biot-Savart Source Field (Hs)
 Fld_2
  Prm_Label  Calculated Hs values will
  Typ_LIS_RADIOB
  LIS_Replace existing,NEW
  LIS_Add to existing ,SUM
:E END
:! 
:N Fnc_BLC4
:S    409,   143,   259
:T Cmd_P
:C )! Fnc_BLC4
:A By 2 Corners & Z
:D Block by 2 Corners & Z
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_BLC4
Inp_P
Cmd_BLC4
 Fld_0
  Typ_XYZ_WP
  Prm_[BLC4]  Pick 3 WP locations -- 2 diagonal corners and Z depth
  Min_3
  Max_3
  Rub_102
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
 Fld_6
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_BLC4_2d
:S    364,   134,   223
:T Cmd_P
:C )! Fnc_BLC4_2d
:A By 2 Corners
:D Rectangle by 2 Corners
:K #(PREP7)
:H Hlp_C_BLC4
Inp_P
Cmd_BLC4
 Fld_0
  Typ_XYZ_WP
  Prm_[BLC4]  Pick 2 WP locations -- the 2 diagonal corners
  Min_2
  Max_2
  Rub_2
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
:E END
:! 
:N Fnc_BLC5
:S    406,   143,   256
:T Cmd_P
:C )! Fnc_BLC5
:A By Centr,Cornr,Z
:D Block by Ctr, Cornr, Z
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_BLC5
Inp_P
Cmd_BLC5
 Fld_0
  Typ_XYZ_WP
  Prm_[BLC5]  Pick 3 WP locations -- center, corner, and Z depth
  Min_3
  Max_3
  Rub_106
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
 Fld_6
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_BLC5_2d
:S    378,   138,   233
:T Cmd_P
:C )! Fnc_BLC5_2d
:A By Centr & Cornr
:D Rectang by Ctr, Corner
:K #(PREP7)
:H Hlp_C_BLC5
Inp_P
Cmd_BLC5
 Fld_0
  Typ_XYZ_WP
  Prm_[BLC5]  Pick 2 WP locations -- center of rectangle and a corner
  Min_2
  Max_2
  Rub_6
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
:E END
:! 
:N Fnc_BLC5_iges
:S    408,   145,   256
:T Cmd_P
:C )! Fnc_BLC5_iges
:A    Block
:D Block by Ctr, Cornr, Z
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_BLC5
Inp_P
Cmd_BLC5
 Fld_0
  Typ_XYZ_WP
  Prm_[BLC5]  Pick 3 WP locations -- center, corner, and Z depth
  Min_3
  Max_3
  Rub_106
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
 Fld_6
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_BLOCK
:S    417,   149,   261
:T Command
:C )! Fnc_BLOCK
:A By Dimensions
:D Create Block by Dimensions
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_BLOCK
Cmd_BLOCK
 Fld_0
  Typ_Lab
  Prm_[BLOCK]  Create Block by Dimensions
 Fld_2
  Prm_X1,X2  X-coordinates
  Typ_REAL2
  Def_Blank,Blank
 Fld_4
  Prm_Y1,Y2  Y-coordinates
  Typ_REAL2
  Def_Blank,Blank
 Fld_6
  Prm_Z1,Z2  Z-coordinates
  Typ_REAL2
  Def_Blank,Blank
:E END
:! 
:N Fnc_BSPLIN_kp
:S    261,   130,   124
:T Cmd_P
:C )! Fnc_BSPLIN_kp2
:A Spline thru KPs
:D B-Spline
:K #(PREP7)
:H Hlp_C_BSPLIN
Inp_P
Cmd_BSPLIN
 Fld_3
  Typ_KEYP
  Prm_[BSPLIN]  Pick or enter keypoints making up spline
  Min_2
  Cnt_l
  PFM_1
  PDP_1
:E END
:! 
:N Fnc_BSPLIN_kp_end
:S    308,   113,   188
:T Cmd
:C )! Fnc_BSPLIN_end
:D B-Spline
:K #(PREP7)
:H Hlp_C_BSPLIN
Cmd_BSPLIN
 Fld_0
  Prm_[BSPLIN] Generate a Spline
 Fld_3
  Typ_Def_P51X
 Fld_8
  Prm_Start tangent        XV1,YV1,ZV1
  Typ_Int3
 Fld_11
  Prm_Ending tangent       XV6,YV6,ZV6
  Typ_Int3
:E End
:! 
:N Fnc_BSPLIN_kp_op
:S    300,   151,   142
:T Cmd_P
:C )! Fnc_BSPLIN_kp_op
:C )KEYW,KEY3,0
:A Spline thru KPs
:D B-Spline
:K #(PREP7)
:H Hlp_C_BSPLIN
Inp_P
Cmd_)!
 Fld_3
  Typ_KEYP
  Prm_[BSPLIN]  Pick or enter keypoints making up spline
  Min_2
  Cnt_l
  PFM_1
  PDP_1
Cal_Fnc_BSPLIN_kp_end
:E END
:! 
:N Fnc_BSPLIN_wp
:S    368,   130,   231
:T Cmd_P
:C )! Fnc_BSPLIN_wp
:A Spline thru Locs
:D B-Spline
:K #(PREP7)
:H Hlp_C_BSPLIN
Inp_P
Cmd_BSPLIN
 Fld_2
  Typ_KEYP
  Prm_[BSPLIN]  Pick or enter keypoints at ends of spline
  Min_2
  Cnt_2
  PFM_1
  Pdp_1
 Fld_3
  Typ_XYZ
  Prm_Pick WP location or enter coordinates of in-between points
  Min_1
  Cnt_s
  PFM_1
:E END
:! 
:N Fnc_BSPLIN_wp_end
:S    330,   113,   210
:T Cmd
:C )! Fnc_BSPLIN_end
:D B-Spline
:K #(PREP7)
:H Hlp_C_BSPLIN
Cmd_BSPLIN
 Fld_0
  Prm_[BSPLIN] Generate a Spline
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_P51X
 Fld_8
  Prm_Start tangent        XV1,YV1,ZV1
  Typ_Int3
 Fld_11
  Prm_Ending tangent       XV6,YV6,ZV6
  Typ_Int3
:E End
:! 
:N Fnc_BSPLIN_wp_op
:S    392,   136,   249
:T Cmd_P
:C )! Fnc_BSPLIN_wp_op
:A Spline thru Locs
:D B-Spline
:K #(PREP7)
:H Hlp_C_BSPLIN
Inp_P
Cmd_)!
 Fld_2
  Typ_KEYP
  Prm_[BSPLIN]  Pick or enter keypoints at ends of spline
  Min_2
  Cnt_2
  PFM_1
  Pdp_1
 Fld_3
  Typ_XYZ
  Prm_Pick WP location or enter coordinates of in-between points
  Min_1
  Cnt_s
  PFM_1
Cal_Fnc_BSPLIN_wp_end
:E END
:! 
:N Fnc_BeamComposit
:S    271,   120,   144
:T Cmd
:C )! Fnc_BeamComposit
:A    Composite Sections
:K #(PREP7*SOLUTION)
Inp_P
! Cust_Cmd_SECTYPE
! Cust_Cmd_CBMX
! Cust_Cmd_CBTMP
! Cust_Cmd_CBTE
! Cust_Cmd_CBMD
Cmd_)~eui,'::euidl::element::beam::composite::create'
:E End
:! 
:N Fnc_BeamPreInt
:S    350,   133,   210
:T Cmd
:C )! Fnc_BeamPreInt
:A    NL Generalized
:K #(PREP7*SOLUTION)
:K (PR_STRUC*pr_set)
Inp_P
! Cust_Cmd_SECTYPE
! Cust_Cmd_BSAX
! Cust_Cmd_BSM1
! Cust_Cmd_BSM2
! Cust_Cmd_BSTQ
! Cust_Cmd_BSS1
! Cust_Cmd_BSS2
! Cust_Cmd_BSMD
! Cust_Cmd_BSTE
Cmd_)~eui,'::euidl::element::beam::preintegrate::create'
:E End
:! 
:N Fnc_Beam_Edit
:S    174,   110,    57
:T Cmd_N
:C )! Fnc_Beam_Edit
:A Edit / Built-up
:D Edit / Composite 
Inp_P
Cmd_)~eui,'euidl::element::SectionControl::create'
:E END
:! 
:N Fnc_Beam_Tool
:S    199,   111,    81
:T Cmd
:C )! Fnc_Beam_Tool
:A    Common Sections
:K (PR_STRUC*pr_set)
Inp_P
! Cust_Cmd_SECDATA
! Cust_Cmd_SECOFFSET
! Cust_Cmd_SECTYPE
Cmd_)/UI,BEAM,1
:E END
:! 
:N Fnc_Bool_opts
:S    976,   276,   693
:T Command
:C )! Fnc_Bool_opts
:A    Settings
:D Boolean Operation Settings
:K #(PREP7)
:C )/NOPR
:C )*GET,_z1,COMMON,,BOLCMI,,INT,238
:C )*IF,_z1,EQ,1,THEN
:C )_z1='RV52'
:C )*ELSE
:C )_z1='RV51'
:C )*ENDIF
:C )/GO
:H Hlp_UI_boolopts
Inp_NoApply
Cmd_BOPTN,KEEP
 Fld_0
  Typ_Lab
  Prm_[BOPTN]  Boolean Operation Options
 Fld_2
  Prm_KEEP  Keep input entities?
  Typ_LOGI,No,Yes
  Def_*Get(common,,bolcmi,,int,201)
Cmd_BOPTN,NWARN
 Fld_2
  Prm_NWARN If operation has no effect
  Typ_LIS_OPTIONB
  LIS_Give warning msg,0
  LIS_No messages     ,1
  LIS_Give error msg  ,-1
  Def_*Get(common,,bolcmi,,int,203)
Cmd_BOPTN,VERS
 Fld_2
  Prm_VERS  Numbering compatible with
  Typ_LIS_OPTIONB
  LIS_Revision 5.2,RV52
  LIS_Revision 5.1,RV51
  Def_*PAR(_z1)
! 
 Fld_0
 Typ_Sep
! 
Cmd_BTOL
 Fld_0
  Typ_Lab
  Prm_[BTOL]  Boolean Operation Tolerance
 Fld_2
  Typ_REAL
  Prm_PTOL  Point coincidence toler
  Def_*Get(common,,bolcmd,,real,16)
:E END
:! 
:N Fnc_CAPMATR
:S    640,   169,   464
:T Command
:C )! Fnc_CAPMATR
:A    Capac Matrix
:D    Capac Matrix
:K #(PREP7*SOLUTION)
:K ((ELECSTAT)*NOFILTER)
:H Hlp_C_CMATRIX
Cmd_)/NOPR
Cmd_)*SET,_zs
 Fld_0
  Typ_Lab
  Prm_[CMATRIX]  Capacitance Matrix Calculation
 Fld_2
  Typ_Int
  Prm_Symfac Geometric symmetry factor
  Def_1
Cmd_)*CSET,1,1
 Fld_2
  Typ_Char,32,32
  Prm_Condname Compon. name identifier
Cmd_)*CSET,2,2
 Fld_2
  Typ_Char,32,32
  Prm_Capname  Capacitance matrix name
Cmd_)*SET,_z2
 Fld_2
  Prm_NCond    Number of cond. compon.
  Typ_Int
Cmd_)*SET,_z3
 Fld_2
  Prm_Grndkey  Ground key
  Typ_Int
Cmd_)/GO
Cal_Fnc_CAPMATR_0
:E END
:! 
:N Fnc_CAPMATR_0
:S    322,    93,   222
:T Command
:C )! Fnc_CAPMATR_0
:K #(PREP7*SOLUTION)
Inp_P
Cmd_CMATRIX
 Fld_2
  Typ_Def_*PAR(_zs)
 Fld_3
  Dlm_'
 Fld_4
  Typ_Def_*CPAR(1)
  Dlm_'
 Fld_5
  Typ_Lab
 Fld_6
  Typ_Def_*PAR(_z2)
 Fld_7
  Typ_Def_*PAR(_z3)
 Fld_8
  Dlm_'
 Fld_9
  Typ_Def_*CPAR(2)
  Dlm_'
 Fld_11
:E END
:! 
:N Fnc_CBDOF
:S    851,   173,   671
:T Command
:C )! Fnc_CBDOF
:A Interpolate DOF
:D Interpolate DOF Data to Submodel Cut-Boundary Nodes
:K #(POST1+RESULTS)
:H Hlp_C_CBDOF
Cmd_CBDOF
 Fld_0
  Typ_Lab
  Prm_[CBDOF]  Interpolate DOF Data to Submodel Cut-Boundary Nodes
 Fld_2
  Prm_Fname1  File containing nodes -
  Typ_File
 Fld_0
  Typ_Lab
  Prm_        - on the cut boundary (defaults to jobname.NODE)
 Fld_5
  Prm_Fname2  File to which DOF data -
  Typ_File
 Fld_0
  Typ_Lab
  Prm_        - are to be written (defaults to jobname.CBDO)
 Fld_8
  Prm_KPOS    Append to Fname2 file?
  Typ_LOGI,No              ,Yes
 Fld_9
  Prm_Clab    Label for data block
  Typ_CHAR,8
 Fld_0
  Typ_Lab
  Prm_        (up to 7 characters; defaults to CIn)
 Fld_10
  Prm_KSHS    Type of submodeling
  Typ_LIS_OPTIONB
LIS_Solid-to-solid  ,0
LIS_Shell-to-solid  ,1
:E END
:! 
:N Fnc_CDREAD
:S    217,   122,    80
:T Command
:C )! Fnc_CDREAD
:A Read
:D Read Archived Geometry/Loads
:H Hlp_C_CDREAD
Inp_P
! Cust_Cmd_CDREAD
! Cust_Cmd_CDOPT
Cmd_)~eui,'::euidl::model::archiveModel::read'
:E END
:! 
:N Fnc_CDWRITE
:S    227,   130,    90
:T Command
:C )! Fnc_CDWRITE
:A Write
:D Write Geometry/Loads for Archive
:H Hlp_C_CDWRITE
Inp_P
! Cust_Cmd_CDWRITE
! Cust_Cmd_CDOPT
Cmd_)~eui,'::euidl::model::archiveModel::write'
:E END
:! 
:N Fnc_CE
:S   1243,   260,   976
:T Command
:C )! Fnc_CE
:C )/NOPR
:C )*get,_z1,active,0,ce
:C )*if,_z1,EQ,0,then
:C )_z1=1
:C )*endif
:C )/GO
:A Constraint Eqn
:D Define a Constraint Equation
:K #((PREP7)*(NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_CE
Cmd_CE
 Fld_0
  Typ_Lab
  Prm_[CE]  Define a Constraint Equation
 Fld_0
  Typ_Lab
  Prm_CONST = C1*Lab1(NODE1) + C2*Lab2(NODE2) + C3*Lab3(NODE3) + ...
 Fld_2
  Prm_NEQN   Equation reference no.
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Prm_CONST  Constant term
  Typ_REAL
 Fld_0
  Typ_Lab
  Prm_1st term of the equation
 Fld_4
  Prm_   NODE1  Node number
  Typ_INT
  Def_Blank
 Fld_5
  Prm_   Lab1   Degree of freedom
  Typ_LIS_OptionB
  LIS_*READ,DOF
 Fld_6
  Prm_   C1     Coefficient
  Typ_REAL
  Def_1.0
 Fld_0
  Typ_Lab
  Prm_2nd term of the equation
 Fld_7
  Prm_   NODE2  Node number
  Typ_INT
  Def_Blank
 Fld_8
  Prm_   Lab2   Degree of freedom
  Typ_LIS_OptionB
  LIS_*READ,DOF
 Fld_9
  Prm_   C2     Coefficient
  Typ_REAL
  Def_1.0
 Fld_0
  Typ_Lab
  Prm_3rd term of the equation
 Fld_10
  Prm_   NODE3  Node number
  Typ_INT
  Def_Blank
 Fld_11
  Prm_   Lab3   Degree of freedom
  Typ_LIS_OptionB
  LIS_*READ,DOF
 Fld_12
  Prm_   C3     Coefficient
  Typ_REAL
  Def_1.0
:E END
:! 
:N Fnc_CECMOD
:S    402,   195,   200
:T Command
:C )! Fnc_CECMOD
:A Modify ConstrEqn
:D Modify Constraint Equation
:K #((PREP7*SOLUTION)*(NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_CECMOD
Cmd_CECMOD
 Fld_0
  Typ_Lab
  Prm_[CECMOD]  Modify Constant Term of Constraint Equation
 Fld_2
  Prm_NEQN  Ref. no. of constraint eqn
  Typ_INT
 Fld_3
  Prm_CONST New value of constant term
  Typ_INT
:E END
:! 
:N Fnc_CEDELE
:S    462,   185,   270
:T Command
:C )! Fnc_CEDELE
:A Del Constr Eqn
:D Delete Constraint Equations
:K #((PREP7)*(NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_CEDELE
Cmd_CEDELE
 Fld_0
  Typ_Lab
  Prm_[CEDELE]  Delete Constraint Equations
 Fld_2
  Prm_NEQN1,NEQN2,NINC  Range of eqns
  Typ_INT3
  Def_Blank,Blank,Blank
 Fld_5
  Prm_Nsel  Of nodes in eqs, delete if
  Typ_LIS_OptionB
  LIS_Any are selected,ANY
  LIS_All are selected,ALL
:E END
:! 
:N Fnc_CEINTF
:S    857,   208,   642
:T Command
:C )! Fnc_CEINTF
:A Adjacent Regions
:D Constraint Equations Connecting Adjacent Regions
:K #((PREP7)*(NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_CEINTF
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[CEINTF]  Constraint Equations Connecting Selected Nodes of
 Fld_0
  Typ_Lab
  Prm_          One Region and Selected Elements of Second Region
Cmd_CEINTF
 Fld_2
  Prm_TOLER  Tolerance about elements
  Typ_REAL
  Def_0.25
 Fld_3
  Prm_DOF1   DOF to use 
  Typ_Char,5,5
  Def_
 Fld_4
  Prm_DOF2   DOF to use
  Typ_Char,5,5
  Def_
 Fld_5
  Prm_DOF3   DOF to use
  Typ_Char,5,5
  Def_
 Fld_6
  Prm_DOF4   DOF to use
  Typ_Char,5,5
  Def_
 Fld_7
  Prm_DOF5   DOF to use
  Typ_Char,5,5
  Def_
 Fld_8
  Prm_DOF6   DOF to use
  Typ_Char,5,5
  Def_
 Fld_9
  Prm_Toler. to move a node to surface
  Typ_Real
  Def_0.0
:E END
:! 
:N Fnc_CENTER
:S    337,   166,   164
:T Cmd_P
:A At Curvature Ctr
:C )/NOPR
:C )*del,_z
:C )*dim,_z,,3
:C )/GO
:D Node at Curvature Cntr
:K #(PREP7)
:H Hlp_C_CENTER
Inp_P
Cmd_)/NOPR
Cmd_)*set,_z(1)
  Fld_2
Prm_[CENTER]  Pick or enter 3 nodes defining the curve
  Typ_NODE
  Min_3
  Cnt_3
  PCN_0
  PFM_2
Cmd_)/GO
Cal_Fnc_CENTER2
:E END
:! 
:N Fnc_CENTER2
:S    577,   205,   365
:T Command
:C )! Fnc_CENTER2
:A At Curvature Ctr
:C )!/NOPR
:C )_z9=ndinqr(0,14)
:C )_z9=_z9+1
:C )/GO
:D Define Node at Curvature Center
:K #(PREP7)
:H Hlp_C_CENTER
Cmd_CENTER
Fld_0
 Typ_Lab
 Prm_[CENTER]  Define a Node at Center of Curvature of 3 Nodes
Fld_2
 Typ_INT
 Prm_NODE  Node number to be assigned
 Def_*PAR(_z9)
Fld_3
 Typ_INT3
 Prm_NODE1,NODE2,NODE3  Nodes that -
 Def_*PAR(_z(1)),*PAR(_z(2)),*PAR(_z(3))
Fld_0
 Typ_Lab
 Prm_                   - define the circular arc
Fld_6
 Typ_REAL
 Prm_RADIUS  Radius of curvature
:E End
:! 
:N Fnc_CERIG_P
:S    641,   175,   459
:T Cmd_P
:C )! Fnc_CERIG_P
:A Rigid Region
:D Constraint Equation for Rigid Region
:K #((PREP7)*(NOFILTER))
:P (LINPLUS)
:H Hlp_C_CERIG
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_NODECM,NODE
! Exclude_from_paths
Cmd_*SET,_z1
 Fld_2
  Typ_NODE
  Prm_Pick the master node
  Pfm_2
  Min_1
  Cnt_1
! Exclude_from_paths
Cmd_NSEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_NODE
  Prm_Pick the slave nodes
  Min_1
  Pcn_1
  Cnt_s
! Exclude_from_paths
Cmd_NSEL
 Fld_2
  Typ_Def_A
 Fld_5
   Typ_Def__Z1
! Exclude_from_paths
Cmd_CM,_CERGCM,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_NODECM
Cmd_)/GO
 Cal_Fnc_CERIG_P2
:E END
:! 
:N Fnc_CERIG_P2
:S   1792,   179,  1606
:T Command
:C )! Fnc_CERIG_P2
:A Rigid Region
:D Constraint Equation for Rigid Region
:K #((PREP7)*(NOFILTER))
:P (LINPLUS)
:H Hlp_C_CERIG
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_CERGCM
Cmd_)/GO
Cmd_CERIG
 Fld_0
  Typ_Lab
  Prm_[CERIG]  Constraint Equation for Rigid Region
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_ALL
 Fld_4
  Prm_Ldof    DOF used with equation
  Typ_LIS_OptionB
  LIS_All applicable  ,ALL
  LIS_Translation UXYZ,UXYZ
  LIS_Rotations   RXYZ,RXYZ
  LIS_Slave transl UX ,UX
  LIS_Slave transl UY ,UY
  LIS_Slave transl UZ ,UZ
  LIS_Slave rotat ROTX,ROTX
  LIS_Slave rotat ROTY,ROTY
  LIS_Slave rotat ROTZ,ROTZ
 Fld_0
  Typ_Lab
  Prm_Following used only if Ldof not ALL, UXYZ, or RXYZ
 Fld_5
  Prm_Ldof2   Additional DOF
  Typ_LIS_OptionB
  LIS_-none-          ," " 
  LIS_Slave transl UX ,UX
  LIS_Slave transl UY ,UY
  LIS_Slave transl UZ ,UZ
  LIS_Slave rotat ROTX,ROTX
  LIS_Slave rotat ROTY,ROTY
  LIS_Slave rotat ROTZ,ROTZ
 Fld_6
  Prm_Ldof3   Additional DOF
  Typ_LIS_OptionB
  LIS_-none-          ," " 
  LIS_Slave transl UX ,UX
  LIS_Slave transl UY ,UY
  LIS_Slave transl UZ ,UZ
  LIS_Slave rotat ROTX,ROTX
  LIS_Slave rotat ROTY,ROTY
  LIS_Slave rotat ROTZ,ROTZ
 Fld_7
  Prm_Ldof4   Additional DOF
  Typ_LIS_OptionB
  LIS_-none-          ," " 
  LIS_Slave transl UX ,UX
  LIS_Slave transl UY ,UY
  LIS_Slave transl UZ ,UZ
  LIS_Slave rotat ROTX,ROTX
  LIS_Slave rotat ROTY,ROTY
  LIS_Slave rotat ROTZ,ROTZ
 Fld_8
  Prm_Ldof5   Additional DOF
  Typ_LIS_OptionB
  LIS_-none-          ," " 
  LIS_Slave transl UX ,UX
  LIS_Slave transl UY ,UY
  LIS_Slave transl UZ ,UZ
  LIS_Slave rotat ROTX,ROTX
  LIS_Slave rotat ROTY,ROTY
  LIS_Slave rotat ROTZ,ROTZ
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_NODECM
Cmd_)/GO
:E END
:! 
:N Fnc_CESGEN
:S    472,   145,   320
:T Command
:C )! Fnc_CESGEN
:A Gen w/Same DOF
:D Generate CEQN Sets w/Same DOF
:K #(PREP7)
:H Hlp_C_CESGEN
Cmd_CESGEN
 Fld_0
  Typ_Lab
  Prm_[CESGEN]  Generate Additional CEQNS
 Fld_2
  Prm_ITIME  Number of generations
  Typ_INT
  Def_2
 Fld_3
  Prm_INC    Node increment
  Typ_INT
  Def_Blank
 Fld_4
  Prm_NSET1,NSET2,NINC  Range 
  Typ_INT3
 Fld_0
  Typ_Lab
  Prm_                  -of existing sets used to generate new set
:E END
:! 
:N Fnc_CFACT
:S    610,   179,   424
:T Command
:C )! Fnc_CFACT
:A Complx ScaleFact
:D Complex Scale Factors
:K (lsdyna)
:K #(POST26+HARMONIC)
:P (LINPLUS*ELECMAG)
:H Hlp_C_CFACT
Inp_NoApply
Cmd_CFACT
Fld_0
Typ_Lab
Prm_[CFACT]  Complex Scale Factors
Fld_2
Prm_RFACTA  Real part of 1st factor
Typ_real
Def_1.0
Fld_3
Prm_IFACTA  Imaginary part
Typ_real
Def_1.0
Fld_0
Prm_  
Fld_4
Prm_RFACTB  Real part of 2nd factor
Typ_real
Def_1.0
Fld_5
Prm_IFACTB  Imaginary part
Typ_real
Def_1.0
Fld_0
Prm_  
Fld_6
Prm_RFACTC  Real part of 3rd factor
Typ_real
Def_1.0
Fld_7
Prm_IFACTC  Imaginary part
Typ_real
Def_1.0
:E END
:! 
:N Fnc_CFDLoad
:S   1749,   838,   904
:T Command
:C )! Fnc_CFDLoad
:C )/NOPR
:C )*CSET,1,4
:C )*CSET,101,101
:C )*CSET,111,111
:C )*DEL,_vz
:C )*DIM,_vz,,2
:C )keyw,key3d,0
:C )KEYW,prsld,0
:C )KEYW,spcld,0
:C )KEYW,fluld,0
:C )keyw,disld,0
:C )keyw,velld,0
:C )keyw,trbld,0
:C )keyw,frcld,0
:C )keyw,vfrld,0
:C )keyw,radld,0
:C )*IF,_z9,EQ,'PRES',THEN
:C )KEYW,prsld,1
:C )_z2=1
:C )*ELSEIF,_z9,EQ,'SPEC',THEN
:C )KEYW,spcld,1
:C )*GET,_zc(1),MSSPEC,%_z2%,NAME
:C )_z2=1
:C )*ELSEIF,_z9,EQ,'FLOW',THEN
:C )KEYW,fluld,1
:C )_z2=1
:C )*ENDIF
:C )KEYW,dnld,0
:C )KEYW,dkld,0
:C )KEYW,dald,0
:C )KEYW,dlld,0
:C )*IF,_z8,EQ,'D',THEN
:C )KEYW,dnld,1
:C )*ELSEIF,_z8,EQ,'DK',THEN
:C )KEYW,dkld,1
:C )*ELSEIF,_z8,EQ,'DA',THEN
:C )KEYW,dald,1
:C )*ELSEIF,_z8,EQ,'DL',THEN
:C )KEYW,dlld,1
:C )*ENDIF
:C)/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Cmd_)/NOPR
Cmd_)*SET,_vz(1)
 Fld_2
  K_LN(trbld+velld+spcld+fluld+PRSLD)
  Prm_[%_z8%] Apply %_z9% on %_z7% as a
  K_LN(DISLD*TRBLD*VELLD*SPCLD*FLULD+prsld)
  Prm_[%_z8%] Apply %_zc(_z2)% as a
  Typ_Lis_OptioB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
  Def_*PAR(_vz(1))
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_If Constant value then:
!
Cmd_)*CSET,101,101
Fld_2
 Typ_REAL
 Def_*CPAR(101)
 K_LN(trbld+velld+spcld+fluld+PRSLD)
 Prm_%_z9%  Pressure value
 K_LN(DISLD*TRBLD*VELLD*SPCLD*FLULD+prsld)
 Prm_%_zc(_z2)% Load value
!
Cmd_)*CSET,111,111
K_CM(DKLD*DALD*DLLD)
Fld_0
 Typ_Sep
Fld_2
 Typ_LOGI,No,Yes
 Def_1
 K_LN(DKLD+dald+dlld)
 Prm_KEXPND  Expand %_z9% to nodes?
 K_LN(DALD+dkld+dlld)
 Prm_        Apply to boundary lines?
 K_LN(DLLD+dkld+dald)
 Prm_        Apply to endpoints?
!
Cmd_)/GO
  Cal_Fnc_CFDLoad2,2,EQ,1,2
  Cal_Fnc_CFDLoad4,2,EQ,2,2
  Cal_Fnc_CFDLoad6,2,EQ,3,2
:E END
:! 
:N Fnc_CFDLoad2
:S    143,   103,    33
:T Command
:C )/NOPR
:C )keyw,ktabf,0
:C )keyw,ktabn,0
:C )/GO
Inp_P
Cmd_)!
  Cal_Fnc_CFDLoad50
:E END
:! 
:N Fnc_CFDLoad4
:S    319,   161,   151
:T Command
:C )! Fnc_CFDLoad4
:C )/NOPR
:C )keyw,ktabf,1
:C )keyw,ktabn,0
:C )/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Cmd_)/NOPR
Cmd_)*CSET,1,1
Fld_0
  Prm_Apply Table %_zc(_z2)% Load
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
!
Cmd_)/GO
  Cal_Fnc_CFDLoad50
:E END
:! 
:N Fnc_CFDLoad50
:S   1114,    72,  1035
:T Command
:C )! Fnc_CFDLoad50
Inp_P
Cmd_)!
K_CM(dlld+ktabf)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_DEF_*STR(%_zc(_z2)%)
 Fld_4
  Typ_DEF_*CPAR(101)
 Fld_5
 K_FL(DALD)
  Typ_DEF_*CPAR(111)
 Fld_6
 K_FL(DKLD)
  Typ_DEF_*CPAR(111)
Cmd_)!
!
K_CM(DLLD+ktabf)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_4
  Typ_DEF_*STR(%_zc(_z2)%)
 Fld_5
  Typ_DEF_*CPAR(101)
 Fld_6
  Typ_DEF_*CPAR(111)
!
Cmd_)!
K_CM(dlld+KTABF)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_DEF_*STR(%_zc(_z2)%)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_7
 K_FL(DALD)
  Typ_DEF_*CPAR(111)
 Fld_8
 K_FL(DKLD)
  Typ_DEF_*CPAR(111)
!
Cmd_)!
K_CM(DLLD+KTABF)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_4
  Typ_DEF_*STR(%_zc(_z2)%)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_7
  Typ_Lab
 Fld_8
  Typ_DEF_*CPAR(111)
!
Cmd_)/GO
K_LN(spcld+trbld+velld+PRSLD)
Cal_Fnc_RetBox_0
K_LN(DISLD*VELLD*TRBLD+ktabq)
Cal_Fnc_RetBox_0
K_LN(DISLD*VELLD*TRBLD+KTABQ)
Cal_Fnc_RetBox
K_LN(SPCLD+velld+prsld+disld)
Cal_Fnc_RetBox
:E END
:! 
:N Fnc_CFDLoad6
:S    321,   161,   153
:T Command
:C )! Fnc_CFDLoad6
:C )/NOPR
:C )keyw,ktabf,1
:C )keyw,ktabn,1
:C )/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,1
Fld_0
  Prm_Apply Table %_zc(_z2)% Load
Fld_2
  Prm_Name of new table
  Typ_Char,32,32
!
Cmd_)/GO
Cal_Fnc_CFDLoad7
:E END
:! 
:N Fnc_CFDLoad7
:S    713,    87,   619
:T Command
:D Add New Table Load
:H Hlp_C_*DIM
! Exclude_from_paths
Cmd_*DIM
 Fld_0
  Typ_Lab
  Prm_[*DIM] Add New Table
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_TABLE
 Fld_4
Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
Prm_NameI   Variable for rows
  Typ_Char,8
 Fld_8
Prm_NameJ   Variable for cols
  Typ_Char,8
 Fld_9
Prm_NameK   Variable for planes
  Typ_Char,8
 Fld_10
Prm_CSYSID  Coordinate System Id
  Typ_LIS_OptionB
  LIS_*READ,CSYS
!
Cmd_)!
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Options for new table parameter
   Typ_Lis_RadioB
     Lis_Edit on screen,1
     Lis_Read from file,2
!
  Cal_Fnc_CFDLoad8,2,EQ,1,2
  Cal_Fnc_CFDLoad9,2,EQ,2,2
:E END
:! 
:N Fnc_CFDLoad8
:S    247,    89,   151
:T Command
:D Add New Table Load
:H Hlp_C_*VEDIT
Inp_P
!
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(1)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
!
  Cal_Fnc_CFDLoad50
:E END
:! 
:N Fnc_CFDLoad9
:S    295,    85,   203
:T Command
:D Read from file
:H Hlp_C_*TREAD
Inp_NoApply
Cmd_)/GO
! Exclude_from_paths
Cmd_*TREAD
  Fld_2
  Typ_Def_*CPAR(1)
  Fld_3
  Prm_File,ext,dir Read from file
  Typ_File
  Fld_6
  Prm_Nskip  Skipped lines number 
  Typ_Int
Cal_Fnc_CFDLoad8
:E END
:! 
:N Fnc_CFX_1st
:S    490,   161,   322
:T Command
:C )! Fnc_CFX_1st
:A Fnc_CFX_1st
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFRELAX
:H Hlp_C_MFPS
:H Hlp_C_MFSORDER
Inp_P
Fld_0
  Typ_lab
Cmd_MFCL
 Fld_0
 Fld_2
   Typ_Def_MFPS
Cmd_MFPS
 Fld_0
 Fld_2
  Typ_Def_group1
 Fld_3
  Typ_Def_ANSYS
Cmd_MFPS
 Fld_0
 Fld_2
  Typ_Def_group2
 Fld_3
  Typ_Def_CFX
Cmd_MFSO
 Fld_0
 Fld_2
  Typ_Def_group2
 Fld_3
  Typ_Def_group1
 Fld_0
  Typ_Sep
Cmd_MFRE
 Fld_2
 Typ_Def_ALL
 Fld_3
  Typ_Def_*PAR(_z1)
:E END
:! 
:N Fnc_CHECK_ESEL
:S    396,   225,   164
:T Cmd
:A    Select Warning/Error Elements
:D Select Warning/Error Elements
:C )!Fnc_CHECK_ESEL
:C )/NOPR
:C )_z = 1
:C )/GO
:K ((PREP7*SOLUTION)+begin)
:K #(igesfail)
:H Hlp_C_CHECK
Cmd_CHECK,ESEL
Fld_0
Typ_Lab
Prm_[CHECK] Select warning/error elements
Fld_2
Prm_LEVEL Elements that produce
Typ_LIS_OPTIONB
LIS_Warn + Err,WARN
LIS_Errors    ,ERR
:E END
:! 
:N Fnc_CHECK_plt
:S    577,   190,   380
:T Cmd
:A    Plot Warning/Error Elements
:D Plot Warning/Error Elements
:C )!Fnc_CHECK_plt
:K ((PREP7*SOLUTION)+begin)
:K #(igesfail)
:H Hlp_C_CHECK
Cmd_)/NOPR
Cmd_)CKELM
 Fld_0
 Typ_LAB
 Prm_Plot Warning/Error Elements
 Fld_2
 Prm_Good    Elements (blue)
 Typ_Logi,Do not Show,Show
 Fld_3
 Prm_Warning Elements (yellow)
 Typ_Logi,Do not Show,Show
 Def_1
 Fld_4
 Prm_Error   Elements (red)
 Typ_Logi,Do not Show,Show
 Def_1
 Fld_5
 Prm_Plot 
 Typ_Logi,without lines,with lines
 Def_1
 Fld_6
 Typ_Def_0
 Fld_7
 Typ_Def_1
Cmd_)/GO
:E END
:! 
:N Fnc_CHKMODCYC
:S    757,   659,    91
:T Cmd
:A Modal Cyclic Sym
:D Modal Cyclic Symmetry
:K (lsdyna)
:K ((PREP7*SOLUTION)+(CYCGEN+(MODAL+(PR_STRUC*STRUCTRL))))
:P (FULL_ANS*PROFS)
:C )/nopr
:C )*del,_z
:C )*del,_z1
:C )*GET,_z,common,,soptcm,,int,4 ! Mode extraction method key
:C )_z1=0
:C )*IF,_z,NE,0,THEN
:C )*IF,_z,NE,3,THEN
:C )*IF,_z,NE,4,THEN
:C )*IF,_z,EQ,6,THEN
:C ) _z1=2              ! Block Lanczos
:C )*ELSE 
:C ) _z1=1              ! Subspace
:C )*ENDIF
:C )*ENDIF
:C )*ENDIF
:C )*ENDIF
:C )*GET,_z,common,,soptcm,,int,39 ! SolveMethod (Check for PowerDyn)       
:C )*IF,_z1,EQ,1,THEN
:C )*IF,_z,EQ,3,THEN
:C ) _z1=0
:C )*ENDIF
:C )*ENDIF
Inp_P
Cmd_)! 
 Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_CYCSOL,2,GT,0,1
Cal_Fnc_WRNMODCYC,2,EQ,0,1
:E END
:! 
:N Fnc_CHK_ROUT
:S   2155,  2135,    13
:T Cmd
:C )! Fnc_CHK_ROUT
:!
:! *** primary function:   This function block is used to determine
:!                         the current ANSYS routine and return the
:!                         name in an expanded format.
:!
:! input arguments:
:!    variable (typ,siz,intent)    description
:!    _zc      (chr,ary,out)     - _zc must be at least dimensioned
:!                                 to be 10x1x2
:!
:! output arguments:
:!    variable (typ,siz,intent)    description
:!    _zc      (chr,ary,out)     - The current routine name in char8
:!                                 blocks
:!
:! *** NOTICE:             The values in _zc(1-10,1,2) will be
:!                         overwritten by this function
:C )/nopr
:C )_zc(1,1,2)='the curr' $)_zc(2,1,2)='ent rout' $)_zc(3,1,2)='ine'
:C )_zc(4,1,2)=' ' $)_zc(5,1,2)=' ' $)_zc(6,1,2)=' ' $)_zc(7,1,2)=' '
:C )_zc(8,1,2)=' ' $)_zc(9,1,2)=' ' $)_zc(10,1,2)=' '
:C )*GET,_z1,active,,routin
:C )*IF,_z1,EQ,17,THEN
:C )  _zc(1,1,2)='the prep' $)_zc(2,1,2)='rocessor' $)_zc(3,1,2)=' '
:C )*ELSEIF,_z1,EQ,21,THEN
:C )  _zc(1,1,2)='solution' $)_zc(2,1,2)=' ' $)_zc(3,1,2)=' '
:C )*ELSEIF,_z1,EQ,31,THEN
:C )  _zc(1,1,2)='the gene' $)_zc(2,1,2)='ral post' $)_zc(3,1,2)='processo'
:C )  _zc(4,1,2)='r'
:C )*ELSEIF,_z1,EQ,36,THEN
:C )  _zc(1,1,2)='the time' $)_zc(2,1,2)='-history' $)_zc(3,1,2)=' postpro'
:C )  _zc(4,1,2)='cessor'
:C )*ELSEIF,_z1,EQ,41,THEN
:C )  _zc(1,1,2)='optimiza' $)_zc(2,1,2)='tion'  $)_zc(3,1,2)=' '
:C )*ELSEIF,_z1,EQ,52,THEN
:C )  _zc(1,1,2)='the bina' $)_zc(2,1,2)='ry file ' $)_zc(3,1,2)='dumping '
:C )  _zc(4,1,2)=' process' $)_zc(5,1,2)='or'
:C )*ELSEIF,_z1,EQ,62,THEN
:C )  _zc(1,1,2)='the radi' $)_zc(2,1,2)='ation ma' $)_zc(3,1,2)='trix gen'
:C )  _zc(4,1,2)='eration ' $)_zc(5,1,2)=' process' $)_zc(6,1,2)='or      '
:C )*ELSEIF,_z1,EQ,65,THEN
:C )  _zc(1,1,2)='the IGES' $)_zc(2,1,2)=' file tr' $)_zc(3,1,2)='ansfer p'
:C )  _zc(4,1,2)='rocessor'
:C )*ELSEIF,_z1,EQ,71,THEN
:C )  _zc(1,1,2)='the run-' $)_zc(2,1,2)='time sta' $)_zc(3,1,2)='tistics '
:C )  _zc(4,1,2)=' process' $)_zc(5,1,2)='or'
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_CIRCLE
:S    263,   122,   134
:T Cmd_P
:C )! Fnc_CIRCLE
:A Full Circle
:D Full Circle
:K #(PREP7)
:H Hlp_C_CIRCLE
Inp_P
Cmd_CIRCLE
 Fld_2
Prm_[CIRCLE]Pick or enter 2 WP locations - center and a point on the circle
  Typ_XYZ
  Min_2
  Max_2
  Rub_3
:E END
:! 
:N Fnc_CIRCLE_arc
:S    336,   191,   138
:T Cmd_P
:C )! Fnc_CIRCLE_arc
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )/GO
:A By Cent & Radius
:D Arc by Center & Radius
:K #(PREP7)
:H Hlp_C_CIRCLE
Inp_P
Cmd_)!
 Fld_2
Prm_[CIRCLE]  Pick or enter 2 WP locations -- center and radius
  Typ_XYZ
  Min_2
  Max_2
  Rub_3
Cal_Fnc_CIRCLE_arc2
:E END
:! 
:N Fnc_CIRCLE_arc2
:S    363,   130,   226
:T Command
:C )! Fnc_CIRCLE_arc2
:D Arc by Center & Radius
:K #(PREP7)
:H Hlp_C_CIRCLE
Cmd_CIRCLE
 Fld_0
  Typ_Lab
  Prm_[CIRCLE]  Define Arc by Center and Radius
 Fld_2
  Typ_Def_P51X
 Fld_6
  Typ_REAL
  Prm_ARC    Arc length in degrees
  Def_360
 Fld_7
  Typ_INT
  Prm_NSEG   Number of lines in arc
  Def_Blank
:E END
:! 
:N Fnc_CLOG
:S    512,   143,   362
:T Command
:C )! Fnc_CLOG
:A Common Log
:D Common Log of Time-History Variables
:K #(POST26)
:H Hlp_C_CLOG
Cmd_CLOG
Fld_0
Typ_Lab
Prm_[CLOG]                IR = FACTB * CLOG(FACTA * IA)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  1st Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_10
Prm_FACTB  2nd Factor
Typ_real
Def_1.0
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_CM
:S    424,   110,   307
:T Command
:C )! Fnc_CM
:A Create Component
:D Create Component
:H Hlp_C_CM
Cmd_CM
Fld_0
Prm_[CM]  Create Component
 Fld_2
  Prm_Cname   Component name
  Typ_CHAR,32,32
 Fld_3
  Prm_Entity  Component is made of
  Typ_LIS_OPTIONB
LIS_Nodes           ,NODE
LIS_Elements        ,ELEM
LIS_Volumes         ,VOLU
LIS_Areas           ,AREA
LIS_Lines           ,LINE
LIS_Keypoints       ,KP
:E END
:! 
:N Fnc_CMACEL
:S    591,   267,   317
:T Command
:C )! Fnc_CMACEL
:A    On Components
:D Apply (Gravitational) Acceleration On Components
:K (lsdyna)
:K (PR_STRUC*PR_FLUID*PR_CFD*pr_set)
:K #((PREP7*SOLUTION)+(STRUCTRL*FLUID*CFD*NOFILTER))
:P (LINPLUS)
:H Hlp_C_ACEL
Inp_NoApply
Cmd_CMACEL
Fld_0
 Typ_LAB
 Prm_[CMACEL]  Apply (Gravitational) Acceleration
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME   Component Name
Fld_3
 Typ_REAL
 Prm_CMACELX  Global Cartesian X-comp
Fld_4
 Typ_REAL
 Prm_CMACELY  Global Cartesian Y-comp
Fld_5
 Typ_REAL
 Prm_CMACELZ  Global Cartesian Z-comp
:E END
:! 
:N Fnc_CMDELE
:S    297,   138,   152
:T Command
:C )! Fnc_CMDELE
:A Delete Comp/Assembly
:D Delete Component or Assembly
:H Hlp_C_CMDELE
Rmk_
Cmd_CMDELE
Fld_0
Typ_Lab
Prm_[CMDELE]  Delete Component or Assembly
 Fld_2
  Prm_Component to be deleted
  Typ_Lis
  Lis_*READ,CM
  Lis_*READ,ASSM
:E END
:! 
:N Fnc_CMDOMEGA_AK
:S    608,   152,   449
:T Command
:C )! Fnc_CMDOMEGA_AK
:A By Picking
:D Apply Angular Acceleration On Components
:H Hlp_C_CMDOMEGA
Inp_NoApply
Cmd_CMDOMEGA
Fld_0
 Typ_LAB
 Prm_[CMDOMEGA]  Apply Angular Acceleration On Components
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME    Component Name
Fld_3
 Typ_REAL
 Prm_DOMGX      Magnitude
 Def_*GET(common,,ACELCM,,real,34)
Fld_6
 Typ_Def_*GET(KP,_n1,LOC,X)
Fld_7
 Typ_Def_*GET(KP,_n1,LOC,Y)
Fld_8
 Typ_Def_*GET(KP,_n1,LOC,Z)
Fld_9
 Typ_Def_*GET(KP,_n2,LOC,X)
Fld_10
 Typ_Def_*GET(KP,_n2,LOC,Y)
Fld_11
 Typ_Def_*GET(KP,_n2,LOC,Z)
:E END
:! 
:N Fnc_CMDOMEGA_AKPik
:S    295,   146,   142
:T Cmd_P
:C )! Fnc_CMDOMEGA_AKPik
:C )/NOPR
:C )_n1=
:C )/GO
:A Pick Kpts
:D Create Rotational Axis
Inp_P
Cmd_)*set,_n1
 Fld_2
  Typ_KEYP
  Prm_Define rotational axis. Pick first keypoint.
  Min_1
  Cnt_1
  PCN_1
  Def_0
Cal_Fnc_CMDOMEGA_AxK
:E END
:! 
:N Fnc_CMDOMEGA_AN
:S    620,   152,   461
:T Command
:C )! Fnc_CMDOMEGA_AN
:A By Picking
:D Apply Angular Acceleration On Components
:H Hlp_C_CMDOMEGA
Inp_NoApply
Cmd_CMDOMEGA
Fld_0
 Typ_LAB
 Prm_[CMDOMEGA]  Apply Angular Acceleration On Components
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME    Component Name
Fld_3
 Typ_REAL
 Prm_DOMGX      Magnitude
 Def_*GET(common,,ACELCM,,real,34)
Fld_6
 Typ_Def_*GET(NODE,_n1,LOC,X)
Fld_7
 Typ_Def_*GET(NODE,_n1,LOC,Y)
Fld_8
 Typ_Def_*GET(NODE,_n1,LOC,Z)
Fld_9
 Typ_Def_*GET(NODE,_n2,LOC,X)
Fld_10
 Typ_Def_*GET(NODE,_n2,LOC,Y)
Fld_11
 Typ_Def_*GET(NODE,_n2,LOC,Z)
:E END
:! 
:N Fnc_CMDOMEGA_ANPik
:S    292,   147,   138
:T Cmd_P
:C )! Fnc_CMDOMEGA_ANPik
:C )/NOPR
:C )_n1=
:C )/GO
:A Pick Nodes
:D Create Rotational Axis
Inp_P
Cmd_)*set,_n1
 Fld_2
  Typ_NODE
  Prm_Define rotational axis. Pick first node.
  Min_1
  Cnt_1
  PCN_1
  Def_0
Cal_Fnc_CMDOMEGA_AxN
:E END
:! 
:N Fnc_CMDOMEGA_AxK
:S    291,   142,   142
:T Cmd_P
:C )! Fnc_CMDOMEGA_AxK
:C )/NOPR
:C )_n2=
:C )/GO
:A Pick Axis
:D Create Rotational Axis
Inp_P
Cmd_)*set,_n2
 Fld_2
  Typ_KEYP
  Prm_Define rotational axis. Pick second keypoint.
  Min_1
  Cnt_1
  PCN_1
  Def_0
Cal_Fnc_CMDOMEGA_AK
:E END
:! 
:N Fnc_CMDOMEGA_AxN
:S    287,   142,   138
:T Cmd_P
:C )! Fnc_CMDOMEGA_AxN
:C )/NOPR
:C )_n2=
:C )/GO
:A Pick Axis
:D Create Rotational Axis
Inp_P
Cmd_)*set,_n2
 Fld_2
  Typ_NODE
  Prm_Define rotational axis. Pick second node.
  Min_1
  Cnt_1
  PCN_1
  Def_0
Cal_Fnc_CMDOMEGA_AN
:E END
:! 
:N Fnc_CMDOMEGA_Axis
:S    560,   187,   366
:T Command
:C )! Fnc_CMDOMEGA_Axis
:A By Axis
:D Apply Angular Acceleration On Components
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_CMDOMEGA
Inp_NoApply
Cmd_CMDOMEGA
Fld_0
 Typ_LAB
 Prm_[CMDOMEGA]  Apply Angular Acceleration On Components
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME   Component Name
Fld_3
 Typ_REAL
 Prm_DOMGX     Magnitude
 Def_*GET(common,,ACELCM,,real,34)
Fld_0
 Typ_Sep
Fld_6
 Typ_REAL3
 Prm_X1,Y1,Z1  Rotational Axis / Pt 1
Fld_9
 Typ_REAL3
 Prm_X2,Y2,Z2  Rotational Axis / Pt 2
:E END
:! 
:N Fnc_CMDOMEGA_DK
:S    685,   152,   526
:T Command
:C )! Fnc_CMDOMEGA_DK
:A By Picking
:D Apply Angular Acceleration On Components
:H Hlp_C_CMDOMEGA
Inp_NoApply
Cmd_CMDOMEGA
Fld_0
 Typ_LAB
 Prm_[CMDOMEGA]  Apply Angular Acceleration On Components
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME    Component Name
Fld_3
 Typ_REAL
 Prm_DOMGX      Global Cartesian X
 Def_*GET(common,,ACELCM,,real,34)
Fld_4
 Typ_REAL
 Prm_DOMGX      Global Cartesian Y
 Def_*GET(common,,ACELCM,,real,35)
Fld_5
 Typ_REAL
 Prm_DOMGX      Global Cartesian Z
 Def_*GET(common,,ACELCM,,real,36)
Fld_6
 Typ_Def_*GET(KP,_n1,LOC,X)
Fld_7
 Typ_Def_*GET(KP,_n1,LOC,Y)
Fld_8
 Typ_Def_*GET(KP,_n1,LOC,Z)
:E END
:! 
:N Fnc_CMDOMEGA_DKPik
:S    313,   145,   161
:T Cmd_P
:C )! Fnc_CMDOMEGA_DKPik
:C )/NOPR
:C )_n1=
:C )/GO
:A Pick Kpt
:D Create Rotational Axis
Inp_P
Cmd_)*set,_n1
 Fld_2
  Typ_KEYP
  Prm_Define origin of angular acceleration vector. Pick one keypoint.
  Min_1
  Cnt_1
  PCN_1
  Def_0
Cal_Fnc_CMDOMEGA_DK
:E END
:! 
:N Fnc_CMDOMEGA_DN
:S    691,   152,   532
:T Command
:C )! Fnc_CMDOMEGA_DN
:A By Picking
:D Apply Angular Acceleration On Components
:H Hlp_C_CMDOMEGA
Inp_NoApply
Cmd_CMDOMEGA
Fld_0
 Typ_LAB
 Prm_[CMDOMEGA]  Apply Angular Acceleration On Components
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME    Component Name
Fld_3
 Typ_REAL
 Prm_DOMGX      Global Cartesian X
 Def_*GET(common,,ACELCM,,real,34)
Fld_4
 Typ_REAL
 Prm_DOMGX      Global Cartesian Y
 Def_*GET(common,,ACELCM,,real,35)
Fld_5
 Typ_REAL
 Prm_DOMGX      Global Cartesian Z
 Def_*GET(common,,ACELCM,,real,36)
Fld_6
 Typ_Def_*GET(NODE,_n1,LOC,X)
Fld_7
 Typ_Def_*GET(NODE,_n1,LOC,Y)
Fld_8
 Typ_Def_*GET(NODE,_n1,LOC,Z)
:E END
:! 
:N Fnc_CMDOMEGA_DNPik
:S    310,   146,   157
:T Cmd_P
:C )! Fnc_CMDOMEGA_DPick
:C )/NOPR
:C )_n1=
:C )/GO
:A Pick Node
:D Create Rotational Axis
Inp_P
Cmd_)*set,_n1
 Fld_2
  Typ_NODE
  Prm_Define origin of angular acceleration vector. Pick one node.
  Min_1
  Cnt_1
  PCN_1
  Def_0
Cal_Fnc_CMDOMEGA_DN
:E END
:! 
:N Fnc_CMDOMEGA_Dir
:S    684,   187,   490
:T Command
:C )! Fnc_CMDOMEGA_Dir
:A By origin
:D Apply Angular Acceleration On Components
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_CMDOMEGA
Inp_NoApply
Cmd_CMDOMEGA
Fld_0
 Typ_LAB
 Prm_[CMDOMEGA]  Apply Angular Acceleration On Components
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME   Component Name
Fld_3
 Typ_REAL
 Prm_DOMGX     Global Cartesian X
 Def_*GET(common,,ACELCM,,real,34)
Fld_4
 Typ_REAL
 Prm_DOMGY     Global Cartesian Y
 Def_*GET(common,,ACELCM,,real,35)
Fld_5
 Typ_REAL
 Prm_DOMGZ     Global Cartesian Z
 Def_*GET(common,,ACELCM,,real,36)
Fld_0
 Typ_Sep
Fld_6
 Typ_REAL3
 Prm_X1,Y1,Z1  Point on the rot. axis
:E END
:! 
:N Fnc_CMDOMEGA_dele
:S    491,   196,   288
:T Command
:C )! Fnc_CMDOMEGA_dele
:A    On Component
:D Delete Angular Acceleration On Components
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_CMDOMEGA
Inp_NoApply
Cmd_CMDOMEGA
Fld_0
 Typ_Lab
 Prm_[CMDOMEGA]  This function sets the angular acceleration
Fld_0
 Typ_Lab
 Prm_            on the selected component to zero!
Fld_2
 Typ_Lis_OptionB
 Lis_*READ,CM
 Prm_CM_NAME     Component Name
Fld_3
 Typ_Def_0
Fld_4
 Typ_Def_0
Fld_5
 Typ_Def_0
:E END
:! 
:N Fnc_CMEDIT
:S    531,   116,   408
:T Command
:C )! Fnc_CMEDIT
:A Edit Assembly
:D Edit Assembly
:H Hlp_C_CMEDIT
Cmd_CMEDIT
 Fld_0
  Prm_[CMEDIT]  Edit Assembly
 Fld_2
  Prm_Aname    Assembly to be edited
  Typ_Lis
   Lis_*READ,ASSM
 Fld_3
  Prm_Oper     Edit operation
  Typ_LIS_RADIOB
  LIS_Add components  ,ADD
  LIS_Remove compnents,DELE
 Fld_4
  Prm_Cnam1-7  Comp to be added/removd
  Typ_MLis
   Lis_*READ,CM
   Lis_*READ,ASSM
  Bnd_1.0,7.0
 Fld_0
  Typ_Lab
  Prm_                                 (specify up to 7)
:E END
:! 
:N Fnc_CMGRP
:S    454,   150,   297
:T Command
:C )! Fnc_CMGRP
:C )/NOPR
:C )_z1='  '
:C )/GOPR
:A Create Assembly
:D Create Assembly
:H Hlp_C_CMGRP
Rmk_
Cmd_CMGRP
 Fld_0
  Prm_[CMGRP]  Create Assembly
 Fld_2
  Prm_Aname    Assembly name
  Typ_CHAR,32,32
  Def_*PAR(_z1)
 Fld_3
  Prm_Cnam1-8  Assembly is made of
  Typ_MLis
   Lis_*READ,CM
   Lis_*READ,ASSM
  Bnd_1.0,8.0
 Fld_0
  Typ_Lab
  Prm_                                 (specify up to 8)
:E END
:! 
:N Fnc_CMLIST
:S    453,   134,   312
:T Command
:C )! Fnc_CMLIST
:A List Comp/Assembly
:D List Component or Assembly
:H Hlp_C_CMLIST
Cmd_)!
Fld_0
Typ_Lab
Prm_[CMLIST]  List Component or Assembly
 Fld_2
  Prm_List component/assembly
  Typ_Lis_RadioB
  LIS_By Component Name,1
  LIS_By Entity Type   ,2
  LIS_All Selected     ,3
  LIS_All Defined      ,4
Cal_Fnc_CMLIST1,2,EQ,1
Cal_Fnc_CMLIST2,2,EQ,2
Cal_Fnc_CMLIST3,2,EQ,3
Cal_Fnc_CMLIST4,2,EQ,4
:E END
:! 
:N Fnc_CMLIST1
:S    362,   135,   220
:T Command
:C )! Fnc_CMLIST
:A List Comp/Assembly
:D List Component or Assembly
:H Hlp_C_CMLIST
Cmd_CMLIST
Fld_0
Typ_Lab
Prm_[CMLIST]  List Component or Assembly
 Fld_2
  Prm_Component/assembly to be listed
  Typ_Lis
   Lis_*READ,CM
   Lis_*READ,ASSM
 Fld_3
  Prm_Expand?        
  Typ_LOGI,No         ,Yes
   Def_0
:E END
:! 
:N Fnc_CMLIST2
:S    489,   135,   347
:T Command
:C )! Fnc_CMLIST
:A List Comp/Assembly
:D List Component or Assembly
:H Hlp_C_CMLIST
Cmd_CMLIST
Fld_0
Typ_Lab
Prm_[CMLIST]  List Entities belonging to Component or Assembly
 Fld_4
  Prm_Entity type to be listed
  Typ_Lis_OptionB
   Lis_Node    ,'NODE'
   Lis_Element ,'ELEM'
   Lis_Keypoint,'KP  '
   Lis_Line    ,'LINE'
   Lis_Area    ,'AREA'
   Lis_Volume  ,'VOLU'
 Fld_3
  Prm_Expand?        
  Typ_LOGI,No         ,Yes
   Def_0
:E END
:! 
:N Fnc_CMLIST3
:S    326,   167,   152
:T Command
:C )! Fnc_CMLIST
:C )/NOPR
:C )_z1=' '
:C )/GOPR
:A List Comp/Assembly
:D List Component or Assembly
:H Hlp_C_CMLIST
Cmd_CMLIST
Fld_0
Typ_Lab
Prm_[CMLIST]  List All Selected Components
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Prm_Expand?
  Typ_LOGI,No         ,Yes
   Def_0
:E END
:! 
:N Fnc_CMLIST4
:S    287,   135,   145
:T Command
:C )! Fnc_CMLIST
:A List Comp/Assembly
:D List Component or Assembly
:H Hlp_C_CMLIST
Cmd_CMLIST
Fld_0
Typ_Lab
Prm_[CMLIST]  List All Defined Components
 Fld_2
  Typ_Def_ALL
 Fld_3
  Prm_Expand?
  Typ_LOGI,No         ,Yes
   Def_0
:E END
:! 
:N Fnc_CMOMEGA_AK
:S    595,   145,   443
:T Command
:C )! Fnc_CMOMEGA_AK
:A By Picking
:D Apply Angular Velocity On Components
:H Hlp_C_CMOMEGA
Inp_NoApply
Cmd_CMOMEGA
Fld_0
 Typ_LAB
 Prm_[CMOMEGA]  Apply Angular Velocity On Components
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME    Component Name
Fld_3
 Typ_REAL
 Prm_OMEGX      Magnitude
 Def_*GET(common,,ACELCM,,real,31)
Fld_6
 Typ_Def_*GET(KP,_n1,LOC,X)
Fld_7
 Typ_Def_*GET(KP,_n1,LOC,Y)
Fld_8
 Typ_Def_*GET(KP,_n1,LOC,Z)
Fld_9
 Typ_Def_*GET(KP,_n2,LOC,X)
Fld_10
 Typ_Def_*GET(KP,_n2,LOC,Y)
Fld_11
 Typ_Def_*GET(KP,_n2,LOC,Z)
:E END
:! 
:N Fnc_CMOMEGA_AKPik
:S    292,   144,   141
:T Cmd_P
:C )! Fnc_CMOMEGA_AKPik
:C )/NOPR
:C )_n1=
:C )/GO
:A Pick Kpts
:D Create Rotational Axis
Inp_P
Cmd_)*set,_n1
 Fld_2
  Typ_KEYP
  Prm_Define rotational axis. Pick first keypoint.
  Min_1
  Cnt_1
  PCN_1
  Def_0
Cal_Fnc_CMOMEGA_AxK
:E END
:! 
:N Fnc_CMOMEGA_AN
:S    607,   145,   455
:T Command
:C )! Fnc_CMOMEGA_AN
:A By Picking
:D Apply Angular Velocity On Components
:H Hlp_C_CMOMEGA
Inp_NoApply
Cmd_CMOMEGA
Fld_0
 Typ_LAB
 Prm_[CMOMEGA]  Apply Angular Velocity On Components
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME    Component Name
Fld_3
 Typ_REAL
 Prm_OMEGX      Magnitude
 Def_*GET(common,,ACELCM,,real,31)
Fld_6
 Typ_Def_*GET(NODE,_n1,LOC,X)
Fld_7
 Typ_Def_*GET(NODE,_n1,LOC,Y)
Fld_8
 Typ_Def_*GET(NODE,_n1,LOC,Z)
Fld_9
 Typ_Def_*GET(NODE,_n2,LOC,X)
Fld_10
 Typ_Def_*GET(NODE,_n2,LOC,Y)
Fld_11
 Typ_Def_*GET(NODE,_n2,LOC,Z)
:E END
:! 
:N Fnc_CMOMEGA_ANPik
:S    289,   145,   137
:T Cmd_P
:C )! Fnc_CMOMEGA_ANPik
:C )/NOPR
:C )_n1=
:C )/GO
:A Pick Nodes
:D Create Rotational Axis
Inp_P
Cmd_)*set,_n1
 Fld_2
  Typ_NODE
  Prm_Define rotational axis. Pick first node.
  Min_1
  Cnt_1
  PCN_1
  Def_0
Cal_Fnc_CMOMEGA_AxN
:E END
:! 
:N Fnc_CMOMEGA_AxK
:S    288,   140,   141
:T Cmd_P
:C )! Fnc_CMOMEGA_AxK
:C )/NOPR
:C )_n2=
:C )/GO
:A Pick Axis
:D Create Rotational Axis
Inp_P
Cmd_)*set,_n2
 Fld_2
  Typ_KEYP
  Prm_Define rotational axis. Pick second keypoint.
  Min_1
  Cnt_1
  PCN_1
  Def_0
Cal_Fnc_CMOMEGA_AK
:E END
:! 
:N Fnc_CMOMEGA_AxN
:S    284,   140,   137
:T Cmd_P
:C )! Fnc_CMOMEGA_AxN
:C )/NOPR
:C )_n2=
:C )/GO
:A Pick Axis
:D Create Rotational Axis
Inp_P
Cmd_)*set,_n2
 Fld_2
  Typ_NODE
  Prm_Define rotational axis. Pick second node.
  Min_1
  Cnt_1
  PCN_1
  Def_0
Cal_Fnc_CMOMEGA_AN
:E END
:! 
:N Fnc_CMOMEGA_Axis
:S    547,   180,   360
:T Command
:C )! Fnc_CMOMEGA_Axis
:A By Axis
:D Apply Angular Velocity On Components
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_CMOMEGA
Inp_NoApply
Cmd_CMOMEGA
Fld_0
 Typ_LAB
 Prm_[CMOMEGA]  Apply Angular Velocity On Components
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME   Component Name
Fld_3
 Typ_REAL
 Prm_OMEGX     Magnitude
 Def_*GET(common,,ACELCM,,real,31)
Fld_0
 Typ_Sep
Fld_6
 Typ_REAL3
 Prm_X1,Y1,Z1  Rotational Axis / Pt 1
Fld_9
 Typ_REAL3
 Prm_X2,Y2,Z2  Rotational Axis / Pt 2
:E END
:! 
:N Fnc_CMOMEGA_DK
:S    672,   145,   520
:T Command
:C )! Fnc_CMOMEGA_DK
:A By Picking
:D Apply Angular Velocity On Components
:H Hlp_C_CMOMEGA
Inp_NoApply
Cmd_CMOMEGA
Fld_0
 Typ_LAB
 Prm_[CMOMEGA]  Apply Angular Velocity On Components
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME    Component Name
Fld_3
 Typ_REAL
 Prm_OMEGX      Global Cartesian X
 Def_*GET(common,,ACELCM,,real,31)
Fld_4
 Typ_REAL
 Prm_OMEGY      Global Cartesian Y
 Def_*GET(common,,ACELCM,,real,32)
Fld_5
 Typ_REAL
 Prm_OMEGZ      Global Cartesian Z
 Def_*GET(common,,ACELCM,,real,33)
Fld_6
 Typ_Def_*GET(KP,_n1,LOC,X)
Fld_7
 Typ_Def_*GET(KP,_n1,LOC,Y)
Fld_8
 Typ_Def_*GET(KP,_n1,LOC,Z)
:E END
:! 
:N Fnc_CMOMEGA_DKPik
:S    306,   143,   156
:T Cmd_P
:C )! Fnc_CMOMEGA_DKPik
:C )/NOPR
:C )_n1=
:C )/GO
:A Pick Kpt
:D Create Rotational Axis
Inp_P
Cmd_)*set,_n1
 Fld_2
  Typ_KEYP
  Prm_Define origin of angular velocity vector. Pick one keypoint.
  Min_1
  Cnt_1
  PCN_1
  Def_0
Cal_Fnc_CMOMEGA_DK
:E END
:! 
:N Fnc_CMOMEGA_DN
:S    678,   145,   526
:T Command
:C )! Fnc_CMOMEGA_DN
:A By Picking
:D Apply Angular Velocity On Components
:H Hlp_C_CMOMEGA
Inp_NoApply
Cmd_CMOMEGA
Fld_0
 Typ_LAB
 Prm_[CMOMEGA]  Apply Angular Velocity On Components
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME    Component Name
Fld_3
 Typ_REAL
 Prm_OMEGX      Global Cartesian X
 Def_*GET(common,,ACELCM,,real,31)
Fld_4
 Typ_REAL
 Prm_OMEGY      Global Cartesian Y
 Def_*GET(common,,ACELCM,,real,32)
Fld_5
 Typ_REAL
 Prm_OMEGZ      Global Cartesian Z
 Def_*GET(common,,ACELCM,,real,33)
Fld_6
 Typ_Def_*GET(NODE,_n1,LOC,X)
Fld_7
 Typ_Def_*GET(NODE,_n1,LOC,Y)
Fld_8
 Typ_Def_*GET(NODE,_n1,LOC,Z)
:E END
:! 
:N Fnc_CMOMEGA_DNPik
:S    303,   144,   152
:T Cmd_P
:C )! Fnc_CMOMEGA_DNPik
:C )/NOPR
:C )_n1=
:C )/GO
:A Pick Node
:D Create Rotational Axis
Inp_P
Cmd_)*set,_n1
 Fld_2
  Typ_NODE
  Prm_Define origin of angular velocity vector. Pick one node.
  Min_1
  Cnt_1
  PCN_1
  Def_0
Cal_Fnc_CMOMEGA_DN
:E END
:! 
:N Fnc_CMOMEGA_Dir
:S    671,   180,   484
:T Command
:C )! Fnc_CMOMEGA_Dir
:A By origin
:D Apply Angular Velocity On Components
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_CMOMEGA
Inp_NoApply
Cmd_CMOMEGA
Fld_0
 Typ_LAB
 Prm_[CMOMEGA]  Apply Angular Velocity On Components
Fld_2
 Typ_Lis_OptionB
 LIS_*READ,CM
 Prm_CM_NAME   Component Name
Fld_3
 Typ_REAL
 Prm_OMEGX     Global Cartesian X
 Def_*GET(common,,ACELCM,,real,31)
Fld_4
 Typ_REAL
 Prm_OMEGY     Global Cartesian Y
 Def_*GET(common,,ACELCM,,real,32)
Fld_5
 Typ_REAL
 Prm_OMEGZ     Global Cartesian Z
 Def_*GET(common,,ACELCM,,real,33)
Fld_0
 Typ_Sep
Fld_6
 Typ_REAL3
 Prm_X1,Y1,Z1  Point on the rot. axis
:E END
:! 
:N Fnc_CMOMEGA_dele
:S    476,   189,   280
:T Command
:C )! Fnc_CMOMEGA_dele
:A    On Component
:D Delete Angular Velocity On Components
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_CMOMEGA
Inp_NoApply
Cmd_CMOMEGA
Fld_0
 Typ_Lab
 Prm_[CMOMEGA]  This function sets the angular velocity
Fld_0
 Typ_Lab
 Prm_           on the selected component to zero!
Fld_2
 Typ_Lis_OptionB
 Lis_*READ,CM
 Prm_CM_NAME    Component Name
Fld_3
 Typ_Def_0
Fld_4
 Typ_Def_0
Fld_5
 Typ_Def_0
:E END
:! 
:N Fnc_CMPL
:S    396,   132,   257
:T Command
:C )! Fnc_CMPL
:A By Name / Set Number
:D Plot Component or Assembly
:H Hlp_C_CMPLOT
Cmd_)!
Fld_0
Typ_Lab
Prm_[CMPLOT]  Plot Component or Assembly
 Fld_2
  Prm_Choose component/assembly 
  Typ_Lis_RadioB
  LIS_by name         ,1
  LIS_by set number   ,2
  LIS_by entity type  ,3
Cal_Fnc_CMPL1,2,EQ,1
Cal_Fnc_CMPL2,2,EQ,2
Cal_Fnc_CMPL3,2,EQ,3
:E END
:! 
:N Fnc_CMPL1
:S    400,   132,   261
:T Command
:C )! Fnc_CMPL1
:A Plot Comp/Assembly
:D Plot Component or Assembly
:H Hlp_C_CMPLOT
Cmd_CMPLOT
Fld_0
Typ_Lab
Prm_[CMPLOT]  Plot Component or Assembly
 Fld_2
  Prm_Component/assembly to be plotted
  Typ_Lis
   Lis_*READ,CM
   Lis_*READ,ASSM
 Fld_4
  Prm_Choose Context
  Typ_Lis_RadioB
  LIS_Only Component  ,'ONLY'
  LIS_In Context      ,'ALL '
:E END
:! 
:N Fnc_CMPL2
:S    267,   132,   128
:T Command
:C )! Fnc_CMPL2
:A Plot Comp/Assembly
:D Plot Component or Assembly
:H Hlp_C_CMPLOT
Cmd_CMPLOT
Fld_0
Typ_Lab
Prm_[CMPLOT]  Plot Component or Assembly
 Fld_2
  Prm_Enter set number to be plotted
  Typ_Int
  Def_1
:E END
:! 
:N Fnc_CMPL3
:S    533,   132,   394
:T Command
:C )! Fnc_CMPL3
:A Plot Comp/Assembly
:D Plot Component or Assembly
:H Hlp_C_CMPLOT
Cmd_CMPLOT
Fld_0
Typ_Lab
Prm_[CMPLOT]  Plot Component or Assembly
 Fld_3
  Prm_Choose entity type to be plotted
   Typ_Lis_OptionB
    Lis_Node    ,'NODE'
    Lis_Element ,'ELEM'
    Lis_Keypoint,'KP  '
    Lis_Line    ,'LINE'
    Lis_Area    ,'AREA'
    Lis_Volume  ,'VOLU'
    Def_1
 Fld_2
  Prm_All or First Set
   Typ_Lis_OptionB
    Lis_ALL      ,'ALL '
    Lis_First Set,'    '
    Def_1
:E END
:! 
:N Fnc_CMSEL
:S    379,   135,   237
:T Command
:C )! Fnc_CMSEL
:A Select Comp/Assembly
:D Select Component or Assembly
:H Hlp_C_CMSEL
Cmd_)!
Fld_0
Typ_Lab
Prm_[CMSEL]  Select Entities belonging to Component or Assembly
 Fld_2
  Prm_Select component/assembly
  Typ_Lis_RadioB
  LIS_by component name,1
  LIS_by entity type   ,2
Cal_Fnc_CMSEL1,2,EQ,1
Cal_Fnc_CMSEL2,2,EQ,2
:E END
:! 
:N Fnc_CMSEL1
:S    535,   136,   392
:T Command
:C )! Fnc_CMSEL
:A Select Comp/Assembly
:D Select Component or Assembly
:H Hlp_C_CMSEL
Cmd_CMSEL
Fld_0
Typ_Lab
Prm_[CMSEL]  Select Entities belonging to Component or Assembly
 Fld_3
  Prm_Name  Comp/Assemb to be selected
  Typ_Lis
  LIS_*READ,CM
  LIS_*READ,ASSM
 Fld_2
  Prm_Type  Type of selection
  Typ_Lis_OptionB
   Lis_From full set   ,S
   Lis_Reselect        ,R
   Lis_Also select     ,A
   Lis_Unselect        ,U
   Lis_Select all      ,ALL
   Lis_Select none     ,NONE
:E END
:! 
:N Fnc_CMSEL2
:S    643,   136,   500
:T Command
:C )! Fnc_CMSEL
:A Select Comp/Assembly
:D Select Component or Assembly
:H Hlp_C_CMSEL
Cmd_CMSEL
Fld_0
Typ_Lab
Prm_[CMSEL]  Select Entities belonging to Component or Assembly
 Fld_4
  Prm_Entity type to be selected
  Typ_Lis_OptionB
   Lis_Node    ,'NODE'
   Lis_Element ,'ELEM'
   Lis_Keypoint,'KP  '
   Lis_Line    ,'LINE'
   Lis_Area    ,'AREA'
   Lis_Volume  ,'VOLU'
 Fld_2
  Prm_Type  Type of selection
  Typ_Lis_OptionB
   Lis_From full set   ,S
   Lis_Reselect        ,R
   Lis_Also select     ,A
   Lis_Unselect        ,U
   Lis_Select all      ,ALL
   Lis_Select none     ,NONE
:E END
:! 
:N Fnc_CMSE_A
:S    293,   131,   155
:T Cmd_P
:C )! Fnc_CMSE_A
:A Also select components
:D Also select components
:H Hlp_C_CMSEL
Inp_P
Cmd_CMSE
 Fld_2
  Typ_DEF_A
 Fld_3
Prm_[CMSE],A  Pick or enter components to be added to the selected set
  Typ_COMP
  Min_1
  Cnt_s
  PCN_1
  Sel_U
:E END
:! 
:N Fnc_CMSE_R
:S    264,   125,   132
:T Cmd_P
:C )! Fnc_CMSE_R
:A Reselect components
:D Reselect components
:H Hlp_C_CMSEL
Inp_P
Cmd_CMSE
 Fld_2
  Typ_DEF_R
 Fld_3
Prm_[CMSE],R  Pick or enter components to be reselected
  Typ_COMP
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_CMSE_S
:S    266,   121,   138
:T Cmd_P
:C )! Fnc_CMSE_S
:A Select components
:D Select components
:H Hlp_C_CMSEL
Inp_P
Cmd_CMSE
 Fld_2
  Typ_DEF_S
 Fld_3
Prm_[CMSE],S  Pick or enter components to be selected
  Typ_COMP
  Min_1
  Cnt_s
  PCN_1
  Sel_D
:E END
:! 
:N Fnc_CMSE_U
:S    264,   125,   132
:T Cmd_P
:C )! Fnc_CMSE_U
:A Unselect components
:D Unselect components
:H Hlp_C_CMSEL
Inp_P
Cmd_CMSE
 Fld_2
  Typ_DEF_U
 Fld_3
Prm_[CMSE],U  Pick or enter components to be unselected
  Typ_COMP
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_CMS_Name
:S    236,   104,   125
:T Command
:C )! Fnc_CMS_Name
:A Define Name
:D CMSPREP Command
Inp_NoApply
Cmd_CMSP
 Fld_2
  Typ_Def_generate
 Fld_3
  Prm_CMS Superelement Name
  Typ_CHAR,32,8
  Def_*GET(active,,jobnam)
:E END
:! 
:N Fnc_CMS_Stat
:S    145,    98,    40
:T Command
:C )! Fnc_CMS_Stat
:A CMS Status
:D CMS Status
Inp_P
Cmd_CMSPREP
 Fld_2
  Typ_Def_stat
:E END
:! 
:N Fnc_CNVTOL
:S    286,   155,   124
:T Command
:C )! Fnc_CNVTOL
:A Convergence Crit
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_UI_SOL_CNVT
Inp_P
Cmd_)/NOPR
Cmd_)KEYW,KEY99,0
Cmd_)CNVTOL,STAT,,, ,,, ,1
Cmd_)/GO
! Cust_Cal_Fnc_CNVTOL_ADD
! Cust_Cal_Fnc_CNVTOL_EDIT
:E END
:! 
:N Fnc_CNVTOL2
:S    272,   141,   124
:T Command
:C )/NOPR
:C )KEYW,kystat,0
:C )KEYW,kyharm,1
:C )/GO
:C )! Fnc_CNVTOL2
:H Hlp_UI_SOL_CNVT
Inp_P
Cmd_)/NOPR
Cmd_)KEYW,KEY99,0
Cmd_)CNVTOL,STAT,,, ,,, ,2
Cmd_)/GO
! Cust_Cal_Fnc_CNVTOL_ADD
! Cust_Cal_Fnc_CNVTOL_EDIT
:E END
:! 
:N Fnc_CNVTOL_0
:S    176,   156,    13
:T Cmd_N
:C )! Fnc_CNVTOL
:A Convergence Crit-
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_UI_SOL_CNVT
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_CNVTOL_1
:S    168,   133,    28
:T Command
:A    Static
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_UI_SOL_CNVT
Inp_P
Cmd_)!
Cal_Fnc_CNVTOL
:E END
:! 
:N Fnc_CNVTOL_2
:S    171,   135,    29
:T Command
:A    Harmonic
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_UI_SOL_CNVT
Inp_P
Cmd_)!
Cal_Fnc_CNVTOL2
:E END
:! 
:N Fnc_CNVTOL_3
:S    171,   136,    28
:T Command
:A    Transient
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_UI_SOL_CNVT
Inp_P
Cmd_)!
Cal_Fnc_CNVTOL
:E END
:! 
:N Fnc_CNVTOL_ADD
:S    206,   166,    33
:T Command
:C )! Fnc_CNVTOL_ADD
:A Convergence Crit
:C )/NOPR
:C )KEYW,KEY99,0
:C )/GO
:K #(PREP7*SOLUTION)
:H Hlp_C_CNVTOL
Inp_P
Cmd_)!
Cal_Fnc_CNVTOL_ADD0
:E END
:! 
:N Fnc_CNVTOL_ADD0
:S   6566,  1109,  5450
:T Command
:C )! Fnc_CNVTOL_ADD0
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0,KEY3,0,KEY4,0
:C )KEYW,KEY5,0,KEY6,0,KEY7,0,KEY8,0
:C )KEYW,KEY9,0,KEY10,0,KEY11,0,KEY12,0
:C )KEYW,KEY13,0,KEY14,0,KEY15,0,KEY16,0
:C )KEYW,KEY17,0,KEY18,0,KEY19,0,KEY20,0
:C )*del,_zc
:C )*DIM,_zc,char,20
:C )*SET,_zc(1),'F   ','U   ', 'M   ','ROT ', 'HEAT','TEMP'
:C )*SET,_zc(7),'FLUX','MAG ', 'CSG ','A   ', 'AMPS','VOLT'
:C )*SET,_zc(13),'FLOW','PRES', 'VF  ','V   ' 
:C )*SET,_zc(17),'CURT','EMF ', 'VLTG','CURR'
:C )*GET,_z2,ACTIVE,,KEYWORD,,KEY99
:C )*IF,_z2,EQ,1,THEN
:C )KEYW,KEY%_z1%,1
:C )*GET,_z3,common,,stepcm,,real,28+_z1   ! Reference value of Lab  
:C )*GET,_z4,common,,stepcm,,real,58+_z1   ! Tolerance about VALUE   
:C )*GET,_z5,common,,stepcm,,int,34+_z1    ! Convergence norm 
:C )*GET,_z6,common,,stepcm,,real,172+_z1  ! Minimum reference value 
:C )*IF,_z3,EQ,0,THEN
:C ) _z3=' '
:C )*ENDIF
:C )*IF,_z6,EQ,0,THEN
:C ) _z6=' '
:C )*ENDIF
:C )*ELSE
:C )_z1=1
:C )_z3=' '
:C )_z4=0.001
:C )_z5=2
:C )_z6=' '
:C )*ENDIF
:C )/GO
:D Nonlinear Convergence Criteria
:H Hlp_C_CNVTOL
Inp_NoApply
Cmd_CNVTOL
 Fld_0
  K_FL(key99)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria
 Fld_2
  K_FL(key99)
  Prm_Lab     Convergence is based on
  Typ_IDX
P_LN(LINPLUS)
  IDX_Structural      ,Force          F,F
P_LN(LINPLUS)
  IDX_Structural      ,Moment         M,M
P_LN(LINPLUS)
  IDX_Structural      ,Displacement   U,U
P_LN(LINPLUS)
  IDX_Structural      ,Rotation     ROT,ROT
P_LN(THERMAL)
  IDX_Thermal         ,Heat flow   HEAT,HEAT
P_LN(THERMAL)
  IDX_Thermal         ,Temperature TEMP,TEMP
P_LN(ELECMAG)
  IDX_Magnetic        ,Flux        FLUX,FLUX
P_LN(ELECMAG)
  IDX_Magnetic        ,Current segm CSG,CSG
P_LN(ELECMAG)
  IDX_Magnetic        ,Scalar poten MAG,MAG
P_LN(ELECMAG)
  IDX_Magnetic        ,Vector poten   A,A
  K_LN(CIRC)
P_LN(ELECMAG)
  IDX_Magnetic        ,Current     CURT,CURT
  K_LN(CIRC*VFED)
P_LN(ELECMAG)
  IDX_Magnetic        ,Voltage drp VLTG,VLTG
  K_LN(CIRC)
P_LN(ELECMAG)
  IDX_Magnetic        ,EMF drop     EMF,EMF
  K_LN(CIRC*VFED)
P_LN(ELECMAG)
  IDX_Magnetic        ,Current     CURR,CURR
P_LN(ELECMAG)
  IDX_Electric        ,Current     AMPS,AMPS
P_LN(ELECMAG)
  IDX_Electric        ,Voltage     VOLT,VOLT
  K_LN(CIRC*VFED)
P_LN(ELECMAG)
  IDX_Electric        ,Current     CURR,CURR
  K_LN(CIRC*VFED)
P_LN(ELECMAG)
  IDX_Electric        ,Voltage drp VLTG,VLTG
P_LN(FULL_ANS)
  IDX_Fluid/CFD       ,Fluid flow  FLOW,FLOW
P_LN(FULL_ANS)
  IDX_Fluid/CFD       ,Velocity       V,V
P_LN(FULL_ANS)
  IDX_Fluid/CFD       ,Pressure    PRES,PRES
  K_LN(ROMES)
P_LN(ELECMAG)
  IDX_ROM             ,Modal Amplit EMF,EMF
  K_LN(ROMES)
P_LN(ELECMAG)
  IDX_ROM             ,Modal Force CURT,CURT
  K_LN(ROMES)
P_LN(ELECMAG)
  IDX_ROM             ,Current     AMPS,AMPS
  K_LN(ROMES)
P_LN(ELECMAG)
  IDX_ROM             ,Voltage     VOLT,VOLT
  Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY1)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for F (Force)
 Fld_2
  K_FL(KEY99+KEY1)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY2)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for U (Displacement)
 Fld_2
  K_FL(KEY99+KEY2)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY3)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for M (Moment)
 Fld_2
  K_FL(KEY99+KEY3)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY4)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for ROT (Rotation)
 Fld_2
  K_FL(KEY99+KEY4)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY5)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for HEAT (Heat Flow)
 Fld_2
  K_FL(KEY99+KEY5)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY6)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for TEMP (Temperature)
 Fld_2
  K_FL(KEY99+KEY6)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY7)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for FLUX (Magnetic Flux)
 Fld_2
  K_FL(KEY99+KEY7)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY8)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for MAG (Scalar Potential)
 Fld_2
  K_FL(KEY99+KEY8)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY9)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for CSG (Current Segment)
 Fld_2
  K_FL(KEY99+KEY9)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY10)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for A (Vector Potential)
 Fld_2
  K_FL(KEY99+KEY10)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY11)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for AMPS (Current)
 Fld_2
  K_FL(KEY99+KEY11)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY12)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for VOLT (Voltage)
 Fld_2
  K_FL(KEY99+KEY12)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY13)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for FLOW (Fluid Flow)
 Fld_2
  K_FL(KEY99+KEY13)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY14)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for PRES (Pressure)
 Fld_2
  K_FL(KEY99+KEY14)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY15)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for VF
 Fld_2
  K_FL(KEY99+KEY15)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY16)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for V (Velocity)
 Fld_2
  K_FL(KEY99+KEY16)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY17)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for CURT
 Fld_2
  K_FL(KEY99+KEY17)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY18)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for EMF
 Fld_2
  K_FL(KEY99+KEY18)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY19)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for VLTG
 Fld_2
  K_FL(KEY99+KEY19)
  Typ_Def_*PAR(_zc(_z1))
 Fld_0
  K_FL(KEY99+KEY20)
  Typ_Lab
  Prm_[CNVTOL]  Nonlinear Convergence Criteria for CURR
 Fld_2
  K_FL(KEY99+KEY20)
  Typ_Def_*PAR(_zc(_z1))
!
 Fld_3
  K_FL(key99)
  Prm_VALUE   Reference value of Lab
  Typ_REAL
  Def_*PAR(_z3)
 Fld_3
  K_FL(KEY99)
  Prm_VALUE   Reference value of %_zc(_z1)%
  Typ_REAL
  Def_*PAR(_z3)
 Fld_4
  Prm_TOLER   Tolerance about VALUE
  Typ_REAL
  K_LN(nlcntrl)
  Def_*PAR(_z4)
 Fld_5
  Prm_NORM    Convergence norm
  Typ_LIS_OPTIONB
  LIS_L2 norm         ,2
  LIS_L1 norm         ,1
  LIS_Infinite norm   ,0
  Def_*PAR(_z5)
 Fld_6
  Prm_MINREF  Minimum reference value
  Typ_REAL
  Def_*PAR(_z6)
 Fld_0
  Typ_Lab
  Prm_(Used only if VALUE is blank.  If negative, no minimum is enforced)
Cal_Fnc_CNVTOL
:E END
:! 
:N Fnc_CNVTOL_EDIT
:S    208,   168,    33
:T Command
:C )! Fnc_CNVTOL_EDIT
:A Convergence Crit
:C )/NOPR
:C )KEYW,KEY99,1
:C )/GO
:K #(PREP7*SOLUTION)
:H Hlp_C_CNVTOL
Inp_P
Cmd_)!
Cal_Fnc_CNVTOL_ADD0
:E END
:! 
:N Fnc_CON4
:S    395,   130,   258
:T Cmd_P
:C )! Fnc_CON4
:A By Picking
:D Cone by Picking
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_CON4
Inp_P
Cmd_CON4
 Fld_0
  Typ_XYZ_WP
  Prm_[CON4] Pick 4 WP locations -- center, two radii, and Z depth
  Min_4
  Max_4
  Rub_108
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
 Fld_6
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_CON4_iges
:S    402,   137,   258
:T Cmd_P
:C )! Fnc_CON4_iges
:A    Cone
:D Cone by Picking
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_CON4
Inp_P
Cmd_CON4
 Fld_0
  Typ_XYZ_WP
  Prm_[CON4] Pick 4 WP locations -- center, two radii, and Z depth
  Min_4
  Max_4
  Rub_108
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
 Fld_6
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_CONE
:S    531,   145,   379
:T Command
:C )! Fnc_CONE
:A By Dimensions
:D Create Cone by Dimensions
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_CONE
Cmd_CONE
 Fld_0
  Typ_Lab
  Prm_[CONE]  Create Cone by Dimensions
 Fld_2
  Typ_Real
  Prm_RBOT    Bottom radius
  Def_Blank
 Fld_3
  Typ_Real
  Prm_RTOP    Optional top radius
  Def_Blank
 Fld_4
  Typ_REAL2
  Prm_Z1,Z2   Z-coordinates
  Def_0,Blank
 Fld_6
  Typ_Real
  Prm_THETA1  Starting angle (degrees)
  Def_0
 Fld_7
  Typ_Real
  Prm_THETA2  Ending angle (degrees)
  Def_360
:E END
:! 
:N Fnc_CONJUG
:S    517,   203,   307
:T Command
:C )! Fnc_CONJUG
:A Complex Conjugat
:D Complex Conjugate of Time-History Variable
:K (lsdyna)
:K #(POST26+HARMONIC)
:P (LINPLUS*ELECMAG)
:H Hlp_C_CONJUG
Cmd_CONJUG
Fld_0
Typ_Lab
Prm_[CONJUG]           IR = Complex Conjugate of (FACTA * IA)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_COPSD
:S    791,   166,   618
:T Command
:C )! Fnc_COPSD
:A Calc Covariance
:D Calculate Covariance
:K (lsdyna)
:K #((POST26+PSDRANDM)*NOFILTER)
:H Hlp_C_CVAR
Cmd_CVAR
Fld_0
 Typ_Lab
 Prm_[CVAR]  Calculate Covariance
Fld_2
 Prm_IR     Reference  number of -
 Typ_INT
Fld_0
 Typ_Lab
 Prm_       - resulting variable
Fld_3
 Prm_IA,IB  Ref no. of variables -
 Typ_Int2
 Def_Blank,Blank
Fld_0
 Typ_Lab
 Prm_       - to be operated on
Fld_5
 Prm_ITYPE  Type of response PSD
 Typ_Lis_OptionB
  Lis_Displacement,1
  Lis_Velocity,    2
  Lis_Acceleration,3
  Def_1
Fld_6
 Prm_DATUM  Ref w.r.t. which -
 Typ_Lis_OptionB
  Lis_Absolute value,1
  Lis_Relative to base,2
  Def_2
Fld_0
 Typ_Lab
 Prm_       - covariance is calculated.
Fld_7
 Prm_NAME   User-specified label
 Typ_Char
 Def_
:E END
:! 
:N Fnc_COVAL
:S    516,   196,   313
:T Command
:C )! Fnc_COVAL
:A Cospectral
:D Table of Cospectral Values vs Frequencies
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:P (FULL_ANS)
:H Hlp_UI_coval
Inp_NoApply
Cmd_)/NOPR
 Fld_0
  Typ_Lab
  Prm_[COVAL] [PSDFRQ]  Table of Cospectral Values vs Frequencies
Cmd_)*CSET,101,102
 Fld_0
  Typ_Lab
  Prm_Identify the two PSD tables being correlated
 Fld_2
  Prm_    1st PSD table number
  Typ_INT
 Fld_3
  Prm_    2nd PSD table number
  Typ_INT
Cmd_)/GO
Cal_Fnc_COVAL1
:E END
:! 
:N Fnc_COVAL1
:S   3723,   203,  3513
:T Command
:C )! Fnc_COVAL1
:C )/NOPR
:C )*GET,_z1,CPAR,101
:C )*GET,_z2,CPAR,102
:C )/GO
:D Table of Cospectral Values vs Frequencies
:P (FULL_ANS)
:H Hlp_UI_coval
Cmd_)/NOPR
Cmd_)*CSET,1,4
 Fld_0
  Typ_Lab
  Prm_[COVAL] [PSDFRQ]  Table of Cospectral Values vs Frequencies
 Fld_0
  Typ_Lab
  Prm_                  for PSD Table Numbers %(I)_z1% and %(I)_z2%
Fld_0
Typ_Sep
 Fld_0
  Typ_Lab
  Prm_    Enter up to 50 values of       Frequency      Cospectrum
 Fld_2
  Prm_                   FREQ1, CO1
  Typ_real2
 Fld_4
  Prm_                   FREQ2, CO2
  Typ_real2
Cmd_)*CSET,5,8
 Fld_2
  Prm_                   FREQ3, CO3
  Typ_real2
 Fld_4
  Prm_                   FREQ4, CO4
  Typ_real2
Cmd_)*CSET,9,12
 Fld_2
  Prm_                   FREQ5, CO5
  Typ_real2
 Fld_4
  Prm_                   FREQ6, CO6
  Typ_real2
Cmd_)*CSET,13,16
 Fld_2
  Prm_                   FREQ7, CO7
  Typ_real2
 Fld_4
  Prm_                   FREQ8, CO8
  Typ_real2
Cmd_)*CSET,17,20
 Fld_2
  Prm_                   FREQ9, CO9
  Typ_real2
 Fld_4
  Prm_                  FREQ10, CO10
  Typ_real2
Cmd_)*CSET,21,24
 Fld_2
  Prm_                  FREQ11, CO11
  Typ_real2
 Fld_4
  Prm_                  FREQ12, CO12
  Typ_real2
Cmd_)*CSET,25,28
 Fld_2
  Prm_                  FREQ13, CO13
  Typ_real2
 Fld_4
  Prm_                  FREQ14, CO14
  Typ_real2
Cmd_)*CSET,29,32
 Fld_2
  Prm_                  FREQ15, CO15
  Typ_real2
 Fld_4
  Prm_                  FREQ16, CO16
  Typ_real2
Cmd_)*CSET,33,36
 Fld_2
  Prm_                  FREQ17, CO17
  Typ_real2
 Fld_4
  Prm_                  FREQ18, CO18
  Typ_real2
Cmd_)*CSET,37,40
 Fld_2
  Prm_                  FREQ19, CO19
  Typ_real2
 Fld_4
  Prm_                  FREQ20, CO20
  Typ_real2
Cmd_)*CSET,41,44
 Fld_2
  Prm_                  FREQ21, CO21
  Typ_real2
 Fld_4
  Prm_                  FREQ22, CO22
  Typ_real2
Cmd_)*CSET,45,48
 Fld_2
  Prm_                  FREQ23, CO23
  Typ_real2
 Fld_4
  Prm_                  FREQ24, CO24
  Typ_real2
Cmd_)*CSET,49,52
 Fld_2
  Prm_                  FREQ25, CO25
  Typ_real2
 Fld_4
  Prm_                  FREQ26, CO26
  Typ_real2
Cmd_)*CSET,53,56
 Fld_2
  Prm_                  FREQ27, CO27
  Typ_real2
 Fld_4
  Prm_                  FREQ28, CO28
  Typ_real2
Cmd_)*CSET,57,60
 Fld_2
  Prm_                  FREQ29, CO29
  Typ_real2
 Fld_4
  Prm_                  FREQ30, CO30
  Typ_real2
Cmd_)*CSET,61,64
 Fld_2
  Prm_                  FREQ31, CO31
  Typ_real2
 Fld_4
  Prm_                  FREQ32, CO32
  Typ_real2
Cmd_)*CSET,65,68
 Fld_2
  Prm_                  FREQ33, CO33
  Typ_real2
 Fld_4
  Prm_                  FREQ34, CO34
  Typ_real2
Cmd_)*CSET,69,72
 Fld_2
  Prm_                  FREQ35, CO35
  Typ_real2
 Fld_4
  Prm_                  FREQ36, CO36
  Typ_real2
Cmd_)*CSET,73,76
 Fld_2
  Prm_                  FREQ37, CO37
  Typ_real2
 Fld_4
  Prm_                  FREQ38, CO38
  Typ_real2
Cmd_)*CSET,77,80
 Fld_2
  Prm_                  FREQ39, CO39
  Typ_real2
 Fld_4
  Prm_                  FREQ40, CO40
  Typ_real2
Cmd_)*CSET,81,84
 Fld_2
  Prm_                  FREQ41, CO41
  Typ_real2
 Fld_4
  Prm_                  FREQ42, CO42
  Typ_real2
Cmd_)*CSET,85,88
 Fld_2
  Prm_                  FREQ43, CO43
  Typ_real2
 Fld_4
  Prm_                  FREQ44, CO44
  Typ_real2
Cmd_)*CSET,89,92
 Fld_2
  Prm_                  FREQ45, CO45
  Typ_real2
 Fld_4
  Prm_                  FREQ46, CO46
  Typ_real2
Cmd_)*CSET,93,96
 Fld_2
  Prm_                  FREQ47, CO47
  Typ_real2
 Fld_4
  Prm_                  FREQ48, CO48
  Typ_real2
Cmd_)*CSET,97,100
 Fld_2
  Prm_                  FREQ49, CO49
  Typ_real2
 Fld_4
  Prm_                  FREQ50, CO50
  Typ_real2
Cmd_)/GO
Cal_Fnc_COVAL2
:E END
:! 
:N Fnc_COVAL2
:S    227,   192,    28
:T Command
:P (FULL_ANS)
:C )! Fnc_COVAL2
:C )/nopr
:C )_z1=0
:C )*do,_z1,1,99,2
:C )/nopr
:C )*GET,_z9,CPAR,_z1
:C )*if,_z9,eq,0,exit
:C )*enddo
:C )/go
Inp_P
Cmd_)!
Cal_Fnc_COVAL3
:E END
:! 
:N Fnc_COVAL3
:S   3539,  1385,  2147
:T Command
:P (FULL_ANS)
:C )! Fnc_COVAL3
:C )/nopr
:C )*if,_z1,le,11,then
:C ) keyw,key1,1,key2,0,key3,0,key4,0
:C ) keyw,key5,0,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,21,then
:C ) keyw,key1,1,key2,1,key3,0,key4,0
:C ) keyw,key5,0,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,31,then
:C ) keyw,key1,1,key2,1,key3,1,key4,0
:C ) keyw,key5,0,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,41,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,0,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,51,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,0,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,61,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,0,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,71,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,1,key8,0
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,81,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,1,key8,1
:C ) keyw,key9,0,key10,0
:C )*elseif,_z1,le,91,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,1,key8,1
:C ) keyw,key9,1,key10,0
:C )*elseif,_z1,le,99,then
:C ) keyw,key1,1,key2,1,key3,1,key4,1
:C ) keyw,key5,1,key6,1,key7,1,key8,1
:C ) keyw,key9,1,key10,1
:C )*endif
:C )/go
Inp_P
Cmd_PSDFRQ
K_CM(KEY1)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(1)
 Fld_5
  Typ_Def_*CPAR(3)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(7)
 Fld_8
  Typ_Def_*CPAR(9)
Cmd_PSDFRQ
K_CM(KEY2)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(11)
 Fld_5
  Typ_Def_*CPAR(13)
 Fld_6
  Typ_Def_*CPAR(15)
 Fld_7
  Typ_Def_*CPAR(17)
 Fld_8
  Typ_Def_*CPAR(19)
Cmd_PSDFRQ
K_CM(KEY3)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(21)
 Fld_5
  Typ_Def_*CPAR(23)
 Fld_6
  Typ_Def_*CPAR(25)
 Fld_7
  Typ_Def_*CPAR(27)
 Fld_8
  Typ_Def_*CPAR(29)
Cmd_PSDFRQ
K_CM(KEY4)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(31)
 Fld_5
  Typ_Def_*CPAR(33)
 Fld_6
  Typ_Def_*CPAR(35)
 Fld_7
  Typ_Def_*CPAR(37)
 Fld_8
  Typ_Def_*CPAR(39)
Cmd_PSDFRQ
K_CM(KEY5)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(41)
 Fld_5
  Typ_Def_*CPAR(43)
 Fld_6
  Typ_Def_*CPAR(45)
 Fld_7
  Typ_Def_*CPAR(47)
 Fld_8
  Typ_Def_*CPAR(49)
Cmd_PSDFRQ
K_CM(KEY6)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(51)
 Fld_5
  Typ_Def_*CPAR(53)
 Fld_6
  Typ_Def_*CPAR(55)
 Fld_7
  Typ_Def_*CPAR(57)
 Fld_8
  Typ_Def_*CPAR(59)
Cmd_PSDFRQ
K_CM(KEY7)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(61)
 Fld_5
  Typ_Def_*CPAR(63)
 Fld_6
  Typ_Def_*CPAR(65)
 Fld_7
  Typ_Def_*CPAR(67)
 Fld_8
  Typ_Def_*CPAR(69)
Cmd_PSDFRQ
K_CM(KEY8)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(71)
 Fld_5
  Typ_Def_*CPAR(73)
 Fld_6
  Typ_Def_*CPAR(75)
 Fld_7
  Typ_Def_*CPAR(77)
 Fld_8
  Typ_Def_*CPAR(79)
Cmd_PSDFRQ
K_CM(KEY9)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(81)
 Fld_5
  Typ_Def_*CPAR(83)
 Fld_6
  Typ_Def_*CPAR(85)
 Fld_7
  Typ_Def_*CPAR(87)
 Fld_8
  Typ_Def_*CPAR(89)
Cmd_PSDFRQ
K_CM(KEY10)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(91)
 Fld_5
  Typ_Def_*CPAR(93)
 Fld_6
  Typ_Def_*CPAR(95)
 Fld_7
  Typ_Def_*CPAR(97)
 Fld_8
  Typ_Def_*CPAR(99)
Cal_Fnc_COVAL4
:E END
:! 
:N Fnc_COVAL4
:S   2211,    80,  2124
:T Command
:C )! Fnc_COVAL4
:P (FULL_ANS)
Inp_P
Cmd_COVAL
K_CM(KEY1)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(2)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(6)
 Fld_7
  Typ_Def_*CPAR(8)
 Fld_8
  Typ_Def_*CPAR(10)
Cmd_COVAL
K_CM(KEY2)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(12)
 Fld_5
  Typ_Def_*CPAR(14)
 Fld_6
  Typ_Def_*CPAR(16)
 Fld_7
  Typ_Def_*CPAR(18)
 Fld_8
  Typ_Def_*CPAR(20)
Cmd_COVAL
K_CM(KEY3)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(22)
 Fld_5
  Typ_Def_*CPAR(24)
 Fld_6
  Typ_Def_*CPAR(26)
 Fld_7
  Typ_Def_*CPAR(28)
 Fld_8
  Typ_Def_*CPAR(30)
Cmd_COVAL
K_CM(KEY4)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(32)
 Fld_5
  Typ_Def_*CPAR(34)
 Fld_6
  Typ_Def_*CPAR(36)
 Fld_7
  Typ_Def_*CPAR(38)
 Fld_8
  Typ_Def_*CPAR(40)
Cmd_COVAL
K_CM(KEY5)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(42)
 Fld_5
  Typ_Def_*CPAR(44)
 Fld_6
  Typ_Def_*CPAR(46)
 Fld_7
  Typ_Def_*CPAR(48)
 Fld_8
  Typ_Def_*CPAR(50)
Cmd_COVAL
K_CM(KEY6)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(52)
 Fld_5
  Typ_Def_*CPAR(54)
 Fld_6
  Typ_Def_*CPAR(56)
 Fld_7
  Typ_Def_*CPAR(58)
 Fld_8
  Typ_Def_*CPAR(60)
Cmd_COVAL
K_CM(KEY7)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(62)
 Fld_5
  Typ_Def_*CPAR(64)
 Fld_6
  Typ_Def_*CPAR(66)
 Fld_7
  Typ_Def_*CPAR(68)
 Fld_8
  Typ_Def_*CPAR(70)
Cmd_COVAL
K_CM(KEY8)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(72)
 Fld_5
  Typ_Def_*CPAR(74)
 Fld_6
  Typ_Def_*CPAR(76)
 Fld_7
  Typ_Def_*CPAR(78)
 Fld_8
  Typ_Def_*CPAR(80)
Cmd_COVAL
K_CM(KEY9)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(82)
 Fld_5
  Typ_Def_*CPAR(84)
 Fld_6
  Typ_Def_*CPAR(86)
 Fld_7
  Typ_Def_*CPAR(88)
 Fld_8
  Typ_Def_*CPAR(90)
Cmd_COVAL
K_CM(KEY10)
 Fld_2
  Typ_Def_*CPAR(101)
 Fld_3
  Typ_Def_*CPAR(102)
 Fld_4
  Typ_Def_*CPAR(92)
 Fld_5
  Typ_Def_*CPAR(94)
 Fld_6
  Typ_Def_*CPAR(96)
 Fld_7
  Typ_Def_*CPAR(98)
 Fld_8
  Typ_Def_*CPAR(100)
:E END
:! 
:N Fnc_CO_QD_eras
:S    441,   191,   243
:T Command
:C )! Fnc_CO_QD_eras
:A Erase Co & Quad
:D Erase Cospectral and Quadspectral Tables
:K #(PSDRANDM*NOFILTER)
:P (FULL_ANS)
:H Hlp_C_PSDFRQ
Cmd_PSDFRQ
 Fld_0
  Typ_Lab
  Prm_[PSDFRQ]  Erase Cospectral and Quadspectral Tables
 Fld_0
  Typ_Lab
  Prm_Identify the two correlated PSD tables
 Fld_2
  Prm_    1st PSD table number
  Typ_INT
 Fld_3
  Prm_    2nd PSD table number
  Typ_INT
:E END
:! 
:N Fnc_CP
:S    256,   151,    98
:T Cmd_P
:C )! Fnc_CP
:C )! Nodes for CP command below
:A Couple DOFs
:D Define Coupled DOFs
:K #(PREP7)
:H Hlp_C_CP
Inp_P
Cmd_)!
K_LN(STRUCTRL)
Cal_Fnc_CP_1a
K_LN(ELECTRIC*MAGNETIC*THERMAL*FLUID*CFD)
Cal_Fnc_CP_1b
:E END
:! 
:N Fnc_CPCYC
:S    748,   130,   611
:T Command
:C )! Fnc_CPCYC
:A Offset Nodes
:D Couple Offset Nodes
:K #(PREP7)
:H Hlp_C_CPCYC
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[CPCYC]  Define Coupled DOFs Between Offset Nodes
Cmd_CPCYC
 Fld_2
  Prm_Lab    DOF for coupled nodes
  Typ_LIS_OptionB
  LIS_All appropriate ,ALL
  LIS_*READ,DOF
 Fld_3
  Prm_TOLER  Tolerance for offset
  Typ_REAL
  Def_0.0001
 Fld_4
  Prm_KCN    Coordinate system
  Typ_INT
  Def_0
 Fld_5
  Prm_DX     Offset in X-direction
  Typ_REAL
  Def_0.0
 Fld_6
  Prm_DY     Offset in Y-direction
  Typ_REAL
  Def_0.0
 Fld_7
  Prm_DZ     Offset in Z-direction
  Typ_REAL
  Def_0.0
 Fld_8
  Prm_KNONR  Node rotations
  Typ_LIS_OptionB
  LIS_Rotate nodes    ,0
  LIS_Don't rot nodes ,1
:E END
:! 
:N Fnc_CPDELE
:S    417,   142,   268
:T Command
:C )! Fnc_CPDELE
:A Del Coupled Sets 
:D Delete Coupled DOF Sets
:K #(PREP7)
:H Hlp_C_CPDELE
Cmd_CPDELE
 Fld_0
  Typ_Lab
  Prm_[CPDELE]  Delete Coupled DOF Sets
 Fld_2
  Prm_NSET1,NSET2,NINC  Range of sets  
  Typ_INT3
  Def_Blank,Blank,Blank
 Fld_5
  Prm_Nsel  Of nodes in set, delete if
  Typ_LIS_OptionB
  LIS_Any are selected,ANY
  LIS_All are selected,ALL
:E END
:! 
:N Fnc_CPINTF
:S    422,   141,   274
:T Command
:C )! Fnc_CPINTF
:A Coincident Nodes
:D Couple Coincident Nodes
:K #(PREP7)
:H Hlp_C_CPINTF
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[CPINTF]  Define Coupled DOFs Between Coincident Nodes
Cmd_CPINTF
 Fld_2
  Prm_Lab    DOF for coupled nodes
  Typ_LIS_OptionB
  LIS_All appropriate ,ALL
  LIS_*READ,DOF
 Fld_3
  Prm_TOLER  Tolerance for coincidence
  Typ_REAL
  Def_0.0001
:E END
:! 
:N Fnc_CPLGEN
:S    776,   156,   613
:T Command
:C )! Fnc_CPLGEN
:A Gen w/Same Nodes
:D Generate Coupled DOF Sets w/Same Nodes
:K #(PREP7)
:H Hlp_C_CPLGEN
Cmd_CPLGEN
 Fld_0
  Typ_Lab
  Prm_[CPLGEN]  Generate Coupled DOF Sets w/Same Nodes
 Fld_2
  Typ_INT
  Prm_NSETF  Existing set used as base
  Def_Blank
 Fld_3
  Prm_Lab1   DOF for 1st new set
  Typ_LIS_OptionB
  LIS_*READ,DOF
 Fld_4
  Prm_Lab2   DOF for 2nd new set
  Typ_LIS_OptionB
  LIS_-none-      ," "
  LIS_*READ,DOF
 Fld_5
  Prm_Lab3   DOF for 3rd new set
  Typ_LIS_OptionB
  LIS_-none-      ," "
  LIS_*READ,DOF
 Fld_6
  Prm_Lab4   DOF for 4th new set
  Typ_LIS_OptionB
  LIS_-none-      ," "
  LIS_*READ,DOF
 Fld_7
  Prm_Lab5   DOF for 5th new set
  Typ_LIS_OptionB
  LIS_-none-      ," "
  LIS_*READ,DOF
:E END
:! 
:N Fnc_CPSGEN
:S    483,   152,   324
:T Command
:C )! Fnc_CPSGEN
:A Gen w/Same DOF
:D Generate Coupled DOF Sets w/Same DOF
:K #(PREP7)
:H Hlp_C_CPSGEN
Cmd_CPSGEN
 Fld_0
  Typ_Lab
  Prm_[CPSGEN]  Generate Coupled DOF Sets w/Same DOF
 Fld_2
  Prm_ITIME  Number of generations
  Typ_INT
  Def_2
 Fld_3
  Prm_INC    Node increment
  Typ_INT
  Def_Blank
 Fld_4
  Prm_NSET1,NSET2,NINC  Range of nodes
  Typ_INT3
 Fld_0
  Typ_Lab
  Prm_                  - to be included in new set
:E END
:! 
:N Fnc_CP_1a
:S    285,   163,   115
:T Cmd_P
:C )! Fnc_CP_1a
:C )! Nodes for CP command below
:A Cupl DOFs w/Mstr  
:D Define Coupled DOFs
:K (PREP7)
:H Hlp_C_CP
Inp_P
Cmd_)!
  Fld_4
  Typ_NODE
  Prm_[CP]  Pick or enter nodes to be coupled
  Min_1
  Cnt_s
  PFM_1
Cal_Fnc_CP_2
:E END
:! 
:N Fnc_CP_1b
:S    287,   157,   123
:T Cmd_P
:C )! Fnc_CP_1b
:C )! Nodes for CP command below
:A Couple DOFs
:D Define Coupled DOFs
:K #(PREP7)
:H Hlp_C_CP
Inp_P
Cmd_)!
  Fld_4
  Typ_NODE
  Prm_[CP]  Pick or enter nodes to be coupled
  Min_1
  Cnt_s
  PFM_1
  PCN_1
Cal_Fnc_CP_2
:E END
:! 
:N Fnc_CP_2
:S    430,   187,   236
:T Command
:C )! Fnc_CP_2
:C )! Set NSET default to blank to avoid conflict with Lab=ALL
:A Couple DOFs
:D Define Coupled DOFs
:K #(PREP7)
:H Hlp_C_CP
Cmd_CP
 Fld_0
  Typ_Lab
  Prm_[CP]  Define Set of Coupled DOFs
 Fld_2
  Prm_NSET  Set reference number
  Typ_INT
  Def_Blank
 Fld_3
  Prm_Lab   Degree-of-freedom label
  Typ_Lis_OptionB
   Lis_*READ,DOF
   Lis_ALL
 Fld_4
  Typ_Def_P51X
:E END
:! 
:N Fnc_CRPLIM
:S    579,   217,   355
:T Command
:C )! Fnc_CRPLIM
:A Creep Criterion
:D Creep Criterion
:K #(PREP7*SOLUTION)
:K #((pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL)
:P (FULL_ANS)
:H Hlp_C_CRPLIM
Inp_NoApply
Cmd_CRPLIM
 Fld_2
  Prm_[CRPLIM]  Explicit creep ratio -
  Typ_REAL
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,real,171)
 Fld_3
  Typ_Def_0
Cmd_CRPLIM
 Fld_2
  Prm_[CRPLIM]  Implicit creep ratio -
  Typ_REAL
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,real,239)
 Fld_3
  Typ_Def_1
 Fld_0
  Typ_Lab
  Prm_          - for automatic time stepping
:E END
:! 
:N Fnc_CS
:S    297,   106,   184
:T Cmd_P
:C )! Fnc_CS
:A By 3 Nodes
:D Create CS By 3 Nodes
:H Hlp_C_CS
Inp_P
Cmd_)/NOPR
Cmd_)*DEL,_z
Cmd_)*DIM,_z,,3
Cmd_)*SET,_z(1)
Fld_2
Prm_[CS]  Pick or enter 3 nodes - origin, X axis, XY plane
Typ_NODE
Min_1
Max_3
PFM_2
Rub_54
!
Cmd_)/GO
Cal_Fnc_CS2
:E END
:! 
:N Fnc_CS2
:S    642,    96,   539
:T Command
:C )! Fnc_CS2
:D Create CS By 3 Nodes
:H Hlp_C_CS
Cmd_CS
Fld_0
Typ_Lab
Prm_[CS]  Create Local CS by 3 Nodes
Fld_2
Prm_KCN  Ref number of new coord sys
Typ_INT
Def_11
Fld_3
Prm_KCS  Type of coordinate system 
Typ_LIS_OPTIONB
LIS_Cartesian      0,0
LIS_Cylindrical    1,1
LIS_Spherical      2,2
LIS_Toroidal       3,3
!
Fld_4
Typ_Def_*PAR(_z(1))
Fld_5
Typ_Def_*PAR(_z(2))
Fld_6
Typ_Def_*PAR(_z(3))
!
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Following used only for elliptical and toroidal systems
!
Fld_7
Prm_PAR1  First parameter 
Typ_REAL
Def_1.0
Fld_8
Prm_PAR2  Second parameter 
Typ_REAL
Def_1.0
:E END
:! 
:N Fnc_CSCIR
:S    473,   128,   338
:T Command
:C )! Fnc_CSCIR
:A Move Singularity
:D Move Local CS Singularity
:H Hlp_C_CSCIR
Cmd_CSCIR
Fld_0
Typ_Lab
Prm_[CSCIR]  Move Local Coordinate System Singularity
Fld_2
Typ_INT
Prm_KCN  Coordinate system ref no.
Def_11
Fld_3
Typ_Lis_OptionB
LIS_+/- 180 degrees ,0
LIS_0 (360) degrees ,1
Prm_KTHET  Theta singularity is at
Fld_4
Typ_Lis_OptionB
LIS_+/- 180 degrees ,0
LIS_0 (360) degrees ,1
Prm_KPHI   Phi singularity is at
:E END
:! 
:N Fnc_CSDELE
:S    370,   120,   243
:T Command
:C )! Fnc_CSDELE
:A Delete Local CS
:D Delete Local CS
:H Hlp_C_CSDELE
Cmd_CSDELE
Fld_0
Typ_Lab
Prm_[CSDELE]  Delete Local Coordinate System
Fld_2
Typ_INT
Prm_KCN1  Delete coord systems from
Def_11
Fld_3
Typ_INT
Prm_KCN2                         to
Def_Blank
Fld_4
Typ_INT
Prm_KCINC               in steps of
Def_1
:E END
:! 
:N Fnc_CSKP
:S    307,   114,   186
:T Cmd_P
:C )! Fnc_CSKP
:A By 3 Keypoints
:D Create CS By 3 KPs
:H Hlp_C_CSKP
Inp_P
Cmd_)/NOPR
Cmd_)*DEL,_z
Cmd_)*DIM,_z,,3
Cmd_)*SET,_z(1)
Fld_2
Prm_[CSKP]  Pick or enter 3 KPs - origin, X axis, XY plane
Typ_KEYP
Min_1
Max_3
PFM_2
Rub_54
!
Cmd_)/GO
Cal_Fnc_CSKP2
:E END
:! 
:N Fnc_CSKP2
:S    654,   100,   547
:T Command
:C )! Fnc_CSKP2
:D Create CS By 3 KPs
:H Hlp_C_CSKP
Cmd_CSKP
Fld_0
Typ_Lab
Prm_[CSKP]  Create Local CS by 3 Keypoints
Fld_2
Prm_KCN  Ref number of new coord sys
Typ_INT
Def_11
Fld_3
Prm_KCS  Type of coordinate system 
Typ_LIS_OPTIONB
LIS_Cartesian      0,0
LIS_Cylindrical    1,1
LIS_Spherical      2,2
LIS_Toroidal       3,3
!
Fld_4
Typ_Def_*PAR(_z(1))
Fld_5
Typ_Def_*PAR(_z(2))
Fld_6
Typ_Def_*PAR(_z(3))
!
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Following used only for elliptical and toroidal systems
!
Fld_7
Prm_PAR1  First parameter 
Typ_REAL
Def_1.0
Fld_8
Prm_PAR2  Second parameter 
Typ_REAL
Def_1.0
:E END
:! 
:N Fnc_CSWPLA
:S    629,   130,   492
:T Command
:C )! Fnc_CSWPLA
:A At WP Origin
:D Create Local CS at WP Origin
:H Hlp_C_CSWPLA
Cmd_CSWPLA
Fld_0
Typ_Lab
Prm_[CSWPLA]  Create Local Coord System at Working Plane Origin
!
Fld_2
Prm_KCN  Ref number of new coord sys
Typ_INT
Def_11
Fld_3
Prm_KCS  Type of coordinate system 
Typ_LIS_OPTIONB
LIS_Cartesian      0,0
LIS_Cylindrical    1,1
LIS_Spherical      2,2
LIS_Toroidal       3,3
!
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Following used only for elliptical and toroidal systems
!
Fld_4
Prm_PAR1  First parameter 
Typ_REAL
Def_1.0
Fld_5
Prm_PAR2  Second parameter 
Typ_REAL
Def_1.0
:E END
:! 
:N Fnc_CSYS
:S    284,   135,   142
:T Command
:C )! Fnc_CSYS
:A Specified Coord Sys
:D Change Active CS to Specified CS
:H Hlp_C_CSYS
Cmd_CSYS
Fld_0
Typ_Lab
Prm_[CSYS]  Change active coordinate system to specified system 
Fld_2
Typ_INT
Def_0
Prm_KCN  Coordinate system number
:E END
:! 
:N Fnc_CSecAddEdit2
:S    665,   565,    93
:T Cmd
:C )! Fnc_CSecAddEdit2
:C )/NOPR
:C )_zc3 = '    '
:C )*if,_z1,eq,0,then
:C )_z1=1
:C )*endif
:C )_z2=sectinqr(_z1,1)
:C )*if,_z2,eq,1,then
:C )*get,_zc3,csec,_z1,type
:C )*if,_zc3,ne,'CONT',then
:C )_z2=-1
:C )*endif
:C )*endif
:C )*if,_z2,eq,-1,then
:C )*create,ansuitmp
:C )*msg,ui,
:C )Section %_z1% is not a CONTACT section. Please &
:C )delete this section first via the SDELETE &
:C )command.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C )/GO
:A    Add / Edit
:D Add or Edit Pipe Section
:K #(PREP7*SOLUTION)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z2
Fld_2
Typ_Def_*PAR(_z2)
Cmd_)/GO
Cal_Fnc_CSecAddEdit3,2,NE,-1
:E END
:! 
:N Fnc_CSecAddEdit3
:S   1572,  1042,   523
:T Cmd
:C )! Fnc_CSecAddEdit3
:C )/NOPR
:C )KEYW,CSECEXIS,_z2
:C )_z11=0
:C )_z12=0
:C )_z13=0
:C )_z14=0
:C )_z15=0
:C )_z16=0
:C )_z17=0
:C )_z18=0
:C )_z19=0
:C )_z20=0
:C )_z21=0
:C )_z22=0
:C )_z31=0
:C )_zcname=''
:C )_zcsubt='SPHE'
:C )*if,_z2,eq,1,then
:C )*GET,_zcname,csec,_z1,name
:C )*GET,_zcsubt,csec,_z1,subt
:C )*GET,_z11,csec,_z1,data,1
:C )*GET,_z12,csec,_z1,data,2
:C )*GET,_z13,csec,_z1,data,3
:C )*GET,_z14,csec,_z1,data,4
:C )*GET,_z15,csec,_z1,data,5
:C )*GET,_z16,csec,_z1,data,6
:C )*GET,_z17,csec,_z1,data,7
:C )*GET,_z18,csec,_z1,data,8
:C )*GET,_z19,csec,_z1,data,9
:C )*GET,_z20,csec,_z1,data,10
:C )*endif
:C )_z3=1
:C )*if,_zcsubt,eq,'SPHE',then
:C )_z3=1
:C )*elseif,_zcsubt,eq,'CYLI',then
:C )_z3=2
:C )*elseif,_zcsubt,eq,'CIRC',then
:C )_z3=5
:C )*elseif,_zcsubt,eq,'BOLT',then
:C )_z3=6
:C )*endif
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:D Add or Edit Contact Section
:H Hlp_C_SECTYPE
:H Hlp_C_SECDATA
Inp_NoApply
Cmd_)!
 Fld_0
 K_FL(CSECEXIS)
  Typ_Lab
  Prm_[SECTYPE]  Edit Contact Section %(I)_z1%
 Fld_0
 K_FL(csecexis)
  Typ_Lab
  Prm_[SECTYPE]  Add Contact Section %(I)_z1%
 Fld_4
  Prm_          Subtype
  Typ_Lis_OptionB
  Lis_Sphere  ,1
  Lis_Cylinder,2
  Lis_Circle  ,5
  Lis_Bolt    ,6
  Def_*PAR(_z3)
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_2
  Prm_          Section Name
  Typ_CHAR
  Def_*PAR(_zcname)
Cmd_)/GO
Cal_Fnc_CSecSphere,4,eq,1,1
Cal_Fnc_CSecCylind,4,eq,2,1
Cal_Fnc_CSecCircle,4,eq,5,1
Cal_Fnc_CSecBolt,4,eq,6,1
:E End
:! 
:N Fnc_CSecBolt
:S    748,   137,   604
:T Cmd
:C )! Fnc_CSecBolt
:C )/NOPR
:C )/GO
:D Add or Edit Contact Bolt Section
:H Hlp_C_SECDATA
Inp_NoApply
Cmd_SECTYPE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_CONTACT
 Fld_4
  Typ_Def_BOLT
 Fld_5
  Typ_Def_*CPAR(1)
Cmd_SECDATA
 Fld_0
  Typ_Lab
  Prm_[SECDATA] Section Data for bolt axis
 Fld_2
  Prm_  Pitch mean diameter
  Typ_REAL
  Def_*PAR(_z11)
 Fld_3
  Prm_  Pitch distance
  Typ_REAL
  Def_*PAR(_z12)
 Fld_4
  Prm_  Half-thread angle
  Typ_REAL
  Def_*PAR(_z13)
 Fld_5
  Prm_  Number of starts
  Typ_INT
  Def_*PAR(_z14)
 Fld_6
  Prm_  First coordinate
  Typ_REAL3
  Def_*PAR(_z15),*PAR(_z16),*PAR(_z17)
 Fld_9
  Prm_  Second coordinate
  Typ_REAL3
  Def_*PAR(_z18),*PAR(_z19),*PAR(_z20)
:E END
:! 
:N Fnc_CSecCircle
:S    407,   136,   264
:C )! Fnc_CSecCircle
:C )/NOPR
:C )/GO
:D Add or Edit Contact Circle Section
:H Hlp_C_SECDATA
Inp_NoApply
Cmd_SECTYPE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_CONTACT
 Fld_4
  Typ_Def_CIRCLE
 Fld_5
  Typ_Def_*CPAR(1)
Cmd_SECDATA
 Fld_0
  Typ_Lab
  Prm_[SECDATA] Section Data for circle
 Fld_2
  Prm_  Circle center
  Typ_REAL3
  Def_*PAR(_z11),*PAR(_z12)
:E END
:! 
:N Fnc_CSecCylind
:S    526,   145,   374
:T Cmd
:C )! Fnc_CSecCylind
:C )/NOPR
:C )/GO
:D Add or Edit Contact Cylinder Section
:H Hlp_C_SECDATA
Inp_NoApply
Cmd_SECTYPE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_CONTACT
 Fld_4
  Typ_Def_CYLINDER
 Fld_5
  Typ_Def_*CPAR(1)
Cmd_SECDATA
 Fld_0
  Typ_Lab
  Prm_[SECDATA] Section Data for cylindrical axis
 Fld_2
  Prm_  First coordinate
  Typ_REAL3
  Def_*PAR(_z11),*PAR(_z12),*PAR(_z13)
 Fld_5
  Prm_  Second coordinate
  Typ_REAL3
  Def_*PAR(_z14),*PAR(_z15),*PAR(_z16)
:E END
:! 
:N Fnc_CSecSphere
:S    414,   143,   264
:T Cmd
:C )! Fnc_CSecSphere
:C )/NOPR
:C )/GO
:D Add or Edit Contact Sphere Section
:H Hlp_C_SECDATA
Inp_NoApply
Cmd_SECTYPE
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_CONTACT
 Fld_4
  Typ_Def_SPHERE
 Fld_5
  Typ_Def_*CPAR(1)
Cmd_SECDATA
 Fld_0
  Typ_Lab
  Prm_[SECDATA] Section Data
 Fld_2
  Prm_  Sphere center
  Typ_REAL3
  Def_*PAR(_z11),*PAR(_z12),*PAR(_z13)
:E END
:! 
:N Fnc_CURR2D
:S    415,   224,   184
:T Command
:C )! Fnc_CURR2D
:A    Current
:D Calculate Total Current in Conductor
:K #(POST1+RESULTS+VECTORP+ELEM2D+elem3d)
:K #((edgeflx+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_CURR2D
Inp_NoApply
Cmd_CURR2D
 Fld_0
  Typ_Lab
  Prm_[CURR2D]  This function calculates the total current in a
 Fld_0
  Typ_Lab
  Prm_          conductor for the currently selected elements.
:E END
:! 
:N Fnc_CUTCONTROL
:S    732,   211,   514
:T Command
:C )! Fnc_CUTCONTROL
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,3
:C )/GO
:A Cutback Control
:D Cutback Control
:P (FULL_ANS)
:K #(NLCNTRL)
:H Hlp_C_CUTCONTROL
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_zc(1)
 Fld_0
  Typ_Lab
  Prm_[CUTCONTROL] Cutback (or bisection) control
 Fld_2
  Prm_Physical value to limit
  Typ_LIS_OPTIONB
  LIS_Eqv plast strain,'PLSLIMIT'
  LIS_Exp creep strain,'CRPLIMIT',' ','0'
  LIS_Imp creep strain,'CRPLIMIT',' ','1'
  LIS_Incremental disp,'DSPLIMIT'
  LIS_Points per cycle,'NPOINT'
  LIS_No Iter. Pred.,'NOITERPRED','1'
  LIS_Iteration Pred.,'NOITERPRED','0'
Cmd_)*SET,_z1
 Fld_2
  Prm_Value of limit
  Typ_REAL
  Def_0
Cmd_)/GO
Cal_Fnc_CUTCONTROL_2
:E END
:! 
:N Fnc_CUTCONTROL_2
:S    539,   328,   204
:T Command
:C )! Fnc_CUTCONTROL
:C )/NOPR
:C )KEYW,NOITER,0
:C )*IF,_zc(1),EQ,'NOITERPRED',THEN
:C )KEYW,NOITER,1
:C )*ENDIF
:C )*IF,_zc(1),EQ,'NOITERPRED',THEN
:C )KEYW,NOITER,1
:C )*ENDIF
:C )/GO
:A Cutback Control
:D Cutback Control
:P (FULL_ANS)
:K #(NLCNTRL)
:H Hlp_C_CUTCONTROL
Inp_P
Cmd_CUTCONTROL
K_CM(NOITER)
 Fld_2
 Typ_Def_*PAR(_zc(1))
 Fld_3
 Typ_Def_*PAR(_zc(2))
Cmd_CUTCONTROL
K_CM(noiter)
 Fld_2
 Typ_Def_*PAR(_zc(1))
 Fld_3
 Typ_Def_*PAR(_z1)
 Fld_4
 Typ_Def_*PAR(_zc(3))
:E End
:! 
:N Fnc_CWz_CntcArFlx
:S    397,   200,   190
:T Cmd_P
:C )! Fnc_CWz_CntcArFlx
:A Contact Contact Areas
:D Select Areas for Contact
:C )/NOPR
:C )/USER
:C )APLOT
:C )/GO
:K #(PREP7)
:H Hlp_UI_Cz_PCt3D
Inp_P
Cmd_)/NOPR
Cmd_)ASEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_AREA
  Prm_Pick or enter areas defining the contact surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)CM,_CONTACT,AREA
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_CntcKpFlx
:S    412,   208,   197
:T Cmd_P
:C )! Fnc_CWz_CntcKpFlx
:A Contact Contact Keypoints
:C )/NOPR
:C )/USER
:C )KPLOT
:C )/GO
:D Select Keypoints for Contact
:K #(PREP7)
:H Hlp_UI_Cz_PCt2D
Inp_P
Cmd_)/NOPR
Cmd_)KSEL
 Fld_2
  Typ_DEF_S
 Fld_5
 Fld_2
  Typ_KP
  Prm_Pick or enter keypoints defining the contact surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)CM,_CONTACT,KP
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_CntcLn3DFlx
:S    408,   204,   197
:T Cmd_P
:C )! Fnc_CWz_CntcLn3DFlx
:A Contact Contact Lines
:C )/NOPR
:C )/USER
:C )LPLOT
:C )/GO
:D Select Lines for Contact
:K #(PREP7)
:H Hlp_UI_Cz_PCt3D
Inp_P
Cmd_)/NOPR
Cmd_)LSEL
 Fld_2
  Typ_DEF_S
 Fld_5
 Fld_2
  Typ_LINE
  Prm_Pick or enter lines defining the contact surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)CM,_CONTACT,LINE
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_CntcLnFlx
:S    404,   200,   197
:T Cmd_P
:C )! Fnc_CWz_CntcLnFlx
:A Contact Contact Lines
:C )/NOPR
:C )/USER
:C )LPLOT
:C )/GO
:D Select Lines for Contact
:K #(PREP7)
:H Hlp_UI_Cz_PCt2D
Inp_P
Cmd_)/NOPR
Cmd_)LSEL
 Fld_2
  Typ_DEF_S
 Fld_5
 Fld_2
  Typ_LINE
  Prm_Pick or enter lines defining the contact surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)CM,_CONTACT,LINE
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_CntcNdFlx
:S    397,   200,   190
:T Cmd_P
:C )! Fnc_CWz_CntcNdFlx
:A Contact Surface Nodes
:C )/NOPR
:C )/USER
:C )NPLOT
:C )/GO
:D Select Nodes for Contact
:K #(PREP7)
:H Hlp_UI_Cz_PCt2D
Inp_P
Cmd_)/NOPR
Cmd_)NSEL
 Fld_2
  Typ_DEF_R
 Fld_5
  Typ_NODE
  Prm_Pick or enter nodes defining the contact surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)CM,_CONTACT,NODE
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_CntcVlFlx
:S    422,   209,   206
:T Cmd_P
:C )! Fnc_CWz_CntcVlFlx
:A Contact Contact Bodies
:D Select Bodies for Contact (Area)
:C )/NOPR
:C )/USER
:C )APLOT
:C )/GO
:K #(PREP7)
:H Hlp_UI_Cz_PCt2D
Inp_P
Cmd_)/NOPR
Cmd_)ASEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_AREA
  Prm_Pick or enter bodies defining the contact surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)LSEL,S,EXT
Cmd_CM,_CONTACT,LINE
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_CntcVolFlx
:S    426,   213,   206
:T Cmd_P
:C )! Fnc_CWz_CntcVolFlx
:A Contact Contact Bodies
:D Select Bodies for Contact (Volume)
:C )/NOPR
:C )/USER
:C )VPLOT
:C )/GO
:K #(PREP7)
:H Hlp_UI_Cz_PCt3D
Inp_P
Cmd_)/NOPR
Cmd_)VSEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_VOLU
  Prm_Pick or enter bodies defining the contact surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)ASEL,S,EXT
Cmd_CM,_CONTACT,AREA
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_DelePair
:S    382,   108,   267
:T Command
:A Delete Pair
:D Delete Contact Pair
:K #(CNTCELEM)
! Exclude_from_paths
Cmd_CWZDELE
  Fld_0
   Prm_DELETE TARGET/CONTACT ELEMENTS IN A CONTACT PAIR
   Typ_Lab
  Fld_2
   Prm_ Contact Pair Real Set Id
   Typ_Lis_OptionB
   Lis_*READ,REAL
  Fld_3
   Prm_ Delete Real Set
   Typ_Logi,No,Yes
   Def_1
Cmd_)/GO
Cal_REFRESH
:E END
:! 
:N Fnc_CWz_Entry
:S    221,   121,    80
:T Cmd
:C )! Fnc_CWz_Entry
:A Contact Pair
:D Entry point for Contact Pair View
Inp_P
! Use the external feature of ANSYS to use euidl
Cmd_)~eui,'euidl::contact::Interface'
:E END
:! 
:N Fnc_CWz_EntryOld
:S   1393,  1298,    88
:T Cmd
:C )! Fnc_CWz_EntryOld
:A Contact Wizard
:D Entry point for Contact Wizard
:C )/NOPR
:C )! Check to determine if all lines are meshed.
:C )_z1=lsinqr(0,14)
:C )*IF,_z1,GT,0,THEN  !{
:C )*DEL,_l1
:C )*DEL,_l2
:C )*DIM,_l1,,_z1
:C )*DIM,_l2,,_z1
:C )*GET,_z2,COMMON,,errcom,,int,6   ! Get the value of /NERR
:C )/NERR,0
:C )*VGET,_l1(1),LINE,1,ATTR,NNOD
:C )*VGET,_l2(1),LINE,1,LSEL
:C )/NERR,_z2
:C )KEYW,CWZLNMSH,1
:C )*DO,_z3,1,_z1,1 !{
:C )*IF,_l1(_z3),EQ,0,THEN !{
:C )*IF,_l2(_z3),NE,0,THEN !{
:C )KEYW,CWZLNMSH,0
:C )*EXIT
:C )*ENDIF !}
:C )*ENDIF !}
:C )*ENDDO !}
:C )*DEL,_l1
:C )*DEL,_l2
:C )*ENDIF !}
:C )! Check to determine if all areas are meshed.
:C )_z1=arinqr(0,14)
:C )*IF,_z1,GT,0,THEN  !{
:C )*DEL,_a1
:C )*DEL,_a2
:C )*DIM,_a1,,_z1
:C )*DIM,_a2,,_z1
:C )*GET,_z2,COMMON,,D3COM2,,INT,31  ! Get the value of /UIS,MSGPOP
:C )*GET,_z2,COMMON,,errcom,,int,6   ! Get the value of /NERR
:C )/NERR,0
:C )*VGET,_a1(1),AREA,1,ATTR,NNOD
:C )*VGET,_a2(1),AREA,1,ASEL
:C )/NERR,_z2
:C )KEYW,CWZARMSH,1
:C )*DO,_z3,1,_z1,1 !{
:C )*IF,_a1(_z3),EQ,0,THEN !{
:C )*IF,_a2(_z3),NE,0,THEN !{
:C )KEYW,CWZARMSH,0
:C )*EXIT
:C )*ENDIF !}
:C )*ENDIF !}
:C )*ENDDO !}
:C )*DEL,_a1
:C )*DEL,_a2
:C )*ENDIF !}
:C )/GO
:K #((nolnmesh|noareamesh)|noelems)
Inp_P
! Use the external feature of ANSYS to use euidl
Cmd_)~eui,'euidl::contactWizard'
:E END
:! 
:N Fnc_CWz_FlipArea
:S   1199,   154,  1038
:T Cmd_P
:C )! Fnc_CWz_FlipArea
:A   of Areas
:D Reverse Target/Contact Normals
:K #(CNTCELEM)
:H Hlp_C_ESURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
! Exclude_from_paths
Cmd_ASEL
 Fld_5
  Prm_[ESURF]  Pick or enter areas to reverse
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_YLN,LINE
! Exclude_from_paths
Cmd_CM,_YEL,ELEM
! Exclude_from_paths
Cmd_CM,_YND,NODE
! Exclude_from_paths
Cmd_LSLA,S,1
! Exclude_from_paths
Cmd_NSLA,S,1
! Exclude_from_paths
Cmd_ESLN,S,1
! Exclude_from_paths
Cmd_ESEL,R,ENAME,,169,174
K_CM(CWZTARG+CWZCNTC)
! Exclude_from_paths
Cmd_ESEL,R,ENAME,,169,170
K_CM(CWZTARG+cwzcntc)
! Exclude_from_paths
Cmd_ESEL,R,ENAME,,171,174
K_CM(cwztarg+CWZCNTC)
! Exclude_from_paths
Cmd_ESEL,R,REAL,,_REALID
Cmd_)/GO
! Exclude_from_paths
Cmd_ESURF,,REVERSE
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMSEL,S,_YLN
! Exclude_from_paths
Cmd_CMSEL,S,_YEL
! Exclude_from_paths
Cmd_CMSEL,S,_YND
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_YLN
! Exclude_from_paths
Cmd_CMDELE,_YEL
! Exclude_from_paths
Cmd_CMDELE,_YND
! Exclude_from_paths
Cmd_/REPLOT
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_FlipElem
:S    571,   157,   407
:T Cmd_P
:C )! Fnc_CWz_FlipElem
:A   of Elements
:D Reverse Target/Contact Normals
:K #(CNTCELEM)
:H Hlp_C_ESURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_ELMCM,ELEM
! Exclude_from_paths
Cmd_ESEL
 Fld_2
  Typ_Def_S
 Fld_5
  Prm_Pick or enter target/contact elements to be reversed
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  Sel_s
Cmd_)/GO
! Exclude_from_paths
Cmd_ESURF,,REVERSE
! Exclude_from_paths
Cmd_/REPLOT
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_ELMCM
! Exclude_from_paths
Cmd_CMDELE,_ELMCM
Cmd_)EPLOT
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_FlipLine
:S   1052,   154,   891
:T Cmd_P
:C )! Fnc_CWz_FlipLine
:A   of Lines
:D Reverse Target/Contact Normals
:K #(CNTCELEM)
:H Hlp_C_ESURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
! Exclude_from_paths
Cmd_LSEL
 Fld_5
  Prm_[ESURF]  Pick or enter lines to reverse
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_YEL,ELEM
! Exclude_from_paths
Cmd_CM,_YND,NODE
! Exclude_from_paths
Cmd_NSLL,S,1
! Exclude_from_paths
Cmd_ESLN,S,1
! Exclude_from_paths
Cmd_ESEL,R,ENAME,,169,174
K_CM(CWZTARG&CWZCNTC)
! Exclude_from_paths
Cmd_ESEL,R,ENAME,,169,170
K_CM(CWZTARG&cwzcntc)
! Exclude_from_paths
Cmd_ESEL,R,ENAME,,171,174
K_CM(cwztarg&CWZCNTC)
! Exclude_from_paths
Cmd_ESEL,R,REAL,,_REALID
Cmd_)/GO
! Exclude_from_paths
Cmd_ESURF,,REVERSE
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
! Exclude_from_paths
Cmd_CMSEL,S,_YEL
! Exclude_from_paths
Cmd_CMSEL,S,_YND
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_YEL
! Exclude_from_paths
Cmd_CMDELE,_YND
! Exclude_from_paths
Cmd_/REPLOT
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_NodePick
:S    401,    93,   301
:T Cmd_P
:C )! Fnc_CWz_NodePick
:D Select Nodes 
Inp_P
Cmd_)/NOPR
Cmd_CM,_NODECM,NODE
Cmd_NSEL
 Fld_2
  Typ_Def_S
 Fld_5
  Prm_Pick or enter external nodes for the component
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  Sel_D
Cmd_CM
 Fld_2
  Typ_Def_*PAR(_zc(1))
 Fld_3
  Typ_Def_NODE
Cmd_CMSEL,S,_NODECM
Cmd_CMDELE,_NODECM
Cmd_)*DEL,_zc
Cmd_)/GO
Cal_REFRESH
:E END
:! 
:N Fnc_CWz_PiloKP
:S    393,   199,   187
:T Cmd_P
:C )! Fnc_CWz_PiloKP
:A Pilot Node Definition
:C )/NOPR
:C )/USER
:C )KPLOT
:C )/GO
:D Select Keypoint for Pilot Node
:K #(PREP7)
:H Hlp_UI_Cz_PILO
Inp_P
Cmd_)/NOPR
Cmd_)KSEL
 Fld_2
  Typ_DEF_S
 Fld_5
  Typ_KEYP
  Prm_Pick or enter one keypoint defining the pilot node
  Min_1
  Cnt_1
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)CM,_PILO,KP
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_PiloND
:S    387,   195,   185
:T Cmd_P
:C )! Fnc_CWz_PiloND
:A Pilot Node Definition
:C )/NOPR
:C )/USER
:C )NPLOT
:C )/GO
:D Select Node for Pilot Node
:K #(PREP7)
:H Hlp_UI_Cz_PILO
Inp_P
Cmd_)/NOPR
Cmd_)NSEL
 Fld_2
  Typ_DEF_S
 Fld_5
  Typ_NODE
  Prm_Pick or enter one node defining the pilot node
  Min_1
  Cnt_1
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)CM,_PILO,NODE
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_PiloWP
:S    298,   164,   127
:T Cmd_P
:C )! Fnc_CWz_PiloWP
:A Pilot Node Definition
:D Select WP location for Pilot Node
:K #(PREP7)
:H Hlp_UI_Cz_PILO
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_x(1)
 Fld_2
  Prm_Pick or enter a location in active WP
  Typ_XYZ
  Min_1
  Pwr_1
  Cnt_1
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_RevNrmLb
:S    131,   111,    13
:T Cmd_N
:C )! Fnc_CWz_FlpNrmLb
:A -Reverse Normal-
:K #(CNTCELEM)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_CWz_TargArFlx
:S    393,   198,   188
:T Cmd_P
:C )! Fnc_CWz_TargArFlx
:A Contact Target Areas
:D Select Areas for Target
:C )/NOPR
:C )/USER
:C )APLOT
:C )/GO
:K #(PREP7)
:H Hlp_UI_Cz_PTg3D
Inp_P
Cmd_)/NOPR
Cmd_)ASEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_AREA
  Prm_Pick or enter areas defining the target surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)CM,_TARGET,AREA
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_TargArRgd
:S    393,   198,   188
:T Cmd_P
:C )! Fnc_CWz_TargArRgd
:A Contact Target Areas
:D Select Areas for Target
:C )/NOPR
:C )/USER
:C )APLOT
:C )/GO
:K #(PREP7)
:H Hlp_UI_Cz_PTg3D
Inp_P
Cmd_)/NOPR
Cmd_)ASEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_AREA
  Prm_Pick or enter areas defining the target surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)CM,_TARGET,AREA
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_TargLnFlx
:S    393,   198,   188
:T Cmd_P
:C )! Fnc_CWz_TargLnFlx
:A Contact Target Lines
:D Select Lines for Target
:C )/NOPR
:C )/USER
:C )LPLOT
:C )/GO
:K #(PREP7)
:H Hlp_UI_Cz_PTg2D
Inp_P
Cmd_)/NOPR
Cmd_)LSEL
 Fld_2
  Typ_DEF_S
 Fld_5
  Typ_LINE
  Prm_Pick or enter lines defining the target surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)CM,_TARGET,LINE
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_TargLnRgd
:S    384,   189,   188
:T Cmd_P
:C )! Fnc_CWz_TargLnRgd
:A Through KPs
:D Select Lines for Target
:C )/NOPR
:C )/USER
:C )LPLOT
:C )/GO
:K #(PREP7)
:H Hlp_UI_Cz_PTg2D
Inp_P
Cmd_)/NOPR
Cmd_)LSEL
 Fld_2
  Typ_DEF_S
 Fld_5
  Typ_LINE
  Prm_Pick or enter lines defining the target surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)CM,_TARGET,LINE
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_TargNdFlx
:S    393,   198,   188
:T Cmd_P
:C )! Fnc_CWz_TargNdFlx
:A Contact Target Nodes
:C )/NOPR
:C )/USER
:C )NPLOT
:C )/GO
:D Select Nodes for Target
:K #(PREP7)
:H Hlp_UI_Cz_PTg2D
Inp_P
Cmd_)/NOPR
Cmd_)NSEL
 Fld_2
  Typ_DEF_R
 Fld_5
  Typ_NODE
  Prm_Pick or enter nodes defining the target surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)CM,_TARGET,NODE
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_TargVlFlx
:S    414,   203,   204
:T Cmd_P
:C )! Fnc_CWz_TargVlFlx
:A Contact Target Body
:D Select body for Target (Area)
:C )/NOPR
:C )/USER
:C )APLOT
:C )/GO
:K #(PREP7)
:H Hlp_UI_Cz_PTg2D
Inp_P
Cmd_)/NOPR
Cmd_)ASEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_AREA
  Prm_Pick or enter bodies defining the target surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)LSEL,S,EXT
Cmd_CM,_TARGET,LINE
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_TargVlRgd
:S    414,   203,   204
:T Cmd_P
:C )! Fnc_CWz_TargVlRgd
:A Contact Target Body (Area)
:D Select Body for Target
:C )/NOPR
:C )/USER
:C )APLOT
:C )/GO
:K #(PREP7)
:H Hlp_UI_Cz_PTg2D
Inp_P
Cmd_)/NOPR
Cmd_)ASEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_AREA
  Prm_Pick or enter bodies defining the target surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)LSEL,S,EXT
Cmd_CM,_TARGET,LINE
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_TargVolFlx
:S    419,   208,   204
:T Cmd_P
:C )! Fnc_CWz_TargVolFlx
:A Contact Target Body 
:D Select body for Target (Volume)
:C )/NOPR
:C )/USER
:C )VPLOT
:C )/GO
:K #(PREP7)
:H Hlp_UI_Cz_PTg3D
Inp_P
Cmd_)/NOPR
Cmd_)VSEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_VOLU
  Prm_Pick or enter bodies defining the target surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)ASEL,S,EXT
Cmd_CM,_TARGET,AREA
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_TargVolRgd
:S    418,   207,   204
:T Cmd_P
:C )! Fnc_CWz_TargVolRgd
:A Contact Target Body
:D Select Body for Target (Volume)
:C )/NOPR
:C )/USER
:C )VPLOT
:C )/GO
:K #(PREP7)
:H Hlp_UI_Cz_PTg3D
Inp_P
Cmd_)/NOPR
Cmd_)VSEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_VOLU
  Prm_Pick or enter bodies defining the target surface
  Min_1
  Cnt_s
  Pwr_1
  Pfm_1
  Pcn_1
Cmd_)ASEL,S,EXT
Cmd_CM,_TARGET,AREA
Cmd_)/GO
:E END
:! 
:N Fnc_CWz_ViewPair
:S    149,   108,    34
:T Command
:A View and Edit
:D View Contact Pair
:K #(CNTCELEM)
Inp_P
Cmd_)~eui,'euidl::viewPair'
:E END
:! 
:N Fnc_CYCEXPAND_01
:S    230,   151,    72
:T Cmd
:C )!Fnc_CYCEXPAND_01
:A Cyc Expansion
:D Cyclic Symmetry Expansion
:K (lsdyna)
:P (FULL_ANS*PROFS)
Inp_P
Cmd_/CYCEXPAND
!Fld_2
 !Typ_Def_*CPAR(1)
Fld_3
  Typ_Def_*CPAR(2)
:E END
:! 
:N Fnc_CYCEXPAND_05
:S    706,   171,   528
:T Cmd
:C )!Fnc_CYCEXPAND_05
:A Cyc Expansion
:D Cyclic Symmetry Expansion
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_/CYCEXPAND
Inp_NoApply
Cmd_/CYCEXPAND
 Fld_0
  Prm_[/CYCEXPAND] Cyclic Analysis Expansion
  Typ_Lab
 Fld_2
  Prm_ WN  Window Number
  Typ_Lis_OptionB
  Lis_Window 1, 1
  Lis_Window 2, 2
  Lis_Window 3, 3
  Lis_Window 4, 4
  Lis_Window 5, 5
  Def_1
 Fld_3
  Typ_Def_AMOUNT
 Fld_4
  Prm_ Expansion parameter
  Typ_LIS_RADIOB
  LIS_No. of Sector Repetitions ,NREPEAT
  LIS_Expansion Angle (Degrees) ,ANGLE
  Def_NREPEAT
 Fld_5
  Prm_ Parameter value
  Typ_Int
 Fld_0
  Prm_   (either Number of Repetitions or Total Expansion Angle)
  Typ_Lab
:E END
:! 
:N Fnc_CYCEXPAND_06
:S    425,   171,   247
:T Cmd
:C )!Fnc_CYCEXPAND_06
:A Cyc Expansion
:D Cyclic Symmetry Expansion
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_/CYCEXPAND
Inp_NoApply
Cmd_/CYCEXPAND
 Fld_0
  Prm_[/CYCEXPAND] Cyclic Analysis Expansion
  Typ_Lab
! Fld_2
!  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_WHAT
 Fld_4
  Typ_Def_'
  Dlm_~
 Fld_5
  Prm_ Name of Component to Expand
  Typ_Char,8
 Dlm_~
 Fld_6
  Typ_Def_'
:E END
:! 
:N Fnc_CYCEXPAND_07
:S    498,   258,   233
:T Cmd
:C )!Fnc_CYCEXPAND_07
:C )/NOPR
:C )*GET,_z1,common,,cycsym_com,,int,189 ! Edge averaging option key
:C )/GO
:A Cyc Expansion
:D Cyclic Symmetry Expansion
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_/CYCEXPAND
Inp_NoApply
Cmd_/CYCEXPAND
 Fld_0
  Prm_[/CYCEXPAND] Cyclic Analysis Expansion
  Typ_Lab
! Fld_2
!  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_EDGE
 Fld_4
  Prm_Sector Edge Display Key
  Typ_LIS_RadioB
  LIS_OFF,0
  LIS_ON,1 
  Def_*Par(_z1)
:E END
:! 
:N Fnc_CYCEXPAND_08
:S    363,   171,   185
:T Cmd
:C )!Fnc_CYCEXPAND_08
:A Cyc Expansion
:D Cyclic Symmetry Expansion
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_/CYCEXPAND
Inp_NoApply
Cmd_/CYCEXPAND
 Fld_0
  Prm_[/CYCEXPAND] Cyclic Analysis Expansion
  Typ_Lab
! Fld_2
!  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_PHASEANG
 Fld_4
  Prm_ Phase Angle Shift
  Typ_Int
:E END
:! 
:N Fnc_CYCGEN
:S    923,   194,   722
:T Cmd
:A Cyclic Sector
:D Create Second Sector for Modal Cyclic Symmetry
:K (lsdyna)
:K #(((PREP7)+(igesfail))+cyclic)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCGEN
Inp_NoApply
Cmd_CYCGEN
 Fld_0
  Typ_Lab
  Prm_[CYCGEN]  Generate second sector for Modal Cyclic Symmetry
 Fld_0
  Typ_Lab
  Prm_  
 Fld_0
  Typ_Lab
  Prm_  This function generates a second sector overlaid on the basic
 Fld_0
  Typ_Lab
  Prm_  sector for modal analysis with cyclical symmetry.  Note that
 Fld_0
  Typ_Lab
  Prm_  boundary conditions and loads must be applied to BOTH
 Fld_0
  Typ_Lab
  Prm_  sectors before solution.  For prestressed modal analysis, a
 Fld_0
  Typ_Lab
  Prm_  static analysis must be performed first using both sectors.       
 Fld_0
  Typ_Lab
  Prm_  
 Fld_0
  Typ_Lab
  Prm_  ** Press OK to create second sector using selected elements **
! Exclude_from_paths
Cmd_EPLOT
Cal_Fnc_CheckCyc
:E END
:! 
:N Fnc_CYCLICAUTO
:S    324,   284,    33
:T Cmd
:A    Auto Defined
:D Automatic Cyclic Sector Definition
:C )!Fnc_CYCLICAUTO
:C )/nopr
:C )_ztitle='Automati'
:C )_ztitl2='c'
:C )keyw,autocyc,1
:C )/go
:K (lsdyna)
:K #(((PREP7)+(igesfail))+cycgen)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCLIC
Inp_P
Cmd_)!
Cal_Fnc_CYCLIC_exec
:E END
:! 
:N Fnc_CYCLICMAN
:S    332,   292,    33
:T Cmd
:A    User Defined
:D User-specified Cyclic Sector Definition
:C )!Fnc_CYCLICMAN
:C )/nopr
:C )_ztitle='User-spe'
:C )_ztitl2='cified'
:C )keyw,autocyc,0
:C )/go
:K (lsdyna)
:K #(((PREP7)+(igesfail))+cycgen)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCLIC
Inp_P
Cmd_)!
Cal_Fnc_CYCLIC_exec
:E END
:! 
:N Fnc_CYCLICOFF
:S    410,   206,   197
:T Command
:C )! Fnc_CYCLICOFF
:A Reset (OFF)
:D Turn Off Cyclic Symmetry Settings
:H Hlp_C_CYCLIC
:K (lsdyna)
:K #(((PREP7)+(igesfail))+cycgen)
:P (FULL_ANS*PROFS)
Inp_NoApply
Cmd_CYCLIC,OFF
Fld_0
 Typ_Lab
  Prm_[CYCLIC,OFF]  This function resets a cyclic symmetry model
Fld_0
 Typ_Lab
  Prm_                 to its original non-cyclic status.
Cal_Fnc_CheckCyc
:E END
:! 
:N Fnc_CYCLICSTAT
:S    229,   198,    24
:T Cmd_N
:C )! Fnc_CYCLICSTAT
:A    Status
:D List Cyclic Symmetry Status
:H Hlp_C_CYCLIC
:K (lsdyna)
:K #(((PREP7)+(igesfail))+cycgen)
:P (FULL_ANS*PROFS)
Inp_P
Cmd_CYCLIC,STATUS
:E END
:! 
:N Fnc_CYCLICUNDO
:S    560,   208,   345
:T Command
:C )! Fnc_CYCLICUNDO
:A Del Dupl Sector
:D Remove Duplicate (Slave) Cyclic Sector
:H Hlp_C_CYCLIC
:K (lsdyna)
:K #((PREP7)+(igesfail))
:P (FULL_ANS*PROFS)
Inp_NoApply
Cmd_CYCLIC,UNDOUBLE
Fld_0
 Typ_Lab
  Prm_[CYCLIC,UNDO]  This function deletes the duplicate sector 
Fld_0
 Typ_Lab
  Prm_        used during solution for a cyclic symmetry model.
Fld_0
 Typ_Lab
  Prm_        Note- you will have to SOLVE again to review results.
Cmd_)/NOPR
Cmd_)_modcyc=0
Cmd_)KEYW,CYCGEN,0
Cmd_)/GO
Cal_Fnc_CheckCyc
:E END
:! 
:N Fnc_CYCLIC_exec
:S    860,   152,   701
:T Cmd
:A Execute cyclic
:D %_ztitle%%_ztitl2% Cyclic Sector Definition
:C )!Fnc_CYCLIC_exec
:H Hlp_C_CYCLIC
Inp_NoApply
Cmd_CYCLIC
 Fld_0
  Typ_Lab
  Prm_[CYCLIC]  Cyclic Sector Definition
 Fld_5
  Typ_Def_'
  Dlm_~
 Fld_6
  Prm_NAME Root name of components
  Typ_Char,8
  Def_CYCLIC
 Dlm_~
 Fld_7
  Typ_Def_'
 Fld_0
  Typ_Sep
  K_FL(autocyc)
 Fld_2
  K_FL(autocyc)
  Prm_NSECTOR No. of sectors
  Typ_Int
  Def_*GET(common,,cycsym_com,,int,2)
 Fld_3
  K_FL(autocyc)
  Prm_ANGLE Sector Angle
  Typ_Real
  Def_*GET(common,,cycsym_com,,real,2)
 Fld_4
  K_FL(autocyc)
  Prm_KCN Cyclic Coordinate System
  Typ_Int
  Def_*GET(common,,cycsym_com,,int,5)
 Fld_0
  K_FL(autocyc)
  Typ_Sep
 Fld_8
  K_FL(autocyc)
  Prm_USRCOMP  Number edge comp. pairs
  Typ_Int
  Def_*GET(common,,cycsym_com,,int,179)
Cal_Fnc_CheckCyc
:E END
:! 
:N Fnc_CYCOPT
:S    948,   197,   744
:T Cmd
:C )! Fnc_CYCOPT
:A Cyclic Options
:D Cyclic Analysis Options
:K (lsdyna)
:K (PREP7*(SOLUTION+CYCLIC))
:K #(CYCLIC)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCOPT
Inp_NoApply
Cmd_)!
 Fld_0
  Prm_[CYCOPT] Options for Cyclic Symmetry Analysis
  Typ_Lab
 Fld_2
  Prm_OPTION  Action to be performed
  Typ_LIS_RADIOB
  LIS_Default         ,1
  LIS_Status          ,2
  LIS_Harmonic Index  ,3
  LIS_Noncyclic load on sector ,4
  LIS_Combine harmonc index ,5
  LIS_CE/Coupling DOF ,6
  LIS_Tolerance/Move  ,7
  LIS_User Rotation   ,8
  LIS_Parameter name reuse,9
  LIS_Face tolerance  ,10
 P_LN(FREQSW)
  LIS_Variational tech,11
  Def_2
Cal_Fnc_CYCOPT_01,2,eq,1
Cal_Fnc_CYCOPT_02,2,eq,2
Cal_Fnc_CYCOPT_03,2,eq,3
Cal_Fnc_CYCOPT_04,2,eq,4
Cal_Fnc_CYCOPT_05,2,eq,5
Cal_Fnc_CYCOPT_06,2,eq,6
Cal_Fnc_CYCOPT_07,2,eq,7
Cal_Fnc_CYCOPT_08,2,eq,8
Cal_Fnc_CYCOPT_09,2,eq,9
Cal_Fnc_CYCOPT_10,2,eq,10
Cal_Fnc_CYCOPT_11,2,eq,11
:E END
:! 
:N Fnc_CYCOPT_01
:S    188,   144,    37
:T Cmd
:C )!Fnc_CYCOPT_01
:A Cyclic Options
:D Cyclic Analysis Options
:K (lsdyna)
:P (FULL_ANS*PROFS)
Inp_P
Cmd_CYCOPT,DEFAULT
Cal_REFRESH
:E END
:! 
:N Fnc_CYCOPT_02
:S    165,   122,    36
:T Cmd
:C )!Fnc_CYCOPT_02
:K (lsdyna)
:K #((PREP7*SOLUTION))
:P (FULL_ANS*PROFS)
Inp_P
Cmd_CYCOPT,STATUS
Cal_REFRESH
:E END
:! 
:N Fnc_CYCOPT_03
:S   1187,   309,   871
:T Cmd
:C )! Fnc_CYCOPT_03
:C )/NOPR
:C )*get,_keycyc,common,,cycsym_com,,real,27
:C )*if,_keycyc,gt,0,then
:C )keyw,CYCEMAG,1
:C )*else
:C )keyw,CYCEMAG,0
:C )*endif
:C )/GO
:A Cyclic Options
:D Cyclic Analysis Options
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCOPT
Inp_P
Inp_NoApply
Cmd_CYCOPT
 Fld_0
  Prm_[CYCOPT] Options for Cyclic Symmetry Analysis
  Typ_Lab
 Fld_2
  Typ_Def_HINDEX
 Fld_3
  K_FL(cycemag)
  Prm_VALUE1 First Harmonic Index
  Typ_Int
 Fld_3
  K_FL(CYCEMAG)
  Prm_VALUE1 Harmonic Index
  Typ_Lis_RadioB
   Lis_EVEN,EVEN
   LIS_ODD,ODD
   Def_EVEN
 Fld_4
  K_FL(cycemag)
  Prm_VALUE2 Last Harmonic Index
  Typ_Int
 Fld_5
  K_FL(cycemag)
  Prm_VALUE3 Increment on Harmonic Index
  Typ_Int
 Fld_6
  Prm_VALUE4 Clear Harmonic Index Set
  Typ_Int
 Fld_0
  Typ_Lab
  K_LN(cycemag)
  Prm_       NOTE: Use a value of -1 to remove harmonic indices VALUE1 to
  K_LN(CYCEMAG)
  Prm_       NOTE: Use a value of -1 to remove harmonic index, VALUE1,
 Fld_0
  Typ_Lab
  K_LN(cycemag)
  Prm_             VALUE2 in steps of VALUE3 from the harmonic index set
  K_LN(CYCEMAG)
  Prm_             from the harmonic index set
Cal_REFRESH
:E END
:! 
:N Fnc_CYCOPT_04
:S    285,   161,   117
:T Cmd
:C )! Fnc_CYCOPT_04
:A Cyclic Options
:D Cyclic Analysis Options
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCOPT
Inp_NoApply
Cmd_CYCOPT
 Fld_2
  Typ_Def_LDSECT
Fld_3
  Prm_[CYCOPT]Noncyclic load on sector number
  Typ_Int
  Def_0
:E END
:! 
:N Fnc_CYCOPT_05
:S    334,   161,   166
:T Cmd
:C )! Fnc_CYCOPT_05
:A Cyclic Options
:D Cyclic Analysis Options
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCOPT
Inp_NoApply
Cmd_CYCOPT
 Fld_2
  Typ_Def_COMBINE
Fld_3
  Prm_[CYCOPT] Combine harmonic index solutions
  Typ_Lis_OptionB
  Lis_OFF       ,0
  Lis_ON        ,1
  Def_0
:E END
:! 
:N Fnc_CYCOPT_06
:S    664,   184,   473
:T Cmd
:C )! Fnc_CYCOPT_06
:A Cyclic Options
:D Cyclic Analysis Options
:K (lsdyna)
:K #((PREP7*SOLUTION))
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCOPT
Inp_NoApply
Cmd_CYCOPT
 Fld_0
  Prm_[CYCOPT] Options for Cyclic Symmetry Analysis
  Typ_Lab
 Fld_2
  Typ_Def_DOF
 Fld_3
  Prm_VALUE1 Component pair ID
  Typ_Int
 Fld_4
  Prm_VALUE2 1st CE/Coupling DOF
  Typ_Int
 Fld_5
  Prm_VALUE3 2nd CE/Coupling DOF
  Typ_Int
 Fld_6
  Prm_VALUE4 3rd CE/Coupling DOF
  Typ_Int
 Fld_7
  Prm_VALUE5 4th CE/Coupling DOF
  Typ_Int
 Fld_8
  Prm_VALUE6 5th CE/Coupling DOF
  Typ_Int
 Fld_9
  Prm_VALUE7 6th CE/Coupling DOF
  Typ_Int
Cal_REFRESH
:E END
:! 
:N Fnc_CYCOPT_07
:S    538,   161,   370
:T Cmd
:C )! Fnc_CYCOPT_07
:A Cyclic Options
:D Cyclic Analysis Options
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCOPT
Inp_NoApply
Cmd_CYCOPT
 Fld_0
  Prm_[CYCOPT] Options for Cyclic Symmetry Analysis
  Typ_Lab
 Fld_2
  Typ_Def_TOLER
 Fld_3
  Prm_Tolerance
  Typ_REAL
  Def_*GET(common,,cycsym_com,,real,22)
Cmd_CYCOPT
 Fld_2
  Typ_Def_MOVE
 Fld_3
  Prm_Move edge nodes
  Typ_Lis_OptionB
  Lis_None       ,0
  Lis_HIGH       ,1
  Lis_LOW        ,-1
  Def_*GET(common,,cycsym_com,,int,154)
:E END
:! 
:N Fnc_CYCOPT_08
:S    571,   347,   217
:T Cmd
:C )! Fnc_CYCOPT_08
:C )/NOPR
:C )*GET,_z1,common,,cycsym_com,,int,181
:C )*DEL,_zc
:C )*DIM,_zc,char,5
:C )_zc(1)='OFF '
:C )_zc(2)='ON  '
:C )_zc(3)='LOW '
:C )_zc(4)='HIGH'
:C )_zc(5)=_zc(_z1+1)
:C )/GO
:A Cyclic Options
:D Cyclic Analysis Options
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCOPT
Inp_NoApply
Cmd_CYCOPT
 Fld_2
  Typ_Def_USRROT
 Fld_3
  Prm_[CYCOPT] User rotation of nodes
  Typ_Lis_OptionB
  Lis_Off        ,OFF
  Lis_On         ,ON
  Lis_HIGH       ,HIGH
  Lis_LOW        ,LOW
  Def_*PAR(_zc(5))
:E END
:! 
:N Fnc_CYCOPT_09
:S    376,   161,   208
:T Cmd
:C )! Fnc_CYCOPT_09
:A Cyclic Options
:D Cyclic Analysis Options
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCOPT
Inp_NoApply
Cmd_CYCOPT
 Fld_2
  Typ_Def_BCMULT
 Fld_0
  Typ_Lab
  Prm_[CYCOPT,BCMULT] Cyclic Analysis Options
 Fld_3
  Prm_ Reuse sector array names?
  Typ_Logi,No,Yes
  Def_*GET(common,,cycsym_com,,int,174)
:E END
:! 
:N Fnc_CYCOPT_10
:S    380,   161,   212
:T Cmd
:C )! Fnc_CYCOPT_10
:A Cyclic Options
:D Cyclic Analysis Options
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCOPT
Inp_NoApply
Cmd_CYCOPT
 Fld_2
  Typ_Def_FACETOL
 Fld_0
  Typ_Lab
  Prm_[CYCOPT] Inclusion of surface nodes into basic sector
 Fld_3
  Prm_            Tolerance 
  Typ_REAL
  Def_*GET(common,,cycsym_com,,real,36)
:E END
:! 
:N Fnc_CYCOPT_11
:S    660,   374,   279
:T Cmd
:C )! Fnc_CYCOPT_11
:C )/NOPR
:C )_z1=0
:C )*GET,_z2,common,,soptcm,,int,133 ! cadoe antype
:C )*GET,_z3,common,,soptcm,,int,135 ! cadoe restart key
:C )*if,_z2,eq,2,then
:C )*if,_z3,eq,0,then
:C )_z1=1
:C )*endif
:C )*endif
:C )/GO
:A Cyclic Options
:D Cyclic Analysis Options
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCOPT
Inp_NoApply
Cmd_CYCOPT
 Fld_2
  Typ_Def_VTSOL
 Fld_0
  Typ_Lab
  Prm_[CYCOPT,VTSOL] Cyclic Analysis Options
 Fld_3
  Prm_ Employ Variational Technology?
  Typ_Logi,No,Yes
  Def_*Par(_z1)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_NOTE: Requires a High Performance Computing License
:E END
:! 
:N Fnc_CYCSOL
:S   1394,   506,   881
:T Cmd
:A Modal Cyclic Sym
:D Modal Cyclic Symmetry
:C )/nopr
:C )*DEL,_zc
:C )*DIM,_zc,char,4
:C )*IF,_z1,EQ,2,THEN
:C )_zc(1)='Block La'
:C )_zc(2)='nczos'   
:C )*ELSE
:C )_zc(1)='Subspace'
:C )_zc(2)=' '   
:C )*ENDIF
:C )*GET,_z1,common,,stepcm,,int,2 ! Incl prestress effects (y or n)
:C )*IF,_z1,EQ,-1,THEN
:C )_zc(3)='Prestres'
:C )_zc(4)='s'
:C )*ELSE
:C )_zc(3)='NO Prest'
:C )_zc(4)='ress'
:C )*ENDIF
:C )/go
:K (lsdyna)
:P (FULL_ANS*PROFS)
:H Hlp_C_CYCSOL
Inp_NoApply
Cmd_CYCSOL
 Fld_0
  Typ_Lab
  Prm_[CYCSOL]  Modal Analysis with Cyclic Symmetry
 Fld_2
  Prm_HIMIN,HIMAX Harmonic Index Range
  Typ_Int2
 Fld_3
  Prm_NSECTOR No. of sectors
  Typ_Int
 Fld_4
  Typ_Def_'
  Dlm_~
 Fld_5
  Prm_LOW   LOW Node component name
  Typ_Char,8
  Dlm_~
 Fld_6
  Typ_Def_'
 Fld_7
  Typ_Def_'
  Dlm_~
 Fld_8
  Prm_HIGH  HIGH Node component name
  Typ_Char,8
  Dlm_~
 Fld_9
  Typ_Def_'
 Fld_0
  Typ_Lab
  Prm_      (optional)
 Fld_10
  Typ_Real
  Prm_TOL  Tolerance to match nodes
 Fld_0
  Typ_Sep
 Fld_11
  Typ_Logi,No,Yes
  Prm_KMOVE  Move nodes to match pairs   
 Fld_12
  Typ_Logi,No,Yes
  Prm_KPAIRS Print matching node pairs
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_ NOTE: A modal solution will be performed using %_zc(1)%%_zc(2)% 
 Fld_0
  Typ_Lab
  Prm_       mode extraction method and %_zc(3)%%_zc(4)% effects.
Cmd_)KEYW,CYCSOL,1
Cal_REFRESH
:E End
:! 
:N Fnc_CYL4
:S    370,   133,   230
:T Cmd_P
:C )! Fnc_CYL4
:A Solid Cylinder
:D Solid Cylinder
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_CYL4
Inp_P
Cmd_CYL4
 Fld_0
  Typ_XYZ_WP
  Prm_[CYL4]  Pick 3 WP locations -- center, radius, and Z depth
  Min_3
  Max_3
  Rub_103
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_8
  Typ_Def_*PICK(4)
:E END
:! 
:N Fnc_CYL4_2d
:S    330,   131,   192
:T Cmd_P
:C )! Fnc_CYL4_2d
:A Solid Circle
:D Solid Circular Area
:K #(PREP7)
:H Hlp_C_CYL4
Inp_P
Cmd_CYL4
 Fld_0
  Typ_XYZ_WP
  Prm_[CYL4]  Pick 2 WP locations -- center and radius
  Min_2
  Max_2
  Rub_3
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
:E END
:! 
:N Fnc_CYL4_holl_2d
:S    380,   138,   235
:T Cmd_P
:C )! Fnc_CYL4_holl_2d
:A Annulus
:D Annular Circular Area
:K #(PREP7)
:H Hlp_C_CYL4
Inp_P
Cmd_CYL4
 Fld_0
  Typ_XYZ_WP
  Prm_[CYL4]  Pick 3 WP locations -- center, inner radius, outer radius
  Min_3
  Max_3
  Rub_4
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
:E END
:! 
:N Fnc_CYL4_hollow
:S    421,   149,   265
:T Cmd_P
:C )! Fnc_CYL4_hollow
:A Hollow Cylinder
:D Hollow Cylinder
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_CYL4
Inp_P
Cmd_CYL4
 Fld_0
  Typ_XYZ_WP
  Prm_[CYL4] Pick 4 WP locations -- center, inner rad, outer rad, Z depth
  Min_4
  Max_4
  Rub_104
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_6
  Typ_Def_*PICK(4)
 Fld_8
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_CYL4_iges
:S    382,   145,   230
:T Cmd_P
:C )! Fnc_CYL4_iges
:A    Solid Cylindr
:D Solid Cylinder
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_CYL4
Inp_P
Cmd_CYL4
 Fld_0
  Typ_XYZ_WP
  Prm_[CYL4]  Pick 3 WP locations -- center, radius, and Z depth
  Min_3
  Max_3
  Rub_103
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_8
  Typ_Def_*PICK(4)
:E END
:! 
:N Fnc_CYL4_part
:S    478,   147,   324
:T Cmd_P
:C )! Fnc_CYL4_part
:A Partial Cylinder
:D Partial Cylinder
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_CYL4
Inp_P
Cmd_CYL4
 Fld_0
  Typ_XYZ_WP
  Prm_[CYL4] Pick 4 WP locs -- center, inner rad/theta, outer rad/theta, Z depth
  Min_4
  Max_4
  Rub_105
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
 Fld_6
  Typ_Def_*PICK(5)
 Fld_7
  Typ_Def_*PICK(6)
 Fld_8
  Typ_Def_*PICK(7)
:E END
:! 
:N Fnc_CYL4_part_2d
:S    446,   147,   292
:T Cmd_P
:C )! Fnc_CYL4_part_2d
:A Partial Annulus
:D Part Annular Circ Area
:K #(PREP7)
:H Hlp_C_CYL4
Inp_P
Cmd_CYL4
 Fld_0
  Typ_XYZ_WP
  Prm_[CYL4] Pick 3 WP locations -- center, inner rad/theta, outer rad/theta
  Min_3
  Max_3
  Rub_5
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
 Fld_6
  Typ_Def_*PICK(5)
 Fld_7
  Typ_Def_*PICK(6)
:E END
:! 
:N Fnc_CYL5
:S    411,   141,   263
:T Cmd_P
:C )! Fnc_CYL5
:A By End Pts & Z
:D Cylinder by End Pts, Z
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_CYL5
Inp_P
Cmd_CYL5
 Fld_0
  Typ_XYZ_WP
  Prm_[CYL5]  Pick 3 WP locations -- end points on diameter and Z depth
  Min_3
  Max_3
  Rub_107
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
 Fld_6
  Typ_Def_*PICK(5)
:E END
:! 
:N Fnc_CYL5_2d
:S    369,   133,   229
:T Cmd_P
:C )! Fnc_CYL5_2d
:A By End Points
:D Circ Area by End Pts
:K #(PREP7)
:H Hlp_C_CYL5
Inp_P
Cmd_CYL5
 Fld_0
  Typ_XYZ_WP
  Prm_[CYL5]  Pick 2 WP locations -- the end points on a diameter
  Min_2
  Max_2
  Rub_7
 Fld_2
  Typ_Def_*PICK(1)
 Fld_3
  Typ_Def_*PICK(2)
 Fld_4
  Typ_Def_*PICK(3)
 Fld_5
  Typ_Def_*PICK(4)
:E END
:! 
:N Fnc_CYLIND
:S    550,   155,   388
:T Command
:C )! Fnc_CYLIND
:A By Dimensions
:D Create Cylinder by Dimensions
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_CYLIND
Cmd_CYLIND
 Fld_0
  Typ_Lab
  Prm_[CYLIND]  Create Cylinder by Dimensions
 Fld_2
  Typ_Real
  Prm_RAD1    Outer radius
  Def_Blank
 Fld_3
  Typ_Real
  Prm_RAD2    Optional inner radius
  Def_Blank
 Fld_4
  Typ_REAL2
  Prm_Z1,Z2   Z-coordinates
  Def_0,Blank
 Fld_6
  Typ_Real
  Prm_THETA1  Starting angle (degrees)
  Def_0
 Fld_7
  Typ_Real
  Prm_THETA2  Ending angle (degrees)
  Def_360
:E End
:! 
:N Fnc_CheckCyc
:S    327,   295,    25
:T Cmd
:C )!Fnc_CheckCyc
:K (lsdyna)
:C )/nopr
:C )*GET,_z1,common,,cycsym_com,,int,2
:C )KEYWD,CYCLIC,0
:C )KEYWD,CYCGEN,0
:C )*IF,_z1,gt,1,then
:C )KEYWD,CYCLIC,1
:C )*ELSEIF,_modcyc,eq,1,then
:C )KEYWD,CYCGEN,1
:C )*ENDIF
:C )/gopr
:P (FULL_ANS*PROFS)
Inp_P
Cmd_)!
Cal_REFRESH
:E END
:! 
:N Fnc_CirBD_1
:S   1201,   564,   630
:T Cmd 
:A Hidden
:C )! Fnc_CirBD_1
:C )! --- Variable Definitions -------
:C )! 
:C )! Picked Pt            X,Y,Z 
:C )!    1        _z(13),_z(14),_z(15)
:C )!    2        _z(16),_z(17),_z(18)
:C )!    3        _z(19),_z(20),_z(21)
:C )!    4        _z(22),_z(23),_z(24)
:C )! --------------------------------
:C )/NOPR
:C )KEYW,ELEM14,0
:C )KEYW,ELEM21,0
:C )KEYW,ELEM39,0
:C )KEYW,ELE125,0
:C )KEYW,ELE126,0
:C )KEYW,ELE200,0
:C )KEYW,FOURTHPT,0
:C )*IF,_z(3),EQ,8,THEN
:C )KEYW,FOURTHPT,1
:C )*ENDIF
:C )/GO
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*set,_z(13)
 Fld_2
  Typ_Def_*FPIK(2,1)
Cmd_)*set,_z(14)
 Fld_2
  Typ_Def_*FPIK(2,2)
Cmd_)*set,_z(15)
 Fld_2
  Typ_Def_*FPIK(2,3)
Cmd_)*set,_z(16)
 Fld_2
  Typ_Def_*FPIK(2,4)
Cmd_)*set,_z(17)
 Fld_2
  Typ_Def_*FPIK(2,5)
Cmd_)*set,_z(18)
 Fld_2
  Typ_Def_*FPIK(2,6)
Cmd_)*set,_z(19)
 Fld_2
  Typ_Def_*FPIK(2,7)
Cmd_)*set,_z(20)
 Fld_2
  Typ_Def_*FPIK(2,8)
Cmd_)*set,_z(21)
 Fld_2
  Typ_Def_*FPIK(2,9)
Cmd_)*set,_z(22)
K_CM(FOURTHPT)
 Fld_2
  Typ_Def_*FPIK(2,10)
Cmd_)*set,_z(23)
K_CM(FOURTHPT)
 Fld_2
  Typ_Def_*FPIK(2,11)
Cmd_)*set,_z(24)
K_CM(FOURTHPT)
 Fld_2
  Typ_Def_*FPIK(2,12)
Cmd_)/GO
Cal_Fnc_CirBD_2
:E END
:! 
:N Fnc_CirBD_2
:S   4465,  3253,  1205
:T Command
:A Hidden
:C )! Fnc_CirBD_2
:C )/nopr
:C )! ---- Variable Definitions -----
:C )! _z1  - node i
:C )! _z2    node j
:C )! _z3    delx
:C )! _z4    dely
:C )! _z5    ang1
:C )! _z6    ang2
:C )! _z7    angdif 
:C )! _z8    leng
:C )! _z9    h 
:C )!    
:C )! keywords - cirn1, cirn2
:C )!            (existing node flag)
:C )! --------------------------------
:C )keyw,cirn1,0
:C )keyw,cirn2,0
:C )*get,_z(1),etyp,,num,max
:C )_z(1) = _z(1) + 1                    ! et num
:C )*afun,deg
:C )_z3 = _z(16)-_z(13)
:C )_z4 = _z(17)-_z(14) 
:C )*if,_z3,ne,0,then
:C )_z5 = ATAN(ABS(_z4)/ABS(_z3))
:C )*else
:C )_z5 = 90.0
:C )*endif
:C )*if,_z3,ge,0.0,then
:C )*if,_z4,lt,0.0,then
:C )_z5 = 360.0 - _z5
:C )*endif
:C )*elseif,_z4,ge,0.0
:C )_z5 = 180.0 - _z5
:C )*else
:C )_z5 = _z5 + 180.0
:C )*endif
:C )!
:C )_z3 = _z(19)-_z(13)
:C )_z4 = _z(20)-_z(14)
:C )*if,_z3,ne,0,then
:C )_z6 = ATAN(ABS(_z4)/ABS(_z3))
:C )*else
:C )_z6 = 90.0
:C )*endif
:C )*if,_z3,ge,0.0,then
:C )*if,_z4,lt,0.0,then
:C )_z6 = 360.0 - _z6
:C )*endif
:C )*elseif,_z4,ge,0.0
:C )_z6 = 180.0 - _z6
:C )*else
:C )_z6 = _z6 + 180.0
:C )*endif
:C )!
:C )*if,_z6,lt,_z5,then
:C )_z6 = _z6 + 360.0
:C )*endif
:C )_z7 = _z6 - _z5
:C )_z8 = SQRT((_z(13)-_z(19))**2+(_z(14)-_z(20))**2)
:C )_z9=SIN(_z7)*_z8
:C )*if,_z7,ge,180,then
:C )_z9=-ABS(_z9)
:C )*else
:C )_z9=ABS(_z9)
:C )*endif
:C )_z(6)=_z9
:C )!
:C )! --- Duplicate Node Logic ------------  
:C )_z(7)=ndinqr(0,14)+1          ! Node i
:C )_z(8)=_z(7)+1                 !      j
:C )_z(9)=_z(8)+1                 !      k
:C )_z(10)=_z(9)+1                !      l
:C )! -- Retrieve Nearest Node 
:C )_z(31)=node(_z(13),_z(14),_z(15))
:C )_z(32)=node(_z(16),_z(17),_z(18))
:C )_z(33)=node(_z(19),_z(20),_z(21))
:C )_z(34)=node(_z(22),_z(23),_z(24))
:C )! -- Check Nodal Coordinates
:C )_z(35)=0
:C )*if,_z(31),gt,0,then
:C )*if,_z(13),eq,nx(_z(31)),then
:C )_z(35)=_z(35)+1
:C )*endif
:C )*if,_z(14),eq,ny(_z(31)),then
:C )_z(35)=_z(35)+1
:C )*endif
:C )*if,_z(15),eq,nz(_z(31)),then
:C )_z(35)=_z(35)+1
:C )*endif
:C )*endif
:C )_z(36)=0
:C )*if,_z(32),gt,0,then
:C )*if,_z(16),eq,nx(_z(32)),then
:C )_z(36)=_z(36)+1
:C )*endif
:C )*if,_z(17),eq,ny(_z(32)),then
:C )_z(36)=_z(36)+1
:C )*endif
:C )*if,_z(18),eq,nz(_z(32)),then
:C )_z(36)=_z(36)+1
:C )*endif 
:C )*endif
:C )_z(37)=0
:C )*if,_z(33),gt,0,then
:C )*if,_z(19),eq,nx(_z(33)),then
:C )_z(37)=_z(37)+1
:C )*endif
:C )*if,_z(20),eq,ny(_z(33)),then
:C )_z(37)=_z(37)+1
:C )*endif
:C )*if,_z(21),eq,nz(_z(33)),then
:C )_z(37)=_z(37)+1
:C )*endif 
:C )*endif
:C )_z(38)=0
:C )*if,_z(34),gt,0,then
:C )*if,_z(22),eq,nx(_z(34)),then
:C )_z(38)=_z(38)+1
:C )*endif
:C )*if,_z(23),eq,ny(_z(34)),then
:C )_z(38)=_z(38)+1
:C )*endif
:C )*if,_z(24),eq,nz(_z(34)),then
:C )_z(38)=_z(38)+1
:C )*endif 
:C )*endif
:C )! -- Reassign Nodes   
:C )*if,_z(35),eq,3,then
:C )_z(7)=_z(31)
:C )_z(8)=ndinqr(0,14)+1         
:C )_z(9)=_z(8)+1
:C )_z(10)=_z(10)-1
:C )keyw,cirn1,1
:C )*endif
:C )*if,_z(36),eq,3,then
:C )_z(8)=_z(32)
:C )_z(9)=ndinqr(0,14)+1
:C )_z(10)=_z(9)+1
:C )keyw,cirn2,1
:C )*endif
:C )*get,_z(30),active,,imme
:C *GET,_zz2,active,,csys
:C *GET,_zz3,active,,dsys
:C CSYS,0
:C DSYS,0
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_N
 K_CM(cirn1)
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(13))
 Fld_4
  Typ_Def_*PAR(_z(14))
 Fld_5
  Typ_Def_*PAR(_z(15))
! Exclude_from_paths
Cmd_N
 K_CM(cirn2)
 Fld_2
  Typ_Def_*PAR(_z(8))
 Fld_3
  Typ_Def_*PAR(_z(16))
 Fld_4
  Typ_Def_*PAR(_z(17))
 Fld_5
  Typ_Def_*PAR(_z(18))
! Exclude_from_paths
Cmd_CSYS,_zz2
! Exclude_from_paths
Cmd_DSYS,_zz3
Cmd_)/NOPR
Cmd_)immed,_z(30)
Cmd_)/GO
! Exclude_from_paths
Cmd_RMOD
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_Def_15
 Fld_4 
  Typ_Def_*PAR(_z(6))
 Fld_5
  Typ_Def_*PAR(_z(2))
! Exclude_from_paths
Cmd_ET
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  K_FL(piezo)
  Typ_Def_CIRCU124
 Fld_3
  K_FL(PIEZO)
  Typ_Def_CIRCU94
 Fld_4
  Typ_Def_*PAR(_z(3))
 Fld_5
  Typ_Def_*PAR(_z(4))
! Exclude_from_paths
Cmd_TYPE
 Fld_2
  Typ_Def_*PAR(_z(1))
! Exclude_from_paths
Cmd_REAL
 Fld_2
  Typ_Def_*PAR(_z(5))
! Exclude_from_paths
Cmd_MAT,1
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(3))   
Cal_Fnc_CirBD_R0, 2,le,3
Cal_Fnc_CirBD_R4, 2,eq,4
Cal_Fnc_CirBD_R5, 2,eq,5
Cal_Fnc_CirBD_R6, 2,eq,6
Cal_Fnc_CirBD_R7, 2,eq,7
Cal_Fnc_CirBD_R8, 2,eq,8
Cal_Fnc_CirBD_R9, 2,eq,9
Cal_Fnc_CirBD_R10,2,eq,10
Cal_Fnc_CirBD_R11,2,eq,11
Cal_Fnc_CirBD_R12,2,eq,12
:E END
:! 
:N Fnc_CirBD_3
:S    227,   213,     7
:T Cmd
:A Hidden (Change Element Color)
:C )! Fnc_CirBD_3
:C )/nopr
:C )*get,_z(30),graph,,number
:C )/pnum,mat,1
:C )/num,1
:C )eplot
:C )/num,_z(30)
:C )/go  
:P (ELECMAG)
Cmd_)!
:E END
:! 
:N Fnc_CirBD_MA
:S    273,   150,   116
:T Cmd
:A Hidden
:C )! Fnc_CirBD_MA
:C )/nopr
:C )*get,_z(30),active,,imme
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_E
 Fld_2
  Typ_Def_*PAR(_z(7))
Cmd_)/nopr
Cmd_)immed,_z(30)
Cmd_)/GO
Cal_Fnc_CirBD_3
:E END
:! 
:N Fnc_CirBD_R0
:S    510,   151,   352
:T Cmd
:A Hidden 
:C )! Fnc_CirBD_R0
:C )/nopr
:C )*get,_z(30),active,,imme
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_E
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
! Exclude_from_paths
Cmd_CP
 K_CM(ELE200)
 Fld_2
  Typ_Def_*PAR(_z(2))
 Fld_3
  Typ_Def_VOLT
 Fld_4
  Typ_Def_*PAR(_z(7))
 Fld_5
  Typ_Def_*PAR(_z(8))
Cmd_CPMERG,VOLT
 K_CM(ELE200)
Cmd_)/PBC,ALL
Cmd_)/nopr
Cmd_)immed,_z(30)
Cmd_)/GO            
Cal_Fnc_CirBD_3
:E END
:! 
:N Fnc_CirBD_R10
:S    857,   400,   450
:T Cmd
:A Hidden
:C )! Fnc_CirBD_R10
:C )/nopr 
:C )_z(19)= ciroffx(_z(7),_z(8),_z(6))   ! K Node Coord X 
:C )_z(20)= ciroffy(_z(7),_z(8),_z(6))   !              Y
:C )_z(21)= ciroffz(_z(7),_z(8),_z(6))   !              Z
:C )*get,_z(30),active,,imme
:C *GET,_zz2,active,,csys
:C *GET,_zz3,active,,dsys
:C CSYS,0
:C DSYS,0
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_N
 Fld_2
  Typ_Def_*PAR(_z(9))
 Fld_3
  Typ_Def_*PAR(_z(19))
 Fld_4
  Typ_Def_*PAR(_z(20))
 Fld_5
  Typ_Def_*PAR(_z(21))
! Exclude_from_paths
Cmd_E
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_z(9))
 Fld_5
  Typ_Def_*PAR(_z(39))
 Fld_6
  Typ_Def_*PAR(_z(40))
! Exclude_from_paths
Cmd_CSYS,_zz2
! Exclude_from_paths
Cmd_DSYS,_zz3
Cmd_)/NOPR
Cmd_)immed,_z(30)
Cmd_)/GO
Cal_Fnc_CirBD_3
:E END
:! 
:N Fnc_CirBD_R11
:S   1040,   551,   482
:T Cmd
:A Hidden
:C )! Fnc_CirBD_R11
:C )/nopr 
:C )_z(19)= ciroffx(_z(7),_z(8),_z(6))   ! K Node Coord X 
:C )_z(20)= ciroffy(_z(7),_z(8),_z(6))   !              Y
:C )_z(21)= ciroffz(_z(7),_z(8),_z(6))   !              Z
:C )_z(10)=nelem(_z(25),1)               ! L      
:C )_z(11)=nelem(_z(25),2)               ! M     
:C )_z(12)=nelem(_z(25),3)               ! N     
:C )*get,_z(30),active,,imme
:C *GET,_zz2,active,,csys
:C *GET,_zz3,active,,dsys
:C CSYS,0
:C DSYS,0
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_N
 Fld_2
  Typ_Def_*PAR(_z(9))
 Fld_3
  Typ_Def_*PAR(_z(19))
 Fld_4
  Typ_Def_*PAR(_z(20))
 Fld_5
  Typ_Def_*PAR(_z(21))
! Exclude_from_paths
Cmd_E
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_z(9))
 Fld_5
  Typ_Def_*PAR(_z(10))
 Fld_6
  Typ_Def_*PAR(_z(11))
 Fld_7
  Typ_Def_*PAR(_z(12))
! Exclude_from_paths
Cmd_CSYS,_zz2
! Exclude_from_paths
Cmd_DSYS,_zz3
Cmd_)/NOPR
Cmd_)immed,_z(30)
Cmd_)/GO  
Cal_Fnc_CirBD_3
:E END
:! 
:N Fnc_CirBD_R12
:S    890,   473,   410
:T Cmd
:A Hidden
:C )! Fnc_CirBD_R12
:C )/nopr
:C )_z(19)= ciroffx(_z(7),_z(8),_z(6))   ! K Node Coord X 
:C )_z(20)= ciroffy(_z(7),_z(8),_z(6))   !              Y
:C )_z(21)= ciroffz(_z(7),_z(8),_z(6))   !              Z
:C )_z(10)=nelem(_z(25),1)               ! L 
:C )_z(11)=nelem(_z(25),2)               ! M     
:C )_z(12)=nelem(_z(25),3)               ! N     
:C )*get,_z(30),active,,imme
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_N
 Fld_2
  Typ_Def_*PAR(_z(9))
 Fld_3
  Typ_Def_*PAR(_z(19))
 Fld_4
  Typ_Def_*PAR(_z(20))
 Fld_5
  Typ_Def_*PAR(_z(21))
! Exclude_from_paths
Cmd_E
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_z(9))
 Fld_5
  Typ_Def_*PAR(_z(10))
 Fld_6
  Typ_Def_*PAR(_z(11))
 Fld_7
  Typ_Def_*PAR(_z(12))
Cmd_)/NOPR
Cmd_)immed,_z(30)
Cmd_)/GO
Cal_Fnc_CirBD_3
:E END
:! 
:N Fnc_CirBD_R4
:S    653,   326,   320
:T Cmd
:A Hidden 
:C )! Fnc_CirBD_R4
:C )/nopr
:C )_z(19)= ciroffx(_z(7),_z(8),_z(6))   ! K Node Coord X 
:C )_z(20)= ciroffy(_z(7),_z(8),_z(6))   !              Y
:C )_z(21)= ciroffz(_z(7),_z(8),_z(6))   !              Z
:C )*get,_z(30),active,,imme
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_N
 Fld_2
  Typ_Def_*PAR(_z(9))
 Fld_3
  Typ_Def_*PAR(_z(19))
 Fld_4
  Typ_Def_*PAR(_z(20))
 Fld_5
  Typ_Def_*PAR(_z(21))
! Exclude_from_paths
Cmd_E
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_z(9))
Cmd_)/NOPR
Cmd_)immed,_z(30)
Cmd_)/GO
Cal_Fnc_CirBD_3
:E END
:! 
:N Fnc_CirBD_R5
:S    333,   151,   175
:T Cmd
:A Hidden 
:C )! Fnc_CirBD_R5
:C )/nopr
:C )*get,_z(30),active,,imme
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_E
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_z(39))
Cmd_)/NOPR
Cmd_)immed,_z(30)
Cmd_)/GO
Cal_Fnc_CirBD_3
:E END
:! 
:N Fnc_CirBD_R6
:S    333,   151,   175
:T Cmd
:A Hidden 
:C )! Fnc_CirBD_R6
:C )/nopr
:C )*get,_z(30),active,,imme
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_E
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_z(39))
Cmd_)/NOPR
Cmd_)immed,_z(30)
Cmd_)/GO
Cal_Fnc_CirBD_3
:E END
:! 
:N Fnc_CirBD_R7
:S    362,   150,   205
:T Cmd
:A Hidden
:C )! Fnc_CirBD_R7
:C )/nopr
:C )*get,_z(30),active,,imme
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_E
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_z(39))
 Fld_5
  Typ_Def_*PAR(_z(40))
Cmd_)/NOPR
Cmd_)immed,_z(30)
Cmd_)/GO
Cal_Fnc_CirBD_3
:E END
:! 
:N Fnc_CirBD_R8
:S   1064,   464,   593
:T Cmd
:D Hidden
:C )! Fnc_CirBD_R8
:C )/nopr
:C )! _z(9)=_z(8)+1
:C )! _z(10)=_z(9)+1
:C )keyw,cirn1,0
:C )keyw,cirn2,0
:C )*if,_z(37),eq,3,then
:C )_z(9)=_z(33)
:C )_Z(10)=ndinqr(0,14)+1
:C )keyw,cirn1,1
:C )*endif
:C )*if,_z(38),eq,3,then
:C )_z(10)=_z(34)
:C )keyw,cirn2,1
:C )*endif
:C )*get,_z(30),active,,imme
:C *GET,_zz2,active,,csys
:C *GET,_zz3,active,,dsys
:C CSYS,0
:C DSYS,0
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_N
 K_CM(cirn1)
 Fld_2
  Typ_Def_*PAR(_z(9))
 Fld_3
  Typ_Def_*PAR(_z(19))
 Fld_4
  Typ_Def_*PAR(_z(20))
 Fld_5
  Typ_Def_*PAR(_z(21))
! Exclude_from_paths
Cmd_N
 K_CM(cirn2)
 Fld_2
  Typ_Def_*PAR(_z(10))
 Fld_3
  Typ_Def_*PAR(_z(22))
 Fld_4
  Typ_Def_*PAR(_z(23))
 Fld_5
  Typ_Def_*PAR(_z(24))
! Exclude_from_paths
Cmd_E
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_z(9))
 Fld_5
  Typ_Def_*PAR(_z(10))
! Exclude_from_paths
Cmd_CSYS,_zz2
! Exclude_from_paths
Cmd_DSYS,_zz3
Cmd_)/NOPR
Cmd_)immed,_z(30)
Cmd_)/GO
Cal_Fnc_CirBD_3
:E END
:! 
:N Fnc_CirBD_R9
:S    363,   151,   205
:T Cmd
:A Hidden 
:C )! Fnc_CirBd_R9
:C )/nopr
:C )*get,_z(30),active,,imme
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_E
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(8))
 Fld_4
  Typ_Def_*PAR(_z(39))
 Fld_5
  Typ_Def_*PAR(_z(40))
Cmd_)/NOPR
Cmd_)immed,_z(30)
Cmd_)/GO
Cal_Fnc_CirBD_3
:E END
:! 
:N Fnc_CirBD_SF
:S    992,   809,   176
:T Cmd
:A Hidden
:C )! Fnc_CirBD_SF
:C )/nopr
:C )*del,_zv
:C )*dim,_zv,,52
:C )*get,_z(30),active,,imme
:C )immed,off
:C )!-------------------------------------------------
:C _zn8=ndinqr(0,14)
:C _zv(21)=_zn8-1
:C _zv(52)=_zn8
:C _zx8=0.5*(_z(13)+_z(16))
:C _zy8=0.5*(_z(14)+_z(17))
:C _zz8=0.5*(_z(15)+_z(18))
:C *do,_i98,22,51            ! create extra 30 nodes
:C _zn8=_zn8+1
:C N,_zn8,_zx8,_zy8,_zz8
:C _zv(_i98)=_zn8
:C *enddo
:C E,_zv(21),_zv(22),_zv(23),_zv(24),_zv(25),_zv(26),_zv(27),_zv(28)
:C EMORE,_zv(29),_zv(30),_zv(31),_zv(32),_zv(33),_zv(34),_zv(35),_zv(36)
:C EMORE,_zv(37),_zv(38),_zv(39),_zv(40),_zv(41),_zv(42),_zv(43),_zv(44)
:C EMORE,_zv(45),_zv(46),_zv(47),_zv(48),_zv(49),_zv(50),_zv(51),_zv(52)
:C )! --------------------------------
:C )/go
Inp_P
! Exclude_from_paths
Cmd_)/NOPR
Cmd_)*set,_zz2 $*set,_zz3 $*set,_zx8 $*set,_zy8 $*set,_zz8 $*set,_zn8
Cmd_)*set,_zv $*set,_i98
Cmd_)immed,_z(30)
Cmd_)/GO
Cal_Fnc_CirBD_3
:E END
:! 
:N Fnc_CirP0 
:S    243,   119,   117
:T Cmd_P
:A   Resistor
:D   Resistor
:H Hlp_G_ELE15
:C )! Fnc_CirP0
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Resistor]  Pick 3 WP locations 
  Min_3
  Mok_3
  Pwr_1
  Rub_203
Cal_Fnc_CirR0
:E END
:! 
:N Fnc_CirP1 
:S    245,   121,   117
:T Cmd_P
:A   Inductor 
:D   Inductor 
:H Hlp_G_ELE15
:C )! Fnc_CirP1
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Inductor]  Pick 3 WP locations 
  Min_3
  Mok_3
  Pwr_1
  Rub_201
Cal_Fnc_CirR1
:E END
:! 
:N Fnc_CirP10_1 
:S    274,   140,   127
:T Cmd_P
:A   Vltg Cntl VS
:D Voltage Controlled VS
:H Hlp_G_ELE15
:C )! Fnc_CirP10_1
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Vltg Cntl VS]  Pick 3 WP locations   
  Pwr_1
  Min_3
  Mok_3
  Rub_205
Cal_Fnc_CirP10_p2
:E END
:! 
:N Fnc_CirP10_p2 
:S    344,   186,   151
:T Cmd_P
:A Vltg Cntl VS
:D Voltage Controlled VS
:H Hlp_G_ELE15
:C )! Fnc_CirP10_p2
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(39)
 Fld_2
  Typ_NODE
  Prm_Pick 2 Nodes control voltage drop   
  Pfm_2
  Pwr_1
  Min_2
  Mok_2
Cmd_)/GO
Cal_Fnc_CirR10
:E END
:! 
:N Fnc_CirP11_1 
:S    277,   142,   128
:T Cmd_P
:A   Curr Cntl VS 
:D Current Controlled VS 
:H Hlp_G_ELE15
:C )! Fnc_CirP11_1
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Curr Cntl VS]  Pick 3 WP locations    
  Pwr_1
  Min_3
  Mok_3
  Rub_205
Cal_Fnc_CirP11_p2
:E END
:! 
:N Fnc_CirP11_p2 
:S    350,   188,   155
:T Cmd_P
:A   Curr Cntl VS
:D Current Controlled VS
:H Hlp_G_ELE15
:C )! Fnc_CirP11_p2
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(25)
 Fld_2
  Typ_ELEM
  Prm_Pick 1 Element for control current   
  Pfm_2
  Pwr_1
  Min_1
  Mok_1
Cmd_)/GO
Cal_Fnc_CirP11_p3
:E END
:! 
:N Fnc_CirP11_p3
:S    749,   649,    93
:T Cmd
:A Hidden 
:H Hlp_G_ELE15
:C )! Fnc_CirP11_p3
:C )/nopr
:C )*get,_z(26),elem,_z(25),attr,type
:C )*get,_z(27),etyp,_z(26),attr,kop1
:C )_z(28)=0 
:C )*if,_z(27),eq,4,then
:C )_z(28)=1 $ 
:C )*elseif,_z(27),eq,10,then
:C )_z(28)=1 
:C )*elseif,_z(27),eq,11,then
:C )_z(28)=1 
:C )*elseif,_z(27),eq,12,then
:C )_z(28)=1 
:C )*endif
:C )*if,_z(28),eq,0,then
:C )*create,ansuitmp
:C )*msg,warn,_z(27)
:C )Invalid element picked [keyopt(1)= %I]. Pick an element with CURR DOF. %/& 
:C )Valid elements options are keyopt(1)= 4, 10, 11, 12.      
:C )*end
:C )/input,ansuitmp
:C )*endif
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(28))
Cal_Fnc_CirP11_p2,2,eq,0
Cal_Fnc_CirR11,   2,eq,1
:E END
:! 
:N Fnc_CirP12_1 
:S    274,   141,   126
:T Cmd_P
:A   Curr Cntl CS 
:D Current Controlled CS
:H Hlp_G_ELE15
:C )! Fnc_CirP12_1
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Curr Cntl CS]  Pick 3 WP locations  
  Pwr_1
  Min_3
  Mok_3
  Rub_207
Cal_Fnc_CirP12_p2
:E END
:! 
:N Fnc_CirP12_p2 
:S    349,   188,   154
:T Cmd_P
:A   Curr Cntl CS
:D Current Controlled CS
:H Hlp_G_ELE15
:C )! Fnc_CirP12_p2
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(25)
 Fld_2
  Typ_ELEM
  Prm_Pick 1 Element for control current 
  Pfm_2
  Pwr_1
  Min_1
  Mok_1
Cmd_)/GO
Cal_Fnc_CirP12_p3 
:E END
:! 
:N Fnc_CirP12_p3
:S    734,   634,    93
:T Cmd
:A Hidden 
:C )! Fnc_CirP12_p3
:C )/nopr
:C )*get,_z(26),elem,_z(25),attr,type
:C )*get,_z(27),etyp,_z(26),attr,kop1
:C )_z(28)=0 
:C )*if,_z(27),eq,4,then
:C )_z(28)=1 $ 
:C )*elseif,_z(27),eq,10,then
:C )_z(28)=1 
:C )*elseif,_z(27),eq,11,then
:C )_z(28)=1 
:C )*elseif,_z(27),eq,12,then
:C )_z(28)=1 
:C )*endif
:C )*if,_z(28),eq,0,then
:C )*create,ansuitmp
:C )*msg,warn,_z(27)
:C )Invalid element picked [keyopt(1)= %I]. Pick an element with CURR DOF. %/& 
:C )Valid elements options are keyopt(1)= 4, 10, 11, 12.      
:C )*end
:C )/input,ansuitmp
:C )*endif
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(28))
Cal_Fnc_CirP12_p2,2,eq,0
Cal_Fnc_CirR12,   2,eq,1
:E END
:! 
:N Fnc_CirP2 
:S    247,   121,   119
:T Cmd_P
:A   Capacitor
:D   Capacitor
:H Hlp_G_ELE15
:C )! Fnc_CirP2
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Capacitor]  Pick 3 WP locations  
  Min_3
  Mok_3
  Pwr_1
  Rub_202
Cal_Fnc_CirR2
:E END
:! 
:N Fnc_CirP3_0 
:S    339,   197,   135
:T Cmd_P
:A Constant Amplitude
:D Constant Amplitude
:H Hlp_G_ELE15
:C )! Fnc_CirP3_0
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=3
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[ICS Constant Amplitude]  Pick 3 WP locations   
  Min_3
  Mok_3
  Pwr_1
  Rub_206
Cal_Fnc_CirR3_0
:E END
:! 
:N Fnc_CirP3_1 
:S    316,   183,   126
:T Cmd_P
:A Sinusoidal 
:D Sinusoidal 
:H Hlp_G_ELE15
:C )! Fnc_CirP3_1
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=3
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[ICS Sinusoidal]  Pick 3 WP locations  
  Min_3
  Mok_3
  Pwr_1
  Rub_206
Cal_Fnc_CirR3_1
:E END
:! 
:N Fnc_CirP3_2 
:S    306,   173,   126
:T Cmd_P
:A Pulse 
:D Pulse 
:H Hlp_G_ELE15
:C )! Fnc_CirP3_2
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=3
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[ICS Pulse Load]  Pick 3 WP locations  
  Min_3
  Mok_3
  Pwr_1
  Rub_206
Cal_Fnc_CirR3_2
:E END
:! 
:N Fnc_CirP3_3 
:S    319,   185,   127
:T Cmd_P
:A Exponential 
:D Exponential 
:H Hlp_G_ELE15
:C )! Fnc_CirP3_3
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=3
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[ICS Exponential]  Pick 3 WP locations  
  Min_3
  Mok_3
  Pwr_1
  Rub_206
Cal_Fnc_CirR3_3
:E END
:! 
:N Fnc_CirP3_4
:S    311,   178,   126
:T Cmd_P
:A Piecewise
:D Piecewise
:H Hlp_G_ELE15
:C )! Fnc_CirP3_4
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=3
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[ICS Piecewise]  Pick 3 WP locations   
  Min_3
  Mok_3
  Pwr_1
  Rub_206
Cal_Fnc_CirR3_4
:E END
:! 
:N Fnc_CirP4_0 
:S    339,   199,   133
:T Cmd_P
:A Constant Amplitude 
:D Constant Amplitude 
:H Hlp_G_ELE15
:C )! Fnc_CirP4_0
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=4
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[IVS Constant Amplitude]  Pick 3 WP locations 
  Min_3
  Mok_3
  Pwr_1
  Rub_204
Cal_Fnc_CirR3_0
:E END
:! 
:N Fnc_CirP4_1 
:S    317,   184,   126
:T Cmd_P
:A Sinusoidal 
:D Sinusoidal 
:H Hlp_G_ELE15
:C )! Fnc_CirP4_1
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=4
:C )/go 
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[IVS Sinusoidal]  Pick 3 WP locations  
  Min_3
  Mok_3
  Pwr_1
  Rub_204
Cal_Fnc_CirR3_1
:E END
:! 
:N Fnc_CirP4_2 
:S    306,   173,   126
:T Cmd_P
:A Pulse 
:D Pulse 
:H Hlp_G_ELE15
:C )! Fnc_CirP4_2
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=4
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[IVS Pulse Load]  Pick 3 WP locations  
  Min_3
  Mok_3
  Pwr_1
  Rub_204
Cal_Fnc_CirR3_2
:E END
:! 
:N Fnc_CirP4_3 
:S    317,   183,   127
:T Cmd_P
:A Exponential
:D Exponential
:H Hlp_G_ELE15
:C )! Fnc_CirP4_3
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=4
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[IVS Exponential]  Pick 3 WP locations  
  Min_3
  Mok_3
  Pwr_1
  Rub_204
Cal_Fnc_CirR3_3
:E END
:! 
:N Fnc_CirP4_4
:S    312,   178,   127
:T Cmd_P
:A Piecewise
:D Piecewise
:H Hlp_G_ELE15
:C )! Fnc_CirP4_4
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=4
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[IVS Pieceswise]  Pick 3 WP locations   
  Min_3
  Mok_3
  Pwr_1
  Rub_204
Cal_Fnc_CirR3_4
:E END
:! 
:N Fnc_CirP5_1 
:S    260,   128,   125
:T Cmd_P
:A   Strnd Coil
:D Stranded Coil
:H Hlp_G_ELE15
:C )! Fnc_CirP5_1
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Stranded Coil]  Pick 3 WP locations 
  Min_3
  Mok_3
  Pwr_1
  Rub_207
Cal_Fnc_CirP5_p2
:E END
:! 
:N Fnc_CirP5_p2 
:S    306,   177,   122
:T Cmd_P
:A   Strnd Coil
:D Stranded Coil
:H Hlp_G_ELE15
:C )! Fnc_CirP5_p2
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40 
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)*SET,_z(39)
 Fld_2
  Typ_NODE
  Prm_Pick 1 Node in Stranded Coil mesh   
  Pfm_2
  Min_1
  Mok_1
Cal_Fnc_CirR5
:E END
:! 
:N Fnc_CirP6_1 
:S    271,   139,   125
:T Cmd_P
:A   Mass Cond 2D 
:D Massive Conductor 2D 
:H Hlp_G_ELE15
:C )! Fnc_CirP6_1
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Mass Cond 2D]  Pick 3 WP locations  
  Min_3
  Mok_3
  Pwr_1
  Rub_205
Cal_Fnc_CirP6_p2
:E END
:! 
:N Fnc_CirP6_p2 
:S    327,   187,   133
:T Cmd_P
:A   Mass Cond 2D 
:D Massive Conductor 2D
:H Hlp_G_ELE15
:C )! Fnc_CirP6_p2
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )/go 
:P (ELECMAG)
Inp_P
Cmd_)*SET,_z(39)
 Fld_2
  Typ_NODE
  Prm_Pick 1 Node in Massive Conductor mesh  
  Pfm_2
  Pwr_1
  Min_1
  Mok_1
Cal_Fnc_CirR6
:E END
:! 
:N Fnc_CirP7_1 
:S    270,   138,   125
:T Cmd_P
:A   Mass Cond 3D 
:D Massive Conductor 3D
:H Hlp_G_ELE15
:C )! Fnc_CirP7_1
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Mass Cond 3D]  Pick 3 WP locations  
  Min_3
  Mok_3
  Pwr_1
  Rub_205
Cal_Fnc_CirP7_p2
:E END
:! 
:N Fnc_CirP7_p2 
:S    327,   187,   133
:T Cmd_P
:A   Mass Cond 3D 
:D Massive Conductor 3D
:H Hlp_G_ELE15
:C )! Fnc_CirP7_p2
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )/go 
:P (ELECMAG)
Inp_P
Cmd_)*SET,_z(39)
 Fld_2
  Typ_NODE
  Prm_Pick 2 Nodes in Massive Conductor mesh 
  Pfm_2
  Pwr_1
  Min_2
  Mok_2
Cal_Fnc_CirR7
:E END
:! 
:N Fnc_CirP8 
:S    260,   128,   125
:T Cmd_P
:A   Mutual Ind 
:D Mutual Inductor 
:H Hlp_G_ELE15
:C )! Fnc_CirP8
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Mutual Inductor]  Pick 4 WP locations  
  Pwr_1
  Min_4
  Mok_4
  Rub_208
Cal_Fnc_CirR8
:E END
:! 
:N Fnc_CirP9_1 
:S    272,   138,   127
:T Cmd_P
:A   Vltg Cntl CS
:D Voltage Controlled CS
:H Hlp_G_ELE15
:C )! Fnc_CirP9_1
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Vltg Cntl CS]  Pick 3 WP locations   
  Pwr_1 
  Min_3
  Mok_3
  Rub_207
Cal_Fnc_CirP9_p2
:E END
:! 
:N Fnc_CirP9_p2 
:S    346,   186,   153
:T Cmd_P
:A Vltg Cntl CS 
:D Voltage Controlled CS
:H Hlp_G_ELE15
:C )! Fnc_CirP9_p2
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )/go 
:P (ELECMAG)
Inp_P 
Cmd_)/NOPR
Cmd_)*SET,_z(39)
 Fld_2
  Typ_NODE
  Prm_Pick 2 Nodes for control voltage drop 
  Pfm_2
  Pwr_1
  Min_2
  Mok_2
Cmd_)/GO
Cal_Fnc_CirR9
:E END
:! 
:N Fnc_CirPR
:S    349,   149,   193
:T Cmd_N
:A    Elements
:D Circuit Building Setup 
:C )! Fnc_CirPR 
:C )/NOPR
:C )*DEL,_z1
:C )/GO
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_wpstyl,,,,,,,,1
Cmd_)*get,_z1,graph,,number
Cmd_)/pnum,mat,1
Cmd_)/number,0
! Exclude_from_paths
Cmd_/view,all,wp
! Exclude_from_paths
Cmd_eplot
Cmd_)/number,_z1
:E END
:! 
:N Fnc_CirPWF_1 
:S    259,   128,   124
:T Cmd_P
:A    Src Waveform
:D Select Element for Plot
:C )! Fnc_CirPWF_1
:P (ELECMAG)
Inp_P
Cmd_)*SET,_z1
 Fld_2
  Typ_ELEM
  Prm_[]  Pick 1 Element - Plot Wave Form   
  Pfm_2
  Min_1
  Mok_1
Cal_Fnc_CirPWF_2
:E END
:! 
:N Fnc_CirPWF_2 
:S    603,   352,   244
:T Cmd
:A Hidden  
:C )! Fnc_CirPWF_2
:C )/nopr
:C )*set,_e1,1
:C )*get,_z2,elem,_z1,attr,type
:C )*get,_z3,etyp,_z2,attr,enam
:C )*get,_z4,etyp,_z2,attr,kop1
:C )*get,_z5,etyp,_z2,attr,kop2
:C )*if,_z3,eq,94,then
:C )*set,_e1,0
:C )*endif
:C )*if,_z3,eq,124,then
:C )*set,_e1,0
:C )*endif
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Typ_Def_*PAR(_z3)
Fld_3
 Typ_Def_*PAR(_z4)
Fld_4
 Typ_Def_*PAR(_z5)
Fld_5
 Typ_Def_*PAR(_e1)
Cal_Fnc_CirPW_3,5,gt,0
Cal_Fnc_CirPW_4,3,gt,4
Cal_Fnc_CirPW_4,3,lt,3
Cal_Fnc_CirPW_5,4,lt,1
Cal_Fnc_CirPW_4,4,gt,4
Cal_Fnc_CirPW_6
:E END
:! 
:N Fnc_CirPW_3 
:S    279,   258,    13
:T Cmd
:A Hidden (Error Trap)
:C )! Fnc_CirPW_3
:C )*create,ansuitmp
:C )*msg,warn,_e0
:C )The selected element is not CIRCU%C. %/& 
:C )Wave form plotting is not valid.      
:C )*end
:C )/input,ansuitmp
:P (ELECMAG)
Inp_P
Cmd_)!
:E END 
:! 
:N Fnc_CirPW_4 
:S    296,   275,    13
:T Cmd
:A Hidden (Error Trap)
:C )! Fnc_CirPW_4
:C )*create,ansuitmp
:C )*msg,warn,_e0
:C )The selected CIRCU%C element is not a source element. %/& 
:C )Wave form plotting is not valid.      
:C )*end
:C )/input,ansuitmp
:P (ELECMAG)
Inp_P
Cmd_)!
:E END 
:! 
:N Fnc_CirPW_5 
:S    292,   271,    13
:T Cmd
:A Hidden (Error Trap)
:C )! Fnc_CirPW_5
:C )*create,ansuitmp
:C )*msg,warn,_e0
:C )The selected CIRCU%C element is a DC-AC harmonic. %/& 
:C )Wave form plotting is not valid.      
:C )*end
:C )/input,ansuitmp
:P (ELECMAG)
Inp_P
Cmd_)!
:E END 
:! 
:N Fnc_CirPW_6 
:S   1986,  1950,    29
:T Cmd 
:A Hidden
:C )! Fnc_CirPW_6
:C )! ---- Variable Definitions ---------a
:C )! _z(1)  - real constant set number
:C )! _z(2)    number of cycles / elem num
:C )! _z(3)    number of time points 
:C )! _z(4)    number of data points 
:C )! _z(5)    source period 
:C )! _z(6)    time increment
:C )! _z(7)    time point
:C )! _z(8)    dummy
:C )! _z(9)    dummy
:C )! _z5    keyopt 2, source type
:C )! _z6    counter
:C )! -----------------------------------
:C )/nopr
:C )*del,_z
:C )*del,_zt
:C )*del,_zv
:C )*del,_zt
:C )*del,_src
:C )*dim,_z,,20
:C )*get,_z(1),elem,_z1,attr,real   
:C )_z(2)=3
:C )_z(3)=200
:C )_z(4)=_z(2)*_z(3)+1
:C )*dim,_zt,array,_z(3)
:C )*dim,_src,table,_z(3)
:C )*if,_z5,eq,1,then               ! Sinusoidal
:C )*get,_z(8),rcon,_z(1),const,3   !  FREQ
:C )*get,_z(9),rcon,_z(1),const,4   !  TD
:C )_z(5)=_z(9)+(1/_z(8))           !  PER
:C )_z(15)=_z(5)*_z(2)
:C )*elseif,_z5,eq,2,then           ! Pulse
:C )*get,_z(8),rcon,_z(1),const,3   !  TD
:C )*get,_z(9),rcon,_z(1),const,4   !  TR 
:C )*get,_z(10),rcon,_z(1),const,5  !  TF
:C )*get,_z(11),rcon,_z(1),const,6  !  TW
:C )_z(5)=_z(8)+_z(9)+_z(10)+_z(11) !  PER
:C )_z(15)=_z(5)
:C )*elseif,_z5,eq,3,then           ! Exponential
:C )*get,_z(5),rcon,_z(1),const,7   !  PER
:C )*if,_z(5),le,0,then             
:C )*get,_z(8),rcon,_z(1),const,3   !  TRD
:C )*get,_z(9),rcon,_z(1),const,5   !  TFD
:C )_z(5)=_z(8)+2*(_z(9)-_z(8))     !  PER - def
:C )*endif
:C )_z(15)=_z(5)*_z(2)
:C )*elseif,_z5,eq,4,then           ! Piecwise
:C )*get,_z(8),rcon,_z(1),const,1   !  TP 1
:C )*get,_z(9),rcon,_z(1),const,3   !  TP 2 
:C )*get,_z(10),rcon,_z(1),const,5  !  TP 3
:C )*get,_z(11),rcon,_z(1),const,7  !  TP 4
:C )*get,_z(12),rcon,_z(1),const,9  !  TP 5
:C )*get,_z(13),rcon,_z(1),const,11 !  TP 6 
:C )_z(5)=_z(8)
:C )*do,_z7,9,13
:C )*if,_z(_z7),gt,_z(5),then
:C )_z(5)=_z(_z7)
:C )*endif
:C )_z(15)=_z(5)
:C )*enddo
:C )*endif
Inp_P
Cmd_)!
Cal_Fnc_CirPW_7
:E END
:! 
:N Fnc_CirPW_7 
:S    355,   319,    29
:T Cmd 
:A Hidden
:C )! Fnc_CirPW_7
:C )/NOPR
:C )_z(7)=(_z(15))/(_z(3))
:C )*do,_z6,1,_z(3)
:C )/nopr
:C )_z(6)=(_z6-1)*_z(7)             ! T
:C )_zt(_z6)=_z(6)                  
:C )_src(_z6)=cirsrc(_z5,_z(1),_z(6))
:C )*if,_src(_z6),ge,2.0**(100),exit
:C )*enddo
:P (ELECMAG)
Inp_P
Cmd_)!
Cal_Fnc_CirPW_8
:E END
:! 
:N Fnc_CirPW_8 
:S    200,    86,   107
:T Cmd 
:A Hidden
:C )! Fnc_CirPW_8
:C )/NOPR
Inp_P
Cmd_)/axlab,x,Time (sec)
Cmd_)/axlab,y,Circuit Source
Cmd_)/auto
Cmd_)*vplot,_zt(1),_src(1)
Cmd_)/GO
:E END
:! 
:N Fnc_CirR0
:S    563,   243,   313
:T Command
:A Resistor
:D Real Constants for CIRCU%_e0% - Resistor
:H Hlp_UI_cirr
:C )! Fnc_CirR0
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=0
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Resistor
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Resistance                  RES
  Def_*GET(rcon,_z(5),const,1)
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_CirR1
:S    652,   245,   400
:T Command
:A Inductor
:D Real Constants for CIRCU%_e0% - Inductor  
:H Hlp_UI_cirr
:C )! Fnc_CirR1
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=1
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Inductor
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Inductance                  IND
  Def_*GET(rcon,_z(5),const,1)
 Fld_4
  Typ_REAL
  Prm_Initial Inductor Current    ILO
  Def_*GET(rcon,_z(5),const,2)
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_CirR10
:S    559,   232,   320
:T Command  
:A Vltg Cntrl VS 
:D Real Constants for CIRCU%_e0% - Vltg Cntrl VS 
:H Hlp_UI_cirr
:C )! Fnc_CirR10
:C )/nopr
:C )_z(3)=10
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Vltg Cntrl VS
 Fld_2
  Typ_INT
  Prm_ID Number                    ID 
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5)) 
 Fld_3
  Typ_REAL
  Prm_Voltage Gain                 AV
  Def_*GET(rcon,_z(5),const,1)
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_CirR11
:S    580,   233,   340
:T Command  
:A Curr Cntrl VS 
:D Real Constants for CIRCU%_e0% - Curr Cntrl VS 
:H Hlp_UI_cirr
:C )! Fnc_CirR11
:C )/nopr
:C )_z(3)=11
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go 
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Current Controlled Voltage Source 
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5)) 
 Fld_3
  Typ_REAL
  Prm_Transresistance              RT
  Def_*GET(rcon,_z(5),const,1)
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_CirR12
:S    580,   232,   341
:T Command  
:A Curr Cntrl CS 
:D Real Constants for CIRCU%_e0% - Curr Cntrl CS 
:H Hlp_UI_cirr
:C )! Fnc_CirR12
:C )/nopr
:C )_z(3)=12
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply 
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Current Controlled Current Source 
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5)) 
 Fld_3
  Typ_REAL
  Prm_Current Gain                 AI
  Def_*GET(rcon,_z(5),const,1)
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_CirR2
:S    659,   248,   404
:T Command
:A Capacitor
:D Real Constants for CIRCU%_e0% - Capacitor  
:H Hlp_UI_cirr
:C )! Fnc_CirR2
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=2
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go 
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Capacitor
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO 
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Capacitance                 CAP 
  Def_*GET(rcon,_z(5),const,1)
 Fld_4
  Typ_REAL
  Prm_Initial Capacitor Voltage   VCO 
  Def_*GET(rcon,_z(5),const,2)
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_CirR3_0
:S    694,   240,   447
:T Command
:A Constant Amplitude 
:D Real Constants for CIRCU%_e0% - ICS/IVS Constant Amplitude   
:H Hlp_UI_cirr
:C )! Fnc_CirR3_0
:C )/nopr 
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Independent Current/Voltage Source - Constant Amplitude
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Amplitude                   AMP
  Def_*GET(rcon,_z(5),const,1)
 Fld_4
  Typ_REAL
  Prm_Phase Angle                 PHA
  Def_*GET(rcon,_z(5),const,2)
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_CirR3_1
:S   1020,   222,   791
:T Command
:A Sinusoidal 
:D Real Constants for CIRCU%_e0% - ICS/IVS Sinusoidal  
:H Hlp_UI_cirr
:C )! Fnc_CirR3_1
:C )/nopr
:C )_z(4)=1
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Independent Current/Voltage Source - Sinusoidal 
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO 
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Voltage/Current Offset    OFFST 
  Def_*GET(rcon,_z(5),const,1)
 Fld_4
  Typ_REAL
  Prm_Voltage/Current Amplitude    VA
  Def_*GET(rcon,_z(5),const,2)
 Fld_5
  Typ_REAL
  Prm_Frequency (Hz)             FREQ
  Def_*GET(rcon,_z(5),const,3)
 Fld_6
  Typ_REAL
  Prm_Delay Time                   TD
  Def_*GET(rcon,_z(5),const,4)
 Fld_7
  Typ_REAL
  Prm_Phase Delay                 PHD
  Def_*GET(rcon,_z(5),const,5)
 Fld_8
  Typ_REAL 
  Prm_Exponential Decay          EXPD
  Def_*GET(rcon,_z(5),const,6)
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_CirR3_2
:S   1176,   211,   958
:T Command
:A Pulse
:D Real Constants for CIRCU%_e0% - ICS/IVS Pulse  
:H Hlp_UI_cirr
:C )! Fnc_CirR3_2
:C )/nopr
:C )_z(4)=2
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Independent Current/Voltage Source - Pulse Load
 Fld_2
  Typ_INT
  Prm_ID Number                    ID 
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
  Prm_Independent Current Source - Pulse Load
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Initial (Low) Volt/Curr      VL
  Def_*GET(rcon,_z(5),const,1)
 Fld_4
  Typ_REAL
  Prm_Initial (High) Volt/Curr     VH
  Def_*GET(rcon,_z(5),const,2)
 Fld_5
  Typ_REAL
  Prm_Delay Time                   TD
  Def_*GET(rcon,_z(5),const,3)
 Fld_6
  Typ_REAL
  Prm_Rise Time                    TR
  Def_*GET(rcon,_z(5),const,4)
 Fld_7
  Typ_REAL
  Prm_Fall Time                    TF
  Def_*GET(rcon,_z(5),const,5)
 Fld_8
  Typ_REAL 
  Prm_Pulse Width                  TW
  Def_*GET(rcon,_z(5),const,6)
! Exclude_from_paths
Cmd_RMORE
 Fld_2   
  Typ_REAL  
  Prm_Period                      PER
  Def_*GET(rcon,_z(5),const,7)
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_CirR3_3
:S   1145,   224,   914
:T Command
:A Exponential
:D Real Constants for CIRCU%_e0% - ICS/IVS Exponential
:H Hlp_UI_cirr
:C )! Fnc_CirR3_3
:C )/nopr
:C )_z(4)=3
:C )_z(5)=rlinqr(0,14)+1
:C )/go   
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Independent Current/Voltage Source - Exponential  
 Fld_2
  Typ_INT
  Prm_ID Number                    ID 
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Initial (Low) Volt/Curr      VL
  Def_*GET(rcon,_z(5),const,1)
 Fld_4
  Typ_REAL
  Prm_Initial (High) Volt/Curr     VH
  Def_*GET(rcon,_z(5),const,2)
 Fld_5
  Typ_REAL
  Prm_Rise Time Delay             TRD 
  Def_*GET(rcon,_z(5),const,3)
 Fld_6
  Typ_REAL
  Prm_Rise Time-Constant          TRC
  Def_*GET(rcon,_z(5),const,4)
 Fld_7
  Typ_REAL
  Prm_Fall Delay Time             TFD   
  Def_*GET(rcon,_z(5),const,5)
 Fld_8
  Typ_REAL 
  Prm_Fall Time-Constant          TFC
  Def_*GET(rcon,_z(5),const,6)
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_REAL
  Prm_Period                      PER
  Def_*GET(rcon,_z(5),const,7)
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_CirR3_4
:S   1215,   218,   990
:T Command
:A Piecewise
:D Real Constants for CIRCU%_e0% - ICS/IVS Piecewise 
:H Hlp_UI_cirr
:C )! Fnc_CirR3_4
:C )/nopr
:C )_z(4)=4
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Independent Current/Voltage Source - Piecewise Linear  
 Fld_2
  Typ_INT
  Prm_ID Number                    ID 
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL2
  Prm_Time, Volt/Curr       TIM1,VAL1 
  Def_*GET(rcon,_z(5),const,1),*GET(rcon,_z(5),const,2)
 Fld_5
  Typ_REAL2
  Prm_Time, Volt/Curr       TIM2,VAL2
  Def_*GET(rcon,_z(5),const,3),*GET(rcon,_z(5),const,4)
 Fld_7
  Typ_REAL2
  Prm_Time, Volt/Curr       TIM3,VAL3 
  Def_*GET(rcon,_z(5),const,5),*GET(rcon,_z(5),const,6)
! Exclude_from_paths
Cmd_RMORE
 Fld_2
  Typ_REAL2
  Prm_Time, Volt/Curr       TIM4,VAL4
  Def_*GET(rcon,_z(5),const,7),*GET(rcon,_z(5),const,8)
 Fld_4
  Typ_REAL2
  Prm_Time, Volt/Curr       TIM5,VAL5 
  Def_*GET(rcon,_z(5),const,9),*GET(rcon,_z(5),const,10)
 Fld_6
  Typ_REAL2 
  Prm_Time, Volt/Curr       TIM6,VAL6
  Def_*GET(rcon,_z(5),const,11),*GET(rcon,_z(5),const,12)
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_CirR5
:S    581,   227,   349
:T Command
:A Stranded Coil 
:D Real Constants for CIRCU%_e0%  - Stranded Coil
:H Hlp_UI_cirr
:C )! Fnc_CirR5
:C )/nopr
:C )_z(3)=5
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Stranded Coil Current Source
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Scaling Factor             SCAL                
  Def_*GET(rcon,_z(5),const,1)
Cal_Fnc_CirBD_1
:END
:! 
:N Fnc_CirR6
:S    570,   225,   340
:T Command
:A Mass Cond 2D  
:D Real Constants for CIRCU%_e0% - Mass Cond 2D
:H Hlp_UI_cirr
:C )! Fnc_CirR6
:C )/nopr
:C )_z(3)=6
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_2D Massive Conductor Voltage Source
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Scaling Factor             SCAL
  Def_*GET(rcon,_z(5),const,1)
Cal_Fnc_CirBD_1
:END
:! 
:N Fnc_CirR7
:S    569,   224,   340
:T Command
:A Mass Cond 3D 
:D Real Constants for CIRCU%_e0% - Mass Cond 3D
:H Hlp_UI_cirr
:C )! Fnc_CirR7
:C )/nopr
:C )_z(3)=7
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_3D Massive Conductor Voltage Source
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Scaling Factor             SCAL
  Def_*GET(rcon,_z(5),const,1)
Cal_Fnc_CirBD_1
:END
:! 
:N Fnc_CirR8
:S    753,   255,   493
:T Command
:A Mut Inductor
:D Real Constants for CIRCU%_e0% - Mutual Inductor 
:H Hlp_UI_cirr
:C )! Fnc_CirR8
:C )/nopr
:C )*del,_z
:C )*dim,_z,,40
:C )_z(3)=8
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Mutal Inductor
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Primary Inductance          ID1
  Def_*GET(rcon,_z(5),const,1)
 Fld_4
  Typ_REAL
  Prm_Secondary Inductance        ID2
  Def_*GET(rcon,_z(5),const,2)
 Fld_5
  Typ_REAL
  Prm_Coupling Coefficient          K
  Def_*GET(rcon,_z(5),const,3)
Cal_Fnc_CirBD_1
:END
:! 
:N Fnc_CirR9
:S    555,   229,   319
:T Command  
:A Vltg Cntrl CS 
:D Real Constants for CIRCU%_e0% - Vltg Cntrl CS 
:H Hlp_UI_cirr
:C )! Fnc_CirR9
:C )/nopr
:C )_z(3)=9
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Vltg Cntrl CS
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO 
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_REAL
  Prm_Transconductance             GT
  Def_*GET(rcon,_z(5),const,1)
Cal_Fnc_CirBD_1
:E END
:! 
:N Fnc_Cir_Merge
:S    333,   111,   215
:T Cmd_P
:A Merge Nodes
:D Node Merging 
:H Hlp_C_NUMMRG
:P (ELECMAG)
Inp_P
Cmd_)!
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,NODE
! Exclude_from_paths
Cmd_NSEL
Fld_5
 Prm_[Merge] Pick or enter nodes for node Merging operation
 Typ_NODE
 Min_2
 Mok_2
 PCN_1
Cmd_)/GO
Cal_Fnc_Cir_Merge0
:E END
:! 
:N Fnc_Cir_Merge0
:S    346,   165,   174
:T Command
:D
:H Hlp_C_NUMMRG
:C )/nopr
:C )_n=ndnext(0)
:C )_m=ndnext(_n)
:C )_tol=1.1*distnd(_n,_m)
:C )/go
:P (ELECMAG)
Inp_P
Cmd_NUMMRG
 Fld_2
  Typ_Def_NODE
 Fld_3
  Typ_Def_*Par(_tol)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_Cir_Nod
:E END
:! 
:N Fnc_Cir_Nod
:S    354,   153,   194
:T Cmd_N
:A    Nodes
:D Plot nodes in Circuit Builder
:C )! Fnc_CirPR
:C )/NOPR
:C )*DEL,_z1
:C )/GO
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_wpstyl,,,,,,,,1
Cmd_)*get,_z1,graph,,number
Cmd_)/pnum,node,1
Cmd_)/number,0
! Exclude_from_paths
Cmd_/view,all,wp
! Exclude_from_paths
Cmd_nplot
Cmd_)/number,_z1
:E END
:! 
:N Fnc_Cir_WP
:S    659,   255,   397
:T Cmd_N
:A Set Grid
:D Circuit Building Setup 
:C )! Fnc_Cir_WP
:C )/NOPR
:C )*DEL,_z1
:C )KEYW,EXELM,0
:C )*DEL,_z77
:C )*get,_z77,elem,,count
:C )*if,_z77,gt,0,then
:C )KEYW,EXELM,1
:C )*endif
:C )/GO
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_wpstyl,0.01,0.01,,,,,1,1
 K_CM(wprept)
Cmd_wpstyl,,,,,,,,1
 K_CM(WPREPT)
Cmd_)*get,_z1,graph,,number
Cmd_)/pnum,mat,1
Cmd_)/number,1
Cmd_)keyw,wprept,1
! Exclude_from_paths
Cmd_/view,all,wp
! Exclude_from_paths
Cmd_/dist,all,0.2
! Exclude_from_paths
Cmd_nplot
 K_CM(exelm)
! Exclude_from_paths
Cmd_eplot
 K_CM(EXELM)
Cmd_)/number,_z1
Cmd_)/UI,WPSE
! Cust_Cmd_WPSTYL
:E END
:! 
:N Fnc_Cl_Mesh
:S    409,   174,   228
:T Cmd
:C )! Fnc_Cl_Mesh
:C )/nopr
:A Clear Radiation Surface Mesh
:D Clear Radiation Surface Mesh
:K #(PREP7*SOLUTION)
:H Hlp_C_RSURF
Inp_NoApply
Cmd_RSURF,CLEAR
Fld_0
 Typ_Lab
 Prm_[RSURF] Clear Radiation Surface Mesh
Fld_2
 Prm_DELOPTS Deletion Options
 Typ_Lis_RadioB
 Lis_Clear All Surface Elements        , ALL
 Lis_Clear Last Set of Surface Elements, LAST
:E END
:! 
:N Fnc_Clear_Sym
:S    285,   145,   133
:T Cmd
:C )! Fnc_Clear_Sym
:A Clear Symmetry
:D Clears the Symmetry
:K #(PREP7*SOLUTION)
:H Hlp_C_RSYMM
Inp_NoApply
Cmd_RSYMM,CLEAR
Fld_0
 Typ_Lab
 Prm_[RSYMM]  Are you sure you want to  
Fld_0
 Typ_Lab
 Prm_   clear radiation symmetry?
:E END
:! 
:N Fnc_Cms_Opts
:S   2097,   292,  1798
:T Command
:C )! Fnc_Cms_Opts
:D Component Mode Synthesis
:C )/NOPR
:C )*del,_z
:C )*dim,_z,,9
:C )*del,_zc
:C )*dim,_zc,char,5
:C )*SET,_zc(1),'FIX','FREE','MIX','RFFB','USER'
:P (FULL_ANS)
:H Hlp_C_CMSOPT
:H Hlp_C_SEOPT
:H Hlp_C_LUMPM
:H Hlp_C_RIGID
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_[CMSOPT]  Component Mode Synthesis Options
Cmd_)*SET,_z(1)
 Fld_2
  Prm_CMS Method
  Typ_LIS_OPTIONB
  LIS_Fixed Interface,1
  LIS_Free Interface ,2
  LIS_RFFB Method    ,4
  Def_1
Cmd_)*SET,_z(2)
 Fld_2
  Prm_NMODE No. of modes to extract
  Typ_INT
  Def_1
Cmd_)*SET,_z(3)
 Fld_2
  Prm_FREQB Start Freq (initial shift) 
  Typ_REAL
  Def_0.0
Cmd_)*SET,_z(4)
 Fld_2
  Prm_FREQE End Frequency
  Typ_REAL
  Def_0.0
Cmd_)*CSET,1,1
 Fld_2
  Prm_FBDDEF Free-interface Mode Def
  Typ_LIS_OPTIONB
  LIS_None              ,"    "
  LIS_Number of modes   ,FNUM
  LIS_Tolerance         ,FTOL
  LIS_Automatic         ,FAUTO
  LIS_Via RIGID command ,RIGID
  Def_Blank
Cmd_)*SET,_z(5)
 Fld_2
  Prm_FBDVAL Rigid Body Modes or Toler
  Typ_REAL
  Def_0.0
 Fld_0
  Typ_SEP
Cmd_SEOPT
 Fld_0
  Typ_Lab
  Prm_[SEOPT]  Substructuring Analysis Options
 Fld_2
  Prm_Sename  Name to be assigned to -
  Typ_CHAR,32,8
  Def_*GET(active,,jobnam)
 Fld_0
  Typ_Lab
  Prm_        - CMS SuperElement matrix file
 Fld_3
  Prm_SEMATR  Matrices to be generated
  Typ_LIS_OPTIONB
  LIS_Stiffness+Mass  ,2
  Def_2
 Fld_4
  Prm_SEPR    Items to be printed
  Typ_LIS_OPTIONB
  LIS_No printout     ,0
  LIS_LoadVect+Matrix ,1
  LIS_LoadVectors only,2
  Def_*GET(common,,soptcm,,int,18)
 Fld_5
  Prm_SESST   Save space for [S]?
  Typ_LOGI,No,Yes
  Def_*GET(common,,soptcm,,int,76)
 Fld_0
  Typ_Lab
  Prm_        ([S] is the stress stiffness matrix)
Cmd_LUMPM
K_CM(pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL
 Fld_0
  Typ_SEP
 Fld_2
  Prm_[LUMPM]  Use lumped mass approx?
  Typ_LOGI,No,Yes
  Def_*GET(common,,stepcm,,int,3)
Cmd_RIGID
 Fld_0
  Typ_SEP
 Fld_2
  Prm_[RIGID]   Known rigid body modes
  Typ_MLis
  LIS_All DOF,ALL
  LIS_*READ,DOF
  Bnd_0.0,6.0
Cal_Fnc_Cms_Opts_0
Cal_REFRESH
:E END
:! 
:N Fnc_Cms_Opts_0
:S    361,   149,   205
:T Command 
:C )! Fnc_Cms_Opts_0
:C )/GO
:D Component Mode Synthesis Fixed Interface Options
:P (FULL_ANS)
Inp_P
Cmd_CMSOPT
 Fld_2
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*PAR(_z(2))
 Fld_4
  Typ_Def_*PAR(_z(3))
 Fld_5
  Typ_Def_*PAR(_z(4))
 Fld_6
  Typ_Def_*CPAR(1)
 Fld_7
  Typ_Def_*PAR(_z(5))
Cal_REFRESH
:E END
:! 
:N Fnc_Cms_Opts_1
:S    407,   155,   245
:T Command
:C )! Fnc_Cms_Opts_1   
:C )/GO
:D Component Mode Synthesis Free/User Interface Options
:P (FULL_ANS)
Inp_NoApply
Cmd_CMSOPT
 Fld_2   
  Typ_Def_*PAR(_zc(_z(1)))
 Fld_3
  Typ_Def_*PAR(_z(2))
 Fld_4
  Typ_Def_*PAR(_z(3))
 Fld_5 
  Typ_Def_*PAR(_z(4))
 Fld_6
  Prm_NFBDMODES
  Typ_INT 
  Def_0  
 Fld_7
  Prm_FBDTOL
  Typ_REAL
  Def_0.0
Cal_REFRESH
:E END
:! 
:N Fnc_CommontoSect
:S   1099,   733,   359
:C )! Fnc_CommontoSect
:C )/NOPR
:C )*DEL,_zc
:C )*DEL,_zp
:C )*SET,_zc,'/*.SECT*'
:C )*SET,_zp,'\*.SECT*'
:C )*GET,_z2,common,,sectionc,,chr8,5
:C )*IF,_z2,NE,'OFF',THEN
:C )*GET,_z3,common,,sectionc,,chr8,7
:C )*GET,_z4,common,,sectionc,,chr8,9
:C )*GET,_z5,common,,sectionc,,chr8,11
:C )*GET,_z6,common,,sectionc,,chr8,13
:C )*GET,_z7,common,,sectionc,,chr8,15
:C )*GET,_z8,common,,sectionc,,chr8,17
:C )*GET,_z9,common,,sectionc,,chr8,19
:C )*ELSE
:C )*SET,_z2,' '
:C )*SET,_z3,' '
:C )*SET,_z4,' '
:C )*SET,_z5,' '
:C )*SET,_z6,' '
:C )*SET,_z7,' '
:C )*SET,_z8,' '
:C )*SET,_z9,'.'
:C )*ENDIF
:C )/GOPR
:T Command
:H Hlp_C_SECWRITE
:A Write From Common
:D Write Section Library File
Inp_NoApply
Cmd_! SECWRITE
Cmd_)SECWRITE
 Fld_0
  Typ_Lab
  Prm_[SECWRITE]  Write a file containing User Defined Mesh
 Fld_2
  Prm_FILE    Section library file
  Typ_FILE_INLINE
K_LN(intelnt+alphant)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zc%)
K_LN(INTELNT*ALPHANT)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zp%)
 Fld_5
  Typ_Def_1
!
:E END
:! 
:N Fnc_Condensation
:S    370,   150,   213
:T Cmd
:C )! Fnc_Condensation
:A Condensation
:D Specify Condensation
:K #(PREP7*SOLUTION)
:H Hlp_C_RSYMM
Inp_NoApply
Cmd_RSYMM,COND
Fld_0
 Typ_Lab
 Prm_[RSYMM] Turn Condensation on/off
Fld_5
 Prm_CONDVALUE Condensation Key
 Typ_LIS_RADIOB
 LIS_Turn off condensation         ,OFF
 LIS_Turn on condensation          ,ON
:E END
:! 
:N Fnc_ContSectAdd
:S    272,   147,   118
:T Cmd
:C )! Fnc_ContSectAdd
:A    Add
:D Add Contact Section
:K #(PREP7*SOLUTION)
:K (PR_STRUC*pr_set)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_Add Contact Section with ID
  Typ_INT
Cmd_)/GO
Cal_Fnc_CSecAddEdit2
:E END
:! 
:N Fnc_ContSectEdit
:S    495,   288,   200
:T Cmd
:C )! Fnc_ContSectEdit
:C )/NOPR
:C )*get,_z1,active,,sect
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A    Edit
:D Edit Contact Section
:K #(PREP7*SOLUTION)
:K (PR_STRUC*pr_set)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Prm_Edit Contact Section with ID
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  Def_*PAR(_z1)
Cmd_)/GO
Cal_Fnc_CSecAddEdit2
:E END
:! 
:N Fnc_CopyMatModel
:S    279,   181,    91
:T Command
:C )! Fnc_CopyMatModel
:C )/NOPR
:C )_z1=MPINQR(0,0,12)
:C )/GO
:A Copy Material Model
:D Copy Material Model
:H Hlp_C_TBCOPY
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z1)
Cal_Fnc_CopyMatNo,2,eq,0
Cal_Fnc_CopyMatYes,2,gt,0
:E END
:! 
:N Fnc_CopyMatNo
:S    224,   134,    83
:T Command
:C )! Fnc_CopyMatNo
:A Copy Material Model
:D Copy Material Model
:H Hlp_C_TBCOPY
Inp_NoApply
Cmd_)!
Fld_0
 Typ_Lab
  Prm_NOTE:  No materials have been defined yet.
:E END
:! 
:N Fnc_CopyMatYes
:S    639,   355,   277
:T Command
:C )! Fnc_CopyMatYes
:C )/NOPR
:C )KEYW,MPLIST,0
:C )_z3=MPINQR(0,0,12)
:C )_z5=_zfromat
:C )_z6=MPINQR(0,0,14)
:C )_z4=_zbigmat+1
:C )*IF,_z4,eq,_z6,then
:C )_z4=_z4+1
:C )*ENDIF
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )/GO
:A Copy Material Model
:D Copy Material Model
:H Hlp_C_TBCOPY
Cmd_*CSET,1,2
 Fld_0
  Typ_Lab
  Prm_Copy Material Model
 Fld_2
  Prm_        from Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
  Def_*PAR(_z5)
 Fld_3
  Prm_          to Material number
  Typ_INT
  Def_*PAR(_z4)
Cal_Fnc_MatCopyExec
:E END
:! 
:N Fnc_Coriolis
:S   1501,   844,   650
:T Command
:C )! Fnc_Coriolis
:C )/NOPR
:C )*GET,_z1,common,,ACELCM,,real,16   ! global Cartesian coords (x) 
:C )*GET,_z2,common,,ACELCM,,real,17   ! global Cartesian coords (y) 
:C )*GET,_z3,common,,ACELCM,,real,18   ! global Cartesian coords (z) 
:C )*GET,_z4,common,,ACELCM,,real,43   ! components of ang velocity (x)   
:C )*GET,_z5,common,,ACELCM,,real,44   ! components of ang velocity (y)   
:C )*GET,_z6,common,,ACELCM,,real,45   ! components of ang velocity (z)   
:C )*GET,_z7,common,,acelcm,,real,46   ! components of ang accel (x) 
:C )*GET,_z8,common,,acelcm,,real,47   ! components of ang accel (y) 
:C )*GET,_z9,common,,acelcm,,real,48   ! components of ang accel (z) 
:C )/GO
:A Coriolis Effects
:D Apply Coriolis Effects
:K #(PREP7*SOLUTION)
:K (lsdyna)
:P (LINPLUS)
:H Hlp_UI_coriolis
Inp_NoApply
Cmd_CGLOC
Fld_0
 Typ_LAB
 Prm_    Apply Coriolis Effects
Fld_0
 Typ_LAB
 Prm_ 
Fld_0
 Typ_Lab
 Prm_[CGLOC]   Origin of Acceleration Coordinate System
Fld_2
 Prm_X,Y,Z global Cartesian coords
 Typ_REAL3
 Def_*PAR(_z1),*PAR(_z2),*PAR(_z3)
Fld_0
Typ_Sep
Cmd_CGOMGA
Fld_0
 Typ_Lab
 Prm_[CGOMGA]  Angular Velocity about Acceleration Coordinate System
Fld_2
 Prm_X,Y,Z components of ang velocity
 Typ_REAL3
 Def_*PAR(_z4),*PAR(_z5),*PAR(_z6)
Fld_0
Typ_Sep
!
Cmd_DCGOMG
Fld_0
 Typ_Lab
 Prm_[DCGOMG]  Angular Acceleration about Acceleration Coordinate System
Fld_2
 Prm_X,Y,Z components of ang accel
 Typ_REAL3
 Def_*PAR(_z7),*PAR(_z8),*PAR(_z9)
:E END
:! 
:N Fnc_Coriolis_del
:S    542,   178,   357
:T Command
:C )! Fnc_Coriolis_del
:A Coriolis Effects
:D Delete Coriolis Effects
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_UI_coriolis
Inp_NoApply
Cmd_CGLOC,0,0,0
Cmd_CGOMGA,0,0,0
Cmd_DCGOMG,0,0,0
Fld_0
 Typ_Lab
 Prm_[CGLOC] [CGOMGA] [DCGOMG] 
Fld_0
 Typ_Lab
 Prm_    This function resets the origin of the acceleration coordinate
Fld_0
 Typ_Lab
 Prm_    system to the global origin and sets the relative angular
Fld_0
 Typ_Lab
 Prm_    velocities and relative angular accelerations to zero!
:E END
:! 
:N Fnc_Cr_Mesh
:S    389,   221,   161
:T Cmd
:C )! Fnc_Cr_Mesh
:C )/nopr
:C )*get,_z1,etyp,,num,max
:C )_z1=_z1+1
:A Generate Radiation Surface Mesh
:D Generate Radiation Surface Mesh
:K #(PREP7*SOLUTION)
:H Hlp_C_RSURF
Inp_NoApply
Cmd_RSURF,DEFINE
Fld_0
 Typ_Lab
 Prm_[RSURF] Generate Radiation Surface Mesh
Fld_3
 Prm_Element Type ID for Surface Elements
 Typ_INT
 Def_*PAR(_z1)
:E END
:! 
:N Fnc_CustBeam_Fin
:S    204,   116,    81
:T Command
:C )! Fnc_CustBeam_Fin
:A Finish
:D Finish
:H Hlp_C_SECWRITE
Inp_P
Cmd_)!
Fld_2
 Typ_Def__BSAVE
Cal_Fnc_FinWithWarn,2,0
Cal_Fnc_FinNoWarn,2,1
:E END
:! 
:N Fnc_CycPhase_Clear
:S    143,   111,    25
:T Cmd_N
:D Clear Phase Sweep Results
:A Clear
:H Hlp_C_CYCPHASE
Inp_P
Cmd_CYCPHASE,CLEAR
:E END
:! 
:N Fnc_CycPhase_Get
:S   1446,   103,  1336
:T Cmd
:D Get Phase Sweep Results
:A Get
:H Hlp_C_CYCPHASE
Cmd_CYCPHASE,GET
Fld_0
 Typ_Lab
 Prm_[CYCPHASE,GET]  GET PHASE SWEEP RESULTS
Fld_2
  Prm_Item,Comp  Item to be retrieved
  Typ_IDX
   IDX_DOF solution    ,Translation   UX,U,X
   IDX_DOF solution    ,              UY,U,Y
   IDX_DOF solution    ,              UZ,U,Z
   IDX_DOF solution    ,Total       USUM,U,SUM
   IDX_Stress          ,X-direction   SX,S,X
   IDX_Stress          ,Y-direction   SY,S,Y
   IDX_Stress          ,Z-direction   SZ,S,Z
   IDX_Stress          ,XY-shear     SXY,S,XY
   IDX_Stress          ,YZ-shear     SYZ,S,YZ
   IDX_Stress          ,XZ-shear     SXZ,S,XZ
   IDX_Stress          ,1st principal S1,S,1
   IDX_Stress          ,2nd principal S2,S,2
   IDX_Stress          ,3rd principal S3,S,3
   IDX_Stress          ,von Mises   SEQV,S,EQV
   IDX_Strain          ,X-dir'n  EPEL  X,EPEL,X
   IDX_Strain          ,Y-dir'n  EPEL  Y,EPEL,Y
   IDX_Strain          ,Z-dir'n  EPEL  Z,EPEL,Z
   IDX_Strain          ,XY-shear EPEL XY,EPEL,XY
   IDX_Strain          ,YZ-shear EPEL YZ,EPEL,YZ
   IDX_Strain          ,XZ-shear EPEL XZ,EPEL,XZ
   IDX_Strain          ,1st prin EPEL  1,EPEL,1
   IDX_Strain          ,2nd prin EPEL  2,EPEL,2
   IDX_Strain          ,3rd prin EPEL  3,EPEL,3
   IDX_Strain          ,vonMises EPELEQV,EPEL,EQV
Fld_3
 Prm_TYPE: Values:
 Typ_Lis_RADIOB
   Lis_MAX      ,MAX
   Lis_MIN      ,MIN
:E END
:! 
:N Fnc_CycPhase_List
:S    140,   109,    24
:T Cmd_N
:D List Phase Sweep Results
:A List 
:H Hlp_C_CYCPHASE
Inp_P
Cmd_CYCPHASE,LIST
:E END
:! 
:N Fnc_CycPhase_Put
:S    285,   121,   157
:T Command
:D Put Phase Sweep Results
:A Put Phase Results
:H Hlp_C_CYCPHASE
Cmd_CYCPHASE,PUT
Fld_0
 Typ_Lab
 Prm_[CYCPHASE,PUT]  LOAD PHASE SWEEP RESULTS
Fld_2
 Prm_TYPE: Values:
 Typ_Lis_RADIOB
 LIS_MAX      ,MAX
 LIS_MIN      ,MIN
:E END
:! 
:N Fnc_CycPhase_Status
:S    150,   117,    26
:T Cmd_N
:D Summerize Phase Sweep Results
:A Status
:H Hlp_C_CYCPHASE
Inp_P
Cmd_CYCPHASE,STATUS
:E END
:! 
:N Fnc_CycPhase_Sweep
:S    412,   131,   274
:T Command
:D Sweep a Modal Cyclic Symmetric Result
:A Phase Sweep
:H Hlp_C_CYCPHASE
Cmd_CYCPHASE
Fld_0
 Typ_Lab
 Prm_[CYCPHASE]  PHASE SWEEP A MODAL CYCLIC SYMMETRIC ANALYSIS MODAL
Fld_2
 Prm_TYPE Nodal Solution to Be Swept
 Typ_Lis_OPTIONB
 LIS_DISPLACEMENT
 LIS_STRESSES
 LIS_STRAINS
 LIS_ALL
Fld_3
 Prm_Sweep angle increment in degrees
 Typ_Real
 Def_1.0
:E END
:! 
:N Fnc_Cyc_Sym
:S    396,   146,   243
:T Cmd
:C )! Fnc_Cyc_Sym
:A Cyclic Symmetry
:D Specify Cyclic Symmetry
:K #(PREP7*SOLUTION)
:H Hlp_C_RSYMM
Inp_NoApply
Cmd_RSYMM,DEFINE
Fld_0
 Typ_Lab
 Prm_[RSYMM] Define Cyclic Symmetry 
Fld_2
 Prm_CS  Coordinate System Id
 Typ_LIS_OptionB
 LIS_*READ,CSYS
Fld_4
 Prm_NSECT Number of Sectors
 Typ_INT
Fld_0
 Typ_Lab
 Prm_ (excluding original sector)
:E END
:! 
:N Fnc_DADELE
:S    320,   177,   136
:T Cmd_P
:C )! Fnc_DADELE
:C )! Areas for DADELE command below
:A On Areas
:D Delete Area Constraints
:K #(PREP7*SOLUTION)
:H Hlp_C_DADELE
Inp_P
Cmd_)!
Fld_2
 Prm_[DADELE]  Pick or enter areas for DOF constraint deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_DADELE2
:E END
:! 
:N Fnc_DADELE2
:S    369,   125,   237
:T Command
:C )! Fnc_DADELE2
:D Delete Area Constraints
:B Fnc_DADELE
:H Hlp_C_DADELE
Cmd_DADELE,P51X
 Fld_0
  Typ_Lab
  Prm_[DADELE]  Delete DOF Constraints on Areas
 Fld_2
  Prm_Lab  Constraints to be deleted
  Typ_LIS_OPTIONB
   LIS_All DOF,ALL
   LIS_*READ,DOF
   LIS_Symmetry        ,SYMM
   LIS_Antisymmetry    ,ASYM
:E END
:! 
:N Fnc_DADELE_a
:S    306,   182,   117
:T Cmd_P
:C )! Fnc_DADELE_a
:A    On Areas
:D Delete A on Areas
:K ((PREP7*SOLUTION)+(VECTORP+edgeflx)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[DADELE]  Pick or enter areas for deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Cal_Fnc_DADELE_uva
:E END
:! 
:N Fnc_DADELE_all
:S    421,   178,   236
:T Command
:C )! Fnc_DADELE_all
:A    On All Areas
:D Delete All Constraints on All Selected Areas
:K #(PREP7*SOLUTION)
:H Hlp_C_DADELE
Inp_NoApply
Cmd_DADELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[DADELE]  This function deletes all DOF constraints
Fld_0
 Typ_Lab
 Prm_          on all selected areas and on all selected
Fld_0
 Typ_Lab
 Prm_          nodes attached to those areas!
:E END
:! 
:N Fnc_DADELE_azP
:S    329,   177,   145
:T Cmd_P
:C )! Fnc_DADELE_azP
:A    On Areas
:D Delete Flux Parallel on Areas
:K ((PREP7*SOLUTION)+(EDGEFLX*NOFILTER))
:H Hlp_C_DADELE
Inp_P
Cmd_DADELE
Fld_2
 Prm_[DADELE]  Pick or enter areas for Flux Parallel condition deleti
on
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_AZ
:E END
:! 
:N Fnc_DADELE_mag
:S    320,   175,   138
:T Cmd_P
:C )! Fnc_DADELE_mag
:A    On Areas
:D Delete MAG on Areas
:K ((PREP7*SOLUTION)+(edgeflx+SCALARP)*NOFILTER)
:H Hlp_C_DADELE
Inp_P
Cmd_DADELE
Fld_2
 Prm_[DADELE]  Pick or enter areas for scalar potential deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_MAG
:E END
:! 
:N Fnc_DADELE_pec
:S    340,   199,   134
:T Cmd_P
:C )! Fnc_DADELE_pec
:A       On Areas
:D Delete PEC on Areas
:K (((PREP7*SOLUTION)+EDGEELC)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DADELE
Inp_P
Cmd_DADELE
Fld_2
 Prm_[DADELE]  Pick or enter areas for Electric Wall deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_AX
:E END
:! 
:N Fnc_DADELE_pres
:S    353,   207,   139
:T Cmd_P
:C )! Fnc_DADELE_pres
:A On Areas
:D Delete PRES on AREAS
:K #((PREP7*SOLUTION)+(CFD*TFILM*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG*FLOTRAN)
:H Hlp_C_DADELE
Inp_P
Cmd_DADELE
Fld_2
 Prm_[DADELE]  Pick or enter keypoints for pressure DOF deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_PRES
:E END
:! 
:N Fnc_DADELE_spec
:S    762,   319,   436
:T Cmd_P
:C )! Fnc_DADELE_spec
:C )! Areas for DADELE command below
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z1,FLDA,SPEC,NUMB
:C )*IF,_z1,le,0,then
:C )KEYW,KEY1,1
:C )*ENDIF
:C )/GO
:A On Areas
:D Remove Mass Fraction on Areas
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:H Hlp_C_DADELE
Inp_P
! Exclude_from_paths
Cmd_CM,_Y,AREA
K_CM(key1)
! Exclude_from_paths
Cmd_ASEL
K_CM(key1)
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DADELE]  Pick or enter areas for mass fraction deletion
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,AREA
K_CM(key1)
! Exclude_from_paths
Cmd_CMSEL,S,_Y
K_CM(key1)
! Exclude_from_paths
Cmd_CMDELE,_Y
K_CM(key1)
Cmd_)!
 Fld_2
 Typ_Def_*GET(FLDA,SPEC,NUMB)
Cal_Fnc_DADELE_spec2,2,gt,0
:E END
:! 
:N Fnc_DADELE_spec2
:S   1144,   765,   372
:T Cmd
:C )! Fnc_DADELE_spec2
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0,KEY3,0
:C )KEYW,KEY4,0,KEY5,0,KEY6,0
:C )*GET,_Z2,FLDA,SPEC,NUMB
:C )*DEL,_zc
:C )*DIM,_zc,char4,_z2
:C )*IF,_z2,GE,1,THEN
:C )KEYW,KEY1,1
:C )*GET,_zc(1),MSSPEC,1,NAME
:C )*ENDIF
:C )*IF,_z2,GE,2,THEN
:C )KEYW,KEY2,1
:C )*GET,_zc(2),MSSPEC,2,NAME
:C )*ENDIF
:C )*IF,_z2,GE,3,THEN
:C )KEYW,KEY3,1
:C )*GET,_zc(3),MSSPEC,3,NAME
:C )*ENDIF
:C )*IF,_z2,GE,4,THEN
:C )KEYW,KEY4,1
:C )*GET,_zc(4),MSSPEC,4,NAME
:C )*ENDIF
:C )*IF,_z2,GE,5,THEN
:C )KEYW,KEY5,1
:C )*GET,_zc(5),MSSPEC,5,NAME
:C )*ENDIF
:C )*IF,_z2,GE,6,THEN
:C )KEYW,KEY6,1
:C )*GET,_zc(6),MSSPEC,6,NAME
:C )*ENDIF
:C )*DEL,_z
:C )*DIM,_z,,7
:C )/GO
:D Apply Mass Fraction on Areas
:H Hlp_C_DADELE
Inp_P
Cmd_DADELE,_Y1
K_CM(KEY1)
 Fld_2
 Typ_Def_*PAR(_zc(1))
Cmd_DADELE,_Y1
K_CM(KEY2)
 Fld_2
 Typ_Def_*PAR(_zc(2))
Cmd_DADELE,_Y1
K_CM(KEY3)
 Fld_2
 Typ_Def_*PAR(_zc(3))
Cmd_DADELE,_Y1
K_CM(KEY4)
 Fld_2
 Typ_Def_*PAR(_zc(4))
Cmd_DADELE,_Y1
K_CM(KEY5)
 Fld_2
 Typ_Def_*PAR(_zc(5))
Cmd_DADELE,_Y1
K_CM(KEY6)
 Fld_2
 Typ_Def_*PAR(_zc(6))
! Exclude_from_paths
Cmd_CMDELE,_Y1
:E END
:! 
:N Fnc_DADELE_temp
:S    358,   209,   142
:T Cmd_P
:C )! Fnc_DADELE_temp
:A On Areas
:D Delete TEMP on AREAS
:K #((PREP7*SOLUTION)+(CFD*THERMAL*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG*FLOTRAN)
:H Hlp_C_DADELE
Inp_P
Cmd_DADELE
Fld_2
 Prm_[DADELE]  Pick or enter keypoints for temperature DOF deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_TEMP
:E END
:! 
:N Fnc_DADELE_ti
:S    356,   205,   144
:T Cmd_P
:C )! Fnc_DADELE_ti
:A    On Areas
:D Delete VOLT on Areas
:K ((PREP7*SOLUTION)+(TIMEINTP+edgeelc)*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DADELE
Inp_P
Cmd_DADELE
Fld_2
 Prm_[DADELE]  Pick or enter areas for time-integrated poten deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_VOLT
:E END
:! 
:N Fnc_DADELE_turb
:S    487,   166,   314
:T Cmd_P
:C )! Fnc_DADELE_turb
:A On Areas
:D Delete turbulence on Areas
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_DADELE
Inp_P
! Exclude_from_paths
Cmd_CM,_Y,AREA
! Exclude_from_paths
Cmd_ASEL
Fld_2
 Typ_Def_R
Fld_5
 Prm_[DADELE]  Pick or enter areas for turbulence deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,AREA
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_DADELE_turb2
:E END
:! 
:N Fnc_DADELE_turb2
:S    465,   175,   283
:T Cmd
:C )! Fnc_DADELE_turb2
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0
:C )/GOPR
:A On Areas
:D Delete turbulence on Areas
:H Hlp_C_DADELE
Cmd_)/NOPR
   Fld_0
   Typ_Lab
   Prm_[DADELE] Delete turbulence constraints
Cmd_)KEYW,KEY1
   Fld_2
   Typ_Logi,No,Yes
   Prm_ENKE Delete Kinetic Energy
   Def_1
Cmd_)KEYW,KEY2
   Fld_2
   Typ_Logi,No,Yes
   Prm_ENDS Delete Energy Dissipation
   Def_1
Cmd_)/GO
Cal_Fnc_DADELE_turb3
:E END
:! 
:N Fnc_DADELE_turb3
:S    185,    74,   104
:T Cmd
:C )! Fnc_DADELE_turb3
Inp_P
Cmd_DADELE,_Y1,ENKE
K_CM(KEY1)
Cmd_DADELE,_Y1,ENDS
K_CM(KEY2)
! Exclude_from_paths
Cmd_CMDELE,_Y1
:E END
:! 
:N Fnc_DADELE_uva
:S    319,   136,   176
:T Command
:C )! Fnc_DADELE_uva2
:D Delete Area Constraints
:B Fnc_DADELE_uva
:H Hlp_C_DADELE
Cmd_DADELE,P51X
 Fld_0
  Typ_Lab
  Prm_[DADELE]  Delete DOF Constraints on Keypoints
 Fld_2
  Prm_Lab  DOFs to be deleted
  Typ_LIS_OPTIONB
   LIS_All DOF,ALL
   LIS_*READ,DOF
:E END
:! 
:N Fnc_DADELE_v
:S    491,   175,   309
:T Cmd_P
:C )! Fnc_DADELE_v
:A On Areas
:D Delete velocity on Areas
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (FLOTRAN)
:H Hlp_C_DADELE
Inp_P
! Exclude_from_paths
Cmd_CM,_Y,AREA
! Exclude_from_paths
Cmd_ASEL
Fld_2
 Typ_Def_R
Fld_5
 Prm_[DADELE]  Pick or enter areas for velocity deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,AREA
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_DADELE_v2
:E END
:! 
:N Fnc_DADELE_v2
:S    835,   197,   631
:T Cmd
:C )! Fnc_DADELE_v2
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0,KEY3,0
:C )KEYW,KEY4,0,KEY5,0
:C )/GOPR
:A On Areas
:D Delete velocity on Areas
:H Hlp_C_DADELE
Cmd_)/NOPR
   Fld_0
   Typ_Lab
   Prm_[DADELE] Delete velocity constraints
Cmd_)KEYW,KEY1
   Fld_2
   Typ_Logi,No,Yes
   Prm_VX Delete velocity
Cmd_)KEYW,KEY2
   Fld_2
   Typ_Logi,No,Yes
   Prm_VY Delete velocity
Cmd_)KEYW,KEY3
   Fld_2
   Typ_Logi,No,Yes
   Prm_VZ Delete velocity
Cmd_)KEYW,KEY4
   Fld_2
   Typ_Logi,No,Yes
   Prm_ENKE Delete moving wall
   Fld_0
   Typ_Lab
   Prm_     This also deletes ENKE other than moving wall
Cmd_)KEYW,KEY5
   Fld_2
   Typ_Logi,No,Yes
   Prm_ENDS Delete generalized symmetry
   Fld_0
   Typ_Lab
   Prm_     This also deletes ENDS other than generalized symmetry
Cmd_)/GO
Cal_Fnc_DADELE_v3
:E END
:! 
:N Fnc_DADELE_v3
:S    266,    68,   191
:T Cmd
:C )! Fnc_DADELE_v3
Inp_P
Cmd_DADELE,_Y1,VX
K_CM(KEY1)
Cmd_DADELE,_Y1,VY
K_CM(KEY2)
Cmd_DADELE,_Y1,VZ
K_CM(KEY3)
Cmd_DADELE,_Y1,ENKE
K_CM(KEY4)
Cmd_DADELE,_Y1,ENDS
K_CM(KEY5)
! Exclude_from_paths
Cmd_CMDELE,_Y1
:E END
:! 
:N Fnc_DADELE_volt
:S    378,   241,   130
:T Cmd_P
:C )! Fnc_DADELE_volt
:A    On Areas
:D Delete VOLT on Areas
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DADELE
Inp_P
Cmd_DADELE
Fld_2
 Prm_[DADELE]  Pick or enter areas for voltage deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_VOLT
:E END
:! 
:N Fnc_DADEL_flo
:S    293,   137,   149
:T Command
:C )! Fnc_DADEL_flo ORPHAN
:D Delete Area Constraints
:B Fnc_DADEL_p
:H Hlp_C_DADELE
Cmd_DADELE,P51X
 Fld_0
  Typ_Lab
  Prm_[DADELE]  Delete Area Constraints
 Fld_2
 Prm_Lab    DOFs to be deleted
 Typ_MLIS
 LIS_*READ,DOF
 Bnd_0.0,1.0
:E END
:! 
:N Fnc_DADEL_p
:S    354,   131,   216
:T Cmd_P
:C )! Fnc_DADEL_p ORPHAN
:A    On Areas
:D Delete Area Constraints
:H Hlp_C_DADELE
Inp_P
Cmd_)!
Fld_2
 Prm_[DADELE]  Pick or enter areas for constraint deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cmd_)!
 Fld_2 
 Typ_DEF_*GET(ACTIVE,,KEYWORD,,CFD)
Cal_Fnc_DADEL_p2,2,eq,0
Cal_Fnc_DADEL_flo,2,eq,1
:E END
:! 
:N Fnc_DADEL_p2
:S    363,   135,   221
:T Command
:C )! Fnc_DADEL_p2 ORPHAN
:D Delete Area Constraints
:B Fnc_DADEL_p
:H Hlp_C_DADELE
Cmd_DADELE,P51X
 Fld_0
  Typ_Lab
  Prm_[DADELE]  Delete Area Constraints
 Fld_2
  Prm_Lab  Constraints to be deleted
  Typ_LIS_OPTIONB
   LIS_All constraints ,ALL
   LIS_Symmetry        ,SYMM
   LIS_Antisymmetry    ,ASYM
:E END
:! 
:N Fnc_DALIST
:S    245,   128,   110
:T Cmd_P
:C )! Fnc_DALIST
:A On Picked Areas
:D List Area DOF Constraints
:H Hlp_C_DALIST
Inp_P
Cmd_DALIST
Fld_2
Typ_AREA
Prm_[DALIST] Pick or enter areas for DOF constraint listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_DA_a
:S    336,   191,   138
:T Cmd_P
:C )! Fnc_DA_a
:C )! Areas for DA command below
:A    On Areas
:D Apply A on Areas
:K ((PREP7*SOLUTION)+((edgeflx+VECTORP)*NOFILTER))
:H Hlp_C_DA
Inp_P
Cmd_)!
Fld_2
 Prm_[DA]  Pick or enter areas for vector potential specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_DA_a2
:E END
:! 
:N Fnc_DA_a2
:S    466,   108,   351
:T Command
:C )! Fnc_DA_a2
:D Apply A on Areas
:B Fnc_DA_a
:H Hlp_C_DA
Cmd_DA,P51X
Fld_0
 Typ_Lab
 Prm_[DA]  Apply Mag Vector Potential (A) on Areas
Fld_2
 Prm_Lab    DOFs to be constrained
 Typ_Lis
 LIS_*READ,DOF
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Vector poten (A) value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE  Real part of vector poten
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2 Imag part of vector poten
:E END
:! 
:N Fnc_DA_aN
:S    340,   206,   127
:T Cmd_P
:C )! Fnc_DA_aN
:A       On Areas
:D Apply FluxNorm on Areas
:K ((PREP7*SOLUTION)+((ELEM3D+VECTORP+edgeflx)*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DA
Inp_P
Cmd_DA
Fld_2
 Prm_[DA]  Pick or enter areas for flux-normal condition
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_SYMM
:E END
:! 
:N Fnc_DA_aP
:S    340,   204,   129
:T Cmd_P
:C )! Fnc_DA_aP
:A       On Areas
:D Apply Flux-P on Areas
:K ((PREP7*SOLUTION)+((ELEM3D+VECTORP+edgeflx)*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DA
Inp_P
Cmd_DA
Fld_2
 Prm_[DA]  Pick or enter areas for flux-parallel condition
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_ASYM
:E END
:! 
:N Fnc_DA_asym
:S    313,   178,   128
:T Cmd_P
:C )! Fnc_DA_asym
:A    On Areas
:D Apply ASYM on Areas
:K (lsdyna)
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DA
Inp_P
Cmd_DA
Fld_2
 Prm_[DA]  Pick or enter areas for antisymmetry condition
 Typ_AREA
 Min_1
 Pcn_1
 Cnt_s
Fld_3
 Typ_Def_ASYM
:E END
:! 
:N Fnc_DA_azN
:S    424,   180,   237
:T Command
:C )! Fnc_DA_azN
:A    Flux Normal
:D Flux Normal Condition on Areas or Nodes
:K ((PREP7*SOLUTION)+(EDGEFLX*NOFILTER))
:H Hlp_C_DA
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_                      - Note -
 Fld_0
  Typ_Lab
  Prm_  The flux-normal condition is a naturally occuring boundary
 Fld_0
  Typ_Lab
  Prm_    condition  and no boundary prescription is required.
:E END
:! 
:N Fnc_DA_azP
:S    346,   167,   172
:T Cmd_P
:C )! Fnc_DA_azP
:A       On Areas
:D Apply Flux Parallel on Areas
:K ((PREP7*SOLUTION)+(EDGEFLX*NOFILTER))
:H Hlp_C_DA
Inp_P
Cmd_DA
Fld_2
 Prm_[DA]  Pick or enter areas for flux-parallel condition
 Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_Def_AZ
Fld_4
 Typ_Def_0
Fld_5
 Typ_Def_0
:E END
:! 
:N Fnc_DA_flo
:S    367,   109,   251
:T Cmd_P
:C )! Fnc_DA_flo ORPHAN
:D Apply Area Constraints
:H Hlp_C_DA
Cmd_DA,P51X
Fld_0
 Typ_Lab
 Prm_[DA]  Apply Area Constraints
Fld_2
 Prm_Lab    DOFs to be constrained
 Typ_MLIS
 LIS_*READ,DOF
 Bnd_0.0,1.0
Fld_3
 Prm_VALUE Degree of freedom value
 Typ_REAL
Fld_4
 Typ_Logi,No,Yes
 Prm_Apply to boundary lines?
 Def_1
:E END
:! 
:N Fnc_DA_mag
:S    349,   197,   145
:T Cmd_P
:C )! Fnc_DA_mag
:C )! Areas for DA command below
:A    On Areas
:D Apply MAG on Areas
:K ((PREP7*SOLUTION)+((edgeflx+SCALARP)*NOFILTER))
:H Hlp_C_DA
Inp_P
Cmd_)!
Fld_2
  Prm_[DA]  Pick or enter nodes for scalar potential specification
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_DA_mag2
:E END
:! 
:N Fnc_DA_mag2
:S    430,   115,   308
:T Command
:C )! Fnc_D_mag2
:D Apply MAG on Areas
:B Fnc_DA_mag
:H Hlp_C_DA
Cmd_DA,P51X
Fld_0
 Typ_Lab
 Prm_[DA]  Apply Mag Scalar Potential (MAG) on Areas
Fld_2
 Typ_DEF_MAG
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE  Value of potential (MAG)
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE  Real part of scalar poten
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2 Imag part of scalar poten
:E END
:! 
:N Fnc_DA_magN
:S    355,   177,   171
:T Cmd_P
:C )! Fnc_DA_magN
:A       On Areas
:D Apply Flux Normal on Areas
:K ((PREP7*SOLUTION)+((edgeflx+SCALARP)*NOFILTER))
:H Hlp_C_DA
Inp_P
Cmd_DA
Fld_2
 Prm_[DA]  Pick or enter areas for flux-normal condition
 Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_Def_MAG
Fld_4
 Typ_Def_0
Fld_5
 Typ_Def_0
:E END
:! 
:N Fnc_DA_p
:S    326,   120,   199
:T Cmd_P
:C )! Fnc_DA_p ORPHAN
:A    On Areas
:D Apply Area Constraints
:H Hlp_C_DA
Inp_P
Cmd_)!
Fld_2
 Prm_[DA]  Pick or enter areas to be constrained
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cmd_)!
 Fld_2
 Typ_DEF_*GET(ACTIVE,,KEYWORD,,CFD)
Cal_Fnc_DA_p2,2,eq,0
Cal_Fnc_DA_flo,2,eq,1
:E END
:! 
:N Fnc_DA_p2
:S    287,   107,   173
:T Cmd_P
:C )! Fnc_DA_p2 ORPHAN
:D Apply Area Constraints
:H Hlp_C_DA
Cmd_DA,P51X
Fld_0
 Typ_Lab
 Prm_[DA]  Apply Area Constraints
Fld_2
 Prm_Lab  Constraints to be applied
 Typ_LIS_RADIOB
 LIS_Symmetry        ,SYMM
 LIS_Antisymmetry    ,ASYM
:E END
:! 
:N Fnc_DA_pec
:S    385,   206,   172
:T Cmd_P
:C )! Fnc_DA_pec
:A       On Areas
:D Apply Electric Wall condition on Areas
:K (((PREP7*SOLUTION)+EDGEELC)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DA
Inp_P
Cmd_DA
Fld_2
 Prm_[DA]  Pick or enter areas for Electric Wall condition
 Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_Def_AX
Fld_4
 Typ_Def_0
Fld_5
 Typ_Def_0
:E END
:! 
:N Fnc_DA_pmc
:S    440,   201,   232
:T Command
:C )! Fnc_DA_pmc
:A Magnetic Wall
:D Magnetic Wall condition on Areas
:K (((PREP7*SOLUTION)+EDGEELC)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DA
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_                      - Note -
 Fld_0
  Typ_Lab
  Prm_  Magnetic Wall condition is a naturally occuring
 Fld_0
  Typ_Lab
  Prm_  boundary condition and no boundary prescription is required.
:E END
:! 
:N Fnc_DA_pres
:S    695,   336,   352
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'DA'
:C )*SET,_z9,'PRES'
:C )*DEL,_zc
:C )*DIM,_zc,char,1
:C )*SET,_zc(1),'PRES'
:C )/GO
:C )! Fnc_DA_pres
:C )! Areas for DA command below
:A On Areas
:D Apply PRES on Areas
:K #((PREP7*SOLUTION)+(CFD*TFILM*NOFILTER))
:P (FLOTRAN)
:H Hlp_C_DA
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
Cmd_)/GO
! Exclude_from_paths
Cmd_ASEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DA]  Pick or enter areas for pressure specification
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,AREA
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_CFDLoad
:E END
:! 
:N Fnc_DA_spec
:S    820,   370,   443
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'DA'
:C )*SET,_z9,'SPEC'
:C )KEYW,KEY1,0
:C )*GET,_z1,FLDA,SPEC,NUMB
:C )*IF,_z1,le,0,then
:C )KEYW,KEY1,1
:C )*ENDIF
:C )/GO
:C )! Fnc_DA_spec
:C )! Areas for DA command below
:A On Areas
:D Apply Mass Frac on Areas
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:P (FLOTRAN)
:H Hlp_C_DA
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
K_CM(key1)
! Exclude_from_paths
Cmd_ASEL
K_CM(key1)
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DA]  Pick or enter areas for mass fraction specification
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,AREA
K_CM(key1)
! Exclude_from_paths
Cmd_CMSEL,S,_Y
K_CM(key1)
! Exclude_from_paths
Cmd_CMDELE,_Y
K_CM(key1)
Cmd_)!
 Fld_2
 Typ_Def_*GET(FLDA,SPEC,NUMB)
Cal_Fnc_Spec_VZ,2,gt,0
:E END
:! 
:N Fnc_DA_symm
:S    309,   178,   124
:T Cmd_P
:C )! Fnc_DA_symm
:A    On Areas
:D Apply SYMM on Areas
:K (lsdyna)
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DA
Inp_P
Cmd_DA
Fld_2
 Prm_[DA]  Pick or enter areas for symmetry condition
 Typ_AREA
 Min_1
 Pcn_1
 Cnt_s
Fld_3
 Typ_Def_SYMM
:E END
:! 
:N Fnc_DA_temp
:S    472,   306,   159
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'DA'
:C )*SET,_z9,'TEMP'
:C )/GO
:C )! Fnc_DA_temp
:C )! Areas for DA command below
:A On Areas
:D Apply TEMP on Areas
:K #((PREP7*SOLUTION)+(CFD*THERMAL*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG*FLOTRAN)
:H Hlp_C_DA
Inp_P
Cmd_)!
Fld_2
  Prm_[DA]  Pick or enter areas for temperature DOF specification
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Cust_Cmd_DA
Cal_Fnc_DA_temp2
:E END
:! 
:N Fnc_DA_temp2
:S    723,   200,   516
:T Command
:C )! Fnc_DA_temp2
:D Apply TEMP on Areas
:B Fnc_DA_temp
:H Hlp_C_DA
:C )/NOPR
:C )*SET,_z7,'DA'
:C )*SET,_z9,'TEMP'
:C )*SET,_z10,'Areas'
:C )/GOPR
cmd_)/NOPR
Cmd_)*CSET,1,14
Fld_0
 Typ_Lab
 Prm_[DA]  Apply TEMP on areas
Fld_2
 Prm_Lab2    DOFs to be constrained
 Typ_Lis
 LIS_All DOF,ALL
 LIS_*READ,DOF
Fld_9
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 Typ_REAL
 Prm_VALUE  Load TEMP value 
Fld_4
 Prm_KEXPND Apply TEMP to boundary lines?
 Typ_LOGI,No,Yes
! Cust_Cmd_DA
Cal_Fnc_thvalue,9,eq,0,2
Cal_Fnc_tholdtable,9,eq,1,2
Cal_Fnc_thnewtbl,9,eq,2,2
:E END
:! 
:N Fnc_DA_turb
:S    701,   335,   359
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'DA'
:C )*SET,_z9,'TURB'
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )*SET,_zc(1),'ENKE','ENDS'
:C )/GO
:C )! Fnc_DA_turb
:C )! Areas for DA command below
:A On Areas
:D Apply Turb on Areas
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:P (FLOTRAN)
:H Hlp_C_DA
Inp_P
Cmd_)/NOPR
! Exclude_from_paths 
Cmd_CM,_Y,AREA
Cmd_)/GO
! Exclude_from_paths 
Cmd_ASEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DA]  Pick or enter areas for turbulence specification
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths 
Cmd_CM,_Y1,AREA
! Exclude_from_paths 
Cmd_CMSEL,S,_Y
! Exclude_from_paths 
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_DA_u
:S    307,   162,   138
:T Cmd_P
:C )! Fnc_DA_u
:C )! Areas for DA command below
:A On Areas
:D Apply U,ROT on Areas
:K #(PREP7*SOLUTION)
:H Hlp_C_DA
Inp_P
Cmd_)!
 Fld_2
  Prm_[DA]  Pick or enter areas for displacement constraints
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_DA_u2
:E END
:! 
:N Fnc_DA_u2
:S    824,   193,   624
:T Command
:C )! Fnc_DA_u2
:C )/NOPR
:C )*SET,_z7,'DA'
:C )*SET,_z9,'U,ROT'
:C )*SET,_z10,'Areas'
:C )/GOPR
:D Apply U,ROT on Areas
:B Fnc_DA_u
:H Hlp_C_DA
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_Lab
 Prm_[DA]  Apply Displacements (U,ROT) on Areas
Fld_2
 Prm_Lab2    DOFs to be constrained
 Typ_Lis
 LIS_All DOF,ALL
 LIS_*READ,DOF
Fld_8
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Displacement value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE   Real part of disp
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2  Imag part of disp
cmd_)/GOPR
! Cust_Cmd_DA
Cal_Fnc_Stvalue,8,eq,0,2
Cal_Fnc_Stoldtable,8,eq,1,2
Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_DA_uCFD
:S    696,   333,   356
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'DA'
:C )*SET,_z9,'DISP'
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),'UX','UY','UZ'
:C )/GO
:C )! Fnc_DA_uCFD
:C )! Areas for DA command below
:A On Areas
:D Apply U on Areas
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:P (FLOTRAN)
:H Hlp_C_DA
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
Cmd_)/GO
! Exclude_from_paths
Cmd_ASEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DA]  Pick or enter areas for displacement specification
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,AREA
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_DA_v
:S    686,   327,   352
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'DA'
:C )*SET,_z9,'VELO'
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),'VX','VY','VZ'
:C )/GO
:C )! Fnc_DA_v
:C )! Areas for DA command below
:A On Areas
:D Apply V on Areas
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:P (FLOTRAN)
:H Hlp_C_DA
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,AREA
Cmd_)/GO
! Exclude_from_paths
Cmd_ASEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DA]  Pick or enter areas for velocity specification
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,AREA
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_DA_volt
:S    494,   338,   149
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'DA'
:C )*SET,_z9,'VOLT'
:C )/GO
:C )! Fnc_DA_volt
:C )! Areas for DA command below
:A    On Areas
:D Apply VOLT on Areas
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DA
Inp_P
Cmd_)!
Fld_2
  Prm_[DA]  Pick or enter areas for voltage specification
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Cust_Cmd_DA
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_DA_volt0
:S    441,   280,   154
:T Cmd_P
:C )! Fnc_DA_volt0
:C )! Areas for DA command below
:A       On Areas
:D Apply J-Normal condition on Areas
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DA
Inp_P
Cmd_DA
Fld_2
  Prm_[DA]  Pick or enter areas for J-Normal condition
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_DEF_VOLT
Fld_4
 Typ_DEF_0
:E END
:! 
:N Fnc_DA_volt0_ti
:S    438,   260,   171
:T Cmd_P
:C )! Fnc_DA_volt0_ti
:C )! Areas for DA command below
:A       On Areas
:D Apply J-Normal condition on Areas
:K ((PREP7*SOLUTION)+(elem3d+edgeelc+TIMEINTP)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DA
Inp_P
Cmd_DA
Fld_2
  Prm_[DA]  Pick or enter areas for J-Normal condition
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_DEF_VOLT
Fld_4
 Typ_DEF_0
Fld_5
 Typ_DEF_0
:E END
:! 
:N Fnc_DA_volt_ti
:S    482,   311,   164
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'areas'
:C )*SET,_z8,'DA'
:C )*SET,_z9,'VOLT'
:C )/GO
:C )! Fnc_DA_volt_ti
:C )! Areas for DA command below
:A    On Areas
:D Apply VOLT on Areas
:K ((PREP7*SOLUTION)+(TIMEINTP*NOFILTER)+edgeelc)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DA
Inp_P
Cmd_)!
Fld_2
  Prm_[DA]  Pick or enter areas for time-integrated potential specificat
  Typ_AREA
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Cust_Cmd_DA
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_DCUM
:S   1257,   376,   874
:T Command
:C )! Fnc_DCUM
:C )/NOPR
:C )*get,_z1,common,,loadcm,,int,1   ! New DOF values operations key 
:C )*IF,_z1,eq,0,then
:C )_z2='REPL'
:C )*ELSEIF,_z1,eq,1,then
:C )_z2='ADD'
:C )*ELSEIF,_z1,eq,-1,then
:C )_z2='IGNO'
:C )*ENDIF
:C )/GO
:A    Constraints
:D Replace/Add Setting for DOF Constraints
:K #(PREP7*SOLUTION)
:H Hlp_C_DCUM
Cmd_DOFSEL,S
 Fld_0
  Typ_Lab
  Prm_[DOFSEL] [DCUM]  Replace/Add Setting for DOF Constraints
 Fld_2
  Prm_[DOFSEL]  DOFs to be affected
  Typ_MLis
  LIS_*READ,DOF
  LIS_*READ,DDOF
  Bnd_0.0,6.0
Cmd_DCUM
 Fld_0
  Prm_[DCUM]
 Fld_2
  Prm_Oper   New DOF values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_z2)
 Fld_3
  K_FL(harmonic)
  Prm_RFACT  Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,1)
 Fld_3
  K_FL(HARMONIC*NOFILTER)
  Prm_RFACT  Scale factr for real part
  Typ_REAL
  Def_*GET(common,,loadcm,,real,1)
 Fld_4
  K_FL(HARMONIC*NOFILTER)
  Prm_IFACT  Scale factr for imag part
  Typ_REAL
  Def_*GET(common,,loadcm,,real,2)
 Fld_5
  Prm_TBASE  Base temperature -
  Typ_REAL
  Def_*GET(common,,loadcm,,real,5)
 Fld_0
  Typ_Lab
  Prm_       - used for temperature DOF only
Cmd_DOFSEL,ALL
:E END
:! 
:N Fnc_DDAM
:S    931,   171,   753
:T Command
:C )_z1=0
:C )_z2=0
:C )_z3=0
:A DDAM Options
:D Options for DDAM Spectrum
:K #(DDAM*NOFILTER)
:P (FULL_ANS)
:H Hlp_UI_ddam
Inp_NoApply
Cmd_ADDAM
 Fld_0
  Typ_Lab
  Prm_[ADDAM]  DDAM acel spectrum computation constants
 Fld_2
  Prm_A_f  Elas-plas acel coeff
  Typ_REAL
  Def_*PAR(_z1)
 Fld_3
  Prm_A_a,A_b   coeffs for DDAM acel
  Typ_REAL2
  Def_*PAR(_z1),*PAR(_z2)
 Fld_5
  Prm_A_c,A_d   coeffs for DDAM acel
  Typ_REAL2
  Def_*PAR(_z1),*PAR(_z2)
!
Cmd_VDDAM
 Fld_0
  Typ_Lab
  Prm_[VDDAM]  DDAM velo spectrum computation constants
 Fld_2
  Prm_V_f Elas-plas velo coeff
  Typ_REAL
  Def_*PAR(_z1)
 Fld_3
  Prm_V_a,V_b,V_c coeffs for DDAM velo
  Typ_REAL3
  Def_*PAR(_z1),*PAR(_z2),*PAR(_z3)
 Fld_0
  Typ_SEP
 Fld_0
!  
Cmd_SED
 Fld_0
  Typ_Lab
  Prm_[SED] Excitation direction in global Cartesian
 Fld_2
  Prm_SEDX, SEDY, SEDZ
  Typ_REAL3
  Def_*PAR(_z1),*PAR(_z2),*PAR(_z3)
:E END
:! 
:N Fnc_DDELE_a
:S    189,   151,    31
:T Cmd_P
:C )! Fnc_DDELE_a
:A    On Nodes
:D Delete A on Nodes
:K ((PREP7*SOLUTION)+(VECTORP+edgeflx)*NOFILTER)
Inp_P
Cmd_)!
Cal_Fnc_DDELE_uva
:E END
:! 
:N Fnc_DDELE_all
:S    335,   175,   153
:T Command
:C )! Fnc_DDELE_all
:A    On All Nodes
:D Delete All Constraints on All Selected Nodes
:K #(PREP7*SOLUTION)
:H Hlp_C_DDELE
Inp_NoApply
Cmd_DDELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[DDELE]  This function deletes all DOF constraints
Fld_0
 Typ_Lab
 Prm_         on all selected nodes!
:E END
:! 
:N Fnc_DDELE_azP
:S    334,   174,   153
:T Cmd_P
:C )! Fnc_DDELE_azP
:A    On Nodes
:D Delete Flux Parallel on Nodes
:K ((PREP7*SOLUTION)+(EDGEFLX*NOFILTER))
:H Hlp_C_DDELE
Inp_P
Cmd_DDELE
Fld_2
 Prm_[DDELE]  Pick or enter nodes for Flux Parallel condition deletion
 Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_Def_AZ
:E END
:! 
:N Fnc_DDELE_mag
:S    315,   172,   136
:T Cmd_P
:C )! Fnc_DDELE_mag
:A    On Nodes
:D Delete MAG on Nodes
:K ((PREP7*SOLUTION)+(SCALARP+edgeflx)*NOFILTER)
:H Hlp_C_DDELE
Inp_P
Cmd_DDELE
Fld_2
 Prm_[DDELE]  Pick or enter nodes for scalar potential deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_MAG
:E END
:! 
:N Fnc_DDELE_pec
:S    346,   196,   143
:T Cmd_P
:C )! Fnc_DDELE_pec
:A       On Nodes
:D Delete PEC on Nodes
:K (((PREP7*SOLUTION)+EDGEELC)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DDELE
Inp_P
Cmd_DDELE
Fld_2
 Prm_[DDELE]  Pick or enter nodes for Electric Wall deletion
 Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_Def_AX
:E END
:! 
:N Fnc_DDELE_pres
:S    284,   144,   133
:T Cmd_P
:C )! Fnc_DDELE_pres
:A On Nodes
:D Delete PRES on Nodes
:K #(PREP7*SOLUTION)
:H Hlp_C_DDELE
Inp_P
Cmd_DDELE
Fld_2
 Prm_[DDELE]  Pick or enter nodes for pressure DOF deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_PRES
:E END
:! 
:N Fnc_DDELE_spec
:S    756,   315,   434
:T Cmd_P
:C )! Fnc_DDELE_spec
:C )! Nodes for DDELE command below
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z1,FLDA,SPEC,NUMB
:C )*IF,_z1,le,0,then
:C )KEYW,KEY1,1
:C )*ENDIF
:C )/GO
:A On Nodes
:D Remove Mass Fraction on Nodes
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:H Hlp_C_DDELE
Inp_P
! Exclude_from_paths
Cmd_CM,_Y,NODE
K_CM(key1)
! Exclude_from_paths
Cmd_NSEL
K_CM(key1)
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DDELE]  Pick or enter nodes for mass fraction deletion
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,NODE
K_CM(key1)
! Exclude_from_paths
Cmd_CMSEL,S,_Y
K_CM(key1)
! Exclude_from_paths
Cmd_CMDELE,_Y
K_CM(key1)
Cmd_)!
 Fld_2
 Typ_Def_*GET(FLDA,SPEC,NUMB)
Cal_Fnc_DDELE_spec2,2,gt,0
:E END
:! 
:N Fnc_DDELE_spec2
:S   1108,   735,   366
:T Cmd
:C )! Fnc_DDELE_spec2
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0,KEY3,0
:C )KEYW,KEY4,0,KEY5,0,KEY6,0
:C )*GET,_Z2,FLDA,SPEC,NUMB
:C )*DEL,_zc
:C )*DIM,_zc,char4,_z2
:C )*IF,_z2,GE,1,THEN
:C )KEYW,KEY1,1
:C )*GET,_zc(1),MSSPEC,1,NAME
:C )*ENDIF
:C )*IF,_z2,GE,2,THEN
:C )KEYW,KEY2,1
:C )*GET,_zc(2),MSSPEC,2,NAME
:C )*ENDIF
:C )*IF,_z2,GE,3,THEN
:C )KEYW,KEY3,1
:C )*GET,_zc(3),MSSPEC,3,NAME
:C )*ENDIF
:C )*IF,_z2,GE,4,THEN
:C )KEYW,KEY4,1
:C )*GET,_zc(4),MSSPEC,4,NAME
:C )*ENDIF
:C )*IF,_z2,GE,5,THEN
:C )KEYW,KEY5,1
:C )*GET,_zc(5),MSSPEC,5,NAME
:C )*ENDIF
:C )*IF,_z2,GE,6,THEN
:C )KEYW,KEY6,1
:C )*GET,_zc(6),MSSPEC,6,NAME
:C )*ENDIF
:C )/GO
:D Apply Mass Fraction on Nodes
:H Hlp_C_DDELE
Inp_P
Cmd_DDELE,_Y1
K_CM(KEY1)
 Fld_2
 Typ_Def_*PAR(_zc(1))
Cmd_DDELE,_Y1
K_CM(KEY2)
 Fld_2
 Typ_Def_*PAR(_zc(2))
Cmd_DDELE,_Y1
K_CM(KEY3)
 Fld_2
 Typ_Def_*PAR(_zc(3))
Cmd_DDELE,_Y1
K_CM(KEY4)
 Fld_2
 Typ_Def_*PAR(_zc(4))
Cmd_DDELE,_Y1
K_CM(KEY5)
 Fld_2
 Typ_Def_*PAR(_zc(5))
Cmd_DDELE,_Y1
K_CM(KEY6)
 Fld_2
 Typ_Def_*PAR(_zc(6))
! Exclude_from_paths
Cmd_CMDELE,_Y1
:E END
:! 
:N Fnc_DDELE_temp
:S    280,   144,   129
:T Cmd_P
:C )! Fnc_DDELE_temp
:A On Nodes
:D Delete TEMP on Nodes
:K #(PREP7*SOLUTION)
:H Hlp_C_DDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[DDELE]  Pick or enter nodes for temperature deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Cal_Fnc_DDELE_temp2
:E END
:! 
:N Fnc_DDELE_temp2
:S    333,   137,   189
:T Command
:C )! Fnc_DDELE_temp2
:D Delete Node Constraints 
:B Fnc_DDELE_temp
:H Hlp_C_DDELE
Cmd_DDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[DDELE]  Delete DOF Constraints on Nodes 
 Fld_2
  Prm_Lab  DOFs to be deleted
  Typ_LIS_OPTIONB
   LIS_All DOF,ALL
   LIS_*READ,DOF
   LIS_*READ,DDOF
:E END
:! 
:N Fnc_DDELE_ti
:S    323,   174,   142
:T Cmd_P
:C )! Fnc_DDELE_ti
:A    On Nodes
:D Delete VOLT on Nodes
:K ((PREP7*SOLUTION)+((edgeelc+TIMEINTP)*NOFILTER))
:H Hlp_C_DDELE
Inp_P
Cmd_DDELE
Fld_2
 Prm_[DDELE]  Pick or enter nodes for time-integrated poten deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_VOLT
:E END
:! 
:N Fnc_DDELE_turb
:S    469,   150,   312
:T Cmd_P
:C )! Fnc_DDELE_turb
:A On Nodes
:D Delete turbulence on Nodes
:K #(PREP7*SOLUTION)
:H Hlp_C_DDELE
Inp_P
! Exclude_from_paths
Cmd_CM,_Y,NODE
! Exclude_from_paths
Cmd_NSEL
Fld_2
 Typ_Def_R
Fld_5
 Prm_[DDELE]  Pick or enter nodes for turbulence deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_DDELE_turb2
:E END
:! 
:N Fnc_DDELE_turb2
:S    460,   172,   281
:T Cmd
:C )! Fnc_DDELE_turb2
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0
:C )/GOPR
:A On Nodes
:D Delete turbulence on Nodes
:H Hlp_C_DDELE
Cmd_)/NOPR
   Fld_0
   Typ_Lab
   Prm_[DDELE] Delete turbulence constraints
Cmd_)KEYW,KEY1
   Fld_2
   Typ_Logi,No,Yes
   Prm_ENKE Delete Kinetic Energy
   Def_1
Cmd_)KEYW,KEY2
   Fld_2
   Typ_Logi,No,Yes
   Prm_ENDS Delete Energy Dissipation
   Def_1
Cmd_)/GO
Cal_Fnc_DDELE_turb3
:E END
:! 
:N Fnc_DDELE_turb3
:S    181,    72,   102
:T Cmd
:C )! Fnc_DDELE_turb3
Inp_P
Cmd_DDELE,_Y1,ENKE
K_CM(KEY1)
Cmd_DDELE,_Y1,ENDS
K_CM(KEY2)
! Exclude_from_paths
Cmd_CMDELE,_Y1
:E END
:! 
:N Fnc_DDELE_uva
:S    327,   181,   139
:T Cmd_P
:C )! Fnc_DDELE_uva
:C )! Nodes for DDELE command below
:A On Nodes
:D Delete Node Constraints
:K #(PREP7*SOLUTION)
:H Hlp_C_DDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[DDELE]  Pick or enter nodes for DOF constraint deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_DDELE_uva2
:E END
:! 
:N Fnc_DDELE_uva2
:S    328,   133,   188
:T Command
:C )! Fnc_DDELE_uva2
:D Delete Node Constraints
:B Fnc_DDELE_uva
:H Hlp_C_DDELE
Cmd_DDELE,P51X
 Fld_0
  Typ_Lab
  Prm_[DDELE]  Delete DOF Constraints on Nodes
 Fld_2
  Prm_Lab  DOFs to be deleted
  Typ_LIS_OPTIONB
   LIS_All DOF,ALL
   LIS_*READ,DOF
   LIS_*READ,DDOF
:E END
:! 
:N Fnc_DDELE_uva2CM
:S    353,   148,   198
:T Command
:C )! Fnc_DDELE_uva2CM
:D Delete Node ComponentConstraints
:B Fnc_DDELE_uvaCM
:H Hlp_C_DDELE
Cmd_DDELE,P51X
 Fld_0
  Typ_Lab
  Prm_[DDELE]  Delete DOF Constraints on Node Components
 Fld_2
  Prm_Lab  DOFs to be deleted
  Typ_LIS_OPTIONB
   LIS_All DOF,ALL
   LIS_*READ,DOF
   LIS_*READ,DDOF
:E END
:! 
:N Fnc_DDELE_uvaCM
:S    436,   278,   151
:T Cmd_P
:C )! Fnc_DDELE_uvaCM
:C )! Node Components for DDELE command below
:C )/UI,CMPF,NODE ! *** restrict picker to NODE components ***
:A On Node Components
:D Delete Node Component Constraints
:K #(PREP7*SOLUTION)
:H Hlp_C_DDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[DDELE]  Pick or enter node components for DOF constraint deletion
 Typ_COMP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_DDELE_uva2CM
:E END
:! 
:N Fnc_DDELE_v
:S    456,   142,   307
:T Cmd_P
:C )! Fnc_DDELE_v
:A On Nodes
:D Delete velocity on Nodes
:K #(PREP7*SOLUTION)
:H Hlp_C_DDELE
Inp_P
! Exclude_from_paths
Cmd_CM,_Y,NODE
! Exclude_from_paths
Cmd_NSEL
Fld_2
 Typ_Def_R
Fld_5
 Prm_[DDELE]  Pick or enter nodes for velocity deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_DDELE_v2
:E END
:! 
:N Fnc_DDELE_v2
:S    830,   194,   629
:T Cmd
:C )! Fnc_DDELE_v2
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0,KEY3,0
:C )KEYW,KEY4,0,KEY5,0
:C )/GOPR
:A On Nodes
:D Delete velocity on Nodes
:H Hlp_C_DDELE
Cmd_)/NOPR
   Fld_0
   Typ_Lab
   Prm_[DDELE] Delete velocity constraints
Cmd_)KEYW,KEY1
   Fld_2
   Typ_Logi,No,Yes
   Prm_VX Delete velocity
Cmd_)KEYW,KEY2
   Fld_2
   Typ_Logi,No,Yes
   Prm_VY Delete velocity
Cmd_)KEYW,KEY3
   Fld_2
   Typ_Logi,No,Yes
   Prm_VZ Delete velocity
Cmd_)KEYW,KEY4
   Fld_2
   Typ_Logi,No,Yes
   Prm_ENKE Delete moving wall
   Fld_0
   Typ_Lab
   Prm_     This also deletes ENKE other than moving wall
Cmd_)KEYW,KEY5
   Fld_2
   Typ_Logi,No,Yes
   Prm_ENDS Delete generalized symmetry
   Fld_0
   Typ_Lab
   Prm_     This also deletes ENDS other than generalized symmetry
Cmd_)/GO
Cal_Fnc_DDELE_v3
:E END
:! 
:N Fnc_DDELE_v3
:S    259,    66,   186
:T Cmd
:C )! Fnc_DDELE_v3
Inp_P
Cmd_DDELE,_Y1,VX
K_CM(KEY1)
Cmd_DDELE,_Y1,VY
K_CM(KEY2)
Cmd_DDELE,_Y1,VZ
K_CM(KEY3)
Cmd_DDELE,_Y1,ENKE
K_CM(KEY4)
Cmd_DDELE,_Y1,ENDS
K_CM(KEY5)
! Exclude_from_paths
Cmd_CMDELE,_Y1
:E END
:! 
:N Fnc_DDELE_volt
:S    344,   209,   128
:T Cmd_P
:C )! Fnc_DDELE_volt
:A    On Nodes
:D Delete VOLT on Nodes
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:H Hlp_C_DDELE
Inp_P
Cmd_DDELE
Fld_2
 Prm_[DDELE]  Pick or enter nodes for voltage deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_VOLT
:E END
:! 
:N Fnc_DDEL_p
:S    270,   128,   135
:T Cmd_P
:C )! Fnc_DDEL_p ORPHAN
:A    On Nodes
:D Delete Node Constraints
:H Hlp_C_DDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[DDELE]  Pick or enter nodes for DOF constraint deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_DDEL_p2
:E END
:! 
:N Fnc_DDEL_p2
:S    309,   132,   170
:T Command
:C )! Fnc_DDEL_p2 ORPHAN
:D Delete Node Constraints
:B Fnc_DDELE_p
:H Hlp_C_DDELE
Cmd_DDELE,P51X
 Fld_0
  Typ_Lab
  Prm_[DDELE]  Delete DOF Constraints on Nodes
 Fld_2
  Prm_Lab  DOFs to be deleted
  Typ_LIS_OPTIONB
   LIS_All DOF,ALL
   LIS_*READ,DOF
:E END
:! 
:N Fnc_DELTIM
:S    595,   146,   442
:T Command
:C )! Fnc_DELTIM ORPHAN
:A Time Step Size
:D Time Step Size
:K #(PREP7*SOLUTION)
:H Hlp_C_DELTIM
Cmd_DELTIM
 Fld_0
  Typ_Lab
  Prm_[DELTIM]  Time Step Size for the Current Load Step
 Fld_2
  Prm_DTIME  Time step size
  Typ_REAL
  Def_*GET(ACTIVE,,SOLU,DTIME)
Fld_0
Typ_SEP
 Fld_0
  Typ_Lab
  Prm_For automatic time stepping
 Fld_3
  Prm_DTMIN  Minimum time step
  Typ_REAL
 Fld_4
  Prm_DTMAX  Maximum time step
  Typ_REAL
 Fld_5
  Prm_Carry  Time step at each ld step
  Typ_LIS_OPTIONB
  LIS_Use DTIME       ,OFF
  LIS_Use previous val,ON
:E END
:! 
:N Fnc_DERIV
:S    508,   146,   355
:T Command
:C )! Fnc_DERIV
:A Derivative
:D Derivative of Time-History Variables
:K #(POST26)
:H Hlp_C_DERIV
Cmd_DERIV
Fld_0
Typ_Lab
Prm_[DERIV]        IR = FACTA * d(IY)/(d(IX))
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  Factor
Typ_real
Def_1.0
Fld_0
Prm_  
Fld_3
Prm_IY     1st Variable
Typ_int
Def_Blank
Fld_4
Prm_IX     2nd Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_DESIZE
:S   1832,   399,  1426
:T Command
:C )! Fnc_DESIZE
:C )/NOPR
:C )*GET,_z1,common,,cfprp7,,real,293  ! Minimum edge length  
:C )*GET,_z2,common,,cfprp7,,real,294  ! Maximum edge length  
:C )*IF,_z1,EQ,2**(-100),THEN
:C )_z1=' '
:C )*ENDIF
:C )*IF,_z2,EQ,2**(100),THEN
:C )_z2=' '
:C )*ENDIF
:C )/GO
:A     Other
:D Other Global Sizing Options
:! :K #(PREP7+smrtsize)
:H Hlp_C_DESIZE
Inp_NoApply
Cmd_DESIZE
 Fld_0
  Typ_Lab
  Prm_[DESIZE]  Other Global Sizing Options
 Fld_0
  Typ_Lab
  Prm_These settings are for mapped meshing and while 
 Fld_0
  Typ_Lab
  Prm_not recommended can be used for free meshing when 
 Fld_0
  Typ_Lab
  Prm_SmartSizing is off.
! 
 Fld_0
  Typ_Sep
! 
 Fld_0
  Typ_Lab
  Prm_Minimum number of divisions per line
 Fld_2
  Prm_  MINL  For lower-order elements
  Typ_INT
  Def_*GET(common,,cfprp7,,int,99)
 Fld_3
  Prm_  MINH  For higher-order elements
  Typ_INT
  Def_*GET(common,,cfprp7,,int,100)
! 
 Fld_0
  Typ_Sep
! 
 Fld_0
  Typ_Lab
  Prm_Maximum number of divisions per line
 Fld_4
  Typ_INT
  Prm_  MXEL  For lower + higher-order
  Def_*GET(common,,cfprp7,,int,101)
! 
 Fld_0
  Typ_Sep
! 
 Fld_0
  Prm_Maximum spanned angle for arcs
 Fld_5
  Prm_  ANGL  For lower-order elements
  Typ_REAL
  Def_*GET(common,,cfprp7,,int,97)
 Fld_6
  Prm_  ANGH  For higher-order element
  Typ_REAL
  Def_*GET(common,,cfprp7,,int,98)
! 
 Fld_0
  Typ_Sep
! 
 Fld_0
  Prm_Element size (edge length)
 Fld_7
  Prm_  EDGMN  Minimum edge length
  Typ_REAL
  Def_*PAR(_z1)
 Fld_8
  Prm_  EDGMX  Maximum edge length
  Typ_REAL
  Def_*PAR(_z2)
! 
 Fld_0
  Typ_Sep
! 
 Fld_0
  Typ_Lab
  Prm_Target aspect ratio for adjacent line
 Fld_9
  Prm_  ADJF  For free meshing
  Typ_REAL
  Def_*GET(common,,cfprp7,,real,295)
 Fld_10
  Prm_  ADJM  For mapped meshing
  Typ_REAL
  Def_*GET(common,,cfprp7,,real,296)
:E END
:! 
:N Fnc_DESOL
:S    359,   211,   141
:T Cmd_P
:C )! Fnc_DESOL
:C )! Elements for DESOL command below
:A    Elem Results
:D Modify Element Results
:K #(POST1)
:P (FULL_ANS*LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DESOL
Inp_P
Cmd_)!
 Fld_2
  Prm_[DESOL]  Pick or enter elements for results modification
  Typ_ELEM
  Min_1
  Cnt_S
  PCN_1
  PFM_1
Cal_Fnc_DESOL2
:E END
:! 
:N Fnc_DESOL2
:S  11381,   120, 11254
:T Command
:C )! Fnc_DESOL2
:D Modify Element Results
:B Fnc_DESOL
:H Hlp_C_DESOL
Cmd_DESOL,P51X
 Fld_0
  Typ_Lab
  Prm_[DESOL]  Modify Element Results
 Fld_2
  Prm_NODE       Node of element -
  Typ_int
  Def_ALL
 Fld_0
  Typ_Lab
  Prm_           - whose results are to be modified
!  
 Fld_3
K_FL(STRUCTRL+multifld)
  Prm_Item,Comp  Item to be modified
  Typ_IDX
!  
P_LN(LINPLUS)
IDX_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS)
IDX_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS)
IDX_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS)
IDX_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS)
IDX_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS)
IDX_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(FULL_ANS)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS)
IDX_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!  
P_LN(LINPLUS)
IDX_Nodal force data,Struct force  FX,F,X
P_LN(LINPLUS)
IDX_Nodal force data,              FY,F,Y
P_LN(LINPLUS)
IDX_Nodal force data,              FZ,F,Z
P_LN(LINPLUS)
IDX_Nodal force data,Struct moment MX,M,X
P_LN(LINPLUS)
IDX_Nodal force data,              MY,M,Y
P_LN(LINPLUS)
IDX_Nodal force data,              MZ,M,Z
!  
P_LN(FULL_ANS)
IDX_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
IDX_Energy          ,PlasStateVar PSV,NL,PSV
!  
P_LN(LINPLUS)
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS)
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS)
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS)
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS)
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS)
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
!  
P_LN(LINPLUS)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
!  
P_LN(FULL_ANS)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!  
P_LN(FULL_ANS)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
!  
P_LN(FULL_ANS)
IDX_Strain-other    ,Swelling    EPSW,EPSW,
!  
 Fld_3
K_FL(THERMAL+multifld)
P_FL(THERMAL)
  Prm_Item,Comp  Item to be modified
  Typ_IDX
IDX_Flux & gradient ,Thermal flux TFX,TF,X
IDX_Flux & gradient ,             TFY,TF,Y
IDX_Flux & gradient ,             TFZ,TF,Z
IDX_Flux & gradient ,Thermal grad TGX,TG,X
IDX_Flux & gradient ,             TGY,TG,Y
IDX_Flux & gradient ,             TGZ,TG,Z
!  
IDX_Nodal force data,Heat flow   HEAT,HEAT,
!  
 Fld_3
K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid)
  Prm_Item,Comp  Item to be modified
  Typ_IDX
P_LN(ELECMAG)
IDX_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFZ,EF,Z
!  
P_LN(ELECMAG)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
IDX_Nodal force data,Mag flux    FLUX,FLUX,
P_LN(ELECMAG)
IDX_Nodal force data,Curr segmt  CSGX,CSG,X
P_LN(ELECMAG)
IDX_Nodal force data,            CSGY,CSG,Y
P_LN(ELECMAG)
IDX_Nodal force data,            CSGZ,CSG,Z
P_LN(THERMAL*ELECMAG)
IDX_Nodal force data,Elec currnt AMPS,AMPS,
!  
 Fld_3
K_FL(FLUID+multifld)
  Prm_Item,Comp  Item to be modified
  Typ_IDX
P_LN(THERMAL)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
!  
P_LN(FULL_ANS)
IDX_Nodal force data,Flow rate   FLOW,FLOW,
P_LN(THERMAL)
IDX_Nodal force data,Heat flow   HEAT,HEAT,
!  
 Fld_3
K_FL(CFD)
  Prm_Item,Comp  Item to be modified
  Typ_IDX
P_LN(THERMAL)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
!  
P_LN(FULL_ANS)
IDX_Nodal force data,Flow rate   FLOW,FLOW,
P_LN(THERMAL)
IDX_Nodal force data,Heat flow   HEAT,HEAT,
!  
 Fld_3
K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID))
  Prm_Item,Comp  Item to be modified
  Typ_IDX
P_LN(LINPLUS)
IDX_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS)
IDX_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS)
IDX_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS)
IDX_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS)
IDX_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS)
IDX_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(FULL_ANS)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS)
IDX_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!  
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFZ,EF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
!  
P_LN(LINPLUS)
IDX_Nodal force data,Struct force  FX,F,X
P_LN(LINPLUS)
IDX_Nodal force data,              FY,F,Y
P_LN(LINPLUS)
IDX_Nodal force data,              FZ,F,Z
P_LN(LINPLUS)
IDX_Nodal force data,Struct moment MX,M,X
P_LN(LINPLUS)
IDX_Nodal force data,              MY,M,Y
P_LN(LINPLUS)
IDX_Nodal force data,              MZ,M,Z
P_LN(THERMAL)
IDX_Nodal force data,Heat flow   HEAT,HEAT,
P_LN(ELECMAG)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
IDX_Nodal force data,Mag flux    FLUX,FLUX,
P_LN(ELECMAG)
IDX_Nodal force data,Curr segmt  CSGX,CSG,X
P_LN(ELECMAG)
IDX_Nodal force data,            CSGY,CSG,Y
P_LN(ELECMAG)
IDX_Nodal force data,            CSGZ,CSG,Z
P_LN(THERMAL*ELECMAG)
IDX_Nodal force data,Elec currnt AMPS,AMPS,
P_LN(FULL_ANS)
IDX_Nodal force data,Flow rate   FLOW,FLOW,
P_LN(THERMAL)
IDX_Nodal force data,Heat flow   HEAT,HEAT,
!  
P_LN(FULL_ANS)
IDX_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
IDX_Energy          ,PlasStateVar PSV,NL,PSV
!  
P_LN(LINPLUS)
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS)
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS)
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS)
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS)
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS)
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
!  
P_LN(LINPLUS)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
!  
P_LN(FULL_ANS)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!  
P_LN(FULL_ANS)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
!  
P_LN(FULL_ANS)
IDX_Strain-other    ,Swelling    EPSW,EPSW,
!  
 Fld_4
  Prm_V1         Value to be assigned
  Typ_real
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Additional values to be assigned to remaining components of Item
 Fld_5
  Prm_V2         Second value
  Typ_real
  Def_Blank
 Fld_6
  Prm_V3         Third value
  Typ_real
  Def_Blank
 Fld_7
  Prm_V4         Fourth value
  Typ_real
  Def_Blank
 Fld_8
  Prm_V5         Fifth value
  Typ_real
  Def_Blank
 Fld_9
  Prm_V6         Sixth value
  Typ_real
  Def_Blank
:E END
:! 
:N Fnc_DETAB
:S    333,   176,   150
:T Cmd_P
:C )! Fnc_DETAB
:C )! Elements for DETABLE command below
:A    ElemTabl Data
:D Modify Elem Table Data
:K #(POST1)
:H Hlp_C_DETAB
Inp_P
Cmd_)!
  Fld_2
  Prm_[DETAB]  Pick or enter elements for element table modification
    Typ_ELEM
  Min_1
  Cnt_S
  PCN_1
  PFM_1
Cal_Fnc_DETAB2
:E END
:! 
:N Fnc_DETAB2
:S    752,   123,   622
:T Command
:C )! Fnc_DETAB2
:D Modify Element Table Data
:B Fnc_DETAB
:H Hlp_C_DETAB
Cmd_DETAB,P51X
 Fld_0
  Typ_Lab
  Prm_[DETAB]  Modify Element Table Data
  Fld_2
  Prm_Lab  Elem table item to modify
  Typ_LIS_OPTIONB
   LIS_*READ,ETAB
 Fld_3
  Prm_V1   Value to be assigned
  Typ_real
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Additional values to be assigned to successive element table columns
 Fld_4
  Prm_V2         Second value
  Typ_real
  Def_Blank
 Fld_5
  Prm_V3         Third value
  Typ_real
  Def_Blank
 Fld_6
  Prm_V4         Fourth value
  Typ_real
  Def_Blank
 Fld_7
  Prm_V5         Fifth value
  Typ_real
  Def_Blank
 Fld_8
  Prm_V6         Sixth value
  Typ_real
  Def_Blank
:E END
:! 
:N Fnc_DIST_KP
:S    191,    85,    99
:T Cmd_P
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3
Inp_P
Cmd_)*SET,_z(1)
 Fld_2
  Typ_Def_1
 Fld_3
  Typ_KP
  MOK_2
  Min_2
  Pfm_2
Cal_Fnc_DIST_KP_1
:E END
:! 
:N Fnc_DIST_KP_1
:S    444,   273,   164
:T Cmd
:C )/NOPR
:C )_z1=kX(_z(2))
:C )_z2=kX(_z(3))
:C )_z3=ky(_z(2))
:C )_z4=ky(_z(3))
:C )_z5=kz(_z(2))
:C )_z6=kz(_z(3))
:C )_z7=ABS(_z1-_z2)
:C )_z8=ABS(_z3-_z4)
:C )_z9=ABS(_z5-_z6)
:C )_z10=SQRT(_z7**2+_z8**2+_z9**2)
:C )/GO
Cmd_)!
 Fld_0
  Prm_DISTANCE BETWEEN KP'S %(I)_z(2)% AND %(I)_z(3)%
 Fld_0
  Prm_dX = %_z7%
 Fld_0
  Prm_dY = %_z8%
 Fld_0
  Prm_dZ = %_z9%
 Fld_0
  Prm_D = %_z10%
:E END
:! 
:N Fnc_DIST_ND
:S    193,    85,   101
:T Cmd_P
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3
Inp_P
Cmd_)*SET,_z(1)
 Fld_2
  Typ_Def_1
 Fld_3
  Typ_NODE
  MOK_2
  Min_2
  Pfm_2
Cal_Fnc_DIST_ND_1
:E END
:! 
:N Fnc_DIST_ND_1
:S    445,   273,   165
:T Cmd
:C )/NOPR
:C )_z1=NX(_z(2))
:C )_z2=NX(_z(3))
:C )_z3=Ny(_z(2))
:C )_z4=Ny(_z(3))
:C )_z5=Nz(_z(2))
:C )_z6=Nz(_z(3))
:C )_z7=ABS(_z1-_z2)
:C )_z8=ABS(_z3-_z4)
:C )_z9=ABS(_z5-_z6)
:C )_z10=SQRT(_z7**2+_z8**2+_z9**2)
:C )/GO
Cmd_)!
 Fld_0
  Prm_DISTANCE BETWEEN NODES %(I)_z(2)% AND %(I)_z(3)%
 Fld_0
  Prm_dX = %_z7%
 Fld_0
  Prm_dY = %_z8%
 Fld_0
  Prm_dZ = %_z9%
 Fld_0
  Prm_D = %_z10%
:E END
:! 
:N Fnc_DJDELE_all
:S    225,   192,    26
:T Command
:C )! Fnc_DJDELE_all
:D Delete All Displacements on Joints
:A    On Joint Elems
:K #((PREP7*SOLUTION)+(ELMJOINT*NOFILTER))
:H Hlp_C_DJDELE
Inp_P
 Cmd_DJDELE,ALL,ALL
:E END
:! 
:N Fnc_DJDE_joint
:S    556,   221,   328
:T Cmd_P
:C )! Fnc_DJDE_joint
:C )! Elems for DJDE command below
:A    On Joint Elems
:D Delete Displacements on Joints
:K #((PREP7*SOLUTION)+(ELMJOINT*NOFILTER))
:H Hlp_C_DJDELE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[DJDELE]  Pick or enter elements for displacement deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_DJDE_joint2
:E END
:! 
:N Fnc_DJDE_joint2
:S    675,   152,   516
:T Command
:C )! Fnc_DJDE_joint2
:D Delete Displacements on Joint Elements
:B Fnc_DJDE_joint
:H Hlp_C_DJDELE
Inp_NoApply
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
Cmd_)/GO
Cmd_DJDELE,ALL
Fld_0
 Typ_Lab
 Prm_[DJDELE]  Delete Displacements on Joint Elements
Fld_2
 Prm_Lab    Constraint to be deleted
 Typ_LIS_OPTIONB
 LIS_ALL       ,ALL
 LIS_UX        ,UX
 LIS_UY        ,UY
 LIS_UZ        ,UZ
 LIS_ROTX      ,ROTX
 LIS_ROTY      ,ROTY
 LIS_ROTZ      ,ROTZ
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_DJLIST
:S    253,   139,   107
:T Cmd_P
:C )! Fnc_DJLIST
:A On Picked Element
:D List Joint Element DOF Constraints
:H Hlp_C_DJLIST
Inp_P
Cmd_DJLIST
Fld_2
Typ_ELEM
Prm_[FDLIST] Pick or enter joint element for DOF listing
Min_1
Cnt_1
Pcn_1
:E End
:! 
:N Fnc_DJ_joint
:S    542,   210,   325
:T Cmd_P
:C )! Fnc_DJ_joint
:C )! Elems for DJ command below
:A    On Joint Elems
:D Apply Displacements on Joints
:K #((PREP7*SOLUTION)+(ELMJOINT*NOFILTER))
:H Hlp_C_DJ
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[DJ]  Pick or enter elements for displacement constraints
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_DJ_joint2
:E END
:! 
:N Fnc_DJ_joint2
:S    681,   140,   534
:T Command
:C )! Fnc_DJ_joint2
:D Apply Displacements on Joint Elements
:B Fnc_DJ_joint
:H Hlp_C_D
Inp_NoApply
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
Cmd_)/GO
Cmd_DJ,ALL
Fld_0
 Typ_Lab
 Prm_[DJ]  Apply Displacements on Joint Elements
Fld_2
 Prm_Lab2    DOFs to be constrained
 Typ_LIS_OPTIONB
 LIS_UX        ,UX
 LIS_UY        ,UY
 LIS_UZ        ,UZ
 LIS_ROTX      ,ROTX
 LIS_ROTY      ,ROTY
 LIS_ROTZ      ,ROTZ
Fld_3
 Typ_REAL
 Prm_VALUE   Displacement value
! Exclude_from_paths
Cmd_)/NOPR
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_DKDELE_a
:S    223,   184,    32
:T Cmd_P
:C )! Fnc_DKDELE_a
:A    On Keypoints
:D Delete A on KPs
:K ((PREP7*SOLUTION)+(VECTORP+edgeflx)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Cal_Fnc_DKDELE_uva
:E END
:! 
:N Fnc_DKDELE_all
:S    460,   209,   244
:T Command
:C )! Fnc_DKDELE_all
:A    On All KPs
:D Delete All Constraints on All Selected Keypoints
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DKDELE
Inp_NoApply
Cmd_DKDELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[DKDELE]  This function deletes all DOF constraints
Fld_0
 Typ_Lab
 Prm_          on all selected keypoints and on all selected
Fld_0
 Typ_Lab
 Prm_          nodes attached to those keypoints!
:E END
:! 
:N Fnc_DKDELE_ends
:S    347,   195,   145
:T Cmd_P
:C )! Fnc_DKDELE_ends
:A On Keypoints
:D Delete ENDS on KPs
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DKDELE
Inp_P
Cmd_DKDELE
Fld_2
 Prm_[DKDELE]  Pick or enter keypoints for turb energy dissip deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_ENDS
:E END
:! 
:N Fnc_DKDELE_enke
:S    348,   195,   146
:T Cmd_P
:C )! Fnc_DKDELE_enke
:A On Keypoints
:D Delete ENKE on KPs
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DKDELE
Inp_P
Cmd_DKDELE
Fld_2
 Prm_[DKDELE]  Pick or enter keypoints for turb kinetic energy deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_ENKE
:E END
:! 
:N Fnc_DKDELE_mag
:S    355,   206,   142
:T Cmd_P
:C )! Fnc_DKDELE_mag
:A    On Keypoints
:D Delete MAG on KPs
:K ((PREP7*SOLUTION)+(SCALARP+edgeflx)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DKDELE
Inp_P
Cmd_DKDELE
Fld_2
 Prm_[DKDELE]  Pick or enter keypoints for scalar potential deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_MAG
:E END
:! 
:N Fnc_DKDELE_pres
:S    341,   195,   139
:T Cmd_P
:C )! Fnc_DKDELE_pres
:A On Keypoints
:D Delete PRES on KPs
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DKDELE
Inp_P
Cmd_DKDELE
Fld_2
 Prm_[DKDELE]  Pick or enter keypoints for pressure DOF deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_PRES
:E END
:! 
:N Fnc_DKDELE_temp
:S    340,   195,   138
:T Cmd_P
:C )! Fnc_DKDELE_temp
:A On Keypoints
:D Delete TEMP on KPs
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DKDELE
Inp_P
Cmd_DKDELE
Fld_2
 Prm_[DKDELE]  Pick or enter keypoints for temperature deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_TEMP
:E END
:! 
:N Fnc_DKDELE_ti
:S    362,   207,   148
:T Cmd_P
:C )! Fnc_DKDELE_ti
:A    On Keypoints
:D Delete VOLT on KPs
:K ((PREP7*SOLUTION)+(TIMEINTP+edgeelc)*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DKDELE
Inp_P
Cmd_DKDELE
Fld_2
 Prm_[DKDELE]  Pick or enter keypoints for time-integrated poten deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_VOLT
:E END
:! 
:N Fnc_DKDELE_uva
:S    400,   249,   144
:T Cmd_P
:C )! Fnc_DKDELE_uva
:C )! Keypoints for DKDELE command Below
:A On Keypoints
:D Delete KP Constraints
:K (lsdyna)
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DKDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[DKDELE]  Pick or enter keypoints for DOF constraint deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_DKDELE_uva2
:E END
:! 
:N Fnc_DKDELE_uva2
:S    318,   135,   176
:T Command
:C )! Fnc_DKDELE_uva2
:D Delete KP Constraints
:B Fnc_DKDELE_uva
:H Hlp_C_DKDELE
Cmd_DKDELE,P51X
 Fld_0
  Typ_Lab
  Prm_[DKDELE]  Delete DOF Constraints on Keypoints
 Fld_2
  Prm_Lab  DOFs to be deleted
  Typ_LIS_OPTIONB
   LIS_All DOF,ALL
   LIS_*READ,DOF
:E END
:! 
:N Fnc_DKDELE_volt
:S    384,   243,   134
:T Cmd_P
:C )! Fnc_DKDELE_volt
:A    On Keypoints
:D Delete VOLT on KPs
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DKDELE
Inp_P
Cmd_DKDELE
Fld_2
 Prm_[DKDELE]  Pick or enter keypoints for voltage deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_VOLT
:E END
:! 
:N Fnc_DKDEL_p
:S    277,   133,   137
:T Cmd_P
:C )! Fnc_DKDEL_p ORPHAN
:A    On Keypoints
:D Delete KP Constraints
:H Hlp_C_DKDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[DKDELE]  Pick or enter keypoints for constraint deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_DKDEL_p2
:E END
:! 
:N Fnc_DKDEL_p2
:S    317,   134,   176
:T Command
:C )! Fnc_DKDEL_p2 ORPHAN
:D Delete KP Constraints
:B Fnc_DKDELE_p
:H Hlp_C_DKDELE
Cmd_DKDELE,P51X
 Fld_0
  Typ_Lab
  Prm_[DKDELE]  Delete DOF Constraints on Keypoints
 Fld_2
  Prm_Lab  DOFs to be deleted
  Typ_LIS_OPTIONB
   LIS_All DOF,ALL
   LIS_*READ,DOF
:E END
:! 
:N Fnc_DKLIST
:S    248,   127,   114
:T Cmd_P
:C )! Fnc_DKLIST
:A On Picked KPs
:D List Keypt DOF Constraints
:H Hlp_C_DKLIST
Inp_P
Cmd_DKLIST
Fld_2
Typ_KEYP
Prm_[DKLIST] Pick or enter keypoints for DOF constraint listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_DK_a
:S    378,   226,   145
:T Cmd_P
:C )! Fnc_DK_a
:C )! Keypoints for DK command below
:A    On Keypoints
:D Apply A on KPs
:K ((PREP7*SOLUTION)+((edgeflx+VECTORP)*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
  Prm_[DK]  Pick or enter keypoints for vector potential specification
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_DK_a2
:E END
:! 
:N Fnc_DK_a2
:S    555,   106,   442
:T Command
:C )! Fnc_DK_a2
:D Apply A on KPs
:H Hlp_C_DK
:B Fnc_DK_a
Cmd_DK,P51X
Fld_0
 Typ_Lab
 Prm_[DK]  Apply Mag Vector Potential (A) on Keypoints
Fld_6
 Prm_Lab     DOFs to be constrained
 Typ_MLis
 LIS_All DOF,ALL
 LIS_*READ,DOF
 Bnd_0.0,6.0
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Vector poten (A) value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE  Real part of vector poten
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2 Imag part of vector poten
Fld_5
 Prm_KEXPND  Expand A to nodes?
 Typ_LOGI,No,Yes
:E END
:! 
:N Fnc_DK_enke
:S    372,   214,   151
:T Cmd_P
:C )! Fnc_DK_enke
:C )! Keypoints for DK command below
:A On Keypoints
:D Apply ENKE on KPs
:K (lsdyna)
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
  Prm_[DK]  Pick or enter keypoints for turb kinetic energy specification
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_DK_enke2
:E END
:! 
:N Fnc_DK_enke2
:S    342,   118,   217
:T Command
:C )! Fnc_DK_enke2
:D Apply ENKE on KPs
:B Fnc_DK_enke
:H Hlp_C_DK
Cmd_DK,P51X
Fld_0
 Typ_Lab
 Prm_[DK]  Apply Turbulent Kinetic Energy (ENKE) on KPs
Fld_2
 Prm_
 Typ_DEF_ENKE
Fld_3
 Typ_REAL
 Prm_VALUE   Turbulent K.E. value
Fld_5
 Prm_KEXPND  Expand ENKE to nodes?
 Typ_LOGI,No,Yes
:E END
:! 
:N Fnc_DK_mag
:S    386,   232,   147
:T Cmd_P
:C )! Fnc_DK_mag
:C )! Keypoints for DK command below
:A    On Keypoints
:D Apply MAG on KPs
:K ((PREP7*SOLUTION)+((edgeflx+SCALARP)*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
  Prm_[DK]  Pick or enter keypoints for scalar potential specification
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_DK_mag2
:E END
:! 
:N Fnc_DK_mag2
:S    491,   114,   370
:T Command
:C )! Fnc_DK_mag2
:D Apply MAG on KPs
:B Fnc_DK_mag
:H Hlp_C_DK
Cmd_DK,P51X
Fld_0
 Typ_Lab
 Prm_[DK]  Apply Mag Scalar Potential (MAG) on Keypoints
Fld_2
 Typ_DEF_MAG
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Scalar poten (MAG) value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE  Real part of scalar poten
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2 Imag part of scalar poten
Fld_5
 Prm_KEXPND  Expand MAG to nodes?
 Typ_LOGI,No,Yes
:E END
:! 
:N Fnc_DK_mult_del
:S    401,   244,   150
:T Cmd_P
:C )! Fnc_DK_mult_del
:C )! Keypoints for DK command below
:A    On Keypoints
:D Delete Base MultiPt on KPs
:K #((PREP7*SOLUTION)+(MULTIPNT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
 Prm_[DK]  Pick or enter keypoints for base multi-pt spectrum deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_DK_mult_del2
:E END
:! 
:N Fnc_DK_mult_del2
:S    381,   139,   235
:T Command
:C )! Fnc_DK_mult_del2
:D Delete Base MultiPt on KPs
:B Fnc_DK_mult_del
:H Hlp_C_DK
Cmd_DK,P51X
Fld_0
 Typ_Lab
 Prm_[DK]  Delete Base Multi-Point Spectrum on Keypoints
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,UX
 LIS_Nodal Y         ,UY
 LIS_Nodal Z         ,UZ
Fld_3
 Typ_DEF_0.0
:E END
:! 
:N Fnc_DK_multi
:S    385,   237,   141
:T Cmd_P
:C )! Fnc_DK_multi
:C )! Keypoints for DK command below
:A    On Keypoints
:D Apply Base MultiPt on KPs
:K #((PREP7*SOLUTION)+(MULTIPNT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
 Prm_[DK]  Pick or enter keypoints for base multi-point spectrum
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_DK_multi2
:E END
:! 
:N Fnc_DK_multi2
:S    431,   129,   295
:T Command
:C )! Fnc_DK_multi2
:D Apply Base MultiPt on KPs
:B Fnc_DK_multi
:H Hlp_C_DK
Cmd_DK,P51X
Fld_0
 Typ_Lab
 Prm_[DK]  Apply Base Multi-Point Spectrum on Keypoints
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,UX
 LIS_Nodal Y         ,UY
 LIS_Nodal Z         ,UZ
Fld_3
 Typ_DEF_1.0
Fld_5
 Prm_KEXPND  Expand Spectrm to nodes?
 Typ_LOGI,No,Yes
:E END
:! 
:N Fnc_DK_p
:S    253,   122,   124
:T Cmd_P
:C )! Fnc_DK_p ORPHAN
:A    On Keypoints
:D Apply KP Constraints
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
 Prm_[DK]  Pick or enter keypoints to be constrained
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_DK_p2
:E END
:! 
:N Fnc_DK_p2
:S    453,   119,   327
:T Command
:C )! Fnc_DK_p2 ORPHAN
:D Apply KP Constraints
:B Fnc_DK_p
:H Hlp_C_DK
Cmd_DK,P51X
Fld_0
 Typ_Lab
 Prm_[DK]  Apply DOF Constraints on Keypoints
Fld_6
 Prm_Lab2    DOFs to be constrained
 Typ_MLIS
 LIS_All DOF,ALL
 LIS_*READ,DOF
Fld_0
 Typ_Lab
 Prm_VALUE,VALUE2  Constraint values -
Fld_3
 Typ_REAL2
 Prm_      - real and imaginary parts
Fld_5
 Prm_KEXPND  Expand constr. to nodes?
 Typ_LOGI,No,Yes
:E END
:! 
:N Fnc_DK_pres
:S    709,   352,   350
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'kpnts'
:C )*SET,_z8,'DK'
:C )*SET,_z9,'PRES'
:C )*DEL,_zc
:C )*DIM,_zc,char,1
:C )*SET,_zc(1),'PRES'
:C )/GO
:C )! Fnc_DK_pres
:C )! Keypoints for DK command below
:A On Keypoints
:D Apply PRES on KPs
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,KP
Cmd_)/GO
! Exclude_from_paths
Cmd_KSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DK]  Pick or enter keypoints for pressure specification
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,KP
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_CFDLoad
:E END
:! 
:N Fnc_DK_psd
:S    369,   229,   133
:T Cmd_P
:C )! Fnc_DK_psd
:C )! Keypoints for DK command below
:A    On Keypoints
:D Apply Base PSD on KPs
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
 Prm_[DK]  Pick or enter keypoints for base PSD excitation
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_DK_psd2
:E END
:! 
:N Fnc_DK_psd2
:S    492,   119,   366
:T Command
:C )! Fnc_DK_psd2
:D Apply Base PSD on KPs
:B Fnc_DK_psd
:H Hlp_C_DK
Cmd_DK,P51X
Fld_0
 Typ_Lab
 Prm_[DK]  Apply Base PSD Excitation on Keypoints
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,UX
 LIS_Nodal Y         ,UY
 LIS_Nodal Z         ,UZ
 LIS_Nodal ROTX      ,ROTX
 LIS_Nodal ROTY      ,ROTY
 LIS_Nodal ROTZ      ,ROTZ
Fld_3
 Typ_DEF_1.0
Fld_5
 Prm_KEXPND  Expand PSD to nodes?
 Typ_LOGI,No,Yes
:E END
:! 
:N Fnc_DK_psd_dele
:S    383,   240,   136
:T Cmd_P
:C )! Fnc_DK_psd_dele
:C )! Keypoints for DK command below
:A    On Keypoints
:D Delete Base PSD on KPs
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
 Prm_[DK]  Pick or enter keypoints for base PSD deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_DK_psd_dele2
:E END
:! 
:N Fnc_DK_psd_dele2
:S    452,   135,   310
:T Command
:C )! Fnc_DK_psd_dele2
:D Delete Base PSD on KPs
:B Fnc_DK_psd_dele
:H Hlp_C_DK
Cmd_DK,P51X
Fld_0
 Typ_Lab
 Prm_[DK]  Delete Base PSD Excitation on Keypoints
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,UX
 LIS_Nodal Y         ,UY
 LIS_Nodal Z         ,UZ
 LIS_Nodal ROTX      ,ROTX
 LIS_Nodal ROTY      ,ROTY
 LIS_Nodal ROTZ      ,ROTZ
Fld_3
 Typ_DEF_0.0
:E END
:! 
:N Fnc_DK_temp
:S    460,   296,   157
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'kpnts'
:C )*SET,_z8,'DK'
:C )*SET,_z9,'TEMP'
:C )/GO
:C )! Fnc_DK_temp
:C )! Keypoints for DK command below
:A On Keypoints
:D Apply TEMP on KPs
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
  Prm_[DK]  Pick or enter keypoints for temperature specification
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Cust_Cmd_DK
Cal_Fnc_DK_temp2
:E END
:! 
:N Fnc_DK_temp2
:S    735,   202,   526
:T Command
:C )! Fnc_DK_temp2
:D Apply TEMP on Keypoints
:B Fnc_DK_temp
:H Hlp_C_DK
:C )/NOPR
:C )*SET,_z7,'DK'
:C )*SET,_z9,'TEMP'
:C )*SET,_z10,'KPs'
:C )/GOPR
cmd_)/NOPR
Cmd_)*CSET,1,14
Fld_0
 Typ_Lab
 Prm_[DK]  Apply TEMP on Keypoints
Fld_6
 Prm_Lab2    DOFs to be constrained
 Typ_MLis
 LIS_All DOF,ALL
 LIS_*READ,DOF
 Bnd_1.0,6.0
Fld_4
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 Typ_REAL
 Prm_VALUE  Load TEMP value 
Fld_5
 Prm_KEXPND  Apply TEMP to nodes?
 Typ_LOGI,No,Yes
! Cust_Cmd_DK
Cal_Fnc_thvalue,4,eq,0,2
Cal_Fnc_tholdtable,4,eq,1,2
Cal_Fnc_thnewtbl,4,eq,2,2
:E END
:! 
:N Fnc_DK_u
:S    352,   209,   136
:T Cmd_P
:C )! Fnc_DK_u
:C )! Keypoints for DK command below
:A On Keypoints
:D Apply U,ROT on KPs
:K (lsdyna)
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
 Prm_[DK]  Pick or enter keypoints for displacement constraints
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_DK_u2
:E END
:! 
:N Fnc_DK_u2
:S    896,   189,   700
:T Command
:C )! Fnc_DK_u2
:D Apply U,ROT on KPs
:B Fnc_DK_u
:H Hlp_C_DK
:C )/NOPR
:C )*SET,_z7,'DK'
:C )*SET,_z9,'U,ROT'
:C )*SET,_z10,'KPs'
:C )/GOPR
cmd_)/NOPR
Cmd_)*CSET,1,15
Fld_0
 Typ_Lab
 Prm_[DK]  Apply Displacements (U,ROT) on Keypoints
Fld_6
 Prm_Lab2    DOFs to be constrained
 Typ_MLis
 LIS_All DOF,ALL
 LIS_*READ,DOF
 Bnd_0.0,6.0
Fld_2
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Displacement value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE   Real part of disp
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2  Imag part of disp
Fld_5
 Prm_KEXPND  Expand disp to nodes?
 Typ_LOGI,No,Yes
cmd_)/GOPR
! Cust_Cmd_DK
Cal_Fnc_Stvalue,2,eq,0,2
Cal_Fnc_Stoldtable,2,eq,1,2
Cal_Fnc_Stnewtbl,2,eq,2,2
:E END
:! 
:N Fnc_DK_uCFD
:S    718,   357,   354
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'kpnts'
:C )*SET,_z8,'DK'
:C )*SET,_z9,'DISP'
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),'UX','UY','UZ'
:C )/GO
:C )! Fnc_DK_uCFD
:C )! Keypoints for DK command below
:A On Keypoints
:D Apply U on KPs
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,KP
Cmd_)/GO
! Exclude_from_paths
Cmd_KSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DK]  Pick or enter keypoints for displacement specification
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,KP
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_DK_v
:S    708,   351,   350
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'kpnts'
:C )*SET,_z8,'DK'
:C )*SET,_z9,'VELO'
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),'VX','VY','VZ'
:C )/GO
:C )! Fnc_DK_v
:C )! Keypoints for DK command below
:A On Keypoints
:D Apply V on KPs
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,KP
Cmd_)/GO
! Exclude_from_paths
Cmd_KSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DK]  Pick or enter keypoints for velocity specification
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,KP
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_DK_volt
:S    502,   344,   151
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'kpnts'
:C )*SET,_z8,'DK'
:C )*SET,_z9,'VOLT'
:C )/GO
:C )! Fnc_DK_volt
:C )! Keypoints for DK command below
:A    On Keypoints
:D Apply VOLT on KPs
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
  Prm_[DK]  Pick or enter keypoints for voltage specification
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Cust_Cmd_DK
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_DK_volt_ti
:S    493,   317,   169
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'kpnts'
:C )*SET,_z8,'DK'
:C )*SET,_z9,'VOLT'
:C )/GO
:C )! Fnc_DK_volt_ti
:C )! Keypoints for DK command below
:A    On Keypoints
:D Apply VOLT on KPs
:K ((PREP7*SOLUTION)+(TIMEINTP*NOFILTER)+edgeelc)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
  Prm_[DK]  Pick or enter keypoints for time-integrated potential specification
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Cust_Cmd_DK
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_DLDELE
:S    321,   177,   137
:T Cmd_P
:C )! Fnc_DLDELE
:C )! Lines for DLDELE command below
:A On Lines
:D Delete Line Constraints
:K #(PREP7*SOLUTION)
:H Hlp_C_DLDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[DLDELE]  Pick or enter lines for DOF constraint deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_DLDELE2
:E END
:! 
:N Fnc_DLDELE2
:S    369,   125,   237
:T Command
:C )! Fnc_DLDELE2
:D Delete Line Constraints
:B Fnc_DLDELE
:H Hlp_C_DLDELE
Cmd_DLDELE,P51X
 Fld_0
  Typ_Lab
  Prm_[DLDELE]  Delete DOF Constraints on Lines
 Fld_2
  Prm_Lab  Constraints to be deleted
  Typ_LIS_OPTIONB
   LIS_All DOF,ALL
   LIS_*READ,DOF
   LIS_Symmetry        ,SYMM
   LIS_Antisymmetry    ,ASYM
:E END
:! 
:N Fnc_DLDELE_a
:S    306,   182,   117
:T Cmd_P
:C )! Fnc_DLDELE_a
:A    On Lines
:D Delete A on Lines
:K ((PREP7*SOLUTION)+(VECTORP+edgeflx)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[DLDELE]  Pick or enter lines for deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Cal_Fnc_DLDELE_uva
:E END
:! 
:N Fnc_DLDELE_all
:S    421,   178,   236
:T Command
:C )! Fnc_DLDELE_all
:A    On All Lines
:D Delete All Constraints on All Selected Lines
:K #(PREP7*SOLUTION)
:H Hlp_C_DLDELE
Inp_NoApply
Cmd_DLDELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[DLDELE]  This function deletes all DOF constraints
Fld_0
 Typ_Lab
 Prm_          on all selected lines and on all selected
Fld_0
 Typ_Lab
 Prm_          nodes attached to those lines!
:E END
:! 
:N Fnc_DLDELE_pec
:S    340,   199,   134
:T Cmd_P
:C )! Fnc_DLDELE_pec
:A       On Lines
:D Delete PEC on Lines
:K (((PREP7*SOLUTION)+EDGEELC)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DLDELE
Inp_P
Cmd_DLDELE
Fld_2
 Prm_[DLDELE]  Pick or enter lines for Electric Wall deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_AX
:E END
:! 
:N Fnc_DLDELE_pres
:S    349,   207,   135
:T Cmd_P
:C )! Fnc_DLDELE_pres
:A On Lines
:D Delete PRES on LINES
:K #((PREP7*SOLUTION)+(CFD*TFILM*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG*FLOTRAN)
:H Hlp_C_DLDELE
Inp_P
Cmd_DLDELE
Fld_2
 Prm_[DLDELE]  Pick or enter lines for pressure DOF deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_PRES
:E END
:! 
:N Fnc_DLDELE_spec
:S    762,   319,   436
:T Cmd_P
:C )! Fnc_DLDELE_spec
:C )! Lines for DLDELE command below
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z1,FLDA,SPEC,NUMB
:C )*IF,_z1,le,0,then
:C )KEYW,KEY1,1
:C )*ENDIF
:C )/GO
:A On Lines
:D Remove Mass Fraction on Lines
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:H Hlp_C_DLDELE
Inp_P
! Exclude_from_paths
Cmd_CM,_Y,LINE
K_CM(key1)
! Exclude_from_paths
Cmd_LSEL
K_CM(key1)
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DLDELE]  Pick or enter lines for mass fraction deletion
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,LINE
K_CM(key1)
! Exclude_from_paths
Cmd_CMSEL,S,_Y
K_CM(key1)
! Exclude_from_paths
Cmd_CMDELE,_Y
K_CM(key1)
Cmd_)!
 Fld_2
 Typ_Def_*GET(FLDA,SPEC,NUMB)
Cal_Fnc_DLDELE_spec2,2,gt,0
:E END
:! 
:N Fnc_DLDELE_spec2
:S   1144,   765,   372
:T Cmd
:C )! Fnc_DLDELE_spec2
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0,KEY3,0
:C )KEYW,KEY4,0,KEY5,0,KEY6,0
:C )*GET,_Z2,FLDA,SPEC,NUMB
:C )*DEL,_zc
:C )*DIM,_zc,char4,_z2
:C )*IF,_z2,GE,1,THEN
:C )KEYW,KEY1,1
:C )*GET,_zc(1),MSSPEC,1,NAME
:C )*ENDIF
:C )*IF,_z2,GE,2,THEN
:C )KEYW,KEY2,1
:C )*GET,_zc(2),MSSPEC,2,NAME
:C )*ENDIF
:C )*IF,_z2,GE,3,THEN
:C )KEYW,KEY3,1
:C )*GET,_zc(3),MSSPEC,3,NAME
:C )*ENDIF
:C )*IF,_z2,GE,4,THEN
:C )KEYW,KEY4,1
:C )*GET,_zc(4),MSSPEC,4,NAME
:C )*ENDIF
:C )*IF,_z2,GE,5,THEN
:C )KEYW,KEY5,1
:C )*GET,_zc(5),MSSPEC,5,NAME
:C )*ENDIF
:C )*IF,_z2,GE,6,THEN
:C )KEYW,KEY6,1
:C )*GET,_zc(6),MSSPEC,6,NAME
:C )*ENDIF
:C )*DEL,_z
:C )*DIM,_z,,7
:C )/GO
:D Apply Mass Fraction on Lines
:H Hlp_C_DLDELE
Inp_P
Cmd_DLDELE,_Y1
K_CM(KEY1)
 Fld_2
 Typ_Def_*PAR(_zc(1))
Cmd_DLDELE,_Y1
K_CM(KEY2)
 Fld_2
 Typ_Def_*PAR(_zc(2))
Cmd_DLDELE,_Y1
K_CM(KEY3)
 Fld_2
 Typ_Def_*PAR(_zc(3))
Cmd_DLDELE,_Y1
K_CM(KEY4)
 Fld_2
 Typ_Def_*PAR(_zc(4))
Cmd_DLDELE,_Y1
K_CM(KEY5)
 Fld_2
 Typ_Def_*PAR(_zc(5))
Cmd_DLDELE,_Y1
K_CM(KEY6)
 Fld_2
 Typ_Def_*PAR(_zc(6))
! Exclude_from_paths
Cmd_CMDELE,_Y1
:E END
:! 
:N Fnc_DLDELE_temp
:S    354,   209,   138
:T Cmd_P
:C )! Fnc_DLDELE_temp
:A On Lines
:D Delete TEMP on LINES
:K #((PREP7*SOLUTION)+(CFD*THERMAL*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG*FLOTRAN)
:H Hlp_C_DLDELE
Inp_P
Cmd_DLDELE
Fld_2
 Prm_[DLDELE]  Pick or enter lines for temperature DOF deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_TEMP
:E END
:! 
:N Fnc_DLDELE_turb
:S    487,   166,   314
:T Cmd_P
:C )! Fnc_DLDELE_turb
:A On Lines
:D Delete turbulence on Lines
:K #(PREP7*SOLUTION)
:P (FLOTRAN)
:H Hlp_C_DLDELE
Inp_P
! Exclude_from_paths
Cmd_CM,_Y,LINE
! Exclude_from_paths
Cmd_LSEL
Fld_2
 Typ_Def_R
Fld_5
 Prm_[DLDELE]  Pick or enter lines for turbulence deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_DLDELE_turb2
:E END
:! 
:N Fnc_DLDELE_turb2
:S    465,   175,   283
:T Cmd
:C )! Fnc_DLDELE_turb2
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0
:C )/GOPR
:A On Lines
:D Delete turbulence on Lines
:H Hlp_C_DLDELE
Cmd_)/NOPR
   Fld_0
   Typ_Lab
   Prm_[DLDELE] Delete turbulence constraints
Cmd_)KEYW,KEY1
   Fld_2
   Typ_Logi,No,Yes
   Prm_ENKE Delete Kinetic Energy
   Def_1
Cmd_)KEYW,KEY2
   Fld_2
   Typ_Logi,No,Yes
   Prm_ENDS Delete Energy Dissipation
   Def_1
Cmd_)/GO
Cal_Fnc_DLDELE_turb3
:E END
:! 
:N Fnc_DLDELE_turb3
:S    185,    74,   104
:T Cmd
:C )! Fnc_DLDELE_turb3
Inp_P
Cmd_DLDELE,_Y1,ENKE
K_CM(KEY1)
Cmd_DLDELE,_Y1,ENDS
K_CM(KEY2)
! Exclude_from_paths
Cmd_CMDELE,_Y1
:E END
:! 
:N Fnc_DLDELE_uva
:S    319,   136,   176
:T Command
:C )! Fnc_DLDELE_uva2
:D Delete Line Constraints
:B Fnc_DLDELE_uva
:H Hlp_C_DLDELE
Cmd_DLDELE,P51X
 Fld_0
  Typ_Lab
  Prm_[DLDELE]  Delete DOF Constraints on Keypoints
 Fld_2
  Prm_Lab  DOFs to be deleted
  Typ_LIS_OPTIONB
   LIS_All DOF,ALL
   LIS_*READ,DOF
:E END
:! 
:N Fnc_DLDELE_v
:S    491,   175,   309
:T Cmd_P
:C )! Fnc_DLDELE_v
:A On Lines
:D Delete velocity on Lines
:K #((PREP7*SOLUTION)+(CFD*NOFILTER))
:P (FLOTRAN)
:H Hlp_C_DLDELE
Inp_P
! Exclude_from_paths
Cmd_CM,_Y,LINE
! Exclude_from_paths
Cmd_LSEL
Fld_2
 Typ_Def_R
Fld_5
 Prm_[DLDELE]  Pick or enter lines for velocity deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_DLDELE_v2
:E END
:! 
:N Fnc_DLDELE_v2
:S    835,   197,   631
:T Cmd
:C )! Fnc_DLDELE_v2
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0,KEY3,0
:C )KEYW,KEY4,0,KEY5,0
:C )/GOPR
:A On Lines
:D Delete velocity on Lines
:H Hlp_C_DLDELE
Cmd_)/NOPR
   Fld_0
   Typ_Lab
   Prm_[DLDELE] Delete velocity constraints
Cmd_)KEYW,KEY1
   Fld_2
   Typ_Logi,No,Yes
   Prm_VX Delete velocity
Cmd_)KEYW,KEY2
   Fld_2
   Typ_Logi,No,Yes
   Prm_VY Delete velocity
Cmd_)KEYW,KEY3
   Fld_2
   Typ_Logi,No,Yes
   Prm_VZ Delete velocity
Cmd_)KEYW,KEY4
   Fld_2
   Typ_Logi,No,Yes
   Prm_ENKE Delete moving wall
   Fld_0
   Typ_Lab
   Prm_     This also deletes ENKE other than moving wall
Cmd_)KEYW,KEY5
   Fld_2
   Typ_Logi,No,Yes
   Prm_ENDS Delete generalized symmetry
   Fld_0
   Typ_Lab
   Prm_     This also deletes ENDS other than generalized symmetry
Cmd_)/GO
Cal_Fnc_DLDELE_v3
:E END
:! 
:N Fnc_DLDELE_v3
:S    266,    68,   191
:T Cmd
:C )! Fnc_DLDELE_v3
Inp_P
Cmd_DLDELE,_Y1,VX
K_CM(KEY1)
Cmd_DLDELE,_Y1,VY
K_CM(KEY2)
Cmd_DLDELE,_Y1,VZ
K_CM(KEY3)
Cmd_DLDELE,_Y1,ENKE
K_CM(KEY4)
Cmd_DLDELE,_Y1,ENDS
K_CM(KEY5)
! Exclude_from_paths
Cmd_CMDELE,_Y1
:E END
:! 
:N Fnc_DLDELE_volt
:S    378,   241,   130
:T Cmd_P
:C )! Fnc_DLDELE_volt
:A    On Lines
:D Delete VOLT on Lines
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DLDELE
Inp_P
Cmd_DLDELE
Fld_2
 Prm_[DLDELE]  Pick or enter lines for voltage deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_Def_VOLT
:E END
:! 
:N Fnc_DLDEL_flo
:S    270,   118,   145
:T Cmd
:C )! Fnc_DLDEL_flo ORPHAN
:D Delete Line Constraints
:H Hlp_C_DLDELE
Cmd_DLDELE,P51X
Fld_0
 Typ_Lab
 Prm_[DLDELE]  Delete Line Constraints
Fld_2
 Prm_Lab    DOFs to be deleted
 Typ_MLIS
 LIS_*READ,DOF
 Bnd_0.0,1.0
:E END
:! 
:N Fnc_DLDEL_p
:S    354,   131,   216
:T Cmd_P
:C )! Fnc_DLDEL_p ORPHAN
:A    On Lines
:D Delete Line Constraints
:H Hlp_C_DLDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[DLDELE]  Pick or enter lines for constraint deletion
 Typ_LINE
 Min_1
 Cnt_s
 PFM_1
 PCN_1
Cmd_)!
 Fld_2 
 Typ_DEF_*GET(ACTIVE,,KEYWORD,,CFD)
Cal_Fnc_DLDEL_p2,2,eq,0
Cal_Fnc_DLDEL_flo,2,eq,1
:E END
:! 
:N Fnc_DLDEL_p2
:S    331,   116,   208
:T Cmd
:C )! Fnc_DLDEL_p2 ORPHAN
:D Delete Line Constraints
:H Hlp_C_DLDELE
Cmd_DLDELE,P51X
Fld_0
 Typ_Lab
 Prm_[DLDELE]  Delete Line Constraints
Fld_2
 Prm_Lab  Constraints to be deleted
 Typ_LIS_RADIOB
 LIS_All constraints ,ALL
 LIS_Symmetry        ,SYMM
 LIS_Antisymmetry    ,ASYM
:E END
:! 
:N Fnc_DLIST
:S    241,   126,   108
:T Cmd_P
:C )! Fnc_DLIST
:A On Picked Nodes
:D List Nodal DOF Constraints
:H Hlp_C_DLIST
Inp_P
Cmd_DLIST
Fld_2
Typ_NODE
Prm_[DLIST] Pick or enter nodes for DOF constraint listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_DLLIST
:S    245,   128,   110
:T Cmd_P
:C )! Fnc_DLLIST
:A On Picked Lines
:D List Line DOF Constraints
:H Hlp_C_DLLIST
Inp_P
Cmd_DLLIST
Fld_2
Typ_LINE
Prm_[DLLIST] Pick or enter lines for DOF constraint listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_DL_a
:S    336,   191,   138
:T Cmd_P
:C )! Fnc_DL_a
:C )! Lines for DA command below
:A    On Lines
:D Apply A on Lines
:K ((PREP7*SOLUTION)+((edgeflx+VECTORP)*NOFILTER))
:H Hlp_C_DL
Inp_P
Cmd_)!
Fld_2
 Prm_[DL]  Pick or enter lines for vector potential specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_DL_a2
:E END
:! 
:N Fnc_DL_a2
:S    466,   108,   351
:T Command
:C )! Fnc_DL_a2
:D Apply A on Lines
:B Fnc_DL_a
:H Hlp_C_DL
Cmd_DL,P51X
Fld_0
 Typ_Lab
 Prm_[DL]  Apply Mag Vector Potential (A) on Lines
Fld_3
 Prm_Lab    DOFs to be constrained
 Typ_Lis
 LIS_*READ,DOF
Fld_4
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Vector poten (A) value
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE  Real part of vector poten
Fld_5
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2 Imag part of vector poten
:E END
:! 
:N Fnc_DL_aN_na
:S    523,   219,   297
:T Command
:C )! Fnc_DL_aN_na
:A       On Lines
:D Apply Flux-Normal Condition on Lines
:K ((PREP7*SOLUTION)+((ELEM2D+VECTORP+edgeflx)*NOFILTER))
:P (LINPLUS*ELECMAG)
:H Hlp_C_DL
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_                      - Note -
 Fld_0
  Typ_Lab
  Prm_  The flux-normal condition is a naturally occuring
 Fld_0
  Typ_Lab
  Prm_  boundary condition in a 2-D vector potential analysis.
 Fld_0
  Typ_Lab
  Prm_  Therefore, no AZ specification is required.
:E END
:! 
:N Fnc_DL_aP_na
:S    346,   202,   137
:T Cmd_P
:C )! Fnc_DL_aP_na
:A       On Lines
:D Apply Flux-P on Lines
:K ((PREP7*SOLUTION)+((ELEM2D+VECTORP+edgeflx)*NOFILTER))
:P (LINPLUS*ELECMAG)
:H Hlp_C_DL
Inp_P
Cmd_DL
Fld_2
 Prm_[DL]  Pick or enter lines for flux-parallel condition
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Fld_4
 Typ_Def_ASYM
:E END
:! 
:N Fnc_DL_asym
:S    419,   197,   215
:T Cmd_P
:C )! Fnc_DL_asym
:A    ...with Area
:D Apply ASYM on Line with Area Specification
:K (lsdyna)
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_DL
Inp_P
Cmd_DL
Fld_2
 Prm_[DL]  Pick or enter line for antisymmetry condition
 Typ_LINE
 Min_1
 Pcn_1
 Cnt_1
Fld_3
 Prm_[DL]  Pick or enter the area that contains this line
 Typ_AREA
 Min_1
 Cnt_1
Fld_4
 Typ_Def_ASYM
:E END
:! 
:N Fnc_DL_asym_na
:S    311,   176,   128
:T Cmd_P
:C )! Fnc_DL_asym_na
:A    On Lines
:D Apply ASYM on Lines
:K (lsdyna)
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_DL
Inp_P
Cmd_DL
Fld_2
 Prm_[DL]  Pick or enter lines for antisymmetry condition
 Typ_LINE
 Min_1
 Pcn_1
 Cnt_s
Fld_4
 Typ_Def_ASYM
:E END
:! 
:N Fnc_DL_dof
:S    245,   124,   114
:T Cmd_P
:C )! Fnc_DL_dof ORPHAN
:A    On Lines
:D Apply Line Constraints
:H Hlp_C_DL
Inp_P
Cmd_)!
Fld_2
 Prm_[DL]  Pick or enter line to be constrained
 Typ_LINE
 Min_1
 Cnt_s
 PFM_1
Cal_Fnc_DL_dof2
:E END
:! 
:N Fnc_DL_dof2
:S    361,   109,   245
:T Cmd
:C )! Fnc_DL_dof2 ORPHAN
:D Apply Line Constraints
:H Hlp_C_DL
Cmd_DL,P51X
Fld_0
 Typ_Lab
 Prm_[DL]  Apply Line Constraints
Fld_3
 Prm_Lab    DOFs to be constrained
 Typ_MLIS
 LIS_*READ,DOF
 Bnd_0.0,1.0
Fld_4
 Typ_REAL
 Prm_VALUE1 Degree of freedom value
Fld_5
 Typ_REAL
 Prm_VALUE2 VOLT imaginary component
:E END
:! 
:N Fnc_DL_magN_na
:S    164,   139,    18
:T Command
:C )! Fnc_DL_magN_na ORPHAN
:A       On Lines
:D Apply Flux-Normal Condition on Lines
Inp_P
Cal_Fnc_tbd
:E END
:! 
:N Fnc_DL_magP_na
:S    166,   141,    18
:T Command
:C )! Fnc_DL_magP_na ORPHAN
:A       On Lines
:D Apply Flux-Parallel Condition on Lines
Inp_P
Cal_Fnc_tbd
:E END
:! 
:N Fnc_DL_p
:S    395,   103,   285
:T Cmd
:C )! Fnc_DL_p ORPHAN
:D Apply Line Constraints
:H Hlp_C_DL
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,1
Fld_0
 Typ_Lab
 Prm_[DL]  Apply Line Constraints
Fld_2
 Prm_Lab  Constraints to be applied
 Typ_LIS_RADIOB
 LIS_Symmetry          ,SYMM
 LIS_Antisymmetry      ,ASYM
 LIS_Degrees of Freedom,0
Cmd_)/GO
Cal_Fnc_DL_dof,2,eq,0,2
Cal_Fnc_DL_p2,2,ne,0,2
:E END
:! 
:N Fnc_DL_p2
:S    346,   122,   217
:T Cmd_P
:C )! Fnc_DL_p2 ORPHAN
:A    On Lines
:D Apply Line Constraints
:H Hlp_C_DL
Inp_P
Cmd_DL
Fld_2
 Prm_[DL]  Pick or enter line to be constrained
 Typ_LINE
 Min_1
 Cnt_s
 PFM_1
Fld_3
 Prm_[DL]  Pick or enter the area that contains this line
 Typ_AREA
 Min_1
 Cnt_1
 PFM_1
Fld_4
 Typ_Def_*CPAR(1)
:E END
:! 
:N Fnc_DL_pec
:S    385,   206,   172
:T Cmd_P
:C )! Fnc_DL_pec
:A       On Lines
:D Apply Electric Wall condition on Lines
:K (((PREP7*SOLUTION)+EDGEELC)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DL
Inp_P
Cmd_DL
Fld_2
 Prm_[DL]  Pick or enter lines for Electric Wall condition
 Typ_Line
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_4
 Typ_Def_AX
Fld_5
 Typ_Def_0
Fld_6
 Typ_Def_0
:E END
:! 
:N Fnc_DL_pres
:S    695,   336,   352
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'DL'
:C )*SET,_z9,'PRES'
:C )*DEL,_zc
:C )*DIM,_zc,char,1
:C )*SET,_zc(1),'PRES'
:C )/GO
:C )! Fnc_DL_pres
:C )! Lines for DL command below
:A On Lines
:D Apply PRES on Lines
:K #((PREP7*SOLUTION)+(CFD*TFILM*NOFILTER))
:P (FLOTRAN)
:H Hlp_C_DL
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
Cmd_)/GO
! Exclude_from_paths
Cmd_LSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DL]  Pick or enter lines for pressure specification
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_CFDLoad
:E END
:! 
:N Fnc_DL_spec
:S    820,   370,   443
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'DL'
:C )*SET,_z9,'SPEC'
:C )KEYW,KEY1,0
:C )*GET,_z1,FLDA,SPEC,NUMB
:C )*IF,_z1,le,0,then
:C )KEYW,KEY1,1
:C )*ENDIF
:C )/GO
:C )! Fnc_DL_spec
:C )! Lines for DL command below
:A On Lines
:D Apply Mass Frac on Lines
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:P (FLOTRAN)
:H Hlp_C_DL
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
K_CM(key1)
! Exclude_from_paths
Cmd_LSEL
K_CM(key1)
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DL]  Pick or enter lines for mass fraction specification
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,LINE
K_CM(key1)
! Exclude_from_paths
Cmd_CMSEL,S,_Y
K_CM(key1)
! Exclude_from_paths
Cmd_CMDELE,_Y
K_CM(key1)
Cmd_)!
 Fld_2
 Typ_Def_*GET(FLDA,SPEC,NUMB)
Cal_Fnc_Spec_VZ,2,gt,0
:E END
:! 
:N Fnc_DL_symm
:S    415,   197,   211
:T Cmd_P
:C )! Fnc_DL_symm
:A    ...with Area
:D Apply SYMM on Line with Area Specification
:K (lsdyna)
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_DL
Inp_P
Cmd_DL
Fld_2
 Prm_[DL]  Pick or enter line for symmetry condition
 Typ_LINE
 Min_1
 Pcn_1
 Cnt_1
Fld_3
 Prm_[DL]  Pick or enter the area that contains this line
 Typ_AREA
 Min_1
 Cnt_1
Fld_4
 Typ_Def_SYMM
:E END
:! 
:N Fnc_DL_symm_na
:S    307,   176,   124
:T Cmd_P
:C )! Fnc_DL_symm_na
:A    On Lines
:D Apply SYMM on Lines
:K (lsdyna)
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_DL
Inp_P
Cmd_DL
Fld_2
 Prm_[DL]  Pick or enter lines for symmetry condition
 Typ_LINE
 Min_1
 Pcn_1
 Cnt_s
Fld_4
 Typ_Def_SYMM
:E END
:! 
:N Fnc_DL_temp
:S    472,   306,   159
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'DL'
:C )*SET,_z9,'TEMP'
:C )/GO
:C )! Fnc_DL_temp
:C )! Lines for DL command below
:A On Lines
:D Apply TEMP on Lines
:K #((PREP7*SOLUTION)+(CFD*THERMAL*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG*FLOTRAN)
:H Hlp_C_DL
Inp_P
Cmd_)!
Fld_2
  Prm_[DL]  Pick or enter lines for temperature DOF specification
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Cust_Cmd_DL
Cal_Fnc_DL_temp2
:E END
:! 
:N Fnc_DL_temp2
:S    719,   200,   512
:T Command
:C )! Fnc_DL_temp2
:D Apply TEMP on Lines
:B Fnc_DL_temp
:H Hlp_C_DL
:C )/NOPR
:C )*SET,_z7,'DL'
:C )*SET,_z9,'TEMP'
:C )*SET,_z10,'Lines'
:C )/GOPR
cmd_)/NOPR
Cmd_)*CSET,1,14
Fld_0
 Typ_Lab
 Prm_[DL]  Apply TEMP on lines
Fld_3
 Prm_Lab2    DOFs to be constrained
 Typ_Lis
 LIS_All DOF,ALL
 LIS_*READ,DOF
Fld_7
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_4
 Typ_REAL
 Prm_VALUE  Load TEMP value 
Fld_5
 Prm_KEXPND  Apply TEMP to endpoints?
 Typ_LOGI,No,Yes
! Cust_Cmd_DL
Cal_Fnc_thvalue,7,eq,0,2
Cal_Fnc_tholdtable,7,eq,1,2
Cal_Fnc_thnewtbl,7,eq,2,2
:E END
:! 
:N Fnc_DL_turb
:S    696,   335,   354
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'DL'
:C )*SET,_z9,'TURB'
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )*SET,_zc(1),'ENKE','ENDS'
:C )/GO
:C )! Fnc_DL_turb
:C )! Lines for DL command below
:A On Lines
:D Apply Turb on Lines
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:P (FLOTRAN)
:H Hlp_C_DL
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
Cmd_)/GO
! Exclude_from_paths
Cmd_LSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DL]  Pick or enter lines for turbulence specification
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_DL_u
:S    307,   162,   138
:T Cmd_P
:C )! Fnc_DL_u
:C )! Lines for DL command below
:A On Lines
:D Apply U,ROT on Lines
:K #(PREP7*SOLUTION)
:H Hlp_C_DL
Inp_P
Cmd_)!
 Fld_2
  Prm_[DL]  Pick or enter lines for displacement constraints
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_DL_u2
:E END
:! 
:N Fnc_DL_u2
:S    780,   193,   580
:T Command
:C )! Fnc_DL_u2
:C )/NOPR
:C )*SET,_z7,'DL'
:C )*SET,_z9,'U,ROT'
:C )*SET,_z10,'Lines'
:C )/GOPR
:D Apply U,ROT on Lines
:B Fnc_DL_u
:H Hlp_C_DL
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_Lab
 Prm_[DL]  Apply Displacements (U,ROT) on Lines
Fld_3
 Prm_Lab2    DOFs to be constrained
 Typ_Lis
 LIS_All DOF,ALL
 LIS_*READ,DOF
Fld_8
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_4
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Displacement value
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE   Real part of disp
Fld_5
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2  Imag part of disp
cmd_)/GOPR
! Cust_Cmd_DL
Cal_Fnc_Stvalue,8,eq,0,2
Cal_Fnc_Stoldtable,8,eq,1,2
Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_DL_uCFD
:S    696,   333,   356
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'DL'
:C )*SET,_z9,'DISP'
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),'UX','UY','UZ'
:C )/GO
:C )! Fnc_DL_uCFD
:C )! Lines for DL command below
:A On Lines
:D Apply U on Lines
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:P (FLOTRAN)
:H Hlp_C_DL
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
Cmd_)/GO
! Exclude_from_paths
Cmd_LSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DL]  Pick or enter lines for displacement specification
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_DL_v
:S    686,   327,   352
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'DL'
:C )*SET,_z9,'VELO'
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),'VX','VY','VZ'
:C )/GO
:C )! Fnc_DL_v
:C )! Lines for DL command below
:A On Lines
:D Apply V on Lines
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:P (FLOTRAN)
:H Hlp_C_DL
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
Cmd_)/GO
! Exclude_from_paths
Cmd_LSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[DL]  Pick or enter lines for velocity specification
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_DL_volt
:S    494,   338,   149
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'lines'
:C )*SET,_z8,'DL'
:C )*SET,_z9,'VOLT'
:C )/GO
:C )! Fnc_DL_volt
:C )! Lines for DL command below
:A    On Lines
:D Apply VOLT on Lines
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DL
Inp_P
Cmd_)!
Fld_2
  Prm_[DL]  Pick or enter lines for voltage specification
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Cust_Cmd_DL
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_DL_volt0
:S    462,   280,   175
:T Cmd_P
:C )! Fnc_DL_volt0
:C )! Lines for DL command below
:A       On Lines
:D Apply J-Normal condition on Lines
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_DL
Inp_P
Cmd_DL
Fld_2
  Prm_[DL]  Pick or enter lines for J-Normal condition
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_DEF_Blank
Fld_4
 Typ_DEF_VOLT
Fld_5
 Typ_DEF_0
:E END
:! 
:N Fnc_DMPEXT
:S    880,   191,   682
:T Command
:C )! Fnc_DMPEXT
:C )/NOPR
:C )*set,_z1
:C )/GO
:A Frequency Range
:D Extract modal damping coefficients
:K #(SOLUTION+TFILM)
:H Hlp_C_DMPEXT
Inp_Noapply
Cmd_)/NOPR
Cmd_)*CSET,1,6
 Fld_0
  Typ_Lab
  Prm_[DMPEXT] Modal damping coefficients extraction
 Fld_2
  Prm_Smode,Tmode  Source/target modes
  Typ_Int2
 Fld_4
  Prm_FreqB      Beginning frequency
  Typ_Real
 Fld_5
  Prm_FreqE         Ending frequency
  Typ_Real
 Fld_6
  Prm_Nsteps         Number of steps
  Typ_Int
 Fld_7
  Prm_Dmpname    Damp. Results array
  Typ_Char,32,32
Cmd_)*SET,_z1
K_CM(MODAL)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Note: This command requires modal displacements
 Fld_0
  Typ_Lab
  Prm_      extracted in advance using RMFLVEC
 Fld_2
  Prm_          Run RMFLVEC ?
  Typ_Lis_OptionB
   Lis_No,0
   Lis_Yes,1
   Def_0
Cmd_)/GO
Cal_Fnc_DMPEXT2
:E END
:! 
:N Fnc_DMPEXT2
:S    406,   153,   246
:T Cmd_P
:C )! Fnc_DMPEXT2
:C )/NOPR
:C )keyw,eigvex,0
:C )*if,_z1,gt,0,then
:C )keyw,eigvex,1
:C )*endif
:C )/GO
Inp_P
Cmd_RMFLVEC
K_CM(EIGVEX+MODAL)
!
Cmd_DMPEXT
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Dlm_'
 Fld_5
  Typ_Def_*CPAR(6)
  Dlm_'
 Fld_6
  Typ_Lab
 Fld_7
  Typ_Def_*CPAR(3)
 Fld_8
  Typ_Def_*CPAR(4)
 Fld_9
  Typ_Def_*CPAR(5)
:E END
:! 
:N Fnc_DMPEXT4
:S    351,   153,   191
:T Cmd_P
:C )! Fnc_DMPEXT4
:C )/NOPR
:C )keyw,eigvex,0
:C )*if,_z1,gt,0,then
:C )keyw,eigvex,1
:C )*endif
:C )/GO
Inp_P
Cmd_RMFLVEC
K_CM(EIGVEX+MODAL)
!
Cmd_DMPEXT
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Dlm_'
 Fld_5
  Typ_Def_*CPAR(6)
  Dlm_'
 Fld_6
  Typ_Lab
 Fld_7
  Typ_Def_'EIG'
:E END
:! 
:N Fnc_DMPEXT_EIG
:S    732,   198,   527
:T Command
:C )! Fnc_DMPEXT_EIG
:C )/NOPR
:C )*set,_z1
:C )/GO
:A Eigenfrequency
:D Extract modal damping coefficients
:K #(SOLUTION+TFILM)
:H Hlp_C_DMPEXT
Inp_Noapply
Cmd_)/NOPR
Cmd_)*CSET,1,6
 Fld_0
  Typ_Lab
  Prm_[DMPEXT] Modal damping coefficients extraction (eigenfrequency)
 Fld_2
  Prm_Smode         Source mode
  Typ_Int
 Fld_7
  Prm_Dmpname    Damp. Results array
  Typ_Char,32,32
Cmd_)*SET,_z1
K_CM(MODAL)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Note: This command requires modal displacements
 Fld_0
  Typ_Lab
  Prm_      extracted in advance using RMFLVEC
 Fld_2
  Prm_          Run RMFLVEC ?
  Typ_Lis_OptionB
   Lis_No,0
   Lis_Yes,1
   Def_0
Cmd_)/GO
Cal_Fnc_DMPEXT4
:E END
:! 
:N Fnc_DNSOL
:S    314,   169,   138
:T Cmd_P
:C )! Fnc_DNSOL
:C )! Nodes for DNSOL command below
:A    Nodal Results
:D Modify Nodal Results
:K #(POST1)
:H Hlp_C_DNSOL
Inp_P
Cmd_)!
 Fld_2
  Prm_[DNSOL]  Pick or enter nodes for results modification
  Typ_NODE
  Min_1
  Cnt_S
  PCN_1
  PFM_1
Cal_Fnc_DNSOL2
:E END
:! 
:N Fnc_DNSOL2
:S  21042,   118, 20917
:T Command
:C )! Fnc_DNSOL2
:D Modify Nodal Results
:B Fnc_DNSOL
:H Hlp_C_DNSOL
Cmd_DNSOL,P51X
 Fld_0
  Typ_Lab
  Prm_[DNSOL]  Modify Nodal Results
 Fld_2
K_FL(STRUCTRL+multifld)
  Prm_Item,Comp  Item to be modified
  Typ_IDX
P_LN(LINPLUS)
IDX_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS)
IDX_DOF solution    ,              UY,U,Y
P_LN(LINPLUS)
IDX_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS)
IDX_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTZ,ROT,Z
!  
P_LN(LINPLUS)
IDX_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS)
IDX_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS)
IDX_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS)
IDX_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS)
IDX_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS)
IDX_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS)
IDX_Stress          ,1st principal S1,S,1
P_LN(LINPLUS)
IDX_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS)
IDX_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS)
IDX_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS)
IDX_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS)
IDX_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!  
P_LN(FULL_ANS)
IDX_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
IDX_Energy          ,PlasStateVar PSV,NL,PSV
!  
P_LN(LINPLUS)
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS)
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS)
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS)
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS)
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS)
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS)
IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS)
IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS)
IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS)
IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS)
IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!  
P_LN(LINPLUS)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!  
P_LN(FULL_ANS)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS)
IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS)
IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS)
IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS)
IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!  
P_LN(FULL_ANS)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!  
P_LN(FULL_ANS)
IDX_Strain-other    ,Swelling    EPSW,EPSW,
!  
 Fld_2
K_FL(THERMAL+multifld)
  Prm_Item,Comp  Item to be modified
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE10,TE10
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE11,TE11
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE12,TE12
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE13,TE13
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE14,TE14
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE15,TE15
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE16,TE16
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE17,TE17
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE18,TE18
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE19,TE19
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE20,TE20
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE21,TE21
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE22,TE22
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE23,TE23
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE24,TE24
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE25,TE25
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE26,TE26
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE27,TE27
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE28,TE28
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE29,TE29
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE30,TE30
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE31,TE31
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP
!
!  
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!  
 Fld_2
K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid)
  Prm_Item,Comp  Item to be modified
  Typ_IDX
P_LN(ELECMAG)
IDX_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
IDX_DOF solution    ,MagVectPoten  AX,A,X
P_LN(ELECMAG)
IDX_DOF solution    ,              AY,A,Y
P_LN(ELECMAG)
IDX_DOF solution    ,              AZ,A,Z
P_LN(THERMAL*ELECMAG)
IDX_DOF solution    ,Elec poten  VOLT,VOLT,
!  
P_LN(ELECMAG)
IDX_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,           EFSUM,EF,SUM
!  
P_LN(ELECMAG)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!  
 Fld_2
K_FL(FLUID+multifld)
  Prm_Item,Comp  Item to be modified
  Typ_IDX
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Temperature TEMP,TEMP,
!  
P_LN(FULL_ANS)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
IDX_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!  
 Fld_2
K_FL(CFD)
  Prm_Item,Comp  Item to be modified
  Typ_IDX
P_LN(FLOTRAN)
IDX_DOF solution    ,Displacement  UX,U,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              UY,U,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              UZ,U,Z
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(FLOTRAN)
IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
P_LN(FLOTRAN)
IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Temperature TEMP,TEMP,
!  
P_LN(FULL_ANS)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
IDX_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!  
P_LN(FLOTRAN)
IDX_Other quantities,Density     DENS,DENS,
P_LN(FLOTRAN)
IDX_Other quantities,Viscosity   VISC,VISC,
P_LN(FLOTRAN)
IDX_Other quantities,Conductivit COND,COND,
P_LN(FLOTRAN)
IDX_Other quantities,Eff Viscos  EVIS,EVIS,
P_LN(FLOTRAN)
IDX_Other quantities,Eff Conduct ECON,ECON,
P_LN(FLOTRAN)
IDX_Other quantities,Total temp  TTOT,TTOT,
P_LN(FLOTRAN)
IDX_Other quantities,Strm func2D STRM,STRM,
P_LN(FLOTRAN)
IDX_Other quantities,PressurCoef PCOE,PCOE,
P_LN(FLOTRAN)
IDX_Other quantities,Mach number MACH,MACH,
P_LN(FLOTRAN)
IDX_Other quantities,Total pres  PTOT,PTOT,
P_LN(FLOTRAN)
IDX_Other quantities,Heat flux   HFLU,HFLU,
P_LN(FLOTRAN)
IDX_Other quantities,Film coeff  HFLM,HFLM,
P_LN(FLOTRAN)
IDX_Other quantities,Turb law Y+ YPLU,YPLU,
P_LN(FLOTRAN)
IDX_Other quantities,Wall shear  TAUW,TAUW,
!  
 Fld_2
K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID*LSDYNA))
  Prm_Item,Comp  Item to be modified
  Typ_IDX
P_LN(LINPLUS)
IDX_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS)
IDX_DOF solution    ,              UY,U,Y
P_LN(LINPLUS)
IDX_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS)
IDX_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTZ,ROT,Z
P_LN(THERMAL*FLOTRAN)
IDX_DOF solution    ,Temperature TEMP,TEMP,
!
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,MagVectPoten  AX,A,X
K_LN(LSDYNA)
IDX_DOF solution    ,Acceleration  AX,A,X
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AY,A,Y
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AZ,A,Z
P_LN(THERMAL*ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,Elec poten  VOLT,VOLT,
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
K_LN(lsdyna)
IDX_DOF solution    ,Temperature TEMP,TEMP,
!  
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,1st principal S1,S,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!  
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TGSUM,TG,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,           EFSUM,EF,SUM
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!  
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!  
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Energy          ,PlasStateVar PSV,NL,PSV
!  
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!  
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!  
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!  
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-other    ,Swelling    EPSW,EPSW,
 Fld_3
  Prm_V1         Value to be assigned
  Typ_real
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Additional values to be assigned to remaining components of Item
 Fld_4
  Prm_V2         Second value
  Typ_real
  Def_Blank
 Fld_5
  Prm_V3         Third value
  Typ_real
  Def_Blank
 Fld_6
  Prm_V4         Fourth value
  Typ_real
  Def_Blank
 Fld_7
  Prm_V5         Fifth value
  Typ_real
  Def_Blank
 Fld_8
  Prm_V6         Sixth value
  Typ_real
  Def_Blank
:E END
:! 
:N Fnc_DOF
:S   3171,   143,  3021
:T Command
:C )! Fnc_DOF
:A Add DOF
:D Add Degrees of Freedom
:K #(PREP7*NOFILTER)
:K (lsdyna)
:H Hlp_C_DOF
Inp_NoApply
Cmd_DOF
 Fld_0
  Typ_Lab
  Prm_[DOF]  Add Degrees of Freedom
 Fld_2
  K_FL(pmethod+lsdyna)
  Prm_   Choose up to 10 DOFs
  Typ_MLis
  LIS_UX              ,UX
  LIS_UY              ,UY
  LIS_UZ              ,UZ
  LIS_ROTX            ,ROTX
  LIS_ROTY            ,ROTY
  LIS_ROTZ            ,ROTZ
  LIS_WARP            ,WARP
  LIS_TEMP            ,TEMP
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TBOT,TBOT
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE2 ,TE2 
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE3 ,TE3 
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE4 ,TE4 
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE5 ,TE5 
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE6 ,TE6 
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE7 ,TE7 
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE8 ,TE8 
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE9 ,TE9 
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE10,TE10
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE11,TE11
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE12,TE12
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE13,TE13
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE14,TE14
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE15,TE15
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE16,TE16
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE17,TE17
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE18,TE18
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE19,TE19
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE20,TE20
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE21,TE21
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE22,TE22
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE23,TE23
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE24,TE24
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE25,TE25
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE26,TE26
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE27,TE27
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE28,TE28
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE29,TE29
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE30,TE30
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TE31,TE31
  K_LN(THERMAL+flotran)
  LIS_Layer Temp  TTOP,TTOP
!
  LIS_VOLT            ,VOLT
  LIS_MAG             ,MAG
  LIS_AX              ,AX
  LIS_AY              ,AY
  LIS_AZ              ,AZ
  LIS_CURR            ,CURR
  LIS_EMF             ,EMF
  LIS_VX              ,VX
  LIS_VY              ,VY
  LIS_VZ              ,VZ
  LIS_PRES            ,PRES
  LIS_ENKE            ,ENKE
  LIS_ENDS            ,ENDS
  Bnd_0.0,10.0
!
 Fld_2
  K_FL(PMETHOD)
  Prm_   Choose up to 6 DOFs
  Typ_MLis
  LIS_UX              ,UX
  LIS_UY              ,UY
  LIS_UZ              ,UZ
  LIS_ROTX            ,ROTX
  LIS_ROTY            ,ROTY
  LIS_ROTZ            ,ROTZ
!
 Fld_2
  K_FL(ED*LSDYNA)
  Prm_   Choose up to 12 DOFs
  Typ_MLis
  LIS_UX              ,UX
  LIS_UY              ,UY
  LIS_UZ              ,UZ
  LIS_ROTX            ,ROTX
  LIS_ROTY            ,ROTY
  LIS_ROTZ            ,ROTZ
  LIS_VX              ,VX
  LIS_VY              ,VY
  LIS_VZ              ,VZ
  LIS_AX              ,AX
  LIS_AY              ,AY
  LIS_AZ              ,AZ
  Bnd_0.0,12.0
:E END
:! 
:N Fnc_DOF_DEL
:S    395,   165,   223
:T Command
:C )! Fnc_DOF_DEL
:A Remove DOFs
:D Remove Added Degrees of Freedom
:K #((PREP7*NOFILTER)
:K (lsdyna)
:H Hlp_C_DOF
Inp_NoApply
Cmd_DOF
 Fld_0
  Typ_Lab
  Prm_[DOF,DELETE]  Remove all added Degrees of Freedom
 Fld_2
  Prm_   Choose up to 10 DOFs
  Typ_Def_DELETE
 Fld_0
  Typ_Lab
  Prm_Choosing OK will remove all added Degrees of Freedom
:E END
:! 
:N Fnc_DOMEGA
:S    507,   159,   341
:T Command
:C )! Fnc_DOMEGA
:A    Global
:D Apply Angular Acceleration
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_DOMEGA
Inp_NoApply
Cmd_DOMEGA
Fld_0
 Typ_LAB
 Prm_[DOMEGA]  Apply Angular Acceleration
Fld_2
 Prm_DOMGX  Global Cartesian X-comp
 Typ_REAL
 Def_*GET(common,,acelcm,,real,34)
Fld_3
 Prm_DOMGY  Global Cartesian Y-comp
 Typ_REAL
 Def_*GET(common,,acelcm,,real,35)
Fld_4
 Prm_DOMGZ  Global Cartesian Z-comp
 Typ_REAL
 Def_*GET(common,,acelcm,,real,36)
:E END
:! 
:N Fnc_DOMEGA_dele
:S    327,   177,   143
:T Command
:C )! Fnc_DOMEGA_dele
:A    Global
:D Delete Global Angular Acceleration
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_DOMEGA
Inp_NoApply
Cmd_DOMEGA,0,0,0
Fld_0
 Typ_Lab
 Prm_[DOMEGA]  This function sets all angular accelerations
Fld_0
 Typ_Lab
 Prm_          to zero!
:E END
:! 
:N Fnc_DSCALE
:S    769,   147,   615
:T Command
:C )! Fnc_DSCALE
:A    Constraints
:D Scale DOF Constraints
:K #(PREP7*SOLUTION)
:H Hlp_UI_dscale
Cmd_DOFSEL,S
 Fld_0
  Typ_Lab
  Prm_[DOFSEL] [DSCALE]  Scale DOF Constraints on All Selected Nodes
 Fld_2
  Prm_[DOFSEL]  DOFs to be scaled
  Typ_MLis
  LIS_*READ,DOF
  LIS_*READ,DDOF
  Bnd_0.0,6.0
Cmd_DSCALE
 Fld_0
  Prm_[DSCALE]
 Fld_2
  K_FL(harmonic)
  Prm_RFACT  Scale factor
  Typ_REAL
  Def_1.0
 Fld_2
  K_FL(HARMONIC*NOFILTER)
  Prm_RFACT  Scale factr for real part
  Typ_REAL
  Def_1.0
 Fld_3
  K_FL(HARMONIC*NOFILTER)
  Prm_IFACT  Scale factr for imag part
  Typ_REAL
  Def_1.0
 Fld_4
  Prm_TBASE  Base temperature -
  Typ_REAL
 Fld_0
  Typ_Lab
  Prm_       - used for temperature DOF only
Cmd_DOFSEL,ALL
:E END
:! 
:N Fnc_DSYM_aN
:S    812,   212,   593
:T Command
:C )! Fnc_DSYM_aN
:A       On Nodes
:D Apply Flux-Normal Condition on Nodes
:K ((PREP7*SOLUTION)+((VECTORP+edgeflx)*NOFILTER))
:P (LINPLUS*ELECMAG)
:H Hlp_C_DSYM
Inp_NoApply
Cmd_)!
K_CM(ELEM2D)
 Fld_0
  Typ_Lab
  Prm_                      - Note -
 Fld_0
  Typ_Lab
  Prm_  The flux-normal condition is a naturally occuring
 Fld_0
  Typ_Lab
  Prm_  boundary condition in a 2-D vector potential analysis.
 Fld_0
  Typ_Lab
  Prm_  Therefore, no AZ specification is required.
!
Cmd_DSYM
K_CM(ELEM3D)
 Fld_0
  Typ_LAB
  Prm_[DSYM]  Apply Flux-Normal Condition on All Selected Nodes
 Fld_2
  Typ_DEF_SYMM
 Fld_3
  Prm_Norml  Surface is normal to
  Typ_LIS_OPTIONB
  LIS_X-axis,X
  LIS_Y-axis,Y
  LIS_Z-axis,Z
 Fld_4
  Typ_INT
  Prm_KCN    Coordinate system no.
:E END
:! 
:N Fnc_DSYM_aP
:S    683,   212,   464
:T Cmd_P
:C )! Fnc_DSYM_aP
:A       On Nodes
:D Apply Flux-Parallel Condition on Nodes
:K ((PREP7*SOLUTION)+((VECTORP+edgeflx)*NOFILTER))
:P (LINPLUS*ELECMAG)
:H Hlp_C_DSYM
K_LN(ELEM2D+elem3d)
Inp_P
Cmd_D
K_CM(ELEM2D+elem3d)
Fld_2
 Prm_[D]  Pick or enter nodes for flux-parallel condition
 Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_Def_AZ
Fld_4
 Typ_Def_0
!
Cmd_DSYM
K_CM(ELEM3D)
Fld_0
 Typ_LAB
 Prm_[DSYM]  Apply Flux-Parallel Condition on All Selected Nodes
Fld_2
 Typ_DEF_ASYM
Fld_3
 Prm_Norml  Surface is normal to
 Typ_LIS_OPTIONB
 LIS_X-axis,X
 LIS_Y-axis,Y
 LIS_Z-axis,Z
Fld_4
 Typ_INT
 Prm_KCN    Coordinate system no.
:E END
:! 
:N Fnc_DSYM_asym
:S    445,   166,   272
:T Command
:C )! Fnc_DSYM_asym
:A    On Nodes
:D Apply ASYM on Nodes
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_DSYM
Inp_NoApply
Cmd_DSYM
Fld_0
 Typ_LAB
 Prm_[DSYM]  Apply Antisymmetry Condition on All Selected Nodes
Fld_2
 Typ_DEF_ASYM
Fld_3
 Prm_Norml  Antisym surf is normal to
 Typ_LIS_OPTIONB
 LIS_X-axis,X
 LIS_Y-axis,Y
 LIS_Z-axis,Z
Fld_4
 Typ_INT
 Prm_KCN    Coordinate system no.
:E END
:! 
:N Fnc_DSYM_symm
:S    458,   183,   268
:T Command
:C )! Fnc_DSYM_symm
:A    On Nodes
:D Apply SYMM on Nodes
:B Fnc_DSYM_symm
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_DSYM
Inp_NoApply
Cmd_DSYM
Fld_0
 Typ_LAB
 Prm_[DSYM]  Apply Symmetry Condition on All Selected Nodes
Fld_2
 Typ_DEF_SYMM
Fld_3
 Prm_Norml  Symm surface is normal to
 Typ_LIS_OPTIONB
 LIS_X-axis,X
 LIS_Y-axis,Y
 LIS_Z-axis,Z
Fld_4
 Typ_INT
 Prm_KCN    Coordinate system no.
:E END
:! 
:N Fnc_DSYS
:S    286,   136,   143
:T Command
:C )! Fnc_DSYS
:A Specified Coord Sys
:D Change Display CS to Specified CS
:H Hlp_C_DSYS
Cmd_DSYS
Fld_0
Typ_Lab
Prm_[DSYS]  Change display coordinate system to specified system 
Fld_2
Typ_INT
Def_0
Prm_KCN  Coordinate system number
:E END
:! 
:N Fnc_DTRAN
:S    415,   167,   241
:T Command
:C )! Fnc_DTRAN
:A    Constraints
:D Transfer Solid Model DOF Constraints to Nodes
:K #(PREP7*SOLUTION)
:H Hlp_C_DTRAN
Inp_NoApply
Cmd_DTRAN
 Fld_0
  Typ_Lab
  Prm_[DTRAN]  This function transfers DOF constraints from 
 Fld_0
  Typ_Lab
  Prm_         currently selected keypoints, lines, and areas 
 Fld_0
  Typ_Lab
  Prm_         to currently selected nodes.
:E END
:! 
:N Fnc_DUMP
:S    279,   165,   107
:T Cmd
:A Binary Files
:D Binary Files
:C )! Fnc_DUMP
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,10,1,2
:C )_z9 = 'DUMP_2'
:C )/GO
Inp_P
Cmd_!
K_LN(begin+aux2)
Cal_Fnc_CHK_ROUT
K_LN(BEGIN*AUX2)
Cal_Fnc_DUMP_2
K_LN(begin)
Cal_Fnc_ExitRout
:E END
:! 
:N Fnc_DUMP1
:S    164,    67,    90
:T Cmd
:A Hid
:C )! Fnc_DUMP1
Inp_P
Cmd_)/GO
Cmd_DUMP
 Fld_2
  Typ_Def_*PAR(_ZC(_Z(1)))
! Exclude_from_paths
Cmd_FINISH
:E END
:! 
:N Fnc_DUMP2
:S    182,    67,   108
:T Cmd
:A Hid
:C )! Fnc_DUMP2
Inp_P
Cmd_)/GO
Cmd_DUMP
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
! Exclude_from_paths
Cmd_FINISH
:E END
:! 
:N Fnc_DUMP_2
:S    367,    83,   277
:T Cmd
:D List Binary Files
:C )! Fnc_DUMP_2
Inp_NoApply
! Exclude_from_paths
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_(AUX2)  List (Dump) Binary Files
 Fld_0
  Typ_Sep
 Fld_2
  Prm_File Type to Dump
  TYP_LIS_RADIOB
   Lis_Other  ,0
   Lis_Matrix ,1
  Def_0
Cmd_)/GO
Cal_Fnc_DUMP_3,2,eq,0,2
Cal_Fnc_HBMAT,2,eq,1,2
:E END
:! 
:N Fnc_DUMP_3
:S   1168,   222,   939
:T Cmd
:D List Binary Files
:C )! Fnc_DUMP_3
:C )/NOPR
:C )*DEL,_ZC
:C )*DIM,_ZC,CHAR,2
:C )*SET,_ZC(1),'HEAD','ALL'
:C )*DEL,_Z
:C )*DIM,_Z,,3
:C )*SET,_zx,' '
:C )/GO
:H Hlp_UI_dump
K_LN(aux2)
Inp_NoApply
! Exclude_from_paths
Cmd_FINISH
K_CM(aux2)
Cmd_/AUX2
K_CM(aux2)
 Fld_0
  Typ_Lab
  Prm_[/AUX2]  List (Dump) Binary Files
 Fld_0
  Typ_SEP
Cmd_)*SET,_Z(1)
 Fld_0
  K_FL(AUX2)
  Typ_Lab
  Prm_(AUX2)  List (Dump) Binary Files
 Fld_2
  Prm_[DUMP]  Records to be listed
  Typ_Lis_optionb
  Lis_Header only     ,1
  Lis_All records     ,2
  Lis_Specif records  ,3
 Fld_0
  Prm_        Specified records
Cmd_)*CSET,1,2
 Fld_2
  Prm_          NSTRT  Starting record
  Typ_INT
 Fld_3
  Prm_          NSTOP  Ending record
  Typ_INT
Cmd_)/GO
Cmd_FORM
 Fld_2
  Prm_[FORM]  Amt of output per record
  Typ_Lis_optionb
Lis_Basic record    ,RECO
Lis_Basic + 10 words,TEN
Lis_Entire record   ,LONG
Fld_0
Typ_SEP
Cmd_FILEAUX2
 Fld_2
  Prm_[FILEAUX2]  Binary file to list
  Typ_FILE
  Def_*PAR(_zx)
K_LN(aux2)
Cal_Fnc_DUMP1,2,le,2,3
K_LN(aux2)
Cal_Fnc_DUMP2,2,eq,3,3
K_LN(AUX2)
Cal_Fnc_DUMP1,2,le,2,1
K_LN(AUX2)
Cal_Fnc_DUMP2,2,eq,3,1
:E END
:! 
:N Fnc_DYNA_ALEADD
:S    499,   178,   314
:T Cmd
:C )! Fnc_DYNA_ALEADD
:A Set ALE Defaults
:D Add Default ALE Settings for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDALE
Inp_P
Cmd_EDALE
  Fld_2
   Typ_Def_ADD
!
  Fld_3
   Typ_Def_*CPAR(2)
!
  Fld_4
   Typ_Def_*CPAR(3)
!
  Fld_5
   Typ_Def_*CPAR(4)
!
  Fld_6
   Typ_Def_*CPAR(5)
!
  Fld_7
   Typ_Def_*CPAR(6)
!
  Fld_8
   Typ_Def_*CPAR(7)
!
  Fld_9
   Typ_Def_*CPAR(8)
!
  Fld_10
   Typ_Def_*CPAR(9)
!
  Fld_11
   Typ_Def_*CPAR(10)
!
:E END
:! 
:N Fnc_DYNA_ALEDELE
:S    261,   186,    68
:T Cmd
:C )! Fnc_DYNA_ALEDELE
:A Delete ALE Defaults
:D Delete Default ALE Settings for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDALE
Inp_P
Cmd_EDALE
  Fld_2
   Typ_Def_DELE
  Fld_3
   Typ_Def_*CPAR(2)
:E END
:! 
:N Fnc_DYNA_ALEDEal
:S    248,   178,    63
:T Cmd_N
:C )! Fnc_DYNA_ALEDEal
:A Delete All
:D Delete Default ALE Settings for LS-DYNA Explicit
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDALE
Inp_P
Cmd_EDALE
  Fld_2
   Typ_Def_DELE
  Fld_3
   Typ_Def_ALL
:E END
:! 
:N Fnc_DYNA_ALELIST
:S    257,   182,    68
:T Cmd
:C )! Fnc_DYNA_ALELIST
:A List ALE Defaults
:D List Default ALE Settings for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDALE
Inp_P
Cmd_EDALE
  Fld_2
   Typ_Def_LIST
  Fld_3
   Typ_Def_*CPAR(2)
:E END
:! 
:N Fnc_DYNA_ALELSal
:S    243,   173,    63
:T Cmd_N
:C )! Fnc_DYNA_ALESal
:A List All
:D List Default ALE Settings for LS-DYNA Explicit
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDALE
Inp_P
Cmd_EDALE
  Fld_2
   Typ_Def_LIST
  Fld_3
   Typ_Def_ALL
:E END
:! 
:N Fnc_DYNA_ActCon
:S   1738,   176,  1555
:T Cmd
:C )! Fnc_DYNA_ActCon
:A Activate Entity
:D Activate Contact Entities for LS-DYNA Explicit
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDDC
Cmd_EDDC,RACT
 Fld_0
   Typ_Lab
   Prm_[EDDC]  Activate Contact Entities for LS-DYNA Explicit 
 Fld_0
   Typ_Sep
 Fld_2
  Prm_Contact Type
  Typ_IDX
  IDX_Single Surface  ,Auto Gen'l (AG) ,AG
  IDX_Single Surface  ,Automatic (ASSC),ASSC
  IDX_Single Surface  ,Auto 2-D (ASS2D),ASS2D
  IDX_Single Surface  ,Single Surf (SS),SS
  IDX_Single Surface  ,Eroding (ESS)   ,ESS
  IDX_Single Surface  ,Edge (SE)       ,SE
!
  IDX_Nodes to Surface,General (NTS)   ,NTS
  IDX_Nodes to Surface,Automatic (ANTS),ANTS
  IDX_Nodes to Surface,Rigid (RNTR)    ,RNTR
  IDX_Nodes to Surface,Tied (TDNS)     ,TDNS
  IDX_Nodes to Surface,Tied/fail (TNTS),TNTS
  IDX_Nodes to Surface,Eroding (ENTS)  ,ENTS
  IDX_Nodes to Surface,Forming (FNTS)  ,FNTS
  IDX_Nodes to Surface,Drawbead (DRAW) ,DRAWBEAD
!
  IDX_Surface to Surf ,General (STS)   ,STS
  IDX_Surface to Surf ,One-Way (OSTS)  ,OSTS
  IDX_Surface to Surf ,Automatic (ASTS),ASTS
  IDX_Surface to Surf ,Rigid (ROTR)    ,ROTR
  IDX_Surface to Surf ,Tied (TDSS)     ,TDSS
  IDX_Surface to Surf ,Tied/shell(TSES),TSES
  IDX_Surface to Surf ,Tied/fail (TSTS),TSTS
  IDX_Surface to Surf ,Eroding (ESTS)  ,ESTS
  IDX_Surface to Surf ,Edge (SE)       ,SE
  IDX_Surface to Surf ,Forming (FSTS)  ,FSTS
  IDX_Surface to Surf ,Form/1-way(FOSS),FOSS
!
  IDX_All             ,All             ,ALL
 Fld_3
   Prm_Contact Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_*READ,PART
   Lis_      None,' '
 Fld_4
   Prm_Target Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_*READ,PART
   Lis_      None,' '
:E END
:! 
:N Fnc_DYNA_AdList
:S    327,   145,   175
:T Cmd_N
:C )! Fnc_DYNA_AdList
:A Status
:D List Adaptive Meshing Status
:K (LSDYNA)
:H Hlp_C_EDADAPT
Cmd_)!
 Fld_2
  Prm_Choose status option
  Typ_Lis_RadioB
  Lis_Adaptivity Definitions,1
  Lis_Global Settings,2
Cal_Fnc_DYNA_adapstat,2,eq,1,1
Cal_Fnc_DYNA_globstat,2,eq,2,1
:E END
:! 
:N Fnc_DYNA_Assem
:S    480,   156,   317
:T Cmd
:C )! Fnc_DYNA_Assem
:A Assembly Options
:D Assembly Data Written for LS-DYNA 
:K (LSDYNA)
:H Hlp_C_EDASMP
Cmd_)/NOPR
 Fld_0
   Typ_Lab
   Prm_[EDASMP] Assembly Options
!
 Fld_0
   Typ_Sep
!
Cmd_)*SET,_z1
 Fld_2
   Prm_Choose Assembly Option
   Typ_Lis_RadioB
   Lis_Create Assembly,0
   Lis_Delete Assembly,1
   Lis_List Assemblies,2
!
 Fld_0
   Typ_Sep
!
Cmd_)/GO
Cal_Fnc_DYNA_Assem1,2,le,1,2
Cal_Fnc_DYNA_Assem2,2,eq,2,2
:E END
:! 
:N Fnc_DYNA_Assem1
:S   1107,   435,   665
:T Cmd
:C )! Fnc_DYNA_Assem1
:C )/NOPR
:C )*del,_zc
:C )*dim,_zc,char,2
:C )keyw,_keyadd,0
:C )*if,_z1,eq,0,then
:C )*set,_zc(1),'ADD '
:C )*set,_zc(2),'Define'
:C )keyw,_keyadd,1
:C )*elseif,_z1,eq,1,then
:C )*set,_zc(1),'DELE'
:C )*set,_zc(2),'Delete'
:C )*else
:C )*set,_zc(1),'    '
:C )*endif
:C )/GO
:A Assembly Options
:D Assembly Data Written for LS-DYNA 
:K (LSDYNA)
:H Hlp_C_EDASMP
Cmd_EDASMP
 Fld_2
  Typ_Def_*PAR(_zc(1))
!
 Fld_3
  Prm_%_zc(2)% Assembly Number 
  Typ_Int
!
Fld_0
 K_FL(_KEYADD)
 Typ_Sep
!
Fld_0
 K_FL(_KEYADD)
 Typ_Lab
 Prm_Define a parts list for Assembly
!
 Fld_4
 K_FL(_KEYADD)
  Prm_Part  1, Part  2
  Typ_Int2
!
 Fld_6
 K_FL(_KEYADD)
  Prm_Part  3, Part  4
  Typ_Int2
!
 Fld_8
 K_FL(_KEYADD)
  Prm_Part  5, Part  6
  Typ_Int2
!
 Fld_10
 K_FL(_KEYADD)
  Prm_Part  7, Part  8
  Typ_Int2
!
 Fld_12
 K_FL(_KEYADD)
  Prm_Part  9, Part 10
  Typ_Int2
!
 Fld_14
 K_FL(_KEYADD)
  Prm_Part 11, Part 12
  Typ_Int2
!
 Fld_16
 K_FL(_KEYADD)
  Prm_Part 13, Part 14
  Typ_Int2
!
 Fld_18
 K_FL(_KEYADD)
  Prm_Part 15, Part 16
  Typ_Int2
!
:E END
:! 
:N Fnc_DYNA_Assem2
:S    190,   142,    41
:T Cmd
:C )! Fnc_DYNA_Assem2
:A Assembly Options
:D Assembly Data Written for LS-DYNA 
:K (LSDYNA)
Inp_P
Cmd_EDASMP
 Fld_2
  Typ_Def_LIST
!
:E END
:! 
:N Fnc_DYNA_BND
:S    819,   141,   671
:T Command
:C )! Fnc_DYNA_BND
:A Symm Bndry Plane
:D Define Symmetry Boundary Plane
:H Hlp_C_EDBOUND
Cmd_EDBOUND
 Fld_0
  Prm_[EDBOUND]  Define boundary plane for sliding or cyclic symmetry
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Option
  Typ_Lis_RadioB
  Lis_Add plane       ,ADD
  Lis_Delete plane    ,DELE
  Lis_List planes     ,LIST
  Def_ADD
 Fld_0
  Typ_Sep
 Fld_3
  Prm_Lab      Type of boundary plane
  Typ_Lis_OptionB
  Lis_Sliding symmetry plane,SLIDE
  Lis_Cyclic symmetry plane,CYCL
 Fld_4
  Prm_Cname    First boundary symm CM
  Typ_Lis_OptionB
  Lis_*READ,CM
 Fld_5
  Prm_XC,YC,ZC  Norm vect/axis of rot
  Typ_REAL3
  Def_0,0,0
 Fld_8
  Prm_Cname2   Second boundry symm CM
  Typ_LIS_OptionB
  Lis_*READ,CM
 Fld_9
  Prm_COPT     Sliding symm constrnt
  Typ_INT
  Def_0
:E END
:! 
:N Fnc_DYNA_CPU
:S    308,   128,   173
:T Cmd
:C )! Fnc_DYNA_CPU
:A CPU Limit
:D CPU Limit
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDCPU
Inp_NoApply
Cmd_EDCPU
 Fld_0
  Prm_[EDCPU] CPU Limit
 Fld_0
  Typ_Sep
 Fld_2 
  Prm_Set CPU Time Limit to:
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,1)
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_CSdele
:S    408,   138,   263
:T Cmd
:C )! Fnc_DYNA_CSdele
:A Delete 
:D Delete Local CS
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDLCS
Cmd_EDLCS
 Fld_0
   Prm_Delete local coordinate systems
 Fld_0
   Typ_Sep
 Fld_2
   Typ_Def_DELE
 Fld_3
   Prm_ CID Coordinate system ID number
   Typ_INT
   Def_11
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab
   Prm_Note: Leave CID blank to delete all.
 Fld_0
   Typ_Sep
:E END
:! 
:N Fnc_DYNA_CSlist
:S    315,   134,   174
:T Cmd
:C )! Fnc_DYNA_CSlist
:A List 
:D List Local CS
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDLCS
Cmd_EDLCS
 Fld_0
  Prm_List Local Coordinate Systems
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_List
 Fld_3
  Prm_CID Coordinate system ID number
  Typ_INT
  Def_ALL
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_ConMore
:S    482,   170,   305
:T Cmd
:C )! Fnc_DYNA_ConMore
:A Additional Parms
:D Specify Additional Contact Parameters
:K (LSDYNA+PREP7)
:H Hlp_C_EDCMORE
Cmd_EDCMORE
 Fld_0
  Prm_[EDCMORE] Specify Contact Parms
 Fld_2
  Prm_Contact Option
  Typ_Lis_OptionB
  Lis_ADD,ADD
  Lis_DELETE,DELE
 Fld_3
  Prm_Contact Entity Number
  Typ_Int
 Fld_5
  Prm_Penalty Scale Factor (Contact)
  Typ_Real
  Def_1
 Fld_6
  Prm_Penalty Scale Factor (Target)
  Typ_Real
  Def_1
:E END
:! 
:N Fnc_DYNA_Contopt
:S   1916,   167,  1742
:T Cmd
:C )! Fnc_DYNA_Contopt
:A Advanced Controls
:D Advanced Controls
:K (LSDYNA+PREP7)
:H Hlp_C_EDCONTACT
:H Hlp_C_EDSP
Cmd_EDCONTACT
 Fld_0
  Prm_[EDCONTACT] Contact Controls
 Fld_2
  Prm_Contact Stiffness Scale Factor
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,6)
 Fld_3
  Prm_Rigid Wall Penalty Scale Fact
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,7)
 Fld_4
  Prm_Initial Penetration Check
  Typ_Lis_OptionB
  Lis_Full Initial Chk,2
  Lis_No Check,1
  Def_*GET(common,,lsdynacom,,int,16)
 Fld_5
  Prm_STS/NTS Shell Thickness Option
  Typ_Lis_OptionB
  Lis_No Thk Incl,0
  Lis_Thk Incl,2
  Lis_Thk Incl-Exc Rgd,1
  Def_*GET(common,,lsdynacom,,int,17)
 Fld_6
  Prm_Contact Stiffness Options
  Typ_Lis_OptionB
  Lis_Master/Slave Min,1
  Lis_Master Seg Stif,2
  Lis_Slave Node Value,3
  Lis_Weighted Slave,4
  Lis_Inverse Proport,5
  Def_*GET(common,,lsdynacom,,int,18)
 Fld_7
  Prm_SS Shell Thickness Change Opt
  Typ_Lis_OptionB
  Lis_No Thk Change,1
  Lis_Thk Change Incl,2
  Def_*GET(common,,lsdynacom,,int,19)
 Fld_8
  Prm_Automatic Reorientation
  Typ_Lis_OptionB
  Lis_Auto Input Only,1
  Lis_Manual and Auto,2
  Lis_Do Not Reorient,3
  Def_*GET(common,,lsdynacom,,int,20)
 Fld_9
  Prm_Penetration Check Multiplier
  Typ_Int
  Def_*GET(common,,lsdynacom,,real,8)
 Fld_10
  Prm_Small Penetration Check
  Typ_Lis_OptionB
  Lis_Off,0
  Lis_On,1
  Lis_Shortest Diag Ck,2
  Def_*GET(common,,lsdynacom,,int,27)
 Fld_0
  Typ_Sep
Cmd_EDSP
 Fld_0
  Prm_[EDSP] Small Penetration Control
 Fld_2
  Prm_Action
  Typ_Lis_OptionB
  Lis_On,ON
  Lis_Off,OFF
  Lis_List,LIST
  Def_OFF
 Fld_3
   Prm_Contact ID 1
   Typ_Lis_OptionB
   Lis_*READ,CONT
   Lis_       ALL,ALL
   Lis_      None,' '
   Def_' '
 Fld_4
   Prm_Contact ID 2
   Typ_Lis_OptionB
   Lis_*READ,CONT
   Lis_       ALL,ALL
   Lis_      None,' '
   Def_' '
 Fld_5
   Prm_Increment
   Typ_INT
   Def_1
:E END
:! 
:N Fnc_DYNA_Coord
:S    508,   149,   352
:T Command
:C )! Fnc_DYNA_Coord
:A Create Local CS
:D Create Local CS at Specified Location
:H Hlp_C_EDLCS
Cmd_EDLCS
Fld_0
Typ_Lab
Prm_[EDLCS]  Create Local CS at Specified Location
 Fld_0
   Typ_Sep
 Fld_2
   Typ_Def_ADD
Fld_3
  Prm_CID Coordinate System ID Number
  Typ_INT
  Def_11
!
Fld_4
Typ_REAL3
Prm_X1,Y1,Z1  Point on X-axis 
Def_
!
Fld_7
Typ_REAL3
Prm_X2,Y2,Z2  Point on XY-plane
Def_
!
Fld_10
Typ_REAL3
Prm_X3,Y3,Z3  Point of origin
Def_0.0,0.0,0.0
:E END
:! 
:N Fnc_DYNA_CurvAdd
:S    498,   165,   326
:T Cmd
:C )! Fnc_DYNA_CurvAdd
:A Add Curve
:D Add Curve Data for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDCURVE
Cmd_EDCURVE
 Fld_0
  Typ_Lab
  Prm_[EDCURVE]  Curve Definitions for LS-DYNA Explicit 
  Fld_0
   Typ_Sep
 Fld_2
  Typ_Def_ADD
 Fld_3
  Prm_Curve ID Number
   Typ_Int
 Fld_4
  Prm_Parameter name for abscissa vals
  Typ_Lis_OptionB
  Lis_*READ,PAR
 Fld_5
  Prm_Parameter name for ordinate vals
  Typ_Lis_OptionB
  Lis_*READ,PAR
:E END
:! 
:N Fnc_DYNA_CurvDel
:S    395,   171,   217
:T Cmd
:C )! Fnc_DYNA_CurvDel
:A Delete Curve
:D Delete Curve Data for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDCURVE
Cmd_EDCURVE
 Fld_0
  Typ_Lab
  Prm_[EDCURVE] Delete Curve Definitions for LS-DYNA Explicit 
  Fld_0
   Typ_Sep
 Fld_2
  Typ_Def_DELETE
 Fld_3
  Prm_Curve ID Number
   Typ_Lis_OptionB
   Lis_All ,ALL
   Lis_*READ,EDCU
:E END
:! 
:N Fnc_DYNA_CurvLis
:S    387,   167,   213
:T Cmd
:C )! Fnc_DYNA_CurvLis
:A List Curve
:D List Curve Data for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDCURVE
Cmd_EDCURVE
 Fld_0
  Typ_Lab
  Prm_[EDCURVE] List Curve Definitions for LS-DYNA Explicit 
  Fld_0
   Typ_Sep
 Fld_2
  Typ_Def_LIST
 Fld_3
  Prm_Curve ID Number
   Typ_Lis_OptionB
   Lis_All ,ALL
   Lis_*READ,EDCU
:E END
:! 
:N Fnc_DYNA_CurvPlt
:S    371,   167,   197
:T Cmd
:C )! Fnc_DYNA_CurvPlt
:A Plot Curve
:D Plot Curve Data for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDCURVE
Cmd_EDCURVE
 Fld_0
  Typ_Lab
  Prm_[EDCURVE] Plot Curve Definitions for LS-DYNA Explicit 
  Fld_0
   Typ_Sep
 Fld_2
  Typ_Def_PLOT
 Fld_3
  Prm_Curve ID Number
   Typ_Lis_OptionB
   Lis_*READ,EDCU
:E END
:! 
:N Fnc_DYNA_Damp
:S    564,   167,   390
:T Cmd
:C )! Fnc_DYNA_Damp
:A Damping
:D Damping Options for LS-DYNA Explicit 
:K ((LSDYNA)+(SOLUTION*PREP7))
:H Hlp_C_EDDAMP
Cmd_EDDAMP
 Fld_0
  Typ_Lab
  Prm_[EDDAMP]  Damping Options for LS-DYNA Explicit 
 Fld_0
  Typ_Sep
 Fld_2
  Prm_PART number
  Typ_Lis_OptionB
  Lis_ALL parts,ALL
  Lis_*READ,PART
  Def_*GET(common,,lsdynacom,,int,67)
 Fld_3
  Prm_Curve ID
  Typ_INT
  Def_*GET(common,,lsdynacom,,int,68)
 Fld_4
  Prm_System Damping Constant
  Typ_Int
  Def_*GET(common,,lsdynacom,,real,22)
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_DeacCon
:S   1745,   181,  1557
:T Cmd
:C )! Fnc_DYNA_DeacCon
:A Deactvate Entity
:D Deactivate Contact Entities for LS-DYNA Explicit
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDDC
Cmd_EDDC,DACT
 Fld_0
   Typ_Lab
   Prm_[EDDC]  Deactivate Contact Entities for LS-DYNA Explicit 
 Fld_0
   Typ_Sep
 Fld_2
  Prm_Contact Type
  Typ_IDX
  IDX_Single Surface  ,Auto Gen'l (AG) ,AG
  IDX_Single Surface  ,Automatic (ASSC),ASSC
  IDX_Single Surface  ,Auto 2-D (ASS2D),ASS2D
  IDX_Single Surface  ,Single Surf (SS),SS
  IDX_Single Surface  ,Eroding (ESS)   ,ESS
  IDX_Single Surface  ,Edge (SE)       ,SE
!
  IDX_Nodes to Surface,General (NTS)   ,NTS
  IDX_Nodes to Surface,Automatic (ANTS),ANTS
  IDX_Nodes to Surface,Rigid (RNTR)    ,RNTR
  IDX_Nodes to Surface,Tied (TDNS)     ,TDNS
  IDX_Nodes to Surface,Tied/fail (TNTS),TNTS
  IDX_Nodes to Surface,Eroding (ENTS)  ,ENTS
  IDX_Nodes to Surface,Forming (FNTS)  ,FNTS
  IDX_Nodes to Surface,Drawbead (DRAW) ,DRAWBEAD
!
  IDX_Surface to Surf ,General (STS)   ,STS
  IDX_Surface to Surf ,One-Way (OSTS)  ,OSTS
  IDX_Surface to Surf ,Automatic (ASTS),ASTS
  IDX_Surface to Surf ,Rigid (ROTR)    ,ROTR
  IDX_Surface to Surf ,Tied (TDSS)     ,TDSS
  IDX_Surface to Surf ,Tied/shell(TSES),TSES
  IDX_Surface to Surf ,Tied/fail (TSTS),TSTS
  IDX_Surface to Surf ,Eroding (ESTS)  ,ESTS
  IDX_Surface to Surf ,Edge (SE)       ,SE
  IDX_Surface to Surf ,Forming (FSTS)  ,FSTS
  IDX_Surface to Surf ,Form/1-way(FOSS),FOSS
!
  IDX_All             ,All             ,ALL
 Fld_3
   Prm_Contact Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_*READ,PART
   Lis_      None,' '
 Fld_4
   Prm_Target Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_*READ,PART
   Lis_      None,' '
:E END
:! 
:N Fnc_DYNA_DefBox
:S    886,   138,   741
:T Cmd
:C )! Fnc_DYNA_DefBox
:A Define Box
:D Define Box for contact
:K (LSDYNA)
:H Hlp_C_EDBX
Cmd_EDBX
Fld_0
 Typ_Lab
 Prm_[EDBX] Define a box-shaped volume for contact definition
!
Fld_0
 Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_
!
 Fld_2
  Prm_OPTION    Box Option
  Typ_Lis_RadioB
  Lis_Add     ,Add
  Lis_Delete  ,Delete
  Lis_List    ,List
!
Fld_0
 Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_
!
 Fld_3
  Prm_BOXID     Box ID Number
  Typ_Int
  Def_1
!
 Fld_4
  Prm_XMIN      Minimum X coordinate
  Typ_Real
  Def_0.0
!
 Fld_5
  Prm_XMAX      Maximum X coordinate
  Typ_Real
  Def_0.0
!
 Fld_6
  Prm_YMIN      Minimum Y coordinate
  Typ_Real
  Def_0.0
!
 Fld_7
  Prm_YMAX      Maximum Y coordinate
  Typ_Real
  Def_0.0
!
 Fld_8
  Prm_ZMIN      Minimum Z coordinate
  Typ_Real
  Def_0.0
!
 Fld_9
  Prm_ZMAX      Maximum Z coordinate
  Typ_Real
  Def_0.0
!
:E END
:! 
:N Fnc_DYNA_DelCon
:S   1732,   172,  1553
:T Cmd
:C )! Fnc_DYNA_DelCon
:A Delete Entity
:D Delete Contact Entities for LS-DYNA Explicit
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDDC
Cmd_EDDC,DELE
 Fld_0
   Typ_Lab
   Prm_[EDDC]  Delete Contact Entities for LS-DYNA Explicit 
 Fld_0
   Typ_Sep
 Fld_2
  Prm_Contact Type
  Typ_IDX
  IDX_Single Surface  ,Auto Gen'l (AG) ,AG
  IDX_Single Surface  ,Automatic (ASSC),ASSC
  IDX_Single Surface  ,Auto 2-D (ASS2D),ASS2D
  IDX_Single Surface  ,Single Surf (SS),SS
  IDX_Single Surface  ,Eroding (ESS)   ,ESS
  IDX_Single Surface  ,Edge (SE)       ,SE
!
  IDX_Nodes to Surface,General (NTS)   ,NTS
  IDX_Nodes to Surface,Automatic (ANTS),ANTS
  IDX_Nodes to Surface,Rigid (RNTR)    ,RNTR
  IDX_Nodes to Surface,Tied (TDNS)     ,TDNS
  IDX_Nodes to Surface,Tied/fail (TNTS),TNTS
  IDX_Nodes to Surface,Eroding (ENTS)  ,ENTS
  IDX_Nodes to Surface,Forming (FNTS)  ,FNTS
  IDX_Nodes to Surface,Drawbead (DRAW) ,DRAWBEAD
!
  IDX_Surface to Surf ,General (STS)   ,STS
  IDX_Surface to Surf ,One-Way (OSTS)  ,OSTS
  IDX_Surface to Surf ,Automatic (ASTS),ASTS
  IDX_Surface to Surf ,Rigid (ROTR)    ,ROTR
  IDX_Surface to Surf ,Tied (TDSS)     ,TDSS
  IDX_Surface to Surf ,Tied/shell(TSES),TSES
  IDX_Surface to Surf ,Tied/fail (TSTS),TSTS
  IDX_Surface to Surf ,Eroding (ESTS)  ,ESTS
  IDX_Surface to Surf ,Edge (SE)       ,SE
  IDX_Surface to Surf ,Forming (FSTS)  ,FSTS
  IDX_Surface to Surf ,Form/1-way(FOSS),FOSS
!
  IDX_All             ,All             ,ALL
 Fld_3
   Prm_Contact Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_*READ,PART
   Lis_      None,' '
 Fld_4
   Prm_Target Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_*READ,PART
   Lis_      None,' '
:E END
:! 
:N Fnc_DYNA_Double
:S    303,   179,   117
:T Command
:C )! Fnc_DYNA_Double
:A Double Precision
:D Double Precision Option for LS-DYNA Explicit
:K #(PREP7*SOLUTION)
:H Hlp_C_EDDB
Inp_NoApply
Cmd_EDDB
 Fld_2
  Prm_Numerical Precision
  Typ_LOGI,Single,Double
  Def_*GET(commom,,lsdynacom,,int,85)
:E END
:! 
:N Fnc_DYNA_EDAC
:S   1871,   328,  1536
:T Cmd
:C )! Fnc_DYNA_EDAC
:C )/NOPR
:C )keyw,curvtrue,0
:C )_z99=' '
:C )*GET,_z1,common,,lsdynacom,,int,87
:C )*if,_z1,gt,0,then
:C )keyw,curvtrue,1
:C )*endif
:C )/GO
:A Global Settings
:D Adapative Meshing Global Settings for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDCADAPT
Inp_NoApply
Cmd_EDCADAPT
  Fld_0
   Typ_Lab
   Prm_[EDCADAPT] Adaptive Meshing Settings 
  Fld_0
   Typ_Sep
  Fld_2
   Prm_FREQ Refinements time interval
   Typ_Real
   Def_*GET(common,,lsdynacom,,real,26)
  Fld_3
   Prm_TOL Error tolerance (degrees)
   Typ_Real
   Def_*GET(common,,lsdynacom,,real,27)
  Fld_0
   Typ_Sep
  Fld_4
   Prm_OPT Angle change check option
   Typ_Lis_RadioB
   Lis_Incrementally  , 1
   Lis_From original  , 2
   Def_*GET(common,,lsdynacom,,int,70)
  Fld_0
   Typ_Sep
 Fld_5
   Prm_MAXLVL Max refinements level
   Typ_Int
   Def_*GET(common,,lsdynacom,,int,71)
 Fld_6
   Prm_BTIME Begin time for adaptivity
   Typ_Real
   Def_*GET(common,,lsdynacom,,real,28)
 Fld_7
   Prm_DTIME End time for adaptivity
   Typ_Real
   Def_*GET(common,,lsdynacom,,real,29)
 Fld_0
   Typ_Sep
 Fld_8
   Prm_LCID Load curve ID for remeshing
   Typ_Int
   K_LN(CURVTRUE)
   Def_*GET(common,,lsdynacom,,int,87)
   K_LN(curvtrue)
   Def_*PAR(_z99)
 Fld_9
   Prm_ADPSIZE Minimum element size
   Typ_Real
   Def_*GET(common,,lsdynacom,,real,30)
 Fld_10
   Prm_ADPASS Number of passes
   Typ_Logi,One,Two
   Def_*GET(common,,lsdynacom,,int,88)
 Fld_11
   Prm_IREFLG Uniform refinement level
   Typ_Int
   Def_*GET(common,,lsdynacom,,int,89)
 Fld_12
   Prm_ADPENE Tool adaptivity control
   Typ_Real
   Def_*GET(common,,lsdynacom,,real,31)
 Fld_13
   Prm_ADPTH Abs shell thickness level
   Typ_Real
   Def_*GET(common,,lsdynacom,,real,32)
 Fld_14
   Prm_MAXEL Maximum number of elements
   Typ_Int
   Def_*GET(common,,lsdynacom,,int,90)
:E END
:! 
:N Fnc_DYNA_EDGC
:S   1372,   165,  1200
:T Cmd
:C )! Fnc_DYNA_EDGC
:A Define
:D Define Global ALE Settings for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_UI_ALE
Inp_NoApply
Cmd_EDGCALE
  Fld_0
   Typ_Lab
   Prm_[EDGCALE] Define Global ALE settings for LS-DYNA
  Fld_2
   Prm_Cycles between advection
   Typ_REAL
   Def_*GET(COMMON,,LSDYNACOM,,REAL,43)
  Fld_3
   Prm_Advection Method
   Typ_Lis_RadioB
   Lis_Donor Cell,0
   Lis_Van Leer,1
   Def_*GET(COMMON,,LSDYNACOM,,REAL,44)
  Fld_4
   Typ_Def_1
Cmd_)*CSET,1,10
  Fld_0
   Typ_Sep
  Fld_0
   Typ_Lab
   Prm_[EDALE] Define Mesh Smoothing settings for ALE
  Fld_2
    Typ_Def_ADD
  Fld_3
   Typ_Def_ALL
  Fld_4
   Prm_[AFAC] Simple Avg Weight Factor
   Typ_Real
   Def_*GET(COMMON,,LSDYNACOM,,REAL,35)
  Fld_5
   Prm_[BFAC] Volume Weight Factor
   Typ_Real
   Def_*GET(COMMON,,LSDYNACOM,,REAL,36)
  Fld_6
   Typ_Def_0
  Fld_7
   Prm_[DFAC] Equipotential Weight Factor
   Typ_Real
   Def_*GET(COMMON,,LSDYNACOM,,REAL,38)
  Fld_8
   Prm_[EFAC] Equilibrium Weight Factor
   Typ_Real
   Def_*GET(COMMON,,LSDYNACOM,,REAL,39)
  Fld_9
   Prm_[START] Smoothing start time
   Typ_Real
   Def_*GET(COMMON,,LSDYNACOM,,REAL,40)
  Fld_10
   Prm_[END] Smoothing end time
   Typ_Real
   Def_*GET(COMMON,,LSDYNACOM,,REAL,41)
  Fld_11
   Typ_Def_1
Cmd_)/GO
Cal_Fnc_DYNA_ALEADD,2,ES,ADD,2,2
Cal_Fnc_DYNA_ALEDELE,2,ES,DELE,2,2
:E END
:! 
:N Fnc_DYNA_EDNB
:S    594,   171,   416
:T Cmd
:C )! Fnc_DYNA_EDNB
:A Non-Refl Bndry 
:D Non-reflecting boundary for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDNB
Cmd_EDNB
  Fld_0
   Typ_Lab
   Prm_[EDNB]  Non-reflecting boundary
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Option
   Typ_Lis_RadioB
   Lis_Add             ,ADD
   Lis_Delete          ,DELE
   Lis_List            ,LIST
   Def_ADD
  Fld_0
   Typ_Sep
  Fld_3
   Prm_Component
   Typ_Lis_OptionB
   Lis_*READ,CM
 Fld_4
   Prm_Dilatational flag
   Typ_Logi,Off,On
 Fld_5
   Prm_Shear flag
   Typ_Logi,Off,On
  Fld_0
   Typ_Sep
:E END
:! 
:N Fnc_DYNA_EDRC
:S    637,   139,   491
:T Command
:C )! Fnc_DYNA_EDRC
:A Controls
:D Rigid-Deformable Controls
:K (LSDYNA)
:H Hlp_C_EDRC
Cmd_EDRC
 Fld_0
  Typ_Lab
  Prm_[EDRC] Controls for Parts Switched between
 Fld_0
  Typ_Lab
  Prm_       Deformable and Rigid
 Fld_2
  Prm_Action
  Typ_Lis_OptionB
  Lis_Add,ADD
  Lis_List,LIST
  Lis_Delete,DELE
  Def_MODIFY
 Fld_3
  Prm_Welding
  Typ_Lis_OptionB
  Lis_No Change,0
  Lis_Deactivate,1
  Lis_Activate,2
  Def_0
 Fld_4
  Prm_Nodal Constraint
  Typ_Lis_OptionB
  Lis_No Change,0
  Lis_Deactivate,1
  Lis_Activate,2
  Def_0
 Fld_6
  Prm_Maximum Time Step after Switch
  Typ_REAL
:E END
:! 
:N Fnc_DYNA_EDRD
:S    648,   135,   506
:T Command
:C )! Fnc_DYNA_EDRD
:A Switch
:D Rigid-Deformable Switch
:K (LSDYNA)
:H Hlp_C_EDRD
Cmd_EDRD
 Fld_0
  Typ_Lab
  Prm_[EDRD] Switch Part Between Deformable and Rigid
 Fld_2
  Prm_Action
  Typ_Lis_OptionB
  Lis_Initialize      ,D2R  !Initialize
  Lis_Deform to Rigid ,D2R
  Lis_Rigid to Deform ,R2D
  Lis_List,LIST
  Def_D2R  !Initialize
 Fld_3
  Prm_PART number to be switched
  Typ_Lis_OptionB
  Lis_*READ,PART
  Lis_ALL, 0
 Fld_4
  Prm_Master Rigid Body PART number
  Typ_Lis_OptionB
  Lis_None,' '
  Lis_*READ,PART
 Fld_0
  Typ_Lab
  Prm_(NOTE: Only Choose Master when switching to Rigid)
:E END
:! 
:N Fnc_DYNA_EDRI
:S    642,   138,   497
:T Command
:C )! Fnc_DYNA_EDRI
:A Inertia Property
:D Inertia Property
:K (LSDYNA)
:H Hlp_C_EDRI
Cmd_EDRI
 Fld_0
  Typ_Lab
  Prm_[EDRI] Define Inertia of Part Switched 
 Fld_0
  Typ_Lab
  Prm_       from Deformable to Rigid
 Fld_2
  Prm_Action
  Typ_Lis_OptionB
  Lis_Add,ADD
  Lis_Delete,DELETE
  Lis_List,LIST
  Def_ADD
 Fld_3
  Prm_PART number
  Typ_Lis_OptionB
  Lis_*READ,PART
  Lis_ALL  ,0
 Fld_4
  Prm_Center of Mass: XC, YC, ZC
  Typ_REAL3
 Fld_7
  Prm_Mass
  Typ_REAL
 Fld_8
  Prm_Moment of Inertia: Ixx, Iyy, Izz
  Typ_REAL3
 Fld_11
  Prm_                   Ixy, Iyz, Ixz
  Typ_REAL3
:E END
:! 
:N Fnc_DYNA_EDTERls
:S    171,   143,    21
:T Cmd_N
:C )! Fnc_DYNA_EDTERls
:A List
:D Criteria to Stop an Analysis
:K (LSDYNA)
:H Hlp_C_EDTER
Inp_P
Cmd_EDTER,LIST
:E END
:! 
:N Fnc_DYNA_EDTERnd
:S    340,   131,   202
:T Cmd_P
:C )! Fnc_DYNA_EDTERnd
:A On a Node
:D Select Node
:K (LSDYNA)
:H Hlp_C_EDTER
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)*SET,_z99
 Fld_2
  Prm_Pick or enter node to apply stop criteria
  Typ_NODE
  Min_1
  Max_1
  Cnt_1
  PCN_1
! Exclude_from_paths
Cmd_)/GO
Cal_Fnc_DYNA_EDTEnd2
:E END
:! 
:N Fnc_DYNA_EDTERpt
:S    607,   150,   450
:T Command
:C )! Fnc_DYNA_EDTERpt
:A On a Part
:D Criteria to Stop an Analysis
:K (LSDYNA)
:H Hlp_C_EDTER
Cmd_EDTER
 Fld_0
  Typ_Lab
  Prm_[EDTER] Criteria to Stop an Analysis
 Fld_2
  Prm_Action
  Typ_Lis_OptionB
  Lis_Add,ADD
  Lis_Delete,DELETE
  Def_ADD
 Fld_3
  Typ_Def_PART
 Fld_4
  Prm_Applied on rigid PART number
  Typ_Lis_OptionB
  Lis_*READ,RIGB
 Fld_5
  Prm_Terminate on
  Typ_Lis_OptionB
  Lis_Global X,1
  Lis_Global Y,2
  Lis_Global Z,3
  Lis_Magnitude,4
 Fld_6
  Prm_Maximum Coordinate
  Typ_REAL
 Fld_7
  Prm_Minimum Coordinate
  Typ_REAL
:E END
:! 
:N Fnc_DYNA_EDTEnd2
:S    620,   150,   463
:T Command
:C )! Fnc_DYNA_EDTEnd2
:A On a Node
:D Criteria to Stop an Analysis
:K (LSDYNA)
:H Hlp_C_EDTER
Cmd_EDTER
 Fld_0
  Typ_Lab
  Prm_[EDTER] Criteria to Stop an Analysis
 Fld_2
  Prm_Action
  Typ_Lis_OptionB
  Lis_Add,ADD
  Lis_Delete,DELETE
  Def_ADD
 Fld_3
  Typ_Def_NODE
 Fld_4
  Typ_Def_*PAR(_z99)
 Fld_5
  Prm_Terminate on
  Typ_Lis_OptionB
  Lis_Global X,1
  Lis_Global Y,2
  Lis_Global Z,3
  Lis_Contact,4
 Fld_0
  Typ_Sep
 Fld_6
  Prm_Maximum Coordinate
  Typ_REAL
 Fld_7
  Prm_Minimum Coordinate
  Typ_REAL
 Fld_0
  Typ_Lab
  Prm_(not valid for Contact)
:E END
:! 
:N Fnc_DYNA_Edadapt
:S    364,   157,   200
:T Cmd
:C )! Fnc_DYNA_Edadapt
:A Apply to Part
:D Apply Adapative Meshing to a Part
:K (LSDYNA)
:H Hlp_C_EDADAPT
Cmd_EDADAPT
  Fld_0
   Typ_Lab
   Prm_[EDADAPT] Adaptive Meshing Option 
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Part ID Number
   Typ_Real
 Fld_3
   Prm_Adaptivity is
   Typ_Logi,Off,On
  Fld_0
   Typ_Sep
:E END
:! 
:N Fnc_DYNA_Edhist
:S    428,   174,   247
:T Cmd
:C )! Fnc_DYNA_History
:A Select Component
:D Select Component for Time-History Output
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDHIST
Cmd_EDHIST
 Fld_0
   Typ_Lab
   Prm_[EDHIST] Specify Time-History Output
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Node or element component name
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_LIST out contrls,LIST
   Lis_DEL out controls,DELE
 Fld_0
   Typ_Sep
:E END
:! 
:N Fnc_DYNA_Edint
:S    496,   174,   315
:T Cmd
:C )! Fnc_DYNA_Edint
:A Integ Pt Storage
:D Specify Integration Point Storage
:K ((LSDYNA*FULL_ANS)+SOLUTION)
:H Hlp_C_EDINT
Inp_Apply
Cmd_EDINT
 Fld_0
   Typ_Lab
   Prm_[EDINT] Set the no. of integration pts for SHELL/BEAM Output:
 Fld_2
   Prm_No. of SHELL integration points
   Typ_INT
   Def_*GET(common,,lsdynacom,,int,25)
 Fld_3
   Prm_No. of BEAM integration points
   Typ_INT
   Def_*GET(common,,lsdynacom,,int,26)
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_Edopt
:S    909,   525,   377
:T Cmd
:C )! Fnc_DYNA_Outopt
:C )/NOPR
:C )*del,_zc
:C )*dim,_zc,char,1
:C )_z2 = 0
:C )*do,i,1,20
:C )j = 32+i 
:C )*GET,_z1,common,,lsdynacom,,int,j    ! Output control option  
:C )*if,_z1,gt,0,then
:C )_z2 = _z1
:C )*endif
:C )*enddo
:C )*if,_z2,eq,1,then
:C )_zc(1) = 'LSDYNA'
:C )*elseif,_z2,eq,3,then
:C )_zc(1) = 'BOTH'
:C )*else
:C )_zc(1) = 'ANSYS'
:C )*endif
:C )/GO
:A Output File Types
:D Specify Output File Types for LS-DYNA Solver
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDOPT
Cmd_EDOPT
 Fld_0
   Typ_Lab
   Prm_[EDOPT] Specify output type for LS-DYNA
 Fld_0
   Typ_Sep
 Fld_2
   Prm_File options
   Typ_Lis_OptionB
   Lis_Add,ADD
   Lis_Delete,DELE
   Lis_List,LIST
 Fld_3
   Typ_Def_blank
 Fld_4
   Prm_Produce output for...
   Typ_Lis_OptionB
   Lis_ANSYS,ANSYS
   Lis_LS-DYNA,LSDYNA
   Lis_ANSYS and LS-DYNA,BOTH
   Def_*PAR(_zc(1))
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_Edout
:S   1005,   267,   731
:T Cmd
:C )! Fnc_DYNA_Edout
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,array,19,1,1
:C )*DO,i,1,19
:C )KEYW,OUT%i%,0
:C )_zc(i) = 0.0
:C )*enddo
:C )/GO
:A ASCII Output
:D ASCII Output
:K ((LSDYNA*FULL_ANS)+SOLUTION)
:H Hlp_C_EDOUT
Inp_Apply
Cmd_)/NOPR
Cmd_)*set,_zc(1)
 Fld_0
   Typ_Lab
   Prm_[EDOUT] Specify Specialized Output Files
 Fld_2
   Prm_Write Output Files for...
   Typ_MLis
   Lis_Global data,1.0
   Lis_Boundary Conds.,2.0
   Lis_Wall force,3.0
   Lis_Discrete elems,4.0
   Lis_Material energy,5.0
   Lis_Nodal interface,6.0
   Lis_Resultant forces,7.0
   Lis_Deformed geom.,8.0
   Lis_SPC Reaction,9.0
   Lis_Nodal reaction ,10.0
   Lis_Rigid body data,11.0
   Lis_Geom contact,12.0
   Lis_Sliding intrface,13.0
   Lis_Joint force data,14.0
   Lis_Element data,15.0
   Lis_Nodal data,16.0
   Lis_Write ALL files,17.0
   Lis_LIST file status,18.0
   Lis_DEL output ctrls,19.0
   Bnd_0.0,19.0
 Fld_0
   Typ_Sep
Cmd_)/GO
Cal_Fnc_DYNA_TmHis2,2,GE,1,2
:E END
:! 
:N Fnc_DYNA_Energy
:S    505,   158,   340
:T Cmd
:C )! Fnc_DYNA_Energy
:A Energy Options
:D Energy Options
:K ((LSDYNA*FULL_ANS)+SOLUTION)
:H Hlp_C_EDENERGY
Inp_NoApply
Cmd_EDENERGY
 Fld_0
  Typ_Lab
  Prm_[EDENERGY] Energy Options
 Fld_0
  Typ_Sep
 Fld_3
  Prm_Stonewall Energy
  Typ_LOGI,Off  ,On
  Def_1
 Fld_2
  Prm_Hourglass Energy
  Typ_LOGI,Off  ,On
  Def_1
 Fld_4
  Prm_Sliding Interface
  Typ_LOGI,Off  ,On
  Def_1
 Fld_5
  Prm_Rayliegh Energy
  Typ_LOGI,Off  ,On
  Def_1
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_Hourgls
:S    331,   134,   190
:T Cmd
:C )! Fnc_DYNA_Hourgls
:A Global
:D Hourglass Controls
:K (LSDYNA)
:H Hlp_C_EDHGLS
Inp_NoApply
Cmd_EDHGLS
 Fld_0
  Prm_[EDHGLS] Hourglass Controls
 Fld_0
  Typ_Sep
 Fld_2 
  Prm_Set Hourglass Coefficient to
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,2)
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_Input
:S    522,   197,   318
:T Cmd
:C )! Fnc_DYNA_Input
:C )/NOPR
:C )*SET,_zx,'*.k'
:C )/GO
:A Write Jobname.k
:D Input files to be Written for LS-DYNA 
:K (LSDYNA)
:H Hlp_C_EDWRITE
Cmd_EDWRITE
 Fld_0
   Typ_Lab
   Prm_[EDWRITE] Specify Files for LS-DYNA Solver
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Write results files for...
   Typ_Lis_OptionB
   Lis_ANSYS,ANSYS
   Lis_LS-DYNA,LSDYNA
   Lis_ANSYS and LS-DYNA,BOTH
 Fld_3
   Prm_Write input files to...
  Typ_FILE_INLINE
  Def_*PAR(_zx)
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_LisCont
:S    375,   158,   193
:T Cmd
:C )! Fnc_DYNA_LisCont
:A List Entities
:D List Contact Entities for LS-DYNA Explicit
:K (LSDYNA*FULL_ANS)
Cmd_EDCLIST
 Fld_0
   Typ_Lab
   Prm_[EDCLIST]  List Contact Entities for LS-DYNA Explicit
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Contact ID
   Typ_Lis_OptionB
   Lis_*READ,CONT
   Lis_       ALL,ALL
:E END_Fnc_DYNA_LisCont
:! 
:N Fnc_DYNA_Load
:S   2256,   339,  1910
:T Cmd
:C )! Fnc_DYNA_Load
:C )/NOPR
:C )*if,_loadkey,le,0,then
:C )*do,_i,1,40
:C )keyw,tran%_i%,0
:C )keyw,both%_i%,0
:C )keyw,dyn%_i%,0
:C )*enddo
:C )_loadkey = 1
:C )*endif
:C )/GO
:A Specify Loads
:D Specify Loads for LS-DYNA Explicit 
:K ((LSDYNA*FULL_ANS)+(SOLUTION*PREP7))
:H Hlp_C_EDLOAD
Cmd_EDLOAD
 Fld_0
  Typ_Lab
  Prm_[EDLOAD]  Loading Options for LS-DYNA Explicit 
  Fld_0
   Typ_Sep
 Fld_2
  Prm_Load Options
  Typ_Lis_OptionB
  Lis_Add Loads       ,ADD
  Lis_Delete Loads    ,DELETE
  Lis_List Loads      ,LIST
  Def_ADD
 Fld_0
   Typ_Sep
 Fld_3
  Prm_Load Labels
  Typ_Lis
  Lis_FX,FX
  Lis_FY,FY
  Lis_FZ,FZ
  Lis_MX,MX
  Lis_MY,MY
  Lis_MZ,MZ
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
  Lis_VX,VX
  Lis_VY,VY
  Lis_VZ,VZ
  Lis_AX,AX
  Lis_AY,AY
  Lis_AZ,AZ
  Lis_ACLX,ACLX
  Lis_ACLY,ACLY
  Lis_ACLZ,ACLZ
  Lis_OMGX,OMGX
  Lis_OMGY,OMGY
  Lis_OMGZ,OMGZ
  Lis_PRES,PRES
  Lis_RBUX,RBUX
  Lis_RBUY,RBUY
  Lis_RBUZ,RBUZ
  Lis_RBVX,RBVX
  Lis_RBVY,RBVY
  Lis_RBVZ,RBVZ
  Lis_RBRX,RBRX
  Lis_RBRY,RBRY
  Lis_RBRZ,RBRZ
  Lis_RBFX,RBFX
  Lis_RBFY,RBFY
  Lis_RBFZ,RBFZ
  Lis_RBMX,RBMX
  Lis_RBMY,RBMY
  Lis_RBMZ,RBMZ
  Lis_RBOX,RBOX
  Lis_RBOY,RBOY
  Lis_RBOZ,RBOZ
  Lis_TEMP,TEMP
 Fld_0
   Typ_Sep
 Fld_4
   Prm_Coordinate system/Surface Key
   Typ_INT
   Def_0
 Fld_5
   Prm_Component name or PART number:
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_*READ,PART
   Lis_None defined,' '
  Fld_6
   Prm_Parameter name for time values:
   Typ_Lis_OptionB
   Lis_*READ,PAR
   Lis_None,' '
  Fld_7
   Prm_Parameter name for data values:
   Typ_Lis_OptionB
   Lis_*READ,PAR
   Lis_None,' '
  Fld_0
   Typ_Sep
  Fld_8
   Prm_Analysis type for load curves:
   Typ_Lis_RadioB
   Lis_Transient only , 0
   Lis_Dynamic relax  , 1
   Lis_Trans and Dynam, 2
   Def_*GET(common,,lsdynacom,,int,62)
  Fld_0
   Typ_Sep
  Fld_0
   Prm_To use an existing load curve:
  Fld_9
   Prm_Load curve ID
   Typ_Real
  Fld_10
   Prm_Scale factor for load curve
   Typ_Real
  Fld_11
   Prm_BTIME Birth time-Activate imposed motion
   Typ_Real
  Fld_12
   Prm_DTIME Death time-Remove imposed motion
   Typ_Real
!
Cal_Fnc_tranld,8,EQ,0,1
Cal_Fnc_dynld,8,EQ,1,1
Cal_Fnc_bothld,8,EQ,2,1
:E END
:! 
:N Fnc_DYNA_MatProp
:S    808,   149,   652
:T Cmd
:C )! Fnc_DYNA_MatProp
:A Local
:D Define Hourglass Material Properties
:K (LSDYNA)
:H Hlp_C_EDMP
Cmd_EDMP
 Fld_0
   Typ_Lab
   Prm_[EDMP] (Lab=HGLS) Hourglass Material Properties
 Fld_0
   Typ_Sep
 Fld_2
   Typ_Def_HGLS
 Fld_3
   Prm_Material Reference number
   Typ_INT
   Def_*GET(ACTIVE,,MAT)
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab 
   Prm_Material Property Values
 Fld_4
   Prm_VAL1   Hourglass control type
   Typ_Int
   Def_0
 Fld_5
   Prm_VAL2   Hourglass coefficient
   Typ_Real
   Def_0.1
 Fld_6
   Prm_VAL3   Quadratic bulk viscosity
   Typ_Real
   Def_1.5
 Fld_7
   Prm_VAL4   Linear bulk viscosity
   Typ_Real
   Def_0.06
 Fld_8
   Prm_VAL5   Shell bending coefficient
   Typ_Real
 Fld_9
   Prm_VAL6   Shell warping coefficient
   Typ_Real
:E END
:! 
:N Fnc_DYNA_Par1
:S    768,   375,   386
:T Cmd
:C )! Fnc_DYNA_Par1
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,1
:C )*if,_z1,eq,1,then
:C )  _zc(1)='AG'
:C )*elseif,_z1,eq,2,then
:C )  _zc(1)='ASSC'
:C )*elseif,_z1,eq,21,then
:C )  _zc(1)='SS'
:C )*elseif,_z1,eq,24,then
:C )  _zc(1)='ASS2D'
:C )*endif
:C )/GO
:A Contact Options
:D Contact Options
:K (LSDYNA)
:H Hlp_C_EDCGEN
Inp_P
Cmd_EDCGEN
Fld_0
Typ_Lab
 Prm_Sliding Friction Option
Fld_0
 Typ_Sep
 Fld_2
  Typ_Def_*PAR(_zc(1))
 Fld_5
  Typ_Def_*PAR(_z2)
 Fld_6
  Typ_Def_*PAR(_z3)
 Fld_7
  Typ_Def_*PAR(_z4)
 Fld_8
  Typ_Def_*PAR(_z5)
 Fld_9 
  Typ_Def_*PAR(_z6)
 Fld_14
  Typ_Def_*PAR(_z7)
 Fld_15
  Typ_Def_*PAR(_z8)
 Fld_16
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z9)
 Fld_17
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z10)
:E END
:! 
:N Fnc_DYNA_Par2
:S    784,   202,   575
:T Cmd
:C )! Fnc_DYNA_Par2
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1)='ESS'
:C )/GO
:A Contact Options
:D Contact Options
:K (LSDYNA)
:H Hlp_C_EDCGEN
Cmd_EDCGEN
Fld_0
Typ_Lab
 Prm_Additional Options for ESS
Fld_0
Typ_Sep
 Fld_2
  Typ_Def_*PAR(_zc(1))
 Fld_5
  Typ_Def_*PAR(_z2)
 Fld_6
  Typ_Def_*PAR(_z3)
 Fld_7
  Typ_Def_*PAR(_z4)
 Fld_8
  Typ_Def_*PAR(_z5)
 Fld_9 
  Typ_Def_*PAR(_z6)
 Fld_10
  Prm_V1  Symmetry Plane Option
  Typ_Real
  Def_0
 Fld_11
  Prm_V2  Erosion/Interior Node Option
  Typ_Real
  Def_1
 Fld_12
  Prm_V3  Adj Mat'l Treatment Option
  Typ_Real
  Def_0
 Fld_14
  Typ_Def_*PAR(_z7)
 Fld_15
  Typ_Def_*PAR(_z8)
!
 Fld_16
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z9)
!
 Fld_17
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z10)
:E END
:! 
:N Fnc_DYNA_Par3
:S   1394,   748,   639
:T Cmd
:C )! Fnc_DYNA_Par3
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,1
:C )*if,_z1,eq,4,then
:C )  _zc(1)='SE'
:C )*elseif,_z1,eq,5,then
:C )  _zc(1)='NTS'
:C )*elseif,_z1,eq,6,then
:C )  _zc(1)='ANTS'
:C )*elseif,_z1,eq,8,then
:C )  _zc(1)='TDNS'
:C )*elseif,_z1,eq,11,then
:C )  _zc(1)='FNTS'
:C )*elseif,_z1,eq,13,then
:C )  _zc(1)='STS'
:C )*elseif,_z1,eq,14,then
:C )  _zc(1)='ASTS'
:C )*elseif,_z1,eq,16,then
:C )  _zc(1)='TDSS'
:C )*elseif,_z1,eq,19,then
:C )  _zc(1)='FSTS'
:C )*elseif,_z1,eq,20,then
:C )  _zc(1)='FOSS'
:C )*elseif,_z1,eq,22,then
:C )  _zc(1)='OSTS'
:C )*elseif,_z1,eq,23,then
:C )  _zc(1)='TSES'
:C )*endif
:C )/GO
:A Contact Options
:D Contact Options
:K (LSDYNA)
:H Hlp_C_EDCGEN
Cmd_EDCGEN
 Fld_2
  Typ_Def_*PAR(_zc(1))
Fld_0
Typ_Lab
 Prm_Contact and Target Definitions
 Fld_0
  Typ_Sep
 Fld_3
   Prm_Contact Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,PART
   Lis_*READ,CM
   Lis_*READ,PASM
 Fld_4
   Prm_Target Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,PART
   Lis_*READ,CM
   Lis_*READ,PASM
 Fld_0
  Typ_Sep
 Fld_5
  Typ_Def_*PAR(_z2)
 Fld_6
  Typ_Def_*PAR(_z3)
 Fld_7
  Typ_Def_*PAR(_z4)
 Fld_8
  Typ_Def_*PAR(_z5)
 Fld_9 
  Typ_Def_*PAR(_z6)
 Fld_14
  Typ_Def_*PAR(_z7)
 Fld_15
  Typ_Def_*PAR(_z8)
!
 Fld_16
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z9)
!
 Fld_17
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z10)
:E END
:! 
:N Fnc_DYNA_Par4
:S   1085,   207,   871
:T Cmd
:C )! Fnc_DYNA_Par4
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1)='DRAWBEAD'
:C )/GO
:A Contact Options
:D Contact Options
:K (LSDYNA)
:H Hlp_C_EDCGEN
Cmd_EDCGEN
 Fld_2
  Typ_Def_*PAR(_zc(1))
Fld_0
Typ_Lab
 Prm_Additional Options for DRAWBEAD
 Fld_0
  Typ_Sep
 Fld_3
   Prm_Contact Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,PART
   Lis_*READ,CM
   Lis_      None,' '
 Fld_4
   Prm_Target Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,PART
   Lis_*READ,CM
   Lis_      None,' '
 Fld_0
  Typ_Sep
 Fld_5
  Typ_Def_*PAR(_z2)
 Fld_6
  Typ_Def_*PAR(_z3)
 Fld_7
  Typ_Def_*PAR(_z4)
 Fld_8
  Typ_Def_*PAR(_z5)
 Fld_9 
  Typ_Def_*PAR(_z6)
 Fld_10
  Prm_V1  LCID: Bending Comp v. Displ
  Typ_Real
 Fld_11
  Prm_V2  LCID: Normal Force v. Displ
  Typ_Real
 Fld_12
  Prm_V3  Draw Bead Depth
  Typ_Real
 Fld_13
  Prm_V4  Number of Integration Pts 
  Typ_Real
  Def_0
 Fld_14
  Typ_Def_*PAR(_z7)
 Fld_15
  Typ_Def_*PAR(_z8)
!
 Fld_16
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z9)
!
 Fld_17
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z10)
:E END
:! 
:N Fnc_DYNA_Par5
:S   1137,   286,   844
:T Cmd
:C )! Fnc_DYNA_Par5
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,1
:C )*if,_z1,eq,10,then
:C )  _zc(1)='ENTS'
:C )*elseif,_z1,eq,18,then
:C )  _zc(1)='ESTS'
:C )*endif
:C )/GO
:A Contact Options
:D Contact Options
:K (LSDYNA)
:H Hlp_C_EDCGEN
Cmd_EDCGEN
 Fld_2
  Typ_Def_*PAR(_zc(1))
 Fld_0
  Typ_Lab
 Prm_Additional Options for ENTS or ESTS
 Fld_0
  Typ_Sep
 Fld_3
   Prm_Contact Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,PART
   Lis_*READ,CM
   Lis_      None,' '
 Fld_4
   Prm_Target Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,PART
   Lis_*READ,CM
   Lis_      None,' '
 Fld_0
  Typ_Sep
 Fld_5
  Typ_Def_*PAR(_z2)
 Fld_6
  Typ_Def_*PAR(_z3)
 Fld_7
  Typ_Def_*PAR(_z4)
 Fld_8
  Typ_Def_*PAR(_z5)
 Fld_9 
  Typ_Def_*PAR(_z6)
 Fld_10
  Prm_V1  Symmetry Plane Option
  Typ_Real
  Def_0
 Fld_11
  Prm_V2  Erosion/Interior Node Option
  Typ_Real
  Def_1
 Fld_12
  Prm_V3  Adj Mat'l Treatment Option
  Typ_Real
  Def_0
 Fld_14
  Typ_Def_*PAR(_z7)
 Fld_15
  Typ_Def_*PAR(_z8)
!
 Fld_16
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z9)
!
 Fld_17
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z10)
:E END
:! 
:N Fnc_DYNA_Par6
:S   1098,   285,   806
:T Cmd
:C )! Fnc_DYNA_Par6
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,1
:C )*if,_z1,eq,7,then
:C )  _zc(1)='RNTR'
:C )*elseif,_z1,eq,15,then
:C )  _zc(1)='ROTR'
:C )*endif
:C )/GO
:A Contact Options
:D Contact Options
:K (LSDYNA)
:H Hlp_C_EDCGEN
Cmd_EDCGEN
 Fld_2
  Typ_Def_*PAR(_zc(1))
Fld_0
Typ_Lab
 Prm_Additional Options for RNTR or ROTR
 Fld_0
  Typ_Sep
 Fld_3
   Prm_Contact Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,PART
   Lis_*READ,CM
   Lis_      None,' '
 Fld_4
   Prm_Target Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,PART
   Lis_*READ,CM
   Lis_      None,' '
 Fld_0
  Typ_Sep
 Fld_5
  Typ_Def_*PAR(_z2)
 Fld_6
  Typ_Def_*PAR(_z3)
 Fld_7
  Typ_Def_*PAR(_z4)
 Fld_8
  Typ_Def_*PAR(_z5)
 Fld_9 
  Typ_Def_*PAR(_z6)
 Fld_10
  Prm_V1  Force vs. Defl ID
  Typ_Real
 Fld_11
  Prm_V2  Frc Calc Meth / Rig Cont
  Typ_Real
 Fld_12
  Prm_V3  Unload Stiff / Rig Cont
  Typ_Real
 Fld_14
  Typ_Def_*PAR(_z7)
 Fld_15
  Typ_Def_*PAR(_z8)
!
 Fld_16
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z9)
!
 Fld_17
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z10)
:E END
:! 
:N Fnc_DYNA_Par7
:S    955,   203,   745
:T Cmd
:C )! Fnc_DYNA_Par7
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1)='TSTS'
:C )/GO
:A Contact Options
:D Contact Options
:K (LSDYNA)
:H Hlp_C_EDCGEN
Cmd_EDCGEN
 Fld_2
  Typ_Def_*PAR(_zc(1))
Fld_0
Typ_Lab
 Prm_Additional Options for TSTS
 Fld_0
  Typ_Sep
 Fld_3
   Prm_Contact Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,PART
   Lis_*READ,CM
   Lis_      None,' '
 Fld_4
   Prm_Target Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,PART
   Lis_*READ,CM
   Lis_      None,' '
 Fld_0
  Typ_Sep
 Fld_5
  Typ_Def_*PAR(_z2)
 Fld_6
  Typ_Def_*PAR(_z3)
 Fld_7
  Typ_Def_*PAR(_z4)
 Fld_8
  Typ_Def_*PAR(_z5)
 Fld_9 
  Typ_Def_*PAR(_z6)
 Fld_10
  Prm_V1  Normal Failure Stress
  Typ_Real
 Fld_11
  Prm_V2  Shear Failure Stress
  Typ_Real
 Fld_14
  Typ_Def_*PAR(_z7)
 Fld_15
  Typ_Def_*PAR(_z8)
!
 Fld_16
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z9)
!
 Fld_17
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z10)
:E END
:! 
:N Fnc_DYNA_Par8
:S   1084,   203,   874
:T Cmd
:C )! Fnc_DYNA_Par8
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1)='TNTS'
:C )/GO
:A Contact Options
:D Contact Options
:K (LSDYNA)
:H Hlp_C_EDCGEN
Cmd_EDCGEN
 Fld_2
  Typ_Def_*PAR(_zc(1))
Fld_0
Typ_Lab
 Prm_Additional Options for TNTS
 Fld_0
  Typ_Sep
 Fld_3
   Prm_Contact Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,PART
   Lis_*READ,CM
   Lis_      None,' '
 Fld_4
   Prm_Target Component or Part no.
   Typ_Lis_OptionB
   Lis_*READ,PART
   Lis_*READ,CM
   Lis_      None,' '
 Fld_0
  Typ_Sep
 Fld_5
  Typ_Def_*PAR(_z2)
 Fld_6
  Typ_Def_*PAR(_z3)
 Fld_7
  Typ_Def_*PAR(_z4)
 Fld_8
  Typ_Def_*PAR(_z5)
 Fld_9 
  Typ_Def_*PAR(_z6)
 Fld_10
  Prm_V1  Normal Failure Force
  Typ_Real
 Fld_11
  Prm_V2  Shear Failure Force
  Typ_Real
 Fld_12
  Prm_V3  Exponent for Normal Force
  Typ_Real
  Def_2.0
 Fld_13
  Prm_V4  Exponent for Shear Force
  Typ_Real
  Def_2.0
 Fld_14
  Typ_Def_*PAR(_z7)
 Fld_15
  Typ_Def_*PAR(_z8)
!
 Fld_16
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z9)
!
 Fld_17
  K_FL(PARTDEF)
  Typ_Def_*PAR(_z10)
!
:E END
:! 
:N Fnc_DYNA_Paralel
:S    510,   176,   327
:T Command
:C )! Fnc_LNSRCH
:A Parallel Option
:D Parallel Analysis Option for LS-DYNA Explicit
:K #(PREP7*SOLUTION)
:H Hlp_C_EDRUN
Inp_NoApply
Cmd_EDRUN
 Fld_2
  Prm_[EDRUN] Mode of run
  Typ_Lis_OptionB
  Lis_Serial Process  ,SERIAL
  Lis_Shared Memory   ,SMP
  Def_SERIAL
 Fld_3
  Prm_        Result consistency key
  Typ_LOGI,Off,On
  Def_*GET(commom,,lsdynacom,,int,84)
 Fld_4
  Prm_        Number of CPUs
  Typ_INT
  Def_*GET(commom,,lsdynacom,,int,59)
:E END
:! 
:N Fnc_DYNA_Params
:S   2898,   306,  2585
:T Cmd
:C )! Fnc_DYNA_Params
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,10
:C )*DEL,_zx
:C )KEYW,PARTDEF,0
:C )*GET,_zx,PART,1,NUMP
:C )*IF,_zx,GT,0,THEN
:C )KEYW,PARTDEF,1
:C )*ENDIF
:C )/GO
:A Define Contact
:D Contact Parameter Definitions
:K (LSDYNA)
:H Hlp_C_EDCGEN
Cmd_)/NOPR
Cmd_)*set,_z1
 Fld_0
  Typ_Lab
  Prm_[EDCGEN]  LS-DYNA Explicit Contact Parameter Definitions
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Contact Type
  Typ_IDX
  IDX_Single Surface  ,Auto Gen'l (AG) ,1
  IDX_Single Surface  ,Automatic (ASSC),2
  IDX_Single Surface  ,Auto 2-D (ASS2D),24
  IDX_Single Surface  ,Single Surf (SS),21
  IDX_Single Surface  ,Eroding (ESS)   ,3
  IDX_Single Surface  ,Edge (SE)       ,4
!
  IDX_Nodes to Surface,General (NTS)   ,5
  IDX_Nodes to Surface,Automatic (ANTS),6
  IDX_Nodes to Surface,Rigid (RNTR)    ,7
  IDX_Nodes to Surface,Tied (TDNS)     ,8
  IDX_Nodes to Surface,Tied/fail (TNTS),9
  IDX_Nodes to Surface,Eroding (ENTS)  ,10
  IDX_Nodes to Surface,Forming (FNTS)  ,11
  IDX_Nodes to Surface,Drawbead (DRAW) ,12
!
  IDX_Surface to Surf ,General (STS)   ,13
  IDX_Surface to Surf ,One-Way (OSTS)  ,22
  IDX_Surface to Surf ,Automatic (ASTS),14
  IDX_Surface to Surf ,Rigid (ROTR)    ,15
  IDX_Surface to Surf ,Tied (TDSS)     ,16
  IDX_Surface to Surf ,Tied/shell(TSES),23
  IDX_Surface to Surf ,Tied/fail (TSTS),17
  IDX_Surface to Surf ,Eroding (ESTS)  ,18
  IDX_Surface to Surf ,Forming (FSTS)  ,19
  IDX_Surface to Surf ,Form/1-way(FOSS),20
!
 Fld_0
  Typ_Sep
Cmd_)*set,_z2
 Fld_2
  Prm_Static Friction Coefficient
  Typ_Real
  Def_0
Cmd_)*set,_z3
 Fld_2
  Prm_Dynamic Friction Coefficient
  Typ_Real
  Def_0
Cmd_)*set,_z4
 Fld_2
  Prm_Exponential Decay Coefficient
  Typ_Real
  Def_0
Cmd_)*set,_z5
 Fld_2
  Prm_Viscous Friction Coefficient
  Typ_Real
  Def_0
Cmd_)*set,_z6
 Fld_2
  Prm_Viscous Damping Coefficient
  Typ_Real
  Def_0
 Fld_0
  Typ_Sep
Cmd_)*set,_z7
 Fld_2
  Prm_Birth time for contact
  Typ_Real
  Def_0.0
Cmd_)*set,_z8
 Fld_2 
  Prm_Death time for contact
  Typ_Real
  Def_1e21
!
Cmd_)*set,_z9
 Fld_2
  K_FL(PARTDEF)
  Prm_BOXID1     Contact box
  Typ_Int
  Def_0
!
Cmd_)*set,_z10
 Fld_2
  K_FL(PARTDEF)
  Prm_BOXID2     Target box
  Typ_Int
  Def_0
!
Cmd_)/GO
Cal_Fnc_DYNA_Par1,2,eq,1,2
Cal_Fnc_DYNA_Par1,2,eq,2,2
Cal_Fnc_DYNA_Par1,2,eq,24,2
Cal_Fnc_DYNA_Par1,2,eq,21,2
Cal_Fnc_DYNA_Par2,2,eq,3,2
Cal_Fnc_DYNA_Par3,2,eq,4,2
Cal_Fnc_DYNA_Par3,2,eq,5,2
Cal_Fnc_DYNA_Par3,2,eq,6,2
Cal_Fnc_DYNA_Par3,2,eq,8,2
Cal_Fnc_DYNA_Par3,2,eq,11,2
Cal_Fnc_DYNA_Par3,2,eq,13,2
Cal_Fnc_DYNA_Par3,2,eq,22,2
Cal_Fnc_DYNA_Par3,2,eq,14,2
Cal_Fnc_DYNA_Par3,2,eq,16,2
Cal_Fnc_DYNA_Par3,2,eq,23,2
Cal_Fnc_DYNA_Par3,2,eq,19,2
Cal_Fnc_DYNA_Par3,2,eq,20,2
Cal_Fnc_DYNA_Par4,2,eq,12,2
Cal_Fnc_DYNA_Par5,2,eq,10,2
Cal_Fnc_DYNA_Par5,2,eq,18,2
Cal_Fnc_DYNA_Par6,2,eq,7,2
Cal_Fnc_DYNA_Par6,2,eq,15,2
Cal_Fnc_DYNA_Par7,2,eq,17,2
Cal_Fnc_DYNA_Par8,2,eq,9,2
:E END
:! 
:N Fnc_DYNA_Parts
:S    585,   150,   428
:T Cmd
:C )! Fnc_DYNA_Parts
:A Parts Options
:D Parts Data Written for LS-DYNA 
:K (LSDYNA)
:H Hlp_C_EDPART
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
   Typ_Lab
   Prm_[EDPART] Part ID Options
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Option
   Typ_Lis_RadioB
   Lis_Create all parts ,1
   Lis_Update parts     ,3
   Lis_Add part         ,2
   Lis_Delete part      ,4
   Lis_List parts       ,5
!
Cmd_)/GO
Cal_Fnc_DYNA_Parts_1,2,eq,1,2
Cal_Fnc_DYNA_Parts_2,2,eq,2,2
Cal_Fnc_DYNA_Parts_1,2,eq,3,2
Cal_Fnc_DYNA_Parts_3,2,eq,4,2
Cal_Fnc_DYNA_Parts_1,2,eq,5,2
:E END
:! 
:N Fnc_DYNA_Parts_1
:S    316,   260,    49
:T Cmd
:C )! Fnc_DYNA_Parts_1
:C )/NOPR
:C )*del,_zc
:C )*dim,_zc,char,5
:C )*set,_zc(1),'CREATE','ADD','UPDATE','DELETE','LIST'
:C )/GO
:A Parts Options
:D Parts Data Written for LS-DYNA
:K (LSDYNA)
:H Hlp_C_EDPART
Inp_P
Cmd_EDPART
 Fld_2
  Typ_Def_*PAR(_zc(_z1))
:E END
:! 
:N Fnc_DYNA_Parts_2
:S    370,   153,   210
:T Cmd
:C )! Fnc_DYNA_Parts_2
:A Parts Options
:D Parts Data Written for LS-DYNA
:K (LSDYNA)
:H Hlp_C_EDPART
Cmd_EDPART,ADD
 Fld_0
   Typ_Lab
   Prm_[EDPART] Add Part ID
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Part ID Number
   Typ_INT
 Fld_3
   Prm_Element component
   Typ_Lis_OptionB
   Lis_All Selected,' '
   Lis_*READ,CM
:E END
:! 
:N Fnc_DYNA_Parts_3
:S    311,   153,   151
:T Cmd
:C )! Fnc_DYNA_Parts_3
:A Parts Options
:D Parts Data Written for LS-DYNA
:K (LSDYNA)
:H Hlp_C_EDPART
Cmd_EDPART,DELETE
 Fld_0
   Typ_Lab
   Prm_[EDPART] Delete Part ID
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Part ID Number
   Typ_Lis_OptionB
   Lis_*READ,PART
:E END
:! 
:N Fnc_DYNA_PltCont 
:S    363,   160,   196
:T Command
:C )! Fnc_DYNA_PltCont
:A Select and Plot
:D Select and Plot Contact Entities
:K (LSDYNA)
:H Hlp_C_EDPC
Cmd_EDPC
Fld_0
Typ_Lab
Prm_[EDPC]  Select and Plot Contact Entities
 Fld_2
  Prm_Minimum contact number
  Typ_Real
 Fld_3
  Prm_Maximum contact number
  Typ_Real
 Fld_4
  Prm_Increment
  Typ_Real
:E END
:! 
:N Fnc_DYNA_Relax
:S   1224,   348,   869
:T Cmd
:C )! Fnc_DYNA_Relax
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,1
:C )*get,_z1,common,,lsdynacom,,int,55
:C )*if,_z1,eq,2,then
:C )_zc(1)='DYNA'
:C )*else
:C )_zc(1)='ANSYS'
:C )*endif
:C )/GO
:A Dynamic Relax
:D Specify Dynamic Relaxation for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDDRELAX
Inp_NoApply
Cmd_EDDRELAX
 Fld_0
  Prm_[EDDRELAX] Dynamic Relaxation
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Dynamic relaxation options 
  Typ_Lis_OptionB
! Lis_OFF,OFF
  Lis_ANSYS,ANSYS
  Lis_DYNA,DYNA
  Def_*PAR(_zc(1))
 Fld_3
  Prm_Iters between convergence checks
  Typ_Int
  Def_*GET(common,,lsdynacom,,int,56)
 Fld_4
  Prm_Convergence tolerance 
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,15)
 Fld_5
  Prm_Dynamic relaxation factor 
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,16)
 Fld_6
  Prm_Set termination time to
  Typ_Real
  Def_Blank
 Fld_7
  Prm_Time step scale factor 
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,18)
 Fld_8
  Prm_Auto control
  Typ_Lis_OptionB
  Lis_0,0
  Lis_1,1
  Def_*GET(common,,lsdynacom,,int,57)
 Fld_9
  Prm_Tolerence of auto control
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,19)
  Fld_0
   Typ_Lab
   Prm_      
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_Rigid
:S    795,   157,   631
:T Cmd
:C )! Fnc_DYNA_Rigid
:A Rigid Body CE
:D Rigid Body Constraints
:K ((LSDYNA*FULL_ANS)+PREP7)
:H Hlp_C_EDCRB
Cmd_EDCRB
 Fld_0
   Typ_Lab
   Prm_[EDCRB] Constrain two rigid bodies for LS-DYNA Explicit
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab
   Prm_
 Fld_2
   Prm_Rigid body equation options
   Typ_Lis_RadioB
   Lis_ADD,ADD
   Lis_DELETE,DELE
   Lis_LIST,LIST
 Fld_0
   Typ_Lab
   Prm_
 Fld_3
   Prm_Equation reference number
   Typ_INT
 Fld_4
   Prm_PART number (Master)
   Typ_Lis_OptionB
   Lis_*READ,PART
 Fld_5
   Prm_PART number (Slave)
   Typ_Lis_OptionB
   Lis_*READ,PART
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab
   Prm_Note: For DELETE option, leave equation 
 Fld_0
   Typ_Lab
   Prm_reference number blank to delete all.
 Fld_0
   Typ_Sep
:E END
:! 
:N Fnc_DYNA_RstHt
:S    772,   202,   563
:T Cmd
:C )! Fnc_DYNA_RstHt
:A Number of Steps
:D Specify File Output Frequency
:K ((LSDYNA*FULL_ANS)+SOLUTION)
:H Hlp_C_EDRST
:H Hlp_C_EDHTIME
:H Hlp_C_EDDUMP
Inp_Apply
Cmd_EDRST
 Fld_0
  Typ_Lab
  Prm_
 Fld_0
  Typ_Lab
  Prm_[EDRST] Specify Results File Output Interval:
 Fld_2
  Prm_Number of Output Steps
  Typ_INT
  Def_*GET(common,,lsdynacom,,int,53)
 Fld_0
  Typ_Sep
Cmd_EDHTIME
 Fld_0
  Typ_Lab
  Prm_[EDHTIME] Specify Time-History Output Interval:
 Fld_2
  Prm_Number of Output Steps
  Typ_INT
  Def_*GET(common,,lsdynacom,,int,54)
 Fld_0
  Typ_Sep
Cmd_EDDUMP
 Fld_0
  Typ_Lab
  Prm_[EDDUMP] Specify Restart Dump Output Interval:
 Fld_2
  Prm_Number of Output Steps
  Typ_INT
  Def_*GET(common,,lsdynacom,,int,72)
:E END
:! 
:N Fnc_DYNA_RstHtDt
:S    755,   205,   543
:T Cmd
:C )! Fnc_DYNA_RstHtDt
:A Time Step Size
:D Specify File Output Frequency
:K ((LSDYNA*FULL_ANS)+SOLUTION)
:H Hlp_C_EDRST
:H Hlp_C_EDHTIME
:H Hlp_C_EDDUMP
Inp_Apply
Cmd_EDRST
 Fld_0
  Typ_Lab
  Prm_
 Fld_0
  Typ_Lab
  Prm_[EDRST] Specify Results File Output Interval:
 Fld_3
  Prm_Time Step Size
  Typ_REAL
  Def_*GET(common,,lsdynacom,,real,1)
 Fld_0
  Typ_Sep
Cmd_EDHTIME
 Fld_0
  Typ_Lab
  Prm_[EDHTIME] Specify Time-History Output Interval:
 Fld_3
  Prm_Time Step Size
  Typ_REAL
  Def_*GET(common,,lsdynacom,,real,1)
 Fld_0
  Typ_Sep
Cmd_EDDUMP
 Fld_0
  Typ_Lab
  Prm_[EDDUMP] Specify Restart Dump Output Interval:
 Fld_3
  Prm_Time Step Size
  Typ_REAL
  Def_*GET(common,,lsdynacom,,real,30)
:E END
:! 
:N Fnc_DYNA_Scale
:S    463,   176,   280
:T Cmd
:C )! Fnc_DYNA_Scale
:A Time Step Ctrls
:D Specify Time Step Scaling for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDCTS
Inp_NoApply
Cmd_EDCTS
 Fld_0
  Prm_[EDCTS] Time step scaling options
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Mass scaling time step size
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,11)
 Fld_3
  Prm_Time step scale factor
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,20)
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_Shell
:S   1361,   139,  1215
:T Cmd
:C )! Fnc_DYNA_Shell
:A Shell Elem Ctrls
:D Shell Elem Ctrls
:K (LSDYNA)
:H Hlp_C_EDSHELL
Inp_NoApply
Cmd_EDSHELL
 Fld_0
  Prm_[EDSHELL] Shell Response Controls 
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Set element warpage angle to:
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,5)
!  This bang is needed to fix a mystery error...
 Fld_0
  Typ_Sep
 Fld_3
  Prm_Set Hughes-Liu normal update to:
  Typ_INT
  Def_*GET(common,,lsdynacom,,int,12)
 Fld_0
  Prm_Possible values for above item:
 Fld_0
  Prm_Compute normals each cycle = -1
 Fld_0
  Prm_Use unique nodal fibers    = -2
 Fld_0
  Prm_Compute on restarts        =  1
 Fld_0
  Prm_Compute every nth substep  =  n
 Fld_0
  Typ_Sep
 Fld_4
  Prm_Shell Thickness Change Options:
  Typ_Lis_OptionB
  Lis_Thickness Change,1
  Lis_No Change,0
  Def_*GET(common,,lsdynacom,,int,13)
 Fld_0
  Prm_
 Fld_5
  Prm_Belyschko-Tsay warping stiffness options:
  Typ_Lis_OptionB
  Lis_Wong-Chiang,1
  Lis_Tsay,2
  Def_*GET(common,,lsdynacom,,int,14)
 Fld_0
  Prm_
 Fld_6
  Prm_Shell Plasticity Options:
  Typ_Lis_OptionB
  Lis_3 Secant iter,1
  Lis_Full iterative,2
  Lis_Radial non-iter,3
  Def_*GET(common,,lsdynacom,,int,15)
 Fld_7
  Prm_Triangular Shell Sorting:
  Typ_Lis_OptionB
  Lis_Full Sorting,1
  Lis_No Sorting,2
  Def_*GET(common,,lsdynacom,,int,29)
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_Spotgen
:S    929,   205,   717
:T Command
:C )! Fnc_DYNA_Spotgen
:A Genrlizd Spotwld
:D Create Generalized Spotweld
:K ((LSDYNA*FULL_ANS)+PREP7)
:D Create Generalized Spotweld
:H Hlp_C_EDWELD
Cmd_EDWELD
 Fld_0
   Typ_Lab
   Prm_[EDWELD] Generalized Spotweld Options for LS-DYNA Explicit
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab
   Prm_
 Fld_2
   Typ_Def_ADD
 Fld_3
   Prm_Spotweld reference number
   Typ_INT
   Def_1
 Fld_4
   Typ_Lis_OptionB
   Prm_Component name for spotweld 
   Lis_*READ,CM
 Fld_0
   Typ_Sep
 Fld_6
   Prm_Normal force at failure
   Typ_Real
 Fld_7
   Prm_Shear force at failure
   Typ_Real
 Fld_8
   Prm_Normal spotweld force exponent
   Typ_Int
 Fld_9
   Prm_Shear spotweld force exponent
   Typ_Int
 Fld_10
   Prm_Effective plastic strain 
   Typ_Real
 Fld_11
   Prm_Failure time 
   Typ_Real
 Fld_12
   Prm_Number of spotwelds
   Typ_Real
 Fld_13
   Prm_Coordinate system ID 
   Typ_Real
:E END
:! 
:N Fnc_DYNA_Spotwld
:S    329,   161,   161
:T Cmd_P
:C )! Fnc_DYNA_Spotwld
:A Massless Spotwld
:D Massless Spotwld
:K ((LSDYNA*FULL_ANS)+PREP7)
:H Hlp_C_EDWELD
Inp_P
Cmd_)/NOPR
Cmd_)*DEL,_z
Cmd_)*DIM,_z,,2
Cmd_)*SET,_z(1)
Fld_2
Prm_[EDWELD]  Pick two nodes to Spotweld
Typ_NODE
Min_2
Cnt_2
PFM_2
!
Cmd_)/GO
Cal_Fnc_Weld2
:E END
:! 
:N Fnc_DYNA_Start
:S    736,   166,   563
:T Cmd
:C )! Fnc_DYNA_Start
:A Restart Option
:D Restart Options for LS-DYNA Explicit
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDSTART
Cmd_EDSTART
 Fld_0
   Typ_Lab
   Prm_[EDSTART] Restart Options for LS-DYNA Explicit
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Restart Option
   Typ_Lis_OptionB
   Lis_New Analysis    ,0
   Lis_Simple Restart  ,1
   Lis_Small Restart   ,2
   Lis_Full Restart    ,3
   Def_*GET(commom,,lsdynacom,,int,30)
 Fld_3
   Prm_Words of memory requested 
   Typ_INT
!  Def_*GET(commom,,lsdynacom,,int,32)
 Fld_4
   Prm_Binary file scale factor
   Typ_INT
   Def_*GET(commom,,lsdynacom,,int,31)
 Fld_5
   Prm_File name for dump files
   Typ_Char
!  Def_*GET(commom,,lsdynacom,,char,1)
:E END
:! 
:N Fnc_DYNA_StrInit
:S    577,   140,   430
:T Command
:C )! Fnc_DYNA_StrInit
:A Initial Stress
:D Initial Stress
:K (LSDYNA)
:H Hlp_C_EDIS
Cmd_EDIS
 Fld_0
  Typ_Lab
  Prm_[EDIS] Initial stress between parts in full restart
 Fld_2
  Prm_Option
  Typ_Lis_OptionB
  Lis_Add,ADD
  Lis_Delete,DELETE
  Lis_List,LIST
  Def_ADD
 Fld_3
  Prm_New Part or Part Assembly ID
  Typ_Lis_OptionB
  Lis_*READ,PART
  Lis_*READ,PASM
 Fld_4
  Prm_Old Part or Part Assembly ID -
  Typ_Lis_OptionB
  Lis_*READ,PART
  Lis_*READ,PASM
 Fld_0
  Typ_Lab
   Prm_       -Valid only for Add option
:E END
:! 
:N Fnc_DYNA_Subcycl
:S    438,   177,   254
:T Cmd
:C )! Fnc_DYNA_Subcycl
:A Subcycling 
:D Specify Subcycling Options for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDCSC
Inp_NoApply
Cmd_EDCSC
 Fld_0
  Typ_Lab
   Prm_[EDCSC]  Subcycling Specifications for use with LS-DYNA Explicit
 Fld_0
  Typ_Sep
 Fld_2
   Prm_Subcycling Key
   Typ_Logi,No Subcycling,Use Subcycling
   Def_*GET(common,,lsdynacom,,int,28)
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_Term
:S    353,   158,   188
:T Cmd
:C )! Fnc_DYNA_Term
:A Solution Time
:D Solution Time for LS-DYNA Explicit
:K (LSDYNA+SOLUTION)
:H Hlp_C_TIME
Cmd_TIME
 Fld_0
  Typ_Lab
  Prm_Solution Termination Time
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_
 Fld_2
  Prm_[TIME]  Terminate at Time:
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,9)
:E END
:! 
:N Fnc_DYNA_TmHis2
:S    313,   147,   159
:T Cmd
:C )! Fnc_DYNA_TmHis2
:A Time Hist Ctrls
:D LS-DYNA Time History Controls
:K ((LSDYNA)+SOLUTION)
Inp_P
Cmd_)/NOPR
Cmd_)*do,j,1,19
Cmd_)*do,i,1,19
Cmd_)*if,_zc(j),eq,i,then
Cmd_)KEYW,OUT%i%,1
Cmd_)*endif
Cmd_)*enddo
Cmd_)*enddo
Cmd_)/GO
Cal_Fnc_DYNA_TmHis3
:E END
:! 
:N Fnc_DYNA_TmHis3
:S    699,   147,   545
:T Cmd
:C )! Fnc_DYNA_TmHis3
:A Time Hist Ctrls
:D LS-DYNA Time History Controls
:K ((LSDYNA)+SOLUTION)
Inp_P
K_LN(OUT1)
Cmd_EDOUT,GLSTAT
K_LN(OUT2)
Cmd_EDOUT,BNDOUT
K_LN(OUT3)
Cmd_EDOUT,RWFORCE
K_LN(OUT4)
Cmd_EDOUT,DEFORCE
K_LN(OUT5)
Cmd_EDOUT,MATSUM
K_LN(OUT6)
Cmd_EDOUT,NCFORCE
K_LN(OUT7)
Cmd_EDOUT,RCFORC
K_LN(OUT8)
Cmd_EDOUT,DEFGEO
K_LN(OUT9)
Cmd_EDOUT,SPCFORC
K_LN(OUT10)
Cmd_EDOUT,SWFORC
K_LN(OUT11)
Cmd_EDOUT,RBDOUT
K_LN(OUT12)
Cmd_EDOUT,GCEOUT
K_LN(OUT13)
Cmd_EDOUT,SLEOUT
K_LN(OUT14)
Cmd_EDOUT,JNTFORC
K_LN(OUT15)
Cmd_EDOUT,ELOUT
K_LN(OUT16)
Cmd_EDOUT,NODOUT
K_LN(OUT17)
Cmd_EDOUT,ALL
K_LN(OUT18)
Cmd_EDOUT,LIST
K_LN(OUT19)
Cmd_EDOUT,DELE
:E END
:! 
:N Fnc_DYNA_VelDele
:S    897,   179,   711
:T Cmd
:C )! Fnc_DYNA_VelDele
:C )/NOPR
:C )_zc99=' '
:C )/GO
:A Delete
:D Delete Initial Velocity
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDVEL
Cmd_)/NOPR
Cmd_)*CSET,1,8
 Fld_0
  Typ_Lab
  Prm_[EDVE] Initial Velocity
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_DELE
 Fld_3
  Prm_Delete velocity of component
  Typ_Lis_OptionB
  Lis_*READ,CM
  Lis_Node number,666
  Lis_All,ALL
 Fld_4
  Prm_or node (if node number chosen)
  Typ_INT
  Def_
 Fld_5
  Typ_Def_*PAR(_zc99)
 Fld_6
  Typ_Def_*PAR(_zc99)
 Fld_7
  Typ_Def_*PAR(_zc99)
 Fld_8
  Typ_Def_*PAR(_zc99)
 Fld_9
  Typ_Def_*PAR(_zc99)
Cmd_)*CSET,9,15
 Fld_2
  Typ_Def_*PAR(_zc99)
 Fld_3
  Typ_Def_*PAR(_zc99)
 Fld_4
  Typ_Def_*PAR(_zc99)
 Fld_5
  Typ_Def_*PAR(_zc99)
 Fld_6
  Typ_Def_*PAR(_zc99)
 Fld_7
  Typ_Def_*PAR(_zc99)
 Fld_8
  Typ_Def_
Cmd_)/GO
Cal_Fnc_DYNA_VelExe1,3,ne,666,2
Cal_Fnc_DYNA_VelExe2,3,eq,666,2
:E END
:! 
:N Fnc_DYNA_VelExe1
:S    556,   158,   391
:T Cmd
:C )! Fnc_DYNA_VelExe1
:A Execute EDVE command
:D Execute EDVE command
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDVEL
Inp_P
Cmd_EDVE
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(4)
 Fld_5
  Typ_Def_*CPAR(5)
 Fld_6
  Typ_Def_*CPAR(6)
 Fld_7
  Typ_Def_*CPAR(7)
 Fld_8
  Typ_Def_*CPAR(8)
 Fld_9
  Typ_Def_*CPAR(9)
 Fld_10
  Typ_Def_*CPAR(10)
 Fld_11
  Typ_Def_*CPAR(11)
 Fld_12
  Typ_Def_*CPAR(12)
 Fld_13
  Typ_Def_*CPAR(13)
 Fld_14
  Typ_Def_*CPAR(14)
 Fld_15
  Typ_Def_*CPAR(15)
:E END
:! 
:N Fnc_DYNA_VelExe2
:S    556,   158,   391
:T Cmd
:C )! Fnc_DYNA_VelExe2
:A Execute EDVE command
:D Execute EDVE command
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDVEL
Inp_P
Cmd_EDVE
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(3)
 Fld_4
  Typ_Def_*CPAR(4)
 Fld_5
  Typ_Def_*CPAR(5)
 Fld_6
  Typ_Def_*CPAR(6)
 Fld_7
  Typ_Def_*CPAR(7)
 Fld_8
  Typ_Def_*CPAR(8)
 Fld_9
  Typ_Def_*CPAR(9)
 Fld_10
  Typ_Def_*CPAR(10)
 Fld_11
  Typ_Def_*CPAR(11)
 Fld_12
  Typ_Def_*CPAR(12)
 Fld_13
  Typ_Def_*CPAR(13)
 Fld_14
  Typ_Def_*CPAR(14)
 Fld_15
  Typ_Def_*CPAR(15)
:E END
:! 
:N Fnc_DYNA_VelGene
:S   1526,   181,  1338
:T Cmd
:C )! Fnc_DYNA_VelGene
:C )/NOPR
:C )_zc99=' '
:C )/GO
:A w/Axial Rotate
:D Generate Velocity
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDVEL
Cmd_)/NOPR
Cmd_)*CSET,1,8
 Fld_0
  Typ_Lab
  Prm_[EDVE] Initial Velocity
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_VGEN
 Fld_3
  Prm_Generate velocity on component
  Typ_Lis_OptionB
  Lis_*READ,CM
  Lis_Node number,666
 Fld_4
  Prm_or node (if node number chosen)
  Typ_INT
  Def_
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Translational Velocity:
 Fld_0
  Typ_Lab
  Prm_
 Fld_5
  Prm_VX  Global X-component
  Typ_Real
  Def_0
 Fld_6
  Prm_VY  Global Y-component
  Typ_Real
  Def_0
 Fld_7
  Prm_VZ  Global Z-component
  Typ_Real
  Def_0
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Angular Velocity: 
 Fld_0
  Typ_Lab
  Prm_
 Fld_8
  Prm_OMEGA   Magnitude (rad/sec)
  Typ_Real
  Def_0
 Fld_9
  Typ_Def_*PAR(_zc99)
Cmd_)*CSET,9,15
 Fld_2
  Typ_Def_*PAR(_zc99)
 Fld_0
  Typ_Lab
  Prm_
 Fld_0
  Typ_Lab
  Prm_Point on Rotational Axis:
 Fld_3
  Prm_XC  Global X-coordinate
  Typ_Real
  Def_0
 Fld_4
  Prm_YC  Global Y-coordinate
  Typ_Real
  Def_0
 Fld_5
  Prm_ZC  Global Z-coordinate
  Typ_Real
  Def_0
 Fld_0
  Typ_Lab
  Prm_
 Fld_0
  Typ_Lab
  Prm_Rotational Axis Direction:
 Fld_6
  Prm_ANGX  Angle to global X-axis
  Typ_Real
  Def_0
 Fld_7
  Prm_ANGY  Angle to global Y-axis
  Typ_Real
  Def_0
 Fld_8
  Prm_ANGZ  Angle to global Z-axis
  Typ_Real
  Def_0
 Fld_0
  Typ_Lab
  Prm_
Cmd_)/GO
Cal_Fnc_DYNA_VelExe1,3,ne,666,2
Cal_Fnc_DYNA_VelExe2,3,eq,666,2
:E END
:! 
:N Fnc_DYNA_VelInpt
:S   1241,   178,  1056
:T Cmd
:C )! Fnc_DYNA_VelInpt
:C )/NOPR
:C )_zc99=' '
:C )/GO
:A w/Nodal Rotate
:D Input Velocity
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDVEL
Cmd_)/NOPR
Cmd_)*CSET,1,8
 Fld_0
  Typ_Lab
  Prm_[EDVE] Initial Velocity
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_VELO
 Fld_3
  Prm_Input velocity on component
  Typ_Lis_OptionB
  Lis_*READ,CM
  Lis_Node number,666
 Fld_4
  Prm_or node (if node number chosen)
  Typ_INT
  Def_
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Translational Velocity:
 Fld_0
  Typ_Lab
  Prm_
 Fld_5
  Prm_VX  Global X-component
  Typ_Real
  Def_0
 Fld_6
  Prm_VY  Global Y-component
  Typ_Real
  Def_0
 Fld_7
  Prm_VZ  Global Z-component
  Typ_Real
  Def_0
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Angular Velocity (rad/sec): 
 Fld_0
  Typ_Lab
  Prm_
 Fld_8
  Prm_OMEGAX  Global X-component
  Typ_Real
  Def_0
 Fld_9
  Prm_OMEGAY  Global Y-component
  Typ_Real
  Def_0
Cmd_)*CSET,9,15
 Fld_2
  Prm_OMEGAZ  Global Z-component
  Typ_Real
  Def_0
 Fld_3
  Typ_Def_*PAR(_zc99)
 Fld_4
  Typ_Def_*PAR(_zc99)
 Fld_5
  Typ_Def_*PAR(_zc99)
 Fld_6
  Typ_Def_*PAR(_zc99)
 Fld_7
  Typ_Def_*PAR(_zc99)
 Fld_8
  Typ_Def_*PAR(_zc99)
Cmd_)/GO
Cal_Fnc_DYNA_VelExe1,3,ne,666,2
Cal_Fnc_DYNA_VelExe2,3,eq,666,2
:E END
:! 
:N Fnc_DYNA_VelList
:S    902,   175,   720
:T Cmd
:C )! Fnc_DYNA_VelList
:C )/NOPR
:C )_zc99=' '
:C )/GO
:A List
:D List Initial Velocity
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDVEL
Cmd_)/NOPR
Cmd_)*CSET,1,8
 Fld_0
  Typ_Lab
  Prm_[EDVE] Initial Velocity
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_LIST
 Fld_3
  Prm_List velocity of component
  Typ_Lis_OptionB
  Lis_*READ,CM
  Lis_Node number,666
  Lis_All,ALL
 Fld_4
  Prm_or node (if node number chosen)
  Typ_INT
  Def_
 Fld_5
  Typ_Def_*PAR(_zc99)
 Fld_6
  Typ_Def_*PAR(_zc99)
 Fld_7
  Typ_Def_*PAR(_zc99)
 Fld_8
  Typ_Def_*PAR(_zc99)
 Fld_9
  Typ_Def_*PAR(_zc99)
Cmd_)*CSET,9,15
 Fld_2
  Typ_Def_*PAR(_zc99)
 Fld_3
  Typ_Def_*PAR(_zc99)
 Fld_4
  Typ_Def_*PAR(_zc99)
 Fld_5
  Typ_Def_*PAR(_zc99)
 Fld_6
  Typ_Def_*PAR(_zc99)
 Fld_7
  Typ_Def_*PAR(_zc99)
 Fld_8
  Typ_Def_*PAR(_zc99)
Cmd_)/GO
Cal_Fnc_DYNA_VelExe1,3,ne,666,2
Cal_Fnc_DYNA_VelExe2,3,eq,666,2
:E END
:! 
:N Fnc_DYNA_Visco
:S    406,   134,   265
:T Cmd
:C )! Fnc_DYNA_Visco
:A Bulk Viscosity
:D Bulk Viscosity
:K (LSDYNA)
:H Hlp_C_EDBVIS
Inp_NoApply
Cmd_EDBVIS
 Fld_0
  Prm_[EDBVIS] Bulk Viscosity
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Quadratic Viscosity Coefficient:
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,3)
 Fld_3 
  Prm_Linear Viscosity Coefficient:
  Typ_Real
  Def_*GET(common,,lsdynacom,,real,4)
:E END
:! 
:N Fnc_DYNA_Wlddele
:S    313,   150,   156
:T Cmd
:C )! Fnc_DYNA_Wlddele
:A Delete 
:D Delete Spotwelds
:K ((LSDYNA*FULL_ANS)+PREP7)
:H Hlp_C_EDWELD
Cmd_EDWELD
 Fld_0
  Prm_Delete Spotwelds
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_Dele
 Fld_3
  Prm_Spotweld reference number
  Typ_INT
  Def_ALL
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_Wldlist
:S    307,   146,   154
:T Cmd
:C )! Fnc_DYNA_Wldlist
:A List 
:D List Spotwelds
:K ((LSDYNA*FULL_ANS)+PREP7)
:H Hlp_C_EDWELD
Cmd_EDWELD
 Fld_0
  Prm_List Spotwelds
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_List
 Fld_3
  Prm_Spotweld reference number
  Typ_INT
  Def_ALL
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_DYNA_adBND
:S    292,   142,   143
:T Cmd_N
:C )! Fnc_DYNA_adBND
:A Delete All
:D Delete All Symmetry Boundary Planes
:H Hlp_C_EDBOUND
Inp_P
Cmd_EDBOUND
Fld_2
Typ_Def_DELE
Fld_3
Typ_Def_SLIDE
Fld_4
Typ_Def_ALL
Cmd_EDBOUND
Fld_2
Typ_Def_DELE
Fld_3
Typ_Def_CYCL
Fld_4
Typ_Def_ALL
:E END
:! 
:N Fnc_DYNA_adEDNB
:S    244,   185,    52
:T Cmd_N
:C )! Fnc_DYNA_adEDNB
:A Delete All
:D Delete All Non-Reflecting Boundaries for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDNB
Inp_P
Cmd_EDNB
Fld_2
Typ_Def_DELE
Fld_3
Typ_Def_ALL
:E END
:! 
:N Fnc_DYNA_adLoad
:S    230,   187,    36
:T Cmd_N
:C )! Fnc_DYNA_adLoad
:A Delete All 
:D Delete All Loads for LS-DYNA Explicit 
:K ((LSDYNA*FULL_ANS)+(SOLUTION*PREP7))
:H Hlp_C_EDLOAD
Inp_P
Cmd_EDLOAD
Fld_2
Typ_Def_DELE
:E END
:! 
:N Fnc_DYNA_adapstat
:S    169,   148,    14
:T Cmd_N
:C )! Fnc_DYNA_adapstat
:C EDADAPT,STAT
:A Status
:D List Adaptive Meshing Status
:K (LSDYNA)
Cmd_EDAD,stat
:E END
:! 
:N Fnc_DYNA_dBND
:S    770,   141,   622
:T Command
:C )! Fnc_DYNA_dBND
:A Delete Individ
:D Delete Symmetry Boundary Plane
:H Hlp_C_EDBOUND
Cmd_EDBOUND
 Fld_0
  Prm_[EDBOUND]  Boundary plane 
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Option
  Typ_Lis_RadioB
  Lis_Delete plane    ,DELE
  Lis_List planes     ,LIST
  Def_DELE
 Fld_0
  Typ_Sep
 Fld_3
  Prm_Lab      Type of boundary plane
  Typ_Lis_OptionB
  Lis_Sliding symmetry plane,SLIDE
  Lis_Cyclic symmetry plane,CYCL
 Fld_4
  Prm_Cname    First boundary symm CM
  Typ_Lis_OptionB
  Lis_*READ,CM
  Lis_ALL,ALL
 Fld_5
  Prm_XC,YC,ZC  Norm vect/axis of rot
  Typ_REAL3
  Def_0,0,0
 Fld_8
  Prm_Cname2   Second boundry symm CM
  Typ_LIS_OptionB
  Lis_*READ,CM
 Fld_9
  Prm_COPT     Sliding symm constrnt
  Typ_INT
  Def_0
:E END
:! 
:N Fnc_DYNA_dEDNB
:S    590,   179,   404
:T Cmd
:C )! Fnc_DYNA_dEDNB
:A Delete Individ
:D Delete Non-reflecting boundary for LS-DYNA Explicit 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDNB
Cmd_EDNB
  Fld_0
   Typ_Lab
   Prm_[EDNB]  Non-reflecting boundary
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Option
   Typ_Lis_RadioB
   Lis_Delete          ,DELE
   Lis_List            ,LIST
   Def_DELE
  Fld_0
   Typ_Sep
  Fld_3
   Prm_Component
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_ALL,ALL
 Fld_4
   Prm_Dilatational flag
   Typ_Logi,Off,On
 Fld_5
   Prm_Shear flag
   Typ_Logi,Off,On
  Fld_0
   Typ_Sep
:E END
:! 
:N Fnc_DYNA_dLoad
:S   2047,   341,  1699
:T Cmd
:C )! Fnc_DYNA_dLoad
:C )/NOPR
:C )*if,_loadkey,le,0,then
:C )*do,_i,1,40
:C )keyw,tran%_i%,0
:C )keyw,both%_i%,0
:C )keyw,dyn%_i%,0
:C )*enddo
:C )_loadkey = 1
:C )*endif
:C )/GO
:A Delete Individ
:D Delete Loads for LS-DYNA Explicit 
:K ((LSDYNA*FULL_ANS)+(SOLUTION*PREP7))
:H Hlp_C_EDLOAD
Cmd_EDLOAD
 Fld_0
  Typ_Lab
  Prm_[EDLOAD]  Loading Options for LS-DYNA Explicit 
  Fld_0
   Typ_Sep
 Fld_2
  Prm_Load Options
  Typ_Lis_OptionB
  Lis_Delete Loads    ,DELETE
  Lis_List Loads      ,LIST
  Def_DELE
 Fld_0
   Typ_Sep
 Fld_3
  Prm_Load Labels
  Typ_Lis
  Lis_FX,FX
  Lis_FY,FY
  Lis_FZ,FZ
  Lis_MX,MX
  Lis_MY,MY
  Lis_MZ,MZ
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
  Lis_VX,VX
  Lis_VY,VY
  Lis_VZ,VZ
  Lis_AX,AX
  Lis_AY,AY
  Lis_AZ,AZ
  Lis_ACLX,ACLX
  Lis_ACLY,ACLY
  Lis_ACLZ,ACLZ
  Lis_OMGX,OMGX
  Lis_OMGY,OMGY
  Lis_OMGZ,OMGZ
  Lis_PRES,PRES
  Lis_RBUX,RBUX
  Lis_RBUY,RBUY
  Lis_RBUZ,RBUZ
  Lis_RBVX,RBVX
  Lis_RBVY,RBVY
  Lis_RBVZ,RBVZ
  Lis_RBRX,RBRX
  Lis_RBRY,RBRY
  Lis_RBRZ,RBRZ
  Lis_RBFX,RBFX
  Lis_RBFY,RBFY
  Lis_RBFZ,RBFZ
  Lis_RBMX,RBMX
  Lis_RBMY,RBMY
  Lis_RBMZ,RBMZ
  Lis_RBOX,RBOX
  Lis_RBOY,RBOY
  Lis_RBOZ,RBOZ
  Lis_TEMP,TEMP
 Fld_0
   Typ_Sep
 Fld_4
   Prm_Coordinate System/Surface load key
   Typ_INT
   Def_1
 Fld_5
   Prm_Component name or PART number:
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_*READ,PART
   Lis_None defined,' '
  Fld_6
   Prm_Parameter name for time values:
   Typ_Lis_OptionB
   Lis_*READ,PAR
   Lis_None,' '
  Fld_7
   Prm_Parameter name for data values:
   Typ_Lis_OptionB
   Lis_*READ,PAR
   Lis_None,' '
  Fld_0
   Typ_Sep
  Fld_8
   Prm_Analysis type for load curves:
   Typ_Lis_RadioB
   Lis_Transient only , 0
   Lis_Dynamic relax  , 1
   Lis_Trans and Dynam, 2
   Def_*GET(common,,lsdynacom,,int,62)
  Fld_0
   Typ_Sep
  Fld_0
   Prm_If existing load curve was used:
  Fld_9
   Prm_Load curve ID
   Typ_Real
!
Cal_Fnc_tranld,8,EQ,0,1
Cal_Fnc_dynld,8,EQ,1,1
Cal_Fnc_bothld,8,EQ,2,1
:E END
:! 
:N Fnc_DYNA_globstat
:S    166,   145,    14
:T Cmd_N
:C )! Fnc_DYNA_globstat
:C EDCA,LIST
:A Status
:D List Adaptive Meshing Status
:K (LSDYNA)
Cmd_EDCA,list
:E END
:! 
:N Fnc_DYNApVelDele
:S    362,   148,   207
:T Cmd
:C )! Fnc_DYNApVelDele
:A Delete
:D Delete Initial Velocity
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDPVEL
Cmd_EDPV
 Fld_0
  Typ_Lab
  Prm_[EDPV] Initial Velocity
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_DELE
 Fld_3
  Prm_Delete velocity of part/assembly
  Typ_Lis_OptionB
  Lis_*READ,PART
  Lis_*READ,PASM
  Lis_All,ALL
:E END
:! 
:N Fnc_DYNApVelGene
:S   1249,   150,  1092
:T Cmd
:C )! Fnc_DYNApVelGene
:A w/Axial Rotate
:D Generate Velocity
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDPVEL
Cmd_EDPV
 Fld_0
  Typ_Lab
  Prm_[EDPV] Initial Velocity
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_VGEN
 Fld_3
  Prm_Input velocity on part/assembly
  Typ_Lis_OptionB
  Lis_*READ,PART
  Lis_*READ,PASM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Translational Velocity:
 Fld_0
  Typ_Lab
  Prm_
 Fld_4
  Prm_VX  Global X-component
  Typ_Real
  Def_0
 Fld_5
  Prm_VY  Global Y-component
  Typ_Real
  Def_0
 Fld_6
  Prm_VZ  Global Z-component
  Typ_Real
  Def_0
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Angular Velocity: 
 Fld_0
  Typ_Lab
  Prm_
 Fld_7
  Prm_OMEGA   Magnitude (rad/sec)
  Typ_Real
  Def_0
 Fld_0
  Typ_Lab
  Prm_
 Fld_0
  Typ_Lab
  Prm_Point on Rotational Axis:
 Fld_10
  Prm_XC  Global X-coordinate
  Typ_Real
  Def_0
 Fld_11
  Prm_YC  Global Y-coordinate
  Typ_Real
  Def_0
 Fld_12
  Prm_ZC  Global Z-coordinate
  Typ_Real
  Def_0
 Fld_0
  Typ_Lab
  Prm_
 Fld_0
  Typ_Lab
  Prm_Rotational Axis Direction:
 Fld_13
  Prm_ANGX  Angle to global X-axis
  Typ_Real
  Def_0
 Fld_14
  Prm_ANGY  Angle to global Y-axis
  Typ_Real
  Def_0
 Fld_15
  Prm_ANGZ  Angle to global Z-axis
  Typ_Real
  Def_0
:E END
:! 
:N Fnc_DYNApVelInpt
:S    869,   147,   715
:T Cmd
:C )! Fnc_DYNApVelInpt
:A w/Nodal Rotate
:D Input Velocity
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDPVEL
Cmd_EDPV
 Fld_0
  Typ_Lab
  Prm_[EDPV] Initial Velocity
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_VELO
 Fld_3
  Prm_Input velocity on part/assembly
  Typ_Lis_OptionB
  Lis_*READ,PART
  Lis_*READ,PASM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Translational Velocity:
 Fld_0
  Typ_Lab
  Prm_
 Fld_4
  Prm_VX  Global X-component
  Typ_Real
  Def_0
 Fld_5
  Prm_VY  Global Y-component
  Typ_Real
  Def_0
 Fld_6
  Prm_VZ  Global Z-component
  Typ_Real
  Def_0
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Angular Velocity (rad/sec): 
 Fld_0
  Typ_Lab
  Prm_
 Fld_7
  Prm_OMEGAX  Global X-component
  Typ_Real
  Def_0
 Fld_8
  Prm_OMEGAY  Global Y-component
  Typ_Real
  Def_0
 Fld_9
  Prm_OMEGAZ  Global Z-component
  Typ_Real
  Def_0
:E END
:! 
:N Fnc_DYNApVelList
:S    356,   144,   205
:T Cmd
:C )! Fnc_DYNApVelList
:A List
:D List Initial Velocity
:K (LSDYNA*FULL_ANS)
:H Hlp_C_EDPVEL
Cmd_EDPV
 Fld_0
  Typ_Lab
  Prm_[EDVE] Initial Velocity
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_LIST
 Fld_3
  Prm_List velocity of part/assembly
  Typ_Lis_OptionB
  Lis_*READ,PART
  Lis_*READ,PASM
  Lis_All,ALL
:E END
:! 
:N Fnc_DYNROT
:S   1394,   133,  1254
:T Command
:C )! Fnc_DYNROT
:A Rotated Nodal
:D Apply rotated nodal constraint
:H Hlp_C_EDNROT
!
Cmd_EDNROT
 Fld_0
  Prm_Define rotated nodal constraint
!
 Fld_0
  Typ_Sep
!
 Fld_0
  Prm_
!
 Fld_2
  Prm_[EDNROT]  ADD/DELETE/LIST
  Typ_Lis_OptionB
  Lis_Add constraint,ADD
  Lis_Delete constraint,DELE
  Lis_List constraints,LIST
!
 Fld_3
  Prm_CID       Coordinate system ID
  Typ_INT
  Def_1
!
 Fld_4
  Prm_Cname     Apply constrnt for CM
  Typ_Lis_OptionB
  Lis_*READ,CM
  Lis_None Defined,' '
!
 Fld_5
  Prm_DOF1      Degree of Freedom lab1
  Typ_Lis
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
!
 Fld_6
  Prm_DOF2      Degree of Freedom lab2
  Typ_Lis
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
!
 Fld_7
  Prm_DOF3      Degree of Freedom lab3
  Typ_Lis
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
!
 Fld_8
  Prm_DOF4      Degree of Freedom lab4
  Typ_Lis
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
!
 Fld_9
  Prm_DOF5      Degree of Freedom lab5
  Typ_Lis
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
!
 Fld_10
  Prm_DOF6      Degree of Freedom lab6
  Typ_Lis
  Lis_UX,UX
  Lis_UY,UY
  Lis_UZ,UZ
  Lis_ROTX,ROTX
  Lis_ROTY,ROTY
  Lis_ROTZ,ROTZ
:E END
:! 
:N Fnc_DYN_cnst
:S    544,   266,   271
:T Cmd
:C )! Fnc_DYN_cnst
:C )/NOPR
:C )*del,_zc
:C )*dim,_zc,CHAR,1
:C )keyw,key1,0
:C )keyw,key2,0
:C )keyw,key3,0
:C )keyw,key4,0
:C )/GO
:A Additional Nodal 
:D Define Additional Rotated Nodal Constraints
:H Hlp_C_EDCNSTR
Inp_NoApply
Cmd_)/NOPR
Cmd_)*set,_z1
 Fld_0
  Prm_Define rotated nodal constraints
!
 Fld_2
  Prm_[EDCNSTR]       Constraint Type
  Typ_Lis_RadioB
  Lis_Extra node set,1
  Lis_Nodal rigid body,2
  Lis_Shell-Solid tie,3
  Lis_Massless rivet,4
Cmd_)/GO
!
Cal_Fnc_DYN_cnst1
:E END
:! 
:N Fnc_DYN_cnst1
:S   1200,   414,   779
:T Command
:C )! Fnc_DYN_cnst1
:C )/NOPR
:C )*if,_z1,EQ,1,then
:C )_zc(1)='ENS '
:C )keyw,key1,1
:C )*elseif,_z1,EQ,2,then
:C )_zc(1)='NRB '
:C )keyw,key2,1
:C )*elseif,_z1,EQ,3,then
:C )_zc(1)='STS '
:C )keyw,key3,1
:C )*elseif,_z1,EQ,4,then
:C )_zc(1)='RIVET'
:C )keyw,key4,1
:C )*endif
:C )/GO
:A Additional Nodal
:D Define Additional Nodal Constraints
:H Hlp_C_EDCNSTR
Inp_NoApply
Cmd_EDCNSTR
!
 Fld_0
  Prm_Define Nodal Constraints
!
 Fld_0
  Typ_Sep
!
 Fld_2
  Prm_Constraint Option
  Typ_Lis_OptionB
  Lis_Add constraint,ADD
  Lis_Delete constraint,DELE
  Lis_List constraints,LIST
!
 Fld_0
  Typ_Sep
!
 Fld_3
  Typ_Def_*PAR(_zc(1)) 
!
 Fld_4
  K_FL(KEY1)
  Prm_Add nodes to Part Number:
  Typ_Int
!
 Fld_4
  K_FL(KEY2)
  Prm_Component Name             
  Typ_Lis_OptionB
  Lis_*read,CM
!
 Fld_4
  K_FL(KEY3)
  Prm_Shell element node number
  Typ_Int
!
 Fld_4
  K_FL(KEY4)
  Prm_Node number (first rivet node)
  Typ_Int
!
 Fld_5
  K_FL(KEY4)
  Prm_Node number (second rivet node)
  Typ_Int
!
 Fld_5
  K_FL(KEY1*KEY3)
  Prm_Component Name             
  Typ_Lis_OptionB
  Lis_*read,CM
!
 FLd_6
  K_FL(KEY2)
  Prm_Coordinate System ID
  Typ_Int
!
:E END
:! 
:N Fnc_DYNexport
:S    698,   192,   499
:T Cmd
:C )! Fnc_DYNexport
:C )/nopr
:C )_z10= '*.*'
:C )_z11= '*'
:A Read Disp
:D Send displacements to a file 
:K (LSDYNA*FULL_ANS)
:H Hlp_C_REXPORT
Cmd_REXPORT
Fld_0
 Typ_Lab
 Prm_[REXPORT] Read displacements from results file and write as LSDYNA input
Fld_0
  Typ_Sep
Fld_2
 Prm_TARGET  Get results from
 Typ_Lis_OptionB
 Lis_DYNA run,DYNA
 Lis_Don't export,OFF
Fld_3
 Typ_Def_DISP
Fld_4
 Typ_Def_NODE
Fld_5
  Prm_LSTEP  Load step
  Typ_CHAR,4
  Def_LAST
Fld_6
  Prm_SBSTP Substep
  Typ_CHAR,4
  Def_LAST
Fld_7
 Prm_Filename, Extension, Directory
 Typ_FILE
K_LN(INTELNT*ALPHANT)
  Def_*PAR(_z10)
K_LN(intelnt+alphant)
  Def_*PAR(_z11)
Cmd_)/GOPR
:END  
:! 
:N Fnc_D_a
:S    331,   188,   136
:T Cmd_P
:C )! Fnc_D_a
:C )! Nodes for D command below
:A    On Nodes
:D Apply A on Nodes
:K ((PREP7*SOLUTION)+((edgeflx+VECTORP)*NOFILTER))
:H Hlp_C_DK
Inp_P
Cmd_)!
Fld_2
 Prm_[D]  Pick or enter nodes for vector potential specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_D_a2
:E END
:! 
:N Fnc_D_a2
:S    491,   104,   380
:T Command
:C )! Fnc_D_a2
:D Apply A on Nodes
:B Fnc_D_a
:H Hlp_C_D
Cmd_D,P51X
Fld_0
 Typ_Lab
 Prm_[D]  Apply Mag Vector Potential (A) on Nodes
Fld_7
 Prm_Lab    DOFs to be constrained
 Typ_MLis
 LIS_All DOF,ALL
 LIS_*READ,DOF
 Bnd_0.0,6.0
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Vector poten (A) value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE  Real part of vector poten
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2 Imag part of vector poten
:E END
:! 
:N Fnc_D_azP
:S    324,   164,   153
:T Cmd_P
:C )! Fnc_D_azP
:A       On Nodes
:D Apply Flux Parallel on Nodes
:K ((PREP7*SOLUTION)+(EDGEFLX*NOFILTER))
:H Hlp_C_D
Inp_P
Cmd_D
Fld_2
 Prm_[D]  Pick or enter nodes for flux-parallel condition
 Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_Def_AZ
Fld_4
 Typ_Def_0
:E END
:! 
:N Fnc_D_current
:S    381,   187,   187
:T Cmd_P
:C )! Fnc_D_current
:A Fix current displacement
:D Fix current displacement
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_D
Inp_P
Cmd_D,P51X
Fld_2
 Typ_def_*CPAR(6)
Fld_3
 Typ_def_%_FIX%
Fld_7
 Typ_def_*CPAR(7)
Fld_8
 Typ_def_*CPAR(8)
Fld_9
 Typ_def_*CPAR(9)
Fld_10
 Typ_def_*CPAR(10)
Fld_11
 Typ_def_*CPAR(11)
:E END
:! 
:N Fnc_D_enke
:S    317,   163,   147
:T Cmd_P
:C )! Fnc_D_enke
:C )! Nodes for D command below
:A On Nodes
:D Apply ENKE on Nodes
:K #(PREP7*SOLUTION)
:H Hlp_C_D
Inp_P
Cmd_)!
Fld_2
  Prm_[D]  Pick or enter nodes for turb kinetic energy specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_D_enke2
:E END
:! 
:N Fnc_D_enke2
:S    275,   116,   152
:T Command
:C )! Fnc_D_enke2
:D Apply ENKE on Nodes
:B Fnc_D_enke
:H Hlp_C_D
Cmd_D,P51X
Fld_0
 Typ_Lab
 Prm_[D]  Apply Turbulent Kinetic Energy (ENKE) on Nodes
Fld_2
 Typ_DEF_ENKE
Fld_3
 Typ_REAL
 Prm_VALUE  Turbulent K.E. value
:E END
:! 
:N Fnc_D_mag
:S    343,   193,   143
:T Cmd_P
:C )! Fnc_D_mag
:C )! Nodes for D command below
:A    On Nodes
:D Apply MAG on Nodes
:K ((PREP7*SOLUTION)+((edgeflx+SCALARP)*NOFILTER))
:H Hlp_C_D
Inp_P
Cmd_)!
Fld_2
  Prm_[D]  Pick or enter nodes for scalar potential specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_D_mag2
:E END
:! 
:N Fnc_D_mag2
:S    426,   112,   307
:T Command
:C )! Fnc_D_mag2
:D Apply MAG on Nodes
:B Fnc_D_mag
:H Hlp_C_D
Cmd_D,P51X
Fld_0
 Typ_Lab
 Prm_[D]  Apply Mag Scalar Potential (MAG) on Nodes
Fld_2
 Typ_DEF_MAG
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Scalar poten (MAG) value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE  Real part of scalar poten
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2 Imag part of scalar poten
:E END
:! 
:N Fnc_D_magN
:S    321,   162,   152
:T Cmd_P
:C )! Fnc_D_magN
:A    Flux Normal
:D Apply FluxNorm on Nodes
:K #((PREP7*SOLUTION)+(SCALARP*NOFILTER))
:H Hlp_C_D
Inp_P
Cmd_D
Fld_2
 Prm_[D]  Pick or enter nodes for flux-normal condition
 Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_Def_MAG
Fld_4
 Typ_Def_0
:E END
:! 
:N Fnc_D_magNN
:S    334,   175,   152
:T Cmd_P
:C )! Fnc_D_magN
:A       On Nodes
:D Apply Flux Normal on Nodes
:K ((PREP7*SOLUTION)+((edgeflx+SCALARP)*NOFILTER))
:H Hlp_C_D
Inp_P
Cmd_D
Fld_2
 Prm_[D]  Pick or enter nodes for flux-normal condition
 Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_Def_MAG
Fld_4
 Typ_Def_0
:E END
:! 
:N Fnc_D_magP
:S    493,   190,   296
:T Command
:C )! Fnc_D_magP
:A    Flux Parallel
:D Apply Flux-Parallel Condition on Nodes
:K ((PREP7*SOLUTION)+((edgeflx+SCALARP)*NOFILTER))
:H Hlp_C_D
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_                      - Note -
 Fld_0
  Typ_Lab
  Prm_  The flux-parallel condition is a naturally occuring
 Fld_0
  Typ_Lab
  Prm_  boundary condition in a scalar potential analysis.
 Fld_0
  Typ_Lab
  Prm_  Therefore, no MAG specification is required.
:E END
:! 
:N Fnc_D_mult_del
:S    362,   205,   150
:T Cmd_P
:C )! Fnc_D_mult_del
:C )! Nodes for D command below
:A    On Nodes
:D Delete Base MultiPt on Nodes
:K #((PREP7*SOLUTION)+(MULTIPNT*NOFILTER))
:H Hlp_C_D
Inp_P
Cmd_)!
 Fld_2
  Prm_[D]  Pick or enter nodes for base multi-pt spectrum deletion
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_D_mult_del2
:E END
:! 
:N Fnc_D_mult_del2
:S    368,   132,   229
:T Command
:C )! Fnc_D_mult_del2
:D Delete Base MultiPt on Nodes
:B Fnc_D_psd
:H Hlp_C_D
Cmd_D,P51X
Fld_0
 Typ_Lab
 Prm_[D]  Delete Base Multi-Point Spectrum on Nodes
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,UX
 LIS_Nodal Y         ,UY
 LIS_Nodal Z         ,UZ
Fld_3
 Typ_DEF_0.0
:E END
:! 
:N Fnc_D_multi
:S    358,   198,   153
:T Cmd_P
:C )! Fnc_D_multi
:C )! Nodes for D command below
:A    On Nodes
:D Apply Base MultiPt on Nodes
:K #((PREP7*SOLUTION)+(MULTIPNT*NOFILTER))
:H Hlp_C_D
Inp_P
Cmd_)!
 Fld_2
  Prm_[D]  Pick or enter constrained nodes for base multi-point spectrum
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_D_multi2
:E END
:! 
:N Fnc_D_multi2
:S    362,   127,   228
:T Command
:C )! Fnc_D_multi2
:D Apply Base MultiPt on Nodes
:B Fnc_D_multi
:H Hlp_C_D
Cmd_D,P51X
Fld_0
 Typ_Lab
 Prm_[D]  Apply Base Multi-Point Spectrum on Nodes
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,UX
 LIS_Nodal Y         ,UY
 LIS_Nodal Z         ,UZ
Fld_3
 Typ_DEF_1.0
:E END
:! 
:N Fnc_D_p
:S    249,   117,   125
:T Cmd_P
:C )! Fnc_D_p ORPHAN
:A    On Nodes
:D Apply Node Constraints
:H Hlp_C_D
Inp_P
Cmd_)!
 Fld_2
  Prm_[D]  Pick or enter nodes to be constrained
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_D_p2
:E END
:! 
:N Fnc_D_p2
:S    366,   106,   253
:T Command
:C )! Fnc_D_p2 ORPHAN
:D Apply Node Constraints
:H Hlp_C_D
Cmd_D,P51X
Fld_0
 Typ_Lab
 Prm_[D]  Apply Nodal Constraints
Fld_7
 Prm_Lab2    DOFs to be constrained
 Typ_MLIS
 LIS_All DOF,ALL
 LIS_*READ,DOF
Fld_0
 Typ_Lab
 Prm_VALUE,VALUE2  Constraint values -
Fld_3
 Typ_REAL2
 Prm_      - real and imaginary parts
:E END
:! 
:N Fnc_D_pec
:S    363,   203,   153
:T Cmd_P
:C )! Fnc_D_pec
:A       On Nodes
:D Apply Electric Wall condition on Nodes
:K (((PREP7*SOLUTION)+EDGEELC)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_D
Inp_P
Cmd_D
Fld_2
 Prm_[D]  Pick or enter nodes for Electric Wall condition
 Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_Def_AX
Fld_4
 Typ_Def_0
:E END
:! 
:N Fnc_D_pres
:S    653,   295,   351
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'D'
:C )*SET,_z9,'PRES'
:C )*DEL,_zc
:C )*DIM,_zc,char,1
:C )*SET,_zc(1),'PRES'
:C )/GO
:C )! Fnc_D_pres
:C )! Nodes for D command below
:A On Nodes
:D Apply PRES on Nodes
:K #(PREP7*SOLUTION)
:H Hlp_C_D
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,NODE
Cmd_)/GO
! Exclude_from_paths
Cmd_NSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[D]  Pick or enter nodes for pressure specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_CFDLoad
:E END
:! 
:N Fnc_D_psd
:S    342,   190,   145
:T Cmd_P
:C )! Fnc_D_psd
:C )! Nodes for D command below
:A    On Nodes
:D Apply Base PSD on Nodes
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:H Hlp_C_D
Inp_P
Cmd_)!
 Fld_2
  Prm_[D]  Pick or enter constrained nodes for base PSD excitation
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_D_psd2
:E END
:! 
:N Fnc_D_psd2
:S    427,   117,   303
:T Command
:C )! Fnc_D_psd2
:D Apply Base PSD on Nodes
:B Fnc_D_psd
:H Hlp_C_D
Cmd_D,P51X
Fld_0
 Typ_Lab
 Prm_[D]  Apply Base PSD Excitation on Nodes
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,UX
 LIS_Nodal Y         ,UY
 LIS_Nodal Z         ,UZ
 LIS_Nodal ROTX      ,ROTX
 LIS_Nodal ROTY      ,ROTY
 LIS_Nodal ROTZ      ,ROTZ
Fld_3
 Typ_DEF_1.0
:E END
:! 
:N Fnc_D_psd_dele
:S    356,   201,   148
:T Cmd_P
:C )! Fnc_D_psd_dele
:C )! Nodes for D command below
:A    On Nodes
:D Delete Base PSD on Nodes
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:H Hlp_C_D
Inp_P
Cmd_)!
 Fld_2
  Prm_[D]  Pick or enter constrained nodes for base PSD deletion
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_D_psd_dele2
:E END
:! 
:N Fnc_D_psd_dele2
:S    439,   128,   304
:T Command
:C )! Fnc_D_psd_dele2
:D Delete Base PSD on Nodes
:B Fnc_D_psd
:H Hlp_C_D
Cmd_D,P51X
Fld_0
 Typ_Lab
 Prm_[D]  Delete Base PSD Excitation on Nodes
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,UX
 LIS_Nodal Y         ,UY
 LIS_Nodal Z         ,UZ
 LIS_Nodal ROTX      ,ROTX
 LIS_Nodal ROTY      ,ROTY
 LIS_Nodal ROTZ      ,ROTZ
Fld_3
 Typ_DEF_0.0
:E END
:! 
:N Fnc_D_spec
:S    772,   365,   400
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'D'
:C )*SET,_z9,'SPEC'
:C )KEYW,KEY1,0
:C )*GET,_z1,FLDA,SPEC,NUMB
:C )*IF,_z1,le,0,then
:C )KEYW,KEY1,1
:C )*ENDIF
:C )/GO
:C )! Fnc_D_spec
:C )! Nodes for D command below
:A On Nodes
:D Apply Mass Frac on Nodes
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:P (FLOTRAN)
:H Hlp_C_D
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,NODE
K_CM(key1)
! Exclude_from_paths
Cmd_NSEL
K_CM(key1)
Fld_2
 Typ_Def_R
Fld_5
  Prm_[D]  Pick or enter nodes for mass fraction specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,NODE
K_CM(key1)
! Exclude_from_paths
Cmd_CMSEL,S,_Y
K_CM(key1)
! Exclude_from_paths
Cmd_CMDELE,_Y
K_CM(key1)
Cmd_)/GO
Cal_Fnc_Spec_VZ
:E END
:! 
:N Fnc_D_temp
:S    398,   239,   152
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'D'
:C )*SET,_z9,'TEMP'
:C )/GO
:C )! Fnc_D_temp
:C )! Nodes for D command below
:A On Nodes
:D Apply TEMP on Nodes
:K #(PREP7*SOLUTION)
:H Hlp_C_D
Inp_P
Cmd_)!
Fld_2
  Prm_[D]  Pick or enter nodes for temperature specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Cust_Cmd_D
Cal_Fnc_D_temp2
:E END
:! 
:N Fnc_D_temp2
:S    672,   202,   463
:T Command
:C )! Fnc_D_temp2
:D Apply TEMP on Nodes
:B Fnc_D_temp
:H Hlp_C_D
:C )/NOPR
:C )*SET,_z7,'D'
:C )*SET,_z9,'temperature'
:C )*SET,_z10,'Nodes'
:C )/GOPR
cmd_)/NOPR
Cmd_)*CSET,1,14
Fld_0
 Typ_Lab
 Prm_[D]  Apply TEMP on Nodes
Fld_7
 Prm_Lab2    DOFs to be constrained
 Typ_MLis
 LIS_All DOF,ALL
 LIS_*READ,DOF
 Bnd_0.0,6.0
Fld_5
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 Typ_REAL
 Prm_VALUE  Load TEMP value 
! Cust_Cmd_D
Cal_Fnc_thvalue,5,eq,0,2
Cal_Fnc_tholdtable,5,eq,1,2
Cal_Fnc_thnewtbl,5,eq,2,2
:E END
:! 
:N Fnc_D_turb
:S    678,   318,   353
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'D'
:C )*SET,_z9,'TURB'
:C )*DEL,_zc
:C )*DIM,_zc,char4,2
:C )*SET,_zc(1),'ENKE','ENDS'
:C )/GO
:C )! Fnc_D_turb
:C )! Nodes for D command below
:A On Nodes
:D Apply Turb on Nodes
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:H Hlp_C_D
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,NODE
Cmd_)/GO
! Exclude_from_paths
Cmd_NSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[D]  Pick or enter nodes for turbulence specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_D_u
:S    301,   158,   136
:T Cmd_P
:C )! Fnc_D_u
:C )! Nodes for D command below
:A On Nodes
:D Apply U,ROT on Nodes
:K #(PREP7*SOLUTION)
:H Hlp_C_D
Inp_P
Cmd_)!
 Fld_2
  Prm_[D]  Pick or enter nodes for displacement constraints
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_D_u2
:E END
:! 
:N Fnc_D_u2
:S    900,   188,   705
:T Command
:C )! Fnc_D_u2
:D Apply U,ROT on Nodes
:B Fnc_D_u
:H Hlp_C_D
:C )/NOPR
:C )*SET,_z7,'D'
:C )*SET,_z9,'U,ROT'
:C )*SET,_z10,'Nodes'
:C )/GOPR
cmd_)/NOPR
Cmd_)*CSET,1,14
Fld_0
 Typ_Lab
 Prm_[D]  Apply Displacements (U,ROT) on Nodes
Fld_7
 Prm_Lab2    DOFs to be constrained
 Typ_MLis
 LIS_All DOF,ALL
 LIS_*READ,DOF
 LIS_*READ,DDOF
 Bnd_0.0,6.0
Fld_5
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 P_LN(LINPLUS)
 LIS_Fix to Current,3
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Displacement value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE   Real part of disp
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2  Imag part of disp
! Cust_Cmd_D
Cal_Fnc_Stvalue,5,eq,0,2
Cal_Fnc_Stoldtable,5,eq,1,2
Cal_Fnc_Stnewtbl,5,eq,2,2
Cal_Fnc_D_current,5,eq,3,2
:E END
:! 
:N Fnc_D_u2CM
:S    926,   616,   303
:T Command
:C )! Fnc_D_u2CM
:D Apply U,ROT on Node Components
:B Fnc_D_uCM
:H Hlp_C_D
:C )/NOPR
:C )*SET,_z7,'D'
:C )*SET,_z9,'U,ROT'
:C )*SET,_z10,'Nodes'
:C )/GOPR
cmd_)/NOPR
Cmd_)*CSET,1,14
Fld_0
 Typ_Lab
 Prm_[D]  Apply Displacements (U,ROT) on Node Components
Fld_7
 Prm_Lab2    DOFs to be constrained
 Typ_MLis
 LIS_All DOF,ALL
 LIS_*READ,DOF
 LIS_*READ,DDOF
 Bnd_0.0,6.0
Fld_5
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 P_LN(LINPLUS)
 LIS_Fix to Current,3
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Displacement value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE   Real part of disp
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2  Imag part of disp
! Cust_Cmd_D
Cal_Fnc_Stvalue,5,eq,0,2
Cal_Fnc_Stoldtable,5,eq,1,2
Cal_Fnc_Stnewtbl,5,eq,2,2
Cal_Fnc_D_current,5,eq,3,2
:E END
:! 
:N Fnc_D_uCFD
:S    677,   315,   355
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'D'
:C )*SET,_z9,'DISP'
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),'UX','UY','UZ'
:C )/GO
:C )! Fnc_D_uCFD
:C )! Nodes for D command below
:A On Nodes
:D Apply U on Nodes
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:H Hlp_C_D
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,NODE
Cmd_)/GO
! Exclude_from_paths
Cmd_NSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[D]  Pick or enter nodes for displacement specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_D_uCM
:S    410,   255,   148
:T Cmd_P
:C )! Fnc_D_uCM
:C )! Node Components for D command below
:C )/UI,CMPF,NODE ! *** restrict picker to NODE components ***
:A On Node Components
:D Apply U,ROT on Node Components
:K #(PREP7*SOLUTION)
:H Hlp_C_D
Inp_P
Cmd_)!
 Fld_2
  Prm_[D]  Pick or enter node components for displacement constraints
  Typ_COMP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_D_u2CM
:E END
:! 
:N Fnc_D_v
:S    667,   309,   351
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'D'
:C )*SET,_z9,'VELO'
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),'VX','VY','VZ'
:C )/GO
:C )! Fnc_D_v
:C )! Nodes for D command below
:A On Nodes
:D Apply V on Nodes
:K #(PREP7*SOLUTION)+(CFD*NOFILTER)
:H Hlp_C_D
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,NODE
Cmd_)/GO
! Exclude_from_paths
Cmd_NSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[D]  Pick or enter nodes for velocity specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_FloLoad
:E END
:! 
:N Fnc_D_volt
:S    458,   304,   147
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'D'
:C )*SET,_z9,'VOLT'
:C )/GO
:C )! Fnc_D_volt
:C )! Nodes for D command below
:A    On Nodes
:D Apply VOLT on Nodes
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:H Hlp_C_D
Inp_P
Cmd_)!
Fld_2
  Prm_[D]  Pick or enter nodes for voltage specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Cust_Cmd_D
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_D_volt0
:S    435,   276,   152
:T Cmd_P
:C )! Fnc_D_volt0
:C )! Nodes for D command below
:A       On Nodes
:D Apply J-Normal condition on Nodes
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_D
Inp_P
Cmd_D
Fld_2
  Prm_[D]  Pick or enter nodes for J-Normal condition
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_DEF_VOLT
Fld_4
 Typ_DEF_0
:E END
:! 
:N Fnc_D_volt0_ti
:S    432,   256,   169
:T Cmd_P
:C )! Fnc_D_volt0_ti
:C )! Nodes for D command below
:A       On Nodes
:D Apply J-Normal condition on Nodes
:K ((PREP7*SOLUTION)+(elem3d+edgeelc+TIMEINTP)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_D
Inp_P
Cmd_D
Fld_2
  Prm_[D]  Pick or enter nodes for J-Normal condition
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Fld_3
 Typ_DEF_VOLT
Fld_4
 Typ_DEF_0
Fld_5
 Typ_DEF_0
:E END
:! 
:N Fnc_D_volt_ti
:S    449,   277,   165
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'D'
:C )*SET,_z9,'VOLT'
:C )/GO
:C )! Fnc_D_volt_ti
:C )! Nodes for D command below
:A    On Nodes
:D Apply VOLT on Nodes
:K ((PREP7*SOLUTION)+(TIMEINTP*NOFILTER)+edgeelc)
:H Hlp_C_D
Inp_P
Cmd_)!
Fld_2
  Prm_[D]  Pick or enter nodes for time-integrated potential specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Cust_Cmd_D
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_Damping
:S   1600,   305,  1288
:T Command
:C )! Fnc_Damping
:C )/NOPR
:C )*GET,_z1,common,,engcom,,int,10001   ! Starting location N    
:C )_z1=_z1+1
:C )/GO
:A Damping
:D Damping Specifications
:K #((PREP7*SOLUTION)+((STRUCTRL+static+buckling)*NOFILTER))
:P (LINPLUS*FULL_ANS)
:H Hlp_UI_damping
Inp_NoApply
Cmd_)!
K_CM(fromtcl)
 Fld_0
  Typ_Lab
  Prm_     Damping Specifications
Cmd_ALPHAD
K_CM(fromtcl)
K_CM(MODAL*HARMONIC*TRNSIENT*SUBSTRUC*PSDRANDM*NOFILTER)
P_CM(FULL_ANS)
 Fld_2
  Prm_[ALPHAD] Mass matrix multiplier
  Typ_REAL
  Def_*GET(common,,stepcm,,real,21)
!
Cmd_BETAD
K_CM(fromtcl)
P_CM(FULL_ANS)
 Fld_2
  Prm_[BETAD]  Stif. matrix multiplier
  Typ_REAL
  Def_*GET(common,,stepcm,,real,22)
!
Cmd_DMPRAT
K_CM(fromtcl)
K_CM(MODAL*MODESUP*SPECTRUM*NOFILTER)
P_CM(LINPLUS)
 Fld_2
  Prm_[DMPRAT] Constant damping ratio
  Typ_REAL
  Def_*GET(common,,stepcm,,real,10)
!
Cmd_DMPSTR
K_CM(fromtcl)
K_CM(HARMONIC*NOFILTER)
P_CM(FULL_ANS)
 Fld_2
  Prm_[DMPSTR] Structural damping coef
  Typ_REAL
  Def_*GET(common,,stepcm,,real,330)
!
Cmd_MDAMP
K_CM(MODESUP*SPECTRUM*NOFILTER)
P_CM(LINPLUS)
 Fld_0
  Typ_Lab
  Prm_[MDAMP]  Modal Damping
 Fld_2
  Prm_STLOC  Starting location N
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Prm_V1    Damping ratio for mode N
  Typ_REAL
 Fld_4
  Prm_V2    Damping ratio for mode N+1
  Typ_REAL
 Fld_5
  Prm_V3    Damping ratio for mode N+2
  Typ_REAL
 Fld_6
  Prm_V4    Damping ratio for mode N+3
  Typ_REAL
 Fld_7
  Prm_V5    Damping ratio for mode N+4
  Typ_REAL
 Fld_8
  Prm_V6    Damping ratio for mode N+5
  Typ_REAL
Cmd_)/NOPR
Cmd_)KEYW,FROMTCL,0
Cmd_)/GO
:E END
:! 
:N Fnc_DecOpt
:S    377,   152,   218
:T Cmd
:C )! Fnc_DecOpt
:A Define Specifications
:D Specify Decimation Options
:K #(PREP7*SOLUTION)
:H Hlp_C_RDEC
Inp_NoApply
Cmd_RDEC,DEFI
Fld_0
 Typ_Lab
 Prm_[RDEC] Decimation Options
Fld_2
 Prm_Decimation Fraction
 Typ_Real
 Def_0
Fld_4
 Prm_Node Placement Option
 Typ_Lis
 Lis_Optimal Placement,OPTI
 Lis_Subset Placement, SUBS
:E END
:! 
:N Fnc_Dec_Stat
:S    169,   156,     6
:T Cmd
:C )! Fnc_Dec_Stat
:C RDEC,STAT
:A Decimation Status
:D Decimation Status
:K #(PREP7*SOLUTION)
:H Hlp_C_RDEC
Fld_0
:E END
:! 
:N Fnc_Def_port
:S    187,   167,    13
:T Cmd_N
:C )!Fnc_Def_port
:A    -Define port-
:D Apply Waveguide Port
:K #(PREP7*SOLUTION)
:K (EDGEELC*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_DelBodyFor
:S    198,   157,    34
:T Cmd_N
:C )! Fnc_DelBodyFor
:A    Body Forces
:D Nodal Body Forces
:K (PR_CFD*pr_set)+(lsdyna)
:K (CFD*NOFILTER)
Inp_P
Cmd_)!
Cal_Fnc_BFDELE_Force
:E END
:! 
:N Fnc_DelInitCon
:S    396,   225,   164
:T Command
:C )! Fnc_DelInitCon
:A Initial Condit'n
:D Delete All Initial Conditions
:K (lsdyna)
:K #((PREP7*SOLUTION)+(STRUCTRL*THERMAL*FLUID*ELECTRIC*MAGNETIC*CFD))
:H Hlp_C_ICDELE
Inp_NoApply
Cmd_ICDELE
Fld_0
 Typ_Lab
 Prm_[ICDELE]  This function deletes all Initial Conditions
Fld_0
 Typ_Lab
 Prm_            for all DOF labels on all nodes !
:E END
:! 
:N Fnc_Diode
:S    252,   130,   115
:T Cmd_P
:A   Diode
:D Diode
:C )/nopr
:C )KEYW,ZENER,0
:C )/go
:H Hlp_E_S4.125
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Diode]  Pick 3 WP locations
  Min_3
  Mok_3
  Pwr_1
  Rub_210
Cal_Fnc_Diode_1
:E END
:! 
:N Fnc_Diode_1
:S   1074,   228,   839
:T Command
:D Real Constants for CIRCU125 - Diodes
:H Hlp_E_S4.125
:H Hlp_C_R
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(3)=0
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=125
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  K_FL(zener)
  Typ_Lab
  Prm_Diode
 Fld_0
  K_FL(ZENER)
  Typ_Lab
  Prm_Zener Diode
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)/GO
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_6
  Typ_REAL
  Prm_Forward Resistance         RESF 
  Def_*GET(rcon,_z(5),const,4)
 Fld_7
  Typ_REAL
  Prm_Forward Voltage           VOLTF 
  Def_*GET(rcon,_z(5),const,5)
 Fld_8
  Typ_REAL
  Prm_Blocking Resistance        RESB 
  Def_*GET(rcon,_z(5),const,6)
! Exclude_from_paths
Cmd_)*SET,_z(3),1
 K_CM(ZENER)
! Exclude_from_paths
Cmd_RMORE
 K_CM(ZENER)
 Fld_0
  Typ_Sep
 Fld_2
  Typ_REAL
  Prm_Zener Resistance           RESZ
  Def_*GET(rcon,_z(5),const,7)
 Fld_3
  Typ_REAL
  Prm_Zener Voltage             VOLTZ
  Def_*GET(rcon,_z(5),const,8)
Cal_Fnc_MeCirBD_1
:E END
:! 
:N Fnc_DomainDcomp
:S    298,   152,   139
:T Command
:C )! Fnc_DomainDcomp
:A Domain Decomp
:D Domain Decomposition
:K (PARPERF+PREP7)
:H Hlp_C_DECOMP
Inp_NoApply
Cmd_DECOMP,DDS
 Fld_0
  Typ_Lab
  Prm_[DECOMP]  Decompose mesh into domains
 Fld_2
  Typ_Int
  Prm_Number of domains requested
:E END
:! 
:N Fnc_DropControl
:S    832,   735,    90
:T Command
:C )! Fnc_DropControl
:C )/NOPR
:C )_z1=0
:C )_z2=elmiqr(0,14)
:C )_z3=0
:C )*get,_z4,active,,keyw,,lsdyna
:C )*if,_z2,le,0,then
:C )_z1=1
:C )*create,ansuitmp
:C )*msg,error,
:C )There are no elements defined.  &
:C )Drop Test Set-Up is ignored.
:C )*end
:C )/input,ansuitmp
:C )*elseif,_z4,eq,0
:C )_z1=1
:C )*create,ansuitmp
:C )*msg,error,
:C )This is not an LS-Dyna analysis.  &
:C )Drop Test Set-Up is ignored.
:C )*end
:C )/input,ansuitmp
:C )*else
:C )/NOPR
:C )/UI,COLLAPSE,NO
:C )/GO
:C /PREP7
:C )/NOPR
:C )/UI,COLLAPSE,YES
:C )EDUI,CG
:C )*get,_z3,common,,lsdropcom,,int,10
:C )*endif
:C )*if,_z3,eq,3,then
:C )_z1=1
:C )*endif
:C )/GO
:A Set Up
:D Set Up
:H Hlp_Dth01
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z1)
Cmd_)/GO
Cal_Fnc_DropControl2,2,eq,0,2
:E END
:! 
:N Fnc_DropControl2
:S    134,    77,    50
:T Command
:C )! Fnc_DropControl
Inp_P
Cmd_)~eui,'euidl::lsdyna::droptest::create'
:E END
:! 
:N Fnc_DropNode1
:S    283,   144,   132
:T Cmd_P
:C )! Fnc_DropNode1
:C )/NOPR
:C )_dtnd1=
:C )/GO
:A Pick 2 Nodes
:D Pick Nodes
:H Hlp_dtmpdb
Inp_P
Cmd_*set,_dtnd1
 Fld_2
  Typ_NODE
  Prm_Define vector parallel to screen Y.  Pick first node.
  Min_1
  Cnt_1
  PCN_1
  Def_0
:E END
:! 
:N Fnc_DropNode2
:S    267,   144,   116
:T Cmd_P
:C )! Fnc_DropNode2
:C )/NOPR
:C )_dtnd2=
:C )/GO
:A Pick 2 Nodes
:D Pick Nodes
:H Hlp_dtmpdb
Inp_P
Cmd_*set,_dtnd2
 Fld_2
  Typ_NODE
  Prm_Pick 2nd node (defaults to object CG)
  Min_1
  Cnt_1
  PCN_1
  Def_0
:E END
:! 
:N Fnc_DtAndyna
:S    291,   252,    32
:T Cmd
:C )! Fnc_DtAndyna
:C )/NOPR
:C )/UI,COLLAPSE,NO
:C )/GO
:C /post1
:C )/NOPR
:C )/UI,COLLAPSE,YES
:C )/GO
:C set,last
:C /DSCALE,ALL,1
:A Animate Results
:D Animate Dynamic Results
:K #(DROPPOST*NOFILTER)
Inp_P
Cmd_)!
Cal_Fnc_Pl_ANDATA0
:E END
:! 
:N Fnc_DtSolve
:S    285,   209,    69
:T Cmd_N
:C )! Fnc_DtSolve
:C )/NOPR
:C )/UI,COLLAPSE,NO
:C )/GO
:C /SOLU
:C )/NOPR
:C )/UI,COLLAPSE,YES
:C )/GO
:A Solve
:D Drop Test Solution
:K #(DTFILT)
:H Hlp_Dth08
Inp_P
Cmd_SOLVE
Cmd_)/NOPR
Cmd_)KEYW,DROPPOST,1
Cmd_)/GO
Cal_REFRESH
:E END
:! 
:N Fnc_DtTmHis
:S   1592,   299,  1286
:T Command
:C )! Fnc_DtTmHis
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3
:C )/UI,COLLAPSE,NO
:C FINI
:C )/GO
:C /POST26
:C FILE,,his
:C )/NOPR
:C )/UI,COLLAPSE,YES
:C )/GO
:A %_zlabl% Variables
:D %_zlabl% Time-History Variables
:K #(DROPPOST*NOFILTER)
:H Hlp_dtmthv
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_%_zlabl% Time-History Variables
Cmd_)/NOPR
Cmd_)*set,_z1
 Fld_2
 Prm_Nodes to %_zlabl2%
  Typ_Lis_OptionB
  Lis_Center of Grav. ,0
  Lis_Initial Low Pt. ,1
  Lis_CG and Lowest Pt,2
  Def_2
Cmd_)*set,_z(1)
 Fld_2
  Prm_Item and Comp to be %_zlabl2%ed
  Typ_IDX
  IDX_Displacement    ,Screen CS     Ux,1,1,1
  IDX_Displacement    ,              Uy,1,2,4
  IDX_Displacement    ,              Uz,1,3,7
  IDX_Displacement    ,Object CS     UX,1,1,0
  IDX_Displacement    ,              UY,1,2,0
  IDX_Displacement    ,              UZ,1,3,0
  IDX_Velocity        ,Screen CS     Vx,2,1,1
  IDX_Velocity        ,              Vy,2,2,4
  IDX_Velocity        ,              Vz,2,3,7
  IDX_Velocity        ,Object CS     VX,2,1,0
  IDX_Velocity        ,              VY,2,2,0
  IDX_Velocity        ,              VZ,2,3,0
  IDX_Acceleration    ,Screen CS     Ax,3,1,1
  IDX_Acceleration    ,              Ay,3,2,4
  IDX_Acceleration    ,              Az,3,3,7
  IDX_Acceleration    ,Object CS     AX,3,1,0
  IDX_Acceleration    ,              AY,3,2,0
  IDX_Acceleration    ,              AZ,3,3,0
Cmd_)!
 Fld_0
  Typ_Lab
   Prm_NOTE:  CG node number is %_dtcgnum%
 Fld_0
  Typ_Lab
   Prm_       Low point node number is %_dtlownum%
Cmd_)/GO
Cal_Fnc_DtTmHis2
:E END
:! 
:N Fnc_DtTmHis2
:S    209,    84,   118
:T Command
:C )! Fnc_DtTmHis2
:H Hlp_dtmthv
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z(3))
Cmd_)/GO
Cal_Fnc_DtTmHis3gl,2,eq,0,2
Cal_Fnc_DtTmHis3sc,2,ne,0,2
:E END
:! 
:N Fnc_DtTmHis3gl
:S    614,   232,   375
:T Command
:C )! Fnc_DtTmHis3gl
:C )/NOPR
:C )*del,_zlab1
:C )*dim,_zlab1,char,3
:C )_zlab1(1) = 'U','V','A'
:C )*del,_zlab2
:C )*dim,_zlab2,char,3
:C )_zlab2(1) = 'X','Y','Z'
:C )/GO
:C )!
Inp_P
Cmd_NSOL,2
 Fld_2
  Typ_Def_*PAR(_dtcgnum)
 Fld_3
  Typ_Def_*PAR(_zlab1(_z(1)))
 Fld_4
  Typ_Def_*PAR(_zlab2(_z(2)))
 Fld_5
  Typ_Def_CG
Cmd_NSOL,3
 Fld_2
  Typ_Def_*PAR(_dtlownum)
 Fld_3
  Typ_Def_*PAR(_zlab1(_z(1)))
 Fld_4
  Typ_Def_*PAR(_zlab2(_z(2)))
 Fld_5
  Typ_Def_LOWPT
Cmd_/AXLAB,Y
 Fld_2
  Typ_Def_*STR(Object %_zlab1(_z(1))%%_zlab2(_z(2))%)
Cal_Fnc_DtTmHis4
:E END
:! 
:N Fnc_DtTmHis3sc
:S   1314,   604,   703
:T Command
:C )! Fnc_DtTmHis3sc
:C )/NOPR
:C )*del,_zlab1
:C )*dim,_zlab1,char,3
:C )_zlab1(1) = 'U','V','A'
:C )*del,_zlab2
:C )*dim,_zlab2,char,3
:C )_zlab2(1) = 'X','Y','Z'
:C )*del,_zoff
:C )*dim,_zoff,,3
:C )*get,_zoff(1),common,,lsdropcom,,real,23+_z(3)
:C )*if,_zoff(1),eq,0,then
:C )_zoff(1)=0.0000000001
:C )*endif
:C )*get,_zoff(2),common,,lsdropcom,,real,24+_z(3)
:C )*if,_zoff(2),eq,0,then
:C )_zoff(2)=0.0000000001
:C )*endif
:C )*get,_zoff(3),common,,lsdropcom,,real,25+_z(3)
:C )*if,_zoff(3),eq,0,then
:C )_zoff(3)=0.0000000001
:C )*endif
:C )/GO
Inp_P
Cmd_NSOL,25
 Fld_2
  Typ_Def_*PAR(_dtlownum)
 Fld_3
  Typ_Def_*PAR(_zlab1(_z(1)))
 Fld_4
  Typ_Def_X
Cmd_NSOL,26
 Fld_2
  Typ_Def_*PAR(_dtlownum)
 Fld_3
  Typ_Def_*PAR(_zlab1(_z(1)))
 Fld_4
  Typ_Def_Y
Cmd_NSOL,27
 Fld_2
  Typ_Def_*PAR(_dtlownum)
 Fld_3
  Typ_Def_*PAR(_zlab1(_z(1)))
 Fld_4
  Typ_Def_Z
Cmd_NSOL,28
 Fld_2
  Typ_Def_*PAR(_dtcgnum)
 Fld_3
  Typ_Def_*PAR(_zlab1(_z(1)))
 Fld_4
  Typ_Def_X
Cmd_NSOL,29
 Fld_2
  Typ_Def_*PAR(_dtcgnum)
 Fld_3
  Typ_Def_*PAR(_zlab1(_z(1)))
 Fld_4
  Typ_Def_Y
Cmd_NSOL,30
 Fld_2
  Typ_Def_*PAR(_dtcgnum)
 Fld_3
  Typ_Def_*PAR(_zlab1(_z(1)))
 Fld_4
  Typ_Def_Z
Cmd_/AXLAB,Y
 Fld_2
  Typ_Def_*STR(Screen %_zlab1(_z(1))%%_zlab2(_z(2))%)
Cal_Fnc_DtTmHis3sc2
:E END
:! 
:N Fnc_DtTmHis3sc2
:S    349,    76,   266
:T Command
:C )! Fnc_DtTmHis3sc2
Inp_P
Cmd_ADD,3,25,26,27,LOWPT,,
 Fld_2
  Typ_Def_*PAR(_zoff(1))
 Fld_3
  Typ_Def_*PAR(_zoff(2))
 Fld_4
  Typ_Def_*PAR(_zoff(3))
Cmd_ADD,2,28,29,30,CG,,
 Fld_2
  Typ_Def_*PAR(_zoff(1))
 Fld_3
  Typ_Def_*PAR(_zoff(2))
 Fld_4
  Typ_Def_*PAR(_zoff(3))
Cal_Fnc_DtTmHis4
:E END
:! 
:N Fnc_DtTmHis4
:S    576,   389,   180
:T Command
:C )! Fnc_DtTmHis4
:C )/NOPR
:C )KEYW,USECG,0
:C )KEYW,USELOW,0
:C )*if,_z1,eq,0,then
:C )KEYW,USECG,1
:C )*endif
:C )*if,_z1,eq,1,then
:C )KEYW,USELOW,1
:C )*endif
:C )*if,_z1,eq,2,then
:C )KEYW,USECG,1
:C )KEYW,USELOW,1
:C )*endif
:C )/GO
:A %_zlabl% Variables
:D %_zlabl% Time-History Variables
:K #(DROPPOST*NOFILTER)
:H Hlp_C_%zcmd%
Inp_P
Cmd_)!STORE,MERGE
Cmd_
 Fld_1
  Typ_Def_*PAR(_zcmd)
 Fld_2
 K_FL(USECG)
  Typ_Def_2
 Fld_3
 K_FL(USELOW)
  Typ_Def_3
Cmd_)/NOPR
Cmd_)KEYW,USECG,0
Cmd_)KEYW,USELOW,0
Cmd_)/GO
:E END
:! 
:N Fnc_DtTmHisPlot
:S    226,   190,    29
:T Command
:C )! Fnc_DtTmHisPlot
:C )/NOPR
:C )_zlabl = 'Graph'
:C )_zlabl2 = 'graph'
:C )_zcmd = 'PLVAR'
:C )/GO
:A Graph Variables
:H Hlp_dtmthv
Inp_P
Cmd_)!
Cal_Fnc_DtTmHis
:E END
:! 
:N Fnc_DtTmHisPrnt
:S    223,   187,    29
:T Command
:C )! Fnc_DtTmHisPrnt
:C )/NOPR
:C )_zlabl = 'List'
:C )_zlabl2 = 'list'
:C )_zcmd = 'PRVAR'
:C )/GO
:A List Variables
:H Hlp_dtmthv
Inp_P
Cmd_)!
Cal_Fnc_DtTmHis
:E END
:! 
:N Fnc_E
:S    244,   118,   110
:T Cmd_P
:C )! Fnc_E
:A    Thru Nodes 
:D Elements from Nodes
:K #(PREP7)
:H Hlp_C_E
Inp_P
Cmd_E
 Fld_2
  Prm_[E]  Pick or enter nodes defining the element
  Typ_NODE
   Min_1
   Cnt_20
   Pdp_1
:E End_OF_Fnc_E
:! 
:N Fnc_EALIVE
:S    273,   156,   110
:T Cmd_P
:C )! Fnc_EALIVE
:A    Activate Elem
:D Activate Elements
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_EALIVE
Inp_P
Cmd_EALIVE
Fld_2
 Prm_[EALIVE]  Pick or enter "killed" elements to be activated
 Typ_ELEM
 Min_1
 Cnt_s
:E END
:! 
:N Fnc_EDELE
:S    238,   121,   110
:T Cmd_P
:C )! Fnc_EDELE
:A Elements 
:D Delete Elements
:K #(PREP7)
:H Hlp_C_EDELE
Inp_P
Cmd_EDELE
 Fld_2
  Typ_ELEM
  Prm_[EDELE]  Pick or enter elements to be deleted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_EDELE_pret
:S    338,   150,   181
:T Cmd_P
:C )! Fnc_EDELE_pret
:A Pre-tens Elemnts
:D Delete Pre-tension Elements
:K #(PREP7)
:H Hlp_C_EDELE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_Do you wish to merge nodes
 Fld_2
  Prm_after deleting elements?
  Typ_Logi,No,Yes
   Def_1
Cmd_)/GO
Cal_Fnc_EDELE_pret2
:E END
:! 
:N Fnc_EDELE_pret2
:S    600,   189,   404
:T Cmd_P
:C )! Fnc_EDELE_pret2
:C )/NOPR
:C )KEYW,MERGE,_z1
:C )/GO
:A Pre-tens Elemnts
:D Delete Pre-tension Elements
:K #(PREP7)
:H Hlp_C_EDELE
Inp_P
! Exclude_from_paths
Cmd_/NOPR
! Exclude_from_paths
Cmd_CM,_nd,NODE
! Exclude_from_paths
Cmd_CM,_elm,ELEM
Cmd_NSEL
 Fld_2
  Typ_Def_S
 Fld_5
  Typ_NODE
  Prm_[NSEL] Pick or enter pre-tension node
  Min_1
  Cnt_1
! Exclude_from_paths
Cmd_CM,_pnd,NODE
Cmd_ESLN
Cmd_ESEL,R,ENAME,,179
Cmd_NSLE
! Exclude_from_paths
Cmd_/GO
Cmd_EDEL,ALL
K_LN(merge)
Cal_Fnc_EDELE_pret3n
K_LN(MERGE)
Cal_Fnc_EDELE_pret3y
:E END
:! 
:N Fnc_EDELE_pret3n
:S    411,   154,   250
:T Cmd_P
:C )! Fnc_EDELE_pret3n
:A Pre-tens Elemnts
:D Delete Pre-tension Elements
:K #(PREP7)
:H Hlp_C_EDELE
Inp_P
! Exclude_from_paths
Cmd_/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_nd
! Exclude_from_paths
Cmd_CMSEL,a,_elm
! Exclude_from_paths
Cmd_CMDELE,_nd
! Exclude_from_paths
Cmd_CMDELE,_pnd
! Exclude_from_paths
Cmd_CMDELE,_elm
! Exclude_from_paths
Cmd_/GO
:E END
:! 
:N Fnc_EDELE_pret3y
:S    544,   154,   383
:T Cmd_P
:C )! Fnc_EDELE_pret3y
:A Pre-tens Elemnts
:D Delete Pre-tension Elements
:K #(PREP7)
:H Hlp_C_EDELE
Inp_P
! Exclude_from_paths
Cmd_/NOPR
! Exclude_from_paths
Cmd_CMSEL,U,_pnd
! Exclude_from_paths
Cmd_)/GO
Cmd_NUMMRG,NODE
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_nd
! Exclude_from_paths
Cmd_CMSEL,a,_pnd
! Exclude_from_paths
Cmd_CMSEL,a,_elm
! Exclude_from_paths
Cmd_CMDELE,_pnd
! Exclude_from_paths
Cmd_CMDELE,_nd
! Exclude_from_paths
Cmd_CMDELE,_elm
! Exclude_from_paths
Cmd_/GO
:E END
:! 
:N Fnc_EDEL_ME0
:S    243,   142,    94
:T Command
:C )/nopr
:C )*get,_e0,elem,0,num,min
:C )*get,_en,elem,_e0,attr,enam
:C )/go
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_en)
Cal_Fnc_EDEL_ME1, 2,ne,200
Cal_Fnc_EDEL_ME2, 2,eq,200
:E END
:! 
:N Fnc_EDEL_ME1
:S    122,    64,    51
:T Command
:P (ELECMAG)
Inp_P
Cmd_EDELE,ALL
Cmd_NDELE,ALL
Cal_Fnc_EDEL_MEF
:E END
:! 
:N Fnc_EDEL_ME2
:S    334,   144,   183
:T Command
:C )/nopr
:C )*get,_nod,node,0,num,min
:C )*get,_ncp,node,_nod,CPS,VOLT
:C )/go
:P (ELECMAG)
Inp_P
Cmd_NSEL,S,CP
 Fld_3
  Typ_Def_*Par(_ncp)
Cmd_ESLN,S,1
Cmd_ESEL,R,ENAME,,200
Cmd_EDELE,ALL
Cmd_CPDELE
 Fld_2
  Typ_Def_*Par(_ncp)
Cmd_CPMERG,VOLT
Cmd_NDELE,ALL
Cal_Fnc_EDEL_MEF
:E END
:! 
:N Fnc_EDEL_MEF
:S    189,    96,    86
:T Command
:C )/nopr
:C )*get,_nco,comp,0,ncomp
:C )/go
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_nco)
Cal_Fnc_CirPR,2,le,0
Cal_Fnc_EDEL_MFF,2,gt,0
:E END
:! 
:N Fnc_EDEL_MEM
:S    410,   134,   269
:T Cmd_P
:C )! Fnc_EDEL_MEM
:A Delete Elements
:D Delete Elements
:H Hlp_C_EDELE
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
  Typ_ELEM
  Prm_[EDELE]  Pick or enter elements to be deleted
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_NSLE
Cmd_)/GO
Cal_Fnc_EDEL_ME0
:E END
:! 
:N Fnc_EDEL_MFF
:S    220,    51,   162
:T Command
Inp_P
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
! Exclude_from_paths
Cmd_CMDEL,_Y
! Exclude_from_paths
Cmd_CMDEL,_Y1
Cal_Fnc_CirPR
:E END
:! 
:N Fnc_EDFPLOT
:S    394,   194,   193
:T Cmd
:A Show Forces
:D Plot Explicit dynamics load symbols on the model
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,10
:C )/GO
:K (LSDYNA)
:H Hlp_C_EDFPLOT
  Fld_0
  Typ_Lab
  Prm_[EDFPLOT] Plot load symbols for LS-DYNA
! 
Cmd_EDFPLOT
 Fld_0
  Typ_Sep
 Fld_2
   Prm_Display load symbols:
   Typ_Lis_RadioB
   Lis_Show , 1
   Lis_Hide , 0
   Def_1
!
:E END
:! 
:N Fnc_EDG_GAUGE
:S    427,   207,   213
:T Command
:C )! Fnc_EDG_GAUGE
:A    Gauging
:D Gauging of the edge degrees of freedom
:K #((PREP7*SOLUTION)+((ELEM3D+EDGEFLX)*NOFILTER))
:P (ELECMAG)
:H Hlp_C_GAUGE
Inp_NoApply
Cmd_GAUGE
 Fld_0
  Typ_Lab
  Prm_[GAUG]  Gauging over all selected elements and nodes
 Fld_2
  Prm_Label         Gauging will be
  Typ_LIS_RADIOB
  LIS_Performed       ,TREE
  LIS_Not performed   ,OFF
:E END
:! 
:N Fnc_EDIPART_def
:S    645,   192,   446
:T Cmd
:C )! Fnc_EDIPART_def
:C )/NOPR
:C )*del,_z
:C )*dim,_z,,10
:C )/GO
:A Define Inertia
:D Part Inertia Definition
:K (LSDYNA)
:H Hlp_C_EDIPART
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,4
 Fld_0
  Typ_Lab
  Prm_[EDIPART] Define Inertia for Part
 Fld_2
  Prm_PART number
  Typ_Lis_OptionB
  Lis_*READ,PART
 Fld_0
  Typ_Sep
 Fld_3
  Prm_TM  Translational Mass
  Typ_REAL
 Fld_0
  Typ_Sep
 Fld_4
  Prm_IRCS Inertia tensor coord system
  Typ_LOGI,Global,Local
  Def_0
 Fld_0
  Typ_Sep
 Fld_5
  Prm_INRT_Vect Inertia Vector
  Typ_Lis_RadioB
  Lis_Select,0
  Lis_Define,1
Cmd_)/GO
Cal_Fnc_EDIPART_defB
:E END
:! 
:N Fnc_EDIPART_defB
:S    291,   148,   136
:T Cmd
:C )! Fnc_EDIPART_defB
:A Define Inertia
:D Part Inertia Definition
:K (LSDYNA)
:H Hlp_C_EDIPART
Inp_P
Cmd_)/NOPR
Cmd_)KEYW,IRCSPICK
 Fld_2
  Typ_Def_*CPAR(3)
Cmd_)KEYW,INRTDEF
 Fld_2
  Typ_Def_*CPAR(4)
Cmd_)/GO
Cal_Fnc_EDIPART_defC
:E END
:! 
:N Fnc_EDIPART_defC
:S   1162,   208,   947
:T Cmd
:C )! Fnc_EDIPART_defC
:C )/NOPR
:C )*del,_z
:C )*dim,_z,,10
:C )_zc99=' '
:C )/GO
:A Define Inertia
:D Part Inertia Definition
:K (LSDYNA)
:H Hlp_C_EDIPART
Inp_NoApply
Cmd_)/NOPR
 Fld_0
  Typ_Lab
  Prm_[EDIPART] Define Inertia for Part (cont.)
 Fld_0
  Typ_Sep
Cmd_)*CSET,5,6
 Fld_2
  K_FL(IRCSPICK)
  Prm_LCSID Local coord. system number
  Typ_INT
 Fld_0
  K_FL(IRCSPICK)
  Typ_Sep
 Fld_3 
  K_FL(inrtdef)
  Prm_Select inertia vector
  Typ_Lis_OptionB
   Lis_*READ,"PAR"
 Fld_3
  K_FL(INRTDEF)
  Prm_Define inertia vector
  Typ_CHAR
  Def_*PAR(_zc99)
! Exclude_from_paths
Cmd_)*SET,_z(1)
 K_CM(INRTDEF)
 Fld_2
  Prm_Ixx, Ixy, Ixz
  Typ_REAL3
  Def_*PAR(_zc99),*PAR(_zc99),*PAR(_zc99)
 Fld_5
  Prm_Iyy, Iyz, Izz
  Typ_REAL3
  Def_*PAR(_zc99),*PAR(_zc99),*PAR(_zc99)
! Exclude_from_paths
Cmd_)*SET,_z1
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Define Coordinate Vector
  Typ_Lis_RadioB
  Lis_Global origin,0
  Lis_Select,1
  Lis_Define,2
! Exclude_from_paths
Cmd_)*SET,_z2
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Define Velocity Vector
  Typ_Lis_RadioB
  Lis_Zero velocity,0
  Lis_Select,1
  Lis_Define,2
Cal_Fnc_EDIPART_defD
:E END
:! 
:N Fnc_EDIPART_defD
:S    834,   196,   631
:T Cmd
:C )! Fnc_EDIPART_defD
:C )/NOPR
:C )_zc99=' '
:C )_z3=_z1+_z2
:C )/GO
:A Define Inertia
:D Part Inertia Definition
:K (LSDYNA)
:H Hlp_C_EDIPART
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z3)
Cmd_)/GO
! Exclude_from_paths
Cmd_*DEL
 K_CM(INRTDEF)
 Fld_2
  Typ_Def_*CPAR(6)
!
! Exclude_from_paths
Cmd_*DEL
 K_CM(INRTDEF)
 Fld_2
  Typ_Def_*CPAR(6)
!
! Exclude_from_paths
Cmd_*DIM
 K_CM(INRTDEF)
 Fld_2
  Typ_Def_*CPAR(6)
 Fld_4
  Typ_Def_6
!
! Exclude_from_paths
Cmd_*SET
 K_CM(INRTDEF)
 Fld_2
  Typ_Def_*CPAR(6)
  Dlm_(
 Fld_3
  Typ_Def_1)
 Fld_4
  Typ_Def_*PAR(_z(1))
 Fld_5
  Typ_Def_*PAR(_z(2))
 Fld_6
  Typ_Def_*PAR(_z(3))
 Fld_7
  Typ_Def_*PAR(_z(4))
 Fld_8
  Typ_Def_*PAR(_z(5))
 Fld_9
  Typ_Def_*PAR(_z(6))
Cal_Fnc_EDIPART_defE,2,gt,0,2
Cal_Fnc_EDIPART_defX,2,eq,0,2
:E END
:! 
:N Fnc_EDIPART_defE
:S   1352,   492,   853
:T Cmd
:C )! Fnc_EDIPART_defE
:C )/NOPR
:C )*del,_z
:C )*dim,_z,,10
:C )_zc99=' '
:C )KEYW,SELECT1,0
:C )KEYW,DEFINE1,0
:C )KEYW,SELECT2,0
:C )KEYW,DEFINE2,0
:C )*IF,_z1,EQ,1,THEN
:C )KEYW,SELECT1,1
:C )*ENDIF
:C )*IF,_z1,EQ,2,THEN
:C )KEYW,DEFINE1,1
:C )*ENDIF
:C )*IF,_z2,EQ,1,THEN
:C )KEYW,SELECT2,1
:C )*ENDIF
:C )*IF,_z2,EQ,2,THEN
:C )KEYW,DEFINE2,1
:C )*ENDIF
:C )/GO
:A Define Inertia
:D Part Inertia Definition
:K (LSDYNA)
:H Hlp_C_EDIPART
Inp_NoApply
Cmd_)*CSET,7,7
 K_CM(SELECT1)
 Fld_2
  Prm_Select coordinate vector
  Typ_Lis_OptionB
   Lis_*READ,"PAR"
Cmd_)*CSET,7,7
 K_CM(DEFINE1)
 Fld_2
  Prm_Define coordinate vector
  Typ_CHAR
  Def_*PAR(_zc99)
! Exclude_from_paths
Cmd_)*SET,_z(1)
 K_CM(DEFINE1)
 Fld_2
  Prm_ XC, YC, ZC
  Typ_REAL3
  Def_*PAR(_zc99),*PAR(_zc99),*PAR(_zc99)
Cmd_)!
 Fld_0
  K_FL(SELECT1)
  Typ_Sep
 Fld_0
  K_FL(DEFINE1)
  Typ_Sep
Cmd_)*CSET,8,8
 K_CM(SELECT2)
 Fld_2
  Prm_Select velocity vector
  Typ_Lis_OptionB
   Lis_*READ,"PAR"
Cmd_)*CSET,8,8
 K_CM(DEFINE2)
 Fld_2
  Prm_Define velocity vector
  Typ_CHAR
  Def_*PAR(_zc99)
! Exclude_from_paths
Cmd_)*SET,_z(4)
 K_CM(DEFINE2)
 Fld_2
  Prm_ VTX, VTY, VTZ
  Typ_REAL3
  Def_*PAR(_zc99),*PAR(_zc99),*PAR(_zc99)
 Fld_5
  Prm_ VRX, VRY, VRZ
  Typ_REAL3
  Def_*PAR(_zc99),*PAR(_zc99),*PAR(_zc99)
Cal_Fnc_EDIPART_defF
:E END
:! 
:N Fnc_EDIPART_defF
:S    980,   148,   825
:T Cmd
:C )! Fnc_EDIPART_defF
:A Define Inertia
:D Part Inertia Definition
:K (LSDYNA)
:H Hlp_C_EDIPART
Inp_P
Cmd_)!
! Exclude_from_paths
Cmd_*DEL
 K_CM(DEFINE1)
 Fld_2
  Typ_Def_*CPAR(7)
!
! Exclude_from_paths
Cmd_*DIM
 K_CM(DEFINE1)
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_4
  Typ_Def_3
!
! Exclude_from_paths
Cmd_*SET
 K_CM(DEFINE1)
 Fld_2
  Typ_Def_*CPAR(7)
  Dlm_(
 Fld_3
  Typ_Def_1)
 Fld_4
  Typ_Def_*PAR(_z(1))
 Fld_5
  Typ_Def_*PAR(_z(2))
 Fld_6
  Typ_Def_*PAR(_z(3))
!
! Exclude_from_paths
Cmd_*DEL
 K_CM(DEFINE2)
 Fld_2
  Typ_Def_*CPAR(8)
!
! Exclude_from_paths
Cmd_*DIM
 K_CM(DEFINE2)
 Fld_2
  Typ_Def_*CPAR(8)
 Fld_4
  Typ_Def_6
!
! Exclude_from_paths
Cmd_*SET
 K_CM(DEFINE2)
 Fld_2
  Typ_Def_*CPAR(8)
  Dlm_(
 Fld_3
  Typ_Def_1)
 Fld_4
  Typ_Def_*PAR(_z(4))
 Fld_5
  Typ_Def_*PAR(_z(5))
 Fld_6
  Typ_Def_*PAR(_z(6))
 Fld_7
  Typ_Def_*PAR(_z(7))
 Fld_8
  Typ_Def_*PAR(_z(8))
 Fld_9
  Typ_Def_*PAR(_z(9))
Cal_Fnc_EDIPART_defX
:E END
:! 
:N Fnc_EDIPART_defX
:S    650,   148,   495
:T Cmd
:C )! Fnc_EDIPART_defX
:A Define Inertia
:D Part Inertia Definition
:K (LSDYNA)
:H Hlp_C_EDIPART
Inp_P
Cmd_EDIPART
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_ADD
 Fld_4
  K_FL(DEFINE1)
  Typ_Def_*CPAR(7)
 Fld_4
  K_FL(SELECT1)
  Typ_Def_*CPAR(7)
 Fld_5
  Typ_Def_*CPAR(2)
 Fld_6
  Typ_Def_*CPAR(3)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  K_FL(DEFINE2)
  Typ_Def_*CPAR(8)
 Fld_8
  K_FL(SELECT2)
  Typ_Def_*CPAR(8)
 Fld_9
  K_FL(IRCSPICK)
  Typ_Def_*CPAR(5)
Cmd_)/NOPR
Cmd_)KEYW,IRCSPICK,0
Cmd_)KEYW,INRTDEF,0
Cmd_)KEYW,SELECT1,0
Cmd_)KEYW,DEFINE1,0
Cmd_)KEYW,SELECT2,0
Cmd_)KEYW,DEFINE2,0
Cmd_)/GO
:E END
:! 
:N Fnc_EDIPART_del
:S    344,   142,   195
:T Cmd
:C )! Fnc_EDIPART_del
:A Delete Inertia
:D Part Inertia Delete
:K (LSDYNA)
:H Hlp_C_EDIPART
Inp_NoApply
Cmd_EDIPART
Fld_0
   Typ_Lab
   Prm_[EDIPART] Delete Inertia Definitions for Part
Fld_2
  Prm_PART number
  Typ_Lis_OptionB
  Lis_ALL parts,' '
  Lis_*READ,PART
Fld_3
 Typ_Def_DELETE
:E END
:! 
:N Fnc_EDIPART_lis
:S    337,   139,   191
:T Cmd
:C )! Fnc_EDIPART_lis
:A List Inertia
:D Part Inertia List 
:K (LSDYNA)
:H Hlp_C_EDIPART
Inp_NoApply
Cmd_EDIPART
Fld_0
   Typ_Lab
   Prm_[EDIPART] List Inertia Definitions for Part
Fld_2
  Prm_PART number
  Typ_Lis_OptionB
  Lis_ALL parts,' '
  Lis_*READ,PART
Fld_3
 Typ_Def_LIST
:E END
:! 
:N Fnc_EDLDPLOT_2
:S    342,   186,   149
:T Cmd
:C )! Fnc_EDLDPLOT_2
:A Plot Load Curve
:D Plot LS-DYNA Explicit Dynamic Loads
:K ((LSDYNA*FULL_ANS)+(SOLUTION*PREP7))
:H Hlp_C_EDLDPLOT
Inp_P
Cmd_EDLDPLOT
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
:E END
:! 
:N Fnc_EDNDTSD
:S   2791,   294,  2490
:T Cmd
:D Smoothing of Noisy Data
:C )/NOPR
:C )*get,_z1,active,,keyw,,lsdyna
:C )_type = 'EDNDTSD'
:C )*if,_z1,eq,0,then
:C )_type = 'SMOOTH'
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,16
:C )*endif
:C )/GO
:A Smooth Data
:K (SOLUTION*PREP7*POST26)
:H Hlp_C_%_type%
Cmd_)/NOPR
 Fld_0
  K_FL(LSDYNA)
  Typ_Lab
  Prm_[EDNDTSD]  Smoothing of Explicit Dynamics Noisy Data
 Fld_0
  K_FL(lsdyna)
  Typ_Lab
  Prm_[SMOOTH]  Smoothing of Noisy Data
  Fld_0
   Typ_Sep
Cmd_)*CSET,1,1
 Fld_2
   Typ_Def_
   Dlm_'
 Fld_3
  Typ_Lis_OptionB
   Lis_*READ,"PAR"
  Prm_Noisy independent data vector
  Dlm_'
 Fld_4
   Typ_Def_
Cmd_)*CSET,2,2
 Fld_2
   Typ_Def_
   Dlm_'
 Fld_3
  Typ_Lis_OptionB
   Lis_*READ,"PAR"
  Prm_Noisy dependent data vector
  Dlm_'
 Fld_4
   Typ_Def_
 Fld_0
   Typ_Sep
! Exclude_from_paths
Cmd_)*SET,_z1
 Fld_2
  Typ_REAL
  Prm_Number of data points to fit
! Exclude_from_paths
Cmd_)*SET,_z2
 Fld_2
  Typ_REAL
  Prm_Fitting curve order
  Fld_0
   Typ_Sep
Cmd_)*CSET,3,3
 Fld_2
   Typ_Def_
   Dlm_'
 Fld_3
  Typ_Lis_OptionB
   Lis_Create new,1
   Lis_*READ,"PAR"
   Prm_Smoothed independent data vector
  Dlm_'
 Fld_4
   Typ_Def_
Cmd_)*CSET,4,4
 Fld_2
   Typ_Def_
   Dlm_'
 Fld_3
  Typ_Char,16
   Prm_            Name of new vector
  Dlm_'
 Fld_4
   Typ_Def_
Cmd_)*CSET,5,5
 Fld_2
   Typ_Def_
   Dlm_'
 Fld_3
  Typ_Lis_OptionB
   Lis_Create new,2
   Lis_*READ,"PAR"
   Prm_Smoothed dependent data vector
  Dlm_'
 Fld_4
   Typ_Def_
Cmd_)*CSET,6,6
 Fld_2
   Typ_Def_
   Dlm_'
 Fld_3
  Typ_Char,16
   Prm_            Name of new vector
  Dlm_'
 Fld_4
   Typ_Def_
! Exclude_from_paths
Cmd_)*SET,_z3
 Fld_2
  Prm_Plot data
  Typ_Lis_OptionB
   Lis_Unsmoothed   ,1
   Lis_Smoothed     ,2
   Lis_Both         ,3
  Def_3
Cmd_)/GO
  Fld_0
   Typ_Sep
! Exclude_from_paths
Cmd_/GTHK,CURVE
Fld_2
Prm_[/GTHK]   Thickness of curves
Typ_LIS_OPTIONB
LIS_Single          ,1
LIS_Double          ,2
LIS_Triple          ,3
LIS_Four times      ,4
LIS_Five times      ,5
LIS_Six times       ,6
LIS_Seven times     ,7
LIS_Eight times     ,8
LIS_Nine times      ,9
LIS_Ten times       ,10
Def_*GET(common,,grcom,,int,18)
! 
! Exclude_from_paths
Cmd_/GRID
Fld_2
Prm_[/GRID]   Type of grid
Typ_LIS_OPTIONB
LIS_None            ,0
LIS_X and Y lines   ,1
LIS_X lines only    ,2
LIS_Y lines only    ,3
   Def_*GET(COMMON,,D3COM,,INT,94)
!
! Exclude_from_paths
Cmd_/GROPT,LOGY
Fld_2
Prm_[/GROPT],LOGY    Graph type
Typ_LIS_OPTIONB
LIS_Linear          ,OFF
LIS_Semi-Log        ,ON
   Def_0
!
  Fld_0
   Typ_Sep
!
! Exclude_from_paths
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_[/COLOR],CURVE 1  Graph color
Typ_COLOR
Def_7
Fld_4
Typ_Def_1
!
! Exclude_from_paths
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_[/COLOR],CURVE 2  Graph color
Typ_COLOR
Def_9
Fld_4
Typ_Def_2
!
Cal_Fnc_EDNDTSD_1
:E End
:! 
:N Fnc_EDNDTSD_1
:S    575,    50,   518
:T Cmd_N
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)*SET,_par1
 FLd_2
 Typ_Def_*CPAR(1)
!
! Exclude_from_paths
Cmd_)*SET,_par3
 FLd_2
 Typ_Def_*CPAR(3)
!
Cmd_)~eui
 Fld_2
 Typ_Def_'ans_sendcommand _z7=[string match " "
 Dlm_  
 Fld_3
 Dlm_"
 Fld_4
 Typ_Def_*CPAR(4)
 Dlm_"
 Fld_5
  Typ_Def_]'
!
! Exclude_from_paths
Cmd_)*SET,_par5
 FLd_2
 Typ_Def_*CPAR(5)
!
Cmd_)~eui
 Fld_2
 Typ_Def_'ans_sendcommand _z8=[string match " "
 Dlm_  
 Fld_3
 Dlm_"
 Fld_4
 Typ_Def_*CPAR(6)
 Dlm_"
 Fld_5
  Typ_Def_]'
!
Cmd_)/GO
Cal_Fnc_EDNDTSD_2
:E END
:! 
:N Fnc_EDNDTSD_2
:S   1075,   571,   497
:T Cmd_N
:C )/NOPR
:C )_z5=0
:C )_z6=0
:C )keyw,newind,0
:C )keyw,newdep,0
:C )*IF,_par3,eq,1,then
:C )*IF,_z7,EQ,1,THEN
:C )*CSET,4,4,'smth_ind'
:C )*ENDIF
:C )keyw,newind,1
:C )*IF,_z1,EQ,0,THEN
:C )*GET,_z9,PARM,%_par1%,DIM,X
:C )_z5=_z9
:C )*ELSE
:C )_z5=_z1
:C )*ENDIF
:C )*ENDIF
:C )*IF,_par5,eq,2,then
:C )*IF,_z8,EQ,1,THEN
:C )*CSET,6,6,'smth_dep'
:C )*ENDIF
:C )keyw,newdep,1
:C )*IF,_z1,EQ,0,THEN
:C )*GET,_z9,PARM,%_par1%,DIM,X
:C )_z6=_z9
:C )*ELSE
:C )_z6=_z1
:C )*ENDIF
:C )*ENDIF
:C )/GO
:K (SOLUTION*PREP7*POST26)
Inp_P
Cmd_)!
!
! Exclude_from_paths
Cmd_*DIM
K_CM(NEWIND)
 Fld_2
  Typ_DEF_*CPAR(4)
 Fld_3
  Typ_DEF_ARRAY
 Fld_4
  Typ_DEF_*PAR(_z5)
!
Cmd_)*CSET,3,3
K_CM(NEWIND)
 Fld_2
   Typ_Def_
   Dlm_'
 Fld_3
  Typ_Def_*CPAR(4)
  Dlm_'
 Fld_4
   Typ_Def_
!
! Exclude_from_paths
Cmd_*DIM
K_CM(NEWDEP)
 Fld_2
  Typ_DEF_*CPAR(6)
 Fld_3
  Typ_DEF_ARRAY
 Fld_4
  Typ_DEF_*PAR(_z6)
!
Cmd_)*CSET,5,5
K_CM(NEWDEP)
 Fld_2
   Typ_Def_
   Dlm_'
 Fld_3
  Typ_Def_*CPAR(6)
  Dlm_'
 Fld_4
   Typ_Def_
!
Cal_Fnc_EDNDTSD_3
:E End
:! 
:N Fnc_EDNDTSD_3
:S    732,   258,   467
:T Cmd_N
:C )/NOPR
:C )*GET,_z9,PARM,_z1,TYPE
:C )*IF,_z9,EQ,-1,THEN
:C )_z1=' '
:C )*ENDIF
:C )*GET,_z9,PARM,_z2,TYPE
:C )*IF,_z9,EQ,-1,THEN
:C )_z2=' '
:C )*ENDIF
:C )/GO
:K (SOLUTION*PREP7*POST26)
:H Hlp_C_EDNDTSD
Inp_P
Cmd_EDNDTSD
K_CM(LSDYNA)
  Fld_2
    Typ_Def_*CPAR(1)
  Fld_3
    Typ_Def_*CPAR(2)
  Fld_4
    Typ_Def_*PAR(_z1)
  Fld_5
    Typ_Def_*PAR(_z2)
  Fld_6
    Typ_Def_*CPAR(3)
  Fld_7
    Typ_Def_*CPAR(5)
  Fld_8
    Typ_Def_*PAR(_z3)
Cmd_SMOOTH
K_CM(lsdyna)
  Fld_2
    Typ_Def_*CPAR(1)
  Fld_3
    Typ_Def_*CPAR(2)
  Fld_4
    Typ_Def_*PAR(_z1)
  Fld_5
    Typ_Def_*PAR(_z2)
  Fld_6
    Typ_Def_*CPAR(3)
  Fld_7
    Typ_Def_*CPAR(5)
  Fld_8
    Typ_Def_*PAR(_z3)
:E End
:! 
:N Fnc_EDPRTLST
:S    127,    98,    22
:T Command
:C )! Fnc_EDPRTLST
:A List Parts
:D List Parts
Inp_P
Cmd_EDPART,LIST
:E END
:! 
:N Fnc_EDPRTPLT
:S    130,    98,    25
:T Command
:C )! Fnc_EDPRTPLT
:A Plot Parts
:D Plot Parts
Inp_P
Cmd_PARTSEL,'PLOT'
:E END
:! 
:N Fnc_EDPRTSEL
:S    581,   119,   455
:T Command
:C )! Fnc_EDPRTSEL
:A Select Parts
:D Select Parts
:H Hlp_C_PARTSEL
Cmd_PARTSEL
Fld_0
Typ_Lab
Prm_[PARTSEL]  Select parts
 Fld_2
  Prm_Type  Type of selection
  Typ_Lis_OptionB
   Lis_From full set   ,'s'
   Lis_Reselect        ,'r'
   Lis_Also select     ,'a'
   Lis_Unselect        ,'u'
   Lis_Select all      ,'all'
   Lis_Select none     ,'none'
   Lis_Invert          ,'inve'
 Fld_3
  Prm_Pmin  min part number  
  Typ_Real
 Fld_4
  Prm_Pmax  max part number  
  Typ_Real
 Fld_5
  Prm_Pinc  part number inc
  Typ_Real
:E END
:! 
:N Fnc_EDTIMSTP
:S    628,   157,   464
:T Command
:C )! Fnc_EDTIMSTP 
:A Time Step Prediction
:D Calculate Time Steps for LS-DYNA
:K (LSDYNA)
:H Hlp_C_EDTP
Inp_NoApply
! Exclude_from_paths
Cmd_/NOPR
! Exclude_from_paths
Cmd_*set,_z1
Fld_0
Typ_Lab
Prm_[EDTP]  Calculate Time Steps
 Fld_2
  Prm_Option
  Typ_Lis_OptionB
  Lis_Plot small elems,1
  Lis_Plot and list   ,2
  Lis_Translucency    ,3
! Exclude_from_paths
Cmd_*set,_z2
 Fld_2
  Prm_Number of elements to plot
  Typ_Real
  Def_100
! Exclude_from_paths
Cmd_*set,_z3
 Fld_2
  Prm_Translucency value
  Typ_Real
  Def_0.9
! Exclude_from_paths
Cmd_/GOPR
Cal_Fnc_EDTP2
:E END
:! 
:N Fnc_EDTP2
:S    348,   243,    98
:T Command
:C )! Fnc_EDTP2
:C EDTP,_z1,_z2,_z3,1.0
:C /NOPR
:C *if,_z1,ne,1,then
:C  *if,_ABORT,LE,0,then
:C   *list,_TIMESTP
:C   /delete,_TIMESTP
:C  *endif
:C *endif
:C /GOPR
:A Time Steps
:D Time Steps
Inp_NoApply
Fld_0
Typ_Lab
Prm_Choose OK to return to plotting defaults.
Cmd_EDTP,,,,2.0
Cmd_EPLOT
:E END
:! 
:N Fnc_EGEN_copy
:S    319,   177,   135
:T Cmd_P
:C )! Fnc_EGEN_copy
:C )! Elements for EGEN command below
:A    Auto Numbered
:D Copy Elems Auto-Num
:K #(PREP7)
:H Hlp_C_EGEN
Inp_P
Cmd_)!
  Fld_4
  Typ_ELEM
  Prm_[EGEN]  Pick or enter elements to be copied 
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_EGEN_copy_2
:E END
:! 
:N Fnc_EGEN_copy_2
:S    872,   144,   721
:T Command
:C )! Fnc_EGEN_copy_2
:H Hlp_C_EGEN
:D Copy Elements (Automatically-Numbered)
:K #(PREP7)
Cmd_EGEN
 Fld_0
  Typ_Lab
  Prm_[EGEN]  Copy Elements (Automatically Numbered)
 Fld_2
  Prm_ITIME  Total number of copies -
  Typ_INT
  Def_2
 Fld_0
  Typ_Lab
  Prm_       - including original
 Fld_3
  Prm_NINC   Node number increment
  Typ_INT
  Def_1
 Fld_4
  Typ_Def_P51X
 Fld_7
  Prm_MINC   Material no. increment
  Typ_INT
 Fld_8
  Prm_TINC   Elem type no. increment
  Typ_INT
 Fld_9
  Prm_RINC   Real constant no. incr
  Typ_INT
 Fld_11
  Prm_SINC   Section ID no. incr
  Typ_INT
 Fld_10
  Prm_CINC   Elem coord sys no. incr
  Typ_INT
 Fld_12
  Prm_DX     (opt) X-offset in active CS
  Typ_REAL
 Fld_13
  Prm_DY     (opt) Y-offset in active CS
  Typ_REAL
 Fld_14
  Prm_DZ     (opt) Z-offset in active CS
  Typ_REAL
:E END
:! 
:N Fnc_EINTF
:S    639,   155,   477
:T Command
:C )! Fnc_EINTF
:A    At Coincid Nd
:D Define Elements Between Coincident Nodes
:K #(PREP7)
:H Hlp_C_EINTF
Inp_NoApply
Cmd_*CSET,1,8
 Fld_0
  Typ_Lab
   Prm_[EINTF]  Define Elements Between Coincident Nodes
 Fld_2
  Typ_REAL
  Prm_TOLER  Tolerance of coincidence
  Def_0.0001
 Fld_4
  Prm_TLAB   Nodal number ordering
  Typ_LIS_OptionB
  LIS_Low to high     ,LOW
  LIS_High to low     ,HIGH
  LIS_Ordering reverse,REV
 Fld_5
  Typ_Def_
 Fld_6
  Typ_Def_
 Fld_7
  Typ_Def_
 Fld_8
  Typ_Def_
 Fld_9
  Typ_Def_
Cal_Fnc_EINTF_2,4,ES,LOW
Cal_Fnc_EINTF_2,4,ES,HIGH
Cal_Fnc_EINTF_3,4,ES,REV
:E END
:! 
:N Fnc_EINTF_2
:S    395,    99,   289
:T Command
:C )! Fnc_EINTF_2
:D Select Nodes
:H Hlp_C_EINTF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,NODE
! Exclude_from_paths
Cmd_NSEL
 Fld_5
  Prm_[EINTF]  Pick or enter nodes for element generation
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_EINTF_5
:E END
:! 
:N Fnc_EINTF_3
:S    393,   102,   284
:T Command
:C )! Fnc_EINTF_3
:D Select Elements
:H Hlp_C_EINTF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
 Fld_5
  Prm_[EINTF]  Pick or enter elements to be reversed
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_EINTF_4
:E END
:! 
:N Fnc_EINTF_4
:S    367,    83,   277
:T Command
:C )! Fnc_EINTF_4
:H Hlp_C_EINTF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y1
! Exclude_from_paths
Cmd_)/GO
Cmd_EINTF
 Fld_4
  Typ_Def_*CPAR(3)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
! Exclude_from_paths
!Cmd_)/REP
Cmd_)/GO
:E END
:! 
:N Fnc_EINTF_5
:S    549,    83,   459
:T Command
:C )! Fnc_EINTF_5
:H Hlp_C_EINTF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y1
! Exclude_from_paths
Cmd_)/GO
Cmd_EINTF
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Typ_Def_*CPAR(7)
 Fld_9
  Typ_Def_*CPAR(8)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
! Exclude_from_paths
!Cmd_)/REP
Cmd_)/GO
:E END
:! 
:N Fnc_EINTF_OFFSET
:S    890,   157,   726
:T Command
:C )! Fnc_EINTF
:A    Offset Nodes
:D Define Elements Between Offset Nodes
:K #(PREP7)
:H Hlp_C_EINTF
Inp_NoApply
Cmd_*CSET,1,8
 Fld_0
  Typ_Lab
   Prm_[EINTF]  Define Elements Between OffsetNodes
 Fld_2
  Typ_REAL
  Prm_TOLER  Tolerance of coincidence
  Def_0.0001
 Fld_4
  Prm_TLAB   Nodal number ordering
  Typ_LIS_OptionB
  LIS_Low to high     ,LOW
  LIS_High to low     ,HIGH
  LIS_Ordering reverse,REV
 Fld_5
  Prm_KCN    Coordinate system
  Typ_INT
  Def_0
 Fld_6
  Prm_DX     Offset in X-direction
  Typ_REAL
  Def_0.0
 Fld_7
  Prm_DY     Offset in Y-direction
  Typ_REAL
  Def_0.0
 Fld_8
  Prm_DZ     Offset in Z-direction
  Typ_REAL
  Def_0.0
 Fld_9
  Prm_KROT  Node rotations
  Typ_LIS_OptionB
  LIS_Don't rot nodes ,0
  LIS_Rotate nodes ,1
Cal_Fnc_EINTF_2,4,ES,LOW
Cal_Fnc_EINTF_2,4,ES,HIGH
Cal_Fnc_EINTF_3,4,ES,REV
:E END
:! 
:N Fnc_EKILL
:S    266,   149,   110
:T Cmd_P
:C )! Fnc_EKILL
:A    Kill Elements
:D Kill Elements
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_EKILL
Inp_P
Cmd_EKILL
Fld_2
 Prm_[EKILL]  Pick or enter elements to be deactivated (killed)
 Typ_ELEM
 Min_1
 Cnt_s
:E END
:! 
:N Fnc_ELBOW_all
:S    846,   130,   709
:T Command
:C )! Fnc_ELBOW_all
:A On Selected set
:D Create Elbow Release
:H Hlp_C_ELBOW
Inp_NoApply
Cmd_ELBOW
 Fld_0
  Typ_Lab
  Prm_[ELBOW]  Generate elbow releases
 Fld_2
  Prm_Pipe to elbow transitioning
  Typ_Logi,Off,On
  Def_Off
 Fld_0
  Typ_Lab
  Prm_NOTE:  This option converts pipe elements to straight elbows
 Fld_3
  Prm_Angle tolerance (in degrees)
  Typ_Real
  Def_20
 Fld_4
  Prm_Element constraint
  Typ_Lis_OptionB
  LIS_All        ,ALL
  LIS_Ball Joint ,BALL
  Def_ALL
 Fld_5
  Prm_Section constraints, up to 4
  Typ_MLis
  LIS_Entire section  ,SECT
  LIS_Radial expansion,SE
  LIS_Ovalization     ,SO
  LIS_Warping         ,SW
  LIS_t2 Rotation     ,SRA
  LIS_t1 Rotation     ,SRT
  Bnd_0.0,4.0
 Fld_0
  Typ_Lab
  Prm_NOTE:  Internally, this command generates coupling equations
:E END
:! 
:N Fnc_ELBOW_node
:S    561,   131,   423
:T Command
:C )! Fnc_ELBOW_node
:A On Picked Node
:D Create Elbow Release
:H Hlp_C_ELBOW
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)CM,_Y,ELEM
! Exclude_from_paths
Cmd_)CM,_X,NODE
! Exclude_from_paths
Cmd_)NSEL
 Fld_5
  Prm_Pick or enter node where for end release
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_)ESLN,S,0
! Exclude_from_paths
Cmd_)CM,_Y1,ELEM
! Exclude_from_paths
Cmd_)CMSEL,S,_Y
! Exclude_from_paths
Cmd_)CMSEL,S,_X
! Exclude_from_paths
Cmd_)CMDELE,_X
Cmd_)/GO
Cal_Fnc_ELBO_node_2
:E END
:! 
:N Fnc_ELBO_node_2
:S   1014,   139,   868
:T Command
:C )! Fnc_ELBO_node_2
:A Create Elbow Release
:D Create Elbow Release
:H Hlp_C_ELBOW
Inp_NoApply
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)CMSEL,S,_Y1
Cmd_! ELBOW
Cmd_)/GO
Cmd_)ELBOW
 Fld_0
  Typ_Lab
  Prm_[ELBOW]  Generate elbow releases
 Fld_2
  Prm_Pipe to elbow transitioning
  Typ_Logi,Off,On
  Def_Off
 Fld_0
  Typ_Lab
  Prm_NOTE:  This option converts pipe elements to straight elbows
 Fld_3
  Typ_Def_-1
 Fld_4
  Prm_Element constraint
  Typ_Lis_OptionB
  LIS_All        ,ALL
  LIS_Ball Joint ,BALL
  Def_ALL
 Fld_5
  Prm_Section constraints, up to 4
  Typ_MLis
  LIS_Entire section  ,SECT
  LIS_Radial expansion,SE
  LIS_Ovalization     ,SO
  LIS_Warping         ,SW
  LIS_t2 Rotation     ,SRA
  LIS_t1 Rotation     ,SRT
  Bnd_0.0,4.0
 Fld_0
  Typ_Lab
  Prm_NOTE:  Internally, this command generates coupling equations
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)CMSEL,S,_Y
! Exclude_from_paths
Cmd_)CMDELE,_Y
! Exclude_from_paths
Cmd_)CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_ELIST_p_00
:S    252,   136,   109
:T Cmd_P
:C )! Fnc_ELIST_p_00
:A Nodes + Attributes
:D List Elems, Nodes, Atts
:H Hlp_C_ELIST
Inp_P
Cmd_ELIST
 Fld_2
  Prm_[ELIST]  Pick or enter elements to be listed
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ELIST_p_01
:S    276,   141,   128
:T Cmd_P
:C )! Fnc_ELIST_p_01
:A Nodes + Attr + RealConst
:D List Elems Nodes Rcons
:H Hlp_C_ELIST
Inp_P
Cmd_ELIST
 Fld_2
  Prm_[ELIST]  Pick or enter elements to be listed
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
 Fld_6
  Typ_Def_1
:E END
:! 
:N Fnc_ELIST_p_10
:S    293,   139,   147
:T Cmd_P
:C )! Fnc_ELIST_p_10
:A Attributes + RealConst
:D List Elems Attrs Rcons
:H Hlp_C_ELIST
Inp_P
Cmd_ELIST
 Fld_2
  Prm_[ELIST]  Pick or enter elements to be listed
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
 Fld_5
  Typ_Def_1
 Fld_6
  Typ_Def_1
:E END
:! 
:N Fnc_ELIST_p_11
:S    266,   131,   128
:T Cmd_P
:C )! Fnc_ELIST_p_11
:A Attributes Only
:D List Elems Attrs only
:H Hlp_C_ELIST
Inp_P
Cmd_ELIST
 Fld_2
  Prm_[ELIST]  Pick or enter elements to be listed
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
 Fld_5
  Typ_Def_1
:E END
:! 
:N Fnc_ELMORPH
:S    375,   158,   210
:T Cmd_P
:A    Elements
:D Morphing of elements
:C )!Fnc_ELMORPH
:C )/NOPR
:C )/GO
:H Hlp_C_DEMORPH
:K (PREP7+RESULTS)
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
 Fld_5
  Prm_[DEMORPH]  Pick or enter elements for morphing
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/GO
Cal_Fnc_EMORP1
:E END
:! 
:N Fnc_EMAGERR
:S    594,   263,   324
:T Command
:C )! Fnc_EMAGERR
:A    Error Eval
:D Calculate the Relative Error in the Field Solution
:K #(POST1+RESULTS+(MAGNETIC*ELECTRIC))
:K #((thermal+cfd+structrl+edgeflx+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_EMAGERR
Inp_NoApply
Cmd_EMAGERR
 Fld_0
  Typ_Lab
  Prm_[EMAGERR] This function calculates the relative error
 Fld_0
  Typ_Lab
  Prm_          in an electric or magnetic field solution for
 Fld_0
  Typ_Lab
  Prm_          the currently selected elements.  Results are
 Fld_0
  Typ_Lab
  Prm_          stored in the Element Table.   
:E END
:! 
:N Fnc_EMA_HFEL
:S   1662,   194,  1461
:T Command
:C )! Fnc_HFSWEEP
:A    Freq Sweep
:D    Freq Sweep
:K #(PREP7*SOLUTION)
:K ((HARMONIC+EDGEELC*MAGHFE)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_HFSWEEP
Cmd_)/NOPR
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[HFSWEEP]  This function performs a harmonic response - 
 Fld_0
  Typ_Lab
  Prm_                 high frequency sweep.
 Fld_0
  Typ_Sep
Cmd_)*SET,_z1
 Fld_2
  Prm_Freqa   Beginning frequency (Hz)
  Typ_Real
  Def_0
!
Cmd_)*SET,_z2
 Fld_2
  Prm_Freqb   Ending frequency (in Hz)
  Typ_Real
  Def_0
!
Cmd_)*SET,_z3
 Fld_2
  Prm_Freqinc Frequency increment (Hz)
  Typ_Real
  Def_0
!
Cmd_)*SET,_z4
 Fld_2
  Prm_Portin  Input port number
  Typ_Int
  Def_0
!
Cmd_)*SET,_z5
 Fld_2
  Prm_Port2   Output port number
  Typ_Int
  Def_0
!
Cmd_)*SET,_z6
 Fld_2
  Prm_Port3   Output port number
  Typ_Int
  Def_0
!
Cmd_)*SET,_z7
 Fld_2
  Prm_Port4   Output port number
  Typ_Int
  Def_0
!
Cmd_)*SET,_z12
 Fld_2
  Prm_Volt    Imput port voltage
  Typ_Real
  Def_0
!
Cmd_)*SET,_z13
 Fld_2
  Prm_Phase   Voltage phase angle
  Typ_Real
  Def_0
!
Cmd_)*SET,_z8
 Fld_2
  Prm_Pdist   Propagation distance
  Typ_Real
  Def_0
!
Cmd_)*CSET,1,1
 Fld_2
  Prm_Vpath   Voltage path name
  Typ_CHAR
  Def_
!
Cmd_)*CSET,2,2
 Fld_2
  Prm_Ipath   Current path name
  Typ_CHAR
  Def_
!
Cmd_)*SET,_z9
 Fld_2
  Prm_Vsymm   Voltage symmetry factor
  Typ_Real
  Def_1.0
!
Cmd_)*SET,_z10
 Fld_2
  Prm_Isymm   Current symmetry factor
  Typ_Real
  Def_1.0
!
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Note: Graphical results will be saved in file HFSWEEP.GRPH
 Fld_0
  Typ_Lab
  Prm_      and may be viewed with the DISPLAY program.
Cmd_)/GO
Cal_Fnc_HFSWEEP1
:E END
:! 
:N Fnc_EMA_STAN
:S    230,   194,    29
:T Command
:C )! Fnc_EMA_STAN
:A    Opt&Solv
:D    Opt&Solv
:K #(PREP7*SOLUTION)
:K ((STATIC+SCALARP*VECTORP*EDGEFLX+harmonic)*NOFILTER)
:H Hlp_C_MAGSOLV
Inp_P
Cmd_)!
Cal_Fnc_MAGSOLV
:E END
:! 
:N Fnc_EMF
:S    397,   214,   176
:T Command
:C )! Fnc_EMF
:A    EMF
:D Calculate  EMF 
:K ((PR_ELMAG*pr_set)+(lsdyna))
:K #((POST1+RESULTS+ELECTRIC*EDGEELC+vfed+circ+timeintp)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_EMF
Inp_NoApply
Cmd_EMF
 Fld_0
  Typ_Lab
  Prm_[EMF]   This function calculates electromotive force (emf)
 Fld_0
  Typ_Lab
  Prm_         or voltage drop  along a predefined path.
:E END
:! 
:N Fnc_EMFTMAC
:S    257,   239,    11
:T Command
:A    Summarize Force/Torque
:C )! Fnc_EMFTMAC
:C EMFT
:D Summarize Forces & Torques
:K #(POST1+RESULTS+harmonic*ELEM2D)
:K #((ELEM3D+EDGEFLX)*QUASISTA*NOFILTER)
:P (ELECMAG)
:H Hlp_C_EMFT
Cmd_)!    
:E End
:! 
:N Fnc_EMID_add
:S    464,   149,   308
:T Command
:C )! Fnc_EMID_add
:A    Add Mid Nodes
:D Add Midside Nodes to Elements
:K #(PREP7)
:H Hlp_C_EMID
Inp_NoApply
Cmd_EMID
 Fld_0
  Typ_Lab
  Prm_[EMID],ADD  This function adds midside nodes
 Fld_0
  Typ_Lab
  Prm_            to all selected elements.
 FLD_2
  Prm_Selectively add midside nodes
  Typ_Lis_OptionB
  LIS_to all edges    ,ADD,ALL
  LIS_to either edge  ,ADD,EITHER
  LIS_to both edges   ,ADD,BOTH
:E END
:! 
:N Fnc_EMID_remove
:S    498,   160,   331
:T Command
:C )! Fnc_EMID_remove
:A    Remove Mid Nd
:D Remove Midside Nodes from Elements
:K #(PREP7)
:H Hlp_C_EMID
Inp_NoApply
Cmd_EMID
 Fld_0
  Typ_Lab
  Prm_[EMID],REMOVE  This function removes midside nodes
 Fld_0
  Typ_Lab
  Prm_               from all selected elements.
 FLD_2
  Prm_Selectively remove midside nodes
  Typ_Lis_OptionB
  LIS_from all edges  ,REMOVE,ALL
  LIS_from either edge,REMOVE,EITHER
  LIS_from both edges ,REMOVE,BOTH
:E END
:! 
:N Fnc_EMLoad
:S   2017,   569,  1441
:T Command
:C )! Fnc_EMLoad
:C )/NOPR
:C )*SET,_z4
:C )*CSET,1,4
:C )*CSET,101,104
:C )*DEL,_vz
:C )*DIM,_vz,,2
:C )KEYW,chgld,0
:C )KEYW,dnld,0
:C )KEYW,dkld,0
:C )KEYW,dald,0
:C )KEYW,dlld,0
:C )KEYW,ktabf,0
:C )KEYW,ktabt,0
:C )KEYW,ktabn,0
:C )*IF,_z9,EQ,'CHRG',THEN
:C )KEYW,chgld,1
:C )*ENDIF
:C )*IF,_z8,EQ,'D',THEN
:C )KEYW,dnld,1
:C )*ELSEIF,_z8,EQ,'DK',THEN
:C )KEYW,dkld,1
:C )*ELSEIF,_z8,EQ,'DA',THEN
:C )KEYW,dald,1
:C )*ELSEIF,_z8,EQ,'DL',THEN
:C )KEYW,dlld,1
:C )*ENDIF
:C)/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Cmd_)/NOPR
Cmd_)*SET,_vz(1)
 Fld_0
 K_FL((timeintp+HARMONIC)*(TIMEINTP+edgeelc+chgld))
  Typ_Lab
  K_LN((timeintp+HARMONIC)*NOFILTER)
  Prm_        Apply load %_z9% on %_z7% 
  K_LN((ELECTRIC+edgeelc+TIMEINTP+dald+dlld+dnld+dkld))
  Prm_        Apply Impressed Current (AMPS) on %_z7% 
  K_LN(TIMEINTP+edgeelc+(DALD*DLLD*DNLD*DKLD))
  Prm_        Apply Time-Integrated Potential (VOLT) on %_z7% 
 Fld_2
  K_LN(harmonic*CHGLD)
  Prm_[%_z8%] Apply %_z9% on %_z7% as a
  K_LN(HARMONIC+chgld)
  Prm_[%_z8%] Apply Real part of %_z9% as a
  Typ_Lis_OptioB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
  Def_*PAR(_vz(1))
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_If Constant value then:
!
Cmd_)*CSET,101,104
Fld_2
 Typ_REAL
 Def_*CPAR(101)
 K_LN(harmonic)
 Prm_VALUE  Load %_z9% value
 K_LN(HARMONIC+chgld)
 Prm_VALUE  Real part of %_z9%
Fld_0
 K_FL(DKLD)
 Typ_Sep
Fld_3
 K_FL(DKLD)
 Typ_LOGI,No,Yes
 Def_1
 K_LN(DKLD)
 Prm_KEXPND  Expand %_z9% to nodes?
!
Cmd_)*SET,_vz(2)
 K_CM(chgld+HARMONIC)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[%_z8%] Apply Imag part of %_z9% as a
  Typ_Lis_OptioB
  LIS_Constant value,1
  LIS_Existing table,2
  LIS_New table     ,3
  Def_*PAR(_vz(2))
!
Cmd_)*CSET,103,103
 K_CM(chgld+HARMONIC)
Fld_0
 Typ_Sep
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_2
 Typ_REAL
 Def_*CPAR(103)
 Prm_VALUE2 Imag part of %_z9%
!
Cmd_)/GO
  Cal_Fnc_EMLoad2,2,EQ,1,2
  Cal_Fnc_EMLoad4,2,EQ,2,2
  Cal_Fnc_EMLoad6,2,EQ,3,2
:E END
:! 
:N Fnc_EMLoad2
:S    221,    85,   129
:T Command
:C )/NOPR
:C )keyw,ktabf,0
:C )/GO
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*Par(_vz(2))
!
  Cal_Fnc_EMLoad50,2,LE,1,1
  Cal_Fnc_EMLoad42,2,EQ,2,1
  Cal_Fnc_EMLoad62,2,EQ,3,1
:E END
:! 
:N Fnc_EMLoad4
:S    391,   142,   242
:T Command
:C )! Fnc_EMLoad4
:C )/NOPR
:C )keyw,ktabf,1
:C )/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Cmd_)!
 Fld_2
  Typ_Def_*Par(_vz(2))
Cmd_)/NOPR
Cmd_)*CSET,1,1
Fld_0
  Prm_Apply Table Loads
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
!
Cmd_)/GO
  Cal_Fnc_EMLoad50,2,LE,1,1
  Cal_Fnc_EMLoad42,2,EQ,2,1
  Cal_Fnc_EMLoad62,2,EQ,3,1
:E END
:! 
:N Fnc_EMLoad42
:S    262,   125,   130
:T Command
:C )/NOPR
:C )keyw,ktabt,1
:C )/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Cmd_)*CSET,2,2
Fld_0
  Prm_Imag part of %_z9% table
Fld_2
  Prm_Existing table
  Typ_LIS
  LIS_*READ,PATB
Cmd_)!
Cal_Fnc_EMLoad50
:E END
:! 
:N Fnc_EMLoad50
:S   1939,    70,  1862
:T Command
:C )! Fnc_EMLoad50
Inp_P
Cmd_)!
K_CM(dlld+ktabf+ktabt)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_4
  Typ_DEF_*CPAR(101)
 Fld_5
 K_FL(HARMONIC)
  Typ_DEF_*CPAR(103)
 Fld_6
 K_FL(DKLD)
  Typ_DEF_*CPAR(102)
Cmd_)!
!
K_CM(DLLD+ktabf+ktabt)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Typ_DEF_*CPAR(101)
 Fld_6
 K_FL(HARMONIC)
  Typ_DEF_*CPAR(103)
!
Cmd_)!
K_CM(dlld+KTABF+ktabt)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_7
 K_FL(HARMONIC)
  Typ_DEF_*CPAR(103)
 Fld_8
 K_FL(DKLD)
  Typ_DEF_*CPAR(102)
!
Cmd_)!
K_CM(DLLD+KTABF+ktabt)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_7
  Typ_Lab
 Fld_8
 K_FL(HARMONIC)
  Typ_DEF_*CPAR(103)
!
Cmd_)!
K_CM(dlld+ktabf+KTABT)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_4
  Typ_DEF_*CPAR(101)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(2)
  Dlm_%
 Fld_7
  Typ_Lab
 Fld_8
 K_FL(DKLD)
  Typ_DEF_*CPAR(102)
!
Cmd_)!
K_CM(DLLD+ktabf+KTABT)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Typ_DEF_*CPAR(101)
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(2)
  Dlm_%
 Fld_8
  Typ_Lab
!
Cmd_)!
K_CM(dlld+KTABF+KTABT)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_3
  Typ_DEF_*STR(%_z9%)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_7
  Dlm_%
 Fld_8
  Typ_Def_*CPAR(2)
  Dlm_%
 Fld_9
  Typ_Lab
 Fld_10
 K_FL(DKLD)
  Typ_DEF_*CPAR(102)
!
Cmd_)!
K_CM(DLLD+KTABF+KTABT)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF_P51X
 Fld_4
  Typ_DEF_*STR(%_z9%)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(1)
  Dlm_%
 Fld_7
  Typ_Lab
 Fld_8
  Dlm_%
 Fld_9
  Typ_Def_*CPAR(2)
  Dlm_%
 Fld_10
  Typ_Lab
:E END
:! 
:N Fnc_EMLoad6
:S    308,   159,   142
:T Command
:C )! Fnc_EMLoad6
:C )/NOPR
:C )keyw,ktabf,1
:C )keyw,ktabn,1
:C )/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,1
Fld_0
  Prm_Apply Table Loads
Fld_2
  Prm_Name of new table
  Typ_Char,32,32
!
Cmd_)/GO
Cal_Fnc_EMLoad7
:E END
:! 
:N Fnc_EMLoad62
:S    442,   125,   310
:T Command
:C )/NOPR
:C )keyw,ktabt,1
:C )/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,2,2
Fld_0
  Prm_Imag part of %_z9% table
Fld_2
  Prm_Name of new table
  Typ_Char,32,32
Fld_0
K_FL(KTABN)
  Prm_Note: Before closing this box
Fld_0
K_FL(KTABN)
  Prm_      - edit previous table
Fld_0
K_FL(KTABN)
  Prm_      and close it's widget !
!
Cmd_)/GO
Cal_Fnc_EMLoad72
:E END
:! 
:N Fnc_EMLoad7
:S    710,    86,   617
:T Command
:D Add New Table Load
:H Hlp_C_*DIM
! Exclude_from_paths
Cmd_*DIM
 Fld_0
  Typ_Lab
  Prm_[*DIM] Add New Table
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_TABLE
 Fld_4
Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
Prm_NameI   Variable for rows
  Typ_Char,8
 Fld_8
Prm_NameJ   Variable for cols
  Typ_Char,8
 Fld_9
Prm_NameK   Variable for planes
  Typ_Char,8
 Fld_10
Prm_CSYSID  Coordinate System Id
  Typ_LIS_OptionB
  LIS_*READ,CSYS
!
Cmd_)!
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Options for new table parameter
   Typ_Lis_RadioB
     Lis_Edit on screen,1
     Lis_Read from file,2
!
  Cal_Fnc_EMLoad8,2,EQ,1,2
  Cal_Fnc_EMLoad9,2,EQ,2,2
:E END
:! 
:N Fnc_EMLoad72
:S    727,   101,   619
:T Command
:K (HARMONIC)
:D Add New Table Load
:H Hlp_C_*DIM
! Exclude_from_paths
Cmd_*DIM
 Fld_0
  Typ_Lab
  Prm_[*DIM] Add New Table
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_3
 Typ_Def_TABLE
 Fld_4
Prm_I,J,K   No. of rows,cols,planes
  Typ_INT3
  Def_2,1,1
 Fld_7
Prm_NameI   Variable for rows
  Typ_Char,8
 Fld_8
Prm_NameJ   Variable for cols
  Typ_Char,8
 Fld_9
Prm_NameK   Variable for planes
  Typ_Char,8
 Fld_10
Prm_CSYSID  Coordinate System Id
  Typ_LIS_OptionB
  LIS_*READ,CSYS
!
Cmd_)!
  Fld_0
   Typ_Sep
  Fld_2
   Prm_Options for new table parameter
   Typ_Lis_RadioB
     Lis_Edit on screen,1
     Lis_Read from file,2
!
  Cal_Fnc_EMLoad82,2,EQ,1,2
  Cal_Fnc_EMLoad92,2,EQ,2,2
:E END
:! 
:N Fnc_EMLoad8
:S    354,    88,   259
:T Command
:D Add New Table Load
:H Hlp_C_*VEDIT
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*Par(_vz(2))
!
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(1)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
!
Cmd_)!
  Cal_Fnc_EMLoad50,2,LE,1,1
  Cal_Fnc_EMLoad42,2,EQ,2,1
  Cal_Fnc_EMLoad62,2,EQ,3,1
:E END
:! 
:N Fnc_EMLoad82
:S    247,    89,   151
:T Command
:D Add New Table Load
:H Hlp_C_*VEDIT
Inp_P
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(2)
  Dlm_(
  Fld_3
  Typ_Def_0
  Dlm_,
  Fld_4
  Typ_Def_0
  Dlm_)
  Fld_5
  Typ_Lab
Cmd_)!
Cal_Fnc_EMLoad50
:E END
:! 
:N Fnc_EMLoad9
:S    293,    84,   202
:T Command
:D Read from file
:H Hlp_C_*TREAD
Inp_NoApply
Cmd_)/GO
! Exclude_from_paths
Cmd_*TREAD
  Fld_2
  Typ_Def_*CPAR(1)
  Fld_3
  Prm_File,ext,dir Read from file
  Typ_File
  Fld_6
  Prm_Nskip  Skipped lines number 
  Typ_Int
Cal_Fnc_EMLoad8
:E END
:! 
:N Fnc_EMLoad92
:S    292,    85,   200
:T Command
:D Read from file
:H Hlp_C_*TREAD
Inp_NoApply
Cmd_)/GO
! Exclude_from_paths
Cmd_*TREAD
  Fld_2
  Typ_Def_*CPAR(2)
  Fld_3
  Prm_File,ext,dir  File to read
  Typ_File
  Fld_6
  Prm_Nskip Skipped lines number
  Typ_Int
Cal_Fnc_EMLoad82
:E END
:! 
:N Fnc_EMODIF_attr
:S    334,   189,   138
:T Cmd_P
:C )! Fnc_EMODIF_attr
:C )! Elements for EMODIF command below
:A    Modify Attrib
:D Modify Elem Attributes 
:K #(PREP7)
:H Hlp_C_EMODIF
Inp_P
Cmd_)!
  Fld_2
Prm_[EMODIF]  Pick or enter elements to be modified 
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_EMODIF_attr2
:E END
:! 
:N Fnc_EMODIF_attr2
:S    604,   151,   446
:T Command
:C )! Fnc_EMODIF_attr2
:D Modify Elem Attributes
:B Fnc_EMODIF_attr
:K #(PREP7)
:H Hlp_C_EMODIF
Cmd_EMODIF
 Fld_0
  Typ_Lab
  Prm_[EMODIF]  Modify Element Attributes
 Fld_2
  Typ_Def_P51X
 Fld_3
  Prm_STLOC  Attribute to change
  Typ_LIS_OptionB
   LIS_All to current  ,0
   LIS_Elem type   TYPE,TYPE
   LIS_Material     MAT,MAT 
   LIS_Real const  REAL,REAL
   LIS_Section Num  SEC,SEC
   LIS_Elem coord  ESYS,ESYS
 Fld_4
  Prm_I1     New attribute number
  Typ_INT
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_       (not used with 'All to current')
:E END
:! 
:N Fnc_EMODIF_node
:S    329,   185,   137
:T Cmd_P
:C )! Fnc_EMODIF_node
:C )! Elements for EMODIF command below
:A    Modify Nodes
:D Modify Node Numbers 
:K #(PREP7)
:H Hlp_C_EMODIF
Inp_P
Cmd_)!
  Fld_2
Prm_[EMODIF]  Pick or enter elements to be modified
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_EMODIF_node2
:E END
:! 
:N Fnc_EMODIF_node2
:S    843,   148,   688
:T Command
:C )! Fnc_EMODIF_node2
:D Modify Node Numbers
:B Fnc_EMODIF_node
:K #(PREP7)
:H Hlp_C_EMODIF
Cmd_EMODIF
 Fld_0
  Typ_Lab
  Prm_[EMODIF]  Modify Element Node Numbers
 Fld_2
  Typ_Def_P51X
 Fld_3
  Prm_STLOC  Starting location N
  Typ_INT
 Fld_4
  Prm_I1    New node number at loc N
  Typ_INT
  Def_Blank
 Fld_5
  Prm_I2    New node number at loc N+1
  Typ_INT
  Def_Blank
 Fld_6
  Prm_I3    New node number at loc N+2
  Typ_INT
  Def_Blank
 Fld_7
  Prm_I4    New node number at loc N+3
  Typ_INT
  Def_Blank
 Fld_8
  Prm_I5    New node number at loc N+4
  Typ_INT
  Def_Blank
 Fld_9
  Prm_I6    New node number at loc N+5
  Typ_INT
  Def_Blank
 Fld_10
  Prm_I7    New node number at loc N+6
  Typ_INT
  Def_Blank
 Fld_11
  Prm_I8    New node number at loc N+7
  Typ_INT
  Def_Blank
:E END
:! 
:N Fnc_EMORP1
:S    481,    99,   375
:T Cmd
:D Morphing elements
:C )!Fnc_EMORP1
:H Hlp_C_DEMORPH
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_0
Typ_Lab
Prm_[DEMORPH] Morph mesh attached to elements
 Fld_2
  Prm_RMSHKY Remesh option key
  Typ_Lis_OptionB
  Lis_Morph or Remesh,0
  Lis_Remesh only    ,1
  Lis_Morph only     ,2
  Def_0
Cmd_)*SET,_z2
 Fld_0
  Typ_Sep
 Fld_2
  Prm_DIMN  Model dimensionality
  Typ_Lis_RadioB
  Lis_2D,2
  Lis_3D,3
  Def_2
Cmd_)/GO
Cal_Fnc_EMORP2
:E END
:! 
:N Fnc_EMORP2
:S    230,    62,   161
:T Cmd
:C )! Fnc_EMORP2
Inp_P
Cmd_)/NOPR
Cmd_DEMORPH
 Fld_3
 Typ_Def_*PAR(_z2)
 Fld_4
 Typ_Def_*PAR(_z1)
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
:E END
:! 
:N Fnc_EMSYM
:S    443,   198,   238
:T Command
:C )! Fnc_EMSYM
:A    Copy Sources
:D Copy Current Sources around Circumference
:K #((PREP7*SOLUTION)+(SCALARP*NOFILTER))
:P (ELECMAG)
:H Hlp_C_EMSYM
Inp_NoApply
Cmd_EMSYM
 Fld_0
  Typ_Lab
  Prm_[EMSYM]  Copy Current Sources around Circumference
 Fld_2
  Prm_NSECT  Number of sectors -
  Typ_INT
  Def_*GET(common,,soptcm,,int,52)
 Fld_0
  Typ_Lab
  Prm_       - around the circumference
:E END
:! 
:N Fnc_EMTGEN
:S   1303,   164,  1132
:T Cmd
:C )! Fnc_EMTGEN
:A   Node to Plane
:D EMTGEN macro to create TRANS126 elements
:K #(edgeelc*NOFILTER)
:H Hlp_C_EMTGEN
Cmd_)/NOPR
 Fld_0
  Typ_Lab
  Prm_[EMTGEN]   Create TRANS126 elements: Node to Plane
Cmd_)*CSET,1,1
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_   Component of nodes attaching to TRANS126 elements
 Fld_2
  Prm_Ncomp    Node component name
  Typ_Lis_OptionB
    Lis_*READ,CM
    Def_*STR('    ')
Cmd_)*CSET,2,2
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Ecomp   Transducer element comp
  Typ_Char
  Def_EMTELM
Cmd_)*CSET,3,3
 Fld_0
  Typ_Sep
 Fld_2
  Prm_PNcomp     Plane node component 
  Typ_Char
  Def_EMTPNO
Cmd_)*CSET,4,4
 Fld_0
  Typ_Sep
 Fld_2
  Prm_DOF   Transducer structural DOF
  Typ_Lis_OptionB
    Lis_UX,UX
    Lis_UY,UY
    Lis_UZ,UZ
    Def_UX
Cmd_)*SET,_z1
 Fld_0
  Typ_Sep
 Fld_2
  Prm_GAP   Initial gap dist. to plane
  Typ_Real
  Def_1
 Fld_0
  Typ_Lab
  Prm_Note: Use correct sign w/r to Ncomp node locations
Cmd_)*SET,_z2
 Fld_0
  Typ_Sep
 Fld_2
  Prm_GAPMIN    Minimal gap distance
  Typ_Real
  Def_0
Cmd_)*SET,_z3
 Fld_0
  Typ_Sep
 Fld_2
  Prm_FKN     Contact stiffness factor
  Typ_Real
  Def_0.1
Cmd_)*SET,_z4
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Per0    Free-space permittivity
  Typ_Real
  Def_8.854e-6
Cmd_)/GO
Cal_Fnc_EMTGEN_0
:E End
:! 
:N Fnc_EMTGEN_0
:S    877,   225,   645
:T Cmd
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,4,1,1
:C )*DEL,_zca1
:C )*DIM,_zca1,CHAR,4,1,1
:C )*DEL,_zca2
:C )*DIM,_zca2,CHAR,4,1,1
:C )*DEL,_zca3
:C )*DIM,_zca3,CHAR,4,1,1
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)~eui
 Fld_2
  Typ_Def_'::euidl::passStringToAnsys 
  Dlm_  
 Fld_3
  Dlm_" 
 Fld_4
  Typ_Def_*CPAR(1)
  Dlm_"
 Fld_5
  Dlm_  
 Fld_6
  Typ_Def_ _zca1 32 1 1 1 1 0 0 1'
Cmd_)~eui
 Fld_2
  Typ_Def_'::euidl::passStringToAnsys 
  Dlm_  
 Fld_3
  Dlm_" 
 Fld_4
  Typ_Def_*CPAR(2)
  Dlm_"
 Fld_5
  Dlm_  
 Fld_6
  Typ_Def_ _zca2 32 1 1 1 1 0 0 1'
Cmd_)~eui
 Fld_2
  Typ_Def_'::euidl::passStringToAnsys 
  Dlm_  
 Fld_3
  Dlm_" 
 Fld_4
  Typ_Def_*CPAR(3)
  Dlm_"
 Fld_5
  Dlm_  
 Fld_6
  Typ_Def_ _zca3 32 1 1 1 1 0 0 1'
Cmd_)*SET,_zc(4)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(4)
  Dlm_'
 Fld_4
  Typ_Lab
Cmd_)/GO
Cal_Fnc_EMTGEN_1
:E End
:! 
:N Fnc_EMTGEN_1
:S    585,   161,   417
:T Command
:C )/NOPR
:C )keyw,nondef,0
:C )*if,_zca1(1),eq,' ',then
:C )keyw,nondef,1
:C )*endif
:C )/GO
:H Hlp_C_EMTGEN
Inp_P
Cmd_EMTGEN
 Fld_2
  K_FL(nondef)
  Typ_Def_*STR('%_zca1(1)%%_zca1(2)%%_zca1(3)%%_zca1(4)%')
 Fld_2
  K_FL(NONDEF)
  Typ_Def_*STR('    ')
 Fld_3
  Typ_Def_*STR('%_zca2(1)%%_zca2(2)%%_zca2(3)%%_zca2(4)%')
 Fld_4
  Typ_Def_*STR('%_zca3(1)%%_zca3(2)%%_zca3(3)%%_zca3(4)%')
 Fld_5
  Typ_Def_*STR('%_zc(4)%')
 Fld_6
  Typ_Def_*PAR(_z1)
 Fld_7
  Typ_Def_*PAR(_z2)
 Fld_8
  Typ_Def_*PAR(_z3)
 Fld_9
  Typ_Def_*PAR(_z4)
:E END
:! 
:N Fnc_EMT_RC0
:S    732,   149,   576
:T Cmd
:C )! Fnc_EMT_RC0
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_z(5)% for TRANS126
:H Hlp_E_S4.126
Cmd_RMORE
Fld_0
Typ_Lab
Prm_Capacitance(Cap) vs. gap(x) function:
Fld_0
Typ_Lab
Prm_Cap = C0/x + C1 + C2*x + C3*x**2 + C4*x**3
 Fld_2
  Prm_Eqn constant C0      C0     
  Typ_Real
  Def_*GET(rcon,_z(5),const,7)
 Fld_3
  Prm_Eqn constant C1      C1     
  Typ_Real
  Def_*GET(rcon,_z(5),const,8)
 Fld_4
  Prm_Eqn constant C2      C2     
  Typ_Real
  Def_*GET(rcon,_z(5),const,9)
 Fld_5
  Prm_Eqn constant C3      C3     
  Typ_Real
  Def_*GET(rcon,_z(5),const,10)
 Fld_6
  Prm_Eqn constant C4      C4     
  Typ_Real
  Def_*GET(rcon,_z(5),const,11)
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E End
:! 
:N Fnc_EMT_RC1
:S   2598,   149,  2442
:T Cmd
:C )! Fnc_EMT_RC1
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_z(5)% for TRANS126
:H Hlp_E_S4.126
Cmd_RMORE
Fld_0
Typ_Lab
Prm_Capacitance-gap  curve data           GAP       CAPACITANCE
Fld_2
Prm_                    Data set 1
Typ_Real2
Def_*GET(rcon,_z(5),const,7),*GET(rcon,_z(5),const,8)
Fld_4
Prm_                    Data set 2
Typ_Real2
Def_*GET(rcon,_z(5),const,9),*GET(rcon,_z(5),const,10)
Fld_6
Prm_                    Data set 3
Typ_Real2
Def_*GET(rcon,_z(5),const,11),*GET(rcon,_z(5),const,12)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 4
Typ_Real2
Def_*GET(rcon,_z(5),const,13),*GET(rcon,_z(5),const,14)
Fld_4
Prm_                    Data set 5
Typ_Real2
Def_*GET(rcon,_z(5),const,15),*GET(rcon,_z(5),const,16)
Fld_6
Prm_                    Data set 6
Typ_Real2
Def_*GET(rcon,_z(5),const,17),*GET(rcon,_z(5),const,18)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 7
Typ_Real2
Def_*GET(rcon,_z(5),const,19),*GET(rcon,_z(5),const,20)
Fld_4
Prm_                    Data set 8
Typ_Real2
Def_*GET(rcon,_z(5),const,21),*GET(rcon,_z(5),const,22)
Fld_6
Prm_                    Data set 9
Typ_Real2
Def_*GET(rcon,_z(5),const,23),*GET(rcon,_z(5),const,24)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 10
Typ_Real2
Def_*GET(rcon,_z(5),const,25),*GET(rcon,_z(5),const,26)
Fld_4
Prm_                    Data set 11
Typ_Real2
Def_*GET(rcon,_z(5),const,27),*GET(rcon,_z(5),const,28)
Fld_6
Prm_                    Data set 12
Typ_Real2
Def_*GET(rcon,_z(5),const,29),*GET(rcon,_z(5),const,30)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 13
Typ_Real2
Def_*GET(rcon,_z(5),const,31),*GET(rcon,_z(5),const,32)
Fld_4
Prm_                    Data set 14
Typ_Real2
Def_*GET(rcon,_z(5),const,33),*GET(rcon,_z(5),const,34)
Fld_6
Prm_                    Data set 15
Typ_Real2
Def_*GET(rcon,_z(5),const,35),*GET(rcon,_z(5),const,36)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 16
Typ_Real2
Def_*GET(rcon,_z(5),const,37),*GET(rcon,_z(5),const,38)
Fld_4
Prm_                    Data set 17
Typ_Real2
Def_*GET(rcon,_z(5),const,39),*GET(rcon,_z(5),const,40)
Fld_6
Prm_                    Data set 18
Typ_Real2
Def_*GET(rcon,_z(5),const,41),*GET(rcon,_z(5),const,42)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 19
Typ_Real2
Def_*GET(rcon,_z(5),const,43),*GET(rcon,_z(5),const,44)
Fld_4
Prm_                    Data set 20
Typ_Real2
Def_*GET(rcon,_z(5),const,45),*GET(rcon,_z(5),const,46)
!
Cal_Fnc_MeCirBD_1
:E End
:! 
:N Fnc_EMUNIT
:S    684,   453,   224
:T Command
:C )! Fnc_EMUNIT
:A Electromag Units
:D Electromagnetic Units
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,3
:C )*set,_zc(1),'MKS','MUZRO','EPZRO'
:C )*GET,_z2,common,,soptcm,,int,51   ! Electromagnetic units 
:C )*GET,_z7,common,,soptcm,,real,7   ! Permeability
:C )*GET,_z8,common,,soptcm,,real,8   ! Permitivitty
:C )*IF,_z2,eq,0,then
:C )_z2=1
:C )*ENDIF
:C )/go
:K (lsdyna)
:P (ELECMAG)
:H Hlp_C_EMUNIT
Inp_NoApply
Cmd_)/nopr
Cmd_)*set,_z1
 Fld_2
  Prm_[EMUNIT]  Electromagnetic units
  Typ_LIS_RADIOB
  LIS_MKS system      ,1
  LIS_User-defined    ,2
  Def_*PAR(_z2)
Cmd_)/go
Cal_Fnc_EMUNIT2,2,eq,2,2
Cal_Fnc_EMUNIT3,2,ne,2,2
:E END
:! 
:N Fnc_EMUNIT2
:S    422,   122,   293
:T Command
:C )! Fnc_EMUNIT2
:D Electromagnetic Units
:P (ELECMAG)
:H Hlp_C_EMUNIT
Inp_NoApply
Cmd_)/nopr
Cmd_)*SET,_z3
 Fld_0
  Typ_Lab
  Prm_[EMUNIT]  For user-defined units,
 Fld_2
 K_FL(pmethod)
  Prm_Specify free-space permeability
  Typ_REAL
  Def_*PAR(_z7)
Cmd_)*SET,_z4
 Fld_2
  Prm_Specify free-space permittivity
  Typ_REAL
  Def_*PAR(_z8)
Cmd_)/go
Cal_Fnc_EMUNIT21
:E END
:! 
:N Fnc_EMUNIT21
:S    287,   124,   156
:T Command
:C )! Fnc_EMUNIT21
:D Electromagnetic Units
:P (ELECMAG)
:H Hlp_C_EMUNIT
Inp_P
Cmd_EMUNIT
K_CM(pmethod)
 Fld_2
  Typ_Def_*PAR(_zc(2))
 Fld_3
  Typ_Def_*Par(_z3)
Cmd_EMUNIT
 Fld_2
  Typ_Def_*PAR(_zc(3))
 Fld_3
  Typ_Def_*Par(_z4)
:E END
:! 
:N Fnc_EMUNIT3
:S    178,   122,    49
:T Command
:C )! Fnc_EMUNIT3
:D Electromagnetic Units
:P (ELECMAG)
:H Hlp_C_EMUNIT
Inp_P
Cmd_EMUNIT
 Fld_2
  Typ_Def_*PAR(_zc(_z1))
:E END
:! 
:N Fnc_EM_BFADELE_temp
:S    387,   244,   136
:T Cmd_P
:C )! Fnc_BFADELE_temp
:A On Areas
:D Delete TEMP on Areas
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFADELE
Inp_P
Cmd_BFADELE
Fld_2
 Prm_[BFADELE]  Pick or enter areas for temperature deletion
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_EM_BFA_temp
:S    378,   231,   140
:T Cmd_P
:C )! Fnc_BFA_temp
:A On Areas
:D Apply TEMP on Areas
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFA
Inp_P
Cmd_)!
Fld_2
 Prm_[BFA]  Pick or enter areas for temperature specification
 Typ_AREA
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_EM_BFA_temp2
:E END
:! 
:N Fnc_EM_BFA_temp2
:S    267,   127,   133
:T Command
:C )! Fnc_BFA_temp2
:D Apply TEMP on Areas
:B Fnc_BFA_temp
:H Hlp_C_BFA
Cmd_BFA,P51X
Fld_0
 Typ_LAB
 Prm_[BFA]  Apply Temperature (TEMP) on Areas
Fld_2
 Typ_DEF_TEMP
Fld_3
 Typ_REAL
 Prm_VAL1  Temperature
:E END
:! 
:N Fnc_EM_BFDELE_temp
:S    382,   241,   134
:T Cmd_P
:C )! Fnc_BFDELE_temp
:A On Nodes
:D Delete TEMP on Nodes
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFDELE
Inp_P
Cmd_BFDELE
Fld_2
 Prm_[BFDELE]  Pick or enter nodes for temperature deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_EM_BFEDELE_temp
:S    393,   247,   139
:T Cmd_P
:C )! Fnc_BFEDELE_temp
:A On Elements
:D Delete TEMP on Elems
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFEDELE
Inp_P
Cmd_BFEDELE
Fld_2
 Prm_[BFEDELE]  Pick or enter elements for temperature deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_EM_BFE_temp
:S    422,   271,   144
:T Cmd_P
:C )! Fnc_BFE_temp
:C )! Elements for BFE command below
:A On Elements
:D Apply TEMP on Elems
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFE
Inp_P
Cmd_)!
Fld_2
 Prm_[BFE]  Pick or enter elements for temperature specification
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_EM_BFE_temp2
:E END
:! 
:N Fnc_EM_BFE_temp2
:S    548,   127,   414
:T Command
:C )! Fnc_BFE_temp2
:D Apply TEMP on Elems
:B Fnc_BFE_temp
:H Hlp_C_BFE
Cmd_BFE,P51X
Fld_0
 Typ_LAB
 Prm_[BFE]  Apply Structural Temperatures (TEMP) on Elements
Fld_2
 Typ_DEF_TEMP
Fld_3
 Prm_STLOC  Starting location N
 Typ_INT
 DEF_1
Fld_4
 Prm_VAL1   Temperature at location N
 Typ_REAL
 DEF_Blank
Fld_5
 Prm_VAL2   Temperature at loc N+1
 Typ_REAL
 DEF_Blank
Fld_6
 Prm_VAL3   Temperature at loc N+2
 Typ_REAL
 DEF_Blank
Fld_7
 Prm_VAL4   Temperature at loc N+3
 Typ_REAL
 DEF_Blank
:E END
:! 
:N Fnc_EM_BFKDELE_temp
:S    393,   246,   140
:T Cmd_P
:C )! Fnc_BFKDELE_temp
:A On Keypoints
:D Delete TEMP on KPs
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFKDELE
Inp_P
Cmd_BFKDELE
Fld_2
 Prm_[BFKDELE]  Pick or enter keypoints for temperature deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_EM_BFK_temp
:S    423,   271,   145
:T Cmd_P
:C )! Fnc_BFK_temp
:C )! Keypoints for BFK command below
:A On Keypoints
:D Apply TEMP on KPs
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFK
Inp_P
Cmd_)!
Fld_2
 Prm_[BFK]  Pick or enter keypoints for temperature specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_EM_BFK_temp2
:E END
:! 
:N Fnc_EM_BFK_temp2
:S    287,   125,   155
:T Command
:C )! Fnc_BFK_temp2
:D Apply TEMP on KPs
:B Fnc_BFK_temp
:H Hlp_C_BFK
Cmd_BFK,P51X
Fld_0
 Typ_LAB
 Prm_[BFK]  Apply Structural Temperatures (TEMP) on Keypoints
Fld_2
 Typ_DEF_TEMP
Fld_3
 Typ_REAL
 Prm_VAL1  Temperature value
:E END
:! 
:N Fnc_EM_BFLDELE_temp
:S    387,   244,   136
:T Cmd_P
:C )! Fnc_BFLDELE_temp
:A On Lines
:D Delete TEMP on Lines
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFLDELE
Inp_P
Cmd_BFLDELE
Fld_2
 Prm_[BFLDELE]  Pick or enter lines for temperature deletion
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_EM_BFL_temp
:S    378,   231,   140
:T Cmd_P
:C )! Fnc_BFL_temp
:A On Lines
:D Apply TEMP on Lines
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFL
Inp_P
Cmd_)!
Fld_2
 Prm_[BFL]  Pick or enter lines for temperature specification
 Typ_LINE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_EM_BFL_temp2
:E END
:! 
:N Fnc_EM_BFL_temp2
:S    267,   127,   133
:T Command
:C )! Fnc_BFL_temp2
:D Apply TEMP on Lines
:B Fnc_BFL_temp
:H Hlp_C_BFL
Cmd_BFL,P51X
Fld_0
 Typ_LAB
 Prm_[BFL]  Apply Temperature (TEMP) on Lines
Fld_2
 Typ_DEF_TEMP
Fld_3
 Typ_REAL
 Prm_VAL1  Temperature
:E END
:! 
:N Fnc_EM_BFVDELE_temp
:S    393,   248,   138
:T Cmd_P
:C )! Fnc_BFVDELE_temp
:A On Volumes
:D Delete TEMP on Volumes
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFVDELE
Inp_P
Cmd_BFVDELE
Fld_2
 Prm_[BFVDELE]  Pick or enter volumes for temperature deletion
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_TEMP
:E END
:! 
:N Fnc_EM_BFV_temp
:S    384,   235,   142
:T Cmd_P
:C )! Fnc_BFV_temp
:A On Volumes
:D Apply TEMP on Volumes
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BFV
Inp_P
Cmd_)!
Fld_2
 Prm_[BFV]  Pick or enter volumes for temperature specification
 Typ_VOLU
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_EM_BFV_temp2
:E END
:! 
:N Fnc_EM_BFV_temp2
:S    271,   129,   135
:T Command
:C )! Fnc_BFV_temp2
:D Apply TEMP on Volumes
:B Fnc_BFV_temp
:H Hlp_C_BFV
Cmd_BFV,P51X
Fld_0
 Typ_LAB
 Prm_[BFV]  Apply Temperature (TEMP) on Volumes
Fld_2
 Typ_DEF_TEMP
Fld_3
 Typ_REAL
 Prm_VAL1  Temperature
:E END
:! 
:N Fnc_EM_BF_temp
:S    407,   261,   139
:T Cmd_P
:C )! Fnc_BF_temp
:C )! Nodes for BF command below
:A On Nodes
:D Apply TEMP on Nodes
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_BF
Inp_P
Cmd_)!
Fld_2
 Prm_[BF]  Pick or enter nodes for temperature specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_EM_BF_temp2
:E END
:! 
:N Fnc_EM_BF_temp2
:S    279,   123,   149
:T Command
:C )! Fnc_BF_temp2
:D Apply TEMP on Nodes
:B Fnc_BF_temp
:H Hlp_C_BF
Cmd_BF,P51X
Fld_0
 Typ_LAB
 Prm_[BF]  Apply Structural Temperatures (TEMP) on Nodes
Fld_2
 Typ_DEF_TEMP
Fld_3
 Typ_REAL
 Prm_VAL1  Temperature value
:E END
:! 
:N Fnc_EM_LDREAD_temp
:S    732,   298,   427
:T Command
:C )! Fnc_LDREAD_temp
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A From Therm Analy
:D Apply TEMP from Thermal Analysis
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:P (LINPLUS*ELECMAG)
:H Hlp_C_LDREAD
Cmd_LDREAD,TEMP
 Fld_0
  Typ_Lab
  Prm_[LDREAD],TEMP  Apply Temperature from Thermal Analysis
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_EM_TUNIF
:S    336,   224,   105
:T Command
:C )! Fnc_TUNIF
:A Uniform Temp
:D Uniform Temperature
:K (lsdyna)
:K #(PREP7*SOLUTION)
:K ((ELECTRIC+ELECSTAT*EDGEELC*QUASISTA)*(MAGNETIC+thermal)*NOFILTER)
:H Hlp_C_TUNIF
Inp_NoApply
Cmd_TUNIF
Fld_2
 Prm_[TUNIF]  Uniform temperature
 Typ_REAL
 Def_*GET(common,,bfcom,,real,1)
:E END
:! 
:N Fnc_EN
:S    285,   165,   113
:T Command
:C )! Fnc_EN
:C )/NOPR
:C )_Z1=ELMIQR(0,14)+1
:C )/GO
:A    Thru Nodes
:D Create Elems User-Num
:K #(PREP7)
:H Hlp_C_EN
Cmd_)/NOPR
Cmd_)*SET,_Z2
 Fld_2
  Prm_Number to assign to element
  Typ_INT
  Def_*PAR(_Z1)
Cmd_)/GO
Cal_Fnc_EN2
:E End
:! 
:N Fnc_EN2
:S    269,   123,   139
:T Cmd_P
:C )! Fnc_EN
:A    Thru Nodes
:D Create Elems User-Num
:K #(PREP7)
:H Hlp_C_EN
Inp_P
Cmd_EN
 Fld_2
  Typ_Def_*PAR(_Z2)
 Fld_3
  Prm_[EN]  Pick or enter nodes defining the element
  Typ_NODE
   Min_1
   Cnt_20
   Pdp_1
:E End
:! 
:N Fnc_ENDR_all
:S    486,   131,   348
:T Command
:C )! Fnc_ENDR_all
:A On Selected set
:D Create End Release
:H Hlp_C_ENDRELEASE
Inp_NoApply
Cmd_ENDRELEASE
 Fld_0
  Typ_Lab
  Prm_[ENDRELEASE]  Generate end releases
 Fld_3
  Prm_Angle tolerance (in degrees)
  Typ_Real
  Def_20
 Fld_4
  Prm_Released DOF's, up to 4
  Typ_MLis
  LIS_Ball Joint (ignore others),BALL
  LIS_*READ,DOF
  Bnd_0.0,4.0
 Fld_0
  Typ_Lab
  Prm_NOTE:  Internally, this command generates coupling equations
:E END
:! 
:N Fnc_ENDR_node
:S    562,   132,   423
:T Command
:C )! Fnc_ENDR_node
:A On Picked Node
:D Create End Release
:H Hlp_C_ENDRELEASE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)CM,_Y,ELEM
! Exclude_from_paths
Cmd_)CM,_X,NODE
! Exclude_from_paths
Cmd_)NSEL
 Fld_5
  Prm_Pick or enter node where for end release
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_)ESLN,S,0
! Exclude_from_paths
Cmd_)CM,_Y1,ELEM
! Exclude_from_paths
Cmd_)CMSEL,S,_Y
! Exclude_from_paths
Cmd_)CMSEL,S,_X
! Exclude_from_paths
Cmd_)CMDELE,_X
Cmd_)/GO
Cal_Fnc_ENDR_node_2
:E END
:! 
:N Fnc_ENDR_node_2
:S    639,   140,   492
:T Command
:C )! Fnc_ENDR_node_2
:A Create End Release
:D Create End Release
:H Hlp_C_ENDRELEASE
Inp_NoApply
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)CMSEL,S,_Y1
Cmd_! ENDRELEASE
Cmd_)ENDRELEASE
 Fld_0
  Typ_Lab
  Prm_[ENDRELEASE]  Generate end releases
 Fld_3
  Typ_Def_-1
 Fld_4
  Prm_Released DOF's, up to 4
  Typ_MLis
  LIS_Ball Joint (ignore others),BALL
  LIS_*READ,DOF
  Bnd_0.0,4.0
 Fld_0
  Typ_Lab
  Prm_NOTE:  Internally, this command generates coupling equations
! Exclude_from_paths
Cmd_)CMSEL,S,_Y
! Exclude_from_paths
Cmd_)CMDELE,_Y
! Exclude_from_paths
Cmd_)CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_ENGEN
:S    310,   171,   132
:T Cmd_P
:C )! Fnc_ENGEN
:C )! Elements for ENGEN command below
:A    User Numbered
:D Copy Elems User-Num
:K #(PREP7)
:H Hlp_C_ENGEN
Inp_P
Cmd_)!
  Fld_5
  Typ_ELEM
  Prm_[ENGEN]  Pick or enter elements to be copied 
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_ENGEN_2
:E END
:! 
:N Fnc_ENGEN_2
:S    881,   118,   756
:T Command
:C )! Fnc_ENGEN_2
:D Copy Elems User-Num
:K #(PREP7)
:H Hlp_C_ENGEN
Cmd_ENGEN
 Fld_0
  Typ_Lab
  Prm_[ENGEN]  Copy Elements (User Numbered)
 Fld_2
  Prm_IINC   Element no. increment
  Typ_INT
 Fld_3
  Prm_ITIME  Number of copies -
  Typ_INT
  Def_2
 Fld_0
  Typ_Lab
  Prm_       - (including original) 
 Fld_4
  Prm_NINC   Node number increment
  Typ_INT
 Fld_5
  Typ_Def_P51X
 Fld_8
  Prm_MINC   Material no. increment
  Typ_INT
 Fld_9
  Prm_TINC   Elem type no. increment
  Typ_INT
 Fld_10
  Prm_RINC   Real constant no. inc.
  Typ_INT
 Fld_12
  Prm_SINC   Section ID no. incr
  Typ_INT
 Fld_11
  Prm_CINC   Elem coord sys no. inc.
  Typ_INT
 Fld_13
  Prm_DX     (opt) X-offset in active CS
  Typ_REAL
 Fld_14
  Prm_DY     (opt) Y-offset in active CS
  Typ_REAL
 Fld_15
  Prm_DZ     (opt) Z-offset in active CS
  Typ_REAL
:E END
:! 
:N Fnc_ENORM
:S    292,   156,   129
:T Cmd_P
:C )! Fnc_ENORM
:A    Shell Normals
:D Reorient Shell Normals
:K #(PREP7)
:P (LINPLUS*THERMAL)
:H Hlp_C_ENORM
Inp_P
Cmd_ENORM
 Fld_2
  Prm_[ENORM]  Pick or enter element having 'correct' normal direction
  Typ_ELEM
  Min_1
  Cnt_1
  PFM_2
:E End
:! 
:N Fnc_ENSYM
:S    313,   174,   132
:T Cmd_P
:C )! Fnc_ENSYM
:C )! Elements for ENSYM command below
:A    User Numbered
:D Reflect Elems User-Num
:K #(PREP7)
:H Hlp_C_ENSYM
Inp_P
Cmd_)!
  Fld_5
  Typ_ELEM
  Prm_[ENSYM]  Pick or enter elements to be copied 
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_ENSYM_2
:E END
:! 
:N Fnc_ENSYMM_rv
:S    258,   148,   103
:T Cmd_P
:C )! Fnc_ENSYMM_rv
:A of Shell Elems
:D Reverse Shell Element Normals
:K #(PREP7)
:H Hlp_C_ENSYM
Inp_P
Cmd_ENSYM
Fld_5
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  Prm_[ENSYMM] Pick shell elements to reverse
:E END
:! 
:N Fnc_ENSYM_2
:S    324,   121,   196
:T Command
:C )! Fnc_ENSYM_2
:D Reflect Elems User-Num
:K #(PREP7)
:H Hlp_C_ENSYM
Cmd_ENSYM
 Fld_0
  Typ_Lab
  Prm_[ENSYM]  Reflect Elements (User Numbered)
 Fld_2
  Prm_IINC  Element no. increment
  Typ_INT
 Fld_4
  Prm_NINC  Node no. increment
  Typ_INT
 Fld_5
  Typ_Def_P51X
:E END
:! 
:N Fnc_EORIENT
:S    808,   226,   575
:T Command
:C )! Fnc_EORIENT
:A    Orient Normal
:D Orient Normals for Layered Solid Elements
:K #(PREP7+((pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)))
:P (LINPLUS+ed)
:H Hlp_C_EORIENT
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,3
 Fld_0
  Typ_Lab
  Prm_[EORIENT]  Orient Outward Normal for Layered Solid Elements
!
 Fld_0
  Typ_Sep
!
 Fld_2
  Typ_CHAR
  Typ_Def_LYSL
!
 Fld_3
  Prm_DIR    Set normal parallel to
  Typ_Lis_OptionB
  Lis_Negative x-axis,NEGX
  Lis_Positive x-axis,POSX
  Lis_Negative y-axis,NEGY
  Lis_Positive y-axis,POSY
  Lis_Negative z-axis,NEGZ
  Lis_Positive z-axis,POSZ
  Lis_Choose element ,0
  Def_NEGZ
!
 Fld_4
  Prm_TOLER  Max angle: normal to axis 
  Typ_REAL
  Def_90.0
!
Cmd_)/GO
Cal_Fnc_EORIENT_dir,3,ne,0,2
Cal_Fnc_EORIENT_pck,3,eq,0,2
:E END
:! 
:N Fnc_EORIENT_dir
:S    201,    93,   101
:T Command
:C )! Fnc_EORIENT_dir
:H Hlp_C_EORIENT
Inp_P
Cmd_EORIENT
 Fld_2
 Typ_Def_*CPAR(1)
!
 Fld_3
  Typ_Def_*CPAR(2)
!
 Fld_4
  Typ_Def_*CPAR(3)
!
:E END
:! 
:N Fnc_EORIENT_pck
:S    280,   125,   148
:T Command
:C )! Fnc_EORIENT_pck
:A Pick element
:D Pick element
:H Hlp_C_EORIENT
Inp_P
Cmd_)/NOPR
Cmd_)*CSET,2,2
 Fld_2
  Typ_ELEM
  Prm_Pick or enter element number
  Min_1
  Max_1
  Cnt_1
  PCN_1
!
Cmd_)/GO
Cal_Fnc_EORIENT_dir
:E END
:! 
:N Fnc_EPLOT
:S    114,    97,    10
:T Cmd
:C )! Fnc_EPLOT
:A EPLOT
:C  
:D Ansys command EPLOT
Cmd_EPLOT
:E END
:! 
:N Fnc_EREAD_ERRANG
:S    408,   180,   221
:T Command
:C )! Fnc_EREAD_ERRANG
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A Read Elem File
:D Read Element File
:K #(PREP7)
:H Hlp_UI_eread
Inp_NoApply
Cmd_ERRANG
 Fld_0
  Typ_Lab
  Prm_[ERRANG]  Range of Element Numbers
 Fld_2
  Prm_ EMIN,EMAX,EINC
  Typ_INT3
  Def_1,99999999,1
Cmd_EREAD
 Fld_2
  Prm_[EREAD]   Name of element file
  Typ_FILE
  Def_*PAR(_zx)
:E End
:! 
:N Fnc_EREF
:S    460,   136,   317
:T Cmd_P
:A    Elements
:D Refine mesh at elements
:C )!Fnc_EREF
:C )/NOPR
:C )/GO
:H Hlp_C_EREFINE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
 Fld_5
  Prm_[EREF]  Pick or enter elements for refinement
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_EREF_1
:E END
:! 
:N Fnc_EREF_1
:S    569,   145,   417
:T Cmd
:A Refine Mesh at ELEM
:D Refine Mesh at Element
:C )!Fnc_EREF_1
:C )/NOPR
:C )/GO
:H Hlp_C_EREFINE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_0
Typ_Lab
Prm_[EREF] Refine mesh at elements
 Fld_2
  Prm_LEVEL   Level of refinement
  Typ_Lis_OptionB
  Lis_1 (Minimal),1
  Lis_2     ,2
  Lis_3     ,3
  Lis_4     ,4
  Lis_5 (Maximum),5
  Def_1
Cmd_LSCLEAR,FE
K_CM(PR_SGUI)
Cmd_MTchgmsh
K_CM(PR_SGUI)
Cmd_)/GO
Fld_2
 K_FL(pr_sgui)
 Prm_Advanced options
 Typ_LOGI,No, Yes
 Def_0
Cal_Fnc_EREF_2a,2,eq,0
Cal_Fnc_EREF_2b,2,eq,1
:E END
:! 
:N Fnc_EREF_2a
:S    277,    64,   206
:T Cmd
:C )! Fnc_EREF_2a
Inp_p
Cmd_EREF
 Fld_2
 Typ_Def__Y1
 Fld_3
 Typ_Def_ 
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
 Typ_Def_0
 Fld_7
 Typ_Def_1
 Fld_8
 Typ_Def_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_EREF_2b
:S    625,   125,   493
:T Cmd
:D Refine mesh at elements advanced options
:C )! Fnc_EREF_2b
:H Hlp_C_EREFINE
Cmd_EREF
 Fld_2
 Typ_Def__Y1
 Fld_3
 Typ_Def_ 
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
  Prm_DEPTH   Depth of refinement
  Typ_INT
  Def_0
 Fld_7
  Prm_POST    Postprocessing
  Typ_Lis_OptionB
  Lis_Off             ,0
  Lis_Cleanup + Smooth,1
  Lis_Smooth          ,2
   Def_1
 Fld_8
  Prm_RETAIN  Retain Quads
  Typ_LOGI,No    ,Yes
   Def_1
Fld_0
  Typ_Lab
  Prm_        Note: This option is only valid with an all quad mesh.
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_EREF_ALL
:S    583,   146,   430
:T Cmd
:A    All
:D Refine All Selected Elements
:C )!Fnc_EREF_ALL_ALL
:C )/NOPR
:C )/GO
:H Hlp_C_EREFINE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_0
Typ_Lab
Prm_[EREF] Refine all selected elements
 Fld_2
  Prm_LEVEL   Level of refinement
  Typ_Lis_OptionB
  Lis_1 (Minimal),1
  Lis_2     ,2
  Lis_3     ,3
  Lis_4     ,4
  Lis_5 (Maximum),5
  Def_1
Cmd_LSCLEAR,FE
K_CM(PR_SGUI)
Cmd_MTchgmsh
K_CM(PR_SGUI)
Cmd_)/GO
Fld_2
 K_FL(pr_sgui)
 Prm_Advanced options
 Typ_LOGI,No, Yes
 Def_0
Cal_Fnc_EREF_ALL_2a,2,eq,0
Cal_Fnc_EREF_ALL_2b,2,eq,1
:E END
:! 
:N Fnc_EREF_ALL_2a
:S    285,    72,   206
:T Cmd
:C )! Fnc_EREF_ALL_2a
Inp_p
Cmd_EREF
 Fld_2
 Typ_Def_ALL
 Fld_3
 Typ_Def_ 
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
 Typ_Def_0
 Fld_7
 Typ_Def_1
 Fld_8
 Typ_Def_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_EREF_ALL_2b
:S    589,   129,   453
:T Cmd
:D Refine all elements advanced options
:C )! Fnc_EREF_ALL_2b
:H Hlp_C_EREFINE
Cmd_EREF
 Fld_2
 Typ_Def_ALL
 Fld_3
 Typ_Def_ 
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
  Typ_Def_0
 Fld_7
  Prm_POST    Postprocessing
  Typ_Lis_OptionB
  Lis_Off             ,0
  Lis_Cleanup + Smooth,1
  Lis_Smooth          ,2
   Def_1
 Fld_8
  Prm_RETAIN  Retain Quads
  Typ_LOGI,No    ,Yes
   Def_1
Fld_0
  Typ_Lab
  Prm_        Note: This option is only valid with an all quad mesh.
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_ERESX
:S    717,   458,   252
:T Command
:C )! Fnc_ERESX
:C )/NOPR
:C )*GET,_z1,common,,stepcm,,int,63 ! predictor key
:C )*IF,_z1,eq,0,then
:C )_z2='NO'
:C )*ELSEIF,_z1,EQ,1,then
:C )_z2='DEFA'
:C )*ELSEIF,_z1,EQ,2,THEN
:C )_z2='YES'
:C )*ENDIF
:C )/NOPR
:C )/GO
:A Integration Pt
:D Controls for Integration Point Results
:K #(PREP7*SOLUTION)
:K #((pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_ERESX
Inp_NoApply
Cmd_ERESX
 Fld_0
  Typ_Lab
  Prm_[ERESX]  Controls for Integration Point Results
 Fld_2
  Prm_  Extrapolate results to nodes?
  Typ_LIS_RADIOB
  LIS_YES if valid    ,DEFA
  LIS_YES             ,YES
  LIS_NO - copy them  ,NO
  Def_*PAR(_z2)
:E END
:! 
:N Fnc_ESCHECK_ESEL
:S    460,   229,   224
:T Cmd
:A    Sel Warning/Error Elements
:D Select Warning/Error Elements
:C )!Fnc_ESCHECK_ESEL
:C )/NOPR
:C )_z = 2 
:C )/GO
:K ((POST1*SOLUTION)+begin)
:K #(igesfail)
:H Hlp_C_ESCHECK
Cmd_ESCHECK,ESEL
Fld_0
Typ_Lab
Prm_[ESCHECK] Select Warning/Error Elements
Fld_2
Prm_LEVEL Elements that produce
Typ_LIS_OPTIONB
LIS_Warn + Err,WARN
LIS_Errors    ,ERR
Fld_3
Prm_Check deformed element shape?
Typ_Logi,No,Yes
:E END
:! 
:N Fnc_ESCHECK_plt
:S    694,   196,   491
:T Cmd
:A    Plot Warning/Error Elements
:D Plot Warning/Error Elements
:C )!Fnc_ESCHECK_plt
:K ((POST1*SOLUTION)+begin)
:K #(igesfail)
:H Hlp_C_ESCHECK
Cmd_)/NOPR
Cmd_)CKELM
 Fld_0
 Typ_LAB
 Prm_Plot Warning/Error Elements
 Fld_2
 Prm_Good    Elements (blue)
 Typ_Logi,Do not Show,Show
 Fld_3
 Prm_Warning Elements (yellow)
 Typ_Logi,Do not Show,Show
 Def_1
 Fld_4
 Prm_Error   Elements (red)
 Typ_Logi,Do not Show,Show
 Def_1
 Fld_5
 Prm_Plot
 Typ_Logi,without lines,with lines
 Def_1
 Fld_6
 Prm_Check deformed element shape?
 Typ_Logi,No,Yes
 Fld_7
 Typ_Def_2
Cmd_!CM,_Y1,ELEM
Cmd_!CHECK,ESEL,WARN
Cmd_!CMSEL,S,_Y1
Cmd_!CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_ESEL_A
:S    282,   126,   149
:T Cmd_P
:C )! Fnc_ESEL_A
:A Also select elements
:D Also select elements
:H Hlp_C_ESEL
Inp_P
Cmd_ESEL
 Fld_2
  Typ_DEF_A
 Fld_5
Prm_[ESEL],A  Pick or enter elements to be added to selected set
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  Sel_U
:E END
:! 
:N Fnc_ESEL_A_resul
:S    203,   119,    77
:T Command
:C )! Fnc_ESEL_A_resul
:D Select Elems by Results
:H Hlp_C_ESEL
Inp_P
Cmd_)/NOPR
Cmd_)_z1='Also-'
Cmd_)_z2='A'
Cmd_)/GO
Cal_Fnc_ESEL_results
:E END
:! 
:N Fnc_ESEL_R
:S    257,   120,   130
:T Cmd_P
:C )! Fnc_ESEL_R
:A Reselect elements
:D Reselect elements
:H Hlp_C_ESEL
Inp_P
Cmd_ESEL
 Fld_2
  Typ_DEF_R
 Fld_5
Prm_[ESEL],R  Pick or enter elements to be reselected
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ESEL_R_resul
:S    201,   119,    75
:T Command
:C )! Fnc_ESEL_R_resul
:D Select Elems by Results
:H Hlp_C_ESEL
Inp_P
Cmd_)/NOPR
Cmd_)_z1='Re-'
Cmd_)_z2='R'
Cmd_)/GO
Cal_Fnc_ESEL_results
:E END
:! 
:N Fnc_ESEL_S
:S    259,   116,   136
:T Cmd_P
:C )! Fnc_ESEL_S
:A Select elements
:D Select elements
:H Hlp_C_ESEL
Inp_P
Cmd_ESEL
 Fld_2
  Typ_DEF_S
 Fld_5
Prm_[ESEL],S  Pick or enter elements to be selected
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  Sel_D
:E END
:! 
:N Fnc_ESEL_S1
:S    268,   116,   145
:T Cmd_P
:C )! Fnc_ESEL_S1
:A Select elements
:D Pick Elements
:H Hlp_C_ESEL
Inp_P
Cmd_ESEL
 Fld_2
  Typ_DEF_S
 Fld_5
Prm_[ESEL],S  Pick or enter elements to be selected
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  Sel_D
Cmd_NSLE
:E END
:! 
:N Fnc_ESEL_S_resul
:S    185,   105,    73
:T Command
:C )! Fnc_ESEL_S_resul
:D Select Elems by Results
Inp_P
Cmd_)/NOPR
Cmd_)_z1=' '
Cmd_)_z2='S'
Cmd_)/GO
Cal_Fnc_ESEL_results
:E END
:! 
:N Fnc_ESEL_U
:S    257,   120,   130
:T Cmd_P
:C )! Fnc_ESEL_U
:A Unselect elements
:D Unselect elements
:H Hlp_C_ESEL
Inp_P
Cmd_ESEL
 Fld_2
  Typ_DEF_U
 Fld_5
Prm_[ESEL],U  Pick or enter elements to be unselected
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_ESEL_U_resul
:S    187,   105,    75
:T Command
:C )! Fnc_ESEL_U_resul
:D Select Elems by Results
Inp_P
Cmd_)/NOPR
Cmd_)_z1='Un-'
Cmd_)_z2='U'
Cmd_)/GO
Cal_Fnc_ESEL_results
:E END
:! 
:N Fnc_ESEL_results
:S    439,   122,   309
:T Command
:C )! Fnc_ESEL_results
:D Select Elements by Results
:H Hlp_C_ESEL
Fld_0
Typ_Lab
Prm_[ESEL],%_z2%  %_z1%Select Elements by Results
Cmd_ESEL
Fld_2
Typ_Def_*PAR(_z2)
Fld_3
Typ_Def_ETAB
Fld_4
Prm_Item,Comp   Element table item
Typ_LIS_OPTIONB
LIS_*READ,ETAB
Fld_5
Prm_VMIN,VMAX   Range of values
Typ_real2
Fld_8
Prm_KABS        Use absolute values?
Typ_LOGI,No              ,Yes
:E END 
:! 
:N Fnc_ESIZE
:S    635,   218,   410
:T Command
:C )! Fnc_ESIZE
:C )/NOPR
:C )*GET,_z2,common,,cfprp7,,real,13
:C )*GET,_z3,common,,cfprp7,,int,63
:C )/GO
:A     Size
:D Global Element Sizes
:K #(PREP7)
:H Hlp_C_ESIZE
Inp_NoApply
Cmd_ESIZE
 Fld_0
  Typ_Lab
  Prm_[ESIZE]  Global element sizes and divisions (applies only 
 Fld_0
  Typ_Lab
  Prm_         to "unsized" lines)
 Fld_2
  Typ_REAL
  Prm_SIZE  Element edge length 
  Def_*PAR(_z2)
 Fld_3
  Typ_REAL
  Prm_NDIV  No. of element divisions -
  Def_*PAR(_z3)
 Fld_0
  Typ_Lab
  Prm_      - (used only if element edge length, SIZE, is blank or zero)
 Fld_0
  Typ_Lab
  Prm_
:E END
:! 
:N Fnc_ESIZE_ndiv
:S    235,   127,   101
:T Command
:C )! Fnc_ESIZE_ndiv ORPHAN
:A    Global
:D No of Divs Global
:K #(PREP7)
Cmd_ESIZE
 Fld_3
Prm_Global number of divisions
  Typ_INT
Fld_0
Prm_-applies only to "unsized" lines
:E End
:! 
:N Fnc_ESOL
:S   3301,  3266,    28
:T Command
:C )! Fnc_ESOL
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,11
:C )*GET,_z2,common,,cpst26,,int,1225
:C )*IF,_z2,LT,0,THEN
:C )_z3=1
:C )*ELSE
:C )_z3=0
:C )*ENDIF 
:C )*DEL,_zc
:C )*DIM,_zc,char,160,2
:C )*GET,_z9,COMMON,,CPST26,,CHAR,_z1  ! node
:C )_zc(150)=_z9
:C )*GET,_z4,common,,cpst26,,chr4,_z1+420
:C )*GET,_z5,common,,cpst26,,chr4,_z1+631
:C )*SET,_zc(1,1),'TOP','MID','BOT','STATIC','DAMP','INERT','TOTAL'
:C )*SET,_zc(8,1),'S','S','S','S','S','S','S','S','S'
:C )*SET,_zc(8,2),'X','Y','Z','XY','YZ','XZ','1','2','3'
:C )*SET,_zc(17,1),'S'
:C )*SET,_zc(17,2),'INT'
:C )*SET,_zc(18,1),'S','EPEL','EPEL','EPEL','EPEL','EPEL'
:C )*SET,_zc(18,2),'EQV','X','Y','Z','XY','YZ'
:C )*SET,_zc(24,1),'EPEL'
:C )*SET,_zc(24,2),'XZ'
:C )*SET,_zc(25,1),'EPEL','EPEL','EPEL','EPEL','EPEL','EPPL'
:C )*SET,_zc(25,2),'1','2','3','INT','EQV','X'
:C )*SET,_zc(31,1),'EPPL','EPPL','EPPL','EPPL','EPPL','EPPL'
:C )*SET,_zc(31,2),'Y','Z','XY','YZ','XZ','1'
:C )*SET,_zc(37,1),'EPPL','EPPL','EPPL','EPPL','EPCR','EPCR'
:C )*SET,_zc(37,2),'2','3','INT','EQV','X','Y'
:C )*SET,_zc(43,1),'EPCR','EPCR','EPCR','EPCR','EPTH','EPTH'
:C )*SET,_zc(43,2),'Z','XY','YZ','XZ','X','Y'
:C )*SET,_zc(49,1),'EPTH','EPTH','EPTH','EPTH'
:C )*SET,_zc(49,2),'Z','XY','YZ','XZ'
:C )*SET,_zc(53,1),'EPTH','EPTH','EPTH','EPTH','EPTH','NL'
:C )*SET,_zc(53,2),'1','2','3','INT','EQV','SEPL'
:C )*SET,_zc(59,1),'NL','NL','NL','NL','NL','TG'
:C )*SET,_zc(59,2),'SRAT','HPRE','EPEQ','PSV','PLWK','X'
:C )*SET,_zc(65,1),'TG'
:C )*SET,_zc(65,2),'Y'
:C )*SET,_zc(66,1),'TG','TG','TF','TF','TF','TF','PG','PG'
:C )*SET,_zc(66,2),'Z','SUM','X','Y','Z','SUM','X','Y'
:C )*SET,_zc(74,1),'PG','PG','EF','EF','EF','EF','D','D'
:C )*SET,_zc(74,2),'Z','SUM','X','Y','Z','SUM','X','Y'
:C )*SET,_zc(82,1),'D'
:C )*SET,_zc(82,2),'Z'
:C )*SET,_zc(83,1),'D','H','H','H','H','B','B','B','B'
:C )*SET,_zc(83,2),'SUM','X','Y','Z','SUM','X','Y','Z','SUM'
:C )*SET,_zc(92,1),'FMAG','FMAG','FMAG','FMAG','F','F','F','M'
:C )*SET,_zc(92,2),'X','Y','Z','SUM','X','Y','Z','X'
:C )*SET,_zc(100,1),'M','M','HEAT ','FLOW ','AMPS ','FLUX ','VF'
:C )*SET,_zc(100,2),'Y','Z',' ',' ',' ',' ','VF'
:C )*SET,_zc(107,1),'VF','VF','CSG','CSG','CSG','SENE ','JHEA '
:C )*SET,_zc(107,2),'Y','Z','X','Y','Z',' ',' '
:C )*SET,_zc(114,1),'KENE ','JS','JS','JS','VOLU ','BFE','EPTO'
:C )*SET,_zc(114,2),'KENE ','X','Y','Z',' ','TEMP','X'
:C )*SET,_zc(121,1),'EPTO','EPTO','EPTO','EPTO','EPTO','EPTO'
:C )*SET,_zc(121,2),'Y','Z','XY','YZ','XZ','1'
:C )*SET,_zc(127,1),'EPTO','EPTO','EPTO','EPTO'
:C )*SET,_zc(127,2),'2','3','INT','EQV'
:C )*SET,_zc(131,1),'TENE'
:C )*SET,_zc(131,2),' '
:C )*SET,_zc(132,1),'EFFS'
:C )*SET,_zc(132,2),'TOTS'
:C )*SET,_zc(133,1),'CONT','CONT','CONT','CONT','CONT','CONT'
:C )*SET,_zc(133,2),'STAT','PENE','PRES','SFRI','STOT','SLID'
:C )*SET,_zc(139,1),'EPCR','EPCR','EPCR','EPCR','EPCR'
:C )*SET,_zc(139,2),'1','2','3','INT','EQV'
:C )*SET,_zc(144,1),'CONT','CONT'
:C )*SET,_zc(144,2),'GAP','FLUX'
:C )*SET,_zc(146,1),'CONT'
:C )*SET,_zc(146,2),'CNOS'
:C )_z7=0
:C )_z99=146
:C )*DO,_z7,1,_z99
:C )/NOPR
:C )*IF,_zc(_z7,1),EQ,_z4,THEN
:C )*IF,_zc(_z7,2),EQ,_z5,EXIT
:C )*ENDIF
:C )*ENDDO
:C )/GO
:A Element Results
:D Define Element Results Variable
:K #(POST26)
:H Hlp_UI_esol
Inp_P
Cmd_)!
Cal_Fnc_ESOLp1
:E END
:! 
:N Fnc_ESOL1A
:S  20360,   256, 20097
:T Command
:C )! Fnc_ESOL1A
:C )/NOPR
:C )_z8=_z7-7
:C )*IF,_z7,EQ,_z99,THEN
:C )*IF,_zc(_z99,1),NE,_z4,THEN
:C )_z8=1
:C )*ENDIF
:C )*ENDIF
:C )/GO
:A Element Results
:D Define Element Results Variable
:H Hlp_UI_esol
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,4
 Fld_0
  Typ_LAB
  Prm_[ESOL]  Define  Element Results Variable
 Fld_2
  Prm_NVAR  Ref number of variable
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Prm_ELEM  Element number
  Typ_INT
  Def_*PAR(_z10)
 Fld_4
  Prm_NODE  Node number
  Typ_INT
  Def_*PAR(_z11)
 Fld_5
  Typ_CHAR
  Prm_Name  User-specified label
  Def_*PAR(_zc(150))
Cmd_)*SET,_z(4)
 Fld_2
  K_FL(LSDYNA)
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,1
P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,2
P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,3
P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,4
P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,5
P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,6
P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,7
P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,8
P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,9
P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,10
P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,11
!
P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,12
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,13
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,14
P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,15
P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,16
P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,17
P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,18
P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,19
P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,20
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,21
P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,22
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,33
 Fld_2
  K_FL(STRUCTRL+multifld+lsdyna)
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,1
P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,2
P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,3
P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,4
P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,5
P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,6
P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,7
P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,8
P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,9
P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,10
P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,11
P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,51
P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,52
P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,53
!
P_LN(LINPLUS)
  IDX_Nodal force data,Struct force  FX,89
P_LN(LINPLUS)
  IDX_Nodal force data,              FY,90
P_LN(LINPLUS)
  IDX_Nodal force data,              FZ,91
P_LN(LINPLUS)
  IDX_Nodal force data,Struct moment MX,92
P_LN(LINPLUS)
  IDX_Nodal force data,              MY,93
P_LN(LINPLUS)
  IDX_Nodal force data,              MZ,94
!
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Strain enrg SENE,105
P_LN(LINPLUS)
  IDX_Energy          ,Kinetc enrg KENE,107
P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,56
P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,55
!
  IDX_Geometry        ,Elem volume VOLU,111
!
P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,12
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,13
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,14
P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,15
P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,16
P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,17
P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,18
P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,19
P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,20
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,21
P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,22
!
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,112
P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,40
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,41
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,42
P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,43
P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,44
P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,45
P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,46
P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,47
P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,48
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,49
P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,50
!
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,23
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,24
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,25
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,26
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,27
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,28
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,29
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,30
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,31
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,32
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,33
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,54
!
P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,34
P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,35
P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,36
P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,37
P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,38
P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,39
P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,132
P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,133
P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,134
P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,135
P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,136
!
P_LN(FULL_ANS)
  IDX_Contact         ,Status      STAT,126
P_LN(FULL_ANS)
  IDX_Contact         ,Penetration PENE,127
P_LN(FULL_ANS)
  IDX_Contact         ,Gap         GAP ,137
P_LN(FULL_ANS)
  IDX_Contact         ,Pressure    PRES,128
P_LN(FULL_ANS)
  IDX_Contact         ,Fric Stress SFRI,129
P_LN(FULL_ANS)
  IDX_Contact         ,TotalStress STOT,130
P_LN(FULL_ANS)
  IDX_Contact         ,SlidingDist SLID,131
P_LN(FULL_ANS)
  IDX_Contact         ,Heat flux   FLUX,138
P_LN(FULL_ANS)
  IDX_Contact         ,Chattering  CNOS,139  
P_LN(FULL_ANS)
  IDX_Contact         ,Fluid Pres  FPRS,140
!
Def_*PAR(_z8)
 Fld_2
  K_FL(THERMAL+multifld) 
  P_FL(THERMAL)
  Prm_Item,Comp  Data item
  Typ_IDX
  IDX_Flux & gradient ,Thermal flux TFX,61
  IDX_Flux & gradient ,             TFY,62
  IDX_Flux & gradient ,             TFZ,63
  IDX_Flux & gradient ,           TFSUM,64
  IDX_Flux & gradient ,Thermal grad TGX,57
  IDX_Flux & gradient ,             TGY,58
  IDX_Flux & gradient ,             TGZ,59
  IDX_Flux & gradient ,           TGSUM,60
!
  IDX_Nodal force data,Heat flow   HEAT,95
!
  IDX_Energy          ,Therm enrg  TENE,124
!
  IDX_Geometry        ,Elem volume VOLU,111
!
Def_*PAR(_z8)
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid) 
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,81
P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,82
P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,83
P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,84
P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,77
P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,78
P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,79
P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,80
P_LN(ELECMAG)
  IDX_Flux & gradient ,Current dens JSX,108
P_LN(ELECMAG)
  IDX_Flux & gradient ,             JSY,109
P_LN(ELECMAG)
  IDX_Flux & gradient ,             JSZ,110
P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,73
P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,74
P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,75
P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,76
P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,69
P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,70
P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,71
P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,72
!
P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,85
P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,86
P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,87
P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,88
P_LN(ELECMAG)
  IDX_Nodal force data,Mag flux    FLUX,98
P_LN(ELECMAG)
  IDX_Nodal force data,Curr segmt  CSGX,102
P_LN(ELECMAG)
  IDX_Nodal force data,            CSGY,103
P_LN(ELECMAG)
  IDX_Nodal force data,            CSGZ,104
P_LN(THERMAL*ELECMAG*FULL_ANS)
  IDX_Nodal force data,Elec currnt AMPS,97
!
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Mag energy  SENE,105
P_LN(THERMAL*ELECMAG)
  IDX_Energy          ,Joule heat JHEAT,106
P_LN((LINPLUS*ELECMAG)
  IDX_Energy          ,Elec energy SENE,105
!
  IDX_Geometry        ,Elem volume VOLU,111
!
Def_*PAR(_z8)
 Fld_2
  K_FL(FLUID+multifld) 
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,65
P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,66
P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,67
P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,68
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,61
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,62
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,63
P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,64
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,57
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,58
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,59
P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,60
!
P_LN(FULL_ANS)
  IDX_Nodal force data,Flow rate   FLOW,96
P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,95
!
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Flow energy SENE,105
!
  IDX_Geometry        ,Elem volume VOLU,111
!
Def_*PAR(_z8)
 Fld_2
  K_FL(CFD) 
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,65
P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,66
P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,67
P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,68
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,61
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,62
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,63
P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,64
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,57
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,58
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,59
P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,60
!
P_LN(FULL_ANS)
  IDX_Nodal force data,Flow rate   FLOW,96
P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,95
!
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Flow energy SENE,105
!
  IDX_Geometry        ,Elem volume VOLU,111
!
Def_*PAR(_z8)
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna) 
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,1
P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,2
P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,3
P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,4
P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,5
P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,6
P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,7
P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,8
P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,9
P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,10
P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,11
P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,51
P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,52
P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,53
!
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,61
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,62
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,63
P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,64
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,57
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,58
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,59
P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,60
P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,81
P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,82
P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,83
P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,84
P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,77
P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,78
P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,79
P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,80
P_LN(ELECMAG)
  IDX_Flux & gradient ,Current dens JSX,108
P_LN(ELECMAG)
  IDX_Flux & gradient ,             JSY,109
P_LN(ELECMAG)
  IDX_Flux & gradient ,             JSZ,110
P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,73
P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,74
P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,75
P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,76
P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,69
P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,70
P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,71
P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,72
P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,65
P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,66
P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,67
P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,68
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,61
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,62
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,63
P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,64
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,57
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,58
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,59
P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,60
!
P_LN(LINPLUS)
  IDX_Nodal force data,Struct force  FX,89
P_LN(LINPLUS)
  IDX_Nodal force data,              FY,90
P_LN(LINPLUS)
  IDX_Nodal force data,              FZ,91
P_LN(LINPLUS)
  IDX_Nodal force data,Struct moment MX,92
P_LN(LINPLUS)
  IDX_Nodal force data,              MY,93
P_LN(LINPLUS)
  IDX_Nodal force data,              MZ,94
P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,95
P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,85
P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,86
P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,87
P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,88
P_LN(ELECMAG)
  IDX_Nodal force data,Mag flux    FLUX,98
P_LN(ELECMAG)
  IDX_Nodal force data,Curr segmt  CSGX,102
P_LN(ELECMAG)
  IDX_Nodal force data,            CSGY,103
P_LN(ELECMAG)
  IDX_Nodal force data,            CSGZ,104
P_LN(THERMAL*ELECMAG*FULL_ANS)
  IDX_Nodal force data,Elec currnt AMPS,97
P_LN(FULL_ANS)
  IDX_Nodal force data,Flow rate   FLOW,96
P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,95
!
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Strain enrg SENE,105
P_LN(LINPLUS)
  IDX_Energy          ,Kinetc enrg KENE,107
P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,56
P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,55
P_LN(THERMAL)
  IDX_Energy          ,Therm enrg  TENE,124
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Mag energy  SENE,105
P_LN(THERMAL*ELECMAG)
  IDX_Energy          ,Joule heat JHEAT,106
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Elec energy SENE,105
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Flow energy SENE,105
!
  IDX_Geometry        ,Elem volume VOLU,111
!
P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,12
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,13
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,14
P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,15
P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,16
P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,17
P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,18
P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,19
P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,20
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,21
P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,22
!
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,112
P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,40
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,41
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,42
P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,43
P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,44
P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,45
P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,46
P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,47
P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,48
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,49
P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,50
!
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,23
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,24
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,25
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,26
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,27
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,28
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,29
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,30
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,31
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,32
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,33
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,54
!
P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,34
P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,35
P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,36
P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,37
P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,38
P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,39
P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,132
P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,133
P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,134
P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,135
P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,136
!
P_LN(FULL_ANS)
  IDX_Contact         ,Status      STAT,126
P_LN(FULL_ANS)
  IDX_Contact         ,Penetration PENE,127
P_LN(FULL_ANS)
  IDX_Contact         ,Gap         GAP ,137
P_LN(FULL_ANS)
  IDX_Contact         ,Pressure    PRES,128
P_LN(FULL_ANS)
  IDX_Contact         ,Fric Stress SFRI,129
P_LN(FULL_ANS)
  IDX_Contact         ,TotalStress STOT,130
P_LN(FULL_ANS)
  IDX_Contact         ,SlidingDist SLID,131
P_LN(FULL_ANS)
  IDX_Contact         ,Heat flux   FLUX,138
P_LN(FULL_ANS)
  IDX_Contact         ,Chattering  CNOS,139  
P_LN(FULL_ANS)
  IDX_Contact         ,Fluid Pres  FPRS,140  
! 
Def_*PAR(_z8)
!
Cmd_)*SET,_z(5)
K_CM(STRUCTRL)
P_CM(LINPLUS*ELECMAG)
 Fld_0
  Typ_Sep
 Fld_0
  Prm_Optionally specify the -
 Fld_2
  Prm_[FORCE]  Force results are
  Typ_LIS_OPTIONB
   LIS_Total force     ,4
   LIS_Static only     ,1
   LIS_Damping only    ,2
   LIS_Inertia only    ,3
   Def_*GET(common,,cpst26,,int,1226)
 Fld_3
 P_FL(LINPLUS)
 K_FL(lsdyna)
  Prm_[SHELL]  Location for shell elem
  Typ_LIS_OPTIONB
   LIS_Top layer       ,1
   LIS_Middle layer    ,2
   LIS_Bottom layer    ,3
   Def_*GET(common,,cpst26,,int,1224)
!
Cmd_)*SET,_z(7)
P_CM(LINPLUS+ed)
K_CM(lsdyna)
 Fld_1
 K_FL(structrl)
  Typ_Def_)!
 Fld_2
 K_FL(STRUCTRL)
  Prm_[LAYERP26]  Layer results are from
  Typ_LIS_RADIOB
   LIS_Max failure crit,1
   LIS_Specified layer ,0
   Def_*PAR(_z3)
 Fld_2
 K_FL(structrl)
  Typ_Def_1
!
Cmd_)*CSET,5,5
P_CM(LINPLUS+ed)
K_CM(lsdyna)
 Fld_2
 K_FL(STRUCTRL)
  Prm_         Specified layer number
  Typ_int
   Def_*PAR(_z2)
 Fld_0
  K_FL(LSDYNA)
  Typ_Sep
Cmd_)/GO
Cal_Fnc_ESOL_A
:E END
:! 
:N Fnc_ESOL1e
:S  19015,   256, 18752
:T Command
:C )! Fnc_ESOL1e
:C )/NOPR
:C )_z8=_z7-7
:C )*IF,_z7,EQ,_z99,THEN
:C )*IF,_zc(_z99,1),NE,_z4,THEN
:C )_z8=1
:C )*ENDIF
:C )*ENDIF
:C )/GO
:A Element Results
:D Define Element Results Variable
:H Hlp_UI_esol
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,4
 Fld_0
  Typ_LAB
  Prm_[ESOL]  Define  Element Results Variable
 Fld_2
  Prm_NVAR  Ref number of variable
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Prm_ELEM  Element number
  Typ_INT
  Def_*GET(COMMON,,CPST26,,INT,_z1)
 Fld_4
  Prm_NODE  Node number
  Typ_INT
  Def_*GET(COMMON,,CPST26,,INT,1012+_z1)
 Fld_5
  Typ_CHAR
  Prm_Name  User-specified label
  Def_*PAR(_zc(150))
Cmd_)*SET,_z(4)
 Fld_2
  K_FL(STRUCTRL+multifld)
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,1
P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,2
P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,3
P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,4
P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,5
P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,6
P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,7
P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,8
P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,9
P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,10
P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,11
P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,51
P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,52
P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,53
!
P_LN(LINPLUS)
  IDX_Nodal force data,Struct force  FX,89
P_LN(LINPLUS)
  IDX_Nodal force data,              FY,90
P_LN(LINPLUS)
  IDX_Nodal force data,              FZ,91
P_LN(LINPLUS)
  IDX_Nodal force data,Struct moment MX,92
P_LN(LINPLUS)
  IDX_Nodal force data,              MY,93
P_LN(LINPLUS)
  IDX_Nodal force data,              MZ,94
!
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Strain enrg SENE,105
P_LN(LINPLUS)
  IDX_Energy          ,Kinetc enrg KENE,107
P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,56
P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,55
!
  IDX_Geometry        ,Elem volume VOLU,111
!
P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,12
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,13
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,14
P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,15
P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,16
P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,17
P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,18
P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,19
P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,20
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,21
P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,22
!
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,112
P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,40
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,41
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,42
P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,43
P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,44
P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,45
P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,46
P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,47
P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,48
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,49
P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,50
!
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,23
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,24
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,25
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,26
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,27
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,28
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,29
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,30
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,31
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,32
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,33
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,54
!
P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,34
P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,35
P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,36
P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,37
P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,38
P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,39
P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,132
P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,133
P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,134
P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,135
P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,136
!
P_LN(FULL_ANS)
  IDX_Contact         ,Status      STAT,126
P_LN(FULL_ANS)
  IDX_Contact         ,Penetration PENE,127
P_LN(FULL_ANS)
  IDX_Contact         ,Gap         GAP ,137
P_LN(FULL_ANS)
  IDX_Contact         ,Pressure    PRES,128
P_LN(FULL_ANS)
  IDX_Contact         ,Fric Stress SFRI,129
P_LN(FULL_ANS)
  IDX_Contact         ,TotalStress STOT,130
P_LN(FULL_ANS)
  IDX_Contact         ,SlidingDist SLID,131
P_LN(FULL_ANS)
  IDX_Contact         ,Heat flux   FLUX,138
P_LN(FULL_ANS)
  IDX_Contact         ,Chattering  CNOS,139
P_LN(FULL_ANS)
  IDX_Contact         ,Fluid Pres  FPRS,140  
!
Def_*PAR(_z8)
 Fld_2
  K_FL(THERMAL+multifld) 
  P_FL(THERMAL)
  Prm_Item,Comp  Data item
  Typ_IDX
  IDX_Flux & gradient ,Thermal flux TFX,61
  IDX_Flux & gradient ,             TFY,62
  IDX_Flux & gradient ,             TFZ,63
  IDX_Flux & gradient ,           TFSUM,64
  IDX_Flux & gradient ,Thermal grad TGX,57
  IDX_Flux & gradient ,             TGY,58
  IDX_Flux & gradient ,             TGZ,59
  IDX_Flux & gradient ,           TGSUM,60
!
  IDX_Nodal force data,Heat flow   HEAT,95
!
  IDX_Energy          ,Therm enrg  TENE,124
!
  IDX_Geometry        ,Elem volume VOLU,111
!
Def_*PAR(_z8)
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid) 
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,81
P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,82
P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,83
P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,84
P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,77
P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,78
P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,79
P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,80
P_LN(ELECMAG)
  IDX_Flux & gradient ,Current dens JSX,108
P_LN(ELECMAG)
  IDX_Flux & gradient ,             JSY,109
P_LN(ELECMAG)
  IDX_Flux & gradient ,             JSZ,110
P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,73
P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,74
P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,75
P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,76
P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,69
P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,70
P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,71
P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,72
!
P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,85
P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,86
P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,87
P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,88
P_LN(ELECMAG)
  IDX_Nodal force data,Mag flux    FLUX,98
P_LN(ELECMAG)
  IDX_Nodal force data,Curr segmt  CSGX,102
P_LN(ELECMAG)
  IDX_Nodal force data,            CSGY,103
P_LN(ELECMAG)
  IDX_Nodal force data,            CSGZ,104
P_LN(THERMAL*ELECMAG*FULL_ANS)
  IDX_Nodal force data,Elec currnt AMPS,97
!
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Mag energy  SENE,105
P_LN(THERMAL*ELECMAG)
  IDX_Energy          ,Joule heat JHEAT,106
P_LN((LINPLUS*ELECMAG)
  IDX_Energy          ,Elec energy SENE,105
!
  IDX_Geometry        ,Elem volume VOLU,111
!
Def_*PAR(_z8)
 Fld_2
  K_FL(FLUID+multifld) 
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,65
P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,66
P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,67
P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,68
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,61
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,62
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,63
P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,64
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,57
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,58
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,59
P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,60
!
P_LN(FULL_ANS)
  IDX_Nodal force data,Flow rate   FLOW,96
P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,95
!
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Flow energy SENE,105
!
  IDX_Geometry        ,Elem volume VOLU,111
!
Def_*PAR(_z8)
 Fld_2
  K_FL(CFD) 
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,65
P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,66
P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,67
P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,68
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,61
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,62
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,63
P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,64
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,57
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,58
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,59
P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,60
!
P_LN(FULL_ANS)
  IDX_Nodal force data,Flow rate   FLOW,96
P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,95
!
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Flow energy SENE,105
!
  IDX_Geometry        ,Elem volume VOLU,111
!
Def_*PAR(_z8)
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)) 
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,1
P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,2
P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,3
P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,4
P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,5
P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,6
P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,7
P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,8
P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,9
P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,10
P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,11
P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,51
P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,52
P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,53
!
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,61
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,62
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,63
P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,64
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,57
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,58
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,59
P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,60
P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,81
P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,82
P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,83
P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,84
P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,77
P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,78
P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,79
P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,80
P_LN(ELECMAG)
  IDX_Flux & gradient ,Current dens JSX,108
P_LN(ELECMAG)
  IDX_Flux & gradient ,             JSY,109
P_LN(ELECMAG)
  IDX_Flux & gradient ,             JSZ,110
P_LN(ELECMAG)
  IDX_Flux & gradient ,ElecFluxDens  DX,73
P_LN(ELECMAG)
  IDX_Flux & gradient ,              DY,74
P_LN(ELECMAG)
  IDX_Flux & gradient ,              DZ,75
P_LN(ELECMAG)
  IDX_Flux & gradient ,            DSUM,76
P_LN(ELECMAG)
  IDX_Flux & gradient ,Elec field   EFX,69
P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFY,70
P_LN(ELECMAG)
  IDX_Flux & gradient ,             EFZ,71
P_LN(ELECMAG)
  IDX_Flux & gradient ,           EFSUM,72
P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,65
P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,66
P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,67
P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,68
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,61
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,62
P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,63
P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,64
P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,57
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,58
P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,59
P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,60
!
P_LN(LINPLUS)
  IDX_Nodal force data,Struct force  FX,89
P_LN(LINPLUS)
  IDX_Nodal force data,              FY,90
P_LN(LINPLUS)
  IDX_Nodal force data,              FZ,91
P_LN(LINPLUS)
  IDX_Nodal force data,Struct moment MX,92
P_LN(LINPLUS)
  IDX_Nodal force data,              MY,93
P_LN(LINPLUS)
  IDX_Nodal force data,              MZ,94
P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,95
P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,85
P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,86
P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,87
P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,88
P_LN(ELECMAG)
  IDX_Nodal force data,Mag flux    FLUX,98
P_LN(ELECMAG)
  IDX_Nodal force data,Curr segmt  CSGX,102
P_LN(ELECMAG)
  IDX_Nodal force data,            CSGY,103
P_LN(ELECMAG)
  IDX_Nodal force data,            CSGZ,104
P_LN(THERMAL*ELECMAG*FULL_ANS)
  IDX_Nodal force data,Elec currnt AMPS,97
P_LN(FULL_ANS)
  IDX_Nodal force data,Flow rate   FLOW,96
P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,95
!
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Strain enrg SENE,105
P_LN(LINPLUS)
  IDX_Energy          ,Kinetc enrg KENE,107
P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,56
P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,55
P_LN(THERMAL)
  IDX_Energy          ,Therm enrg  TENE,124
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Mag energy  SENE,105
P_LN(THERMAL*ELECMAG)
  IDX_Energy          ,Joule heat JHEAT,106
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Elec energy SENE,105
P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Flow energy SENE,105
!
  IDX_Geometry        ,Elem volume VOLU,111
!
P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,12
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,13
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,14
P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,15
P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,16
P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,17
P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,18
P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,19
P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,20
P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,21
P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,22
!
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,112
P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,40
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,41
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,42
P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,43
P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,44
P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,45
P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,46
P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,47
P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,48
P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,49
P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,50
!
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,23
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,24
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,25
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,26
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,27
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,28
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,29
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,30
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,31
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,32
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,33
P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,54
!
P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,34
P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,35
P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,36
P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,37
P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,38
P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,39
P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,132
P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,133
P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,134
P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,135
P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,136
!
P_LN(FULL_ANS)
  IDX_Contact         ,Status      STAT,126
P_LN(FULL_ANS)
  IDX_Contact         ,Penetration PENE,127
P_LN(FULL_ANS)
  IDX_Contact         ,Gap         GAP ,137
P_LN(FULL_ANS)
  IDX_Contact         ,Pressure    PRES,128
P_LN(FULL_ANS)
  IDX_Contact         ,Fric Stress SFRI,129
P_LN(FULL_ANS)
  IDX_Contact         ,TotalStress STOT,130
P_LN(FULL_ANS)
  IDX_Contact         ,SlidingDist SLID,131
P_LN(FULL_ANS)
  IDX_Contact         ,Heat flux   FLUX,138
P_LN(FULL_ANS)
  IDX_Contact         ,Chattering  CNOS,139
P_LN(FULL_ANS)
  IDX_Contact         ,Fluid Pres  FPRS,140  
! 
Def_*PAR(_z8)
!
Cmd_)*SET,_z(5)
K_CM(STRUCTRL)
P_CM(LINPLUS*ELECMAG)
 Fld_0
  Typ_Sep
 Fld_0
  Prm_Optionally specify the -
 Fld_2
  Prm_[FORCE]  Force results are
  Typ_LIS_OPTIONB
   LIS_Total force     ,4
   LIS_Static only     ,1
   LIS_Damping only    ,2
   LIS_Inertia only    ,3
   Def_*GET(common,,cpst26,,int,1226)
 Fld_3
 P_FL(LINPLUS)
 K_FL(lsdyna)
  Prm_[SHELL]  Location for shell elem
  Typ_LIS_OPTIONB
   LIS_Top layer       ,1
   LIS_Middle layer    ,2
   LIS_Bottom layer    ,3
   Def_*GET(common,,cpst26,,int,1224)
!
Cmd_)*SET,_z(7)
P_CM(LINPLUS+ed)
K_CM(lsdyna)
 Fld_1
 K_FL(structrl)
  Typ_Def_)!
 Fld_2
 K_FL(STRUCTRL)
  Prm_[LAYERP26]  Layer results are from
  Typ_LIS_RADIOB
   LIS_Max failure crit,1
   LIS_Specified layer ,0
   Def_*PAR(_z3)
 Fld_2
 K_FL(structrl)
  Typ_Def_1
!
Cmd_)*CSET,5,5
P_CM(LINPLUS+ed)
K_CM(lsdyna)
 Fld_2
 K_FL(STRUCTRL)
  Prm_         Specified layer number
  Typ_int
   Def_*PAR(_z2)
 Fld_0
  K_FL(LSDYNA)
  Typ_Sep
Cal_Fnc_ESOL_Ae
:E END
:! 
:N Fnc_ESOL_A
:S    791,   231,   553
:T Command
:C )! Fnc_ESOL_A
:C )/NOPR
:C )keyw,key1,0
:C )*IF,_z(7),EQ,1,THEN
:C )keyw,key1,0
:C )*ELSE
:C )keyw,key1,1
:C )*ENDIF
:C )/GO
:A Element Results
:D Define Element Results Variable
Inp_P
Cmd_)/GO
Cmd_FORCE
K_CM(STRUCTRL)
P_CM(LINPLUS*ELECMAG)
 Fld_2
  Typ_Def_*PAR(_zc(_z(5)+3))
Cmd_SHELL
K_CM(STRUCTRL+lsdyna)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*PAR(_zc(_z(6)))
Cmd_LAYERP26
K_CM(STRUCTRL)
P_CM(LINPLUS+ed)
 Fld_2
 K_FL(STRUCTRL+key1)
  Typ_Def_FCMAX
 Fld_2
 K_FL(STRUCTRL+KEY1)
  Typ_Def_*CPAR(5)
Cmd_ESOL
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*PAR(_zc(_z(4)+7))
 Fld_6
  Typ_Def_*PAR(_zc(_z(4)+7,2))
 Fld_7
  Typ_Def_*CPAR(4)
Cmd_)/NOPR
Cmd_)DEFINE
Cmd_)STAT,,,, ,,,,1
Cmd_)/GO
:E END
:! 
:N Fnc_ESOL_Ae
:S    793,   233,   553
:T Command
:C )! Fnc_ESOL_Ae
:C )/NOPR
:C )keyw,key1,0
:C )*IF,_z(7),EQ,1,THEN
:C )keyw,key1,0
:C )*ELSE
:C )keyw,key1,1
:C )*ENDIF
:C )/GO
:A Element Results
:D Define Element Results Variable
Inp_P
Cmd_)/GO
Cmd_FORCE
K_CM(STRUCTRL)
P_CM(LINPLUS*ELECMAG)
 Fld_2
  Typ_Def_*PAR(_zc(_z(5)+3))
Cmd_SHELL
K_CM(STRUCTRL+lsdyna)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*PAR(_zc(_z(6)))
Cmd_LAYERP26
K_CM(STRUCTRL)
P_CM(LINPLUS+ed)
 Fld_2
 K_FL(STRUCTRL+key1)
  Typ_Def_FCMAX
 Fld_2
 K_FL(STRUCTRL+KEY1)
  Typ_Def_*CPAR(5)
Cmd_ESOL
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*PAR(_zc(_z(4)+7))
 Fld_6
  Typ_Def_*PAR(_zc(_z(4)+7,2))
 Fld_7
  Typ_Def_*CPAR(4)
Cmd_)/NOPR
Cmd_)DEFINE
Cmd_)STAT,,,, ,,,,1
Cmd_)/GO
:E END
:! 
:N Fnc_ESOL_SN
:S    275,   125,   143
:T Command
:A Elem res by seq no.
:D Define Element Results by Seq No.
:H Hlp_UI_esol
Inp_P
Cmd_)/NOPR
CMD_)*SET,_z6
 Fld_2
  Prm_[ESOL] Pick element for time history 
  Typ_ELEM
  Min_0
  Cnt_1
  Pfm_2
Cmd_)/GO
Cal_Fnc_ESOL_SNA
:E END
:! 
:N Fnc_ESOL_SNA
:S   2133,   348,  1778
:T Command
:C )! Fnc_ESOL_SNA
:C )/NOPR
:C )*GET,_z2,common,,cpst26,,int,1225
:C )*IF,_z2,LT,0,THEN
:C )_z3=1
:C )*ELSE
:C )_z3=0
:C )*ENDIF
:C )*GET,_z4,common,,cpst26,,chr4,_z1+420
:C )*GET,_z5,common,,cpst26,,chr4,_z1+631
:C )/GO
:A Elem res by seq no.
:D Define Element Results by Seq No.
:H Hlp_UI_esol
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,4
 Fld_0
  Typ_LAB
  Prm_[ESOL]  Define  Element Results Variable by Sequence No.
 Fld_2
  Prm_NVAR  Ref number of variable
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Prm_ELEM  Element number
  Typ_INT
  Def_*PAR(_z6)
 Fld_5
  Typ_CHAR
  Prm_Name  User-specified label
  Def_*GET(COMMON,,CPST26,,CHAR,_z1)
Cmd_)*CSET,5,7
 Fld_2
 K_FL(circ)
  Prm_Item  Data item
  Typ_LIS
  LIS_SMISC,SMIS
  LIS_NMISC,NMIS
  LIS_LS   ,LS
  LIS_LEPEL,LEPE
  LIS_LEPTH,LEPT
  LIS_LEPPL,LEPP
  LIS_LEPCR,LEPC
  LIS_NLIN ,NLIN
  LIS_LBFE ,LBFE
  Def_*PAR(_z4)
 Fld_3
 K_FL(circ)
  Prm_Comp  Sequence number
  Typ_Int
  Def_*PAR(_z5)
 Fld_2
 K_FL(CIRC)
 Prm_Item,Comp  Data Item 
 Typ_Lis
 Lis_Vltg Drop      ,SMIS,1
 Lis_Curr           ,SMIS,2
 Lis_Sec Vltg Drop  ,SMIS,3
 Lis_Sec Curr       ,SMIS,4
 Lis_Power          ,NMIS,1
 Lis_Appl src (real),NMIS,2
 Lis_Appl src (imag),NMIS,3
  Def_*PAR(_z4)
 Fld_0
  Typ_Lab
  Prm_      (See Table 4.xx-3 in Elements Manual for sequence numbers.)
!
Cmd_)*CSET,8,11
K_CM(STRUCTRL*circ)
P_CM(LINPLUS*ELECMAG)
Fld_0
Typ_Sep
Fld_0
Prm_Optionally specify the -
Fld_2
Prm_[FORCE]  Force results are
Typ_LIS_OPTIONB
LIS_Total force     ,4
LIS_Static only     ,1
LIS_Damping only    ,2
LIS_Inertia only    ,3
Def_*GET(common,,cpst26,,int,1226)
Fld_3
P_FL(LINPLUS)
K_FL(lsdyna)
Prm_[SHELL]  Location for shell elem
Typ_LIS_OPTIONB
LIS_Top layer       ,1
LIS_Middle layer    ,2
LIS_Bottom layer    ,3
Def_*GET(common,,cpst26,,int,1224)
!
Fld_4
P_FL(LINPLUS+ed)
K_FL(lsdyna)
Prm_[LAYERP26]  Layer results are from
Typ_LIS_RADIOB
LIS_Max failure crit,1
LIS_Specified layer ,0
Def_*PAR(_z3)
!
Fld_5
P_FL(LINPLUS+ed)
K_FL(lsdyna)
Prm_         Specified layer number
Typ_int
Def_*PAR(_z2)
Cmd_)/GO
Fld_0
 K_FL(LSDYNA)
 Typ_Sep
Cal_Fnc_ESOL_SNB
:E END
:! 
:N Fnc_ESOL_SNAe
:S   1046,   590,   449
:T Command
:C )! Fnc_ESOL_SNAe
:C )/NOPR
:C )*GET,_z2,CPAR,10
:C )*IF,_z2,EQ,1,THEN
:C )*CSET,11,11,FCMAX
:C )*ENDIF
:C )*GET,_z3,CPAR,8
:C )*IF,_z3,EQ,1,THEN
:C )*CSET,8,8,STATIC
:C )*ELSEIF,_z3,EQ,2,THEN
:C )*CSET,8,8,DAMP
:C )*ELSEIF,_z3,EQ,3,THEN
:C )*CSET,8,8,INERT
:C )*ELSEIF,_z3,EQ,4,THEN
:C )*CSET,8,8,TOTAL
:C )*ENDIF
:C )*GET,_z4,CPAR,9
:C )*IF,_z4,EQ,1,THEN
:C )*CSET,9,9,TOP
:C )*ELSEIF,_z4,EQ,2,THEN
:C )*CSET,9,9,MID
:C )*ELSEIF,_z4,EQ,3,THEN
:C )*CSET,9,9,BOT
:C )*ENDIF
:C )/GO
:A Element Results
:D Define Element Results Variable
Inp_P
Cmd_)/GO
Cmd_FORCE
K_CM(STRUCTRL)
P_CM(LINPLUS*ELECMAG)
 Fld_2
  Typ_Def_*CPAR(8)
Cmd_SHELL
K_CM(STRUCTRL+lsdyna)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(9)
Cmd_LAYERP26
K_CM(STRUCTRL+lsdyna)
P_CM(LINPLUS+ed)
 Fld_2
  Typ_Def_*CPAR(11)
Cmd_ESOL
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_ 
 Fld_5
  Typ_Def_*CPAR(5)
 Fld_6
  Typ_Def_*CPAR(6)
 Fld_7
  Typ_Def_*CPAR(4)
Cmd_)/NOPR
Cmd_)DEFINE
Cmd_)STAT,,,, ,,,,1
Cmd_)/GO
:E END
:! 
:N Fnc_ESOL_SNB
:S   1044,   588,   449
:T Command
:C )! Fnc_ESOL_SNB
:C )/NOPR
:C )*GET,_z2,CPAR,10
:C )*IF,_z2,EQ,1,THEN
:C )*CSET,11,11,FCMAX
:C )*ENDIF
:C )*GET,_z3,CPAR,8
:C )*IF,_z3,EQ,1,THEN
:C )*CSET,8,8,STATIC
:C )*ELSEIF,_z3,EQ,2,THEN
:C )*CSET,8,8,DAMP
:C )*ELSEIF,_z3,EQ,3,THEN
:C )*CSET,8,8,INERT
:C )*ELSEIF,_z3,EQ,4,THEN
:C )*CSET,8,8,TOTAL
:C )*ENDIF
:C )*GET,_z4,CPAR,9
:C )*IF,_z4,EQ,1,THEN
:C )*CSET,9,9,TOP
:C )*ELSEIF,_z4,EQ,2,THEN
:C )*CSET,9,9,MID
:C )*ELSEIF,_z4,EQ,3,THEN
:C )*CSET,9,9,BOT
:C )*ENDIF
:C )/GO
:A Element Results
:D Define Element Results Variable
Inp_P
Cmd_)/GO
Cmd_FORCE
K_CM(STRUCTRL)
P_CM(LINPLUS*ELECMAG)
 Fld_2
  Typ_Def_*CPAR(8)
Cmd_SHELL
K_CM(STRUCTRL+lsdyna)
P_CM(LINPLUS)
 Fld_2
  Typ_Def_*CPAR(9)
Cmd_LAYERP26
K_CM(STRUCTRL+lsdyna)
P_CM(LINPLUS+ed)
 Fld_2
  Typ_Def_*CPAR(11)
Cmd_ESOL
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_ 
 Fld_5
  Typ_Def_*CPAR(5)
 Fld_6
  Typ_Def_*CPAR(6)
 Fld_7
  Typ_Def_*CPAR(4)
Cmd_)/NOPR
Cmd_)DEFINE
Cmd_)STAT,,,, ,,,,1
Cmd_)/GO
:E END
:! 
:N Fnc_ESOL_SNe
:S   2154,   348,  1799
:T Command
:C )! Fnc_ESOL_SNe
:C )/NOPR
:C )*GET,_z2,common,,cpst26,,int,1225
:C )*IF,_z2,LT,0,THEN
:C )_z3=1
:C )*ELSE
:C )_z3=0
:C )*ENDIF
:C )*GET,_z4,common,,cpst26,,chr4,_z1+420
:C )*GET,_z5,common,,cpst26,,chr4,_z1+631
:C )/GO
:A Elem res by seq no.
:D Define Element Results by Seq No.
:H Hlp_UI_esol
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,4
 Fld_0
  Typ_LAB
  Prm_[ESOL]  Define  Element Results Variable by Sequence No.
 Fld_2
  Prm_NVAR  Ref number of variable
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Prm_ELEM  Element number
  Typ_INT
  Def_*GET(COMMON,,CPST26,,INT,_z1)
 Fld_5
  Typ_CHAR
  Prm_Name  User-specified label
  Def_*GET(COMMON,,CPST26,,CHAR,_z1)
Cmd_)*CSET,5,7
 Fld_2
 K_FL(circ)
  Prm_Item  Data item
  Typ_LIS
  LIS_SMISC,SMIS
  LIS_NMISC,NMIS
  LIS_LS   ,LS
  LIS_LEPEL,LEPE
  LIS_LEPTH,LEPT
  LIS_LEPPL,LEPP
  LIS_LEPCR,LEPC
  LIS_NLIN ,NLIN
  LIS_LBFE ,LBFE
  Def_*PAR(_z4)
 Fld_3
 K_FL(circ)
  Prm_Comp  Sequence number
  Typ_Int
  Def_*PAR(_z5)
 Fld_2
 K_FL(CIRC)
 Prm_Item,Comp  Data Item 
 Typ_Lis
 Lis_Vltg Drop      ,SMIS,1
 Lis_Curr           ,SMIS,2
 Lis_Sec Vltg Drop  ,SMIS,3
 Lis_Sec Curr       ,SMIS,4
 Lis_Power          ,NMIS,1
 Lis_Appl src (real),NMIS,2
 Lis_Appl src (imag),NMIS,3
  Def_*PAR(_z4)
 Fld_0
  Typ_Lab
  Prm_      (See Table 4.xx-3 in Elements Manual for sequence numbers.)
!
Cmd_)*CSET,8,11
K_CM(STRUCTRL*circ)
P_CM(LINPLUS*ELECMAG)
Fld_0
Typ_Sep
Fld_0
Prm_Optionally specify the -
Fld_2
Prm_[FORCE]  Force results are
Typ_LIS_OPTIONB
LIS_Total force     ,4
LIS_Static only     ,1
LIS_Damping only    ,2
LIS_Inertia only    ,3
Def_*GET(common,,cpst26,,int,1226)
Fld_3
P_FL(LINPLUS)
K_FL(lsdyna)
Prm_[SHELL]  Location for shell elem
Typ_LIS_OPTIONB
LIS_Top layer       ,1
LIS_Middle layer    ,2
LIS_Bottom layer    ,3
Def_*GET(common,,cpst26,,int,1224)
!
Fld_4
P_FL(LINPLUS+ed)
K_FL(lsdyna)
Prm_[LAYERP26]  Layer results are from
Typ_LIS_RADIOB
LIS_Max failure crit,1
LIS_Specified layer ,0
Def_*PAR(_z3)
!
Fld_5
P_FL(LINPLUS+ed)
K_FL(lsdyna)
Prm_         Specified layer number
Typ_int
Def_*PAR(_z2)
Cmd_)/GO
Fld_0
 K_FL(LSDYNA)
 Typ_Sep
Cal_Fnc_ESOL_SNAe
:E END
:! 
:N Fnc_ESOLe
:S   3316,  3281,    28
:T Command
:C )! Fnc_ESOLe
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,11
:C )*GET,_z2,common,,cpst26,,int,1225
:C )*IF,_z2,LT,0,THEN
:C )_z3=1
:C )*ELSE
:C )_z3=0
:C )*ENDIF 
:C )*DEL,_zc
:C )*DIM,_zc,char,160,2
:C )*GET,_z9,COMMON,,CPST26,,CHAR,_z1  ! node
:C )_zc(150)=_z9
:C )*GET,_z4,common,,cpst26,,chr4,_z1+420
:C )*GET,_z5,common,,cpst26,,chr4,_z1+631
:C )*SET,_zc(1,1),'TOP','MID','BOT','STATIC','DAMP','INERT','TOTAL'
:C )*SET,_zc(8,1),'S','S','S','S','S','S','S','S','S'
:C )*SET,_zc(8,2),'X','Y','Z','XY','YZ','XZ','1','2','3'
:C )*SET,_zc(17,1),'S'
:C )*SET,_zc(17,2),'INT'
:C )*SET,_zc(18,1),'S','EPEL','EPEL','EPEL','EPEL','EPEL'
:C )*SET,_zc(18,2),'EQV','X','Y','Z','XY','YZ'
:C )*SET,_zc(24,1),'EPEL'
:C )*SET,_zc(24,2),'XZ'
:C )*SET,_zc(25,1),'EPEL','EPEL','EPEL','EPEL','EPEL','EPPL'
:C )*SET,_zc(25,2),'1','2','3','INT','EQV','X'
:C )*SET,_zc(31,1),'EPPL','EPPL','EPPL','EPPL','EPPL','EPPL'
:C )*SET,_zc(31,2),'Y','Z','XY','YZ','XZ','1'
:C )*SET,_zc(37,1),'EPPL','EPPL','EPPL','EPPL','EPCR','EPCR'
:C )*SET,_zc(37,2),'2','3','INT','EQV','X','Y'
:C )*SET,_zc(43,1),'EPCR','EPCR','EPCR','EPCR','EPTH','EPTH'
:C )*SET,_zc(43,2),'Z','XY','YZ','XZ','X','Y'
:C )*SET,_zc(49,1),'EPTH','EPTH','EPTH','EPTH'
:C )*SET,_zc(49,2),'Z','XY','YZ','XZ'
:C )*SET,_zc(53,1),'EPTH','EPTH','EPTH','EPTH','EPTH','NL'
:C )*SET,_zc(53,2),'1','2','3','INT','EQV','SEPL'
:C )*SET,_zc(59,1),'NL','NL','NL','NL','NL','TG'
:C )*SET,_zc(59,2),'SRAT','HPRE','EPEQ','PSV','PLWK','X'
:C )*SET,_zc(65,1),'TG'
:C )*SET,_zc(65,2),'Y'
:C )*SET,_zc(66,1),'TG','TG','TF','TF','TF','TF','PG','PG'
:C )*SET,_zc(66,2),'Z','SUM','X','Y','Z','SUM','X','Y'
:C )*SET,_zc(74,1),'PG','PG','EF','EF','EF','EF','D','D'
:C )*SET,_zc(74,2),'Z','SUM','X','Y','Z','SUM','X','Y'
:C )*SET,_zc(82,1),'D'
:C )*SET,_zc(82,2),'Z'
:C )*SET,_zc(83,1),'D','H','H','H','H','B','B','B','B'
:C )*SET,_zc(83,2),'SUM','X','Y','Z','SUM','X','Y','Z','SUM'
:C )*SET,_zc(92,1),'FMAG','FMAG','FMAG','FMAG','F','F','F','M'
:C )*SET,_zc(92,2),'X','Y','Z','SUM','X','Y','Z','X'
:C )*SET,_zc(100,1),'M','M','HEAT ','FLOW ','AMPS ','FLUX ','VF'
:C )*SET,_zc(100,2),'Y','Z',' ',' ',' ',' ','VF'
:C )*SET,_zc(107,1),'VF','VF','CSG','CSG','CSG','SENE ','JHEA '
:C )*SET,_zc(107,2),'Y','Z','X','Y','Z',' ',' '
:C )*SET,_zc(114,1),'KENE ','JS','JS','JS','VOLU ','BFE','EPTO'
:C )*SET,_zc(114,2),'KENE ','X','Y','Z',' ','TEMP','X'
:C )*SET,_zc(121,1),'EPTO','EPTO','EPTO','EPTO','EPTO','EPTO'
:C )*SET,_zc(121,2),'Y','Z','XY','YZ','XZ','1'
:C )*SET,_zc(127,1),'EPTO','EPTO','EPTO','EPTO'
:C )*SET,_zc(127,2),'2','3','INT','EQV'
:C )*SET,_zc(131,1),'TENE'
:C )*SET,_zc(131,2),' '
:C )*SET,_zc(132,1),'EFFS'
:C )*SET,_zc(132,2),'TOTS'
:C )*SET,_zc(133,1),'CONT','CONT','CONT','CONT','CONT','CONT'
:C )*SET,_zc(133,2),'STAT','PENE','PRES','SFRI','STOT','SLID'
:C )*SET,_zc(139,1),'EPCR','EPCR','EPCR','EPCR','EPCR'
:C )*SET,_zc(139,2),'1','2','3','INT','EQV'
:C )*SET,_zc(144,1),'CONT','CONT'
:C )*SET,_zc(144,2),'GAP',FLUX'
:C )*SET,_zc(146,1),'CONT','CONT'
:C )*SET,_zc(146,2),'CNOS','FPRS'
:C )_z7=0
:C )_z99=146
:C )*DO,_z7,1,_z99
:C )/NOPR
:C )*IF,_zc(_z7,1),EQ,_z4,THEN
:C )*IF,_zc(_z7,2),EQ,_z5,EXIT
:C )*ENDIF
:C )*ENDDO
:C )/GO
:A Element Results
:D Define Element Results Variable
:K #(POST26)
:H Hlp_UI_esol
Inp_P
Cmd_)!
Cal_Fnc_ESOL1e
:E END
:! 
:N Fnc_ESOLp1
:S    267,   119,   141
:T Command
:A Elemental Data
:D Define Elemental Data
:K #(POST26)
:H Hlp_C_ESOL
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z10
 Fld_2
  Prm_[ESOL] Pick element for time history
  Typ_ELEM
  Min_0
  Cnt_1
  Pfm_2
Cmd_)/GO
Cal_Fnc_ESOLp2
:E END
:! 
:N Fnc_ESOLp2
:S    256,   111,   138
:T Command
:A Nodal Data
:D Define Nodal Data
:K #(POST26)
:H Hlp_C_ESOL
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z11
 Fld_2
  Prm_[NSOL] Pick node for time history
  Typ_NODE
  Min_0
  Cnt_1
  Pfm_2
Cmd_)/GO
Cal_Fnc_ESOL1A
:E END
:! 
:N Fnc_ESORT
:S    632,   133,   492
:T Command
:C )! Fnc_ESORT
:A    Sort Elems
:D Sort Elements
:H Hlp_C_ESORT
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_ESORT
 Fld_0
  Typ_Lab
  Prm_[ESORT]  Sort Elements
 Fld_2
  Typ_Def_ETAB
 Fld_4
  Prm_ORDER  Order in which to sort
  Typ_LIS_OPTIONB
   LIS_Descending order,0
   LIS_Ascending order ,1
 Fld_5
  Prm_KABS   Sort on absolute value?
  Typ_LOGI,No              ,Yes
 Fld_6
  Prm_NUMB   Number of elems for sort
  Typ_int
  Def_Blank
 Fld_3
  Prm_Item,Comp  Sort elems based on -
  Typ_LIS_OPTIONB
   LIS_*READ,ETAB
 Fld_0
  Typ_Lab
  Prm_           - selected element table item
:E END
:! 
:N Fnc_ESSOLV
:S   1147,   216,   924
:T Cmd
:C )! Fnc_ESSOLV
:C )/NOPR
:C )KEYW,dimen,0
:C )KEYW,solid,0
:C )/GO
:A    Elec/struc
:D    Electrostatic/structural solution macro
:K #(edgeelc*NOFILTER)
:H Hlp_C_ESSOLV
Cmd_)/NOPR
Cmd_)KEYW,dimen
 Fld_0
  Typ_Lab
  Prm_[ESSOLV]  Electrostatic/structural solution macro
 Fld_2
  Prm_DIMN  Model dimensionality
  Typ_Lis_RadioB
  Lis_2D,0
  Lis_3D,1
  Def_0
Cmd_)KEYW,solid
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Is mesh attached to solid model?
  Typ_Logi,No,Yes
  Def_1
Cmd_)*SET,_z1
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Electrostatic region morph mesh option
 Fld_2
  Prm_RMSHKY Remesh option key
  Typ_Lis_RadioB
  Lis_Morph or Remesh,0
  Lis_Remesh only    ,1
  Lis_Morph only     ,2
  Lis_No morph/remesh,-1
  Def_0
Cmd_)*SET,_z9
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Electrostatics Reuse Option Key
 Fld_2
  Prm_RUSEKY    For first solution use
  Typ_Lis_RadioB
  Lis_Base geometry  ,1
  Lis_Morphed geom.  ,2
  Def_1
Cmd_)*SET,_z8
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Structural Restart Key
 Fld_2
  Prm_RESTKY   Use restart procedure?
  Typ_Logi,No,Yes
  Def_0
Cmd_)/GO
Cal_Fnc_ESSOLV_0
:E End
:! 
:N Fnc_ESSOLV_0
:S   1731,   201,  1523
:T Cmd
:C )! Fnc_ESSOLV
:C )/NOPR
:C )KEYW,elcnv,0
:C )KEYW,stcnv,0
:C )/GO
:D    Electrostatic/structural solution macro
:K #(edgeelc*NOFILTER)
:H Hlp_C_ESSOLV
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_0
  Typ_Lab
  Prm_        Titles of predefined physics files:
 Fld_2
  Prm_ELECTIT  Electrostatic Title
  Typ_Lis_OptionB
    Lis_*READ,TITL
Cmd_)*CSET,2,2
 Fld_2
  Prm_STRUTIT  Structural Title
  Typ_Lis_OptionB
    Lis_*READ,TITL
 Fld_0
  Typ_Sep
Cmd_)*CSET,3,3
 Fld_0
  Typ_Lab
  K_LN(SOLID+dimen)
  Prm_       AREA Component of Morph Region
  K_LN(SOLID+DIMEN)
  Prm_       VOLUME Component of Morph Region
  K_LN(solid)
  Prm_       ELEMENT Component of Morph Region
 Fld_2
  Prm_MCOMP  Morph Region Component
  Typ_Lis_OptionB
    Lis_*READ,CM
 Fld_0
  Typ_Sep
Cmd_)*CSET,4,4
 K_CM(SOLID)
 Fld_0
  Typ_Lab
  K_LN(SOLID+dimen)
  Prm_       LINE Component Excluded from Morphing
  K_LN(SOLID+DIMEN)
  Prm_       AREA Component Excluded from Morphing
 Fld_2
  Prm_XCOMP  Exclude Component
  Typ_Lis_OptionB
    Lis_*READ,CM
    Lis_
 Fld_0
  Typ_Sep
Cmd_)KEYW,elcnv
 Fld_2
  Prm_Electrostatic convergence
  Typ_Logi,Off,ON
  Def_1
Cmd_)*SET,_z2
 Fld_2
  Prm_ELECTOL  Tolerance value
  Typ_Real
  Def_0.005
Cmd_)KEYW,stcnv
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Structural convergence
  Typ_Logi,Off,ON
  Def_1
Cmd_)*SET,_z3
 Fld_2
  Prm_STRUTOL  Tolerance value
  Typ_Real
  Def_0.005
Cmd_)*SET,_z4
 Fld_0
  Typ_Sep
 Fld_2
  Prm_MXLOOP  Maximum number of loops
  Typ_Int
  Def_100
Cmd_)*CSET,5,5
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_       ELEMENT Component for Initial Stress File
 Fld_2
  Prm_EISCOMP     Element Component
  Typ_Lis_OptionB
    Lis_*READ,CM
    Lis_
Cmd_)/GO
Cal_Fnc_ESSOLV_7
:E End
:! 
:N Fnc_ESSOLV_1
:S    814,   283,   524
:T Command
:C )/NOPR
:C )keyw,nofiel4,0
:C )keyw,nofiel5,0
:C )*if,_zc(4),eq,' ',then
:C )keyw,nofiel4,1
:C )*endif
:C )*if,_zc(5),eq,' ',then
:C )keyw,nofiel5,1
:C )*endif
:C )/GO
:C )! Fnc_ESSOLV_1
:D Coupling solution macro
:H Hlp_C_ESSOLV
Inp_P
Cmd_ESSOLV
 Fld_2
  Typ_Def_*STR('%_zc(1)%')
 Fld_3
  Typ_Def_*STR('%_zc(2)%')
 Fld_4
  K_LN(dimen)
  Typ_Def_2
  K_LN(DIMEN)
  Typ_Def_3
 Fld_5
  Typ_Def_*PAR(_z1)
 Fld_6
  Typ_Def_*STR('%_zc(3)%')
 Fld_7
 K_FL(nofiel4)
  Typ_Def_*STR('%_zc(4)%')
 Fld_8
  K_LN(ELCNV)
  Typ_Def_*PAR(_z2)
  K_LN(elcnv)
  Typ_Def_-1
 Fld_9
  K_LN(STCNV)
  Typ_Def_*PAR(_z3)
  K_LN(stcnv)
  Typ_Def_-1
 Fld_10
  Typ_Def_*PAR(_z4)
 Fld_12
  Typ_Def_*PAR(_z9)
 Fld_13
  Typ_Def_*PAR(_z8)
 Fld_14
 K_FL(nofiel5)
  Typ_Def_*STR('%_zc(5)%')
:E END
:! 
:N Fnc_ESSOLV_7
:S    567,   102,   458
:T Cmd
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,5,1,1
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_zc(1)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(1)
  Dlm_'
 Fld_4
  Typ_Lab
Cmd_)*SET,_zc(2)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(2)
  Dlm_'
 Fld_4
  Typ_Lab
Cmd_)*SET,_zc(3)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(3)
  Dlm_'
 Fld_4
  Typ_Lab
Cmd_)*SET,_zc(4)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(4)
  Dlm_'
 Fld_4
  Typ_Lab
Cmd_)*SET,_zc(5)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(5)
  Dlm_'
 Fld_4
  Typ_Lab
Cmd_)/GO
Cal_Fnc_ESSOLV_1
:E End
:! 
:N Fnc_ESTIF
:S    360,   185,   168
:T Command
:C )! Fnc_ESTIF
:A    StiffnessMult
:D Stiffness Matrix Multiplier for Killed Elements
:K #(PREP7*SOLUTION)
:P (FULL_ANS)
:H Hlp_C_ESTIF
Inp_NoApply
Cmd_ESTIF
 Fld_2
  Prm_[ESTIF]  [K] matrix multiplier -
  Typ_REAL
  Def_*GET(common,,deadcm,,real,1)
 Fld_0
  Typ_Lab
  Prm_         - for killed elements
:E END
:! 
:N Fnc_ESURF
:S    639,   166,   466
:T Command
:C )! Fnc_ESURF
:C )/NOPR
:C )*DEL,_z1
:C )*SET,_z1,1
:C )/GO
:A    Surf to Surf
:D Mesh Free Surfaces
:H Hlp_C_ESURF
Inp_NoApply
Cmd_)*CSET,1,2
 Fld_0
  Typ_Lab
  Prm_[ESURF]  Overlay Elements on Faces of Existing Elements
 Fld_2
  Prm_Tlab   Surface element form
  Typ_LIS_OptionB
  LIS_Top surface     ,TOP
  LIS_Bottom surface  ,BOT
  LIS_Normal reverse,  REV
 Fld_3
  Prm_Shape  Base shape of TARGE170s
  Typ_LIS_OptionB
  LIS_Same as target  ," "
  LIS_3D Line         ,LINE
  LIS_Point           ,POIN
Cal_Fnc_ESURF_2,2,ES,TOP
Cal_Fnc_ESURF_2,2,ES,BOT
Cal_Fnc_ESURF_3,2,ES,REV
:E END
:! 
:N Fnc_ESURF2
:S    317,   170,   140
:T Cmd_P
:C )! Fnc_ESURF2 ORPHAN
:C )! Nodes for ESURF command
:A On Free Surfaces
:D Mesh Free Surfaces
:K #(PREP7)
:H Hlp_C_ESURF
Inp_P
Cmd_)!
 Fld_5
  Prm_[ESURF]  Pick or enter nodes on the surface to be meshed
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_ESURF
:E END
:! 
:N Fnc_ESURFA
:S    508,   221,   280
:T Cmd_P
:C )! Fnc_ESURFA
:C )/NOPR
:C )keyw,lsurf,0
:C )keyw,asurf,1
:C )keyw,nsurf,0
:C )/GO
:A    Area to Fluid
:D Surface effect for Areas
:K #(pr_struc*PR_THERM)
:H Hlp_C_AFSURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,area
! Exclude_from_paths
Cmd_ASEL
Fld_5
 Prm_[AFSURF] Pick or enter area for surface elements
 Typ_Area
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,area
! Exclude_from_paths
Cmd_CMSEL,,_Y
Cmd_)/GO
Cal_Fnc_ESURFL_T
:E END
:! 
:N Fnc_ESURFL
:S    508,   221,   280
:T Cmd_P
:C )! Fnc_ESURFL
:C )/NOPR
:C )keyw,lsurf,1
:C )keyw,asurf,0
:C )keyw,nsurf,0
:C )/GO
:A    Line to Fluid
:D Surface effect for Lines
:K #(pr_struc*PR_THERM)
:H Hlp_C_LFSURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,line
! Exclude_from_paths
Cmd_LSEL
Fld_5
 Prm_[LFSURF] Pick or enter line for surface elements
 Typ_Line
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,line
! Exclude_from_paths
Cmd_CMSEL,,_Y
Cmd_)/GO
Cal_Fnc_ESURFL_T
:E END
:! 
:N Fnc_ESURFLA
:S    505,    50,   448
:T Command
Inp_P
K_LN(LSURF+asurf+nsurf)
Cmd_LFSURF
K_LN(ASURF+lsurf+nsurf)
Cmd_AFSURF
K_LN(NSURF+asurf+lsurf)
Cmd_NDSURF
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def__Y1
  Dlm_'
 Fld_4
  Typ_Lab
 Fld_5
  Dlm_'
 Fld_6
  Typ_Def__Y2
  Dlm_'
 Fld_7
  Typ_Lab
 Fld_8
  K_FL(NSURF+asurf+lsurf)
  Typ_Def_*PAR(_z1)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
! Exclude_from_paths
Cmd_CMDELE,_Y2
Cmd_)/GO
:E END
:! 
:N Fnc_ESURFL_T
:S    406,   133,   266
:T Cmd_P
:C )! Fnc_ESURFL
:D Target Lines from Fluid
:K #(pr_struc*PR_THERM)
:H Hlp_C_LFSURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,line
! Exclude_from_paths
Cmd_LSEL
Fld_5
 Prm_[LFSURF] Pick or enter target line 
 Typ_Line
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y2,line
! Exclude_from_paths
Cmd_CMSEL,,_Y
Cmd_)/GO
Cal_Fnc_ESURFLA
:E END
:! 
:N Fnc_ESURFN
:S    508,   221,   280
:T Cmd_P
:C )! Fnc_ESURFN
:C )/NOPR
:C )keyw,lsurf,0
:C )keyw,asurf,0
:C )keyw,nsurf,1
:C )/GO
:A    Node to Fluid
:D Surface Effect for Nodes
:K #(pr_struc*PR_THERM)
:H Hlp_C_NDSURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,node
! Exclude_from_paths
Cmd_NSEL
Fld_5
 Prm_[NDSURF] Pick or enter Node for surface elements
 Typ_Node
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,node
! Exclude_from_paths
Cmd_CMSEL,,_Y
Cmd_)/GO
Cal_Fnc_ESURFN_T
:E END
:! 
:N Fnc_ESURFN1
:S    432,   146,   279
:T Cmd_P
:C )! Fnc_ESURFN1
:A    Extra Node
:D Surface effect Nodes
:K #(pr_struc*PR_THERM)
:H Hlp_C_ESURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,node
! Exclude_from_paths
Cmd_NSEL
Fld_5
 Prm_[ESURF] Pick or enter node for surface elements
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,node
! Exclude_from_paths
Cmd_CMSEL,,_Y
Cmd_)/GO
Cal_Fnc_ESURFT_1
:E END
:! 
:N Fnc_ESURFN2
:S    439,   153,   279
:T Cmd_P
:C )! Fnc_ESURFN2
:C )/NOPR
:C )_z9=0
:C )/GO
:A    No extra Node
:D Surface effect Nodes
:H Hlp_C_ESURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,node
! Exclude_from_paths
Cmd_NSEL
Fld_5
 Prm_[ESURF] Pick or enter node for surface elements
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,node
! Exclude_from_paths
Cmd_CMSEL,,_Y
Cmd_)/GO
Cal_Fnc_ESURFT_2
:E END
:! 
:N Fnc_ESURFNO
:S    256,   111,   138
:T Command
:C )!Fnc_ESURFNO
:D Surface Effect for Nodes
:H Hlp_C_NDSURF
Cmd_)/NOPR
Cmd_)*SET,_z1
  Fld_2
  Prm_DIMN  Model dimensionality
  Typ_Lis_RadioB
  Lis_2D,2
  Lis_3D,3
  Def_2
Cmd_)/GO
Cal_Fnc_ESURFLA
:E END
:! 
:N Fnc_ESURFN_T
:S    413,   138,   268
:T Cmd_P
:C )! Fnc_ESURFN_T
:D Target Elements from Fluid
:K #(pr_struc*PR_THERM)
:H Hlp_C_NDSURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,elem
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[NDSURF] Pick or enter target element
 Typ_Elem
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y2,elem
! Exclude_from_paths
Cmd_CMSEL,,_Y
Cmd_)/GO
Cal_Fnc_ESURFNO
:E END
:! 
:N Fnc_ESURFT_1
:S    265,   120,   138
:T Cmd_P
:C )! Fnc_ESURFT_1
:A    Surf Effect
:D Pick Extra Node
:H Hlp_C_ESURF
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9
 Fld_2
  Prm_[ESURF] Pick or enter extra node
  Typ_NODE
  Min_1
  Cnt_1
  Pfm_2
Cmd_)/GO
Cal_Fnc_ESURFT_2
:E END
:! 
:N Fnc_ESURFT_2
:S    283,    51,   225
:T Command
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y1
Cmd_)/GO
Cmd_ESURF
 Fld_2
  Typ_Def_*PAR(_z9)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_ESURF_175
:S    303,   174,   122
:T Command
:C )! Fnc_ESURF_175
:C )/NOPR
:C )*DEL,_z1
:C )*SET,_z1,2
:C )/GO
:A    Surf to Surf
:D Mesh Free Surfaces
:H Hlp_C_ESURF
Inp_NoApply
Cmd_)*CSET,1,2
 Fld_0
  Typ_Lab
  Prm_[ESURF]  Overlay Elements on Faces of Existing Elements
Cal_Fnc_ESURF_2
:E END
:! 
:N Fnc_ESURF_2
:S    486,   124,   355
:T Command
:C )! Fnc_ESURF_2
:A    On Free Surf
:D Mesh Free Surfaces
:H Hlp_C_ESURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,NODE
! Exclude_from_paths
Cmd_NSEL
 Fld_5
  Prm_[ESURF]  Pick or enter node for contact elements
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cmd_)!
 Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_ESURF_5,2,EQ,1,7
Cal_Fnc_ESURF_575,2,EQ,2,7
:E END
:! 
:N Fnc_ESURF_22
:S    174,   125,    42
:T Command
:C )! Fnc_ESURF_2
:A    On Free Surf
:D Mesh Free Surfaces
:H Hlp_C_ESURF
Inp_P
Cmd_ESURF
 Fld_3
  Typ_Def_*CPAR(1)
:E END
:! 
:N Fnc_ESURF_3
:S    415,   124,   284
:T Command
:C )! Fnc_ESURF_3
:A    On Free Surf
:D Mesh Free Surfaces
:H Hlp_C_ESURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
 Fld_5
  Prm_[ESURF]  Pick or enter elements to be reversed
  Typ_ELEM
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_ESURF_4
:E END
:! 
:N Fnc_ESURF_4
:S    408,   124,   277
:T Command
:C )! Fnc_ESURF_4
:A    On Free Surf
:D Mesh Free Surfaces
:H Hlp_C_ESURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y1
! Exclude_from_paths
Cmd_)/GO
Cmd_ESURF
 Fld_3
  Typ_Def_*CPAR(1)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
! Exclude_from_paths
!Cmd_)/REP
Cmd_)/GO
:E END
:! 
:N Fnc_ESURF_5
:S    434,   124,   303
:T Command
:C )! Fnc_ESURF_5
:A    Surf to Surf
:D Mesh Free Surfaces
:H Hlp_C_ESURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y1
! Exclude_from_paths
Cmd_)/GO
Cmd_ESURF
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*CPAR(2)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
! Exclude_from_paths
!Cmd_)/REP
Cmd_)/GO
:E END
:! 
:N Fnc_ESURF_575
:S    386,   128,   251
:T Command
:C )! Fnc_ESURF_575
:A    Surf to Surf
:D Mesh Free Surfaces
:H Hlp_C_ESURF
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y1
! Exclude_from_paths
Cmd_)/GO
Cmd_ESURF
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
! Exclude_from_paths
!Cmd_)/REP
Cmd_)/GO
:E END
:! 
:N Fnc_ESYM
:S    311,   171,   133
:T Cmd_P
:C )! Fnc_ESYM
:C )! Elements  for ESYM command below
:A    Auto Numbered
:D Reflect Elems Auto-Num
:K #(PREP7)
:H Hlp_C_ESYM
Inp_P
Cmd_)!
  Fld_4
  Typ_ELEM
  Prm_[ESYM]  Pick or enter elements to be reflected 
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_ESYM_2
:E END
:! 
:N Fnc_ESYM_2
:S    289,   130,   152
:T Command
:C )! Fnc_ESYM_2
:A Elements
:D Reflect Elems Auto-Num
:K #(PREP7)
:H Hlp_C_ESYM
Cmd_ESYM
 Fld_0
  Typ_Lab
  Prm_[ESYM]  Reflect Elements (Automatically Numbered)
 Fld_3
  Prm_NINC  Node no. increment
  Typ_INT
 Fld_4
  Typ_Def_P51X
:E END
:! 
:N Fnc_ET
:S    277,   141,   129
:T Command
:C )! Fnc_ET
:A Add/Edit/Delete
:D Add/Edit/Delete Element Types
:H Hlp_UI_ElemType
:K #(PREP7)
Inp_P
Cmd_)ETYPE
Cmd_)STAT,,, ,,, ,,1
! Cust_Cal_Fnc_ET_add
! Cust_Cal_Fnc_KEYOPT_nnn[1-180]
! Cust_Cmd_ETDELE
! Cust_Cmd_KEYOPT
:E END
:! 
:N Fnc_ETABLE
:S    192,   126,    59
:T Command
:C )! Fnc_ETABLE
:A Define Table
:D Define Element Table
:H Hlp_UI_P1_Etable
Inp_P
Cmd_)ETABLE,STAT,,, ,,, ,1
! Cust_Cal_Fnc_ETABLE_ADD
:E End
:! 
:N Fnc_ETABLE_ADD
:S  51707,   416, 51266
:T Command
:C )! Fnc_ETABLE_ADD
:C )/NOPR
:C )*get,_z1,common,,cpost1,,int,408
:C )keyw,kyavpr,_z1
:C )_z1='  '
:C )!
:C )maxlayer = 0
:C )*GET,maxlayer,ACTIVE,,DOF,LTEM
:C )*DO,i,1,32
:C )keyw,layer%i%,0
:C )*ENDDO
:C )*DO,i,1,maxlayer
:C )keyw,layer%i%,1
:C )*ENDDO
:C )/GO
:A Element Table
:D Define Additional Element Table Items
:K #(POST1+RESULTS)
:H Hlp_UI_etableadd
Cmd_AVPRIN
K_CM(STRUCTRL)
 Fld_2
  Typ_Def_*GET(COMMON,,CPOST1,,INT,1)
 Fld_3
  Prm_[AVPRIN]  Eff NU for EQV strain
  Typ_REAL
  K_LN(KYAVPR)
  Def_*GET(COMMON,,CPOST1,,REAL,565)
!
Cmd_ETABLE
 Fld_0
  Typ_Lab
  Prm_[ETABLE]  Define Additional Element Table Items
 Fld_2
  Prm_Lab        User label for item
  Typ_CHAR
  Def_*PAR(_z1)
 Fld_3
  K_FL((STRUCTRL)+multifld+lsdyna)
  Prm_Item,Comp  Results data item
  Typ_IDX
P_LN(LINPLUS)
IDX_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS)
IDX_DOF solution    ,              UY,U,Y
P_LN(LINPLUS)
IDX_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS)
IDX_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTZ,ROT,Z
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,1st principal S1,S,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,X-dir'n  EPTT  X,EPTT,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,Y-dir'n  EPTT  Y,EPTT,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,Z-dir'n  EPTT  Z,EPTT,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,XY-shear EPTT XY,EPTT,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,YZ-shear EPTT YZ,EPTT,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,XZ-shear EPTT XZ,EPTT,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,1st prin EPTT  1,EPTT,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,2nd prin EPTT  2,EPTT,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,3rd prin EPTT  3,EPTT,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,Intensty EPTTINT,EPTT,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,vonMises EPTTEQV,EPTT,EQV
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Nodal force data,Struct force  FX,F,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Nodal force data,              FY,F,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Nodal force data,              FZ,F,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Nodal force data,Struct moment MX,M,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Nodal force data,              MY,M,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Nodal force data,              MZ,M,Z
!
P_LN(LINPLUS*ELECMAG)
K_LN(lsdyna)
IDX_Energy          ,Strain enrg SENE,SENE,
P_LN(LINPLUS*ELECMAG)
K_LN(lsdyna)
IDX_Energy          ,Artif enrg  AENE,AENE,
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Energy          ,Kinetc enrg KENE,KENE,
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Error estimation,StruErrEnrg SERR,SERR,
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Error estimation,Strs deviat SDSG,SDSG,
!
K_LN(lsdyna)
IDX_Geometry        ,Elem volume VOLU,VOLU,
K_LN(lsdyna)
IDX_Geometry        ,Elem loc   CENTX,CENT,X
K_LN(lsdyna)
IDX_Geometry        ,           CENTY,CENT,Y
K_LN(lsdyna)
IDX_Geometry        ,           CENTZ,CENT,Z
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Optimization    ,Topological TOPO,TOPO
!
IDX_By sequence num ,"SMISC,"
IDX_By sequence num ,"NMISC,"
IDX_By sequence num ,"LS,"
K_LN(lsdyna)
IDX_By sequence num ,"LEPEL,"
K_LN(lsdyna)
IDX_By sequence num ,"LEPTH,"
K_LN(lsdyna)
IDX_By sequence num ,"LEPPL,"
K_LN(lsdyna)
IDX_By sequence num ,"LEPCR,"
K_LN(lsdyna)
IDX_By sequence num ,"NLIN,"
K_LN(lsdyna)
IDX_By sequence num ,"LBFE,"
K_LN(lsdyna)
IDX_By sequence num ,"SURF,"
!
 Fld_3
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Item,Comp  Results data item
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  K_LN(laytherm)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
!
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!
P_LN(THERMAL)
K_LN(laytherm)
IDX_Nodal force data,Heat flow   HEAT,HEAT,
K_LN(THERMAL+LAYTHERM+LAYER1)
IDX_Nodal force data,Heat flow   HBOT,HBOT,
K_LN(THERMAL+LAYTHERM+LAYER3)
IDX_Nodal force data,Heat flow    HE2,HE2,
K_LN(THERMAL+LAYTHERM+LAYER4)
IDX_Nodal force data,Heat flow    HE3,HE3,
K_LN(THERMAL+LAYTHERM+LAYER5)
IDX_Nodal force data,Heat flow    HE4,HE4,
K_LN(THERMAL+LAYTHERM+LAYER6)
IDX_Nodal force data,Heat flow    HE5,HE5,
K_LN(THERMAL+LAYTHERM+LAYER7)
IDX_Nodal force data,Heat flow    HE6,HE6,
K_LN(THERMAL+LAYTHERM+LAYER8)
IDX_Nodal force data,Heat flow    HE7,HE7,
K_LN(THERMAL+LAYTHERM+LAYER9)
IDX_Nodal force data,Heat flow    HE8,HE8,
K_LN(THERMAL+LAYTHERM+LAYER10)
IDX_Nodal force data,Heat flow    HE9,HE9,
K_LN(THERMAL+LAYTHERM+LAYER11)
IDX_Nodal force data,Heat flow    HE10,HE10,
K_LN(THERMAL+LAYTHERM+LAYER12)
IDX_Nodal force data,Heat flow    HE11,HE11,
K_LN(THERMAL+LAYTHERM+LAYER13)
IDX_Nodal force data,Heat flow    HE12,HE12,
K_LN(THERMAL+LAYTHERM+LAYER14)
IDX_Nodal force data,Heat flow    HE12,HE13,
K_LN(THERMAL+LAYTHERM+LAYER15)
IDX_Nodal force data,Heat flow    HE14,HE14,
K_LN(THERMAL+LAYTHERM+LAYER16)
IDX_Nodal force data,Heat flow    HE15,HE15,
K_LN(THERMAL+LAYTHERM+LAYER17)
IDX_Nodal force data,Heat flow    HE16,HE16,
K_LN(THERMAL+LAYTHERM+LAYER18)
IDX_Nodal force data,Heat flow    HE17,HE17,
K_LN(THERMAL+LAYTHERM+LAYER19)
IDX_Nodal force data,Heat flow    HE18,HE18,
K_LN(THERMAL+LAYTHERM+LAYER20)
IDX_Nodal force data,Heat flow    HE19,HE19,
K_LN(THERMAL+LAYTHERM+LAYER21)
IDX_Nodal force data,Heat flow    HE20,HE20,
K_LN(THERMAL+LAYTHERM+LAYER22)
IDX_Nodal force data,Heat flow    HE21,HE21,
K_LN(THERMAL+LAYTHERM+LAYER23)
IDX_Nodal force data,Heat flow    HE22,HE22,
K_LN(THERMAL+LAYTHERM+LAYER24)
IDX_Nodal force data,Heat flow    HE23,HE23,
K_LN(THERMAL+LAYTHERM+LAYER25)
IDX_Nodal force data,Heat flow    HE24,HE24,
K_LN(THERMAL+LAYTHERM+LAYER26)
IDX_Nodal force data,Heat flow    HE25,HE25,
K_LN(THERMAL+LAYTHERM+LAYER27)
IDX_Nodal force data,Heat flow    HE26,HE26,
K_LN(THERMAL+LAYTHERM+LAYER28)
IDX_Nodal force data,Heat flow    HE27,HE27,
K_LN(THERMAL+LAYTHERM+LAYER29)
IDX_Nodal force data,Heat flow    HE28,HE28,
K_LN(THERMAL+LAYTHERM+LAYER30)
IDX_Nodal force data,Heat flow    HE29,HE29,
K_LN(THERMAL+LAYTHERM+LAYER31)
IDX_Nodal force data,Heat flow    HE30,HE30,
K_LN(THERMAL+LAYTHERM+LAYER32)
IDX_Nodal force data,Heat flow    HE31,HE31,
K_LN(THERMAL+LAYTHERM+LAYER2)
IDX_Nodal force data,Heat flow   HTOP,HTOP,
!
P_LN(THERMAL)
IDX_Energy          ,Therm enrg  TENE,TENE,
!
P_LN(THERMAL)
IDX_Error estimation,TherErrEnrg TERR,TERR,
P_LN(THERMAL)
IDX_Error estimation,Grad deviat TDSG,TDSG,
!
IDX_Geometry        ,Elem volume VOLU,VOLU,
IDX_Geometry        ,Elem loc   CENTX,CENT,X
IDX_Geometry        ,           CENTY,CENT,Y
IDX_Geometry        ,           CENTZ,CENT,Z
!
IDX_By sequence num ,"SMISC,"
IDX_By sequence num ,"NMISC,"
!
 Fld_3
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  Prm_Item,Comp  Results data item
  Typ_IDX
P_LN(ELECMAG)
IDX_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
IDX_DOF solution    ,MagVectPoten  AX,A,X
P_LN(ELECMAG)
IDX_DOF solution    ,              AY,A,Y
P_LN(ELECMAG)
IDX_DOF solution    ,              AZ,A,Z
P_LN(THERMAL*ELECMAG)
IDX_DOF solution    ,Elec poten  VOLT,VOLT,
P_LN(ELECMAG)
IDX_DOF solution    ,EMF drop     EMF,EMF,
P_LN(ELECMAG)
IDX_DOF solution    ,Current     CURR,CURR,
!
P_LN(ELECMAG)
IDX_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,           EFSUM,EF,SUM
!
P_LN(ELECMAG)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
IDX_Nodal force data,         FMAGSUM,FMAG,SUM
P_LN(ELECMAG)
IDX_Nodal force data,Mag flux    FLUX,FLUX,
P_LN(ELECMAG)
IDX_Nodal force data,Curr segmt  CSGX,CSG,X
P_LN(ELECMAG)
IDX_Nodal force data,            CSGY,CSG,Y
P_LN(ELECMAG)
IDX_Nodal force data,            CSGZ,CSG,Z
P_LN(THERMAL*ELECMAG)
IDX_Nodal force data,Elec currnt AMPS,AMPS,
!
P_LN(ELECMAG)
IDX_Current Density ,Total        JTX,JT,X
P_LN(ELECMAG)
IDX_Current Density ,             JTY,JT,Y
P_LN(ELECMAG)
IDX_Current Density ,             JTZ,JT,Z
P_LN(ELECMAG)
IDX_Current Density ,           JTSUM,JT,SUM
P_LN(ELECMAG)
IDX_Current Density ,Cpl'd Source JSX,JS,X
P_LN(ELECMAG)
IDX_Current Density ,             JSY,JS,Y
P_LN(ELECMAG)
IDX_Current Density ,             JSZ,JS,Z
P_LN(ELECMAG)
IDX_Current Density ,           JSSUM,JS,SUM
!
P_LN(ELECMAG)
IDX_Reynold's Number,Magnetic     MRE,MRE,
!
P_LN(LINPLUS*ELECMAG)
IDX_Energy          ,Elec energy SENE,SENE,
!
P_LN(LINPLUS*ELECMAG)
IDX_Joule Heat      ,Joule heat JHEAT,JHEAT,
!
IDX_Geometry        ,Elem volume VOLU,VOLU,
IDX_Geometry        ,Elem loc   CENTX,CENT,X
IDX_Geometry        ,           CENTY,CENT,Y
IDX_Geometry        ,           CENTZ,CENT,Z
!
IDX_By sequence num ,"SMISC,"
IDX_By sequence num ,"NMISC,"
!
 Fld_3
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item,Comp  Results data item
  Typ_IDX
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
K_LN(laytherm)
IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
P_LN(FULL_ANS)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
IDX_Flux & gradient ,           PGSUM,PG,SUM
!
P_LN(FULL_ANS)
IDX_Nodal force data,Fluid force  VFX,VF,X
P_LN(FULL_ANS)
IDX_Nodal force data,             VFY,VF,Y
P_LN(FULL_ANS)
IDX_Nodal force data,             VFZ,VF,Z
P_LN(FULL_ANS)
IDX_Nodal force data,Flow rate   FLOW,FLOW,
P_LN(THERMAL)
K_LN(laytherm)
IDX_Nodal force data,Heat flow   HEAT,HEAT,
K_LN(THERMAL+LAYTHERM+LAYER1)
IDX_Nodal force data,Heat flow   HBOT,HBOT,
K_LN(THERMAL+LAYTHERM+LAYER3)
IDX_Nodal force data,Heat flow    HE2,HE2,
K_LN(THERMAL+LAYTHERM+LAYER4)
IDX_Nodal force data,Heat flow    HE3,HE3,
K_LN(THERMAL+LAYTHERM+LAYER5)
IDX_Nodal force data,Heat flow    HE4,HE4,
K_LN(THERMAL+LAYTHERM+LAYER6)
IDX_Nodal force data,Heat flow    HE5,HE5,
K_LN(THERMAL+LAYTHERM+LAYER7)
IDX_Nodal force data,Heat flow    HE6,HE6,
K_LN(THERMAL+LAYTHERM+LAYER8)
IDX_Nodal force data,Heat flow    HE7,HE7,
K_LN(THERMAL+LAYTHERM+LAYER9)
IDX_Nodal force data,Heat flow    HE8,HE8,
K_LN(THERMAL+LAYTHERM+LAYER10)
IDX_Nodal force data,Heat flow    HE9,HE9,
K_LN(THERMAL+LAYTHERM+LAYER11)
IDX_Nodal force data,Heat flow    HE10,HE10,
K_LN(THERMAL+LAYTHERM+LAYER12)
IDX_Nodal force data,Heat flow    HE11,HE11,
K_LN(THERMAL+LAYTHERM+LAYER13)
IDX_Nodal force data,Heat flow    HE12,HE12,
K_LN(THERMAL+LAYTHERM+LAYER14)
IDX_Nodal force data,Heat flow    HE12,HE13,
K_LN(THERMAL+LAYTHERM+LAYER15)
IDX_Nodal force data,Heat flow    HE14,HE14,
K_LN(THERMAL+LAYTHERM+LAYER16)
IDX_Nodal force data,Heat flow    HE15,HE15,
K_LN(THERMAL+LAYTHERM+LAYER17)
IDX_Nodal force data,Heat flow    HE16,HE16,
K_LN(THERMAL+LAYTHERM+LAYER18)
IDX_Nodal force data,Heat flow    HE17,HE17,
K_LN(THERMAL+LAYTHERM+LAYER19)
IDX_Nodal force data,Heat flow    HE18,HE18,
K_LN(THERMAL+LAYTHERM+LAYER20)
IDX_Nodal force data,Heat flow    HE19,HE19,
K_LN(THERMAL+LAYTHERM+LAYER21)
IDX_Nodal force data,Heat flow    HE20,HE20,
K_LN(THERMAL+LAYTHERM+LAYER22)
IDX_Nodal force data,Heat flow    HE21,HE21,
K_LN(THERMAL+LAYTHERM+LAYER23)
IDX_Nodal force data,Heat flow    HE22,HE22,
K_LN(THERMAL+LAYTHERM+LAYER24)
IDX_Nodal force data,Heat flow    HE23,HE23,
K_LN(THERMAL+LAYTHERM+LAYER25)
IDX_Nodal force data,Heat flow    HE24,HE24,
K_LN(THERMAL+LAYTHERM+LAYER26)
IDX_Nodal force data,Heat flow    HE25,HE25,
K_LN(THERMAL+LAYTHERM+LAYER27)
IDX_Nodal force data,Heat flow    HE26,HE26,
K_LN(THERMAL+LAYTHERM+LAYER28)
IDX_Nodal force data,Heat flow    HE27,HE27,
K_LN(THERMAL+LAYTHERM+LAYER29)
IDX_Nodal force data,Heat flow    HE28,HE28,
K_LN(THERMAL+LAYTHERM+LAYER30)
IDX_Nodal force data,Heat flow    HE29,HE29,
K_LN(THERMAL+LAYTHERM+LAYER31)
IDX_Nodal force data,Heat flow    HE30,HE30,
K_LN(THERMAL+LAYTHERM+LAYER32)
IDX_Nodal force data,Heat flow    HE31,HE31,
K_LN(THERMAL+LAYTHERM+LAYER2)
IDX_Nodal force data,Heat flow   HTOP,HTOP,
!
P_LN(LINPLUS*ELECMAG)
IDX_Energy          ,Flow energy SENE,SENE,
!
IDX_Geometry        ,Elem volume VOLU,VOLU,
IDX_Geometry        ,Elem loc   CENTX,CENT,X
IDX_Geometry        ,           CENTY,CENT,Y
IDX_Geometry        ,           CENTZ,CENT,Z
!
IDX_By sequence num ,"SMISC,"
IDX_By sequence num ,"NMISC,"
!
 Fld_3
  K_FL(CFD+lsdyna)
  Prm_Item,Comp  Results data item
  Typ_IDX
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(FLOTRAN)
IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
P_LN(FLOTRAN)
IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
P_LN(THERMAL*FLOTRAN)
K_LN(laytherm)
IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
P_LN(FLOTRAN)
IDX_Other quantities,Density     DENS,DENS,
P_LN(FLOTRAN)
IDX_Other quantities,Viscosity   VISC,VISC,
P_LN(FLOTRAN)
IDX_Other quantities,Conductivit COND,COND,
P_LN(FLOTRAN)
IDX_Other quantities,Eff Viscos  EVIS,EVIS,
P_LN(FLOTRAN)
IDX_Other quantities,Eff Conduct ECON,ECON,
P_LN(FLOTRAN)
IDX_Other quantities,Total temp  TTOT,TTOT,
P_LN(FLOTRAN)
IDX_Other quantities,Strm func2D STRM,STRM,
P_LN(FLOTRAN)
IDX_Other quantities,PressurCoef PCOE,PCOE,
P_LN(FLOTRAN)
IDX_Other quantities,Mach number MACH,MACH,
P_LN(FLOTRAN)
IDX_Other quantities,Total pres  PTOT,PTOT,
P_LN(FLOTRAN)
IDX_Other quantities,Heat flux   HFLU,HFLU,
P_LN(FLOTRAN)
IDX_Other quantities,Film coeff  HFLM,HFLM,
P_LN(FLOTRAN)
IDX_Other quantities,Turb law Y+ YPLU,YPLU,
P_LN(FLOTRAN)
IDX_Other quantities,Wall shear  TAUW,TAUW,
!
IDX_Geometry        ,Elem loc   CENTX,CENT,X
IDX_Geometry        ,           CENTY,CENT,Y
IDX_Geometry        ,           CENTZ,CENT,Z
!
 Fld_3
  K_FL(DIFFUSN+multifld)
  Prm_Item,Comp  Results data item
  Typ_IDX
IDX_DOF solution    ,Concentration CONC,CONC
IDX_Flux & gradient ,Diffusn flux DFX,DF,X
IDX_Flux & gradient ,             DFY,DF,Y
IDX_Flux & gradient ,             DFZ,DF,Z
IDX_Flux & gradient ,           DFSUM,DF,SUM
IDX_Flux & gradient ,Concent grad CGX,CG,X
IDX_Flux & gradient ,             CGY,CG,Y
IDX_Flux & gradient ,             CGZ,CG,Z
IDX_Flux & gradient ,           CGSUM,CG,SUM
IDX_Strain-diffusion,X-dir'n  EPDI  X,EPDI,X
IDX_Strain-diffusion,Y-dir'n  EPDI  Y,EPDI,Y
IDX_Strain-diffusion,Z-dir'n  EPDI  Z,EPDI,Z
IDX_Strain-diffusion,XY-shear EPDI XY,EPDI,XY
IDX_Strain-diffusion,YZ-shear EPDI YZ,EPDI,YZ
IDX_Strain-diffusion,XZ-shear EPDI XZ,EPDI,XZ
IDX_Strain-diffusion,1st prin EPDI  1,EPDI,1
IDX_Strain-diffusion,2nd prin EPDI  2,EPDI,2
IDX_Strain-diffusion,3rd prin EPDI  3,EPDI,3
IDX_Strain-diffusion,Intensty EPDIINT,EPDI,INT
IDX_Strain-diffusion,vonMises EPDIEQV,EPDI,EQV
IDX_Nodal force data,Diffsn rate RATE,RATE,
!
 Fld_3
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID*LSDYNA))
  Prm_Item,Comp  Results data item
  Typ_IDX
P_LN(LINPLUS)
IDX_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS)
IDX_DOF solution    ,              UY,U,Y
P_LN(LINPLUS)
IDX_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS)
IDX_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTZ,ROT,Z
P_LN(THERMAL*FLOTRAN)
K_LN(lsdyna+laytherm)
IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+lsdyna+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,MagScalPoten MAG,MAG
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,MagVectPoten  AX,A,X
K_LN(LSDYNA+elecmag)
IDX_DOF solution    ,Acceleration  AX,A,X
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AY,A,Y
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AZ,A,Z
P_LN(THERMAL*ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,Elec poten  VOLT,VOLT,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,EMF drop     EMF,EMF,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,Current     CURR,CURR,
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN*FULL_ANS)
K_LN(lsdyna)
IDX_DOF solution    ,Pressure    PRES,PRES,
K_LN(DIFFUSN)
IDX_DOF solution    ,Concentration CONC,CONC
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,1st principal S1,S,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,X-dir'n  EPTT  X,EPTT,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,Y-dir'n  EPTT  Y,EPTT,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,Z-dir'n  EPTT  Z,EPTT,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,XY-shear EPTT XY,EPTT,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,YZ-shear EPTT YZ,EPTT,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,XZ-shear EPTT XZ,EPTT,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,1st prin EPTT  1,EPTT,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,2nd prin EPTT  2,EPTT,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,3rd prin EPTT  3,EPTT,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,Intensty EPTTINT,EPTT,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-mech+thrm,vonMises EPTTEQV,EPTT,EQV
!
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!
K_LN(DIFFUSN)
IDX_Flux & gradient ,Diffusn flux DFX,DF,X
K_LN(DIFFUSN)
IDX_Flux & gradient ,             DFY,DF,Y
K_LN(DIFFUSN)
IDX_Flux & gradient ,             DFZ,DF,Z
K_LN(DIFFUSN)
IDX_Flux & gradient ,           DFSUM,DF,SUM
K_LN(DIFFUSN)
IDX_Flux & gradient ,Concent grad CGX,CG,X
K_LN(DIFFUSN)
IDX_Flux & gradient ,             CGY,CG,Y
K_LN(DIFFUSN)
IDX_Flux & gradient ,             CGZ,CG,Z
K_LN(DIFFUSN)
IDX_Flux & gradient ,           CGSUM,CG,SUM
!
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,           EFSUM,EF,SUM
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,           PGSUM,PG,SUM
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Nodal force data,Struct force  FX,F,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Nodal force data,              FY,F,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Nodal force data,              FZ,F,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Nodal force data,Struct moment MX,M,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Nodal force data,              MY,M,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Nodal force data,              MZ,M,Z
P_LN(THERMAL)
K_LN(lsdyna+laytherm)
IDX_Nodal force data,Heat flow   HEAT,HEAT,
K_LN(lsdyna+LAYTHERM+LAYER1)
IDX_Nodal force data,Heat flow   HBOT,HBOT,
K_LN(lsdyna+LAYTHERM+LAYER3)
IDX_Nodal force data,Heat flow    HE2,HE2,
K_LN(lsdyna+LAYTHERM+LAYER4)
IDX_Nodal force data,Heat flow    HE3,HE3,
K_LN(lsdyna+LAYTHERM+LAYER5)
IDX_Nodal force data,Heat flow    HE4,HE4,
K_LN(lsdyna+LAYTHERM+LAYER6)
IDX_Nodal force data,Heat flow    HE5,HE5,
K_LN(lsdyna+LAYTHERM+LAYER7)
IDX_Nodal force data,Heat flow    HE6,HE6,
K_LN(lsdyna+LAYTHERM+LAYER8)
IDX_Nodal force data,Heat flow    HE7,HE7,
K_LN(lsdyna+LAYTHERM+LAYER9)
IDX_Nodal force data,Heat flow    HE8,HE8,
K_LN(lsdyna+LAYTHERM+LAYER10)
IDX_Nodal force data,Heat flow    HE9,HE9,
K_LN(lsdyna+LAYTHERM+LAYER11)
IDX_Nodal force data,Heat flow    HE10,HE10,
K_LN(lsdyna+LAYTHERM+LAYER12)
IDX_Nodal force data,Heat flow    HE11,HE11,
K_LN(lsdyna+LAYTHERM+LAYER13)
IDX_Nodal force data,Heat flow    HE12,HE12,
K_LN(lsdyna+LAYTHERM+LAYER14)
IDX_Nodal force data,Heat flow    HE12,HE13,
K_LN(lsdyna+LAYTHERM+LAYER15)
IDX_Nodal force data,Heat flow    HE14,HE14,
K_LN(lsdyna+LAYTHERM+LAYER16)
IDX_Nodal force data,Heat flow    HE15,HE15,
K_LN(lsdyna+LAYTHERM+LAYER17)
IDX_Nodal force data,Heat flow    HE16,HE16,
K_LN(lsdyna+LAYTHERM+LAYER18)
IDX_Nodal force data,Heat flow    HE17,HE17,
K_LN(lsdyna+LAYTHERM+LAYER19)
IDX_Nodal force data,Heat flow    HE18,HE18,
K_LN(lsdyna+LAYTHERM+LAYER20)
IDX_Nodal force data,Heat flow    HE19,HE19,
K_LN(lsdyna+LAYTHERM+LAYER21)
IDX_Nodal force data,Heat flow    HE20,HE20,
K_LN(lsdyna+LAYTHERM+LAYER22)
IDX_Nodal force data,Heat flow    HE21,HE21,
K_LN(lsdyna+LAYTHERM+LAYER23)
IDX_Nodal force data,Heat flow    HE22,HE22,
K_LN(lsdyna+LAYTHERM+LAYER24)
IDX_Nodal force data,Heat flow    HE23,HE23,
K_LN(lsdyna+LAYTHERM+LAYER25)
IDX_Nodal force data,Heat flow    HE24,HE24,
K_LN(lsdyna+LAYTHERM+LAYER26)
IDX_Nodal force data,Heat flow    HE25,HE25,
K_LN(lsdyna+LAYTHERM+LAYER27)
IDX_Nodal force data,Heat flow    HE26,HE26,
K_LN(lsdyna+LAYTHERM+LAYER28)
IDX_Nodal force data,Heat flow    HE27,HE27,
K_LN(lsdyna+LAYTHERM+LAYER29)
IDX_Nodal force data,Heat flow    HE28,HE28,
K_LN(lsdyna+LAYTHERM+LAYER30)
IDX_Nodal force data,Heat flow    HE29,HE29,
K_LN(lsdyna+LAYTHERM+LAYER31)
IDX_Nodal force data,Heat flow    HE30,HE30,
K_LN(lsdyna+LAYTHERM+LAYER32)
IDX_Nodal force data,Heat flow    HE31,HE31,
K_LN(lsdyna+LAYTHERM+LAYER2)
IDX_Nodal force data,Heat flow   HTOP,HTOP,
!
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,         FMAGSUM,FMAG,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,Mag flux    FLUX,FLUX,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,Curr segmt  CSGX,CSG,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,            CSGY,CSG,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,            CSGZ,CSG,Z
P_LN(THERMAL*ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,Elec currnt AMPS,AMPS,
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Nodal force data,Fluid force  VFX,VF,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Nodal force data,             VFY,VF,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Nodal force data,             VFZ,VF,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Nodal force data,Flow rate   FLOW,FLOW,
K_LN(DIFFUSN)
IDX_Nodal force data,Diffsn rate RATE,RATE,
!
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Current Density ,Total        JTX,TS,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Current Density ,             JTY,TS,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Current Density ,             JTZ,TS,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Current Density ,           JTSUM,JT,SUM
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Current Density ,Cpl'd Source JSX,JS,X
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Current Density ,             JSY,JS,Y
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Current Density ,             JSZ,JS,Z
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Current Density ,           JSSUM,JS,SUM
!
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Reynold's Number,Magnetic     MRE,MRE,
!
P_LN(LINPLUS*ELECMAG)
K_LN(lsdyna)
IDX_Energy          ,Strain enrg SENE,SENE,
P_LN(LINPLUS*ELECMAG)
K_LN(lsdyna)
IDX_Energy          ,Artif enrg  AENE,AENE,
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Energy          ,Kinetc enrg KENE,KENE,
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Energy          ,Plast work  PLWK,NL,PLWK
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Energy          ,PlasStateVar PSV,NL,PSV
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Energy          ,Therm enrg  TENE,TENE,
P_LN(LINPLUS*ELECMAG)
K_LN(lsdyna)
IDX_Energy          ,Mag energy  SENE,SENE,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Energy          ,Mag energy  MENE,MENE,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Energy          ,Mag co-ene  COEN,COEN,
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Energy          ,Inc energy  IENE,IENE,
P_LN(THERMAL*ELECMAG)
K_LN(lsdyna)
IDX_Energy          ,Joule heat JHEAT,JHEAT,
P_LN(LINPLUS*ELECMAG)
K_LN(lsdyna)
IDX_Energy          ,Elec energy SENE,SENE,
P_LN(LINPLUS*ELECMAG)
K_LN(lsdyna)
IDX_Energy          ,Flow energy SENE,SENE,
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Error estimation,StruErrEnrg SERR,SERR,
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Error estimation,TherErrEnrg TERR,TERR,
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Error estimation,Strs deviat SDSG,SDSG,
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Error estimation,Grad deviat TDSG,TDSG,
!
K_LN(lsdyna)
IDX_Geometry        ,Elem volume VOLU,VOLU,
K_LN(lsdyna)
IDX_Geometry        ,Elem loc   CENTX,CENT,X
K_LN(lsdyna)
IDX_Geometry        ,           CENTY,CENT,Y
K_LN(lsdyna)
IDX_Geometry        ,           CENTZ,CENT,Z
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
K_LN(DIFFUSN)
IDX_Strain-diffusion,X-dir'n  EPDI  X,EPDI,X
K_LN(DIFFUSN)
IDX_Strain-diffusion,Y-dir'n  EPDI  Y,EPDI,Y
K_LN(DIFFUSN)
IDX_Strain-diffusion,Z-dir'n  EPDI  Z,EPDI,Z
K_LN(DIFFUSN)
IDX_Strain-diffusion,XY-shear EPDI XY,EPDI,XY
K_LN(DIFFUSN)
IDX_Strain-diffusion,YZ-shear EPDI YZ,EPDI,YZ
K_LN(DIFFUSN)
IDX_Strain-diffusion,XZ-shear EPDI XZ,EPDI,XZ
K_LN(DIFFUSN)
IDX_Strain-diffusion,1st prin EPDI  1,EPDI,1
K_LN(DIFFUSN)
IDX_Strain-diffusion,2nd prin EPDI  2,EPDI,2
K_LN(DIFFUSN)
IDX_Strain-diffusion,3rd prin EPDI  3,EPDI,3
K_LN(DIFFUSN)
IDX_Strain-diffusion,Intensty EPDIINT,EPDI,INT
K_LN(DIFFUSN)
IDX_Strain-diffusion,vonMises EPDIEQV,EPDI,EQV
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
IDX_By sequence num ,"SMISC,"
IDX_By sequence num ,"NMISC,"
IDX_By sequence num ,"LS,"
K_LN(lsdyna)
IDX_By sequence num ,"LEPEL,"
K_LN(lsdyna)
IDX_By sequence num ,"LEPTH,"
K_LN(lsdyna)
IDX_By sequence num ,"LEPPL,"
K_LN(lsdyna)
IDX_By sequence num ,"LEPCR,"
K_LN(lsdyna)
IDX_By sequence num ,"NLIN,"
K_LN(lsdyna)
IDX_By sequence num ,"LBFE,"
K_LN(lsdyna)
IDX_By sequence num ,"SURF,"
!
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_                               (For "By sequence num", enter sequence
 Fld_0
  Typ_Lab
  Prm_                                no. in Selection box.  See Table 4.xx-3
 Fld_0
  Typ_Lab
  Prm_                                in Elements Manual for seq. numbers.)
!
Cmd_)ETABLE,STAT,,, ,,, ,1
:E End_of_Fnc_ETABLE_ADD
:! 
:N Fnc_ETABLE_erase
:S    324,   159,   158
:T Command
:C )! Fnc_ETABLE_erase
:A Erase Table
:D Erase Entire Element Table
:H Hlp_C_ETABLE
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_ETABLE,ERASE
 Fld_0
  Typ_Lab
  Prm_[ETABLE],ERAS   This function will erase the entire
 Fld_0
  Typ_Lab
  Prm_                element table!
:E END
:! 
:N Fnc_ETCHG
:S    576,   135,   434
:T Command
:C )! Fnc_ETCHG
:A Switch Elem Type
:D Switch Elem Type
:K #(PREP7)
:H Hlp_UI_etchgwid
Inp_NoApply
Cmd_ETCHG
 Fld_0
  Typ_Lab
  Prm_[ETCHG]  Switch Element Types Depending on Analysis
 Fld_2
  Prm_Change element type 
  Typ_Lis_OptionB
  Lis_Explic to Implic,ETI
  Lis_Implic to Explic,ITE
  Lis_Thermal to Struc,TTS
  Lis_Struc to Thermal,STT
  Lis_Magnetc to Therm,MTT
  Lis_Fluid to Struct ,FTS
  Lis_Elect to Struct ,ETS
  Lis_Thermal to Expli,TTE
  Lis_No keyopt reset ,' '
 Fld_0
  Typ_Sep
!Cal_Fnc_SETMOD,2,es,ITE
:E END
:! 
:N Fnc_ETCONTROL
:S    755,   359,   389
:T Command
:C )! Fnc_ETCONTROL
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,50
:C )_zc(1)='OFF','SUGG','SET'
:C )_zc(4)='OFF','ON'
:C )*GET,_z1,COMMON,,SPECIALE,,INT,7
:C )*GET,_z2,COMMON,,SPECIALE,,INT,8
:C )/GO
:A Elem Tech Control
:D Remove Added Degrees of Freedom
:K #((PREP7*NOFILTER)
:K (lsdyna)
:H Hlp_C_ETCONTROL
Inp_NoApply
Cmd_ETCONTROL
 Fld_0
  Typ_Lab
  Prm_[ETCONTROL]  Automatic Element Technology Control
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Element Formulation
   Typ_LIS_RadioB
   LIS_Suggest Only ,SUGG
   LIS_Program Chosen,SET
   LIS_Off          ,OFF
   Def_*PAR(_zc(_z1+1))
 Fld_3
  Prm_Degenerate Shape
   Typ_LIS_RadioB
   LIS_On           ,ON
   LIS_Off          ,OFF
   Def_*PAR(_zc(_z2+4))
:E END
:! 
:N Fnc_ET_add
:S  23190,   129, 23054
:T Command
:C )! Fnc_ET_add
:A Add
:D Library of Element Types
:K #(PREP7)
:H Hlp_UI_etadd
Cmd_ET
!
 Fld_0
 K_FL(PR_MULTI+pmethod+lsdyna)
 P_FL(FULL_ANS)
  Typ_Lab
  Prm_Element types for multiple disciplines are shown
!
 Fld_0
 K_FL(PR_STRUC+pr_multi+pmethod+lsdyna)
 P_FL(LINPLUS)
  Typ_Lab
  Prm_Only structural element types are shown
!
 Fld_0
 K_FL(PR_THERM+pr_multi+pmethod+lsdyna)
 P_FL(THERMAL)
  Typ_Lab
  Prm_Only thermal element types are shown
!
 Fld_0
 K_FL(PR_FLUID+pr_multi+pmethod+lsdyna)
 P_FL(FULL_ANS)
  Typ_Lab
  Prm_Only ANSYS fluid element types are shown
!
 Fld_0
 K_FL(PR_ELMAG+pr_multi+pmethod+lsdyna)
 P_FL(ELECMAG)
  Typ_Lab
  Prm_Only electromagnetic element types are shown
!
 Fld_0
 K_FL(PMETHOD+PR_STRUC+lsdyna)
 P_FL(LINPLUS)
  Typ_Lab
  Prm_Only structural p-method element types are shown
!
 Fld_0
 K_FL(PMETHOD+PR_ELMAG+lsdyna)
 P_FL(LINPLUS)
  Typ_Lab
  Prm_Only electric p-method element types are shown
!
 Fld_0
  K_FL(ED*LSDYNA)
  Typ_Lab
  Prm_Only LS-DYNA3D Explicit Dynamics element types are shown
!
 Fld_3
  Prm_Library of Element Types
  Typ_Idx
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP21)
   Idx_Structural Mass ,3D mass       21,MASS21
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP180)
   Idx_           Link ,3D finit stn 180,LINK180
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP11)
   Idx_           Link ,   actuator   11,LINK11
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP188)
   Idx_           Beam ,3D finite strain,BEAM188
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP188)
   Idx_           Beam ,   2 node    188,BEAM188
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP189)
   Idx_           Beam ,   3 node    189,BEAM189
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP288)
   Idx_           Pipe ,3D finite strain,PIPE288
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP288)
   Idx_           Pipe ,   2 node    288,PIPE288
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP289)
   Idx_           Pipe ,   3 node    289,PIPE289
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP290)
   Idx_           Pipe ,   elbow     290,ELBOW290
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP182)
   Idx_           Solid,Quad  4 node 182,PLANE182
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP183)
   Idx_           Solid,      8 node 183,PLANE183
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP185)
   Idx_           Solid,Brick 8 node 185,SOLID185
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP186)
   Idx_           Solid,      20node 186,SOLID186
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP65)
   Idx_           Solid,      concret 65,SOLID65
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP285)
   Idx_           Solid,Tet   4 node 285,SOLID285
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP187)
   Idx_           Solid,      10node 187,SOLID187
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP272)
   Idx_           Solid,Axisym 4node 272,SOLID272
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP273)
   Idx_           Solid,       8node 273,SOLID273
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP25)
   Idx_           Solid,Axi-har 4node 25,PLANE25  
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP83)
   Idx_           Solid,        8node 83,PLANE83
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP181)
   Idx_           Shell,3D     4node 181,SHELL181
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP281)
   Idx_           Shell,       8node 281,SHELL281
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP208)
   Idx_           Shell,Axisym 2node 208,SHELL208
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP209)
   Idx_           Shell,       3node 209,SHELL209
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP28)
   Idx_           Shell,Shear panel   28,SHELL28
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP41)
   Idx_           Shell,Membrane      41,SHELL41
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP61)
   Idx_           Shell,Axi-harmonic  61,SHELL61
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP190)
   Idx_     Solid-Shell,3D finite strain 190,SOLSH190
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP184)
   Idx_      Constraint,Nonlinear MPC 184,MPC184
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP169)
   Idx_Contact         ,2D Target      169,TARGE169
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP171+LINPLUS)
   Idx_Contact         ,   2 nd surf   171,CONTA171
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP171+linplus)
   Idx_Contact         ,   2 nd surf   171,CONTA171,6
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP172+LINPLUS)
   Idx_Contact         ,   3 nd surf   172,CONTA172
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP172+linplus)
   Idx_Contact         ,   3 nd surf   172,CONTA172,6
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP175+LINPLUS)
   Idx_Contact         ,   pt-to-surf  175,CONTA175
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP175+linplus)
   Idx_Contact         ,   pt-to-surf  175,CONTA175,6
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP178)
   Idx_Contact         ,   nd-to-nd    178,CONTA178
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP170)
   Idx_Contact         ,3D Target      170,TARGE170
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP173+LINPLUS)
   Idx_Contact         ,   4 nd surf   173,CONTA173
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP173+linplus)
   Idx_Contact         ,   4 nd surf   173,CONTA173,6
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP174+LINPLUS)
   Idx_Contact         ,   8 nd surf   174,CONTA174
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP174+linplus)
   Idx_Contact         ,   8 nd surf   174,CONTA174,6
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP175+LINPLUS)
   Idx_Contact         ,   pt-to-surf  175,CONTA175
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP175+linplus)
   Idx_Contact         ,   pt-to-surf  175,CONTA175,6
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP176+LINPLUS)
   Idx_Contact         ,   line-line   176,CONTA176
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP176+linplus)
   Idx_Contact         ,   line-line   176,CONTA176,6
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP177+LINPLUS)
   Idx_Contact         ,   line-surf   177,CONTA177
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP177+linplus)
   Idx_Contact         ,   line-surf   177,CONTA177,6
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP178)
   Idx_Contact         ,   nd-to-nd    178,CONTA178
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP192)
   Idx_Gasket          ,2D 4-node    192,INTER192
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP193)
   Idx_Gasket          ,   6-node    193,INTER193
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP194)
   Idx_Gasket          ,3D 16-node   194,INTER194
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP195)
   Idx_Gasket          ,   8-node    195,INTER195
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP202)
   Idx_Cohesive        ,2D 4-node    202,INTER202
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP203)
   Idx_Cohesive        ,   6-node    203,INTER203
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP204)
   Idx_Cohesive        ,3D 16-node   204,INTER204
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP205)
   Idx_Cohesive        ,   8-node    205,INTER205
!
    K_LN(pr_set*PR_MULTI*PR_STRUC*PR_THERM*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP14)
   Idx_Combination     ,Spring-damper 14,COMBIN14
!
    K_LN(pr_set*PR_MULTI*PR_STRUC*PR_THERM*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP39)
   Idx_Combination     ,Nonlin spring 39,COMBIN39
!
    K_LN(pr_set*PR_MULTI*PR_STRUC*PR_THERM*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP40)
   Idx_Combination     ,Combination   40,COMBIN40
!
    K_LN(pr_set*PR_MULTI*PR_STRUC*PR_THERM*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP37)
   Idx_Combination     ,Control elem  37,COMBIN37
!
    K_LN(pr_set*PR_MULTI*PR_STRUC*PR_THERM*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP214)
   Idx_Combination     ,2D Bearing   214,COMBI214
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP179)
   Idx_Combination     ,Pretension   179,PRETS179
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP71)
   Idx_Thermal Mass    ,3D mass       71,MASS71
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP33)
   Idx_        Link    ,3D conduction 33,LINK33
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP34)
   Idx_        Link    ,   convection 34,LINK34
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP31)
   Idx_        Link    ,   radiation  31,LINK31
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP55)
   Idx_        Solid   ,Quad 4node    55,PLANE55
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP77)
   Idx_        Solid   ,     8node    77,PLANE77
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP35)
   Idx_        Solid   ,Triangl 6node 35,PLANE35
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP75)
   Idx_        Solid   ,Axi-har 4node 75,PLANE75
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP78)
   Idx_        Solid   ,        8node 78,PLANE78
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(lsdyna)
    P_LN(OKTYP278)
   Idx_        Solid   ,Brick 8node  278,SOLID278
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(lsdyna)
    P_LN(OKTYP279)
   Idx_        Solid   ,      20node 279,SOLID279
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP70)
   Idx_        Solid   ,      8node   70,SOLID70
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP90)
   Idx_        Solid   ,      20node  90,SOLID90
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP87)
   Idx_        Solid   ,Tet 10node    87,SOLID87
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP131)
   Idx_        Shell   ,3D 4node     131,SHELL131
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP132)
   Idx_        Shell   ,3D 8node     132,SHELL132
!
    K_LN(pr_set*PR_MULTI*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP29)
   Idx_ANSYS Fluid     ,2D acoustic     29,FLUID29
!
    K_LN(pr_set*PR_MULTI*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP30)
   Idx_ANSYS Fluid     ,3D acoustic     30,FLUID30
!
    K_LN(pr_set*PR_MULTI*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP220)
   Idx_ANSYS Fluid     ,   20 node     220,FLUID220
!
    K_LN(pr_set*PR_MULTI*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP221)
   Idx_ANSYS Fluid     ,   10 node tet 221,FLUID221
!
    K_LN(pr_set*PR_MULTI*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP116)
   Idx_ANSYS Fluid     ,3D th-fl   pipe116,FLUID116
!
    K_LN(pr_set*PR_MULTI*PR_FLUID*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP38)
   Idx_ANSYS Fluid     ,Dyn coupling    38,FLUID38
!
    K_LN(pr_set*PR_MULTI*PR_FLUID*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP241)
   Idx_ANSYS Fluid     ,2D hydrostatic 241,HSFLD241
!
    K_LN(pr_set*PR_MULTI*PR_FLUID*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP242)
   Idx_ANSYS Fluid     ,3D hydrostatic 242,HSFLD242
!
    K_LN(pr_set*PR_MULTI*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP129)
   Idx_ANSYS Fluid     ,2D acoustic    129,FLUID129
!
    K_LN(pr_set*PR_MULTI*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP130)
   Idx_ANSYS Fluid     ,3D acoustic    130,FLUID130
!
    K_LN(pr_set*PR_MULTI*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP136)
   Idx_ANSYS Fluid     ,3D Squeeze Film 136,FLUID136
!
    K_LN(pr_set*PR_MULTI*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP138)
   Idx_ANSYS Fluid     ,3D Viscous Link 138,FLUID138
!
    K_LN(pr_set*PR_MULTI*PR_FLUID)+(pmethod)+(lsdyna)
    P_LN(OKTYP139)
   Idx_ANSYS Fluid     ,3D Slide Film   139,FLUID139
!
    K_LN(pr_set*PR_MULTI*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP13+ELECMAG)
   Idx_Magnetic  Vector,  Quad 4 node 13,PLANE13
!
    K_LN(pr_set*PR_MULTI*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP13+elecmag)
   Idx_Magnetic  Vector,  Quad 4 node 13,PLANE13,4
!
    K_LN(pr_set*PR_MULTI*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP233)
   Idx_Magnetic  Vector, Quad 8 node 233,PLANE233
!
    K_LN(pr_set*PR_MULTI*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP53)
   Idx_Magnetic  Vector,  Quad 8 node 53,PLANE53
!
    K_LN(pr_set*PR_MULTI*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP97)
   Idx_Magnetic  Vector, Brick 8 node 97,SOLID97
!
    K_LN(pr_set*PR_MULTI*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP236)
   Idx_Magnetic  Vector,Brick 20node 236,SOLID236
!
    K_LN(pr_set*PR_MULTI*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP237)
   Idx_Magnetic  Vector, Tet 10 node 237,SOLID237
!
    K_LN(pr_set*PR_MULTI*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP96)
   Idx_          Scalar,Scalar Brick  96,SOLID96
!
    K_LN(pr_set*PR_MULTI*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP98)
   Idx_          Scalar,Scalar Tet    98,SOLID98,10
!
    K_LN(pr_set*PR_MULTI*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP36)
   Idx_          Scalar,Scal Curr Src 36,SOURC36
!
    K_LN(pr_set*PR_MULTI*(MAGEDG))+(pmethod)+(lsdyna)
    P_LN(OKTYP236)
   Idx_Magnetic - Edge ,3D Brick     236,SOLID236
!
    K_LN(pr_set*PR_MULTI*(MAGEDG))+(pmethod)+(lsdyna)
    P_LN(OKTYP237)
   Idx_Magnetic - Edge ,3D Tet       237,SOLID237
!
    K_LN(pr_set*PR_DYNA)+(pmethod)
    P_LN(OKTYP160)
   Idx_LS-DYNA Explicit      ,3D Link     160,LINK160
!
    K_LN(pr_set*PR_DYNA)+(pmethod)
    P_LN(OKTYP161)
   Idx_LS-DYNA Explicit      ,3D Beam     161,BEAM161
!
    K_LN(pr_set*PR_DYNA)+(pmethod)
    P_LN(OKTYP162)
   Idx_LS-DYNA Explicit      ,2D Solid    162,PLANE162
!
    K_LN(pr_set*PR_DYNA)+(pmethod)
    P_LN(OKTYP163)
   Idx_LS-DYNA Explicit      ,Thin Shell  163,SHELL163
!
    K_LN(pr_set*PR_DYNA)+(pmethod)
    P_LN(OKTYP164)
   Idx_LS-DYNA Explicit      ,3D Solid    164,SOLID164
!
    K_LN(pr_set*PR_DYNA)+(pmethod)
    P_LN(OKTYP165)
   Idx_LS-DYNA Explicit      ,Sprng-Dampr 165,COMBI165
!
    K_LN(pr_set*PR_DYNA)+(pmethod)
    P_LN(OKTYP166)
   Idx_LS-DYNA Explicit      ,3D Mass     166,MASS166
!
    K_LN(pr_set*PR_DYNA)+(pmethod)
    P_LN(OKTYP167)
   Idx_LS-DYNA Explicit      ,Link        167,LINK167
!
    K_LN(pr_set*PR_DYNA)+(pmethod)
    P_LN(OKTYP168)
   Idx_LS-DYNA Explicit      ,3D Tet-Solid 168,SOLID168
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP121)
   Idx_Electrostatic   ,2D Quad      121,PLANE121
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP122)
   Idx_Electrostatic   ,3D Brick     122,SOLID122
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP123)
   Idx_Electrostatic   ,3D Tet       123,SOLID123
!
    K_LN(pr_set*PR_MULTI*(MAGELC*MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP124)
   Idx_Circuit         ,Circuit      124,CIRCU124
!
    K_LN(pr_set*PR_MULTI*(MAGELC*MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP125)
   Idx_Circuit         ,Circuit      125,CIRCU125
!
    K_LN(pr_set*PR_MULTI*(MAGELC*MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP94)
   Idx_Circuit         ,Circuit       94,CIRCU94
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP68)
   Idx_Elec Conduction ,3D Line       68,LINK68
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP157)
   Idx_Elec Conduction ,Shell 4node  157,SHELL157
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP5)
   Idx_Elec Conduction ,Scalar Brick   5,SOLID5,9
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP98)
   Idx_Elec Conduction ,Scalar Tet    98,SOLID98,9
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP230)
   Idx_Elec Conduction  ,2D Quad      230,PLANE230
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP231)
   Idx_Elec Conduction  ,3D Brick     231,SOLID231
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP232)
   Idx_Elec Conduction  ,3D Tet       232,SOLID232
!
    K_LN(pr_set*PR_MULTI)+(lsdyna)
    P_LN(OKTYP238)
   Idx_Diffusion        ,2D Quad      238,PLANE238
!
    K_LN(pr_set*PR_MULTI)+(lsdyna)
    P_LN(OKTYP239)
   Idx_Diffusion        ,3D Brick     239,SOLID239
!
    K_LN(pr_set*PR_MULTI)+(lsdyna)
    P_LN(OKTYP240)
   Idx_Diffusion        ,3D Tet       240,SOLID240
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP223)
   Idx_Thermal Electric,Quad 8node   223,PLANE223,110
!
    K_LN(pr_set*PR_MULTI*(MAGELC)*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP68)
   Idx_Thermal Electric,3D Line       68,LINK68
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP226)
   Idx_Thermal Electric,Brick 20node 226,SOLID226,110
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP227)
   Idx_Thermal Electric,Tet          227,SOLID227,110
!
    K_LN(pr_set*PR_MULTI*(MAGELC)*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP157)
   Idx_Thermal Electric,Shell 4node  157,SHELL157
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP223)
   Idx_Coupled Field   ,Quad 8node   223,PLANE223,11
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP226)
   Idx_Coupled Field   ,Brick 20node 226,SOLID226,11
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP227)
   Idx_Coupled Field   ,Tet 10node   227,SOLID227,11
!
    K_LN(pr_set*PR_MULTI*(MAGNOD*MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP5)
   Idx_Coupled Field   ,Scalar Brick   5,SOLID5
!
    K_LN(pr_set*PR_MULTI*(MAGNOD*MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP98)
   Idx_Coupled Field   ,Scalar Tet    98,SOLID98
!
    K_LN(pr_set*PR_MULTI*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP13+ELECMAG)
   Idx_Coupled Field   ,Vector Quad   13,PLANE13
!
    K_LN(pr_set*PR_MULTI*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP13+elecmag)
   Idx_Coupled Field   ,Vector Quad   13,PLANE13,4
!
    K_LN(pr_set*PR_MULTI*(MAGNOD*MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP68)
   Idx_Coupled Field   ,3D Line       68,LINK68
!
    K_LN(pr_set*PR_MULTI*(MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP126)
   Idx_Coupled Field   ,Transducer   126,TRANS126
!
    K_LN(pr_set*PR_MULTI*PR_STRUC*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP212)
   Idx_Pore-pressure   ,2D 4 node    212,CPT212
!
    K_LN(pr_set*PR_MULTI*PR_STRUC*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP213)
   Idx_Pore-pressure   ,   8 node    213,CPT213
!
    K_LN(pr_set*PR_MULTI*PR_STRUC*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP215)
   Idx_Pore-pressure   ,3D 8 node    215,CPT215
!
    K_LN(pr_set*PR_MULTI*PR_STRUC*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP216)
   Idx_Pore-pressure   ,3D 20 node   216,CPT216
!
    K_LN(pr_set*PR_MULTI*PR_STRUC*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP217)
   Idx_Pore-pressure   ,3D 10 node   217,CPT217
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP27)
   Idx_User Matrix     ,Mass Matrix   27,MATRIX27,,,2
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP27)
   Idx_User Matrix     ,Stiff Matrix  27,MATRIX27,,,4
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP27)
   Idx_User Matrix     ,Damp Matrix   27,MATRIX27,,,5
!
    K_LN(pr_set*PR_MULTI*PR_STRUC*PR_THERM*PR_FLUID*(MAGNOD*MAGELC))
    K_LN(pmethod)+(lsdyna)
    P_LN(OKTYP50)
   Idx_Superelement    ,Superelement  50,MATRIX50
!
    K_LN(pr_set*PR_MULTI*PR_THERM*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP9)
   Idx_InfiniteBoundary,2D Inf Surf    9,INFIN9
!
    K_LN(pr_set*PR_MULTI*PR_THERM*(MAGNOD*MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP110)
   Idx_InfiniteBoundary,2D Inf Quad  110,INFIN110
!
    K_LN(pr_set*PR_MULTI*PR_THERM*(MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP47)
   Idx_InfiniteBoundary,3D Inf Surf   47,INFIN47
!
    K_LN(pr_set*PR_MULTI*PR_THERM*(MAGNOD*MAGELC))+(pmethod)+(lsdyna)
    P_LN(OKTYP111)
   Idx_InfiniteBoundary,3D Inf Brick 111,INFIN111
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP151)
   Idx_Surface Effect  ,2D thermal   151,SURF151
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP153)
   Idx_Surface Effect  ,2D structural 153,SURF153
!
    K_LN(pr_set*PR_MULTI*PR_THERM)+(pmethod)+(lsdyna)
    P_LN(OKTYP152)
   Idx_Surface Effect  ,3D thermal   152,SURF152
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP154)
   Idx_Surface Effect  ,3D structural 154,SURF154
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP156)
   Idx_Surface Effect  ,3D line load  156,SURF156
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP159)
   Idx_Surface Effect  ,3D axisymm    159,SURF159
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP201)
   Idx_Surface Effect  ,Point follower 201,FOLLW201
!
    K_LN(pr_set*PR_MULTI*(MAGELC*MAGNOD))+(pmethod)+(lsdyna)
    P_LN(OKTYP144)
   Idx_ROM             ,Electro-Stru 144,ROM144
!
   Idx_Not Solved      ,Mesh Facet   200,MESH200
!
   Idx_Not Solved      ,Null Element   0,0
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP42)
   Idx_Archive         ,Solid quad 4 node,PLANE42
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP82)
   Idx_Archive         ,    quad   8 node,PLANE82
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP45)
   Idx_Archive         ,    brick  8 node,SOLID45
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP95)
   Idx_Archive         ,    brick 20 node,SOLID95
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP92)
   Idx_Archive         ,    tet   10 node,SOLID92
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP4)
   Idx_Archive         ,3D elastic beam  ,BEAM4
!
    K_LN(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
    P_LN(OKTYP4)
   Idx_Archive         ,2D pt-to-pt contact,CONTAC12
!
Fld_2
Prm_Element type reference number
Typ_INT
Def_*PAR(_ET_NEXT)
Cmd_)/NOPR
Cmd_)*GET,_ET_NEXT,CMD,0,FIELD,2
Cmd_)_ET_NEXT=_ET_NEXT+1
Cmd_)ETYPE
Cmd_)STAT,,,,,,,,1
Cmd_)/GO
:E End
:! 
:N Fnc_EUSORT
:S    304,   140,   157
:T Command
:C )! Fnc_EUSORT
:A    Unsort Elems
:D Unsort Elements
:H Hlp_C_EUSORT
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_EUSORT
 Fld_0
  Typ_Lab
  Prm_[EUSORT]  This function unsorts elements and restores them to
 Fld_0
  Typ_Lab
  Prm_          original order.
:E END
:! 
:N Fnc_EWRITE
:S    374,   157,   210
:T Command
:C )! Fnc_EWRITE
:C )*SET,_zx,'*'
:A Write Elem File 
:D Write Elements to File
:K #(PREP7)
:H Hlp_C_EWRITE
Cmd_EWRITE
 Fld_0
  Typ_Lab
  Prm_[EWRITE]  Write All Selected Elements to a File
 Fld_2
  Prm_        Name of file
  Typ_FILE_INLINE
  Def_*PAR(_zx)
 Fld_5
  Prm_KAPPND  Append data to file?
  Typ_LOGI,No,Yes
:E End
:! 
:N Fnc_EXP
:S    509,   141,   361
:T Command
:C )! Fnc_EXP
:A Exponentiate
:D Exponentiate Time-History Variables
:K #(POST26)
:H Hlp_C_EXP
Cmd_EXP
Fld_0
Typ_Lab
Prm_[EXP]                  IR = FACTB * EXP(FACTA * IA)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  1st Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_10
Prm_FACTB  2nd Factor
Typ_real
Def_1.0
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_EXPAND
:S    938,   176,   755
:T Cmd
:A    Cyc Expansion
:D Expand Cyclic Symmetry Results
:K (lsdyna)
:K #((POST1+RESULTS)+CYCGEN)
:P (FULL_ANS*PROFS)
:H Hlp_C_EXPAND
Inp_NoApply
Cmd_EXPAND
 Fld_0
  Typ_Lab
  Prm_[EXPAND]  Read-in and Expand Modal Cyclic Symmetry Results 
 Fld_2
  Prm_NREPEAT No. of repetitions
  Typ_Int
  Def_0
 Fld_0
  Typ_Lab
  Prm_          (Use zero or blank to suppress expansion)
 Fld_3
  Typ_Def_MODAL
 Fld_4
  Prm_HINDEX  Harmonic index
  Typ_Int
 Fld_0
  Typ_Lab
  Prm_          (Usually not required)
 Fld_5
  Prm_ICSYS   Coordinate system ID
  Typ_Int
 Fld_0
  Typ_Lab
  Prm_          (Usually not required)
 Fld_6
  Prm_SCTANG   Sector angle
  Typ_Real
 Fld_0
  Typ_Lab
  Prm_          (Usually not required)
 Fld_8
  Prm_PHASE   Phase angle
  Typ_Real
  Def_0
 Fld_0
  Typ_Lab
  Prm_** Use applicable postprocessing functions to review expanded results **
! Exclude_from_paths
Cmd_/EXPAND
:E END
:! 
:N Fnc_EXPASS
:S    482,   199,   276
:T Command
:C )! Fnc_EXPASS
:A ExpansionPass
:D Expansion Pass
:K (lsdyna)
:K #(PREP7*(SOLUTION+lstepgt1))
:K #((spectrum+cfd+edgeelc)*NOFILTER)
:H Hlp_C_EXPASS
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_2
  Prm_[EXPASS]  Expansion pass
  Typ_LOGI,Off,On
  Def_*GET(common,,soptcm,,int,37)
Cmd_)!
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Reduced Order Model Expansion? 
  Typ_LOGI,No,Yes
Cmd_)/GO
Cal_Fnc_EXPASS_0,2,eq,0,3
Cal_Fnc_EXPASS_1,2,eq,1,3
:E END
:! 
:N Fnc_EXPASS_0
:S    151,    88,    56
:T Command
:C )! Fnc_EXPASS_0
:D Expansion Pass
Inp_P
Cmd_EXPASS
 Fld_2
  Typ_Def_*Par(_z2)
Cal_REFRESH
:E END
:! 
:N Fnc_EXPASS_1
:S    530,   179,   344
:T Command
:C )! Fnc_EXPASS_1
:C )/NOPR
:C )_z1='*.rom'
:C )/GO
:A ExpansionPass
:D Expansion Pass for ROM Tool
:K (lsdyna)
:H Hlp_C_RMUSE
Inp_NoApply
Cmd_RMRESU
 Fld_2
  Prm_[RMRESU]  Select ROM Database
  Typ_FILE
  Def_*PAR(_z1)
Cmd_RMUSE
 Fld_2
  Prm_[RMUSE]   ROM Use Pass
  Typ_LOGI,Off,On
  Def_0
 Fld_3
  Prm_Usefil    Name of solution file
  Typ_CHAR
 Fld_0
  Typ_Lab
  Prm_      - created by the ROM use pass (Usefil.RDSP)
Cmd_EXPASS
 Fld_2
  Typ_Def_*Par(_z2)
Cal_REFRESH
:E END
:! 
:N Fnc_EXPSOL_HREX2
:S   1057,   462,   588
:T Command
:C )! Fnc_EXPSOL_HREX2
:C )/NOPR
:C )*GET,_z1,common,,stepcm,,real,16   ! Phase angle (degrees)
:C )*GET,_z2,common,,soptcm,,int,15    ! Phase angle (all)    
:C )*IF,_z2,EQ,1,THEN
:C )_z3='ALL'
:C )*ELSE
:C )_z3=_z1
:C )*ENDIF
:C )/GO
:A    By Time/Freq
:D Expand Single Solution by Time/Frequency
:K #((PREP7*SOLUTION)+((TRNSIENT+full)*(HARMONIC+full)*SUBSTRUC*NOFILTER))
:P (LINPLUS)
:H Hlp_UI_expsolhrx
Inp_NoApply
Cmd_EXPSOL
Fld_0
 Typ_Lab
 Prm_[EXPSOL]  Expand Single Solution by Time/Frequency
 Fld_0
  Typ_Lab
  Prm_Identify the solution to be expanded
 Fld_4
  Prm_TIMFRQ  Time-point/Frequency
  Typ_REAL
 Fld_5
  Prm_Elcalc  Calculate elem results?
  Typ_LOGI,No,Yes
  Def_*GET(common,,stepcm,,int,13)
Fld_0
K_FL(HARMONIC*NOFILTER)
Typ_Sep
Cmd_HREXP
K_CM(HARMONIC*NOFILTER)
 Fld_2
  Prm_[HREXP]  Phase angle (degrees) -
  Typ_Real
  Def_*PAR(_z3)
 Fld_0
  Typ_Lab
  Prm_         - for harmonic analysis
 Fld_0
  Typ_Lab
  Prm_       (Enter ALL to expand both real and imaginary parts)
:E END
:! 
:N Fnc_EXPSOL_HREXP
:S   1141,   457,   677
:T Command
:C )! Fnc_EXPSOL_HREXP
:C )/NOPR
:C )*GET,_z1,common,,stepcm,,real,16   ! Phase angle (degrees)
:C )*GET,_z2,common,,soptcm,,int,15    ! Phase angle (all)    
:C )*IF,_z2,EQ,1,THEN
:C )_z3='ALL'
:C )*ELSE
:C )_z3=_z1
:C )*ENDIF
:C )/GO
:A    By Load Step
:D Expand Single Solution by Load Step
:K #((PREP7*SOLUTION)+((TRNSIENT+full)*(HARMONIC+full)*SUBSTRUC*NOFILTER))
:P (LINPLUS)
:H Hlp_UI_expsolhrx
Inp_NoApply
Cmd_EXPSOL
Fld_0
 Typ_Lab
 Prm_[EXPSOL]  Expand Single Solution by Load Step
 Fld_0
  Typ_Lab
  Prm_Identify the solution to be expanded
 Fld_0
  Prm_LSTEP,SBSTEP
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_*GET(common,,stepcm,,int,29),*GET(common,,stepcm,,int,75)
 Fld_5
  Prm_Elcalc  Calculate elem results?
  Typ_LOGI,No,Yes
  Def_*GET(common,,stepcm,,int,13)
Fld_0
K_FL(HARMONIC*NOFILTER)
Typ_Sep
Cmd_HREXP
K_CM(HARMONIC*NOFILTER)
 Fld_2
  Prm_[HREXP]  Phase angle (degrees) -
  Typ_Real
  Def_*PAR(_z3)
 Fld_0
  Typ_Lab
  Prm_         - for harmonic analysis
 Fld_0
  Typ_Lab
  Prm_       (Enter ALL to expand both real and imaginary parts)
:E END
:! 
:N Fnc_EXTOPT
:S   2128,   525,  1596
:T Command
:C )! Fnc_EXTOPT
:C )/NOPR
:C )KEYW,ETLIST,0
:C )KEYW,RLLIST,0
:C )KEYW,MPLIST,0
:C )KEYW,CSLIST,0
:C )_z1=ETYIQR(0,12)
:C )*IF,_z1,gt,10,then
:C )KEYW,ETLIST,1
:C )*ENDIF
:C )_z2=RLINQR(0,12)
:C )*IF,_z2,gt,10,then
:C )KEYW,RLLIST,1
:C )*ENDIF
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )_z4=CSYIQR(0,12)
:C )*IF,_z4,gt,10,then
:C )KEYW,CSLIST,1
:C )*ENDIF
:C )/GO
:A Elem Ext Opts
:D Element Extrusion Options
:K #(PREP7)
:H Hlp_UI_extopt
Inp_NoApply
Cmd_TYPE
 Fld_0
  Prm_[EXTOPT]    Element Ext Options
 Fld_0
 Typ_Sep
 Fld_2
  Prm_[TYPE]  Element type number
  K_LN(etlist)
  Typ_LIS_OPTIONB
  K_LN(ETLIST)
  Typ_LIS
  LIS_*READ,TYPE
  Def_*GET(ACTIVE,,TYPE)
 Fld_0
 Typ_Sep
Cmd_)/NOPR
Cmd_)*set,_z1
 Fld_2
  Prm_MAT     Material number
  Typ_LIS_OPTIONB
  Lis_Use Default,0
  Lis_From Areas,1
  Def_*GET(COMMON,,CFPRP7,,INT,5)
Cmd_)*set,_z2
 Fld_2
  Prm_[MAT]   Change default MAT
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
  Def_*GET(ACTIVE,,MAT)
 Fld_0
 Typ_Sep
Cmd_)*set,_z3
 Fld_2
  Prm_REAL    Real constant set number
  Typ_LIS_OPTIONB
  Lis_Use Default,0
  Lis_From Areas,1
  Def_*GET(COMMON,,CFPRP7,,INT,6)
Cmd_)*set,_z4
 Fld_2
  Prm_[REAL]  Change Default REAL
  K_LN(rllist)
  Typ_LIS_OPTIONB
  K_LN(RLLIST)
  Typ_LIS
  LIS_*READ,REAL
  Def_*GET(ACTIVE,,REAL)
 Fld_0
 Typ_Sep
Cmd_)*set,_z5
 Fld_2
  Prm_ESYS    Element coordinate sys
  Typ_LIS_OPTIONB
  Lis_Use Default,0
  Lis_From Areas,1
  Def_*GET(COMMON,,CFPRP7,,INT,7)
Cmd_)*set,_z6
 Fld_2
  Prm_[ESYS]  Change Default ESYS
  K_LN(cslist)
  Typ_LIS_OPTIONB
  K_LN(CSLIST)
  Typ_LIS
  LIS_*READ,ESYS
  Def_*GET(ACTIVE,,ESYS)
 Fld_0
  Typ_Sep
Cmd_)/GO
Cmd_EXTOPT,ESIZE
 Fld_0
 Typ_Lab
 Prm_Element sizing options for extrusion
 Fld_2
  Prm_VAL1    No. Elem divs
  Typ_INT
  Def_*GET(COMMON,,CFPRP7,,INT,8)
 Fld_3
  Prm_VAL2    Spacing ratio 
  Typ_REAL
 Def_*GET(COMMON,,CFPRP7,,REAL,366)
 Fld_0
  Typ_Sep
Cmd_EXTOPT,ACLEAR
 Fld_2
 Prm_ACLEAR   Clear area(s) after ext
 Typ_Logi,No, Yes
 Def_*GET(COMMON,,CFPRP7,,INT,9)
Cal_Fnc_EXTOPT2
:E End
:! 
:N Fnc_EXTOPT2
:S    582,   298,   277
:T Command
:C )! Fnc_EXTOPT2
:C )/NOPR
:C )*IF,_z1,eq,1,then
:C )_z7=')!'
:C )*ELSE
:C )_z7='MAT'
:C )*ENDIF
:C )*IF,_z3,eq,1,then
:C )_z8=')!'
:C )*ELSE
:C )_z8='REAL'
:C )*ENDIF
:C )*IF,_z5,eq,1,then
:C )_z9=')!'
:C )*ELSE
:C )_z9='ESYS'
:C )*ENDIF
:C )/GO
Inp_P
Cmd_EXTOPT,ATTR
 Fld_2
 Typ_Def_*PAR(_z1)
 Fld_3
 Typ_Def_*PAR(_z3)
 Fld_4
 Typ_Def_*PAR(_z5)
Cmd_)!
 Fld_1
 Typ_Def_*PAR(_z7)
 Fld_2
 Typ_Def_*PAR(_z2)
Cmd_)!
 Fld_1
 Typ_Def_*PAR(_z8)
 Fld_2
 Typ_Def_*PAR(_z4)
Cmd_)!
 Fld_1
 Typ_Def_*PAR(_z9)
 Fld_2
 Typ_Def_*PAR(_z6)
:E END
:! 
:N Fnc_EXTOPT_vswe
:S    204,   130,    67
:T Command
:C )! Fnc_EXTOPT_vswe
:A     Sweep Opts
:D Volume Sweep Options
:K #(PREP7)
Inp_P
! Cust_Cmd_EXTOPT
Cmd_)~eui,'euidl::mesh::sweepOpts::create'
:E End
:! 
:N Fnc_EXTREM
:S    327,   135,   185
:T Command
:C )! Fnc_EXTREM
:A List Extremes
:D List Extreme Values
:K #(POST26)
:H Hlp_C_EXTREM
Cmd_EXTREM
Fld_0
Typ_Lab
Prm_[EXTREM]  List Extreme Values Within a Range of Variables
Fld_2
Prm_NVAR1,NVAR2  Range of variables
Typ_int2
Fld_3
Prm_NINC         Increment
Typ_int
Def_1
:E END
:! 
:N Fnc_Emiss_aux12
:S    357,   173,   177
:T Command
:C )! Fnc_Emiss_aux12
:A    Emissivities
:D Define Emissivities
:K #(AUX12)
:K (pr_cfd+cfd)
:P (THERMAL)
:H Hlp_C_EMIS
Cmd_EMIS
 Fld_0
  Typ_Lab
  Prm_[EMIS]  Emissivity Specification
 Fld_2
  Prm_MAT    Material number
  Typ_INT
  Def_1
 Fld_3
  Typ_REAL
  Prm_EVALU  Emissivity value
  Def_1.0
:E END
:! 
:N Fnc_EuidlMat
:S    910,   596,   307
:T Command
:C )! Fnc_EuidlMat
:C )/NOPR
:C )keyw,preferr,0
:C )*get,_z1,active,,keyw,,lsdyna
:C )*if,_z1,eq,0,then
:C )*get,_z1,active,,keyw,,pr_dyna
:C )*endif
:C )*get,_z2,active,,keyw,,structrl
:C )! give a message if dyna is chosen but no element type
:C )*if,_z1,eq,1,then
:C )*if,_z2,eq,0,then
:C )keyw,preferr,1
:C )*create,ansuitmp
:C )*msg,ui,
:C )You must specify an explicit dynamics element type &
:C )before you can access the LS-DYNA materials.
:C )*end
:C )/input,ansuitmp
:C )*endif
:C )*endif
:C )/GO
:A Material Models
:D Material Models
Inp_P
! Cust_Cmd_MP
! Cust_Cmd_UIMP
! Cust_Cmd_TB
! Cust_Cmd_MPDATA
! Cust_Cmd_TBPT
! Cust_Cmd_TBDATA
! Cust_Cmd_TBMODIF
! Cust_Cmd_MPTEMP
! Cust_Cmd_TBTEMP
! Cust_Cmd_MPDELE
! Cust_Cmd_TBDELE
! Cust_Cmd_MPCOPY
! Cust_Cmd_TBCOPY
Cmd_)!
Cmd_)~eui,'euidl::material::ModelControl::create'
K_CM(preferr)
Cmd_)!
:E END
:! 
:N Fnc_EuidlSol
:S    954,   162,   785
:T Command
:C )! Fnc_EuidlSol
:A Sol'n Controls
:D Solution Controls
:K ((STATIC*(TRNSIENT+FULL))+lsdyna)
:H Hlp_C_ESSOLV
Inp_P
! Cust_Tab_Basic_ANTYPE
! Cust_Tab_Basic_NLGEOM
! Cust_Tab_Basic_TIME
! Cust_Tab_Basic_AUTOTS
! Cust_Tab_Basic_NSUBST
! Cust_Tab_Basic_DELTIM
! Cust_Tab_Basic_OUTRES
! Cust_Tab_Basic_PSTRES
! Cust_Tab_Transient_TIMINT
! Cust_Tab_Transient_KBC
! Cust_Tab_Transient_ALPHAD
! Cust_Tab_Transient_BETAD
! Cust_Tab_Transient_TRNOPT
! Cust_Tab_Transient_TINTP
! Cust_Tab_Transient_MIDTOL
! Cust_Tab_Sol'n Options_EQSLV
! Cust_Tab_Sol'n Options_RESCONTROL
! Cust_Tab_Nonlinear_LNSRCH
! Cust_Tab_Nonlinear_PRED
! Cust_Tab_Nonlinear_NEQIT
! Cust_Tab_Nonlinear_RATE
! Cust_Tab_Nonlinear_CUTCONTROL
! Cust_Tab_Nonlinear_CNVTOL
! Cust_Tab_Advanced NL_NCNV
! Cust_Tab_Advanced NL_ARCLEN
! Cust_Tab_Advanced NL_ARCTRM
! Cust_Tab_Advanced NL_STABILIZE
Cmd_)~eui,'euidl::solutioncontrol::create'
:E END
:! 
:N Fnc_ExitRout
:S    755,   284,   464
:T Cmd
:C )! Fnc_ExitRout
:C )*CSET,100,101,' ',' '
:C )*CSET,110,117,' ',' ',' ',' ',' ',' ',' ',' '
:C )*CSET,118,124,' ',' ',' ',' ',' ',' ',' '
:C )*CSET,125,132,' ',' ',' ',' ',' ',' ',' ',' '
:C )*CSET,133,139,' ',' ',' ',' ',' ',' ',' '
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)*CSET,100,100,'WARN'
Cmd_)*CSET,110,110,'This function requires that file'
Cmd_)*CSET,111,111,'s currently open be closed. %/  '
Cmd_)*CSET,112,112,'Executing &'
Cmd_)*CSET,113,113,'the function will exit &'
Cmd_)*CSET,116,116
 Fld_2
  Typ_Def_*STR(' %_zc(1,1,2)%%_zc(2,1,2)%%_zc(3,1,2)%')
Cmd_)*CSET,117,117
 Fld_2
  Typ_Def_*STR('%_zc(4,1,2)%%_zc(5,1,2)%%_zc(6,1,2)%%_zc(7,1,2)%')
Cmd_)/GO
Cal_Fnc_Message
Cal_Fnc_%_z9%
:E END
:! 
:N Fnc_Export
:S    443,   169,   267
:T Cmd
:A Export
:D Export IGES File
:C )! Fnc_Export
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,10,3,2
:C )_z9 = 'Export_2'
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_zc(1,1,1),'ANSYS/'
Cmd_)*SET,_zc(1,2,1),'ED'
Cmd_)*SET,_zc(1,3,1),' '
Cmd_)/GO
!
K_LN(begin+prep7)
P_LN(ed)
Cal_Fnc_CHK_ROUT
K_LN(BEGIN*PREP7)
P_LN(ed)
Cal_Fnc_Export_2
K_LN(begin+prep7)
P_LN(ed)
Cal_Fnc_ExitRout
P_LN(ED)
Cal_Fnc_N/A_Prod
:E END
:! 
:N Fnc_Export_2
:S    645,   166,   472
:T Cmd
:A Export IGES File
:C )! Fnc_Export_2
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:D Export IGES File
:H Hlp_UI_export
:P (ed)
K_LN(prep7)
Inp_NoApply
! Exclude_from_paths
Cmd_FINISH
K_CM(prep7+begin)
!
! Exclude_from_paths
Cmd_/PREP7
K_CM(prep7)
 Fld_0
  Typ_Lab
  Prm_[/PREP7][IGESOUT] Write model data in IGES format
!
Cmd_IGESOUT
 Fld_0
 K_FL(PREP7)
  Typ_Lab
  Prm_[IGESOUT] (PREP7)  Write model data in IGES format
 Fld_2
  Prm_Fname   Name of file to write
  Typ_FILE_INLINE
  Def_*PAR(_zx)
 Fld_3
  Prm_Att     Write attributes?
  Typ_LOGI,No,Yes
! Exclude_from_paths
Cmd_FINISH
K_CM(prep7)
:E END
:! 
:N Fnc_ExtPort
:S    160,   140,    13
:T Cmd_N
:C )! Fnc_ExtPort
:A    -Exterior-
:K #(PREP7*SOLUTION)
:K #(EDGEELC*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_FCUM
:S   1101,   391,   703
:T Command
:C )! Fnc_FCUM
:C )/NOPR
:C )*get,_z1,common,,loadcm,,int,2  ! New force values operations key
:C )*IF,_z1,eq,0,then
:C )_z2='REPL'
:C )*ELSEIF,_z1,eq,1,then
:C )_z2='ADD'
:C )*ELSEIF,_z1,eq,-1,then
:C )_z2='IGNO'
:C )*ENDIF
:C )/GO
:A    Forces
:D Replace/Add Setting for Forces
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FCUM
Cmd_DOFSEL,S
 Fld_0
  Typ_Lab
  Prm_[DOFSEL] [FCUM]  Replace/Add Setting for Forces
 Fld_3
  Prm_[DOFSEL]  Forces to be affected
  Typ_MLis
  LIS_*READ,F
  Bnd_0.0,6.0
Cmd_FCUM
 Fld_0
  Prm_[FCUM]
 Fld_2
  Prm_Oper   New force values will
  Typ_LIS_OPTIONB
  LIS_Replace existing,REPL
  LIS_Add to existing ,ADD
  LIS_Be ignored!     ,IGNO
  Def_*PAR(_z2)
 Fld_3
  K_FL(harmonic)
  Prm_RFACT  Scale factor
  Typ_REAL
  Def_*GET(common,,loadcm,,real,3)
 Fld_3
  K_FL(HARMONIC*NOFILTER)
  Prm_RFACT  Scale factr for real part
  Typ_REAL
  Def_*GET(common,,loadcm,,real,3)
 Fld_4
  K_FL(HARMONIC*NOFILTER)
  Prm_IFACT  Scale factr for imag part
  Typ_REAL
  Def_*GET(common,,loadcm,,real,4)
Cmd_DOFSEL,ALL
:E END
:! 
:N Fnc_FCritChek
:S    336,   199,   130
:T Cmd_N
:C )! Fnc_FCritChek
:C )/NOPR
:C )*del,_zpop
:C )*get,_zpop,common,,d3com2,,int,31
:C )/GO
:D Check Failure Criteria
:A Criteria Check
:H Hlp_C_FCCH
Inp_P
! Exclude_from_paths
Cmd_)/NOPR
Cmd_)/UIS,MSGPOP,3
Cmd_)/GO
Cmd_FCCH
Cmd_)/UIS,MSGPOP
 Fld_2
  Typ_Def_*PAR(_zpop)
Cmd_)/GO
:E END
:! 
:N Fnc_FCritDef
:S    481,   230,   244
:T Cmd
:C )! Fnc_FCritDef
:C )/NOPR
:C )KEYW,MPLIST,0
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )/GO
:D Add/Edit Failure Criteria
:A Add/Edit
:H Hlp_C_FC
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_[FC] Define failure criteria
 Fld_0
  Typ_Sep
 Fld_2
  Prm_MAT   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
Cmd_)/NOPR
Cal_Fnc_FCritDef2
:E END
:! 
:N Fnc_FCritDef2
:S    328,   205,   116
:T Cmd
:C )! Fnc_FCritDef2
:C )/NOPR
:C )_z3=0
:C )*GET,_z2,FC,_z1,EXIS
:C )*IF,_z2,gt,0,THEN
:C )KEYW,CRITEXIS,1
:C )*get,_z3,fc,_z1,numt
:C )*ENDIF
:C )!
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z3)
Cmd_)/GO
Cal_Fnc_FCritDef2a,2,ge,2,2
Cal_Fnc_FCritDef2b,2,lt,2,2
:E END
:! 
:N Fnc_FCritDef2a
:S   1497,   174,  1316
:T Cmd
:C )! Fnc_FCritDef2a
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )/GO
:D Add/Edit Failure Criteria
:A Add/Edit
:H Hlp_C_FC
Inp_NoApply
Cmd_)*SET,_zc(1)
 Fld_0
  Typ_Lab
  Prm_[FC] Temperature-dependent failure criteria for material %(I)_z1%
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Item,Comp  Item to be modified
  Typ_IDX
   IDX_Stress          ,Tension    SXTEN,'S','XTEN'
   IDX_Stress          ,           SYTEN,'S','YTEN'
   IDX_Stress          ,           SZTEN,'S','ZTEN'
   IDX_Stress          ,CompressionSXCMP,'S','XCMP'
   IDX_Stress          ,           SYCMP,'S','YCMP'
   IDX_Stress          ,           SZCMP,'S','ZCMP'
   IDX_Stress          ,Shear      SXY  ,'S','XY'
   IDX_Stress          ,           SYZ  ,'S','YZ'
   IDX_Stress          ,           SXZ  ,'S','XZ'
   IDX_Stress          ,Coupling   SXYCP,'S','XYCP'
   IDX_Stress          ,           SYZCP,'S','YZCP'
   IDX_Stress          ,           SXZCP,'S','XZCP'
   IDX_Strain          ,Tension EPELXTEN,'EPEL','XTEN'
   IDX_Strain          ,        EPELYTEN,'EPEL','YTEN'
   IDX_Strain          ,        EPELZTEN,'EPEL','ZTEN'
   IDX_Strain          ,CompressEPELXCMP,'EPEL','XCMP'
   IDX_Strain          ,        EPELYCMP,'EPEL','YCMP'
   IDX_Strain          ,        EPELZCMP,'EPEL','ZCMP'
   IDX_Strain          ,Shear   EPELXY  ,'EPEL','XY'
   IDX_Strain          ,        EPELYZ  ,'EPEL','YZ'
   IDX_Strain          ,        EPELXZ  ,'EPEL','XZ'
Cal_Fnc_FCritDef2a1
:E END
:! 
:N Fnc_FCritDef2a1
:S   2068,   833,  1228
:T Cmd
:C )! Fnc_FCritDef2a1
:C )/NOPR
:C )KEYW,CRITEXIS,0
:C )keyw,shotemp2,0
:C )keyw,shotemp3,0
:C )keyw,shotemp4,0
:C )keyw,shotemp5,0
:C )keyw,shotemp6,0
:C )_z3=0
:C )*GET,_z2,FC,_z1,EXIS
:C )*IF,_z2,gt,0,THEN
:C )KEYW,CRITEXIS,1
:C )*get,_z3,fc,_z1,numt
:C )*ENDIF
:C )!
:C )*if,_z3,ge,2,then
:C )*GET,_temp1,FC,_z1,TEMP,,1
:C )*GET,_temp2,FC,_z1,TEMP,,2
:C )keyw,shotemp2,1
:C )*endif
:C )*if,_z3,ge,3,then
:C )*GET,_temp3,FC,_z1,TEMP,,3
:C )keyw,shotemp3,1
:C )*endif
:C )*if,_z3,ge,4,then
:C )*GET,_temp4,FC,_z1,TEMP,,4
:C )keyw,shotemp4,1
:C )*endif
:C )*if,_z3,ge,5,then
:C )*GET,_temp5,FC,_z1,TEMP,,5
:C )keyw,shotemp5,1
:C )*endif
:C )*if,_z3,ge,6,then
:C )*GET,_temp6,FC,_z1,TEMP,,6
:C )keyw,shotemp6,1
:C )*endif
:C )/GO
:D Add/Edit Failure Criteria
:A Add/Edit
:H Hlp_C_FC
Inp_NoApply
Cmd_FC
 Fld_0
  Typ_Lab
  Prm_[FC] Define failure criteria %_zc(1)%,%_zc(2)%
 Fld_0
  Typ_Lab
  Prm_Criteria applies to material %(I)_z1%
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_zc(1))
 Fld_4
  Typ_Def_*PAR(_zc(2))
 Fld_0
  K_FL(CRITEXIS+SHOTEMP2)
  Typ_Lab
  Prm_   Temperature                  Value
 Fld_5
  K_FL(SHOTEMP2)
  Prm_%_temp1%
  Typ_Real
  K_LN(CRITEXIS)
   Def_*GET(FC,_z1,_zc(1),_zc(2),_temp1)
 Fld_5
  K_FL(shotemp2)
  Prm_Temperature independent criteria
  Typ_Real
  K_LN(CRITEXIS)
   Def_*GET(FC,_z1,_zc(1),_zc(2),_temp1)
 Fld_6
  K_FL(CRITEXIS+SHOTEMP2)
  Prm_%_temp2%
  Typ_Real
   Def_*GET(FC,_z1,_zc(1),_zc(2),_temp2)
 Fld_7
  K_FL(CRITEXIS+SHOTEMP3)
  Prm_%_temp3%
  Typ_Real
   Def_*GET(FC,_z1,_zc(1),_zc(2),_temp3)
 Fld_8
  K_FL(CRITEXIS+SHOTEMP4)
  Prm_%_temp4%
  Typ_Real
   Def_*GET(FC,_z1,_zc(1),_zc(2),_temp4)
 Fld_9
  K_FL(CRITEXIS+SHOTEMP5)
  Prm_%_temp5%
  Typ_Real
   Def_*GET(FC,_z1,_zc(1),_zc(2),_temp5)
 Fld_10
  K_FL(CRITEXIS+SHOTEMP6)
  Prm_%_temp6%
  Typ_Real
   Def_*GET(FC,_z1,_zc(1),_zc(2),_temp6)
Cmd_)/NOPR
Cmd_)KEYW,CRITEXIS,0
Cmd_)keyw,shotemp2,0
Cmd_)keyw,shotemp3,0
Cmd_)keyw,shotemp4,0
Cmd_)keyw,shotemp5,0
Cmd_)keyw,shotemp6,0
Cmd_)/GO
:E END
:! 
:N Fnc_FCritDef2b
:S   1982,   249,  1726
:T Cmd
:C )! Fnc_FCritDef2b
:C )/NOPR
:C )KEYW,CRITEXIS,0
:C )_z3=0
:C )*GET,_z2,FC,_z1,EXIS
:C )*IF,_z2,gt,0,THEN
:C )KEYW,CRITEXIS,1
:C )*ENDIF
:C )/GO
:D Add/Edit Failure Criteria
:A Add/Edit
:H Hlp_C_FC
Inp_NoApply
Cmd_)/NOPR
 Fld_0
  Typ_Lab
  Prm_[FC] Temperature-independent failure criteria for material %(I)_z1%
 Fld_0
  Typ_Sep
Cmd_)*CSET,13,18
 Fld_0
  Typ_Lab
   Prm_                                      X             Y             Z
 Fld_2
  Prm_Strain in Tension
  Typ_REAL3
  K_LN(CRITEXIS)
  Def_*GET(FC,_z1,EPEL,XTEN,0),*GET(FC,_z1,EPEL,YTEN,0),*GET(FC,_z1,EPEL,ZTEN,0)
 Fld_5
  Prm_Strain in Compression
  Typ_REAL3
  K_LN(CRITEXIS)
  Def_*GET(FC,_z1,EPEL,XCMP,0),*GET(FC,_z1,EPEL,YCMP,0),*GET(FC,_z1,EPEL,ZCMP,0)
Cmd_)*CSET,19,21
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
   Prm_                                      XY            YZ            XZ
 Fld_2
  Prm_Strain in Shear
  Typ_REAL3
  K_LN(CRITEXIS)
  Def_*GET(FC,_z1,EPEL,XY,0),*GET(FC,_z1,EPEL,YZ,0),*GET(FC,_z1,EPEL,XZ,0)
 Fld_0
  Typ_Sep
Cmd_)*CSET,1,6
 Fld_0
  Typ_Lab
   Prm_                                      X             Y             Z
 Fld_2
  Prm_Stress in Tension
  Typ_REAL3
  K_LN(CRITEXIS)
  Def_*GET(FC,_z1,S,XTEN,0),*GET(FC,_z1,S,YTEN,0),*GET(FC,_z1,S,ZTEN,0)
 Fld_5
  Prm_Stress in Compression
  Typ_REAL3
  K_LN(CRITEXIS)
  Def_*GET(FC,_z1,S,XCMP,0),*GET(FC,_z1,S,YCMP,0),*GET(FC,_z1,S,ZCMP,0)
 Fld_0
  Typ_Sep
Cmd_)*CSET,7,9
 Fld_0
  Typ_Lab
   Prm_                                      XY            YZ            XZ
 Fld_2
  Prm_Stress in Shear
  Typ_REAL3
  K_LN(CRITEXIS)
  Def_*GET(FC,_z1,S,XY,0),*GET(FC,_z1,S,YZ,0),*GET(FC,_z1,S,XZ,0)
 Fld_0
  Typ_Sep
Cmd_)*CSET,10,12
 Fld_0
  Typ_Lab
   Prm_                                      XY            YZ            XZ
 Fld_2
  Prm_Stress Coupling Coefficients
  Typ_REAL3
  K_LN(CRITEXIS)
  Def_*GET(FC,_z1,S,XYCP,0),*GET(FC,_z1,S,YZCP,0),*GET(FC,_z1,S,XZCP,0)
Cmd_)/GO
Cal_Fnc_FCritDef2bx
:E END
:! 
:N Fnc_FCritDef2bx
:S   1367,   125,  1235
:T Cmd
:C )! Fnc_FCritDef2bx
:D Add/Edit Failure Criteria
:A Add/Edit
:H Hlp_C_FC
Inp_P
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_S
 Fld_4
  Typ_Def_XTEN
 Fld_5
  Typ_Def_*CPAR(1)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_S
 Fld_4
  Typ_Def_YTEN
 Fld_5
  Typ_Def_*CPAR(2)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_S
 Fld_4
  Typ_Def_ZTEN
 Fld_5
  Typ_Def_*CPAR(3)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_S
 Fld_4
  Typ_Def_XCMP
 Fld_5
  Typ_Def_*CPAR(4)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_S
 Fld_4
  Typ_Def_YCMP
 Fld_5
  Typ_Def_*CPAR(5)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_S
 Fld_4
  Typ_Def_ZCMP
 Fld_5
  Typ_Def_*CPAR(6)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_S
 Fld_4
  Typ_Def_XY
 Fld_5
  Typ_Def_*CPAR(7)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_S
 Fld_4
  Typ_Def_YZ
 Fld_5
  Typ_Def_*CPAR(8)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_S
 Fld_4
  Typ_Def_XZ
 Fld_5
  Typ_Def_*CPAR(9)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_S
 Fld_4
  Typ_Def_XYCP
 Fld_5
  Typ_Def_*CPAR(10)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_S
 Fld_4
  Typ_Def_YZCP
 Fld_5
  Typ_Def_*CPAR(11)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_S
 Fld_4
  Typ_Def_XZCP
 Fld_5
  Typ_Def_*CPAR(12)
Cal_Fnc_FCritDef2by
:E END
:! 
:N Fnc_FCritDef2by
:S   1077,   125,   945
:T Cmd
:C )! Fnc_FCritDef2by
:D Add/Edit Failure Criteria
:A Add/Edit
:H Hlp_C_FC
Inp_P
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_EPEL
 Fld_4
  Typ_Def_XTEN
 Fld_5
  Typ_Def_*CPAR(13)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_EPEL
 Fld_4
  Typ_Def_YTEN
 Fld_5
  Typ_Def_*CPAR(14)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_EPEL
 Fld_4
  Typ_Def_ZTEN
 Fld_5
  Typ_Def_*CPAR(15)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_EPEL
 Fld_4
  Typ_Def_XCMP
 Fld_5
  Typ_Def_*CPAR(16)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_EPEL
 Fld_4
  Typ_Def_YCMP
 Fld_5
  Typ_Def_*CPAR(17)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_EPEL
 Fld_4
  Typ_Def_ZCMP
 Fld_5
  Typ_Def_*CPAR(18)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_EPEL
 Fld_4
  Typ_Def_XY
 Fld_5
  Typ_Def_*CPAR(19)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_EPEL
 Fld_4
  Typ_Def_YZ
 Fld_5
  Typ_Def_*CPAR(20)
Cmd_FC
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_EPEL
 Fld_4
  Typ_Def_XZ
 Fld_5
  Typ_Def_*CPAR(21)
:E END
:! 
:N Fnc_FCritDele
:S    432,   232,   193
:T Cmd
:C )! Fnc_FCritDele
:C )/NOPR
:C )KEYW,MPLIST,0
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )/GO
:D Delete Failure Criteria
:A Delete
:H Hlp_C_FCDELE
Cmd_FCDELE
 Fld_0
  Typ_Lab
  Prm_[FCDELE] Delete failure criteria
 Fld_0
  Typ_Sep
 Fld_2
  Prm_MAT   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
:E END
:! 
:N Fnc_FCritList
:S    671,   251,   413
:T Cmd
:C )! Fnc_FCritList
:C )/NOPR
:C )KEYW,MPLIST,0
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )_z1=MPINQR(0,0,14)
:C )/GO
:D List Failure Criteria
:A List
:H Hlp_C_FCLIST
Cmd_FCLIST
 Fld_0
  Typ_Lab
  Prm_[FCLIST] List failure criteria
 Fld_0
  Typ_Sep
 Fld_2
  Prm_MAT1   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_ALL ,ALL
  LIS_*READ,MAT
  Def_ALL
 Fld_3
 K_FL(BETA)
  Prm_MAT2   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_MAT1,'    '
  LIS_*READ,MAT
  Def_'    '
 Fld_4
  Prm_TEMP   Temperature
  Typ_REAL
:E END
:! 
:N Fnc_FCritTemp
:S    491,   232,   252
:T Cmd
:C )! Fnc_FCritTemp
:C )/NOPR
:C )KEYW,MPLIST,0
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )/GO
:D Define Temperatures
:A Temp Variation
:H Hlp_C_FC
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_[FC] Define temperature variation for failure criteria
 Fld_2
  Prm_MAT   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
Cmd_)/GO
Cal_Fnc_FCritTemp2
:E END
:! 
:N Fnc_FCritTemp2
:S   1673,   718,   948
:T Cmd
:C )! Fnc_FCritTemp2
:C )/NOPR
:C )KEYW,CRITEXIS,0
:C )keyw,shotemp1,0
:C )keyw,shotemp2,0
:C )keyw,shotemp3,0
:C )keyw,shotemp4,0
:C )keyw,shotemp5,0
:C )keyw,shotemp6,0
:C )_z3=0
:C )*GET,_z2,FC,_z1,EXIS
:C )*IF,_z2,gt,0,THEN
:C )KEYW,CRITEXIS,1
:C )*get,_z3,fc,_z1,numt
:C )*ENDIF
:C )!
:C )*if,_z3,ge,1,then
:C )keyw,shotemp1,1
:C )*endif
:C )*if,_z3,ge,2,then
:C )keyw,shotemp2,1
:C )*endif
:C )*if,_z3,ge,3,then
:C )keyw,shotemp3,1
:C )*endif
:C )*if,_z3,ge,4,then
:C )keyw,shotemp4,1
:C )*endif
:C )*if,_z3,ge,5,then
:C )keyw,shotemp5,1
:C )*endif
:C )*if,_z3,ge,6,then
:C )keyw,shotemp6,1
:C )*endif
:C )/GO
:D Define Temperatures
:A Temp Variation
:H Hlp_C_FC
Inp_NoApply
Cmd_FC
 Fld_0
  Typ_Lab
  Prm_[FC] Define temperature variation for failure criteria
 Fld_0
  Typ_Lab
  Prm_Variation applies to material %(I)_z1%
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_TEMP
 Fld_5
  Prm_Temperature 1
  Typ_REAL
  K_LN(CRITEXIS+SHOTEMP1)
  Def_*GET(FC,_z1,TEMP,,1)
 Fld_6
  Prm_Temperature 2
  Typ_REAL
  K_LN(CRITEXIS+SHOTEMP2)
  Def_*GET(FC,_z1,TEMP,,2)
 Fld_7
  Prm_Temperature 3
  Typ_REAL
  K_LN(CRITEXIS+SHOTEMP3)
  Def_*GET(FC,_z1,TEMP,,3)
 Fld_8
  Prm_Temperature 4
  Typ_REAL
  K_LN(CRITEXIS+SHOTEMP4)
  Def_*GET(FC,_z1,TEMP,,4)
 Fld_9
  Prm_Temperature 5
  Typ_REAL
  K_LN(CRITEXIS+SHOTEMP5)
  Def_*GET(FC,_z1,TEMP,,5)
 Fld_10
  Prm_Temperature 6
  Typ_REAL
  K_LN(CRITEXIS+SHOTEMP6)
  Def_*GET(FC,_z1,TEMP,,6)
Cmd_)/NOPR
Cmd_)KEYW,CRITEXIS,0
Cmd_)keyw,shotemp1,0
Cmd_)keyw,shotemp2,0
Cmd_)keyw,shotemp3,0
Cmd_)keyw,shotemp4,0
Cmd_)keyw,shotemp5,0
Cmd_)keyw,shotemp6,0
Cmd_)/GO
Cmd_)/GO
:E END
:! 
:N Fnc_FDELE_all
:S    350,   199,   144
:T Command
:C )! Fnc_FDELE_all
:A    On All Nodes
:D Delete All Forces on All Selected Nodes
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FDELE
Inp_NoApply
Cmd_FDELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[FDELE]  This function deletes all forces
Fld_0
 Typ_Lab
 Prm_         on all selected nodes!
:E END
:! 
:N Fnc_FDELE_amps
:S    383,   239,   137
:T Cmd_P
:C )! Fnc_FDELE_amps
:A    On Nodes
:D Delete AMPS on Nodes
:K #((PREP7*SOLUTION))
:K ((ELECTRIC+elecstat+vfed+circ+edgeelc+timeintp)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FDELE
Inp_P
Cmd_FDELE
Fld_2
 Prm_[FDELE]  Pick or enter nodes for electric current deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_AMPS
:E END
:! 
:N Fnc_FDELE_chrg
:S    393,   259,   127
:T Cmd_P
:C )! Fnc_FDELE_chrg
:A    On Nodes
:D Delete CHRG on Nodes
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FDELE
Inp_P
Cmd_FDELE
Fld_2
 Prm_[FDELE]  Pick or enter nodes for charge deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_CHRG
:E END
:! 
:N Fnc_FDELE_csg
:S    382,   235,   140
:T Cmd_P
:C )! Fnc_FDELE_csg
:C )! Nodes for FDELE command below
:A    On Nodes
:D Delete CSG on Nodes
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+VECTORP+edgeflx)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[FDELE]  Pick or enter nodes for current segment deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FDELE_csg2
:E END
:! 
:N Fnc_FDELE_csg2
:S    289,   114,   168
:T Command
:C )! Fnc_FDELE_csg2
:D Delete CSG on Nodes
:B Fnc_FDELE_csg
Cmd_FDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FDELE]  Delete Current Segment on Nodes
 Fld_2
  Prm_Lab  Current segm to be deleted
  Typ_LIS_OPTIONB
   LIS_ALL
   LIS_*READ,F
:E END
:! 
:N Fnc_FDELE_flow_a
:S    338,   201,   130
:T Cmd_P
:C )! Fnc_FDELE_flow_a
:C )! Nodes for FDELE command below
:A On Nodes
:D Delete FLOW on Nodes
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:H Hlp_C_FDELE
Inp_P
Cmd_FDELE
Fld_2
  Prm_[FDELE]  Pick or enter nodes for flow deletion
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
Fld_3
 Typ_Def_FLOW
:E END
:! 
:N Fnc_FDELE_flux
:S    358,   217,   134
:T Cmd_P
:C )! Fnc_FDELE_flux
:A    On Nodes
:D Delete FLUX on Nodes
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+SCALARP+edgeflx)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FDELE
Inp_P
Cmd_FDELE
Fld_2
 Prm_[FDELE]  Pick or enter nodes for magnetic flux deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FLUX
:E END
:! 
:N Fnc_FDELE_fm
:S    332,   189,   136
:T Cmd_P
:C )! Fnc_FDELE_fm
:C )! Nodes for FDELE command below
:A On Nodes
:D Delete F/M on Nodes
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[FDELE]  Pick or enter nodes for force/moment deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FDELE_fm2
:E END
:! 
:N Fnc_FDELE_fm2
:S    283,   111,   165
:T Command
:C )! Fnc_FDELE_fm2
:D Delete F/M on Nodes
:B Fnc_FDELE_fm
Cmd_FDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FDELE]  Delete Force/Moment on Nodes
 Fld_2
  Prm_Lab  Force/moment to be deleted
  Typ_LIS_OPTIONB
   LIS_ALL
   LIS_*READ,F
:E END
:! 
:N Fnc_FDELE_fm2CM
:S    309,   127,   175
:T Command
:C )! Fnc_FDELE_fm2CM
:D Delete F/M on Node Components
:B Fnc_FDELE_fmCM
Cmd_FDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FDELE]  Delete Force/Moment on Node Components
 Fld_2
  Prm_Lab  Force/moment to be deleted
  Typ_LIS_OPTIONB
   LIS_ALL
   LIS_*READ,F
:E END
:! 
:N Fnc_FDELE_fmCM
:S    441,   286,   148
:T Cmd_P
:C )! Fnc_FDELE_fmCM
:C )! Node Components for FDELE command below
:C )/UI,CMPF,NODE ! *** restrict picker to NODE components ***
:A On Node Components
:D Delete F/M on Node Components
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[FDELE]  Pick or enter node components for force/moment deletion
 Typ_COMP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FDELE_fm2CM
:E END
:! 
:N Fnc_FDELE_heat
:S    307,   173,   127
:T Cmd_P
:C )! Fnc_FDELE_heat
:A On Nodes
:D Delete HEAT on Nodes
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FDELE
Inp_P
Cmd_)!
Fld_2
 Prm_[FDELE]  Pick or enter nodes for heat flow deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Cal_Fnc_FDELE_heat2
:E END
:! 
:N Fnc_FDELE_heat2
:S    312,   137,   168
:T Command
:C )! Fnc_FDELE_heat2	
:D Delete Node Constraints
:B Fnc_FDELE_temp
:H Hlp_C_FDELE
Cmd_FDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FDELE]  Delete DOF Constraints on Nodes
 Fld_2
  Prm_Lab  DOFs to be deleted
  Typ_LIS_OPTIONB
   LIS_All DOF,ALL
   LIS_*READ,F
:E END
:! 
:N Fnc_FDELE_ic
:S    375,   230,   138
:T Cmd_P
:C )! Fnc_FDELE_ic
:A    On Nodes
:D Delete AMPS on Nodes
:K #((PREP7*SOLUTION))
:K ((ELECTRIC+elecstat+circ+edgeelc+TIMEINTP)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FDELE
Inp_P
Cmd_FDELE
Fld_2
 Prm_[FDELE]  Pick or enter nodes for impressed current deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_AMPS
:E END
:! 
:N Fnc_FDELE_multi
:S    387,   230,   150
:T Cmd_P
:C )! Fnc_FDELE_multi
:C )! Nodes for FDELE command below
:A    On Nodes
:D Delete Nodal MultiPt on Nodes
:K #((PREP7*SOLUTION)+(MULTIPNT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[FDELE]  Pick or enter nodes for nodal multi-pt spectrum deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FDELE_multi2
:E END
:! 
:N Fnc_FDELE_multi2
:S    365,   130,   228
:T Command
:C )! Fnc_FDELE_multi2
:D Delete Nodal MultiPt on Nodes
:B Fnc_FDELE_multi
Cmd_FDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FDELE]  Delete Nodal Multi-Point Spectrum on Nodes
 Fld_2
  Prm_Lab  Excitation direction
  Typ_LIS_OPTIONB
   LIS_Nodal X         ,FX
   LIS_Nodal Y         ,FY
   LIS_Nodal Z         ,FZ
:E END
:! 
:N Fnc_FDELE_p
:S    243,   109,   127
:T Cmd_P
:C )! Fnc_FDELE_p ORPHAN
:A On Nodes
:D Dele Forces on Nodes
Inp_P
Cmd_)!
Fld_2
 Prm_[FDELE]  Pick or enter nodes for force deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_FDELE_p2
:E END
:! 
:N Fnc_FDELE_p2
:S    269,   116,   146
:T Command
:C )! Fnc_FDELE_p2 ORPHAN
:D Dele Forces on Nodes
:B Fnc_FDELE_p
Cmd_FDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FDELE]  Delete Forces on Nodes
 Fld_2
  Prm_Lab  Type of force
  Typ_LIS_OPTIONB
   LIS_ALL
   LIS_*READ,F
:E END
:! 
:N Fnc_FDELE_psd
:S    351,   216,   128
:T Cmd_P
:C )! Fnc_FDELE_psd
:C )! Nodes for FDELE command below
:A    On Nodes
:D Delete PSD on Nodes
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[FDELE]  Pick or enter nodes for PSD deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FDELE_psd2
:E END
:! 
:N Fnc_FDELE_psd2
:S    418,   114,   297
:T Command
:C )! Fnc_FDELE_psd2
:D Delete PSD on Nodes
:B Fnc_FDELE_psd
Cmd_FDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FDELE]  Delete PSD Excitation on Nodes
 Fld_2
  Prm_Lab  Excitation direction
  Typ_LIS_OPTIONB
   LIS_Nodal X         ,FX
   LIS_Nodal Y         ,FY
   LIS_Nodal Z         ,FZ
   LIS_Nodal MX        ,MX
   LIS_Nodal MY        ,MY
   LIS_Nodal MZ        ,MZ
:E END
:! 
:N Fnc_FDELE_sv
:S    365,   220,   138
:T Cmd_P
:C )! Fnc_FDELE_sv
:C )! Nodes for FDELE command below
:A    On Nodes
:D Delete ForcSpect on Nodes
:K #((PREP7*SOLUTION)+(SINGLEPT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[FDELE]  Pick or enter nodes for force spectrum deletion
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FDELE_sv2
:E END
:! 
:N Fnc_FDELE_sv2
:S    340,   117,   216
:T Command
:C )! Fnc_FDELE_sv2
:D Delete ForcSpect on Nodes
:B Fnc_FDELE_sv
Cmd_FDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FDELE]  Delete Force Spectrum on Nodes
 Fld_2
  Prm_Lab  Excitation direction
  Typ_LIS_OPTIONB
   LIS_Nodal X         ,FX
   LIS_Nodal Y         ,FY
   LIS_Nodal Z         ,FZ
:E END
:! 
:N Fnc_FE
:S    477,   133,   337
:T Command
:C )! Fnc_FE
:A Assign Events
:D Assign Event Data
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FE
 Fld_0
  Typ_Lab
  Prm_[FE]  Assign Event Data
Cmd_FE
 Fld_2
  Prm_NEV    Ref. no. for this event
  Typ_int
 Fld_3
  Prm_CYCLE  Number of cycles
  Typ_int
  Def_1
 Fld_4
  Prm_FACT   Scale factor for stresses
  Typ_real
  Def_1.0
 Fld_5
  Prm_Title  Title for this event
  Typ_CHAR,32
 Fld_0
  Typ_Lab
  Prm_       (up to 20 characters)
:E END
:! 
:N Fnc_FELIST
:S    309,   145,   157
:T Command
:C )! Fnc_FELIST
:A List Event Data
:D List Event Data
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FELIST
 Fld_0
  Typ_Lab
  Prm_[FELIST]  List Event Data
Cmd_FELIST
 Fld_0
  Typ_Lab
  Prm_NEV1,NEV2,NINC
 Fld_2
  Prm_      Event number range
  Typ_int3
  Def_ALL
:E END
:! 
:N Fnc_FE_erase
:S    335,   168,   160
:T Command
:C )! Fnc_FE_erase
:A Erase Event Data
:D Erase Event Data and Fatigue Stresses
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FE
 Fld_0
  Typ_Lab
  Prm_[FE]  Erase Event Data and Fatigue Stresses
Cmd_FE
 Fld_2
  Prm_NEV  Event number to be erased
  Typ_int
  Def_Blank
 Fld_3
  Typ_Def_-1
:E END
:! 
:N Fnc_FIDAP
:S    125,   108,    10
:T Command
:C )! Fnc_FIDAP ORPHAN
:A FIDAP
:C  
:D Ansys command FIDAP
Cmd_FIDAP
:E END
:! 
:N Fnc_FILL
:S    348,   174,   167
:T Cmd_P
:C )! Fnc_FILL
:A Fill between Nds
:D Fill between Nds
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,2
:C )/GO
:K #(PREP7)
:H Hlp_C_FILL
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
 Typ_NODE
  Min_2
  Cnt_2
  PCN_0
  PFM_2
 Prm_[FILL]  Pick or enter beginning and ending nodes for fill
Cmd_)/GO
Cal_Fnc_FILL2
:E END
:! 
:N Fnc_FILL2
:S    937,   154,   776
:T Command
:C )! Fnc_FILL2
:A Create Nodes Between 2 Nodes
:D Create Nodes Between 2 Nodes
:K #(PREP7)
:H Hlp_C_FILL
Cmd_FILL
Fld_0
Typ_Lab 
Prm_[FILL]  Create Nodes Between 2 Nodes
  Fld_2
   Prm_NODE1,NODE2  Fill between nodes 
   Typ_INT2
   Def_*PAR(_z(1)),*PAR(_z(2))
  Fld_4
   Prm_NFILL  Number of nodes to fill
   Typ_INT
   Def_*PAR(abs(_z(2)-_z(1))-1)
  Fld_5
   Prm_NSTRT  Starting node no. 
   Typ_INT
   Def_Blank
  Fld_6
   Prm_NINC   Inc. between filled nodes  
   Typ_INT
   Def_Blank
  Fld_9
   Prm_SPACE  Spacing ratio
   Typ_REAL
   Def_1.0
  Fld_0  
  Typ_Sep
  Fld_7
   Prm_ITIME  No. of fill operations -  
   Typ_INT
   Def_1
  Fld_0
   Typ_Lab
   Prm_       - (including original) 
  Fld_8
   Prm_INC    Node number increment -
   Typ_INT
   Def_1
  Fld_0
   Typ_Lab
   Prm_       - (for each successive fill operation) 
Cmd_)/NOPR
Cmd_)*DEL,_z1
Cmd_)*DEL,_z2
Cmd_)/GO
:E End
:! 
:N Fnc_FILL_p26
:S    571,   140,   424
:T Command
:C )! Fnc_FILL_p26
:A Fill Data
:D Fill Data by Ramp Func
:K #(POST26)
:H Hlp_C_FILLDATA
Cmd_FILLDATA
Fld_0
Typ_Lab
Prm_[FILLDATA]  Fill Data into a Variable by a Ramp Function
Fld_2
Prm_IR     Variable to be filled
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_3
Prm_LSTRT  Starting location
Typ_int
Def_1
Fld_4
Prm_LSTOP  Ending location
Typ_int
Def_Blank
Fld_5
Prm_LINC   Increment
Typ_int
Def_1
Fld_0
Prm_  
Fld_6
Prm_VALUE  Value at location LSTRT
Typ_real
Def_Blank
Fld_7
Prm_DVAL   Increment value
Typ_real
Def_Blank
:E END
:! 
:N Fnc_FINISH
:S     99,    75,    17
:T FINISH
:C )! Fnc_FINISH
:A Finish
Inp_P
Cmd_FINISH
:E End
:! 
:N Fnc_FJDELE_all
:S    215,   182,    26
:T Command
:C )! Fnc_FJDELE_all
:D Delete All F/M on Joints
:A    On Joint Elems
:K #((PREP7*SOLUTION)+(ELMJOINT*NOFILTER))
:H Hlp_C_FJDELE
Inp_P
 Cmd_FJDELE,ALL,ALL
:E END
:! 
:N Fnc_FJDE_joint
:S    546,   211,   328
:T Cmd_P
:C )! Fnc_FJDE_joint
:C )! Elems for FJDE command below
:A    On Joint Elems
:D Delete F/M on Joints
:K #((PREP7*SOLUTION)+(ELMJOINT*NOFILTER))
:H Hlp_C_FJDELE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[FJDELE]  Pick or enter elements for force/moment deletion
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_FJDE_joint2
:E END
:! 
:N Fnc_FJDE_joint2
:S    653,   134,   512
:T Command
:C )! Fnc_FJDE_joint2
:D Delete F/M on Joints
:B Fnc_FJDE_joint
:H Hlp_C_FJDELE
Inp_NoApply
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
Cmd_)/GO
Cmd_FJDELE,ALL
Fld_0
 Typ_Lab
 Prm_[FJDELE]  Delete Force/Moment on Joint Elements
Fld_2
 Prm_Lab     Force/Moment to be deleted
 Typ_LIS_OPTIONB
 LIS_ALL       ,ALL
 LIS_FX        ,FX
 LIS_FY        ,FY
 LIS_FZ        ,FZ
 LIS_MX        ,MX
 LIS_MY        ,MY
 LIS_MZ        ,MZ
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_FJLIST
:S    246,   130,   109
:T Cmd_P
:C )! Fnc_FJLIST
:A On Picked Element
:D List Joint Element Forces
:H Hlp_C_FJLIST
Inp_P
Cmd_FJLIST
Fld_2
Typ_ELEM
Prm_[FJLIST] Pick or enter joint element for force listing
Min_1
Cnt_1
Pcn_1
:E End
:! 
:N Fnc_FJ_joint
:S    528,   200,   321
:T Cmd_P
:C )! Fnc_FJ_joint
:C )! Elems for FJ command below
:A    On Joint Elems
:D Apply F/M on Joints
:K #((PREP7*SOLUTION)+(ELMJOINT*NOFILTER))
:H Hlp_C_FJ
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_ESEL
Fld_5
 Prm_[FJ]  Pick or enter elements for force/moment loading
 Typ_ELEM
 Min_1
 Cnt_s
 PCN_1
 PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_FJ_joint2
:E END
:! 
:N Fnc_FJ_joint2
:S    657,   123,   527
:T Command
:C )! Fnc_FJ_joint2
:D Apply F/M on Joints
:B Fnc_FJ_joint
:H Hlp_C_FJ
Inp_NoApply
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,ELEM
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
Cmd_)/GO
Cmd_FJ,ALL
Fld_0
 Typ_Lab
 Prm_[FJ]  Apply Force/Moment on Joint Elements
Fld_2
 Prm_Lab     Direction of force/mom
 Typ_LIS_OPTIONB
 LIS_FX        ,FX
 LIS_FY        ,FY
 LIS_FZ        ,FZ
 LIS_MX        ,MX
 LIS_MY        ,MY
 LIS_MZ        ,MZ
Fld_3
 Typ_REAL
 Prm_VALUE   Displacement value
! Exclude_from_paths
Cmd_)/NOPR
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_FKDELE_all
:S    446,   204,   235
:T Command
:C )! Fnc_FKDELE_all
:A    On All KPs
:D Delete All Forces on All Selected Keypoints
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FKDELE
Inp_NoApply
Cmd_FKDELE,ALL,ALL
Fld_0
 Typ_Lab
 Prm_[FKDELE]  This function deletes all forces
Fld_0
 Typ_Lab
 Prm_          on all selected keypoints and on all selected
Fld_0
 Typ_Lab
 Prm_          nodes attached to those keypoints!
:E END
:! 
:N Fnc_FKDELE_amps
:S    394,   244,   143
:T Cmd_P
:C )! Fnc_FKDELE_amps
:A    On Keypoints
:D Delete AMPS on KPs
:K #((PREP7*SOLUTION))
:K ((ELECTRIC+elecstat+vfed+circ+edgeelc+timeintp)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FKDELE
Inp_P
Cmd_FKDELE
Fld_2
 Prm_[FKDELE]  Pick or enter keypoints for electric current deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_AMPS
:E END
:! 
:N Fnc_FKDELE_chrg
:S    404,   264,   133
:T Cmd_P
:C )! Fnc_FKDELE_chrg
:A    On Keypoints
:D Delete CHRG on KPs
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FKDELE
Inp_P
Cmd_FKDELE
Fld_2
 Prm_[FKDELE]  Pick or enter keypoints for charge deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_CHRG
:E END
:! 
:N Fnc_FKDELE_csg
:S    397,   244,   146
:T Cmd_P
:C )! Fnc_FKDELE_csg
:C )! Keypoints for FKDELE command below
:A    On Keypoints
:D Delete CSG on KPs
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+VECTORP+edgeflx)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[FKDELE]  Pick or enter keypoints for current segment deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FKDELE_csg2
:E END
:! 
:N Fnc_FKDELE_csg2
:S    278,    97,   174
:T Command
:C )! Fnc_FKDELE_csg2
:D Delete CSG on KPs
Cmd_FKDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FKDELE]  Delete Current Segment on Keypoints
 Fld_2
  Prm_Lab  Current segm to be deleted
  Typ_LIS_OPTIONB
   LIS_ALL
   LIS_*READ,F
:E END
:! 
:N Fnc_FKDELE_flow_a
:S    348,   207,   134
:T Cmd_P
:C )! Fnc_FKDELE_flow_a
:C )! Keypoints for FK command below
:A On Keypoints
:D Delete FLOW on KPs
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:H Hlp_C_FKDELE
Inp_P
Cmd_FKDELE
Fld_2
  Prm_[FKDELE]  Pick or enter keypoints for flow deletion
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
Fld_3
 Typ_Def_FLOW
:E END
:! 
:N Fnc_FKDELE_flux
:S    369,   222,   140
:T Cmd_P
:C )! Fnc_FKDELE_flux
:A    On Keypoints
:D Delete FLUX on KPs
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+SCALARP+edgeflx)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FKDELE
Inp_P
Cmd_FKDELE
Fld_2
 Prm_[FKDELE]  Pick or enter keypoints for magnetic flux deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_FLUX
:E END
:! 
:N Fnc_FKDELE_fm
:S    347,   198,   142
:T Cmd_P
:C )! Fnc_FKDELE_fm
:C )! Keypoints for FKDELE command below
:A On Keypoints
:D Delete F/M on KPs
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[FKDELE]  Pick or enter keypoints for force/moment deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FKDELE_fm2
:E END
:! 
:N Fnc_FKDELE_fm2
:S    290,   112,   171
:T Command
:C )! Fnc_FKDELE_fm2
:D Delete F/M on KPs
:B Fnc_FKDELE_fm
Cmd_FKDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FKDELE]  Delete Force/Moment on Keypoints
 Fld_2
  Prm_Lab  Force/moment to be deleted
  Typ_LIS_OPTIONB
   LIS_ALL
   LIS_*READ,F
:E END
:! 
:N Fnc_FKDELE_heat
:S    321,   178,   136
:T Cmd_P
:C )! Fnc_FKDELE_heat
:A On Keypoints
:D Delete HEAT on KPs
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FKDELE
Inp_P
Cmd_FKDELE
Fld_2
 Prm_[FKDELE]  Pick or enter keypoints for heat flow deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_HEAT
:E END
:! 
:N Fnc_FKDELE_ic
:S    386,   235,   144
:T Cmd_P
:C )! Fnc_FKDELE_ic
:A    On Keypoints
:D Delete AMPS on KPs
:K #((PREP7*SOLUTION))
:K ((ELECTRIC+elecstat+circ+edgeelc+TIMEINTP)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FKDELE
Inp_P
Cmd_FKDELE
Fld_2
 Prm_[FKDELE]  Pick or enter keypoints for impressed current deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
Fld_3
 Typ_DEF_AMPS
:E END
:! 
:N Fnc_FKDELE_mult
:S    399,   237,   155
:T Cmd_P
:C )! Fnc_FKDELE_mult
:C )! Keypoints for FKDELE command below
:A    On Keypoints
:D Delete Nodal MultiPt on KPs
:K #((PREP7*SOLUTION)+(MULTIPNT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[FKDELE]  Pick or enter keypoints for nodal multi-pt spectrum deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FKDELE_mult2
:E END
:! 
:N Fnc_FKDELE_mult2
:S    369,   128,   234
:T Command
:C )! Fnc_FKDELE_mult2
:D Delete Nodal MultiPt on KPs
:B Fnc_FKDELE_mult
Cmd_FKDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FKDELE]  Delete Nodal Multi-Point Spectrum on Keypoints
 Fld_2
  Prm_Lab  Excitation direction
  Typ_LIS_OPTIONB
   LIS_Nodal X         ,FX
   LIS_Nodal Y         ,FY
   LIS_Nodal Z         ,FZ
:E END
:! 
:N Fnc_FKDELE_psd
:S    366,   225,   134
:T Cmd_P
:C )! Fnc_FKDELE_psd
:C )! Keypoints for FKDELE command below
:A    On Keypoints
:D Delete PSD on KPs
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[FKDELE]  Pick or enter keypoints for PSD deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FKDELE_psd2
:E END
:! 
:N Fnc_FKDELE_psd2
:S    425,   115,   303
:T Command
:C )! Fnc_FKDELE_psd2
:D Delete PSD on KPs
:B Fnc_FKDELE_psd
Cmd_FKDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FKDELE]  Delete PSD Excitation on Keypoints
 Fld_2
  Prm_Lab  Excitation direction
  Typ_LIS_OPTIONB
   LIS_Nodal X         ,FX
   LIS_Nodal Y         ,FY
   LIS_Nodal Z         ,FZ
   LIS_Nodal MX        ,MX
   LIS_Nodal MY        ,MY
   LIS_Nodal MZ        ,MZ
:E END
:! 
:N Fnc_FKDELE_sv
:S    380,   229,   144
:T Cmd_P
:C )! Fnc_FKDELE_sv
:C )! Keypoints for FKDELE command below
:A    On Keypoints
:D Delete ForcSpect on KPs
:K #((PREP7*SOLUTION)+(SINGLEPT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_)!
Fld_2
 Prm_[FKDELE]  Pick or enter keypoints for force spectrum deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FKDELE_sv2
:E END
:! 
:N Fnc_FKDELE_sv2
:S    347,   118,   222
:T Command
:C )! Fnc_FKDELE_sv2
:D Delete ForcSpect on KPs
:B Fnc_FKDELE_sv
Cmd_FKDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FKDELE]  Delete Force Spectrum on Keypoints
 Fld_2
  Prm_Lab  Excitation direction
  Typ_LIS_OPTIONB
   LIS_Nodal X         ,FX
   LIS_Nodal Y         ,FY
   LIS_Nodal Z         ,FZ
:E END
:! 
:N Fnc_FKDEL_p
:S    253,   114,   132
:T Cmd_P
:C )! Fnc_FKDEL_p ORPHAN
:A    On Keypoints
:D Dele Forces on KPs
Inp_P
Cmd_)!
Fld_2
 Prm_[FKDELE]  Pick or enter keypoints for force deletion
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_FKDEL_p2
:E END
:! 
:N Fnc_FKDEL_p2
:S    258,    99,   152
:T Command
:C )! Fnc_FKDEL_p2 ORPHAN
:D Dele Forces on KPs
Cmd_FKDELE,P51X
 Fld_0
  Typ_LAB
  Prm_[FKDELE]  Delete Forces on Keypoints
 Fld_2
  Prm_Lab  Type of force
  Typ_LIS_OPTIONB
   LIS_ALL
   LIS_*READ,F
:E END
:! 
:N Fnc_FKLIST
:S    233,   121,   105
:T Cmd_P
:C )! Fnc_FKLIST
:A On Picked KPs
:D List Keypoint Forces
:H Hlp_C_FKLIST
Inp_P
Cmd_FKLIST
Fld_2
Typ_KEYP
Prm_[FKLIST] Pick or enter keypoints for force listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_FK_amps
:S    508,   344,   157
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'kpnts'
:C )*SET,_z8,'FK'
:C )*SET,_z9,'AMPS'
:C )/GO
:C )! Fnc_FK_amps
:C )! Keypoints for FK command below
:A    On Keypoints
:D Apply AMPS on KPs
:K #((PREP7*SOLUTION)
:K ((ELECTRIC+elecstat+vfed+circ+edgeelc+timeintp)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FK
Inp_P
Cmd_)!
Fld_2
 Prm_[FK]  Pick or enter keypoints for electric current specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_FK
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_FK_amps_ic
:S    488,   323,   158
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'kpnts'
:C )*SET,_z8,'FK'
:C )*SET,_z9,'AMPS'
:C )/GO
:C )! Fnc_FK_amps_ic
:C )! Keypoints for FK command below
:A    On Keypoints
:D Apply AMPS on KPs
:K ((ELECTRIC+elecstat+circ+edgeelc+TIMEINTP)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FK
Inp_P
Cmd_)!
Fld_2
 Prm_[FK]  Pick or enter keypoints for impressed current specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_FK
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_FK_chrg
:S    519,   365,   147
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'kpnts'
:C )*SET,_z8,'FK'
:C )*SET,_z9,'CHRG'
:C )/GO
:C )! Fnc_FK_chrg
:C )! Keypoints for FK command below
:A    On Keypoints
:D Apply CHRG on KPs
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FK
Inp_P
Cmd_)!
Fld_2
 Prm_[FK]  Pick or enter keypoints for charge specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_FK
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_FK_csg
:S    393,   243,   143
:T Cmd_P
:C )! Fnc_FK_csg
:C )! Keypoints for FK command below
:A    On Keypoints
:D Apply CSG on KPs
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+VECTORP+edgeflx)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FK
Inp_P
Cmd_)!
Fld_2
 Prm_[FK]  Pick or enter keypoints for current segment specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FK_csg2
:E END
:! 
:N Fnc_FK_csg2
:S    516,   114,   395
:T Command
:C )! Fnc_FK_csg2
:D Apply CSG on KPs
:B Fnc_FK_csg
:H Hlp_C_FK
Cmd_FK,P51X
Fld_0
 Typ_LAB
 Prm_[FK]  Apply Mag Current Segment (CSG) on Keypoints
Fld_2
 Prm_Lab    Current segment direction
 Typ_LIS_optionb
 LIS_CSGZ,CSGZ
 LIS_CSGX,CSGX
 LIS_CSGY,CSGY
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE  Current segment value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE  Real part of current segm
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2 Imag part of current segm
:E END
:! 
:N Fnc_FK_flow_a
:S    693,   327,   359
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'kpnts'
:C )*SET,_z8,'FK'
:C )*SET,_z9,'FLOW'
:C )*DEL,_zc
:C )*DIM,_zc,char,1
:C )*SET,_zc(1),'FLOW'
:C )/GO
:C )! Fnc_FK_flow_a
:C )! Keypoints for FK command below
:A On Keypoints
:D Apply FLOW on KPs
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:H Hlp_C_FK
Inp_P
Cmd_)!
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,KP
Cmd_)/GO
! Exclude_from_paths
Cmd_KSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[FK]  Pick or enter keypoints for flow specification
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,KP
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_CFDLoad
:E END
:! 
:N Fnc_FK_flux
:S    395,   246,   142
:T Cmd_P
:C )! Fnc_FK_flux
:C )! Keypoints for FK command below
:A    On Keypoints
:D Apply FLUX on KPs
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+SCALARP+edgeflx)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FK
Inp_P
Cmd_)!
Fld_2
 Prm_[FK]  Pick or enter keypoints for magnetic flux specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FK_flux2
:E END
:! 
:N Fnc_FK_flux2
:S    432,   118,   307
:T Command
:C )! Fnc_FK_flux2
:D Apply FLUX on KPs
:B Fnc_FK_flux
:H Hlp_C_FK
Cmd_FK,P51X
Fld_0
 Typ_LAB
 Prm_[FK]  Apply Magnetic Flux (FLUX) on Keypoints
Fld_2
 Typ_DEF_FLUX
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE  Value of magnetic flux
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE  Real part of magnetic flux
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2 Imag part of magnetic flux
:E END
:! 
:N Fnc_FK_fm
:S    337,   197,   133
:T Cmd_P
:C )! Fnc_FK_fm
:C )! Keypoints for FK command below
:A On Keypoints
:D Apply F/M on KPs
:P (LINPLUS*THERMAL*ELECMAG)
:K #(PREP7*SOLUTION)
:H Hlp_C_FK
Inp_P
Cmd_)!
Fld_2
 Prm_[FK]  Pick or enter keypoints for force/moment loading
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FK_fm2
:E END
:! 
:N Fnc_FK_fm2
:S    813,   188,   618
:T Command
:C )! Fnc_FK_fm2
:C )/NOPR
:C )*SET,_z7,'FK'
:C )*SET,_z9,'F/M'
:C )*SET,_z10,'KPs'
:C )/GOPR
:D Apply F/M on KPs
:B Fnc_FK_fm
:H Hlp_C_FK
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[FK]  Apply Force/Moment on Keypoints
Fld_2
 Prm_Lab     Direction of force/mom
 Typ_LIS_OPTIONB
 LIS_*READ,F
Fld_8
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Force/moment value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE   Real part of force/mom
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2  Imag part of force/mom
cmd_)/GOPR
! Cust_Cmd_FK
Cal_Fnc_Stvalue,8,eq,0,2
Cal_Fnc_Stoldtable,8,eq,1,2
Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_FK_heat
:S    438,   279,   152
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'kpnts'
:C )*SET,_z8,'FK'
:C )*SET,_z9,'HEAT'
:C )/GO
:C )! Fnc_FK_heat
:C )! Keypoints for FK command below
:A On Keypoints
:D Apply HEAT on KPs
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FK
Inp_P
Cmd_)!
Fld_2
 Prm_[FK]  Pick or enter keypoints for heat flow specification
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_FK
Cal_Fnc_FK_heat2
:E END
:! 
:N Fnc_FK_heat2
:S    663,   196,   460
:T Command
:C )! Fnc_FK_heat2
:C )/NOPR
:C )*SET,_z7,'FK'
:C )*SET,_z9,'HEAT'
:C )*SET,_z10,'KPs'
:C )/GOPR
:D Apply HEAT on KPs
:B Fnc_FK_heat
:H Hlp_C_FK
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[FK]  Apply HEAT on Keypoints
Fld_2
 Prm_Lab  DOFs to be constrained
 Typ_Lis
 LIS_*READ,F
Fld_8
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Load HEAT value
cmd_)/GOPR
! Cust_Cmd_FK
Cal_Fnc_thvalue,8,eq,0,2
Cal_Fnc_tholdtable,8,eq,1,2
Cal_Fnc_thnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_FK_multi
:S    387,   238,   142
:T Cmd_P
:C )! Fnc_FK_multi
:C )! Keypoints for FK command below
:A    On Keypoints
:D Apply Nodal MultiPt on KPs
:K #((PREP7*SOLUTION)+(MULTIPNT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FK
Inp_P
Cmd_)!
Fld_2
 Prm_[FK]  Pick or enter keypoints for nodal multi-point spectrum
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FK_multi2
:E END
:! 
:N Fnc_FK_multi2
:S    405,   130,   268
:T Command
:C )! Fnc_FK_multi2
:D Apply Nodal MultiPt on KPs
:B Fnc_FK_multi
:H Hlp_C_FK
Cmd_FK,P51X
Fld_0 
 Typ_LAB
 Prm_[FK]  Apply Nodal Multi-Point Spectrum on Keypoints
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,FX
 LIS_Nodal Y         ,FY
 LIS_Nodal Z         ,FZ
Fld_3
 Prm_VALUE   Scale factor
 Typ_REAL
 Def_1.0
:E END
:! 
:N Fnc_FK_p
:S    249,   118,   124
:T Cmd_P
:C )! Fnc_FK_p ORPHAN
:A On Keypoints
:D Apply Forces on KPs
:H Hlp_C_FK
Inp_P
Cmd_)!
Fld_2
 Prm_[FK]  Pick or enter keypoints for force loading
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_FK_p2
:E END
:! 
:N Fnc_FK_p2
:S    344,   106,   231
:T Command
:C )! Fnc_FK_p2 ORPHAN
:D Apply Forces on KPs
:H Hlp_C_FK
Cmd_FK,P51X
Fld_0
 Typ_LAB
 Prm_[FK]  Apply Forces on Keypoints
Fld_2
 Prm_Lab     Type of force
 Typ_LIS_OPTIONB
 LIS_*READ,F
Fld_0
 Typ_Lab
 Prm_VALUE,VALUE2  Force values -
Fld_3
 Typ_REAL2
 Prm_      - real and imaginary parts
:E END
:! 
:N Fnc_FK_psd
:S    370,   229,   134
:T Cmd_P
:C )! Fnc_FK_psd
:C )! Keypoints for FK command below
:A    On Keypoints
:D Apply NodalPSD on KPs
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FK
Inp_P
Cmd_)!
Fld_2
 Prm_[FK]  Pick or enter keypoints for nodal PSD excitation
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FK_psd2
:E END
:! 
:N Fnc_FK_psd2
:S    463,   119,   337
:T Command
:C )! Fnc_FK_psd2
:D Apply NodalPSD on KPs
:B Fnc_FK_psd
:H Hlp_C_FK
Cmd_FK,P51X
Fld_0 
 Typ_LAB
 Prm_[FK]  Apply Nodal PSD Excitation on Keypoints
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,FX
 LIS_Nodal Y         ,FY
 LIS_Nodal Z         ,FZ
 LIS_Nodal MX        ,MX
 LIS_Nodal MY        ,MY
 LIS_Nodal MZ        ,MZ
Fld_3
 Prm_VALUE   Scale factor
 Typ_REAL
 Def_1.0
:E END
:! 
:N Fnc_FK_sv
:S    375,   228,   140
:T Cmd_P
:C )! Fnc_FK_sv
:C )! Keypoints for FK command below
:A    On Keypoints
:D Apply ForcSpect on KPs
:K #((PREP7*SOLUTION)+(SINGLEPT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FK
Inp_P
Cmd_)!
Fld_2
 Prm_[FK]  Pick or enter keypoints for single-point force spectrum
 Typ_KEYP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_FK_sv2
:E END
:! 
:N Fnc_FK_sv2
:S    393,   117,   269
:T Command
:C )! Fnc_FK_sv2
:D Apply ForcSpect on KPs
:B Fnc_FK_sv
:H Hlp_C_FK
Cmd_FK,P51X
Fld_0 
 Typ_LAB
 Prm_[FK]  Apply Single-Point Force Spectrum on Keypoints
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,FX
 LIS_Nodal Y         ,FY
 LIS_Nodal Z         ,FZ
Fld_3
 Prm_VALUE   Scale factor
 Typ_REAL
 Def_1.0
:E END
:! 
:N Fnc_FL
:S    617,   143,   457
:T Command
:C )! Fnc_FL
:A Stress Locations
:D Fatigue Stress Locations
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FL
 Fld_0
  Typ_Lab
  Prm_[FL]  Fatigue Stress Locations
Cmd_FL
 Fld_2
  Prm_NLOC  Reference no. for location
  Typ_int
 Fld_3
  Prm_NODE  Node no. corresp to NLOC
  Typ_int
 Fld_0
  Typ_Lab
  Prm_SCFX,SCFY,SCFZ
 Fld_4
  Prm_      Stress conc factors -
  Typ_real3
 Fld_0
  Typ_Lab
  Prm_      - in global X,Y,Z directions, applied to total stresses
 Fld_7
  Prm_Title  Title for this location
  Typ_CHAR,32
 Fld_0
  Typ_Lab
  Prm_       (up to 20 characters)
:E END OF Fnc_FL
:! 
:N Fnc_FLIST
:S    223,   117,    99
:T Cmd_P
:C )! Fnc_FLIST
:A On Picked Nodes
:D List Nodal Forces
:H Hlp_C_FLIST
Inp_P
Cmd_FLIST
Fld_2
Typ_NODE
Prm_[FLIST] Pick or enter nodes for force listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_FLLIST
:S    416,   151,   258
:T Command
:C )! Fnc_FLLIST
:A List Stress Loc
:D List Stress Locations
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FLLIST
Cmd_FLLIST
 Fld_0
  Typ_Lab
  Prm_[FLLIST]  List Stress Locations
 Fld_2
  Prm_NLOC1  Starting location no.
  Typ_INT
  Def_ALL
 Fld_3
  Prm_NLOC2  Ending location no.
  Typ_INT
  Def_Blank
 Fld_4
  Prm_NINC   Location number increment
  Typ_INT
  Def_Blank
:E END
:! 
:N Fnc_FLUXV
:S    403,   212,   184
:T Command
:C )! Fnc_FLUXV
:A    Path Flux
:D Calculate Flux through a Closed Contour
:K #(POST1+RESULTS+VECTORP)
:K #((edgeflx+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_FLUXV
Inp_NoApply
Cmd_FLUXV
 Fld_0
  Typ_Lab
  Prm_[FLUXV]  This function calculates the magnetic flux passing
 Fld_0
  Typ_Lab
  Prm_         through a closed contour predefined by a path.
:E END
:! 
:N Fnc_FMAGBC
:S    486,   242,   237
:T Cmd
:A Comp. Force/Torque
:C )! Fnc_FMAGBC
:D Apply Magnetic Force Boundary Conditions
:K (lsdyna)
:K #((PREP7*SOLUTION)+MAGNETIC)
:K #((edgeelc+harmonic*ELEM2D)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_FMAGBC
Cmd_)!
 Fld_0
  Prm_[FMAGBC] Magnetic Force BC's
 Cmd_)*CSET,1,9
 Fld_2
  Prm_Cnam1-9  Component name(s)
  Bnd_0.0,9.0
  Typ_MLis
  Lis_*READ,CM
 Fld_0
  Typ_Lab
  Prm_                                 (specify up to 9)
 Cal_Fnc_FMAGBC_2
:E End
:! 
:N Fnc_FMAGBCE
:S    456,   207,   242
:T Cmd
:A Comp. Force
:C )! Fnc_FMAGBCE
:D Apply Electrostatic Force Boundary Conditions
:K (lsdyna)
:K (PREP7*SOLUTION+ELECSTAT*NOFILTER)
:P (ELECMAG)
:H Hlp_C_FMAGBC
Cmd_)!
 Fld_0
  Prm_[FMAGBC] Electrostatic Force BC's
 Cmd_)*CSET,1,9
 Fld_2
  Prm_Cnam1-9  Component name(s)
  Bnd_0.0,9.0
  Typ_MLis
  Lis_*READ,CM
 Fld_0
  Typ_Lab
  Prm_                                 (specify up to 9)
 Cal_Fnc_FMAGBC_2
:E End
:! 
:N Fnc_FMAGBC_2
:S   1043,   115,   921
:T Cmd
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,9,1,1
:C )/GO
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_zc(1)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(1)
  Dlm_'
 Fld_4
  Typ_Lab 
!
Cmd_)*SET,_zc(2)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(2)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(3)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(3)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(4)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(4)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(5)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(5)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(6)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(6)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(7)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(7)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(8)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(8)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(9)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(9)
  Dlm_'
 Fld_4
  Typ_Def_ 
Cmd_)/GO
!
Cal_Fnc_FMAGBC_3
:E End
:! 
:N Fnc_FMAGBC_3
:S    318,   279,    32
:T Cmd
:C )/NOPR
:C )KEYW,key1,0,key2,0,key3,0
:C )KEYW,key4,0,key5,0,key6,0
:C )KEYW,key7,0,key8,0,key9,0
:C )*DO,_z1,1,9,1
:C )*IF,_zc(_z1),NE,' ',THEN
:C )KEYW,KEY%_z1%,1
:C )*ELSE
:C )KEYW,KEY%_z1%,0
:C )*ENDIF
:C )*ENDDO
:P (ELECMAG)
Inp_P
Cmd_)!
Cal_Fnc_FMAGBC_4  
:E End
:! 
:N Fnc_FMAGBC_4
:S   1068,    78,   983
:T Cmd
:C )!Fnc_FMAGBC_4
:P (ELECMAG)
Inp_P
Cmd_FMAGBC
 Fld_2
 K_FL(KEY1)
  Typ_Def_*STR('%_zc(1)%')
!
 Fld_2
 K_FL(KEY2)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%')
!
 Fld_2
 K_FL(KEY3)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%')
!
 Fld_2
 K_FL(KEY4)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%')
!
 Fld_2
 K_FL(KEY5)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
!
 Fld_2
 K_FL(KEY6)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
 Fld_3
 K_FL(KEY6)
  Typ_Def_*STR('%_zc(6)%')
!
 Fld_2
 K_FL(KEY7)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
 Fld_3
 K_FL(KEY7)
  Typ_Def_*STR('%_zc(6)%','%_zc(7)%')
!
 Fld_2
 K_FL(KEY8)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
 Fld_3
 K_FL(KEY8)
  Typ_Def_*STR('%_zc(6)%','%_zc(7)%','%_zc(8)%')
!
 Fld_2
 K_FL(KEY9)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
 Fld_3
 K_FL(KEY9)
  Typ_Def_*STR('%_zc(6)%','%_zc(7)%','%_zc(8)%','%_zc(9)%')
:E End
:! 
:N Fnc_FMAGSUM
:S    461,   207,   247
:T Command
:A    Force
:C )! Fnc_FMAGSUM
:D Summarize Magnetic Forces
:K #(POST1+RESULTS+FMAGBC+harmonic*ELEM2D)
:K #((edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_FMAGSUM
Cmd_)!    
 Fld_0
  Prm_[FMAGSUM] Summarize Forces 
 Cmd_)*CSET,1,9
 Fld_2
  Prm_Cnam1-9  Component name(s)
  Bnd_0.0,9.0
  Typ_MLis
  Lis_*READ,CM
 Fld_0
 Fld_0
  Typ_Lab
  Prm_                                 (specify up to 9)
Cal_Fnc_FMAGSUM_2
:E End
:! 
:N Fnc_FMAGSUM_2
:S   1046,   117,   922
:T Cmd
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,9,1,1
:C )/GO 
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_zc(1)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(1)
  Dlm_'
 Fld_4
  Typ_Lab 
!
Cmd_)*SET,_zc(2)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(2)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(3)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(3)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(4)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(4)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(5)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(5)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(6)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(6)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(7)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(7)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(8)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(8)
  Dlm_'
 Fld_4
  Typ_Def_ 
!
Cmd_)*SET,_zc(9)
 Fld_2
  Typ_Def_ 
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(9)
  Dlm_'
 Fld_4
  Typ_Def_ 
Cmd_)/GO
!
Cal_Fnc_FMAGSUM_3
:E End
:! 
:N Fnc_FMAGSUM_3
:S    320,   280,    33
:T Cmd
:C )/NOPR
:C )KEYW,key1,0,key2,0,key3,0
:C )KEYW,key4,0,key5,0,key6,0
:C )KEYW,key7,0,key8,0,key9,0
:C )*DO,_z1,1,9,1
:C )*IF,_zc(_z1),NE,' ',THEN
:C )KEYW,KEY%_z1%,1
:C )*ELSE
:C )KEYW,KEY%_z1%,0
:C )*ENDIF
:C )*ENDDO
:P (ELECMAG)
Inp_P
Cmd_)!
Cal_Fnc_FMAGSUM_4  
:E End
:! 
:N Fnc_FMAGSUM_4
:S   1071,    80,   984
:T Cmd
:C )!Fnc_FMAGSUM_4
:P (ELECMAG)
Inp_P
Cmd_FMAGSUM
 Fld_2
 K_FL(KEY1)
  Typ_Def_*STR('%_zc(1)%')
!
 Fld_2
 K_FL(KEY2)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%')
!
 Fld_2
 K_FL(KEY3)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%')
!
 Fld_2
 K_FL(KEY4)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%')
!
 Fld_2
 K_FL(KEY5)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
!
 Fld_2
 K_FL(KEY6)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
 Fld_3
 K_FL(KEY6)
  Typ_Def_*STR('%_zc(6)%')
!
 Fld_2
 K_FL(KEY7)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
 Fld_3
 K_FL(KEY7)
  Typ_Def_*STR('%_zc(6)%','%_zc(7)%')
!
 Fld_2
 K_FL(KEY8)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
 Fld_3
 K_FL(KEY8)
  Typ_Def_*STR('%_zc(6)%','%_zc(7)%','%_zc(8)%')
!
 Fld_2
 K_FL(KEY9)
  Typ_Def_*STR('%_zc(1)%','%_zc(2)%','%_zc(3)%','%_zc(4)%','%_zc(5)%')
 Fld_3
 K_FL(KEY9)
  Typ_Def_*STR('%_zc(6)%','%_zc(7)%','%_zc(8)%','%_zc(9)%')
:E End
:! 
:N Fnc_FOR2D
:S    579,   215,   357
:T Command
:C )! Fnc_FOR2D
:A    Mag Forces
:D Calculate Magnetic Forces
:K #(POST1+RESULTS+ELEM2D+VECTORP+harmonic)
:K #((edgeflx+edgeelc)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_FOR2D
Inp_NoApply
Cmd_FOR2D
 Fld_0
  Typ_Lab
  Prm_[FOR2D]  This function calculates the magnetic forces on a body
 Fld_0
  Typ_Lab
  Prm_         completely surrounded by air.  A predefined closed path,
 Fld_0
  Typ_Lab
  Prm_         passing through the air elements surrounding the body,
 Fld_0
  Typ_Lab
  Prm_         must be available for this calculation.
:E END
:! 
:N Fnc_FP
:S   1988,   132,  1849
:T Command
:C )! Fnc_FP
:A    S-N Table
:D Fatigue S-N Table
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FP
Inp_NoApply
Cmd_)*CSET,1,2
  Fld_0
    Typ_Lab
    Prm_[FP]  Table of Alternating Stress (S) vs. Cycles (N)
  Fld_0
    Typ_Lab
    Prm_      (S in locations 21-40,  N in locations 1-20)
  Fld_0
    Typ_Lab
    Prm_                                       N             S
  Fld_2
    Prm_   Table entries (1,21)   N1,S1
    Typ_REAL2
Cmd_)*CSET,3,4
  Fld_2
    Prm_                 (2,22)   N2,S2
    Typ_REAL2
Cmd_)*CSET,5,6
  Fld_2
    Prm_                 (3,23)   N3,S3
    Typ_REAL2
Cmd_)*CSET,7,8
  Fld_2
    Prm_                 (4,24)   N4,S4
    Typ_REAL2
Cmd_)*CSET,9,10
  Fld_2
    Prm_                 (5,25)   N5,S5
    Typ_REAL2
Cmd_)*CSET,11,12
  Fld_2
    Prm_                 (6,26)   N6,S6
    Typ_REAL2
Cmd_)*CSET,13,14
  Fld_2
    Prm_                 (7,27)   N7,S7
    Typ_REAL2
Cmd_)*CSET,15,16
  Fld_2
    Prm_                 (8,28)   N8,S8
    Typ_REAL2
Cmd_)*CSET,17,18
  Fld_2
    Prm_                 (9,29)   N9,S9
    Typ_REAL2
Cmd_)*CSET,19,20
  Fld_2
    Prm_                (10,30)  N10,S10
    Typ_REAL2
Cmd_)*CSET,21,22
  Fld_2
    Prm_                (11,31)  N11,S11
    Typ_REAL2
Cmd_)*CSET,23,24
  Fld_2
    Prm_                (12,32)  N12,S12
    Typ_REAL2
Cmd_)*CSET,25,26
  Fld_2
    Prm_                (13,33)  N13,S13
    Typ_REAL2
Cmd_)*CSET,27,28
  Fld_2
    Prm_                (14,34)  N14,S14
    Typ_REAL2
Cmd_)*CSET,29,30
  Fld_2
    Prm_                (15,35)  N15,S15
    Typ_REAL2
Cmd_)*CSET,31,32
  Fld_2
    Prm_                (16,36)  N16,S16
    Typ_REAL2
Cmd_)*CSET,33,34
  Fld_2
    Prm_                (17,37)  N17,S17
    Typ_REAL2
Cmd_)*CSET,35,36
  Fld_2
    Prm_                (18,38)  N18,S18
    Typ_REAL2
Cmd_)*CSET,37,38
  Fld_2
    Prm_                (19,39)  N19,S19
    Typ_REAL2
Cmd_)*CSET,39,40
  Fld_2
    Prm_                (20,40)  N20,S20
    Typ_REAL2
Cal_Fnc_FP2
:E END
:! 
:N Fnc_FP2
:S   1355,    73,  1275
:T Command
:C )! Fnc_FP2
:P (LINPLUS)
Inp_P
Cmd_FP,1
  Fld_2
    Typ_Def_*CPAR(1)
  Fld_3
    Typ_Def_*CPAR(3)
  Fld_4
    Typ_Def_*CPAR(5)
  Fld_5
    Typ_Def_*CPAR(7)
  Fld_6
    Typ_Def_*CPAR(9)
  Fld_7
    Typ_Def_*CPAR(11)
Cmd_FP,7
  Fld_2
    Typ_Def_*CPAR(13)
  Fld_3
    Typ_Def_*CPAR(15)
  Fld_4
    Typ_Def_*CPAR(17)
  Fld_5
    Typ_Def_*CPAR(19)
  Fld_6
    Typ_Def_*CPAR(21)
  Fld_7
    Typ_Def_*CPAR(23)
Cmd_FP,13
  Fld_2
    Typ_Def_*CPAR(25)
  Fld_3
    Typ_Def_*CPAR(27)
  Fld_4
    Typ_Def_*CPAR(29)
  Fld_5
    Typ_Def_*CPAR(31)
  Fld_6
    Typ_Def_*CPAR(33)
  Fld_7
    Typ_Def_*CPAR(35)
Cmd_FP,19
  Fld_2
    Typ_Def_*CPAR(37)
  Fld_3
    Typ_Def_*CPAR(39)
Cmd_FP,21
  Fld_2
    Typ_Def_*CPAR(2)
  Fld_3
    Typ_Def_*CPAR(4)
  Fld_4
    Typ_Def_*CPAR(6)
  Fld_5
    Typ_Def_*CPAR(8)
  Fld_6
    Typ_Def_*CPAR(10)
  Fld_7
    Typ_Def_*CPAR(12)
Cmd_FP,27
  Fld_2
    Typ_Def_*CPAR(14)
  Fld_3
    Typ_Def_*CPAR(16)
  Fld_4
    Typ_Def_*CPAR(18)
  Fld_5
    Typ_Def_*CPAR(20)
  Fld_6
    Typ_Def_*CPAR(22)
  Fld_7
    Typ_Def_*CPAR(24)
Cmd_FP,33
  Fld_2
    Typ_Def_*CPAR(26)
  Fld_3
    Typ_Def_*CPAR(28)
  Fld_4
    Typ_Def_*CPAR(30)
  Fld_5
    Typ_Def_*CPAR(32)
  Fld_6
    Typ_Def_*CPAR(34)
  Fld_7
    Typ_Def_*CPAR(36)
Cmd_FP,39
  Fld_2
    Typ_Def_*CPAR(38)
  Fld_3
    Typ_Def_*CPAR(40)
:E END
:! 
:N Fnc_FPLIST
:S    179,   155,    17
:T Cmd_N
:C )! Fnc_FPLIST
:A    List Tables
:D List Fatigue Property Tables
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FPLIST
Inp_P
Cmd_FPLIST
:E END
:! 
:N Fnc_FP_erase
:S    460,   194,   259
:T Command
:C )! Fnc_FP_erase
:A Erase Tables
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )/GO
:D Erase Fatig Prop Table
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FP
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Prm_[FP]  Erase fatigue tables
  Typ_LIS_RADIOB
LIS_All tables      ,1
LIS_Specified entry ,2
Cmd_)*CSET,1,1
 Fld_2
  Prm_      Specified table entry
  Typ_int
Cmd_)/GO
Cal_Fnc_FP_erase1,2,EQ,1,2
Cal_Fnc_FP_erase2,2,EQ,2,2
:E END
:! 
:N Fnc_FP_erase1
:S    110,    85,    18
:T Command
:P (LINPLUS)
:C )! Fnc_FP_erase1
Inp_P
Cmd_FP,-ALL
:E END
:! 
:N Fnc_FP_erase2
:S    187,    85,    95
:T Command
:P (LINPLUS)
:C )! Fnc_FP_erase2
Inp_P
Cmd_FP
 Fld_2
  Typ_Def_-ABS(
  Dlm_
 Fld_3
  Typ_Def_*CPAR(1)
  Dlm_
 Fld_4
  Typ_Def_)
:E END
:! 
:N Fnc_FP_mn
:S    390,   159,   224
:T Command
:C )! Fnc_FP_mn
:A    Elas-plas Par
:D Fatigue Elastic-Plastic Parameters
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FP
Inp_NoApply
Cmd_FP,61
  Fld_0
    Typ_Lab
    Prm_[FP]  Fatigue Elastic-Plastic Material Parameters
  Fld_2
    Prm_(Table entry 61)     Parameter M
    Typ_REAL
  Fld_3
    Prm_(Table entry 62)     Parameter N
    Typ_REAL
:E END
:! 
:N Fnc_FP_smt
:S   1154,   142,  1005
:T Command
:C )! Fnc_FP_smt
:A    Sm_T Table
:D Fatigue Sm-T Table
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FP
Inp_NoApply
Cmd_)*CSET,1,2
  Fld_0
    Typ_Lab
    Prm_[FP]  Table of Design Stress Intensity (Sm) vs. Temperature (T)
  Fld_0
    Typ_Lab
    Prm_      (Sm in locations 51-60 T in locations 41-50)
  Fld_0
    Typ_Lab
    Prm_                                       T             Sm
  Fld_2
    Prm_ Table entries (41)   Tm1
    Typ_REAL2
Cmd_)*CSET,3,4
  Fld_2
    Prm_               (42)   Tm2
    Typ_REAL2
Cmd_)*CSET,5,6
  Fld_2
    Prm_               (43)   Tm3
    Typ_REAL2
Cmd_)*CSET,7,8
  Fld_2
    Prm_               (44)   Tm4
    Typ_REAL2
Cmd_)*CSET,9,10
  Fld_2
    Prm_               (45)   Tm5
    Typ_REAL2
Cmd_)*CSET,11,12
  Fld_2
    Prm_               (46)   Tm6
    Typ_REAL2
Cmd_)*CSET,13,14
  Fld_2
    Prm_               (47)   Tm7
    Typ_REAL2
Cmd_)*CSET,15,16
  Fld_2
    Prm_               (48)   Tm8
    Typ_REAL2
Cmd_)*CSET,17,18
  Fld_2
    Prm_               (49)   Tm9
    Typ_REAL2
Cmd_)*CSET,19,20
  Fld_2
    Prm_               (50)  T1m10
    Typ_REAL2
Cal_Fnc_FP_smt2
:E END
:! 
:N Fnc_FP_smt2
:S    725,    81,   637
:T Command
:C )! Fnc_FP_smt2
:P (LINPLUS)
Inp_P
Cmd_FP,41
  Fld_2
    Typ_Def_*CPAR(1)
  Fld_3
    Typ_Def_*CPAR(3)
  Fld_4
    Typ_Def_*CPAR(5)
  Fld_5
    Typ_Def_*CPAR(7)
  Fld_6
    Typ_Def_*CPAR(9)
  Fld_7
    Typ_Def_*CPAR(11)
Cmd_FP,47
  Fld_2
    Typ_Def_*CPAR(13)
  Fld_3
    Typ_Def_*CPAR(15)
  Fld_4
    Typ_Def_*CPAR(17)
  Fld_5
    Typ_Def_*CPAR(19)
Cmd_FP,51
  Fld_2
    Typ_Def_*CPAR(2)
  Fld_3
    Typ_Def_*CPAR(4)
  Fld_4
    Typ_Def_*CPAR(6)
  Fld_5
    Typ_Def_*CPAR(8)
  Fld_6
    Typ_Def_*CPAR(10)
  Fld_7
    Typ_Def_*CPAR(12)
Cmd_FP,57
  Fld_2
    Typ_Def_*CPAR(14)
  Fld_3
    Typ_Def_*CPAR(16)
  Fld_4
    Typ_Def_*CPAR(18)
  Fld_5
    Typ_Def_*CPAR(20)
:E END
:! 
:N Fnc_FREQ
:S   2105,   216,  1882
:T Command
:C )! Fnc_FREQ
:C )/nopr
:C )keyw,key1,0,key2,0,key3,0
:C )/go
:A    Freq Table
:D Frequency Table
:K #((PREP7*SOLUTION)+(SINGLEPT*NOFILTER))
:P (LINPLUS)
:H Hlp_C_FREQ
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[FREQ]  Frequency Table 
 Fld_0
  Typ_Lab
  Prm_    Enter up to 20 values of     Frequency
Cmd_)*CSET,1,4
Fld_2
  Prm_                   FREQ1
  Typ_REAL
  Def_*GET(common,,svcom,,real,1)
Fld_3
  Prm_                   FREQ2
  Typ_REAL
  Def_*GET(common,,svcom,,real,2)
Fld_4
  Prm_                   FREQ3
  Typ_REAL
  Def_*GET(common,,svcom,,real,3)
Fld_5
  Prm_                   FREQ4
  Typ_REAL
  Def_*GET(common,,svcom,,real,4)
Cmd_)*CSET,5,8
Fld_2
  Prm_                   FREQ5
  Typ_REAL
  Def_*GET(common,,svcom,,real,5)
Fld_3
  Prm_                   FREQ6
  Typ_REAL
  Def_*GET(common,,svcom,,real,6)
Fld_4
  Prm_                   FREQ7
  Typ_REAL
  Def_*GET(common,,svcom,,real,7)
Fld_5
  Prm_                   FREQ8
  Typ_REAL
  Def_*GET(common,,svcom,,real,8)
Cmd_)*CSET,9,12
Fld_2
  Prm_                   FREQ9
  Typ_REAL
  Def_*GET(common,,svcom,,real,9)
Fld_3
  Prm_                   FREQ10
  Typ_REAL
  Def_*GET(common,,svcom,,real,10)
Fld_4
  Prm_                   FREQ11
  Typ_REAL
  Def_*GET(common,,svcom,,real,11)
Fld_5
  Prm_                   FREQ12
  Typ_REAL
  Def_*GET(common,,svcom,,real,12)
Cmd_)*CSET,13,16
Fld_2
  Prm_                   FREQ13
  Typ_REAL
  Def_*GET(common,,svcom,,real,13)
Fld_3
  Prm_                   FREQ14
  Typ_REAL
  Def_*GET(common,,svcom,,real,14)
Fld_4
  Prm_                   FREQ15
  Typ_REAL
  Def_*GET(common,,svcom,,real,15)
Fld_5
  Prm_                   FREQ16
  Typ_REAL
  Def_*GET(common,,svcom,,real,16)
Cmd_)*CSET,17,20
Fld_2
  Prm_                   FREQ17
  Typ_REAL
  Def_*GET(common,,svcom,,real,17)
Fld_3
  Prm_                   FREQ18
  Typ_REAL
  Def_*GET(common,,svcom,,real,18)
Fld_4
  Prm_                   FREQ19
  Typ_REAL
  Def_*GET(common,,svcom,,real,19)
Fld_5
  Prm_                   FREQ20
  Typ_REAL
  Def_*GET(common,,svcom,,real,20)
Cal_Fnc_FREQ1
:E END
:! 
:N Fnc_FREQ1
:S    221,   187,    27
:T Command
:C )! Fnc_FREQ1
:C )/nopr
:C )_z1=0
:C )*do,_z1,1,20
:C )/nopr
:C )*GET,_z9,CPAR,_z1
:C )*if,_z9,eq,0,EXIT
:C )*enddo
:C )/go
:P (LINPLUS)
Inp_P
Cmd_)!
Cal_Fnc_FREQ2
:E END
:! 
:N Fnc_FREQ2
:S    932,   326,   599
:T Command
:C )! Fnc_FREQ2
:C )/nopr
:C )_z1=_z1-1  ! The last non-zero field is needed
:C )*if,_z1,le,9,then
:C ) keyw,key1,1,key2,0,key3,0
:C )*elseif,_z1,le,18,then
:C ) keyw,key1,1,key2,1,key3,0
:C )*elseif,_z1,le,20,then
:C ) keyw,key1,1,key2,1,key3,1
:C )*endif
:C )/go
:P (LINPLUS)
Inp_P
Cmd_FREQ
K_CM(KEY1)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Typ_Def_*CPAR(7)
 Fld_9
  Typ_Def_*CPAR(8)
 Fld_10
  Typ_Def_*CPAR(9)
Cmd_FREQ
K_CM(KEY2)
 Fld_2
  Typ_Def_*CPAR(10)
 Fld_3
  Typ_Def_*CPAR(11)
 Fld_4
  Typ_Def_*CPAR(12)
 Fld_5
  Typ_Def_*CPAR(13)
 Fld_6
  Typ_Def_*CPAR(14)
 Fld_7
  Typ_Def_*CPAR(15)
 Fld_8
  Typ_Def_*CPAR(16)
 Fld_9
  Typ_Def_*CPAR(17)
 Fld_10
  Typ_Def_*CPAR(18)
Cmd_FREQ
K_CM(KEY3)
 Fld_2
  Typ_Def_*CPAR(19)
 Fld_3
  Typ_Def_*CPAR(20)
:E END
:! 
:N Fnc_FREQ_erase
:S    351,   180,   164
:T Command
:C )! Fnc_FREQ_erase
:A    Erase Table
:D Erase Single-Point Spectral Table
:K #(SINGLEPT*NOFILTER)
:P (LINPLUS)
:H Hlp_C_FREQ
Inp_NoApply
Cmd_FREQ
 Fld_0
  Typ_Lab
  Prm_[FREQ]  This function erases the table of single-point
 Fld_0
  Typ_Lab
  Prm_        spectral values versus frequency!
:E END
:! 
:N Fnc_FS
:S    620,   158,   455
:T Command
:C )! Fnc_FS
:A    Specified Val
:D Store Specified Stress Values at a Node
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FS
Inp_NoApply
Cmd_)*CSET,1,4
 Fld_0
  Typ_Lab
  Prm_[FS]  Store Specified Stress Values at a Node
 Fld_2
  Prm_NODE   Node no. for strs storage
  Typ_int
 Fld_3
  Prm_NEV    Event number
  Typ_int
  Def_1
 Fld_4
  Prm_NLOD   Loading number
  Typ_int
  Def_1
 Fld_5
  Prm_STITM  Type of data to be stored
  Typ_LIS_OPTIONB
   LIS_Total stresses  ,1
   LIS_Membrane+bending,2
   LIS_Temperature     ,3
Cal_Fnc_FS1,5,EQ,1
Cal_Fnc_FS2,5,EQ,2
Cal_Fnc_FS3,5,EQ,3
:E END
:! 
:N Fnc_FS1
:S    368,   100,   261
:T Command
:C )! Fnc_FS1
:D Specified Total Stresses
:H Hlp_C_FS
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[FS]  Specified Total Stresses
Cmd_FS
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_1
 Fld_6
  Prm_C1-C3   SX, SY, SZ
  Typ_real3
 Fld_9
  Prm_C4-C6   SXY, SYZ, SXZ
  Typ_real3
:E END
:! 
:N Fnc_FS2
:S    394,   113,   274
:T Command
:C )! Fnc_FS2
:D Specified Membrane + Bending Stresses
:H Hlp_C_FS
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[FS]  Specified Membrane + Bending Stresses
Cmd_FS
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_8
 Fld_6
  Prm_C1-C3   SX, SY, SZ
  Typ_real3
 Fld_9
  Prm_C4-C6   SXY, SYZ, SXZ
  Typ_real3
:E END
:! 
:N Fnc_FS3
:S    272,    97,   168
:T Command
:C )! Fnc_FS3
:D Specified Temperature
:H Hlp_C_FS
Inp_NoApply
Cmd_FS
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_7
 Fld_6
  Prm_[FS]  Specified Temperature
  Typ_real
:E END
:! 
:N Fnc_FSCALE
:S    646,   162,   477
:T Command
:C )! Fnc_FSCALE
:A    Forces
:D Scale Forces
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_UI_fscale
Cmd_DOFSEL,S
 Fld_0
  Typ_Lab
  Prm_[DOFSEL] [FSCALE]  Scale Forces on All Selected Nodes
 Fld_2
  Prm_[DOFSEL]  Forces to be scaled
  Typ_MLis
  LIS_*READ,F
  Bnd_0.0,6.0
Cmd_FSCALE
 Fld_0
  Prm_[FSCALE]
 Fld_2
  K_FL(harmonic)
  Prm_RFACT  Scale factor
  Typ_REAL
  Def_1.0
 Fld_2
  K_FL(HARMONIC*NOFILTER)
  Prm_RFACT  Scale factr for real part
  Typ_REAL
  Def_1.0
 Fld_3
  K_FL(HARMONIC*NOFILTER)
  Prm_IFACT  Scale factr for imag part
  Typ_REAL
  Def_1.0
Cmd_DOFSEL,ALL
:E END
:! 
:N Fnc_FSDELE
:S    358,   153,   198
:T Command
:C )! Fnc_FSDELE
:A    Dele Stresses
:D Delete Stored Stresses
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FSDELE
 Fld_0
  Typ_Lab
  Prm_[FSDELE]  Delete Stored Stresses
Cmd_FSDELE
 Fld_2
  Prm_NLOC  Location number
  Typ_int
 Fld_3
  Prm_NEV   Event number
  Typ_int
 Fld_4
  Prm_NLOD  Loading number
  Typ_int
:E END
:! 
:N Fnc_FSILoad
:S    753,   386,   360
:T Command
:C )! Fnc_FSILoad
:C )/NOPR
:C )KEYW,fsint,0
:C )KEYW,fsiar,0
:C )KEYW,fsiel,0
:C )KEYW,fsili,0
:C )*IF,_z8,EQ,'SF',THEN
:C )KEYW,fsint,1
:C )*ELSEIF,_z8,EQ,'SFE',THEN
:C )KEYW,fsiel,1
:C )*ELSEIF,_z8,EQ,'SFA',THEN
:C )KEYW,fsiar,1
:C )*ELSEIF,_z8,EQ,'SFL',THEN
:C )KEYW,fsili,1
:C )*ENDIF
:C)/GO
:D Apply %_z9% on %_z7%
:H Hlp_C_%_z8%
Cmd_)!
Fld_1
 Typ_Def_*PAR(_z8)
Fld_2
 Typ_Def_P51X
!
Fld_3
 K_FL(FSIEL)
 Typ_Def_1
!
Fld_3
 K_FL(FSINT*FSILI)
 Typ_Def_FSIN
!
Fld_4
 K_FL(FSIEL*FSIAR)
 Typ_Def_FSIN
!
Fld_4
 K_FL(FSINT*FSILI)
 Prm_VALUE  Define %_z9% number
 Typ_Int
!
Fld_5
 K_FL(FSIAR)
 Prm_VALUE  Define %_z9% number
 Typ_Int
!
Fld_6
 K_FL(FSIEL)
 Prm_VALUE  Define %_z9% number
 Typ_Int
!
:E END
:! 
:N Fnc_FSI_Conv
:S    700,   219,   473
:T Command
:C )! Fnc_FSI_Conv
:A Convergence
:D FSI Convergence Settings
:C )/NOPR
:C )*GET,_z9,common,,FSICMD,,int,2   ! Get Frequency for time steps
:H Hlp_C_FSCO
:H Hlp_C_FSOU
Inp_NoApply
 Fld_0
  Prm_Choose FSI Convergence Settings
Cmd_)*SET,_zy1
 Fld_2
  Prm_[FSCO] Set Convergence Item
  Typ_LIS_OptionB
   LIS_ALL,0
   LIS_DISP-UX,1
   LIS_DISP-UY,3
   LIS_DISP-UZ,5
   LIS_FORC-FX,2
   LIS_FORC-FY,4
   LIS_FORC-FZ,6
   LIS_TEMP,7
   LIS_HFLU,8
  Fld_0
   Typ_Lab
   Prm_
  Fld_0
   Typ_Lab
   Prm_
Cmd_)*SET,_z9
 Fld_2
  Prm_[FSOU] Set Time Step Freq 
  Typ_Int
  Def_*PAR(_z9)
Cmd_)/GO
Cal_Fnc_FSI_values,2,eq,0,1
Cal_Fnc_FSI_tables,2,gt,0,1
:E END 
:! 
:N Fnc_FSI_Iter
:S    301,   203,    90
:T Command
:C )! Fnc_FSI_Iter
:A Iterations
:D FSI Iteration Settings
:C )/NOPR
:C )*GET,_z2,common,,FSICMD,,int,1   ! Get Iteration setting
:C )/GO
:H Hlp_C_FSIT
Inp_NoApply
Cmd_FSIT
 Fld_2
  Prm_[FSIT] Set FSI Max Iterations
  Typ_Int
  Def_*PAR(_z2)
:E END 
:! 
:N Fnc_FSI_Opt
:S    385,   150,   228
:T Command
:C )! Fnc_FSI_Opt
:A Options
:D FSI Options
:H Hlp_C_FSAN
:H Hlp_C_FSOR
:H Hlp_C_FSTR
:H Hlp_C_FSIN
Inp_P
Cmd_FSAN
 Fld_2
  Typ_Def_*PAR(_z1)
Cmd_FSOR
 Fld_2
  Typ_Def_*CPAR(1)
Cmd_FSTR
 Fld_2
  Typ_Def_FLUID
 Fld_3
  Typ_Def_*CPAR(2)
Cmd_FSTR
 Fld_2
  Typ_Def_SOLID
 Fld_3
  Typ_Def_*CPAR(3)
Cmd_FSIN
 Fld_2
  Typ_Def_*CPAR(4)
:E END
:! 
:N Fnc_FSI_Options
:S   1724,   984,   733
:T Command
:C )! Fnc_FSI_Options
:C )/NOPR
:C )*del,_zc
:C )*dim,_zc,,4
:C )*GET,_z1,common,,dofcom,,int,76   ! get FSIFLAG for FSAN command
:C )*GET,_z2,common,,fsicmd,,int,3    ! get Fluid-Solid Model/Analysis
:C )*GET,_z3,common,,fsicmd,,int,4    ! get Fluid-Solid Model/Analysis
:C )*GET,_z4,common,,fsicmd,,int,5    ! get Fluid-Solid order for FSOR
:C )*GET,_z5,common,,fsicmd,,int,6    ! get Fluid-Solid order for FSOR
:C )*GET,_z6,common,,fsicmd,,int,26   ! get Load Transfer data for FSIN
:C )*IF,_z6,eq,1,then
:C )_load = 'CONS'
:C )*else
:C )_load = 'NONC'
:C )*endif
:C )*IF,_z4,eq,1,then
:C )_order = 'FLUID'
:C )*ELSE
:C )_order = 'SOLID'
:C )*ENDIF
:C )*IF,_z2,eq,0,then
:C )_anal = 'TRAN'
:C )*ELSEIF,_z2,eq,1,then
:C )_anal = 'STAT'
:C )*ENDIF
:C )*IF,_z3,eq,0,then
:C )_anal1 = 'TRAN'
:C )*ELSEIF,_z3,eq,1,then
:C )_anal1 = 'STAT'
:C )*ENDIF
:A Options
:D FSI Options
:H Hlp_C_FSAN
:H Hlp_C_FSOR
:H Hlp_C_FSTR
:H Hlp_C_FSIN
Inp_NoApply
Cmd_)*SET,_z1
 Fld_2
  Prm_[FSAN] Set FSI key
  Typ_Lis_RadioB
  Lis_OFF,0
  Lis_ON,1
  Def_*PAR(_z1)
 Fld_0
  Typ_Sep
Cmd_)*CSET,1,4
 Fld_2
  Prm_[FSOR] Set Fluid-Solid Order
  Typ_Lis_RadioB
  Lis_Fluid first,FLUID
  Lis_Solid first,SOLID
  Def_*PAR(_order)
 Fld_0
  Typ_Sep
 Fld_3
  Prm_[FSTR,FLUID] Fluid Analysis Type 
  Typ_Lis_RadioB
  Lis_Transient,TRAN
  Lis_Static,STAT
  Def_*PAR(_anal)
 Fld_0
  Prm_
 Fld_4
  Prm_[FSTR,SOLID] Solid Analysis Type 
  Typ_Lis_RadioB
  Lis_Transient,TRAN
  Lis_Static,STAT
  Def_*PAR(_anal1)
 Fld_0
  Typ_Sep
  Fld_5
   Prm_[FSIN] Set Load Transfer Opts
   Typ_Lis_RadioB
   Lis_Profile Preserving,NONC
   Lis_Global Conservative,CONS
   Def_*PAR(_load)
Cmd_)/GO
Cal_Fnc_FSI_Opt
:E END
:! 
:N Fnc_FSI_Relax
:S    535,   242,   285
:T Command
:C )! Fnc_FSI_Relax
:A Relaxation
:D FSI Relaxation Settings
:C )/NOPR
:C )*do,i,1,5
:C )_j = i + 10
:C )*GET,_z%i%,common,,FSICMD,,real,_j  ! Get relaxation values
:C )*ENDDO
:H Hlp_C_FSRE
Inp_NoApply
Cmd_)*SET,_zx1
 Fld_0
  Prm_Choose FSI Relaxation Values
 Fld_2
  Prm_[FSRE] Set Relaxation Item
   Typ_LIS_OptionB
   LIS_ALL ,0 
   LIS_DISP,11
   LIS_FORC,12
   LIS_TEMP,13
   LIS_HFLU,14
   LIS_VELO,15
Cmd_)/GO
Cal_Fnc_FSRS_values,2,eq,0,1
Cal_Fnc_FSRS_tables,2,gt,0,1
:E END 
:! 
:N Fnc_FSI_Restart
:S    505,   275,   223
:T Command
:C )! Fnc_FSI_Restart
:A Restart
:D FSI Restart Settings
:C )/NOPR
:C )*GET,_z2,common,,FSICMD,,real,16  ! Get restart time
:C )*GET,_z3,common,,FSICMD,,int,9   ! Get restart load step
:C )/GO
:K (SOLUTION)
:H Hlp_C_FSRS
Inp_NoApply
Cmd_)*CSET,1,2
 Fld_2
  Prm_[FSRS] Choose Restart Option
  Typ_LIS_OptionB
  Lis_Time,TIME
  Lis_Load step,LDST
 Fld_3
  Prm_       Set Value
  Typ_real
Cal_Fnc_res_time,2,es,TIME,1
Cal_Fnc_res_load,2,es,LDST,1
:E END
:! 
:N Fnc_FSI_Stat
:S    103,    80,    15
:T Command
:C )! Fnc_FSI_Stat
:A Status
Inp_P
Cmd_FSST
:E END 
:! 
:N Fnc_FSI_Time
:S    562,   311,   244
:T Command
:C )! Fnc_FSI_Time
:A Time
:D FSI Time Settings
:C )/NOPR
:C )*GET,_z2,common,,FSICMD,,real,9  ! Get End time 
:C )*GET,_z3,common,,FSICMD,,real,10  ! Get Time Increment
:C )*GET,_z4,common,,FSICMD,,real,17  ! Get Load time
:C )/GO
:H Hlp_C_FSTI
:H Hlp_C_FSDT
Inp_NoApply
Cmd_FSTI
 Fld_2
  Prm_[FSTI] Set FSI End Time
  Typ_Real
  Def_*PAR(_z2)
 Fld_3
  Prm_       Set FSI Load Time
  Typ_Real
  Def_*PAR(_z4)
 Fld_0
  Typ_lab
  Prm_
Cmd_FSDT
 Fld_2
  Prm_[FSDT] Set Time Step
  Typ_Real
  Def_*PAR(_z3)
:E END
:! 
:N Fnc_FSI_tables
:S    702,   524,   171
:T Command
:C )! Fnc_FSI_tables
:C )/NOPR
:C )*IF,_zy1,eq,1,then
:C )_item = 'UX  '
:C )*ELSEIF,_zy1,eq,2,then
:C )_item = 'FX  '
:C )*ELSEIF,_zy1,eq,3,then
:C )_item = 'UY  '
:C )*ELSEIF,_zy1,eq,4,then
:C )_item = 'FY'
:C )*ELSEIF,_zy1,eq,5,then
:C )_item = 'UZ  '
:C )*ELSEIF,_zy1,eq,6,then
:C )_item = 'FZ  '
:C )*ELSEIF,_zy1,eq,7,then
:C )_item = 'TEMP'
:C )*ELSEIF,_zy1,eq,8,then
:C )_item = 'HFLU'
:C )*ENDIF
:C )/GO
:A Convergence
:D Set FSI Convergence values
:H Hlp_C_FSCO
Inp_NoApply
Cmd_FSCO
 Fld_2
 Typ_Def_*PAR(_item)
 Fld_3
  Typ_Real
  Prm_Set convergence value to
  Def_*GET(common,,FSICMD,,real,_zy1)
Cmd_FSOU
 Fld_2
 Typ_Def_*PAR(_z9)
:E END
:! 
:N Fnc_FSI_values
:S    342,   170,   165
:T Command
:C )! Fnc_FSI_values
:C )/NOPR
:C )_item = 'ALL '
:C )/GO
:A Convergence
:D Set FSI Convergence values
:H Hlp_C_FSCO
Inp_NoApply
Cmd_FSCO
 Fld_2
 Typ_Def_ALL
 Fld_3
  Typ_Real
  Prm_Set ALL convergence values to
  Def_*GET(common,,FSICMD,,real,1)
Cmd_FSOU
 Fld_2
 Typ_Def_*PAR(_z9)
:E END
:! 
:N Fnc_FSLIST
:S    431,   151,   273
:T Command
:C )! Fnc_FSLIST
:A    List Stresses
:D List Stored Stresses
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FSLIST
 Fld_0
  Typ_Lab
  Prm_[FSLIST]  List Stored Stresses
Cmd_FSLIST
 Fld_0
  Typ_Lab
  Prm_NLOC1,NLOC2,NINC
 Fld_2
  Prm_      Location number range
  Typ_int3
  Def_ALL
 Fld_5
  Prm_NEV   Event number
  Typ_int
  Def_ALL
 Fld_6
  Prm_NLOD  Loading number
  Typ_int
  Def_ALL
:E END
:! 
:N Fnc_FSNODE
:S    434,   182,   245
:T Command
:C )! Fnc_FSNODE
:A    From rst File
:D Store Stresses at a Node, From Results File
:K #(POST1+RESULTS)
:P (LINPLUS)
:H Hlp_C_FSNODE
 Fld_0
  Typ_Lab
  Prm_[FSNODE]  Store Stresses at a Node, from Results File
Cmd_FSNODE
 Fld_2
  Prm_NODE  Node no. for strs storage
  Typ_int
 Fld_3
  Prm_NEV   Event number
  Typ_int
  Def_1
 Fld_4
  Prm_NLOD  Loading number
  Typ_int
  Def_1
:E END
:! 
:N Fnc_FSPLOT
:S    898,   151,   740
:T Command
:C )! Fnc_FSPLOT
:A    Plot Stresses
:D Plot Stored Stresses
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FSPLOT
 Fld_0
  Typ_Lab
  Prm_[FSPLOT]  Plot Stored Stresses
Cmd_FSPLOT
 Fld_2
  Prm_NLOC  Location number
  Typ_int
  Def_1
 Fld_3
  Prm_NEV   Event number
  Typ_int
  Def_1
 Fld_4
  Prm_ITEM  Item to be plotted
  Typ_IDX
IDX_Total stresses  ,Direct        SX,1
IDX_Total stresses  ,              SY,2
IDX_Total stresses  ,              SZ,3
IDX_Total stresses  ,Shear        SXY,4
IDX_Total stresses  ,             SYZ,5
IDX_Total stresses  ,             SXZ,6
IDX_Membrane+bending,Direct        SX,8
IDX_Membrane+bending,              SY,9
IDX_Membrane+bending,              SZ,10
IDX_Membrane+bending,Shear        SXY,11
IDX_Membrane+bending,             SYZ,12
IDX_Membrane+bending,             SXZ,13
IDX_Temperature     ,Temperature TEMP,7
:E END
:! 
:N Fnc_FSRS_tables
:S    536,   394,   135
:T Command
:C )! Fnc_FSRS_tables
:C )/NOPR
:C )*IF,_zx1,eq,11,then
:C )_item = 'DISP'
:C )*ELSEIF,_zx1,eq,12,then
:C )_item = 'FORC'
:C )*ELSEIF,_zx1,eq,13,then
:C )_item = 'TEMP'
:C )*ELSEIF,_zx1,eq,14,then
:C )_item = 'HFLU'
:C )*ELSEIF,_zx1,eq,15,then
:C )_item = 'VELO'
:C )*ENDIF
:C )/GO
:A Relaxation 
:D Set FSI Relaxation Values
:H Hlp_C_FSRE
Inp_NoApply
Cmd_FSRE
 Fld_2
 Typ_Def_*PAR(_item)
 Fld_3
  Typ_Real
  Prm_Set relaxation value to
  Def_*GET(common,,FSICMD,,real,_zx1)
:E END
:! 
:N Fnc_FSRS_values
:S    307,   170,   130
:T Command
:C )! Fnc_FSRS_values
:C )/NOPR
:C )_item = 'ALL '
:C )/GO
:A Relaxation
:D Set FSI Relaxation Values
:H Hlp_C_FSRE
Inp_NoApply
Cmd_FSRE
 Fld_2
 Typ_Def_ALL
 Fld_3
  Typ_Real
  Prm_Set ALL relaxation values to
  Def_*GET(common,,FSICMD,,real,11)
:E END
:! 
:N Fnc_FSSECT
:S    586,   190,   389
:T Command
:C )! Fnc_FSSECT
:A    At Cross Sect
:D Store Linearized Stresses at a Cross Section (Path)
:K #(POST1+RESULTS)
:P (LINPLUS)
:H Hlp_C_FSSECT
 Fld_0
  Typ_Lab
  Prm_[FSSECT]  Store Linearized Stresses at a Cross Section (Path)
Cmd_FSSECT
 Fld_3
  Prm_NEV   Event number
  Typ_Int
  Def_1
 Fld_4
  Prm_NLOD  Loading number
  Typ_Int
  Def_1
Fld_0
Typ_Sep
 Fld_0
  Typ_Lab
  Prm_For axisymmetric models
 Fld_2
  Prm_  RHO  Avg radius of curvature
  Typ_REAL
  Def_Blank
 Fld_5
  Prm_  KBR  Ignore bending stresses?
  Typ_LOGI,No,Yes
:E END
:! 
:N Fnc_FSSPARM
:S    480,   195,   278
:T Command
:C )! Fnc_FSSPARM
:A    FSS Parameters
:D Calculate FSS Parameters
:K #((POST1+RESULTS+EDGEELC+HARMONIC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_FSSPARM
Inp_NoApply
Cmd_FSSPARM
 Fld_0
  Typ_Lab
  Prm_[FSSPARM]  This function calculates FSS parameters
 Fld_0
  Typ_Lab
  Prm_         for scatter analysis of a periodic structure
 Fld_2
  Prm_Porti     Input port number
  Typ_Int
 Fld_3
  Prm_Portj     Output port number
  Typ_Int
:E END
:! 
:N Fnc_FSUM
:S    678,   196,   475
:T Command
:C )! Fnc_FSUM
:A Total Force Sum
:D Calculate Total Force Sum for All Selected Nodes
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FSUM
Inp_NoApply
Cmd_FSUM
 Fld_0
  Typ_Lab
  Prm_[FSUM]  This function calculates, for all selected nodes,
 Fld_0
  Typ_Lab
  Prm_        the total force and moment contributions of all selected
 Fld_0
  Typ_Lab
  Prm_        elements attached to those nodes.
 Fld_2
  Prm_LAB     Perform Summation in
  Typ_LIS_OPTIONB
   LIS_Global Cartesian    ,0 
   LIS_Active RSYS         ,RSYS
 Fld_3
  Prm_ITEM    Selected Nodes
  Typ_LIS_OPTIONB
   LIS_ALL   , 
   LIS_Contact Only ,CONT
:E END
:! 
:N Fnc_FTCALC
:S    443,   192,   244
:T Command
:C )! Fnc_FTCALC
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )/GO
:A Calculate Fatig
:D Calculate Fatigue
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FTCALC
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Prm_[FTCALC]  Calculate fatigue at
  Typ_LIS_RADIOB
   LIS_Location number ,0
   LIS_Node number     ,1
Cmd_)*CSET,1,1
 Fld_2
  Prm_  Specified location or node no.
  Typ_int
  Def_1
Cmd_)/GO
Cal_Fnc_FTCALC2
:E END
:! 
:N Fnc_FTCALC2
:S    368,   234,   127
:T Command
:C )! Fnc_FTCALC2
:C )/NOPR
:C )KEYW,KEY1,0
:C )*IF,_z(1),EQ,0,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )/GO
:A Calculate Fatig
:D Calculate Fatigue
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FTCALC
Inp_P
Cmd_FTCALC
 Fld_2
  K_FL(KEY1)
  Typ_Def_*CPAR(1)
 Fld_2
  K_FL(key1)
  Typ_Def_ 
 Fld_3
  K_FL(key1)
  Typ_Def_*CPAR(1)
:E END
:! 
:N Fnc_FTRAN
:S    366,   179,   180
:T Command
:C )! Fnc_FTRAN
:A    Forces
:D Transfer Keypoint Forces to Nodes
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_FTRAN
Inp_NoApply
Cmd_FTRAN
 Fld_0
  Typ_Lab
  Prm_[FTRAN]  This function transfers forces from currently
 Fld_0
  Typ_Lab
  Prm_         selected keypoints to currently selected nodes.
:E END
:! 
:N Fnc_FTSIZE
:S    469,   149,   313
:T Command
:C )! Fnc_FTSIZE
:A Size Settings
:D Fatigue Size Settings
:H Hlp_C_FTSIZE
:P (LINPLUS)
:K #(POST1)
Inp_NoApply
Cmd_FTSIZE
 Fld_0
  Typ_Lab
  Prm_[FTSIZE]  Fatigue Size Settings
 Fld_2
  Prm_MXLOC  Max. no. of fatigue loc's
  Typ_int
  Def_5
 Fld_3
  Prm_MXEV   Max. no. of fatig events
  Typ_int
  Def_10
 Fld_4
  Prm_MXLOD  Max. no. of loadings -
  Typ_int
  Def_3
 Fld_0
  Typ_Lab
  Prm_       - in each event
:E END
:! 
:N Fnc_FTWRIT
:S    294,   193,    94
:T Command
:C )! Fnc_FTWRIT
:C )/NOPR
:C )*SET,_zx,'*'
:C )/GO
:A Write Fatig Data
:D Write Fatigue Data to File
:K #(POST1)
:P (LINPLUS)
:H Hlp_C_FTWRITE
Fmt_H
Cmd_FTWRITE
 Fld_2
  Prm_[FTWRITE]  Fatigue file name
  Typ_FILE_INLINE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_FUNC_EDIT
:S    161,   106,    48
:T Cmd
:C )!  Fnc_FUNC_EDIT
:A    Define/Edit
:D Function Editor
Inp_P
Cmd_)~eui,'euidl::equationeditor::create'
:E END
:! 
:N Fnc_FUNC_READ
:S    159,   104,    48
:T Cmd
:C )!  Fnc_FUNC_READ
:A    Read File
:D Function Editor
Inp_P
Cmd_)~eui,'euidl::equationloader::create'
:E END
:! 
:N Fnc_FVMESH
:S    342,   168,   167
:T Cmd
:C )! Fnc_FVMESH
:A  Area Elements
:D Tet Mesh From Exterior Detached Area Elements
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_FVMESH
Cmd_FVMESH
Fld_0
 Typ_Lab
 Prm_[FVMESH] Create Tet Mesh From Selected Area Elements 
Fld_2
 Prm_KEEP    Area Elements
 Typ_LIS_RADIOB
 LIS_Delete,0
 LIS_Keep,1
 Def_0
:E END
:! 
:N Fnc_F_amps
:S    492,   334,   151
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'F'
:C )*SET,_z9,'AMPS'
:C )/GO
:C )! Fnc_F_amps
:C )! Nodes for F command below
:A    On Nodes
:D Apply AMPS on Nodes
:K #((PREP7*SOLUTION))
:K ((ELECTRIC+elecstat+vfed+circ+edgeelc+timeintp)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_F
Inp_P
Cmd_)!
Fld_2
 Prm_[F]  Pick or enter nodes for electric current specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_F
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_F_amps_ic
:S    471,   312,   152
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'F'
:C )*SET,_z9,'AMPS'
:C )/GO
:C )! Fnc_F_amps_ic
:C )! Nodes for F command below
:A    On Nodes
:D Apply AMPS on Nodes
:K ((ELECTRIC+elecstat+circ+edgeelc+TIMEINTP)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_F
Inp_P
Cmd_)!
Fld_2
 Prm_[F]  Pick or enter nodes for impressed current specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_F
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_F_chrg
:S    502,   354,   141
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'F'
:C )*SET,_z9,'CHRG'
:C )/GO
:C )! Fnc_F_chrg
:C )! Nodes for F command below
:A    On Nodes
:D Apply CHRG on Nodes
:K #(PREP7*SOLUTION)
:K (PR_ELMAG*pr_set*PR_MULTI*(PR_THERM+ELECTRIC))
:K ((ELECSTAT+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_F
Inp_P
Cmd_)!
Fld_2
 Prm_[F]  Pick or enter nodes for charge specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_F
Cal_Fnc_EMLoad
:E END
:! 
:N Fnc_F_csg
:S    377,   233,   137
:T Cmd_P
:C )! Fnc_F_csg
:C )! Nodes for F command below
:A    On Nodes
:D Apply CSG on Nodes
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+VECTORP+edgeflx)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_F
Inp_P
Cmd_)!
Fld_2
 Prm_[F]  Pick or enter nodes for current segment specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_F_csg2
:E END
:! 
:N Fnc_F_csg2
:S    475,   112,   356
:T Command
:C )! Fnc_F_csg2
:D Apply CSG on Nodes
:B Fnc_F_csg
:H Hlp_C_F
Cmd_F,P51X
Fld_0
 Typ_LAB
 Prm_[F] Apply Mag Current Segment (CSG) on Nodes
Fld_2
 Prm_Lab    Current segment direction
 Typ_LIS_optionb
 LIS_*READ,F
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE  Current segment value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE  Real part of current segm
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2 Imag part of current segm
:E END
:! 
:N Fnc_F_flow_a
:S    670,   316,   347
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'F'
:C )*SET,_z9,'FLOW'
:C )*DEL,_zc
:C )*DIM,_zc,char,1
:C )*SET,_zc(1),'FLOW'
:C )/GO
:C )! Fnc_F_flow_a
:C )! Nodes for F command below
:A On Nodes
:D Apply FLOW on Nodes
:K #((PREP7*SOLUTION)+(cfd*NOFILTER))
:H Hlp_C_F
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,NODE
Cmd_)/GO
! Exclude_from_paths
Cmd_NSEL
Fld_2
 Typ_Def_R
Fld_5
  Prm_[F]  Pick or enter nodes for flow specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cal_Fnc_CFDLoad
:E END
:! 
:N Fnc_F_flux
:S    379,   236,   136
:T Cmd_P
:C )! Fnc_F_flux
:C )! Nodes for F command below
:A    On Nodes
:D Apply FLUX on Nodes
:K #(PREP7*SOLUTION)
:K ((MAGNETIC+SCALARP+edgeflx)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_F
Inp_P
Cmd_)!
Fld_2
 Prm_[F]  Pick or enter nodes for magnetic flux specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_F_flux2
:E END
:! 
:N Fnc_F_flux2
:S    424,   116,   301
:T Command
:C )! Fnc_F_flux2
:D Apply FLUX on Nodes
:B Fnc_F_flux
:H Hlp_C_F
Cmd_F,P51X
Fld_0
 Typ_LAB
 Prm_[F]  Apply Magnetic Flux (FLUX) on Nodes
Fld_2
 Typ_DEF_FLUX
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE  Value of magnetic flux
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE  Real part of magnetic flux
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2 Imag part of magnetic flux
:E END
:! 
:N Fnc_F_fm
:S    321,   187,   127
:T Cmd_P
:C )! Fnc_F_fm
:C )! Nodes for F command below
:A On Nodes
:D Apply F/M on Nodes
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_F
Inp_P
Cmd_)!
Fld_2
 Prm_[F]  Pick or enter nodes for force/moment loading
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_F_fm2
:E END
:! 
:N Fnc_F_fm2
:S    918,   187,   724
:T Command
:C )! Fnc_F_fm2
:C )/NOPR
:C )*SET,_z7,'F'
:C )*SET,_z9,'F/M'
:C )*SET,_z10,'Nodes'
:C )/GOPR
:D Apply F/M on Nodes
:B Fnc_F_fm
:H Hlp_C_F
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[F]  Apply Force/Moment on Nodes 
Fld_2
 Prm_Lab     Direction of force/mom
 Typ_LIS_OPTIONB
 LIS_*READ,F
!Fld_2
! K_FL(CFD)
! Prm_Lab     Direction of force/mom
! Typ_LIS_OPTIONB
! LIS_FX, FX
! LIS_FY,FY
! LIS_FZ,FZ
Fld_8
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Force/moment value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE   Real part of force/mom
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2  Imag part of force/mom
cmd_)/GOPR
! Cust_Cmd_F
Cal_Fnc_Stvalue,8,eq,0,2
Cal_Fnc_Stoldtable,8,eq,1,2
Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_F_fm2CM
:S    944,   203,   734
:T Command
:C )! Fnc_F_fm2CM
:C )/NOPR
:C )*SET,_z7,'F'
:C )*SET,_z9,'F/M'
:C )*SET,_z10,'Nodes'
:C )/GOPR
:D Apply F/M on Node Components
:B Fnc_F_fmCM
:H Hlp_C_F
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[F]  Apply Force/Moment on Node Components 
Fld_2
 Prm_Lab     Direction of force/mom
 Typ_LIS_OPTIONB
 LIS_*READ,F
!Fld_2
! K_FL(CFD)
! Prm_Lab     Direction of force/mom
! Typ_LIS_OPTIONB
! LIS_FX, FX
! LIS_FY,FY
! LIS_FZ,FZ
Fld_8
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 K_FL(harmonic)
 Typ_REAL
 Prm_VALUE   Force/moment value
Fld_3
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE   Real part of force/mom
Fld_4
 K_FL(HARMONIC)
 Typ_REAL
 Prm_VALUE2  Imag part of force/mom
cmd_)/GOPR
! Cust_Cmd_F
Cal_Fnc_Stvalue,8,eq,0,2
Cal_Fnc_Stoldtable,8,eq,1,2
Cal_Fnc_Stnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_F_fmCM
:S    430,   284,   139
:T Cmd_P
:C )! Fnc_F_fmCM
:C )! Node Components for F command below
:C )/UI,CMPF,NODE ! *** restrict picker to NODE components ***
:A On Node Components
:D Apply F/M on Node Components
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_F
Inp_P
Cmd_)!
Fld_2
 Prm_[F]  Pick or enter node components for force/moment loading
 Typ_COMP
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_F_fm2CM
:E END
:! 
:N Fnc_F_heat
:S    420,   268,   145
:T Cmd_P
:C )/NOPR
:C )*SET,_z7,'nodes'
:C )*SET,_z8,'F'
:C )*SET,_z9,'HEAT'
:C )/GO
:C )! Fnc_F_heat
:C )! Nodes for F command below
:A On Nodes
:D Apply HEAT on Nodes
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_F
Inp_P
Cmd_)!
Fld_2
 Prm_[F]  Pick or enter nodes for heat flow specification
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
! Cust_Cmd_F
Cal_Fnc_F_heat2
:E END
:! 
:N Fnc_F_heat2
:S    768,   195,   566
:T Command
:C )! Fnc_F_heat2
:C )/NOPR
:C )*SET,_z7,'F'
:C )*SET,_z9,'HEAT'
:C )*SET,_z10,'Nodes'
:C )/GOPR
:D Apply Heat on Nodes
:B Fnc_F_heat
:H Hlp_C_F
cmd_)/NOPR
Cmd_)*CSET,1,12
Fld_0
 Typ_LAB
 Prm_[F]  Apply HEAT on Nodes
Fld_2
 Prm_Lab    DOFs to be constrained 
 Typ_MLis
 LIS_*READ,F
 Bnd_0.0,1.0
!Fld_2
! K_FL(CFD)
! Prm_Lab     Direction of force/mom
! Typ_LIS_OPTIONB
! LIS_FX, FX
! LIS_FY,FY
! LIS_FZ,FZ
Fld_8
 Prm_        Apply as
 Typ_LIS_OPTIONB
 LIS_Constant value,0
 LIS_Existing table,1
 LIS_New table,2
 Def_0
Fld_0
 Typ_Lab
 Prm_If Constant value then:
Fld_3
 Typ_REAL
 Prm_VALUE   Load HEAT value
cmd_)/GOPR
! Cust_Cmd_F
Cal_Fnc_thvalue,8,eq,0,2
Cal_Fnc_tholdtable,8,eq,1,2
Cal_Fnc_thnewtbl,8,eq,2,2
:E END
:! 
:N Fnc_F_multi
:S    371,   228,   136
:T Cmd_P
:C )! Fnc_F_multi
:C )! Nodes for F command below
:A    On Nodes
:D Apply Nodal MultiPt on Nodes
:K #((PREP7*SOLUTION)+(MULTIPNT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_F
Inp_P
Cmd_)!
Fld_2
 Prm_[F]  Pick or enter nodes for nodal multi-point spectrum
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_F_multi2
:E END
:! 
:N Fnc_F_multi2
:S    397,   128,   262
:T Command
:C )! Fnc_F_multi2
:D Apply Nodal MultiPt on Nodes
:B Fnc_F_multi
:H Hlp_C_F
Cmd_F,P51X
Fld_0 
 Typ_LAB
 Prm_[F]  Apply Nodal Multi-Point Spectrum on Nodes
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,FX
 LIS_Nodal Y         ,FY
 LIS_Nodal Z         ,FZ
Fld_3
 Prm_VALUE   Scale factor
 Typ_REAL
 Def_1.0
:E END
:! 
:N Fnc_F_p
:S    241,   116,   118
:T Cmd_P
:C )! Fnc_F_p ORPHAN
:A    On Nodes
:D Apply Forces on Nodes
:H Hlp_C_F
Inp_P
Cmd_)!
Fld_2
 Prm_[F]  Pick or enter nodes for force loading
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
 PFM_1
Cal_Fnc_F_p2
:E END
:! 
:N Fnc_F_p2
:S    337,   105,   225
:T Command
:C )! Fnc_F_p2 ORPHAN
:D Apply Forces on Nodes
:H Hlp_C_F
Cmd_F,P51X
Fld_0
 Typ_LAB
 Prm_[F]  Apply Forces on Nodes
Fld_2
 Prm_Lab     Type of force
 Typ_LIS_OPTIONB
 LIS_*READ,F
Fld_0
 Typ_Lab
 Prm_VALUE,VALUE2  Force values -
Fld_3
 Typ_REAL2
 Prm_      - real and imaginary parts
:E END
:! 
:N Fnc_F_psd
:S    354,   219,   128
:T Cmd_P
:C )! Fnc_F_psd
:C )! Nodes for F command below
:A    On Nodes
:D Apply NodalPSD on Nodes
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_F
Inp_P
Cmd_)!
Fld_2
 Prm_[F]  Pick or enter nodes for nodal PSD excitation
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_F_psd2
:E END
:! 
:N Fnc_F_psd2
:S    455,   117,   331
:T Command
:C )! Fnc_F_psd2
:D Apply NodalPSD on Nodes
:B Fnc_F_psd
:H Hlp_C_F
Cmd_F,P51X
Fld_0 
 Typ_LAB
 Prm_[F]  Apply Nodal PSD Excitation on Nodes
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,FX
 LIS_Nodal Y         ,FY
 LIS_Nodal Z         ,FZ
 LIS_Nodal MX        ,MX
 LIS_Nodal MY        ,MY
 LIS_Nodal MZ        ,MZ
Fld_3
 Prm_VALUE   Scale factor
 Typ_REAL
 Def_1.0
:E END
:! 
:N Fnc_F_sv
:S    359,   218,   134
:T Cmd_P
:C )! Fnc_F_sv
:C )! Nodes for F command below
:A    On Nodes
:D Apply ForcSpect on Nodes
:K #((PREP7*SOLUTION)+(SINGLEPT*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_F
Inp_P
Cmd_)!
Fld_2
 Prm_[F]  Pick or enter nodes for single-point force spectrum
 Typ_NODE
 Min_1
 Cnt_s
 PCN_1
  PFM_1
Cal_Fnc_F_sv2
:E END
:! 
:N Fnc_F_sv2
:S    385,   115,   263
:T Command
:C )! Fnc_F_sv2
:D Apply ForcSpect on Nodes
:B Fnc_F_sv
:H Hlp_C_F
Cmd_F,P51X
Fld_0 
 Typ_LAB
 Prm_[F]  Apply Single-Point Force Spectrum on Nodes
Fld_2
 Prm_Lab     Excitation direction
 Typ_LIS_OPTIONB
 LIS_Nodal X         ,FX
 LIS_Nodal Y         ,FY
 LIS_Nodal Z         ,FZ
Fld_3
 Prm_VALUE   Scale factor
 Typ_REAL
 Def_1.0
:E END
:! 
:N Fnc_FileOpt2
:S   2235,   100,  2128
:T Cmd
:C )! Fnc_FileOpt2
:D File Options
:H Hlp_UI_fileopt
K_LN(begin)
Inp_NoApply
! Exclude_from_paths
Cmd_FINISH
K_CM(begin)
Cmd_/ASSIGN
 Fld_0
  Typ_Lab
  Prm_[/ASSIGN]  File Name Assignment
 Fld_2
  Prm_Ident  Type of file
  Typ_Lis_OptionB
   Lis_    none        ,"  "
   Lis_SE dof solu DSUB,DSUB
   Lis_Elem matrix EMAT,EMAT
   Lis_Rot el mtrx EROT,EROT
   Lis_Elem save   ESAV,ESAV
   Lis_ESAV backup OSAV,OSAV
   Lis_Assmbld K M FULL,FULL
   Lis_Modal matrx MODE,MODE
   Lis_Reduce disp RDSP,RDSP
   Lis_Reduced mat REDM,REDM
   Lis_Red cmplx U RFRQ,RFRQ
   Lis_Mag results RMG ,RMG
   Lis_Struct res  RST ,RST
   Lis_Thermal res RTH ,RTH
   Lis_SE load vec SELD,SELD
   Lis_SE matrix   SUB ,SUB
   Lis_Triang mat  TRI ,TRI
   Lis_Renamd DSUB USUB,USUB
 Fld_3
  Typ_FILE_INLINE
  Prm_Fname  File name to be assigned
 Fld_0
  Typ_Lab
  Prm_                                (directory/filename.ext)
 Fld_0
  K_FL(ieee)
  Typ_Sep
Cmd_/FTYPE
 K_CM(ieee)
 Fld_0
  Typ_Lab
  Prm_[/FTYPE]  Binary File Format
 Fld_2
  Prm_Ident  Binary file
  Typ_Lis_OptionB
   Lis_SE dof solu DSUB,DSUB
   Lis_Elem matrix EMAT,EMAT
   Lis_Rot el mtrx EROT,EROT
   Lis_Elem save   ESAV,ESAV
   Lis_ESAV backup OSAV,OSAV
   Lis_Assmbld K M FULL,FULL
   Lis_Modal matrx MODE,MODE
   Lis_Reduce disp RDSP,RDSP
   Lis_Reduced mat REDM,REDM
   Lis_Red cmplx U RFRQ,RFRQ
   Lis_SE load vec SELD,SELD
   Lis_SE matrix   SUB ,SUB
   Lis_Triang mat  TRI ,TRI
   Lis_Renamd DSUB USUB,USUB
   Lis_All of above ALL,ALL
 Fld_3
  Prm_Type   Format to be used
  Typ_Lis_OptionB
   Lis_External        ,EXT
   Lis_Internal        ,INT
 Fld_0
  Typ_Sep
Cmd_/FDELE
P_CM(LINPLUS*THERMAL*ELECMAG)
 Fld_0
  Typ_Lab
  Prm_[/FDELE]  Deletion of Files during Solution
 Fld_2
  Prm_Ident  Type of file
  Typ_Lis_OptionB
   Lis_SE dof solu DSUB,DSUB
   Lis_Elem matrix EMAT,EMAT
   Lis_Elem save   ESAV,ESAV
   Lis_ESAV backup OSAV,OSAV
   Lis_Assmbld K M FULL,FULL
   Lis_Modal matrx MODE,MODE
   Lis_SE load vec SELD,SELD
   Lis_SE matrix   SUB ,SUB
   Lis_Triang mat  TRI ,TRI
   Lis_Renamd DSUB USUB,USUB
 Fld_3
  Prm_Stat   Status during solution
  Typ_Lis_OptionB
   Lis_Keep file       ,KEEP
   Lis_Delete file     ,DELE
:E END
:! 
:N Fnc_FileOpts
:S    282,   175,   100
:T Cmd
:A File Options
:D File Options
:C )! Fnc_FileOpts
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,10,1,2
:C )_z9 = 'FileOpt2'
:C )/GO
Inp_P
Cmd_)!
K_LN(begin)
Cal_Fnc_CHK_ROUT
K_LN(begin)
Cal_Fnc_ExitRout
K_LN(BEGIN)
Cal_Fnc_FileOpt2
:E END
:! 
:N Fnc_FloLoad
:S   4285,  1296,  2982
:T Command
:C )/NOPR
:C )keyw,key3d,0
:C )*get,_ze0,etyp,,num,max
:C )*do,_iz0,1,_ze0
:C )*get,_ze1,etyp,_iz0,attr,enam
:C )*if,_ze1,eq,142,then
:C )keyw,key3d,1
:C )*endif
:C )*enddo
:C )*DEL,_z
:C )*DIM,_z,,3
:C )_z(3)=0
:C )KEYW,prsld,0
:C )KEYW,spcld,0
:C )KEYW,fluld,0
:C )keyw,disld,0
:C )keyw,velld,0
:C )keyw,trbld,0
:C )keyw,frcld,0
:C )keyw,vfrld,0
:C )keyw,radld,0
:C )*IF,_z9,EQ,'VELO',THEN
:C )keyw,velld,1
:C )*ELSEIF,_z9,EQ,'DISP',THEN
:C )keyw,disld,1
:C )*ELSEIF,_z9,EQ,'TURB',THEN
:C )keyw,trbld,1
:C )*ELSEIF,_z9,EQ,'FORC',THEN
:C )keyw,frcld,1
:C )*ELSEIF,_z9,EQ,'VFRC',THEN
:C )keyw,vfrld,1
:C )*ELSEIF,_z9,EQ,'RAD',THEN
:C )keyw,radld,1
:C )*ENDIF
:C )KEYW,dnld,0
:C )KEYW,dkld,0
:C )KEYW,dald,0
:C )KEYW,dlld,0
:C )*IF,_z8,EQ,'D',THEN
:C )KEYW,dnld,1
:C )*ELSEIF,_z8,EQ,'DK',THEN
:C )KEYW,dkld,1
:C )*ELSEIF,_z8,EQ,'DA',THEN
:C )KEYW,dald,1
:C )*ELSEIF,_z8,EQ,'DL',THEN
:C )KEYW,dlld,1
:C )*ENDIF
:C )KEYW,snld,0
:C )KEYW,seld,0
:C )KEYW,sald,0
:C )KEYW,slld,0
:C )*IF,_z8,EQ,'SF',THEN
:C )KEYW,snld,1
:C )*ELSEIF,_z8,EQ,'SFE',THEN
:C )KEYW,seld,1
:C )*ELSEIF,_z8,EQ,'SFA',THEN
:C )KEYW,sald,1
:C )*ELSEIF,_z8,EQ,'SFL',THEN
:C )KEYW,slld,1
:C )*ENDIF
:C )/GO
:C )! Fnc_FloLoad
:D Apply %_z9% load on %_z7%
:P (FLOTRAN)
:H Hlp_C_%_z8%
Inp_NoApply
Cmd_)/NOPR
 Fld_0
  Typ_LAB
  K_LN(DISLD+velld+frcld+trbld)
  Prm_[%_z8%] Apply Displacement Constraints on %_z7%
  K_LN(VELLD+frcld+trbld+disld)
  Prm_[%_z8%] Apply Velocity Constraints on %_z7%
  K_LN(TRBLD+velld+frcld+disld)
  Prm_[%_z8%] Apply Turbulence Constraints on %_z7%
  K_LN(FRCLD+velld+trbld+disld)
  Prm_[%_z8%] Apply Body Force Load on %_z7%
  K_LN(VFRLD+frcld+velld+trbld+radld+disld)
  Prm_[%_z8%] Apply Volume Fraction Surface Load on %_z7%
  K_LN(RADLD+frcld+velld+trbld+vfrld+disld)
  Prm_[%_z8%] Apply Radiation Load on %_z7%
!
Cmd_)*CSET,111,111
K_CM(SELD)
 Fld_2
  Prm_LKEY  Face number
  Typ_INT
  Def_1
!
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Sep
 Fld_2
  K_LN(radld+vfrld)
  Prm_   Apply %_zc(1)% load as a
  K_LN(RADLD+vfrld)
  Prm_Apply Surface Emissivity as a
  K_LN(VFRLD+radld)
  Prm_Apply Boundary Value as a
  Typ_Lis_OptioB
  LIS_Constant value,0
  LIS_Existing table,2
  K_LN(frcld+vfrld+radld)
  LIS_New table     ,3
  Def_*PAR(_z(1))
 Fld_0
  Typ_Lab
  Prm_If Constant value then:
Cmd_)*CSET,101,101
Fld_2
  K_LN(radld+vfrld)
  Prm_%_zc(1)%  Load value
  K_LN(RADLD+vfrld)
  Prm_Surface Emissivity value
  K_LN(VFRLD+radld)
  Prm_Boundary Value 
  Typ_Real
!
Cmd_)*SET,_z(2)
 Fld_0
  Typ_Sep
 Fld_2
  K_LN(radld+vfrld)
  Prm_   Apply %_zc(2)% load as a
  K_LN(RADLD+vfrld)
  Prm_Apply Ambient Temperature as a
  K_LN(VFRLD+radld)
  Prm_Apply Wetting Status as a
  Typ_Lis_OptioB
  LIS_Constant value,0
  LIS_Existing table,2
  K_LN(frcld+vfrld+radld)
  LIS_New table     ,3
  Def_*PAR(_z(2))
 Fld_0
  Typ_Lab
  Prm_If Constant value then:
Cmd_)*CSET,102,102
Fld_2
  K_LN(radld+vfrld)
  Prm_%_zc(2)% a Load value
  K_LN(RADLD+vfrld)
  Prm_Ambient Temperature value
  K_LN(VFRLD+radld)
  Prm_Wetting Status value
  Typ_Real
!
Cmd_)*SET,_z(3)
K_CM(trbld+vfrld+radld+(disld*KEY3D))
 Fld_0
  Typ_Sep
 Fld_2
  Prm_   Apply %_zc(3)% load as a
  Typ_Lis_OptioB
  LIS_Constant value,0
  LIS_Existing table,2
  K_LN(frcld)
  LIS_New table     ,3
  Def_*PAR(_z(3))
 Fld_0
  Typ_Lab
  Prm_If Constant value then:
Cmd_)*CSET,103,103
K_CM(trbld+vfrld+radld+(disld*KEY3D))
Fld_2
 Prm_%_zc(3)%  Load value
 Typ_Real
!
Cmd_)*CSET,111,111
K_CM(DKLD*DALD*DLLD+seld)
Fld_0
 Typ_Sep
Fld_2
 Typ_LOGI,No,Yes
 Def_1
 K_LN(DKLD+dald+dlld)
 Prm_KEXPND  Expand %_zc(3)% to nodes?
 K_LN(DALD+dkld+dlld)
 Prm_        Apply to boundary lines?
 K_LN(DLLD+dkld+dald)
 Prm_        Apply to endpoints?
!
Cmd_)KEYW,KEY4
K_CM(VELLD+trbld+frcld+vfrld+radld+disld)
 Fld_0
  Typ_Sep
 Fld_2
 Prm_               Moving wall?
 Typ_Logi,No,Yes
Cmd_)KEYW,KEY5
K_CM(VELLD+trbld+frcld+vfrld+radld+disld)
 Fld_0
  Typ_Sep
 Fld_2
 Prm_      Generalized Symmetry?
 Typ_Logi,No,Yes
Cmd_)!
K_CM(VELLD*TRBLD+frcld+vfrld+radld)
 Fld_0
  Typ_Sep
 Fld_0
 Typ_Lab
 Prm_ NOTE: Blank values not interpreted as 0's !!!
!
Cmd_STEF
K_CM(RADLD+trbld+frcld+vfrld+vfrld)
 Fld_0
  Typ_Sep
 Fld_2
  Typ_REAL
  Prm_[STEF]  Stefan-Boltzmann Const.
  Def_*GET(common,,RADFCM,,real,1)
Cmd_)/GO
Cal_Fnc_FloLoad10
:E END
:! 
:N Fnc_FloLoad10
:S    770,   571,   192
:T Command
:C )/NOPR
:C )keyw,ktabx,0
:C )keyw,ktaby,0
:C )keyw,ktabz,0
:C )keyw,ktabq,0
:C )keyw,ktabn,0
:C )keyw,ktabs,1
:C )_z2=1
:C )_z3s=_z(1)+_z(2)+_z(3)
:C )*if,_z3s,le,0,then
:C )keyw,ktabs,0
:C )*else
:C )*if,_z3s,eq,3,then
:C )keyw,ktabn,1
:C )*elseif,_z3s,gt,3,then
:C )keyw,ktabq,1
:C )*endif
:C )*if,_z(3),gt,0,then
:C )keyw,ktabz,1
:C )_z2=3
:C )*endif
:C )*if,_z(2),gt,0,then
:C )keyw,ktaby,1
:C )_z2=2
:C )*endif
:C )*if,_z(1),gt,0,then
:C )keyw,ktabx,1
:C )_z2=1
:C )*endif
:C )*endif
:C )/GO
:C )! Fnc_FloLoad10
Inp_P
Cmd_)!
K_LN(frcld+vfrld+radld)
Cal_Fnc_FloLoad20
K_LN(FRCLD+vfrld+ktabs+radld)
Cal_Fnc_Forc_C1
K_LN(RADLD*VFRLD+frcld+ktabs)
Cal_Fnc_VFRC_01
K_LN(RADLD*FRCLD*VFRLD+KTABS)
Cal_Fnc_Forc_T
:E END
:! 
:N Fnc_FloLoad20
:S    617,   116,   494
:T Cmd
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0,KEY3,0
:C )/GO
:C )! Fnc_FloLoad20
Inp_P
Cmd_)/NOPR
Cmd_)*IF,' ',EQ
 Fld_2
  Typ_Def_
   Dlm_'
 Fld_3
  Typ_Def_*CPAR(101)
   Dlm_'
 Fld_4
  Typ_Def_
 Fld_5
   Typ_Def_THEN
Cmd_)KEYW,KEY1,1
Cmd_)*ENDIF
Cmd_)*IF,' ',EQ
 Fld_2
  Typ_Def_
   Dlm_'
 Fld_3
  Typ_Def_*CPAR(102)
   Dlm_'
 Fld_4
  Typ_Def_
 Fld_5
   Typ_Def_THEN
Cmd_)KEYW,KEY2,1
Cmd_)*ENDIF
Cmd_)*IF,' ',EQ
 Fld_2
  Typ_Def_
   Dlm_'
 Fld_3
  Typ_Def_*CPAR(103)
   Dlm_'
 Fld_4
  Typ_Def_
 Fld_5
   Typ_Def_THEN
Cmd_)KEYW,KEY3,1
Cmd_)*ENDIF
Cmd_)/GO
Cal_Fnc_FloLoad50
:E END
:! 
:N Fnc_FloLoad50
:S   1823,   157,  1659
:T Cmd
:C )/NOPR
:C )keyw,ktabn,0
:C )*if,_z(_z2),ge,3,then
:C )keyw,ktabn,1
:C )*endif
:C )/GO
:C )! Fnc_FloLoad50
Inp_P
Cmd_)!
K_CM(ktabx+key1)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
 K_FL(dlld)
  Typ_Def_*PAR(_zc(1))
 Fld_4
 K_FL(dlld)
  Typ_Def_*CPAR(101)
 Fld_4
 K_FL(DLLD)
  Typ_Def_*PAR(_zc(1))
 Fld_5
 K_FL(DLLD)
  Typ_Def_*CPAR(101)
 Fld_5
 K_FL(DALD)
  Typ_DEF_*CPAR(111)
 Fld_6
 K_FL(DKLD*DLLD)
  Typ_DEF_*CPAR(111)
Cmd_)!
K_CM(ktaby+key2)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
 K_FL(dlld)
  Typ_Def_*PAR(_zc(2))
 Fld_4
 K_FL(dlld)
  Typ_Def_*CPAR(102)
 Fld_4
 K_FL(DLLD)
  Typ_Def_*PAR(_zc(2))
 Fld_5
 K_FL(DLLD)
  Typ_Def_*CPAR(102)
 Fld_5
 K_FL(DALD)
  Typ_DEF_*CPAR(111)
 Fld_6
 K_FL(DKLD*DLLD)
  Typ_DEF_*CPAR(111)
Cmd_)!
K_CM(ktabz+key3+trbld)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
 K_FL(dlld)
  Typ_Def_*PAR(_zc(3))
 Fld_4
 K_FL(dlld)
  Typ_Def_*CPAR(103)
 Fld_4
 K_FL(DLLD)
  Typ_Def_*PAR(_zc(3))
 Fld_5
 K_FL(DLLD)
  Typ_Def_*CPAR(103)
 Fld_5
 K_FL(DALD)
  Typ_DEF_*CPAR(111)
 Fld_6
 K_FL(DKLD*DLLD)
  Typ_DEF_*CPAR(111)
Cmd_)!
K_CM(KEY4+VELLD)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
 K_FL(dlld)
  Typ_DEF_ENKE
 Fld_4
 K_FL(dlld)
  Typ_Def_-1
 Fld_4
 K_FL(DLLD)
  Typ_DEF_ENKE
 Fld_5
 K_FL(DLLD)
  Typ_Def_-1
 Fld_5
 K_FL(DALD)
  Typ_DEF_*CPAR(111)
 Fld_6
 K_FL(DKLD*DLLD)
  Typ_DEF_*CPAR(111)
Cmd_)!
K_CM(KEY5+VELLD)
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
 K_FL(dlld)
  Typ_DEF_ENDS
 Fld_4
 K_FL(dlld)
  Typ_Def_-1
 Fld_4
 K_FL(DLLD)
  Typ_DEF_ENDS
 Fld_5
 K_FL(DLLD)
  Typ_Def_-1
 Fld_5
 K_FL(DALD)
  Typ_DEF_*CPAR(111)
 Fld_6
 K_FL(DKLD*DLLD)
  Typ_DEF_*CPAR(111)
Cmd_)!
K_LN(ktabs)
Cal_Fnc_RetBox_0
K_LN(KTABS+KTABN)
Cal_Fnc_CFDLoad6
K_LN(KTABS+ktabn)
Cal_Fnc_CFDLoad4
:E END
:! 
:N Fnc_FloTurb
:S    231,   153,    71
:T Cmd
:C )/NOPR
:C )keyw,ktabn,0
:C )*if,_z(_z2),ge,3,then
:C )keyw,ktabn,1
:C )*endif
:C )/GO
:C )! Fnc_FloTurb
Inp_P
Cmd_)!
K_LN(ktabn)
Cal_Fnc_CFDLoad4
K_LN(KTABN)
Cal_Fnc_CFDLoad6
:E END
:! 
:N Fnc_FloVelo
:S    993,   134,   852
:T Command
:C )! Fnc_FloVelo
:D Apply %_z9% Tabular Loads on %_z7%
:P (FLOTRAN)
:H Hlp_C_%_z8%
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_0
  Typ_LAB
  K_LN(DISLD+frcld+trbld+velld)
  Prm_[%_z8%] Apply Displacement Constraints on %_z7%
  K_LN(VELLD+frcld+trbld+disld)
  Prm_[%_z8%] Apply Velocity Constraints on %_z7%
  K_LN(FRCLD+velld+trbld+disld)
  Prm_[%_z8%] Apply Body Force Load on %_z7%
 Fld_2
 K_FL(DISLD+frcld+trbld+velld)
  Prm_Tabular constraint for
  Typ_LIS_RADIOB
      K_LN(KTABY)
      LIS_UY - component,2
      K_LN(KTABZ+KEY3D)
      LIS_UZ - component,3
 Fld_2
 K_FL(VELLD+frcld+trbld+disld)
  Prm_Tabular constraint for
  Typ_LIS_RADIOB
      K_LN(KTABY)
      LIS_VY - component,2
      K_LN(KTABZ)
      LIS_VZ - component,3
 Fld_2
 K_FL(FRCLD+velld+trbld+disld)
  Prm_Tabular force load for
  Typ_LIS_RADIOB
      K_LN(KTABY)
      LIS_FY - component,2
      K_LN(KTABZ)
      LIS_FZ - component,3
Cmd_)/GO
Cal_Fnc_FloTurb
:E END
:! 
:N Fnc_FlowTrace
:S    160,   140,    13
:T Cmd_N
:C )! Fnc_FlowTrace
:A -Flow Trace-
:K (lsdyna)
:K #(POST1+RESULTS+CFD*ELECTRIC*MAGNETIC)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_Forc_C1
:S    267,    64,   196
:T Cmd
:C )! Fnc_Forc_C1
Inp_P
Cmd_)!
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Typ_Def_*CPAR(101)
 Fld_5
  Typ_Def_*CPAR(102)
 Fld_6
  Typ_Def_*CPAR(103)
Cmd_)!
Cal_Fnc_RetBox_0
:E END
:! 
:N Fnc_Forc_C2
:S    307,    64,   236
:T Cmd
:C )! Fnc_Forc_C2
Inp_P
Cmd_)!
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Typ_Def_*CPAR(101)
 Fld_5
  Typ_Def_*CPAR(102)
 Fld_6
  Dlm_%
 Fld_7
  Typ_Def_*CPAR(103)
  Dlm_%
 Fld_8
  Typ_Lab
Cmd_)!
Cal_Fnc_RetBox_0
:E END
:! 
:N Fnc_Forc_C3
:S    307,    64,   236
:T Cmd
:C )! Fnc_Forc_C3
Inp_P
Cmd_)!
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Typ_Def_*CPAR(101)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(102)
  Dlm_%
 Fld_7
  Typ_Lab
 Fld_8
  Typ_Def_*CPAR(103)
Cmd_)!
Cal_Fnc_RetBox_0
:E END
:! 
:N Fnc_Forc_C4
:S    348,    64,   277
:T Cmd
:C )! Fnc_Forc_C4
Inp_P
Cmd_)!
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Typ_Def_*CPAR(101)
 Fld_5
  Dlm_%
 Fld_6
  Typ_Def_*CPAR(102)
  Dlm_%
 Fld_7
  Typ_Lab
 Fld_8
  Dlm_%
 Fld_9
  Typ_Def_*CPAR(103)
  Dlm_%
 Fld_10
  Typ_Lab
Cmd_)!
Cal_Fnc_RetBox_0
:E END
:! 
:N Fnc_Forc_C5
:S    307,    64,   236
:T Cmd
:C )! Fnc_Forc_C5
Inp_P
Cmd_)!
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_7
  Typ_Def_*CPAR(102)
 Fld_8
  Typ_Def_*CPAR(103)
Cmd_)!
Cal_Fnc_RetBox_0
:E END
:! 
:N Fnc_Forc_C6
:S    348,    64,   277
:T Cmd
:C )! Fnc_Forc_C6
Inp_P
Cmd_)!
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_7
  Typ_Def_*CPAR(102)
 Fld_8
  Dlm_%
 Fld_9
  Typ_Def_*CPAR(103)
  Dlm_%
 Fld_10
  Typ_Lab
Cmd_)!
Cal_Fnc_RetBox_0
:E END
:! 
:N Fnc_Forc_C7
:S    348,    64,   277
:T Cmd
:C )! Fnc_Forc_C7
Inp_P
Cmd_)!
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_7
  Dlm_%
 Fld_8
  Typ_Def_*CPAR(102)
  Dlm_%
 Fld_9
  Typ_Lab
 Fld_10
  Typ_Def_*CPAR(103)
Cmd_)!
Cal_Fnc_RetBox_0
:E END
:! 
:N Fnc_Forc_C8
:S    390,    64,   319
:T Cmd
:C )! Fnc_Forc_C8
Inp_P
Cmd_)!
 Fld_1
  Typ_DEF_*PAR(_z8)
 Fld_2
  Typ_DEF__Y1
 Fld_3
  Typ_Def_*PAR(_z9)
 Fld_4
  Dlm_%
 Fld_5
  Typ_Def_*CPAR(101)
  Dlm_%
 Fld_6
  Typ_Lab
 Fld_7
  Dlm_%
 Fld_8
  Typ_Def_*CPAR(102)
  Dlm_%
 Fld_9
  Typ_Lab
 Fld_10
  Dlm_%
 Fld_11
  Typ_Def_*CPAR(103)
  Dlm_%
 Fld_12
  Typ_Lab
Cmd_)!
Cal_Fnc_RetBox_0
:E END
:! 
:N Fnc_Forc_Q
:S    911,   702,   202
:T Cmd
:C )/NOPR
:C )KEYW,KTB2,0,KTB3,0,KTB4,0
:C )KEYW,KTB5,0,KTB6,0,KTB7,0,KTB8,0
:C )*if,_z(1),eq,0,then
:C )*if,_z(2),eq,0,then
:C )keyw,ktb2,1              !  C!C!T
:C )*else
:C )*if,_z(3),eq,0,then
:C )keyw,ktb3,1              !  C!T!C 
:C )*else
:C )keyw,ktb4,1              !  C!T!T
:C )*endif
:C )*endif
:C )*elseif,_z(1),gt,0,then
:C )*if,_z(2),eq,0,then
:C )*if,_z(3),eq,0,then
:C )keyw,ktb5,1              !  T!C!C
:C )*else
:C )keyw,ktb6,1              !  T!C!T
:C )*endif
:C )*else
:C )*if,_z(3),eq,0,then
:C )keyw,ktb7,1              !  T!T!C
:C )*else
:C )keyw,ktb8,1              !  T!T!T
:C )*endif
:C )*endif
:C )*endif
:C )/GO
:C )! Fnc_Forc_Q
Inp_P
Cmd_)!
K_LN(KTB2)
Cal_Fnc_Forc_C2
K_LN(KTB3)
Cal_Fnc_Forc_C3
K_LN(KTB4)
Cal_Fnc_Forc_C4
K_LN(KTB5)
Cal_Fnc_Forc_C5
K_LN(KTB6)
Cal_Fnc_Forc_C6
K_LN(KTB7)
Cal_Fnc_Forc_C7
K_LN(KTB8)
Cal_Fnc_Forc_C8
:E END
:! 
:N Fnc_Forc_T
:S    514,   149,   358
:T Command
:C )/NOPR
:C )/GO
:C )! Fnc_Forc_T
:D Apply tabular %_z9% load on %_z7%
:P (FLOTRAN)
:H Hlp_C_%_z8%
Inp_NoApply
Cmd_)*CSET,101,101
K_CM(KTABX)
Fld_2
 Prm_X-component value
  Typ_LIS
  LIS_*READ,PATB
Cmd_)*CSET,102,102
K_CM(KTABY)
Fld_2
 Prm_Y-component value
  Typ_LIS
  LIS_*READ,PATB
Cmd_)*CSET,103,103
K_CM(KTABZ)
Fld_2
 Prm_Z-component value
  Typ_LIS
  LIS_*READ,PATB
Cmd_)!
K_LN(FRCLD+vfrld+radld)
Cal_Fnc_Forc_Q
K_LN(VFRLD*RADLD+frcld)
Cal_Fnc_VFRC_Q
:E END
:! 
:N Fnc_FullGui
:S    233,   167,    59
:T Cmd_N
:C )! Fnc_FullGui
:A Unabridged Menu
:D Unabridged Menu
:K ((STATIC*TRNSIENT*BUCKLING*MODAL)+simploff)
:H Hlp_C_ESSOLV
Inp_P
Cmd_)/NOPR
Cmd_)KEYW,SIMPLOFF,1
Cmd_)/GO
Cal_REFRESH
:E END
:! 
:N Fnc_FullMatGui
:S    217,   151,    59
:T Cmd_N
:C )! Fnc_FullMatGui
:A Unabridged Menu
:D Unabridged Menu
:K (cfd+pr_cfd+unabrmat)
:H Hlp_C_ESSOLV
Inp_P
Cmd_)/NOPR
Cmd_)KEYW,UNABRMAT,1
Cmd_)/GO
Cal_REFRESH
:E END
:! 
:N Fnc_GAPF
:S    630,   145,   478
:T Command
:C )! Fnc_GAPF
:A Gap Force 
:D Define Gap Force Variable
:K #(POST26)
:P (LINPLUS)
:H Hlp_C_GAPF
Inp_NoApply
Cmd_GAPF
Fld_0
  Typ_LAB
  Prm_[GAPF]  Define Gap Force variable
Fld_2
  Prm_NVAR  Ref number of variable
  Typ_INT
  Def_*PAR(_z1)
Fld_3
  Prm_NUM   Gap number
  Typ_INT
  Def_*GET(common,,cpst26,,int,_z1)
Fld_4
  Prm_Name  User-specified label
  Typ_CHAR
  Def_*GET(common,,cpst26,,char,_z1)
Cmd_)/NOPR
Cmd_)_z1=0
Cmd_)*DO,_z1,1,200
Cmd_)/NOPR
Cmd_)*GET,_z2,common,,cpst26,,int,(612+_z1)
Cmd_)*IF,_z2,EQ,0,EXIT
Cmd_)*ENDDO
Cmd_)DEFINE
Cmd_)STAT,,,, ,,,,1
Cmd_)/GO
:E END
:! 
:N Fnc_GLREAD
:S    603,   161,   435
:T Cmd
:C )! Fnc_GLREAD
:A GLSTAT file
:D Read data from the GLSTAT file
:K (LSDYNA*FULL_ANS)
:K #(POST26)
:H Hlp_C_EDREAD
Cmd_EDREAD
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab
   Prm_[EDREAD] Read GLSTAT file data into variables for postprocessing
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Variable reference number
   Typ_INT
   Def_2
 Fld_3
   Typ_Char
   Typ_Def_GLSTAT
 Fld_4
   Typ_Def_blank
 Fld_5
   Prm_From load step
   Typ_Int
 Fld_6
   Prm_To load step
   Typ_Int
 Fld_0
  Typ_Lab
  Prm_                       - The default is for all load steps
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_GMATRIX
:S    600,   249,   344
:T Command
:A   Self/Mutual conductance
:C )! Fnc_TORQSUM
:D Calcualte self and mutual conductance
:K #(POST1+RESULTS)
:K #(QUASISTA*(SCALARP+ELEM3D)*(REGLFMAG+ELECTRIC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_GMATRIX
Cmd_GMATRIX
 Fld_0
  Prm_[GMATRIX] Calcualte self/mutual conductance
 Fld_2
  Prm_SYMFAC Symmetry Factor
  Typ_Real
  Def_1
 Fld_3
  Prm_CONDNAME Prefix for conductor components
  Typ_Char,32,10
 Fld_4
  Prm_NUMCOND Number fo conductor components
  Typ_Int
  Def_Blank
 Fld_6
  Prm_MATRIXNAME Computed Array Name
  Typ_Char,32,10
  Def_GMATRIX
:E End
:! 
:N Fnc_GP
:S    360,   182,   171
:T Cmd_P
:C )! Fnc_GP
:A Define
:D Define Gap Conditions
:C )/nopr
:C )*del,_z
:C )*dim,_z,,2
:C )/go
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_GP
Inp_P
Cmd_)/nopr
Cmd_)*set,_z(1)
 Fld_2
  Prm_[GP]  Pick or enter 2 nodes -- node I and node J of the gap
  Typ_NODE
  Min_2
  Max_2
  Rub_51
  PFM_2
Cmd_)/go
Cal_Fnc_GP2
:E END
:! 
:N Fnc_GP2
:S    781,   118,   656
:T Cmd_P
:C )! Fnc_GP2
:D Define Gap Conditions
:B Fnc_GP
:P (LINPLUS)
:H Hlp_C_GP
Cmd_GP
 Fld_0
  Prm_[GP]  Define Gap Conditions
 Fld_2
  Prm_NODE1  Node I of gap
  Typ_INT
  Def_*PAR(_z(1))
 Fld_3
  Prm_NODEJ  Node J of gap
  Typ_INT
  Def_*PAR(_z(2))
 Fld_4
  Prm_Lab    Direction of gap action
  Typ_LIS_OPTIONB
  LIS_X translation   ,FX
  LIS_Y translation   ,FY
  LIS_Z translation   ,FZ
  LIS_X rotation      ,MX
  LIS_Y rotation      ,MY
  LIS_Z rotation      ,MZ
 Fld_5
  Prm_STIF   Stiffness of closed gap
  Typ_REAL
 Fld_6
  Prm_GAP    Initial size of gap -
  Typ_REAL
 Fld_0
  Typ_Lab
  Prm_       - zero or positive for open gap, negative for interference
 Fld_7
  K_FL(MODESUP)
  Prm_DAMP   Damping of closed gap
  Typ_REAL
:E END
:! 
:N Fnc_GPDELE
:S    402,   151,   244
:T Command
:C )! Fnc_GPDELE
:A Delete
:D Delete Gap Conditions
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_GPDELE
Cmd_GPDELE
 Fld_0
  Typ_Lab
  Prm_[GPDELE]  Delete Gap Conditions
 Fld_2
  Prm_GAP1  Starting gap number
  Typ_INT
  Def_Blank
 Fld_3
  Prm_GAP2  Ending gap number
  Typ_INT
  Def_Blank
 Fld_4
  Prm_GINC  Gap number increment
  Typ_INT
  Def_1
:E END
:! 
:N Fnc_GPLIST
:S    401,   146,   248
:T Command
:C )! Fnc_GPLIST
:A List Specified
:D List Specified Gap Conditions
:P (LINPLUS)
:H Hlp_C_GPLIST
Cmd_GPLIST
 Fld_0
  Typ_Lab
  Prm_[GPLIST]  List Specified Gap Conditions
 Fld_2
  Prm_GAP1  Starting gap number
  Typ_INT
  Def_1
 Fld_3
  Prm_GAP2  Ending gap number
  Typ_INT
  Def_Blank
 Fld_4
  Prm_GINC  Gap number increment
  Typ_INT
  Def_1
:E END
:! 
:N Fnc_GPLIST_all
:S    168,   140,    21
:T Cmd_N
:C )! Fnc_GPLIST_all
:A List All
:D List All Gap Conditions
:P (LINPLUS)
:H Hlp_C_GPLIST
Inp_P
Cmd_GPLIST,ALL
:E END
:! 
:N Fnc_GSBloads
:S   1446,   451,   988
:T Command
:C )! Fnc_GSBloads
:C )/NOPR
:C )*del,_zlab
:C )*dim,_zlab,char,6
:C )_zlab(1)='F   ','LFIB','MX  ','ROTX','MY  ','ROTY'
:C )*get,_z1,common,,speciale,,int,3
:C )_zc1=_zlab(1+_z1)
:C )*get,_z1,common,,speciale,,int,4
:C )_zc2=_zlab(3+_z1)
:C )*get,_z1,common,,speciale,,int,5
:C )_zc3=_zlab(5+_z1)
:C )/GO
:A Gen Plane Strain
:D Define Generalized Plane Strain constraints and loads
:H Hlp_C_GSBDATA
Inp_NoApply
Cmd_GSBDATA
 Fld_0
  Typ_Lab
  Prm_[GSBDATA] Define loads and constraints for Generalized Plane Strain
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Contraint or load in Fiber direction
 Fld_2
  Prm_Boundary condition
  Typ_LIS_OptionB
  LIS_Force        , F
  LIS_Length change, LFIB
  Def_*PAR(_zc1)
 Fld_3
  Prm_Value of constraint/load
  Typ_Real
  Def_*GET(common,,speciale,,real,6)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Contraint or load for rotation about X
 Fld_4
  Prm_Boundary condition
  Typ_LIS_OptionB
  LIS_Moment                ,MX
  LIS_Rotation angle        ,ROTX
  Def_*PAR(_zc2)
 Fld_5
  Prm_Value of constraint/load
  Typ_Real
  Def_*GET(common,,speciale,,real,7)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Constraint/load for rotation about Y
 Fld_6
  Prm_Boundary condition
  Typ_LIS_OptionB
  LIS_Moment                ,MY
  LIS_Rotation angle        ,ROTY
  Def_*PAR(_zc3)
 Fld_7
  Prm_Value of constraint/load
  Typ_Real
  Def_*GET(common,,speciale,,real,8)
:E END
:! 
:N Fnc_GSG
:S    742,   144,   591
:T Command
:C )! Fnc_GSG
:A    Genl plane strn
:D Generalized plane strain geometry options
:H Hlp_C_GSGDATA
Cmd_GSGDATA
 Fld_0 
  Typ_Lab
  Prm_[GSGDATA] Define reference point and fiber geometry
 Fld_0
  Typ-Sep
 Fld_2
  Prm_Fiber length from reference pt
  Typ_Real
  Def_*get(common,,specialelecm,,real,3)
 Fld_3
  Prm_X coordinate of reference point
  Typ_Real
  Def_*get(common,,specialelecm,,real,1)
 Fld_4
  Prm_Y coordinate of reference point
  Typ_Real
  Def_*get(common,,specialelecm,,real,2)
 Fld_5
  Prm_Rotation of ending plane about X
  Typ_Real
  Def_*get(common,,specialelecm,,real,4)
 Fld_6
  Prm_Rotation of ending plane about Y
  Typ_Real
  Def_*get(common,,specialelecm,,real,5)
:E END
:! 
:N Fnc_GSUM
:S    179,   157,    15
:T Cmd_N
:C )! Fnc_GSUM
:A Of Geometry
:D Calc Geometry of Selected KPs, Lines, Areas, Volumes
:K #(PREP7)
:H Hlp_C_GSUM
Inp_P
Cmd_GSUM
:E END
:! 
:N Fnc_Geom
:S    643,   206,   430
:T Command
:C )! Fnc_Geom
:C )/NOPR
:C )_z10= '*.*'
:C )_z11= '*'
:A    Update Geom
:D Update nodes using results file displacements
:K #(PREP7+igesfail)
:H Hlp_C_UPGEOM
Cmd_UPGEOM
 Fld_0 
  Typ_Lab
  Prm_[UPGEOM] Update nodal coordinates using results file nodal displacements
 Fld_0
  Typ-Sep
 Fld_2
  Prm_FACTOR   Scaling factor
  Typ_INT
  Def_1
 Fld_3
  Prm_LSTEP  Load step
  Typ_CHAR,4
  Def_LAST
 Fld_4
  Prm_SBSTEP Substep
  Typ_CHAR,4
  Def_LAST
 Fld_5
  Typ_FILE
  Prm_Filename, Extension, Directory
K_LN(INTELNT*ALPHANT)
  Def_*PAR(_z10)
K_LN(intelnt+alphant)
  Def_*PAR(_z11)
Cmd_)/GOPR
:E END
:! 
:N Fnc_GlobalStat
:S    134,    89,    23
:T Cmd_N
:C )! Fnc_GlobalStat
:A Global Status
Inp_P
Cmd_/STAT,GLOBAL
:E End_Fnc_GlobalStat
:! 
:N Fnc_GrphSet1
:S    380,   185,   188
:T Command
:C )! Fnc_GrphSet1
:C )/NOPR
:C )*IF,_z(5),EQ,0,THEN
:C )*CSET,6,6,0
:C )*ELSEIF,_z(5),EQ,-1,THEN
:C )*CSET,6,6,-1
:C )*ENDIF
:C )/GO
Inp_P
Cmd_PLTIME
Fld_2
Typ_Def_*CPAR(3)
Fld_3
Typ_Def_*CPAR(4)
Cmd_XVAR
Fld_2
Typ_Def_*CPAR(6)
Cmd_SPREAD
Fld_2
Typ_Def_*CPAR(7)
Cmd_PLCPLX
P_CM(LINPLUS*ELECMAG)
Fld_2
Typ_Def_*PAR(_z(8))
:E END
:! 
:N Fnc_HARFRQ_etc
:S    738,   221,   510
:T Command
:C )! Fnc_HARFRQ_etc
:A Freq and Substeps
:D Harmonic Frequency and Substep Options
:K #((PREP7*SOLUTION)+(HARMONIC*NOFILTER))
:P (LINPLUS*ELECMAG)
:H Hlp_UI_harfrqetc
Inp_NoApply
Cmd_HROCEAN,OFF
 K_CM(PIPEEXIS)
Cmd_HARFRQ
 Fld_0
  Typ_Lab
  Prm_    Harmonic Frequency and Substep Options
 Fld_2
  Prm_[HARFRQ]  Harmonic freq range
  Typ_REAL2
  Def_*GET(common,,stepcm,,real,6),*GET(common,,stepcm,,real,7)
Cmd_NSUBST
 Fld_2
  Prm_[NSUBST]  Number of substeps
  Typ_INT
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,int,12)
Cmd_KBC
 Fld_2
  Prm_[KBC]     Stepped or ramped b.c.
  Typ_LIS_RADIOB
  LIS_Ramped          ,0
  LIS_Stepped         ,1
  Def_*GET(common,,stepcm,,int,28)
:E END
:! 
:N Fnc_HBMAT
:S   1002,   192,   803
:T Cmd
:C )! Fnc_HBMAT
:C )/NOPR
:C )*DEL,_zy
:C )*SET,_zy,'*full *sub'
:C )*DEL,_zx
:C )*SET,_zx,' '
:C )/GO
:D Dump Matrix
:A Dump Matrix
:H Hlp_C_HBMAT
Inp_NoApply
! Exclude_from_paths
Cmd_FINISH
K_CM(aux2)
Cmd_/AUX2
K_CM(aux2)
Cmd_FILE
 Fld_0
  Typ_Lab
  Prm_(AUX2)  List (Dump) Binary Files
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[FILE]  File to be read
  Typ_FILE
Cmd_HBMAT
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HBMAT] Dump Matrix to Output from matrix file
 Fld_2
  Prm_FNAME  Name of file to write
  Typ_FILE
  Def_*PAR(_zx)
 Fld_3
  Prm_FORM   Output matrix file format
  Typ_Lis_OptionB
   Lis_Ascii           ,ASCII
   Lis_Binary          ,BIN
 Fld_4
  Prm_MATRX  Matrix to write        
  Typ_Lis_OptionB
   Lis_Stiffness       ,STIFF
   Lis_Mass            ,MASS
   Lis_Damping         ,DAMP
 Fld_5
  Prm_RHS    Write right-hand side?
  Typ_Lis_OptionB
   Lis_No              ,NO
   Lis_Yes             ,YES
   Def_YES
! Exclude_from_paths
Cmd_FINISH
:E END
:! 
:N Fnc_HEXMAP
:S    358,   273,    78
:T Cmd
:C )/NOPR
:C )KEYW,KEY1,0,KEY2,0
:C )*GET,_z1,common,,cfprp7,,int,111
:C )*GET,_z2,common,,cfprp7,,int,107
:C )*IF,_z1,ne,0,THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_z2,ne,1,THEN
:C )KEYW,KEY2,1
:C )*ENDIF
:C )/GO
:H Hlp_C_VMESH
Inp_P
Cmd_MSHAPE,0,3D
K_CM(KEY1)
Cmd_MSHKEY,1
K_CM(KEY2)
Cmd_)!
Cal_Fnc_VMESH
:E END
:! 
:N Fnc_HFFAR
:S   1251,   232,  1012
:T Command
:A    Far Field
:D Compute Far Field
:C )! Fnc_HFFAR
:C )/NOPR
:C )KEYW,HFFAR,1
:C )/GO
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PLHFFAR
:H Hlp_C_HFSYM
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_2
  Typ_Def_'EF'
Cmd_)*CSET,2,2
 Fld_0
  Typ_Lab
  Prm_[PLHFFAR]  Compute High Frequency Far Electric Field Data
 Fld_2
  Prm_Comp    Choose field component
   Typ_Lis_OptionB
    Lis_SUM             ,SUM
    Lis_PHI-component   ,PHI
    Lis_THETA-component ,THETA
    Lis_X-component     ,X
    Lis_Y-component     ,Y
    Lis_Z-component     ,Z
Cmd_)/GO
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cal_Fnc_PLHFFAR_1
:E End
:! 
:N Fnc_HFFAR_1
:S    816,   153,   656
:T Command
:A    Far Field
:D Compute Far Field
:C )! Fnc_HFFAR
:K #(POST1+RESULTS)
:P (ELECMAG)
:H Hlp_C_PRHFFAR
Cmd_)/NOPR
Cmd_)*CSET,3,9
 Fld_0
  Typ_Lab
  Prm_[PRHFFAR]  Compute High Frequency Far Electric Field Data
 Fld_0
  Typ_Lab
  Prm_           in Spherical Coordinate System
 Fld_2
  Prm_Phi1   Start angle: X to Y axis 
  Typ_Real
  Def_0
 Fld_3
  Prm_Phi2     End angle: X to Y axis 
  Typ_Real
  Def_0
 Fld_4
  Prm_NPhi      Number of Divisions
  Typ_Real
  Def_0
 Fld_5
  Prm_Theta1  Start angle from Z axis
  Typ_Real
  Def_0
 Fld_6
  Prm_Theta2    End angle from Z axis
  Typ_Real
  Def_0
 Fld_7
  Prm_NTheta    Number of Divisions
  Typ_Real
  Def_0
 Fld_8
  K_FL(HFFAR)
  Prm_Radius    Radius for far field
  Typ_Real
  Def_1
Cmd_)/GO
Cal_Fnc_HFFAR_2
:E End
:! 
:N Fnc_HFFAR_2
:S    338,    64,   267
:T Com
:C )! Fnc_HFFAR_2
Inp_P
Cmd_PRHFFAR
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Typ_Def_*CPAR(7)
 Fld_9
  Typ_Def_*CPAR(8)
 Fld_10
  K_FL(HFFAR)
  Typ_Def_*CPAR(9)
:E End
:! 
:N Fnc_HFFAR_L
:S   1141,   234,   900
:T Command
:A    Far Field
:D Compute Far Field
:C )! Fnc_HFFAR
:C )/NOPR
:C )KEYW,HFFAR,1
:C )/GO
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_PRHFFAR
:H Hlp_C_HFSYM
Cmd_)/NOPR
Cmd_)*CSET,1,1
 Fld_2
  Typ_Def_'EF'
Cmd_)*CSET,2,2
 Fld_0
  Typ_Lab
  Prm_[PRHFFAR]  Compute High Frequency Far Electric Field Data
 Fld_2
  Prm_Lab   List field components of
   Typ_Lis_OptionB
    Lis_Cartesian system,CART
    Lis_Spherical system,SPHR
Cmd_)/GO
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cal_Fnc_HFFAR_1
:E End
:! 
:N Fnc_HFNEAR
:S   1286,   200,  1079
:T Command
:A    Near Field
:C )! Fnc_HFNEAR
:D Compute Near Field
:K #(POST1+RESULTS)
:K (ELECTRIC*MAGNETIC+EDGEELC)
:P (ELECMAG)
:H Hlp_C_HFNEAR
:H Hlp_C_HFSYM
Cmd_)/NOPR
Cmd_)*CSET,1,2
 Fld_0
  Typ_Lab
  Prm_[HFNEAR]  Compute High Frequency Near Field Data 
 Fld_2
  Prm_Item    HF data to be computed
   Typ_Lis_RadioB
    Lis_Electric field  ,EF
    Lis_Magnetic field  ,H
 Fld_3
  Prm_KCN   Coordinate system number
   Typ_Int
   Def_0
Cmd_)*CSET,10,10
 Fld_2
  Prm_CS    List field components of
   Typ_Lis_OptionB
    Lis_Cartesian system,0
    Lis_Cylindric system,1
    Lis_Spherical system,2
Cmd_)/GO
Cmd_HFSYM
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_[HFSYM] Symmetry Plane Boundary Condition (BC) Status 
 Fld_2
  Prm_KCN  Cartesian Coordinate System
   Typ_Int
   Def_0
 Fld_3
  Prm_XKey      BC on Y-Z plane 
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_4
  Prm_YKey      BC on X-Z plane 
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
 Fld_5
  Prm_ZKey      BC on X-Y plane 
   Typ_Lis_OptionB
    Lis_None            ,NONE
    Lis_PEC             ,PEC
    Lis_PMC             ,PMC
Cal_Fnc_HFNEAR_1
:E END
:! 
:N Fnc_HFNEAR_1
:S    341,   131,   203
:T Com_P
:D Near Field
:C )! Fnc_HFNEAR_1
:K #(POST1+RESULTS)
:P (ELECMAG)
:H Hlp_C_HFNEAR
Inp_P
Cmd_HFNEAR
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Prm_[HFNEAR]  Pick or enter coordinates (X,Y,Z) for calculation
  Typ_XYZ
  Min_1
  Mok_1
  Pdp_1
 Fld_7
  Typ_Def_*CPAR(10)
:E End
:! 
:N Fnc_HFSWEEP0
:S    234,   197,    30
:T Cmd
:C )/NOPR
:C )KEYW,key1,0
:C )KEYW,key2,0
:C )*IF,_zc(1),NE,' ',THEN
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_zc(2),NE,' ',THEN
:C )KEYW,KEY2,1
:C )*ENDIF
Inp_P
Cmd_)!
Cal_Fnc_HFSWEEP2
:E End
:! 
:N Fnc_HFSWEEP1
:S    334,   102,   225
:T Cmd
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,2,1,1
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_zc(1)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(1)
  Dlm_'
 Fld_4
  Typ_Lab
!
Cmd_)*SET,_zc(2)
 Fld_2
  Typ_Def_
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(2)
  Dlm_'
 Fld_4
  Typ_Def_
!
Cmd_)/GO
Cal_Fnc_HFSWEEP0
:E End
:! 
:N Fnc_HFSWEEP2
:S    501,    51,   443
:T Command
Inp_P
Cmd_HFSWEEP
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Def_*PAR(_z2)
 Fld_4
  Typ_Def_*PAR(_z3)
 Fld_5
  Typ_Def_*PAR(_z4)
 Fld_6
  Typ_Def_*PAR(_z5)
 Fld_7
  Typ_Def_*PAR(_z6)
 Fld_8
  Typ_Def_*PAR(_z7)
 Fld_9
  Typ_Def_*PAR(_z12)
 Fld_10
  Typ_Def_*PAR(_z13)
 Fld_11
  Typ_Def_*PAR(_z8)
 Fld_12
 K_FL(KEY1)
  Typ_Def_*STR('%_zc(1)%')
 Fld_13
 K_FL(KEY2)
  Typ_Def_*STR('%_zc(2)%')
 Fld_14
  Typ_Def_*PAR(_z9)
 Fld_15
  Typ_Def_*PAR(_z10)
:E END
:! 
:N Fnc_HF_PLSP
:S    831,   196,   628
:T Command
:A    S-Parameters
:D Display frequency plots for S-Parameters
:C )! Fnc_HF_PLSP
:K ((EDGEELC+ELEM3D)*NOFILTER+lsdyna)
:P (ELECMAG)
:H Hlp_C_PLSP
Cmd_PLSP
 Fld_0
  Typ_Lab
  Prm_[PLSP]  Plot S-Parameters [Sji]
 Fld_2
  Prm_Opt         Create graph for
  Typ_Lis_RadioB
   Lis_Magnitude       ,0
   Lis_Magnitude (dB)  ,1
   Lis_Phase angle     ,2
 Fld_0
  Typ_Sep
 Fld_3
  Prm_Pnum1         Driven port (i)
  Typ_Int
  Def_1
 Fld_0
  Typ_Lab
  Prm_            Matched ports (j)
 Fld_4
  Prm_Pnum2            Port number
  Typ_Int
  Def_1
 Fld_5
  Prm_Pnum3            Port number
  Typ_Int
  Def_
 Fld_6
  Prm_Pnum4            Port number
  Typ_Int
  Def_
 Fld_7
  Prm_Pnum5            Port number
  Typ_Int
  Def_
 Fld_8
  Prm_Pnum6            Port number
  Typ_Int
  Def_
:E End
:! 
:N Fnc_HMAGSOLV
:S    923,   171,   745
:T Command
:C )! Fnc_HMAGSOLV
:A    Opt&Solv
:D    Opt&Solv
:K #(PREP7*SOLUTION)
:K ((HARMONIC+ELEM2D)*NOFILTER)
:H Hlp_C_HMAGSOLV
Inp_NoApply
Cmd_HMAGSOLV
 Fld_0
  Typ_Lab
  Prm_[HMAGSOLV]  Harmonic Options and Solution for Electromagnetics
 Fld_2
  Prm_Freq   Analysis Frequency (Hz)
  Typ_Real
  Def_0
 Fld_3
  Prm_NRAMP  Number of Ramp substeps -
  Typ_int
  Def_3
 Fld_0
  Prm_       - (Used only for nonlinear run, issue "-1" to ignore substeps)
  Typ_Lab
 Fld_4
  Prm_CnvA   (A) Convergence Toler.
  Typ_Real
  Def_.001
 Fld_5
  Prm_CnvV   (VOLT) Convergence Toler.
  Typ_Real
  Def_.001
 Fld_6
  Prm_CnvC   (CURR) Convergence Toler.
  Typ_Real
  Def_.001
 Fld_7
  Prm_CnvE   (EMF) Convergence Toler.
  Typ_Real
  Def_.001
 Fld_8
  Prm_NEQIT  Max. equilibrium iter.
  Typ_Int
  Def_50
 Fld_0
  Typ_Sep
 Fld_0
  Prm_NOTE:  Selecting OK will execute a solution
  Typ_Lab
:E End
:! 
:N Fnc_HPTAC
:S    366,   185,   174
:T Cmd_P
:C )! Fnc_HPTAC
:A Hard PT by coordinates
:D Hard PT by coordinates
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,5
:K #(PREP7)
:H Hlp_C_HPTCREATE
Inp_P
Cmd_)*SET,_z(1)
Fld_2
  Typ_AREA
  Min_1
  Max_1
  Cnt_1
  PCN_0
  PFM_2
  Prm_[HPTCreate] Pick or enter an area on which to locate hard point
Cmd_)/GO
Cal_Fnc_HPTAC_2
:E END
:! 
:N Fnc_HPTAC_2
:S    360,   165,   188
:C )! Fnc_HPTAC_2
:T Command
:A Create Hard PT by Coordinates
:D Create Hard PT by Coordinates
:K #(PREP7)
:H Hlp_C_HPTCREATE
Cmd_HPTCREATE
 Fld_0
  Typ_Lab
  Prm_[HPTCreate]
 Fld_2
  Typ_Def_AREA
 Fld_3
  Typ_Def_*PAR(_z(1))
 Fld_4
  Typ_Def_0
 Fld_5
  Typ_Def_COORD
 Fld_6
  Typ_Real3
  Prm_X, Y, Z coordinates:
:E END
:! 
:N Fnc_HPTAP
:S    358,   177,   174
:T Cmd_P
:C )! Fnc_HPTAP
:A Hard PT by picking
:D Hard PT by picking
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,5
:K #(PREP7)
:H Hlp_C_HPTCREATE
Inp_P
Cmd_)*SET,_z(1)
Fld_2
  Typ_AREA
  Min_1
  Max_1
  Cnt_1
  PCN_0
  PFM_2
  Prm_[HPTCreate] Pick or enter an area on which to locate hard point
Cmd_)/GO
Cal_Fnc_HPTAP_2
:E END
:! 
:N Fnc_HPTAP_2
:S    414,   152,   255
:T Cmd_P
:C )! Fnc_HPTAP_2
:T Command
:A Hard PT by picking
:D Hard PT by picking
:K #(PREP7)
:H Hlp_C_HPTCREATE
Inp_P
Cmd_HPTCREATE
 Fld_0
  Typ_Lab
  Prm_[HPTCreate]
 Fld_2
  Typ_Def_AREA
 Fld_3
  Typ_Def_*PAR(_z(1))
 Fld_4
  Typ_Def_0
 Fld_5
  Typ_Def_RATI
 Fld_6
  Typ_XYZ_SCREEN
  Prm_[HPTCreate] Pick reference location on area
  Min_1
  Max_888
  Pfm_1
  Pwr_1
:E END
:! 
:N Fnc_HPTDELE
:S    277,   127,   143
:T Cmd_P
:C )! Fnc_HPTDELE
:A Hard Points
:D Hard Points
:K #(PREP7)
:H Hlp_C_HPTDELETE
Inp_P
Cmd_HPTDELETE
 Fld_0
  Typ_Lab
  Prm_[HPTDelete]
 Fld_2
  Typ_KEYP
  Prm_Pick or enter hard points to be deleted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_HPTLC
:S    398,   185,   206
:T Cmd_P
:C )! Fnc_HPTLC
:A Hard PT by coordinates
:D Hard PT by coordinates
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,5
:K #(PREP7)
:H Hlp_C_HPTCREATE
Inp_P
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[HPTCreate]
Fld_2
  Typ_LINE
  Min_1
  Max_1
  Cnt_1
  PCN_0
  PFM_2
  Prm_[HPTCreate] Pick or enter line on which to locate hard point
Cmd_)/GO
Cal_Fnc_HPTLC_2
:E END
:! 
:N Fnc_HPTLC_2
:S    360,   165,   188
:C )! Fnc_HPTLC_2
:T Command
:A Create Hard PT by Coordinates
:D Create Hard PT by Coordinates
:K #(PREP7)
:H Hlp_C_HPTCREATE
Cmd_HPTCREATE
 Fld_0
  Typ_Lab
  Prm_[HPTCreate]
 Fld_2
  Typ_Def_LINE
 Fld_3
  Typ_Def_*PAR(_z(1))
 Fld_4
  Typ_Def_0
 Fld_5
  Typ_Def_COORD
 Fld_6
  Typ_Real3
  Prm_X, Y, Z coordinates:
:E END
:! 
:N Fnc_HPTLP
:S    355,   177,   171
:T Cmd_P
:C )! Fnc_HPTLP
:A Hard PT by picking
:D Hard PT by picking
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,5
:K #(PREP7)
:H Hlp_C_HPTCREATE
Inp_P
Cmd_)*SET,_z(1)
Fld_2
  Typ_LINE
  Min_1
  Max_1
  Cnt_1
  PCN_0
  PFM_2
  Prm_[HPTCreate] Pick or enter line on which to locate hard point
Cmd_)/GO
Cal_Fnc_HPTLP_2
:E END
:! 
:N Fnc_HPTLP_2
:S    417,   152,   258
:T Cmd_P
:C )! Fnc_HPTLP_2
:T Command
:A Hard PT by picking
:D Hard PT by picking
:K #(PREP7)
:H Hlp_C_HPTCREATE
Inp_P
Cmd_HPTCREATE
 Fld_0
  Typ_Lab
  Prm_[HPTCreate]
 Fld_2
  Typ_Def_LINE
 Fld_3
  Typ_Def_*PAR(_z(1))
 Fld_4
  Typ_Def_0
 Fld_5
  Typ_Def_RATI
 Fld_6
  Typ_XYZ_SCREEN
  Prm_[HPTCreate] Pick reference location along line
  Min_1
  Max_888
  Pfm_1
  Pwr_1
:E END
:! 
:N Fnc_HPTLR
:S    350,   172,   171
:T Cmd_P
:C )! Fnc_HPTR
:A Hard PT by ratio
:D Hard PT by ratio
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,5
:K #(PREP7)
:H Hlp_C_HPTCREATE
Inp_P
Cmd_)*SET,_z(1)
Fld_2
  Typ_LINE
  Min_1
  Max_1
  Cnt_1
  PCN_0
  PFM_2
  Prm_[HPTCreate] Pick or enter line on which to locate hard point
Cmd_)/GO
Cal_Fnc_HPTLR_2
:E END
:! 
:N Fnc_HPTLR_2
:S    365,   153,   205
:C )! Fnc_HPTLR_2
:T Command
:A Create Hard PT by Ratio
:D Create Hard PT by Ratio
:K #(PREP7)
:H Hlp_C_HPTCREATE
Cmd_HPTCREATE
 Fld_0
  Typ_Lab
  Prm_[HPTCreate]
 Fld_2
  Typ_Def_LINE
 Fld_3
  Typ_Def_*PAR(_z(1))
 Fld_4
  Typ_Def_0
 Fld_5
  Typ_Def_RATI
 Fld_6
  Typ_Real
  Prm_Length ratio (0-1) along a line
  Def_ 
:E END
:! 
:N Fnc_HROCEAN_etc
:S   1064,   421,   636
:T Command
:C )! Fnc_HROCEAN_etc
:C )/NOPR
:C )*GET,_z1,common,,sectioncm,,int,14
:C )*GET,_z2,common,,soptcm,,int,188
:C )keyw,pipeexis,_z1
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,3
:C )*SET,_zc(1),'OFF ','STAT','HARM'
:C )/GO
:A HOWP and Substeps
:D Harmonic Ocean (HOWP) and Substep Options
:K #((PREP7*SOLUTION)+(HARMONIC*NOFILTER)+PIPEEXIS)
:P (LINPLUS*ELECMAG)
:H Hlp_UI_harfrqetc
Inp_NoApply
Cmd_HROCEAN
 Fld_0
  Typ_Lab
  Prm_    Harmonic Ocean (HOWP) and Substep Options
 Fld_2
  Prm_[HROCEAN]  Harmonic ocean (HOWP)
  Typ_LIS_OPTIONB
  LIS_Off             ,OFF
  LIS_Static          ,STAT
  LIS_Harmonic        ,HARM
  Def_*PAR(_zc(_z2+1))
 Fld_3
  Prm_          Number of phases
  Typ_Int
  Def_*GET(common,,soptcm,,int,233)
 Fld_0
  Typ_Sep
Cmd_NSUBST
 Fld_2
  Prm_[NSUBST]  Number of substeps
  Typ_INT
  K_LN(nlcntrl)
  Def_*GET(common,,stepcm,,int,12)
Cmd_KBC
 Fld_2
  Prm_[KBC]     Stepped or ramped b.c.
  Typ_LIS_RADIOB
  LIS_Ramped          ,0
  LIS_Stepped         ,1
  Def_*GET(common,,stepcm,,int,28)
:E END
:! 
:N Fnc_HomePage
:S    173,   106,    60
:T Cmd
:A Menu Name
:D Access the ANSYS HomePage via the Internet
Inp_P
Cmd_)/NOPR
Cmd_)BROWSER,0
Cmd_)/GO
Cal_Fnc_HomePage_2
:E End
:! 
:N Fnc_HomePage_2
:S   1470,   113,  1350
:T Cmd
:A Menu Name
:D ANSYS, Inc. Home Page Access
:H Hlp_UI_HomePage
Inp_NoApply
Cmd_)/NOPR
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_The ANSYS Home Page on the Internet World Wide Web provides instant
 Fld_0
  Typ_Lab
  Prm_access to the latest news and technical information available regarding
 Fld_0
  Typ_Lab
  Prm_ANSYS, Inc. and the complete line of ANSYS products and services.
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_
 Fld_0
  Typ_Sep
Cmd_)BROWSER
K_CM(KEY1*KEY2*KEY3)
 Fld_0
  Typ_Lab
  Prm_
 Fld_2
  Prm_  View the ANSYS Home Page using
  Typ_Lis_OptionB
   K_LN(KEY1)
   Lis_Netscape        ,1
   K_LN(KEY2+(INTELNT*ALPHANT))
   Lis_InternetExplorer,2
   K_LN(KEY2+intelnt+alphant)
   Lis_Mosaic(see help),2
   K_LN(KEY3)
   Lis_Other (see help),3
   K_LN(key1+key2+key3)
   Lis_Not Available   ,4
 Fld_0
  Typ_Lab
  Prm_
 Fld_0
  Typ_Lab
  Prm_The ANSYS Home Page URL is: http://www.ansys.com/
Cmd_)/GO
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_Access to the internet was not made available from within the ANSYS
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_program please see Help.  If you have access to the internet you can
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_access the ANSYS Home Page by going to its URL at:
 Fld_0
 K_FL(key1+key2+key3)
  Typ_Lab
  Prm_                         http://www.ansys.com/
 Fld_0
  Typ_Sep
:E End
:! 
:N Fnc_HostSelect
:S    208,   152,    49
:T Command
:C )! Fnc_HostSelect
:A Host Selection
:D Host Selection
:K (lsdyna+OLDMENU+PPDSPAR)
:K #(HSCRIPT)
Inp_P
Cmd_)~eui,'euidl::DDS::HostSelect::create'
:E END
:! 
:N Fnc_ICLIST
:S    361,   173,   181
:T Cmd_P
:C )! Fnc_ICLIST
:C )! Nodes for ICLIST command below
:A List Picked
:D List Initial Conditions
:P (FULL_ANS)
:H Hlp_C_ICLIST
Inp_P
Cmd_)!
 Fld_2
  Prm_[ICLIST]  Pick or enter nodes for initial condition listing
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
K_LN(CFD)
Cal_Fnc_ICLIST1
K_LN(cfd)
Cal_Fnc_ICLIST2
:E END
:! 
:N Fnc_ICLIST1
:S    155,   121,    27
:T Cmd
:C )! Fnc_ICLIST1
:D List Initial Conditions
:B Fnc_ICLIST
:H Hlp_C_ICLIST
Inp_P
Cmd_ICLIST,P51X,DISP
:E END
:! 
:N Fnc_ICLIST2
:S    319,   135,   177
:T Cmd
:C )! Fnc_ICLIST2
:D List Initial Conditions
:B Fnc_ICLIST
:P (FULL_ANS)
:H Hlp_C_ICLIST
Cmd_ICLIST,P51X
Fld_0
 Typ_Lab
 Prm_[ICLIST]  List Initial Conditions
Fld_4
 Prm_Lab     Item to be listed
 Typ_LIS_RADIOB
 LIS_Initial DOF valu,DISP
 LIS_Initial velocity,VELO
:E END
:! 
:N Fnc_ICLIST_all
:S    259,   131,   121
:T Cmd_N
:C )! Fnc_ICLIST_all
:A List All
:D List All Initial Conditions
:H Hlp_C_ICLIST
Inp_P
Cmd_)/LWBEGIN,ansuitmp
Cmd_)$ICLIST,ALL
K_CM(cfd)
Cmd_)$ICLIST,ALL,,,VELO
K_CM(cfd)
Cmd_)/LWSHOW,ansuitmp
Cmd_)/go
:E END
:! 
:N Fnc_IC_p
:S    317,   165,   145
:T Cmd_P
:C )! Fnc_IC_p
:C )! Nodes for IC command below
:A Define
:D Define Initial Conditions
:K #(PREP7*SOLUTION)
:H Hlp_C_IC
Inp_P
Cmd_)!
 Fld_2
  Prm_[IC]  Pick or enter nodes for initial condition specification
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_IC_p2
:E END
:! 
:N Fnc_IC_p2
:S    404,   115,   282
:T Command
:C )! Fnc_IC_p2
:D Define Initial Conditions
:B Fnc_IC
:H Hlp_C_IC
Cmd_IC,P51X
Fld_0
 Typ_Lab
 Prm_[IC]  Define Initial Conditions on Nodes
Fld_2
 Prm_Lab     DOF to be specified
 Typ_LIS_OPTIONB
 LIS_All DOF,ALL
 LIS_*READ,DOF
Fld_3
 Prm_VALUE   Initial value of DOF
 Typ_REAL
Fld_4
 K_FL(STRUCTRL*NOFILTER)
 Prm_VALUE2  Initial velocity
 Typ_REAL
:E END
:! 
:N Fnc_IDEAS
:S    126,    64,    55
:T Command
:A Import IDEAS
Inp_P
CMD_)~eui,'euidl::importGeometry::ideas::create'
:E END
:! 
:N Fnc_IMAGIN
:S    509,   198,   304
:T Command
:C )! Fnc_IMAGIN
:A Imaginary Part
:D Imaginary Part of Time-History Variable
:K (lsdyna)
:K #(POST26+HARMONIC)
:P (LINPLUS*ELECMAG)
:H Hlp_C_IMAGIN
Cmd_IMAGIN
Fld_0
Typ_Lab
Prm_[IMAGIN]           IR = Imaginary Part of (FACTA * IA)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_IMESH2D
:S    644,   549,    88
:T Cmd_P
:C )! Fnc_IMESH2D
:C )/nopr
:C )_zerr=1
:C )*get,_z1,active,0,type
:C )*get,_z2,etyp,_z1,attr,enam
:C )*if,_z2,eq,192,then
:C )_zerr=0
:C )*endif
:C )*if,_z2,eq,193,then
:C )_zerr=0
:C )*endif
:C )*if,_zerr,eq,1,then
:C )*create,ansuitmp
:C )*msg,error,
:C )The current element type is not a 2D interface element.  &
:C )Interface mesh is ignored.
:C )*end
:C )/inp,ansuitmp
:C )*endif
:C )/go
:A 2D Interface
:D Mesh Interface
:K #(PREP7)+(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
:H Hlp_C_IMESH
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_zerr)
Cmd_)/GO
Cal_Fnc_IMESH2Da,2,eq,0,2
:E END
:! 
:N Fnc_IMESH2Da
:S    337,   175,   155
:T Cmd_P
:C )! Fnc_IMESH2Da
:A 2D Interface
:D Mesh Interface
:K #(PREP7)+(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
:H Hlp_C_IMESH
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)*SET,_z01
 Fld_2
  Typ_LINE
  Prm_[IMESH]  Pick or enter meshed line (source)
  Cnt_1
Cmd_)/GO
Cal_Fnc_IMESH2Db
:E END
:! 
:N Fnc_IMESH2Db
:S    480,   385,    88
:T Cmd_P
:C )! Fnc_IMESH2Db
:C )/nopr
:C )_zerr=0
:C )*get,_z2,line,_z01,attr,nnod
:C )*if,_z2,eq,0,then
:C )_zerr=1
:C )*create,ansuitmp
:C )*msg,error,_z01,
:C )The selected source line %I is unmeshed.  &
:C )Interface mesh is ignored.
:C )*end
:C )/inp,ansuitmp
:C )*endif
:C )/go
:A 2D Interface
:D Mesh Interface
:K #(PREP7)
:H Hlp_C_IMESH
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_zerr)
Cmd_)/GO
Cal_Fnc_IMESH2Dc,2,eq,0,2
:E END
:! 
:N Fnc_IMESH2Dc
:S    293,   129,   157
:T Cmd_P
:C )! Fnc_IMESH2Dc
:A 2D Interface
:D Mesh Interface
:K #(PREP7)
:H Hlp_C_IMESH
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)*SET,_z02
 Fld_2
  Typ_LINE
  Prm_[IMESH]  Pick or enter unmeshed line (target)
  Cnt_1
Cmd_)/GO
Cal_Fnc_IMESH2Dd
:E END
:! 
:N Fnc_IMESH2Dd
:S    478,   383,    88
:T Cmd_P
:C )! Fnc_IMESH2Dd
:C )/nopr
:C )_zerr=0
:C )*get,_z2,line,_z02,attr,nnod
:C )*if,_z2,gt,0,then
:C )_zerr=1
:C )*create,ansuitmp
:C )*msg,error,_z02,
:C )The selected target line %I has nodes.  &
:C )Interface mesh is ignored.
:C )*end
:C )/inp,ansuitmp
:C )*endif
:C )/go
:A 2D Interface
:D Mesh Interface
:K #(PREP7)
:H Hlp_C_IMESH
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_zerr)
Cmd_)/GO
Cal_Fnc_IMESH2Df,2,eq,0,2
:E END
:! 
:N Fnc_IMESH2Df
:S    472,   129,   336
:T Cmd_P
:C )! Fnc_IMESH2Df
:A 2D Interface
:D Mesh Interface
:K #(PREP7)
:H Hlp_C_IMESH
Inp_NoApply
Cmd_IMESH,LINE
 Fld_0
  Typ_Lab
  Prm_[IMESH] Create Interface Mesh From Selected Lines
 Fld_2
  Typ_Def_*PAR(_z01)
 Fld_3
  Typ_Def_*PAR(_z02)
 Fld_4
  Prm_Coordinate system
  Typ_Int
 Fld_5
  Prm_DX,DY,DZ Distance
  Typ_REAL3
 Fld_8
  Prm_Tolerance
  Typ_REAL
 Fld_0
  Typ_Lab
  Prm_Note:  Leave options blank for default
:E END
:! 
:N Fnc_IMESH3D
:S    644,   549,    88
:T Cmd_P
:C )! Fnc_IMESH3D
:C )/nopr
:C )_zerr=1
:C )*get,_z1,active,0,type
:C )*get,_z2,etyp,_z1,attr,enam
:C )*if,_z2,eq,194,then
:C )_zerr=0
:C )*endif
:C )*if,_z2,eq,195,then
:C )_zerr=0
:C )*endif
:C )*if,_zerr,eq,1,then
:C )*create,ansuitmp
:C )*msg,error,
:C )The current element type is not a 3D interface element.  &
:C )Interface mesh is ignored.
:C )*end
:C )/inp,ansuitmp
:C )*endif
:C )/go
:A 3D Interface
:D Mesh Interface
:K #(PREP7)+(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
:H Hlp_C_IMESH
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_zerr)
Cmd_)/GO
Cal_Fnc_IMESH3Da,2,eq,0,2
:E END
:! 
:N Fnc_IMESH3Da
:S    337,   175,   155
:T Cmd_P
:C )! Fnc_IMESH3Da
:A 3D Interface
:D Mesh Interface
:K #(PREP7)+(pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna)
:H Hlp_C_IMESH
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)*SET,_z01
 Fld_2
  Typ_AREA
  Prm_[IMESH]  Pick or enter meshed area (source)
  Cnt_1
Cmd_)/GO
Cal_Fnc_IMESH3Db
:E END
:! 
:N Fnc_IMESH3Db
:S    480,   385,    88
:T Cmd_P
:C )! Fnc_IMESH3Db
:C )/nopr
:C )_zerr=0
:C )*get,_z2,area,_z01,attr,nnod
:C )*if,_z2,eq,0,then
:C )_zerr=1
:C )*create,ansuitmp
:C )*msg,error,_z01,
:C )The selected source area %I is unmeshed.  &
:C )Interface mesh is ignored.
:C )*end
:C )/inp,ansuitmp
:C )*endif
:C )/go
:A 3D Interface
:D Mesh Interface
:K #(PREP7)
:H Hlp_C_IMESH
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_zerr)
Cmd_)/GO
Cal_Fnc_IMESH3Dc,2,eq,0,2
:E END
:! 
:N Fnc_IMESH3Dc
:S    293,   129,   157
:T Cmd_P
:C )! Fnc_IMESH3Dc
:A 3D Interface
:D Mesh Interface
:K #(PREP7)
:H Hlp_C_IMESH
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)*SET,_z02
 Fld_2
  Typ_AREA
  Prm_[IMESH]  Pick or enter unmeshed area (target)
  Cnt_1
Cmd_)/GO
Cal_Fnc_IMESH3Dd
:E END
:! 
:N Fnc_IMESH3Dd
:S    478,   383,    88
:T Cmd_P
:C )! Fnc_IMESH3Dd
:C )/nopr
:C )_zerr=0
:C )*get,_z2,area,_z02,attr,nnod
:C )*if,_z2,gt,0,then
:C )_zerr=1
:C )*create,ansuitmp
:C )*msg,error,_z02,
:C )The selected target area %I has nodes.  &
:C )Interface mesh is ignored.
:C )*end
:C )/inp,ansuitmp
:C )*endif
:C )/go
:A 3D Interface
:D Mesh Interface
:K #(PREP7)
:H Hlp_C_IMESH
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_zerr)
Cmd_)/GO
Cal_Fnc_IMESH3Df,2,eq,0,2
:E END
:! 
:N Fnc_IMESH3Df
:S    472,   129,   336
:T Cmd_P
:C )! Fnc_IMESH3Df
:A 3D Interface
:D Mesh Interface
:K #(PREP7)
:H Hlp_C_IMESH
Inp_NoApply
Cmd_IMESH,AREA
 Fld_0
  Typ_Lab
  Prm_[IMESH] Create Interface Mesh From Selected Lines
 Fld_2
  Typ_Def_*PAR(_z01)
 Fld_3
  Typ_Def_*PAR(_z02)
 Fld_4
  Prm_Coordinate system
  Typ_Int
 Fld_5
  Prm_DX,DY,DZ Distance
  Typ_REAL3
 Fld_8
  Prm_Tolerance
  Typ_REAL
 Fld_0
  Typ_Lab
  Prm_Note:  Leave options blank for default
:E END
:! 
:N Fnc_IMPD
:S    703,   168,   528
:T Command
:C )! Fnc_IMPD
:A    Impedance
:D Calculate  Impedance
:K #((POST1+RESULTS+EDGEELC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_IMPD
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[IMPD]  This function calculates impedance of a conductor
 Fld_0
  Typ_Lab
  Prm_        at a reference plane from the voltage and current.
Cmd_)*CSET,1,1
 Fld_2
  Prm_Vpath   Voltage drop path name
  Typ_Lis
  LIS_*READ,DPTH
!
Cmd_)*CSET,2,2
 Fld_2
  Prm_Ipath   Current calc path name
  Typ_Lis
  LIS_*READ,DPTH
!
Cmd_)*SET,_z1
 Fld_2
  Prm_Vsymm   Voltage symmetry factor
  Typ_Real
  Def_1.0
!
Cmd_)*SET,_z2
 Fld_2
  Prm_Isymm   Current symmetry factor
  Typ_Real
  Def_1.0
Cal_Fnc_IMPD_1
:E END
:! 
:N Fnc_IMPD_1
:S    330,   100,   223
:T Cmd
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,2,1,1
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_zc(1)
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(1)
  Dlm_'
 Fld_4
  Typ_Lab
!
Cmd_)*SET,_zc(2)
 Fld_2
  Typ_Def_
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(2)
  Dlm_'
 Fld_4
  Typ_Def_
!
Cmd_)/GO
Cal_Fnc_IMPD_2
:E End
:! 
:N Fnc_IMPD_2
:S    189,    45,   137
:T Cmd
Inp_P
Cmd_IMPD
 Fld_2
  Typ_Def_*STR('%_zc(1)%')
 Fld_3
  Typ_Def_*STR('%_zc(2)%')
 Fld_4
  Typ_Def_*PAR(_z1)
 Fld_5
  Typ_Def_*PAR(_z2)
:E End
:! 
:N Fnc_INDMATR
:S    791,   209,   575
:T Command
:C )! Fnc_INDMATR
:A    Induct Matrix
:D    Induct Matrix
:K #(PREP7*SOLUTION)
:K ((STATIC+SCALARP*VECTORP*EDGEFLX*MAGEDG+harmonic)*NOFILTER)
:H Hlp_C_LMATRIX
Cmd_)/NOPR
Cmd_)*SET,_zs
 Fld_0
  Typ_Lab
  Prm_[LMATRIX]  Inductance Matrix Calculation
 Fld_2
  Typ_Int
  Prm_Symfac Geometric symmetry factor
  Def_1
Cmd_)*CSET,1,1
 Fld_2
  Typ_Char,32,32
  Prm_Coilname Compon. name identifier
Cmd_)*CSET,3,3
 Fld_2
  Typ_Char,32,32
  Prm_Indname  Inductance matrix name
Cmd_)!
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Coil currents must be described in 1D array.
 Fld_2
  Prm_Use as array for coil currents 
  Typ_LIS_RadioB
  LIS_Existing array  ,1
  LIS_New array       ,2
Cmd_)/GO
Cal_Fnc_INDMATR_1,2,eq,1,5
Cal_Fnc_INDMATR_2,2,eq,2,5
:E END
:! 
:N Fnc_INDMATR_0
:S    335,    93,   235
:T Command
:C )! Fnc_INDMATR_0
:K #(PREP7*SOLUTION)
Inp_P
Cmd_LMATRIX
 Fld_2
  Typ_Def_*PAR(_zs)
 Fld_3
  Dlm_'
 Fld_4
  Typ_Def_*CPAR(1)
  Dlm_'
 Fld_5
  Typ_Lab
 Fld_6
  Dlm_'
 Fld_7
  Typ_Def_*CPAR(2)
  Dlm_'
 Fld_8
  Typ_Lab
 Fld_9
  Dlm_'
 Fld_10
  Typ_Def_*CPAR(3)
  Dlm_'
 Fld_11
:E END
:! 
:N Fnc_INDMATR_1
:S    248,   126,   115
:T Command
:C )! Fnc_INDMATR_1
:D Existing array with coil currents
:H Hlp_C_LMATRIX
Cmd_)/NOPR
Cmd_)*CSET,2,2
 Fld_2
  Prm_Cname  Existing array
  Typ_Lis
  LIS_*READ,PARA
Cmd_)/GO
Cal_Fnc_INDMATR_0
:E END
:! 
:N Fnc_INDMATR_2
:S    347,   132,   208
:T Command
:C )! Fnc_INDMATR_2
:D Define new array with coil currents
:K #(PREP7*SOLUTION)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,2,2
 Fld_2
  Prm_Cname  New array name
  Typ_Char,32,32
! Exclude_from_paths
Cmd_*SET,_z1
 Fld_2
  Prm_Number of coils in array
  Typ_Int
  Def_1
Cmd_)/GO
Cal_Fnc_INDMATR_21
:E END
:! 
:N Fnc_INDMATR_21
:S    197,    74,   116
:T Command
:C )! Fnc_INDMATR_21
Inp_P
Cmd_)/GO
! Exclude_from_paths
Cmd_*DIM
 Fld_2
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*PAR(_z1)
Cal_Fnc_INDMATR_3
:E END
:! 
:N Fnc_INDMATR_3
:S    245,    72,   166
:T Command
:C )! Fnc_INDMATR_3
Inp_P
! Exclude_from_paths
Cmd_)*VEDIT
  Fld_2
  Typ_Def_*CPAR(2)
  Dlm_(
  Fld_3
  Typ_Def_1
  Dlm_,
  Fld_4
  Typ_Def_1
  Dlm_)
  Fld_5
  Typ_Lab
Cal_Fnc_INDMATR_4
:E END
:! 
:N Fnc_INDMATR_4
:S    580,   111,   462
:T Command
:C )! Fnc_INDMATR_4
:D LMATRIX Execution 
:H Hlp_C_LMATRIX
Inp_NoApply
Cmd_)!
 Fld_2
  Prm_Choose the option after edit
  Typ_Lis_RadioB
  LIS_Execute LMATRIX ,1
  LIS_Return to MENU  ,2
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Note: Proceed by first entering the coil currents in the Array
 Fld_0
  Typ_Lab
  Prm_      Parameter editor. Use the Apply/Quit option under File button.
 Fld_0
  Typ_Lab
  Prm_      Then make your choice on this LMATRIX Execution dialog box.
Cal_Fnc_INDMATR_0,2,eq,1
Cal_Fnc_INDMATR  ,2,eq,2
:E END
:! 
:N Fnc_INT1
:S    622,   138,   477
:T Command
:C )! Fnc_INT1
:A Integrate
:D Integrate Time-History Variables
:K #(POST26)
:H Hlp_C_INT1
Cmd_INT1
Fld_0
Typ_Lab
Prm_[INT1]        IR = INT(FACTA * IY)d(FACTB * IX) + CONST
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  1st Factor
Typ_real
Def_1.0
Fld_3
Prm_IY     1st Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_10
Prm_FACTB  2nd Factor
Typ_real
Def_1.0
Fld_4
Prm_IX     2nd Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_11
Prm_CONST  Constant
Typ_real
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_INTSRF
:S    479,   190,   282
:T Command
:C )! Fnc_INTSRF
:A Surface Integral
:D Integrate Scalar Value over Selected Nodes
:H Hlp_C_INTSRF
:K #(POST1+RESULTS)
:P (FULL_ANS*FLOTRAN)
Cmd_INTSRF 
 Fld_0
  Typ_Lab
  Prm_[INTSRF]  This function integrates the chosen variable over
 Fld_0
  Typ_Lab
  Prm_          all selected nodes.
 Fld_2 
  Prm_Opt  Scalar Quantity to Integrate
  Typ_Lis_RADIOB   
  Lis_Pressure  ,PRES
  Lis_Wall Shear,TAUW
  Lis_Both      ,FLOW
:E END
:! 
:N Fnc_IRLF
:S    489,   236,   246
:T Command
:C )! Fnc_IRLF
:A Inertia Relief
:D Inertia Relief Options
:K #((PREP7*SOLUTION)+(STATIC*NOFILTER))
:K #((pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL)
:P (LINPLUS)
:H Hlp_C_IRLF
Inp_NoApply
Cmd_IRLF
 Fld_0
  Typ_Lab
  Prm_[IRLF]  Inertia relief options
 Fld_2
  Prm_KEY  Calculate inertia relief?
  Typ_LIS_RADIOB
  LIS_No              ,0
  LIS_Yes             ,1
  LIS_Mass summ. only ,-1
  Def_*GET(common,,stepcm,,int,9)
:E END
:! 
:N Fnc_IRLF_-1
:S    522,   263,   252
:T Command
:C )! Fnc_IRLF_-1
:A Incl Mass Summry
:D Include Accurate Mass Summary in Printout
:K #((PREP7*SOLUTION)+(STATIC*NOFILTER))
:K #((pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL)
:P (LINPLUS)
:H Hlp_C_IRLF
Inp_NoApply
Cmd_IRLF,-1
 Fld_0
  Typ_Lab
  Prm_[IRLF],-1  This option allows printout of accurate
 Fld_0
  Typ_Lab
  Prm_           mass and moment of inertia information during
 Fld_0
  Typ_Lab
  Prm_           solution instead of approximate values.
:E END
:! 
:N Fnc_IRLIST
:S    993,   865,   121
:T Cmd_N
:C )! Fnc_IRLIST
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,10,3,2
:C )!
:C )_zc(1,1,1)='IRLIST' $)_zc(1,2,1)=' '
:C )_zc(2,1,1)=' ' $)_zc(2,2,1)=' '
:C )_zc(3,1,1)=' ' $)_zc(3,2,1)=' ' $)_zc(4,1,1)=' ' $)_zc(4,2,1)=' '
:C )_zc(5,1,1)=' ' $)_zc(5,2,1)=' ' $)_zc(6,1,1)=' ' $)_zc(6,2,1)=' '
:C )_zc(7,1,1)=' ' $)_zc(7,2,1)=' ' $)_zc(8,1,1)=' ' $)_zc(8,2,1)=' '
:C )_zc(9,1,1)=' ' $)_zc(9,2,1)=' ' $)_zc(10,1,1)=' ' $)_zc(10,2,1)=' '
:C )!
:C )_zc(1,1,2)='in the g' $)_zc(2,1,2)='eneral p' $)_zc(3,1,2)='ostproce'
:C )_zc(4,1,2)='ssor    ' $)_zc(5,1,2)='        ' $)_zc(6,1,2)='        '
:C )!
:C )_zc(1,3,1)='<Inertia' $)_zc(2,3,1)=' Relief' $)_zc(3,3,1)=' Summary'
:C )_zc(4,3,1)='>       ' $)_zc(5,3,1)='       ' $)_zc(6,3,1)='        '
:C )!
:C )/go
:A Inertia Relief Summary
:D Inertia Relief Summary
:H Hlp_C_IRLIST
Inp_P
Cmd_)!
 Fld_2
  Typ_Def_*GET(ACTIVE,,ROUTIN)
! Cust_Cmd_IRLIST
Cal_Fnc_STAT_true,2,eq,31
Cal_Fnc_STAT_fals,2,ne,31
:E END
:! 
:N Fnc_ISFILE_del
:S    463,   163,   293
:T Command
:C )! Fnc_ISFILE_del
:A Delete Stresses
:D Delete Initial Stresses
:K (lsdyna)
:K #(SOLUTION)
:H Hlp_C_ISFILE
Cmd_ISFILE,DELETE
 Fld_0
  Typ_Lab
  Prm_[ISFILE]  Delete Initial Stress
 Fld_2
  Typ_INT
  Prm_Element number
 Fld_0
  Typ_Lab
  Prm_(Leave Element number blank to delete all elements)
 Fld_3
  Typ_INT
  Prm_Layer number
 Fld_0
  Typ_Lab
  Prm_(Leave Layer number blank to delete all layers)
:E END
:! 
:N Fnc_ISFILE_list
:S    453,   161,   285
:T Command
:C )! Fnc_ISFILE_list
:A List Stresses
:D List Initial Stresses
:K (lsdyna)
:K #(SOLUTION)
:H Hlp_C_ISFILE
Cmd_ISFILE,LIST
 Fld_0
  Typ_Lab
  Prm_[ISFILE]  List Initial Stress
 Fld_2
  Typ_INT
  Prm_Element number
 Fld_0
  Typ_Lab
  Prm_(Leave Element number blank to list all elements)
 Fld_3
  Typ_INT
  Prm_Layer number
 Fld_0
  Typ_Lab
  Prm_(Leave Layer number blank to list all layers)
:E END
:! 
:N Fnc_ISFILE_read
:S    759,   163,   589
:T Command
:C )! Fnc_ISFILE_read
:A Read IS File
:D Read Initial Stress File
:K (lsdyna)
:K #(SOLUTION)
:H Hlp_C_ISFILE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,4
 Fld_0
  Typ_Lab
  Prm_[ISFILE]  Read a file containing Initial Stress data
 Fld_5
  Prm_LOCATION         Application
  Typ_LIS_OPTIONB
  LIS_Center of Elem ,0
  LIS_Gauss Points   ,1
  LIS_By Elem Record ,2
  LIS_Constant Stress,3
 Fld_0
  Typ_SEP
 Fld_2
  Typ_FILE
  Prm_FILE     Initial Stress file
K_LN(intelnt+alphant)
  Def_*STR(./*.ist*)
K_LN(INTELNT*ALPHANT)
  Def_*STR(.\*.ist*)
 Fld_0
  Typ_SEP
Cmd_)!
 Fld_2
  Prm_Apply stress on all materials?
  Typ_Logi,No,Yes
  Def_1
Cmd_)/GO
Cal_Fnc_ISFILE_read1,2,eq,1,3
Cal_Fnc_ISFILE_read2,2,eq,0,3
:E END
:! 
:N Fnc_ISFILE_read1
:S    298,   165,   126
:T Command
:C )! Fnc_ISFILE_read1
:A Read IS File
:D Read Initial Stress File
:K (lsdyna)
:K #(SOLUTION)
:H Hlp_C_ISFILE
Inp_P
Cmd_ISFILE,READ
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
:E END
:! 
:N Fnc_ISFILE_read2
:S    539,   165,   367
:T Command
:C )! Fnc_ISFILE_read2
:A Read IS File
:D Read Initial Stress File
:K (lsdyna)
:K #(SOLUTION)
:H Hlp_C_ISFILE
Inp_NoApply
Cmd_ISFILE,READ
 Fld_0
  Typ_Lab
  Prm_[ISFILE]  Read a file containing Initial Stress data
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Prm_Apply stress to materials:
  Typ_INT3
 Fld_9
  Prm_  Enter material numbers or
  Typ_INT3
 Fld_12
  Prm_  loop using "VMIN,VMAX,-VINC"
  Typ_INT3
:E END
:! 
:N Fnc_ISTRESS
:S    533,   185,   341
:T Command
:C )! Fnc_ISTRESS
:A 1234567890123456
:A Apply Const Strs
:D Apply Constant Initial Stress
:K (lsdyna)
:K #(SOLUTION)
:H Hlp_C_ISTRESS
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,6
 Fld_0
  Typ_Lab
  Prm_[ISTRESS] Apply Constant Initial Stress
 Fld_2
  Prm_ SX,  SY,  SZ
  Typ_REAL3
 Fld_5
  Prm_ SXY, SXZ, SYZ
  Typ_REAL3
 Fld_0
  Typ_SEP
Cmd_)!
 Fld_2
  Prm_Apply stress on all materials?
  Typ_Logi,No,Yes
  Def_1
Cmd_)/GO
Cal_Fnc_ISTRESS_ex1,2,eq,1,3
Cal_Fnc_ISTRESS_ex2,2,eq,0,3
:E END
:! 
:N Fnc_ISTRESS_ex1
:S    354,   173,   174
:T Command
:C )! Fnc_ISTRESS_ex1
:A Apply Const Strs
:D Apply Constant Initial Stress
:K (lsdyna)
:K #(SOLUTION)
:H Hlp_C_ISTRESS
Inp_P
Cmd_ISTRESS
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
:E END
:! 
:N Fnc_ISTRESS_ex2
:S    583,   173,   403
:T Command
:C )! Fnc_ISTRESS_ex2
:A Apply Const Strs
:D Apply Constant Initial Stress
:K (lsdyna)
:K #(SOLUTION)
:H Hlp_C_ISTRESS
Inp_NoApply
Cmd_ISTRESS
 Fld_0
  Typ_Lab
  Prm_[ISTRESS] Apply Constant Initial Stress
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Typ_Def_*CPAR(5)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Prm_Apply stress to materials:
  Typ_INT3
 Fld_11
  Prm_  Enter material numbers or
  Typ_INT3
 Fld_14
  Prm_  loop using "VMIN,VMAX,-VINC"
  Typ_INT3
:E END
:! 
:N Fnc_ISWRITE
:S    259,   156,    96
:T Command
:C )! Fnc_ISWRITE
:A Write Stresses
:D Write Initial Stresses
:K (lsdyna)
:K #(SOLUTION)
:H Hlp_C_ISWRITE
Inp_NoApply
Cmd_ISWRITE
 Fld_2
  Prm_[ISWRITE]  Write Initial Stress?
  Typ_Logi,No,Yes
  Def_0
:E END
:! 
:N Fnc_Iconscale
:S    462,   114,   341
:T Cmd
:A Scale Icon
:D Scale Icons Function
:H Hlp_UI_mems
:P (ELECMAG)
Cmd_/ICSCALE
 Fld_0
  Typ_Lab
  Prm_[/ICSCALE]  Icon Scale Factor
 Fld_2
  Typ_Int
  Prm_WN              Window number
  Def_1
 Fld_3
  Typ_Int
  Prm_Factor            Ratio value
  Def_1
 Fld_0
  Typ_sep
Cmd_/ICLWID
 Fld_0
  Typ_Lab
  Prm_[/ICLWID]   Icon Line Width
 Fld_2
  Typ_Int
  Prm_Factor       Thickness factor
  Def_1
Cmd_/REPLOT
:E END
:! 
:N Fnc_Import
:S    324,   199,   118
:T Cmd
:A Import
:D Import IGES File
:C )! Fnc_Import
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,10,1,2
:C )_z9 = 'Import_2'
:C )_z10= '*.*'
:C )_z11= '*'
:C )/GO
Inp_P
Cmd_)!
K_LN(begin+aux15)
Cal_Fnc_CHK_ROUT
K_LN(BEGIN*AUX15)
Cal_Fnc_Import_2
K_LN(begin+aux15)
Cal_Fnc_ExitRout
:E END
:! 
:N Fnc_Import_2
:S    623,   132,   484
:T Cmd
:A Import IGES File
:C )! Fnc_Import_2
:C )/GO
:D Import IGES File
:H Hlp_UI_import2
Inp_NoApply
! Exclude_from_paths
Cmd_FINISH
 K_CM(aux15+begin)
Cmd_/AUX15
 K_CM(aux15)
Cmd_)/NOPR
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_[/AUX15] [IOPTN] Options for IGES Import
Cmd_)*SET,_z1
 Fld_2
  Typ_Def_0
Cmd_)*set,_z5
 Fld_2
  Prm_MERGE Merge coincident keypts?
  Typ_LOGI,No  ,Yes
  Def_1
Cmd_)*set,_z6
 Fld_2
  Prm_SOLID Create solid if applicable?
  Typ_LOGI,No  ,Yes
  Def_1
Cmd_)*set,_z7
 Fld_2
  Prm_SMALL Delete small areas?
  Typ_LOGI,No  ,Yes
  Def_1
Cmd_)/GO
Cal_Fnc_Import_3
:E END
:! 
:N Fnc_Import_3
:S   1216,   485,   724
:T Cmd
:A Import IGES File
:C )! Fnc_Import_3
:C )/NOPR
:C )KEYW,KEY1,0
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )*SET,_zc(1),'SMOOTH','FACETED'
:C )*IF,_z1,eq,1,then
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_z5,eq,1,then
:C )_z5='YES'
:C )*ELSE
:C )_z5='NO'
:C )*ENDIF
:C )*IF,_z6,eq,1,then
:C )_z6='YES'
:C )*ELSE
:C )_Z6='NO'
:C )*ENDIF
:C )*IF,_z7,eq,1,then
:C )_z7='YES'
:C )*ELSE
:C )_z7='NO'
:C )*ENDIF
:C )/GO
:D Import IGES File
:H Hlp_UI_import2
Inp_NoApply
Cmd_IOPTN,IGES
   Fld_2
   Typ_Def_*PAR(_zc(_z1+1))
Cmd_IOPTN,MERGE
   Fld_2
   Typ_Def_*PAR(_z5)
Cmd_IOPTN,SOLID
   Fld_2
   Typ_Def_*PAR(_z6)
Cmd_IOPTN,SMALL
   Fld_2
   Typ_Def_*PAR(_z7)
Cmd_IOPTN
K_CM(key1)
 Fld_2
  Typ_Def_GTOLER
 Fld_3
  Prm_GTOLER  Tolerance for merging
  Typ_Lis_OptionB
  Lis_Use default, DEFA
  Lis_From IGES file  ,FILE
  Lis_0.0001          ,0.0001
  Lis_0.0005          ,0.0005
  Lis_0.001           ,0.001
  Lis_0.005           ,0.005
  Lis_0.01            ,0.01
  Lis_0.05            ,0.05
  Lis_0.1             ,0.1
Cmd_IGESIN
 Fld_0
  Typ_Sep
 Fld_2
  Prm_[IGESIN] (AUX15)  File to import
  Typ_FILE
K_LN(INTELNT*ALPHANT)
  Def_*PAR(_z10)
K_LN(intelnt+alphant)
  Def_*PAR(_z11)
:E END
:! 
:N Fnc_Import_x
:S    413,   159,   247
:T Cmd
:C )! Fnc_Import_x
:C )/NOPR
:C )*IF,_z1,EQ,0,THEN
:C ) _z1='RV52'
:C )*ELSE
:C ) _z1='RV53'
:C )*ENDIF
:C )/GO
Inp_P
Cmd_IOPTN,IGES
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
  Dlm_~
 Fld_5
  Typ_Def_*CPAR(4)
  Dlm_~
 Fld_6
  Typ_Def_*CPAR(5)
! Exclude_from_paths
Cmd_FINISH
K_CM(aux15)
Cmd_)/GO
:E End
:! 
:N Fnc_InfAElm
:S    407,   166,   234
:T Command
:C )! Fnc_InfAElm
:A    Inf Acoustic 
:D Create Infinite Acoustic Elements
:K #(PREP7)
:P (FULL_ANS)
:H Hlp_C_ESURF
Inp_NoApply
Cmd_ESURF
 Fld_0
  Typ_Lab
  Prm_[ESURF]  Create the infinite acoustic elements to absorb the
 Fld_0
  Typ_Lab
  Prm_   outgoing infinite pressure waves with minimal reflection
 Fld_0
  Typ_Lab
  Prm_   back in the model.
:E END
:! 
:N Fnc_IntPort
:S    160,   140,    13
:T Cmd_N
:C )! Fnc_IntPort
:A    -Interior-
:K #(PREP7*SOLUTION)
:K #(EDGEELC*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_J-Parall
:S    440,   197,   236
:T Cmd_N
:C )! Fnc_J-Parall
:A    J-Parallel
:K #(PREP7*SOLUTION*NOFILTER)
:K (((ELECTRIC*ELECSTAT)+timeintp+edgeelc)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_                      - Note -
 Fld_0
  Typ_Lab
  Prm_  The J-Parallel condition is a naturally occuring boundary
 Fld_0
  Typ_Lab
  Prm_    condition  and no boundary prescription is required.
:E END
:! 
:N Fnc_J-Parall-T
:S    418,   175,   236
:T Cmd_N
:C )! Fnc_J-Parall-T
:A    J-Parallel
:K ((PREP7*SOLUTION)+(elem3d+edgeelc+TIMEINTP)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_NoApply
Cmd_)!
 Fld_0
  Typ_Lab
  Prm_                      - Note -
 Fld_0
  Typ_Lab
  Prm_  The J-Parallel condition is a naturally occuring boundary
 Fld_0
  Typ_Lab
  Prm_    condition  and no boundary prescription is required.
:E END
:! 
:N Fnc_JointAddEdit
:S    274,   112,   155
:T Cmd
:C )! Fnc_JointAddEdit
:A    Add / Edit
:K #(PREP7*SOLUTION)
Inp_P
! Cust_Cmd_SECTYPE
! Cust_Cmd_SECJOINT
! Cust_Cmd_SECDATA
! Cust_Cmd_SECSTOP
! Cust_Cmd_SECLOCK
Cmd_)~eui,'::euidl::element::joint::section::create'
:E End
:! 
:N Fnc_K
:S    341,   143,   191
:T Command
:C )! Fnc_K
:A In Active CS
:D Create Keypoints in Active Coordinate System
:K #(PREP7)
:H Hlp_C_K
Cmd_K
 Fld_0
  Typ_Lab
  Prm_[K]  Create Keypoints in Active Coordinate System
 Fld_2
  Prm_NPT    Keypoint number
  Typ_INT
  Def_Blank
 Fld_3
  Prm_X,Y,Z  Location in active CS
  Typ_REAL3
:E End
:! 
:N Fnc_KATT
:S   1154,   512,   635
:T Command
:C )! Fnc_KATT
:C )/NOPR
:C )KEYW,ETLIST,0
:C )KEYW,RLLIST,0
:C )KEYW,MPLIST,0
:C )KEYW,CSLIST,0
:C )_z1=ETYIQR(0,12)
:C )*IF,_z1,gt,10,then
:C )KEYW,ETLIST,1
:C )*ENDIF
:C )_z2=RLINQR(0,12)
:C )*IF,_z2,gt,10,then
:C )KEYW,RLLIST,1
:C )*ENDIF
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )_z4=CSYIQR(0,12)
:C )*IF,_z4,gt,10,then
:C )KEYW,CSLIST,1
:C )*ENDIF
:C )/GO
:A All Keypoints
:D Keypoint Attributes
:K #(PREP7)
:H Hlp_C_KATT
Inp_NoApply
Cmd_KATT
 Fld_0
  Typ_Lab
  Prm_[KATT]  Assign Attributes to All Selected Keypoints
 Fld_0
 Typ_Sep
 Fld_2
  Prm_MAT   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
 Fld_0
 Typ_Sep
 Fld_3
  Prm_REAL  Real constant set number
  K_LN(rllist)
  Typ_LIS_OPTIONB
  K_LN(RLLIST)
  Typ_LIS
  LIS_*READ,REAL
 Fld_0
 Typ_Sep
 Fld_4
  Prm_TYPE  Element type number
  K_LN(etlist)
  Typ_LIS_OPTIONB
  K_LN(ETLIST)
  Typ_LIS
  LIS_*READ,TYPE
 Fld_0
 Typ_Sep
 Fld_5
  Prm_ESYS  Element coordinate sys
  K_LN(cslist)
  Typ_LIS_OPTIONB
  K_LN(CSLIST)
  Typ_LIS
  LIS_*READ,ESYS
 Fld_0
 Typ_Sep
:E END
:! 
:N Fnc_KATT_p
:S    413,   127,   279
:T Cmd_P
:C )! Fnc_KATT_p
:A Picked KPs
:D Keypoint Attributes
:K #(PREP7)
:H Hlp_C_KATT
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,KP
! Exclude_from_paths
Cmd_KSEL
 Fld_5
  Prm_[KATT] Pick or enter keypoints for attribute assignment
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,KP
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_KATT_p2
:E END
:! 
:N Fnc_KATT_p2
:S   1323,   515,   801
:T Command
:C )! Fnc_KATT_p2
:C )/NOPR
:C )KEYW,ETLIST,0
:C )KEYW,RLLIST,0
:C )KEYW,MPLIST,0
:C )KEYW,CSLIST,0
:C )_z1=ETYIQR(0,12)
:C )*IF,_z1,gt,10,then
:C )KEYW,ETLIST,1
:C )*ENDIF
:C )_z2=RLINQR(0,12)
:C )*IF,_z2,gt,10,then
:C )KEYW,RLLIST,1
:C )*ENDIF
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )_z4=CSYIQR(0,12)
:C )*IF,_z4,gt,10,then
:C )KEYW,CSLIST,1
:C )*ENDIF
:C )/GO
:A Picked KPs
:D Keypoint Attributes
:K #(PREP7)
:H Hlp_C_KATT
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
Cmd_)/GO
Cmd_KATT
 Fld_0
  Typ_Lab
  Prm_[KATT]  Assign Attributes to Picked Keypoints
 Fld_0
 Typ_Sep
 Fld_2
  Prm_MAT   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
 Fld_0
 Typ_Sep
 Fld_3
  Prm_REAL  Real constant set number
  K_LN(rllist)
  Typ_LIS_OPTIONB
  K_LN(RLLIST)
  Typ_LIS
  LIS_*READ,REAL
 Fld_0
 Typ_Sep
 Fld_4
  Prm_TYPE  Element type number
  K_LN(etlist)
  Typ_LIS_OPTIONB
  K_LN(ETLIST)
  Typ_LIS
  LIS_*READ,TYPE
 Fld_0
 Typ_Sep
 Fld_5
  Prm_ESYS  Element coordinate sys
  K_LN(cslist)
  Typ_LIS_OPTIONB
  K_LN(CSLIST)
  Typ_LIS
  LIS_*READ,ESYS
 Fld_0
 Typ_Sep
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_KBET
:S    332,   163,   162
:T Cmd_P
:C )! Fnc_KBET
:A KP between KPs
:D KP between KPs
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,5
:K #(PREP7)
:H Hlp_C_KBETW
Inp_P
Cmd_)*SET,_z(1)
Fld_2
  Typ_KEYP
  Min_2
  Max_2
  Cnt_2
  PCN_0
  PFM_2
  Prm_[KBET]Pick or enter beginning and ending key points:
Cmd_)/GO
Cal_Fnc_KBET_2
:E END
:! 
:N Fnc_KBET_2
:S    367,   133,   227
:T Command
:C )! Fnc_KBET_2
:A KBETween options
:D KBETween options
:K #(PREP7)
:H Hlp_C_KBETW
Cmd_KBETW
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Typ_Def_*PAR(_z(2))
 Fld_4
  Typ_Def_0
 Fld_5
  Typ_Lis
  Prm_[KBET]Value Type:
  Lis_RATI,RATI
  Lis_DIST,DIST
 Fld_6
  Typ_Real
  Prm_[KBET]Value(ratio, or distance):
  Def_0.5
:E END
:! 
:N Fnc_KCALC
:S    678,   159,   499
:T Command
:C )! Fnc_KCALC
:A Stress Int Factr
:D Stress Intensity Factor
:H Hlp_C_KCALC
:K #(POST1+RESULTS)
:P (LINPLUS)
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_[KCALC]  Stress Intensity Factors KI, KII, KIII
Cmd_KCALC
 Fld_2
  Prm_KPLAN   Disp extrapolat based on
  Typ_LIS_OPTIONB
   LIS_Plane strain    ,0
   LIS_Axisymmetric    ,0
   LIS_Plane stress    ,1
 Fld_3
  Prm_MAT     Material num for extrap
  Typ_int
  Def_1
 Fld_4
  Prm_KCSYM   Model type
  Typ_LIS_OPTIONB
   LIS_Half - symm b.c.,0
   LIS_Half - asym b.c.,2
   LIS_Full-crack model,3
 Fld_5
  Prm_KLOCPR  Print local disp's?
  Typ_LOGI,No              ,Yes
:E END OF Fnc_KCALC
:! 
:N Fnc_KCEN
:S    310,   159,   144
:T Cmd_P
:C )! Fnc_KCEN
:A 3 keypoints
:D 3 keypoints
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,5
:K #(PREP7)
:H Hlp_C_KCENTER
Inp_P
Cmd_)*SET,_z(1)
Fld_2
  Typ_KEYP
  Min_3
  Max_3
  Cnt_3
  PCN_0
  PFM_2
  Prm_[KCEN]Pick or enter 3 key points:
Cmd_)/GO
Cal_Fnc_KCENK_2
:E END
:! 
:N Fnc_KCENK_2
:S    275,   107,   161
:C )! Fnc_KCENK_2
:A Center of 3 KPs
:D Center of 3 KPs
:K #(PREP7)
Inp_P
:H Hlp_C_KCENTER
Cmd_KCENTER
 Fld_3
  Typ_Def_*PAR(_z(1))
 Fld_4
  Typ_Def_*PAR(_z(2))
 Fld_5
  Typ_Def_*PAR(_z(3))
 Fld_6
  Typ_Def_0
 Fld_2
  Typ_Def_KP
:E END
:! 
:N Fnc_KCENL
:S    291,   168,   116
:T Cmd_P
:C )! Fnc_KCENL
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,6
:A Location on line
:D Location on line
:K #(PREP7)
:H Hlp_C_KCENTER
Inp_P
Cmd_)*SET,_z(1)
 Fld_2
  Typ_LINE
  Prm_ [KCEN]Pick or enter a line:
  Min_1
  Cnt_1
Cmd_)/GO
Cal_Fnc_KCENL_2
:E END
:! 
:N Fnc_KCENL_2
:S    205,   115,    83
:C )! Fnc_KCENL_2
:A Center of line
:D Center of line
:K #(PREP7)
:C )/NOPR
Inp_P
:H Hlp_C_KCENTER
Cmd_)*SET,_z(2)
 Fld_2
  Typ_Def_0
Cmd_)/GO
Cal_Fnc_KCENL_3
:E END
:! 
:N Fnc_KCENL_3
:S    341,   131,   203
:T Cmd_P
:C )! Fnc_KCENL_3
:A Center of line
:D Center of line
:K #(PREP7)
:H Hlp_C_KCENTER
Inp_P
Cmd_KCENTER
 Fld_2
  Typ_Def_LINE
 Fld_3
  Typ_Def_*PAR(_z(1))
 Fld_7
  Typ_Def_*PAR(_z(2))
 Fld_4
  Typ_XYZ_SCREEN
  Prm_[KCEN]Pick three locations along the line:
  Min_3
  Cnt_3
  PFM_1
  Pwr_1
:E END
:! 
:N Fnc_KCENR
:S    321,   170,   144
:T Cmd_P
:C )! Fnc_KCEN
:A 3 KPs and radius
:D 3 KPs and radius
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,5
:K #(PREP7)
:H Hlp_C_KCENTER
Inp_P
Cmd_)*SET,_z(1)
Fld_2
  Typ_KEYP
  Min_3
  Max_3
  Cnt_3
  PCN_0
  PFM_2
  Prm_[KCEN]Pick or enter 3 key points:
Cmd_)/GO
Cal_Fnc_KCENR_2
:E END
:! 
:N Fnc_KCENR_2
:S    325,   153,   165
:C )! Fnc_KCENR_2
:T Command
:A KCENter command options
:D KCENter command options  
:K #(PREP7)
:H Hlp_C_KCENTER
Cmd_KCENTER
 Fld_3
  Typ_Def_*PAR(_z(1))
 Fld_4
  Typ_Def_*PAR(_z(2))
 Fld_5
  Typ_Def_*PAR(_z(3))
 Fld_6
  Typ_Real
  Prm_[KCEN]Radius:
  Def_0
 Fld_2
  Typ_Def_KP
:E END
:! 
:N Fnc_KCLEAR
:S    244,   124,   113
:T Cmd_P
:C )! Fnc_KCLEAR
:A Keypoints
:D Clear Keypoints
:K #(PREP7)
:H Hlp_C_KCLEAR
Inp_P
Cmd_KCLEAR
 Fld_2
  Typ_KEYP
  Prm_[KCLEAR]  Pick or enter keypoints to be cleared
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_KDELE
:S    240,   122,   111
:T Cmd_P
:C )! Fnc_KDELE
:A Keypoints
:D Delete Keypoints
:K #(PREP7)
:H Hlp_C_KDELE
Inp_P
Cmd_KDELE
 Fld_2
  Typ_KEYP
  Prm_[KDELE]  Pick or enter keypoints to be deleted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_KDIS
:S    197,    98,    92
:T Cmd_P
:A KP distances
:D Keypoint distances
:H Hlp_C_KDIST
Inp_P
Cmd_KDIST
 Fld_2
  Prm_[KDIS]   Pick two keypoints
  Typ_KEYP
  Min_2
  Max_2
  PFM_2
:E End
:! 
:N Fnc_KESIZE
:S    536,   254,   275
:T Cmd
:C )! Fnc_KESIZE
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,11
:C )*GET,_z1,kp,,num,min
:C )*VGET,_z(1),20,_z1,8,3,,,4
:C )_z1=_z(1)
:C )/GO
:A     All KPs
:D Element Size at All Keypoints
:K #(PREP7)
:H Hlp_C_KESIZE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,3
 Fld_0
  Typ_Lab
  Prm_[KESIZE]  Element Sizes on All Selected Keypoints
 Fld_2
  Typ_REAL
  Prm_SIZE   Element edge length
  Def_*PAR(_z1)
 Fld_0
 Typ_Sep
 Fld_3
 Prm_Show more options
 Typ_LOGI,No  ,Yes
 Def_0
Cmd_)/GO
Cal_Fnc_KESIZEl
:E END
:! 
:N Fnc_KESIZE1
:S    573,   144,   422
:T Command
:C )! Fnc_KESIZE1
:A     All KPs
:D Element Size at All Keypoints
:K #(PREP7)
:H Hlp_C_KESIZE
Inp_Noapply
Cmd_KESIZE
 Fld_0
 Typ_Lab
 Prm_[KESIZE]  Element size at keypoints
 Fld_2
  Typ_Def_ALL
 Fld_3
  Typ_Def_*CPAR(1) 
 Fld_4
  Typ_REAL
  Prm_FACT1  Prev size scale factor  
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_         (NDIV is used only if SIZE is blank or zero)
 Fld_5
  Typ_REAL
  Prm_FACT2  Min division scale factor
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_       - (used only if SIZE and FACT1 are blank or zero)
:E END
:! 
:N Fnc_KESIZE2
:S    137,    68,    62
:T Command
:C )! Fnc_KESIZE2
Inp_P
Cmd_KESIZE
 Fld_2
 Typ_Def_ALL
 Fld_3
 Typ_Def_*CPAR(1)
:E END
:! 
:N Fnc_KESIZE_p
:S    477,   181,   289
:T Cmd_P
:C )! Fnc_KESIZE_p
:C )! Keypoints for KESIZE command below
:A     Picked KPs
:D Elem Size at Picked KP
:K #(PREP7)
:H Hlp_C_KESIZE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,KP
! Exclude_from_paths
Cmd_KSEL
 Fld_5
  Prm_[KESIZE]  Pick or enter keypoints for size assignment
  Typ_KEYP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,KP
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_KESIZE_p2
:E END
:! 
:N Fnc_KESIZE_p2
:S    603,   301,   295
:T Command
:C )! Fnc_KESIZE_p2
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,11
:C )CMSEL,S,_Y1
:C )*GET,_z1,kp,,num,min
:C )CMSEL,S,_Y
:C )*VGET,_z(1),20,_z1,8,3,,,4
:C )_z1=_z(1)
:C )/GO
:A     Picked KPs
:D Element Size at Picked Keypoints
:K #(PREP7)
:H Hlp_C_KESIZE
Inp_NoApply
! Exclude_from_paths
Cmd_)/NOPR
Cmd_)*CSET,1,3
 Fld_0
  Typ_Lab
  Prm_[KESIZE]  Element size at picked keypoints
 Fld_2
  Typ_REAL
  Prm_SIZE   Element edge length
  Def_*PAR(_z(1))
 Fld_0
 Typ_Sep
 Fld_3
 Prm_Show more options
 Typ_LOGI,No    ,Yes
 Def_0
Cmd_)/GO
Cal_Fnc_KESIZE_pl
:E END
:! 
:N Fnc_KESIZE_p3
:S    771,   151,   613
:T Command
:C )! Fnc_KESIZE_p3
:A     All KPs
:D Element Size at Picked Keypoints
:K #(PREP7)
:H Hlp_C_KESIZE
Inp_Noapply
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
Cmd_)/GO
Cmd_KESIZE
 Fld_0
 Typ_Lab
 Prm_[KESIZE]  Element size at picked keypoints
 Fld_2
  Typ_Def_ALL
 Fld_3
  Typ_Def_*CPAR(1) 
 Fld_4
  Typ_REAL
  Prm_FACT1  Prev size scale factor  
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_         (NDIV is used only if SIZE is blank or zero)
 Fld_5
  Typ_REAL
  Prm_FACT2  Min division scale factor
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_       - (used only if SIZE and FACT1 are blank or zero)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
:E END
:! 
:N Fnc_KESIZE_p4
:S    325,    72,   246
:T Command
:C )! Fnc_KESIZE_p4
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
Cmd_)/GO
Cmd_KESIZE
 Fld_2
 Typ_Def_ALL
 Fld_3
 Typ_Def_*CPAR(1)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
:E END
:! 
:N Fnc_KESIZE_pdel
:S    336,   188,   141
:T Cmd_P
:C )! Fnc_KESIZE_pdel
:C )! Keypoints for KESIZE command below
:A     Clr Size
:D Element Size on Keypoints
:K #(PREP7)
:H Hlp_C_KESIZE
Inp_P
Cmd_KESIZE
 Fld_2
  Prm_[KESIZE]  Pick or enter keypints to remove sizes
  Typ_KEYP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
 Fld_3
  Typ_Def_0
:E END
:! 
:N Fnc_KESIZE_pl
:S    169,    72,    90
:T Command
:C )! Fnc_KESIZE_pl
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*CPAR(2)
Cal_Fnc_KESIZE_p3,2,eq,1 
Cal_Fnc_KESIZE_p4,2,eq,0 
:E END
:! 
:N Fnc_KESIZEl
:S    161,    68,    86
:T Command
:C )! Fnc_KESIZEl
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*CPAR(2)
Cal_Fnc_KESIZE1,2,eq,1 
Cal_Fnc_KESIZE2,2,eq,0 
:E END
:! 
:N Fnc_KEY116_0
:S    585,   171,   407
:T Command
:C )! Fnc_KEY116_0
:C )/NOPR
:C )KEYW,KE1160,1
:C )/GO
:A Element 116
:H Hlp_E_S4.116
:D  FLUID116 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID116, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Number of Nodes per Element   K2
Typ_LIS_OPTIONB
LIS_2 Nodes(no conv),0
LIS_2 Nodes (conv)  ,1
LIS_4 Nodes (conv)  ,2
LIS_4 Nodes (I conv),3
LIS_4 Nodes (J conv),4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
  Cal_Fnc_KEY116_2,4,le,1
  Cal_Fnc_KEY116_12,4,ge,2
:E End
:! 
:N Fnc_KEY116_1
:S    544,   135,   402
:T Command
:C )! Fnc_KEY116_1
:A Element 116
:H Hlp_E_S4.116
:D  FLUID116 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID116, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Number of Nodes per Element   K2
Typ_LIS_OPTIONB
LIS_2 Nodes(no conv),0
LIS_2 Nodes (conv)  ,1
LIS_4 Nodes (conv)  ,2
LIS_4 Nodes (I conv),3
LIS_4 Nodes (J conv),4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
  Cal_Fnc_KEY116_12,4,ge,2
  Cal_REFRESH,4,le,1
:E End
:! 
:N Fnc_KEY116_12
:S    798,   137,   654
:T Command
:C )! Fnc_KEY116_12
:A Element 116
:H Hlp_E_S4.116
:D  FLUID116 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID116, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Film Coef using               K4
Typ_LIS_OPTIONB
LIS_MP with hf      ,0
LIS_Real Const(9-12),1
LIS_TB (Temp+VELave),2
LIS_TB (Temp+Reylds),3
LIS_TB for Nu       ,4
LIS_Call User116Hf  ,5
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Eval of film coefficient at   K5
Typ_LIS_OPTIONB
LIS_Avg fluid temp  ,0
LIS_Avg wall temp   ,1
LIS_Avg film temp   ,2
LIS_Differntial temp,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
 K_LN(KE1160)
  Cal_Fnc_KEY116_2
:E End
:! 
:N Fnc_KEY116_16
:S    672,   137,   528
:T Command
:C )! Fnc_KEY116_16
:A Element 116
:H Hlp_E_S4.116
:D  FLUID116 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID116, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Friction factor calc using    K7
Typ_LIS_OPTIONB
LIS_Smooth pipe     ,0
LIS_MP with mu      ,1
LIS_TB of VELave    ,2
LIS_TB of Reynold's ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Flow losses spec by input of  K8
Typ_LIS_OPTIONB
LIS_Additionl length,0
LIS_Loss coefficient,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
:E End
:! 
:N Fnc_KEY116_2
:S    523,   135,   381
:T Command
:C )! Fnc_KEY116_2
:A Element 116
:H Hlp_E_S4.116
:D  FLUID116 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID116, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Fluid conductance coef using  K6
Typ_LIS_OPTIONB
LIS_Conductance     ,0
LIS_Real constant   ,1
LIS_TB of VELave    ,2
LIS_TB of Reynolds  ,3
LIS_Call User116Cond,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
  Cal_Fnc_KEY116_16,4,eq,0
:E End
:! 
:N Fnc_KEYOPT_0
:S    287,   127,   137
:T Command
:C )! Fnc_KEYOPT_0
:A Element 0
:H Hlp_E_S4.0
:D NULL0 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The NULL0 element type does not have any options.
:E End_OF_Fnc_KEYOPT_0
:! 
:N Fnc_KEYOPT_1
:S    203,   113,    67
:T Command
:C )! Fnc_KEYOPT_1
:A Element 1
:D LINK1 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'LINK1'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_1
:! 
:N Fnc_KEYOPT_10
:S    192,   117,    68
:T Command
:C )! Fnc_KEYOPT_10
:A Element 10
:D LINK10 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'LINK10'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E END
:! 
:N Fnc_KEYOPT_106
:S    269,   123,   139
:T Command
:C )! Fnc_KEYOPT_106
:A Element 106
:D  VISCO106 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The VISCO106 element type is no longer supported.
!
:E End
:! 
:N Fnc_KEYOPT_107
:S    269,   123,   139
:T Command
:C )! Fnc_KEYOPT_107
:A Element 107
:D  VISCO107 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The VISCO107 element type is no longer supported.
!
:E End
:! 
:N Fnc_KEYOPT_108
:S    269,   123,   139
:T Command
:C )! Fnc_KEYOPT_108
:A Element 108
:D  VISCO108 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The VISCO108 element type is no longer supported.
!
:E End
:! 
:N Fnc_KEYOPT_109
:S    217,   122,    70
:T Command
:C )! Fnc_KEYOPT_109
:A Element 109
:D TRANS109 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'TRANS109'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_109
:! 
:N Fnc_KEYOPT_11
:S    304,   132,   148
:T Command
:C )! Fnc_KEYOPT_11
:A Element 11
:H Hlp_E_S4.11
:D LINK11 element type options
Inp_NoApply
Fld_0
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The LINK11 element type does not have any options.
!  
:E End_OF_Fnc_KEYOPT_11
:! 
:N Fnc_KEYOPT_110
:S   1118,   138,   973
:T Command
:C )! Fnc_KEYOPT_110
:A Element 110
:H Hlp_E_S4.110
:D INFIN110 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for INFIN110, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element degrees of freedom    K1
Typ_LIS_OPTIONB
P_LN(ELECMAG)
LIS_AZ              ,0
P_LN(ELECMAG)
LIS_VOLT(charge)    ,1
P_LN(FULL_ANS)
LIS_TEMP            ,2
P_LN(ELECMAG)
LIS_VOLT(current)   ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Define element as             K2
Typ_LIS_OPTIONB
LIS_4-Noded Quad    ,0
LIS_8-Noded Quad    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane           ,0
LIS_Axisymmetric    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Electric charge reaction sign K6
Typ_LIS_OPTIONB
LIS_Positive ,0
LIS_Negative ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
:E End
:! 
:N Fnc_KEYOPT_111
:S    936,   138,   791
:T Command
:C )! Fnc_KEYOPT_111
:A Element 111
:H Hlp_E_S4.111
:D INFIN111 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for INFIN111, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element degrees of freedom    K1
Typ_LIS_OPTIONB
P_LN(E3)
LIS_MAG             ,0
P_LN(E3)
LIS_AX  AY  AZ      ,1
P_LN(E3)
LIS_VOLT(charge)    ,2
P_LN(FULL_ANS)
LIS_TEMP            ,3
P_LN(E3)
LIS_VOLT(current)   ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Define element as             K2
Typ_LIS_OPTIONB
LIS_8-Noded Brick   ,0
LIS_20-Noded Brick  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Electric charge reaction sign K6
Typ_LIS_OPTIONB
LIS_Positive ,0
LIS_Negative ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
:E End
:! 
:N Fnc_KEYOPT_115
:S    217,   122,    70
:T Command
:C )! Fnc_KEYOPT_115
:A Element 115
:D INTER115 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'INTER115'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_115
:! 
:N Fnc_KEYOPT_116
:S    620,   175,   438
:T Command
:C )! Fnc_KEYOPT_116
:C )/NOPR
:C )KEYW,KE1160,0
:C )/GO
:A Element 116
:H Hlp_E_S4.116
:D  FLUID116 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID116, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_PRES/TEMP degrees of freedom  K1
Typ_LIS_OPTIONB
K_LN(pr_sgui)
P_LN(profs)
LIS_PRES+TEMP DOF   ,0
LIS_Temperature DOF ,1
K_LN(pr_sgui)
P_LN(profs)
LIS_Pressure DOF    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
  Cal_Fnc_KEY116_0,4,eq,0
  Cal_Fnc_KEY116_1,4,eq,1
  Cal_Fnc_KEY116_2,4,eq,2
:E End
:! 
:N Fnc_KEYOPT_117
:S    217,   122,    70
:T Command
:C )! Fnc_KEYOPT_117
:A Element 117
:D SOLID117 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID117'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_117
:! 
:N Fnc_KEYOPT_118
:S    211,   119,    67
:T Command
:C )! Fnc_KEYOPT_118
:A Element 118
:D HF117 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'HF118'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_118
:! 
:N Fnc_KEYOPT_119
:S    211,   119,    67
:T Command
:C )! Fnc_KEYOPT_119
:A Element 119
:D HF117 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'HF119'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_119
:! 
:N Fnc_KEYOPT_12
:S   1500,   134,  1359
:T Command
:C )! Fnc_KEYOPT_12
:A Element 12
:H Hlp_E_S4.12
:D CONTAC12 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_                *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Options for CONTAC12, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Type Frict (only for MU > 0)  K1
Typ_LIS_OPTIONB
LIS_Elastic coulomb ,0
LIS_Rigid coulomb   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Orientation angle taken from  K2
Typ_LIS_OPTIONB
LIS_Real const THETA,0
LIS_Direct of motion,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Weak spring across open gap   K3
Typ_LIS_OPTIONB
LIS_Do not use sprng,0
LIS_Use weak spring ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Interference or Gap based on  K4
Typ_LIS_OPTIONB
LIS_Real const  INTF,0
LIS_Init node locats,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Contact time predict goal     K7
Typ_LIS_OPTIONB
LIS_Min time incrmnt,0
LIS_Reasonable incre,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!  
! Cmd_KEYOPT
! Fld_2
! Typ_Def_*PAR(_ET_TYPE)
! Fld_3
! Typ_Def_11
! Fld_4
! Prm_Type of stiffness matrix     K11
! Typ_LIS_OPTIONB
! LIS_Symmetrical     ,0
! LIS_Unsymmetrical   ,1
! Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!  
:E END
:! 
:N Fnc_KEYOPT_120
:S    211,   119,    67
:T Command
:C )! Fnc_KEYOPT_120
:A Element 120
:D HF120 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'HF120'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_120
:! 
:N Fnc_KEYOPT_121
:S   1259,   138,  1114
:T Command
:C )! Fnc_KEYOPT_121
:A Element 121
:H Hlp_E_S4.121
:D PLANE121 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE121, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane           ,0
LIS_Axisymmetric    ,1
LIS_Plane Thickness ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element coord system defined  K4
Typ_LIS_OPTIONB
LIS_Parall to global,0
LIS_By elem I-J side,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Electric charge reaction sign K6
Typ_LIS_OPTIONB
LIS_Positive ,0
LIS_Negative ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Store forces for coupling w/  K7
Typ_LIS_OPTIONB
LIS_Midside node ele,0
LIS_Non-midside elem,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
:E End
:! 
:N Fnc_KEYOPT_122
:S   1042,   138,   897
:T Command
:C )! Fnc_KEYOPT_122
:A Element 122
:H Hlp_E_S4.122
:D SOLID122 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID122, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element coord system defined  K4
Typ_LIS_OPTIONB
LIS_Parall to global,0
LIS_By elem I-J side,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Electric charge reaction sign K6
Typ_LIS_OPTIONB
LIS_Positive ,0
LIS_Negative ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Store forces for coupling w/  K7
Typ_LIS_OPTIONB
LIS_Midside node ele,0
LIS_Non-midside elem,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!  
:E End
:! 
:N Fnc_KEYOPT_123
:S   1043,   139,   897
:T Command
:C )! Fnc_KEYOPT_123
:A Element 123
:H Hlp_E_S4.123
:D  SOLID123 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID123, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element coord system defined  K4
Typ_LIS_OPTIONB
LIS_Parall to global,0
LIS_By elem I-J side,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Electric charge reaction sign K6
Typ_LIS_OPTIONB
LIS_Positive ,0
LIS_Negative ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Store forces for coupling w/  K7
Typ_LIS_OPTIONB
LIS_Midside node ele,0
LIS_Non-midside elem,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!  
:E End
:! 
:N Fnc_KEYOPT_124
:S    903,   140,   756
:T Command
:C )! Fnc_KEYOPT_124
:A Element 124
:H Hlp_E_S4.124
:D  CIRCU124  element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CIRCU124, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_ET_TYPE)
 Fld_3
  Typ_Def_1
 Fld_4
 Prm_Circuit Component Type      K1
  Typ_Lis
   Lis_Resistor                 ,0
   Lis_Inductor                 ,1
   Lis_Capacitor                ,2
   Lis_Mutual Inductor          ,8
   Lis_Ind Curr Src             ,3
   Lis_Ind Vltg Src             ,4
   Lis_Vlt-cnt Cur Src          ,9
   Lis_Vlt-cnt Vlt Src          ,10
   Lis_Cur-cnt Vlt Src          ,11
   Lis_Cur-cnt Cur Src          ,12
   Lis_Stranded Coil            ,5
   Lis_Mass Cndctr 2-D          ,6
   Lis_Mass Cndctr 3-D          ,7
   Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
Cal_Fnc_KEYOPT_124a,4,eq,3
Cal_Fnc_KEYOPT_124a,4,eq,4
:E END
:! 
:N Fnc_KEYOPT_124a
:S    549,   142,   398
:T Command
:C )! Fnc_KEYOPT_124a
:A Element 124
:H Hlp_E_S4.124
:D  CIRCU124  element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CIRCU124, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_ET_TYPE)
 Fld_3
  Typ_Def_2
 Fld_4
 Prm_Body Loads                  K2
  Typ_Lis
  Lis_DC or AC Harmonic load,0
  Lis_Sinusoidal load       ,1
  Lis_Pulse load            ,2
  Lis_Exponential load      ,3
  Lis_Piecewise Linear load ,4
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
:E END  
:! 
:N Fnc_KEYOPT_125
:S    401,   139,   255
:T Command
:C )! Fnc_KEYOPT_125
:A Element 125
:H Hlp_E_S4.125
:D  CIRCU125 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CIRCU125, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT,%_ET_TYPE%,1
 Fld_2
 Prm_Select Diode Options        K1
  Typ_Lis
  Lis_Diode            ,0
  Lis_Zener Diode      ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
:E END
:! 
:N Fnc_KEYOPT_126
:S   1043,   134,   902
:T Command
:C )! Fnc_KEYOPT_126
:A Element 126
:H Hlp_E_S4.126
:D  EMT element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Electrostatic-Mechanical Transducer 
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
 Prm_Select DOF set             K2
  Typ_Lis
  Lis_UX VOLT          ,0
  Lis_UY VOLT          ,2
  Lis_UZ VOLT          ,3
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
  Prm_Capacitance-Gap option     K3
  Typ_LIS_OPTIONB
  LIS_Function - curve,0
  LIS_Data points     ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
  Prm_DC Voltage Drop option     K4
  Typ_LIS_OPTIONB
  LIS_Unknown         ,0
  LIS_Constrained     ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
  Prm_Stiffness method           K6
  Typ_LIS_OPTIONB
  LIS_Full Stiffness  ,0
  LIS_Augmented Stiff ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
:E END
:! 
:N Fnc_KEYOPT_126future
:S    410,   146,   257
:T Command
:C )! Fnc_KEYOPT_126
:A Element 126
:H Hlp_E_S4.126
:D  TRANS126  element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for TRANS126, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT,%_ET_TYPE%,1
 Fld_2
 Prm_KEYOPT1 for TRANS126        K1
  Typ_Lis
   Lis_EMT             ,0
   Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
Cal_Fnc_KEYOPT_126a,2,eq,0
:E END
:! 
:N Fnc_KEYOPT_127
:S    178,   101,    70
:T Command
:A Element 127
:D SOLID127 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID127'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E END
:! 
:N Fnc_KEYOPT_128
:S    178,   101,    70
:T Command
:A Element 128
:D SOLID128 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID128'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E END
:! 
:N Fnc_KEYOPT_129
:S    456,   138,   293
:T Command
:C )! Fnc_KEYOPT_129
:A Element 129
:H Hlp_E_S4.129
:D FLUID129 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID129, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Planar           ,0
LIS_Axisymmetric     ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
:E End_OF_Fnc_KEYOPT_129
:! 
:N Fnc_KEYOPT_13
:S   1523,   134,  1382
:T Command
:C )! Fnc_KEYOPT_13
:A Element 13
:H Hlp_E_S4.13
:D  PLANE13 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE13, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element degrees of freedom    K1
Typ_LIS_OPTIONB
P_LN(ELECMAG)
LIS_AZ              ,0
P_LN(FULL_ANS+elecmag)
LIS_UX  UY  TEMP    ,4
P_LN(FULL_ANS)
LIS_TEMP            ,2
P_LN(FULL_ANS)
LIS_UX  UY          ,3
P_LN(FULL_ANS+ELECMAG)
LIS_UX  UY  TEMP  AZ,4
P_LN(ELECMAG)
LIS_VOLT  AZ        ,6
P_LN(FULL_ANS)
LIS_UX  UY  VOLT    ,7
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Extra shapes                  K2
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1 
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane strain    ,0
LIS_Axisymmetric    ,1
P_LN(FULL_ANS)
LIS_Plane stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element coord system defined  K4
Typ_LIS_OPTIONB
LIS_Parall to global,0
LIS_By elem I-J side,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Element nodal   ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!  
:E END
:! 
:N Fnc_KEYOPT_130
:S    287,   138,   142
:T Command
:C )! Fnc_KEYOPT_130
:A Element 130
:H Hlp_E_S4.130
:D FLUID130 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The FLUID130 element type does not have any options.
!
:E END
:! 
:N Fnc_KEYOPT_131
:S   1211,   138,  1066
:T Command
:C )! Fnc_KEYOPT_131
:A Element 131
:H Hlp_E_S4.131
:D SHELL131 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SHELL131, Element Type Ref. No. %(I)_ET_TYPE%
! 
Cmd_KEYOPT
K_CM(BETA)
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Specific heat/convec surf matrix
Typ_LIS_OPTIONB
LIS_Use consistent  ,1
LIS_Diagonalize     ,0
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Evaluate film coefficient at 
Typ_LIS_OPTIONB
LIS_Average film temp,0
LIS_Element surf temp,1
LIS_Fluid bulk temp  ,2
LIS_Differental temp ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Temp variation through layer
Typ_LIS_OPTIONB
LIS_Quadratic       ,0
LIS_Linear          ,1
LIS_No variation    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Number of layers
Typ_INT
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Application 
Typ_LIS_OPTIONB
LIS_Thermal Shell    ,0
LIS_Paint (TBOT->TEMP),1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_132
:S   1213,   138,  1068
:T Command
:C )! Fnc_KEYOPT_132
:A Element 132
:H Hlp_E_S4.132
:D SHELL132 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SHELL132, Element Type Ref. No. %(I)_ET_TYPE%
!   
Cmd_KEYOPT
K_CM(BETA)
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Specific heat/convec surf matrix
Typ_LIS_OPTIONB
LIS_Use consistent  ,0
LIS_Diagonalize     ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Evaluate film coefficient at 
Typ_LIS_OPTIONB
LIS_Average film temp,0
LIS_Element surf temp,1
LIS_Fluid bulk temp  ,2
LIS_Differental temp ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Temp variation through layer
Typ_LIS_OPTIONB
LIS_Quadratic       ,0
LIS_Linear          ,1
LIS_No variation    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Number of layers
Typ_INT
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Application 
Typ_LIS_OPTIONB
LIS_Thermal Shell    ,0
LIS_Paint (TBOT->TEMP),1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_136
:S    644,   138,   499
:T Command
:C )! Fnc_KEYOPT_136
:A Element 136
:H Hlp_E_S4.136
:D FLUID136 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID136, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Fluid flow approximation
Typ_LIS_OPTIONB
LIS_Continuum theory,0
LIS_High Knudsen numbers (Kn),1
LIS_High Kn with accommodation,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Define element as
Typ_LIS_OPTIONB
LIS_4-noded element,0
LIS_8-noded element,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
:E END
:! 
:N Fnc_KEYOPT_138
:S    604,   138,   459
:T Command
:C )! Fnc_KEYOPT_138
:A Element 138
:H Hlp_E_S4.138
:D FLUID138 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID138, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Fluid flow approximation
Typ_LIS_OPTIONB
LIS_Continuum theory,0
LIS_High Knudsen numbers (Kn),1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Cross section shape
Typ_LIS_OPTIONB
LIS_Circular ,0
LIS_Rectangular ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
:E END
:! 
:N Fnc_KEYOPT_139
:S    842,   138,   697
:T Command
:C )! Fnc_KEYOPT_139
:A Element 139
:H Hlp_E_S4.139
:D FLUID139 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID139, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_DOF selection
Typ_LIS_OPTIONB
LIS_UX  (X-direction),1
LIS_UY  (Y-direction),2
LIS_UZ  (Z-direction),3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Flow model
Typ_LIS_OPTIONB
LIS_Couette flow (2 node),0
LIS_Stokes flow (32 node),1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Fluid flow approximation
Typ_LIS_OPTIONB
LIS_Continuum theory,0
LIS_First order slip flow,1
LIS_Extended slip flow ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
:E END
:! 
:N Fnc_KEYOPT_14
:S   1108,   134,   967
:T Command
:C )! Fnc_KEYOPT_14
:A Element 14
:H Hlp_E_S4.14
:D COMBIN14 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for COMBIN14, Element Type Ref. No. %(I)_ET_TYPE%
!                       
Cmd_KEYOPT
Fld_2
 Typ_Def_*PAR(_ET_TYPE)
Fld_3
 Typ_Def_1
Fld_4
 Prm_Solution type                 K1
 Typ_LIS_OPTIONB
 LIS_Linear Solution ,0
 LIS_Nonlinear       ,1
 Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_DOF select for 1D behavior    K2
Typ_LIS_OPTIONB
LIS_Use 2/3D DOF opt,0
LIS_Longitude UX DOF,1
LIS_Longitude UY DOF,2
LIS_Longitude UZ DOF,3
LIS_Torsional ROTX  ,4
LIS_Torsional ROTY  ,5
LIS_Torsional ROTZ  ,6
P_LN(FULL_ANS)
LIS_Pressure DOF    ,7
P_LN(FULL_ANS*THERMAL)
LIS_Temperature DOF ,8
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!                       
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_DOF selection for 2D + 3D     K3
Typ_LIS_OPTIONB
LIS_3-D longitudinal,0
LIS_3-D torsional   ,1
LIS_2-D longitudinal,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!           
:E END
:! 
:N Fnc_KEYOPT_141
:S    217,   122,    70
:T Command
:C )! Fnc_KEYOPT_141
:A Element 141
:D FLUID141 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'FLUID141'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_141
:! 
:N Fnc_KEYOPT_142
:S    217,   122,    70
:T Command
:C )! Fnc_KEYOPT_142
:A Element 142
:D FLUID142 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'FLUID142'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_142
:! 
:N Fnc_KEYOPT_143
:S    268,   122,   139
:T Command
:C )! Fnc_KEYOPT_143
:A Element 143
:D SHELL143 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The SHELL143 element type is no longer supported.
!
:E END
:! 
:N Fnc_KEYOPT_144
:S    611,   137,   467
:T Command
:C )! Fnc_KEYOPT_144
:A Element 144
:H Hlp_E_S4.144
:D  ROM144 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Electrostatic-Structural ROM Element
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
 Prm_Select DOF set             K1
  Typ_LIS_OPTIONB
  Lis_EMF VOLT         ,0
  Lis_EMF VOLT UX      ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
 Prm_Select matrix option       K2
  Typ_LIS_OPTIONB
  LIS_Unsymmetric ,0
  LIS_Symmetric   ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
:E END
:! 
:N Fnc_KEYOPT_145
:S    178,   101,    70
:T Command
:A Element 145
:D PLANE145 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE145'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E END
:! 
:N Fnc_KEYOPT_146
:S    178,   101,    70
:T Command
:A Element 146
:D PLANE146 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE146'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E END
:! 
:N Fnc_KEYOPT_147
:S    178,   101,    70
:T Command
:A Element 147
:D SOLID147 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID147'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E END
:! 
:N Fnc_KEYOPT_148
:S    178,   101,    70
:T Command
:A Element 148
:D SOLID148 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID148'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E END
:! 
:N Fnc_KEYOPT_15
:S    819,   118,   694
:T Command
:C )! Fnc_KEYOPT_15
:A Element 15
:D FLUID15 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_      Options for FLUID15, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane           ,0
LIS_Axisymmetric    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Penalty Function              K4
Typ_LIS_OPTIONB
LIS_Use penalty func,0
LIS_No penalty func ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Capacity/Specific ht matrix   K7
Typ_LIS_OPTIONB
LIS_Consistent matrx,0
LIS_Lumped matrix   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!  
:E END
:! 
:N Fnc_KEYOPT_150
:S    179,   102,    70
:T Command
:A Element 150 
:D SHELL150 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL150'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E END
:! 
:N Fnc_KEYOPT_151
:S   2548,   137,  2404
:T Command
:C )! Fnc_KEYOPT_151
:A Element 151
:H Hlp_E_S4.151
:D SURF151 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options fov SURF151, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Adiabatic wall temp. option   K1
Typ_LIS_OPTIONB
LIS_Rotat-absolute  ,0
LIS_Rotat-reference ,1
LIS_Stationary      ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Recovery factor option        K2
Typ_LIS_OPTIONB
LIS_Fr=NRF          ,0
LIS_Fr=Pr**NRF      ,1
LIS_Auto: Re based  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane           ,0
LIS_Axisymmetric    ,1
LIS_Plane with thick,3
LIS_Underlying solid,10
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Midside nodes                 K4
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra node for radiation -    K5
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include 1 node  ,1
LIS_Include 2 nodes ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
Fld_0
 Typ_Lab
 Prm_- and/or convection calculations
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Use of bulk temperature       K6
Typ_LIS_OPTIONB
LIS_Fluid node temp ,0
LIS_Adiab. wall temp,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_hf empirical term |TS-TB|**n  K7
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Heat flux and convect loads   K8
Typ_LIS_OPTIONB
LIS_Ignore both     ,0
LIS_Heat flux only  ,1
LIS_Hf at average T ,2
LIS_Hf at surface TS,3
LIS_Hf at bulk TB   ,4
LIS_Hf at (TS - TB) ,5
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Radiation form fact calc as   K9
Typ_LIS_OPTIONB
LIS_Exclude radiatn ,0
LIS_Real const FORMF,1
LIS_Absolute value  ,2
LIS_Zero if negative,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_13
Fld_4
Prm_Film coefficient matrix      K13
Typ_LIS_OPTIONB
LIS_Program chosen  ,0
LIS_Diagonalize     ,1
LIS_Use consistent  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO13)
!
:E END
:! 
:N Fnc_KEYOPT_152
:S   2742,   137,  2598
:T Command
:C )! Fnc_KEYOPT_152
:A Element 152
:H Hlp_E_S4.152
:D SURF152 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SURF152, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Adiabatic wall temp. option   K1
Typ_LIS_OPTIONB
LIS_Rotat-absolute  ,0
LIS_Rotat-reference ,1
LIS_Stationary      ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Recovery factor option        K2
Typ_LIS_OPTIONB
LIS_Fr=NRF          ,0
LIS_Fr=Pr**NRF      ,1
LIS_Auto: Re based  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Axis of symmetry              K3
Typ_LIS_OPTIONB
LIS_Global Cartesn X,0
LIS_Global Cartesn Y,1
LIS_Global Cartesn Z,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Midside nodes                 K4
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra node for radiation      K5
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include 1 node  ,1
LIS_Include 2 nodes ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
Fld_0
 Typ_Lab
 Prm_- and/or convection calculations
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Use of bulk temperature       K6
Typ_LIS_OPTIONB
LIS_Fluid node temp ,0
LIS_Adiab. wall temp,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_hf empirical term |TS-TB|**n  K7
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Heat flux and convect loads   K8
Typ_LIS_OPTIONB
LIS_Ignore both     ,0
LIS_Heat flux only  ,1
LIS_Hf at average T ,2
LIS_Hf at surface TS,3
LIS_Hf at bulk TB   ,4
LIS_Hf at (TS - TB) ,5
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Radiation form factor calc as K9
Typ_LIS_OPTIONB
LIS_Exclude radiatn ,0
LIS_Real const FORMF,1
LIS_Absolute value  ,2
LIS_Zero if negative,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Nodal DOF label              K11
Typ_LIS_OPTIONB
LIS_TEMP            ,0
LIS_TTOP            ,1
LIS_TBOT            ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_13
Fld_4
Prm_Film coefficient matrix      K13
Typ_LIS_OPTIONB
LIS_Program chosen  ,0
LIS_Diagonalize     ,1
LIS_Use consistent  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO13)
!
:E END
:! 
:N Fnc_KEYOPT_153
:S   1886,   137,  1742
:T Command
:C )! Fnc_KEYOPT_153
:A Element 153
:H Hlp_E_S4.153
:D SURF153 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options fov SURF153, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Pressure coordinate system    K2
Typ_LIS_OPTIONB
LIS_Element CS      ,0
LIS_Local CS        ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane stress    ,0
LIS_Axisymmetric    ,1
LIS_Plane strain    ,2
LIS_Plane strs w/thk,3
LIS_Genrl plane strn,5
LIS_Underlying solid,10
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Midside nodes                 K4
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
P_FL(FULL_ANS)
Prm_Use of normal -Y press loads  K6
Typ_LIS_OPTIONB
LIS_Pos and neg pres,0
LIS_Pos pres only   ,1
LIS_Neg pres only   ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Large deflection loaded area  K7
Typ_LIS_OPTIONB
LIS_Use new area    ,0
LIS_Original area   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!  
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_ET_TYPE)
 Fld_3
  Typ_Def_11
 Fld_4
  Prm_Pres. vector orientation on  K11
  Typ_Lis_OptionB
   Lis_Prj Area w/Tan  ,0
   Lis_Prj Area w/o Tan,1
   Lis_Full Area w/Tan ,2
  Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_ET_TYPE)
 Fld_3
  Typ_Def_12
 Fld_0
  Typ_Lab
  Prm_If vector oriented pressure is aligned with
 Fld_4
  Prm_the element normal then      K12
  Typ_Lis_OptionB
   Lis_pres. applied   ,0
   Lis_pres. suppressed,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
:E END
:! 
:N Fnc_KEYOPT_154
:S   1778,   137,  1634
:T Command
:C )! Fnc_KEYOPT_154
:A Element 154
:H Hlp_E_S4.154
:D SURF154 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SURF154, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Pressure coordinate system    K2
Typ_LIS_OPTIONB
LIS_Element CS      ,0
LIS_Local CS        ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Midside nodes                 K4
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Use of normal -Z press loads  K6
Typ_LIS_OPTIONB
LIS_Pos and neg pres,0
LIS_Pos pres only   ,1
LIS_Neg pres only   ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Large deflection loaded area  K7
Typ_LIS_OPTIONB
LIS_Use new area    ,0
LIS_Original area   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Ocean loading                 K8
Typ_LIS_OPTIONB
LIS_Ignore          ,0
LIS_Apply           ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!  
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_ET_TYPE)
 Fld_3
  Typ_Def_11
 Fld_4
  Prm_Pres. vector orientation on  K11
  Typ_Lis_OptionB
   Lis_Prj Area w/Tan  ,0
   Lis_Prj Area w/o Tan,1
   Lis_Full Area w/Tan ,2
  Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_ET_TYPE)
 Fld_3
  Typ_Def_12
 Fld_0
  Typ_Lab
  Prm_If vector oriented pressure is aligned with
 Fld_4
  Prm_the element normal then      K12
  Typ_Lis_OptionB
   Lis_pres. applied   ,0
   Lis_pres. suppressed,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
:E END
:! 
:N Fnc_KEYOPT_156
:S   1054,   137,   910
:T Command
:C )! Fnc_KEYOPT_156
:A Element 156
:H Hlp_E_S4.156
:D SURF156 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SURF156, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Pressure coordinate system    K2
Typ_LIS_OPTIONB
LIS_Element CS      ,0
LIS_Local CS        ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Midside nodes                 K4
Typ_LIS_OPTIONB
LIS_Extra and mid   ,0
LIS_Extra node only ,1
LIS_Optional midside,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Orientation node              K5
Typ_LIS_OPTIONB
LIS_Yes             ,0
LIS_No              ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Large deflection loaded area  K7
Typ_LIS_OPTIONB
LIS_Use new area    ,0
LIS_Original area   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!  
:E End
:! 
:N Fnc_KEYOPT_157
:S    480,   138,   335
:T Command
:C )! Fnc_KEYOPT_157
:A Element 157
:H Hlp_E_S4.157
:D SHELL157 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SHELL157, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Evaluation of film coef at    K2
Typ_LIS_OPTIONB
LIS_Avg film temp   ,0
LIS_Ele surface temp,1
LIS_Fluid bulk temp ,2
LIS_Differntial temp,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
:E END
:! 
:N Fnc_KEYOPT_158
:S    269,   123,   139
:T Command
:C )! Fnc_KEYOPT_158
:A Element 158
:D  HYPER158 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The HYPER158 element type is no longer supported.
!
:E End
:! 
:N Fnc_KEYOPT_159
:S   2002,   137,  1858
:T Command
:C )! Fnc_KEYOPT_159
:A Element 159
:H Hlp_E_S4.159
:D SURF159 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SURF159, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Number of node planes         K2
Typ_LIS_OPTIONB
LIS_ 0 - Not specified  ,0
LIS_ 1 - Axisymmetric   ,1
LIS_ 3 - General 3-D Def,3
LIS_ 4 - General 3-D Def,4
LIS_ 5 - General 3-D Def,5
LIS_ 6 - General 3-D Def,6
LIS_ 7 - General 3-D Def,7
LIS_ 8 - General 3-D Def,8
LIS_ 9 - General 3-D Def,9
LIS_10 - General 3-D Def,10
LIS_11 - General 3-D Def,11
LIS_12 - General 3-D Def,12
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!                       
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Apply face loads              K3
Typ_LIS_OPTIONB
LIS_Element coord system,0
LIS_Local coord system  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Midside nodes                 K4
Typ_LIS_OPTIONB
LIS_Extra and mid   ,0
LIS_Extra node only ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Normal direction pressure     K6
Typ_LIS_OPTIONB
LIS_As calculated   ,0
LIS_Positive only   ,1
LIS_Negative only   ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Large deflection loaded area  K7
Typ_LIS_OPTIONB
LIS_Use new area    ,0
LIS_Original area   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Pressure applied by vector   K11
Typ_LIS_OPTIONB
LIS_Proj area + tangent ,0
LIS_Proj area no tangent,1
LIS_Full area + tangent ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
Fld_4
Prm_Normal equals pressure vect  K12
Typ_LIS_OPTIONB
LIS_Apply pressure    ,0
LIS_Do not apply press,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
!  
:E End
:! 
:N Fnc_KEYOPT_16
:S   1603,   132,  1464
:T Command
:C )! Fnc_KEYOPT_16
:A Element 16
:H Hlp_E_S4.16
:D PIPE16 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_    Options for PIPE16, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Temperatures represent        K1
Typ_LIS_OPTIONB
LIS_Thru-wall gradnt,0
LIS_Diametral gradnt,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Stress int factors (SIF) from K2
Typ_LIS_OPTIONB
LIS_Real con SIF I&J,0
LIS_Tee calc node I ,1
LIS_Tee calc node J ,2
LIS_Tee calc at I&J ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element id in output          K4
Typ_LIS_OPTIONB
LIS_Straight pipe   ,0
LIS_Valve           ,1
LIS_Reducer         ,2
LIS_Flange          ,3
LIS_Expansion joint ,4
LIS_Mitered Bend    ,5
LIS_Tee branch      ,6
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Use of PX, PY, PZ pressures   K5
Typ_LIS_OPTIONB
LIS_Use normal comp ,0
LIS_Use full press  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Member force + moment output  K6
Typ_LIS_OPTIONB
LIS_Exclude output  ,0
LIS_Include output  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
P_FL(FULL_ANS)
Prm_Gyroscopic damping matrix     K7
Typ_LIS_OPTIONB
LIS_No matrix       ,0
LIS_Calculate matrix,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!  
:E END
:! 
:N Fnc_KEYOPT_160
:S    283,   137,   139
:T Command
:C )! Fnc_KEYOPT_160
:A Element 160
:H Hlp_E_S4.160
:D LINK160 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The LINK160 element type does not have any options.
:E End
:! 
:N Fnc_KEYOPT_161
:S   1226,   137,  1082
:T Command
:C )! Fnc_KEYOPT_161
:A Element 161
:H Hlp_E_S4.161
:D BEAM161 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_    Options for BEAM161, Element Type Ref. No. %(I)_ET_TYPE%
!
Fld_0
Typ_Sep
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element Formulation Options
Typ_LIS_RadioB
LIS_Hughes-Liu                 ,1
LIS_B-S resultant              ,2
LIS_B-S full integn.           ,4
LIS_B-S tubular                ,5
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Fld_0
Typ_Sep
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Quadrature rule to be used
Typ_LIS_RadioB
LIS_1 intg. point             ,1
LIS_2x2 Gauss (def)           ,2
LIS_3x3 Gauss                 ,3
LIS_3x3 Lobatto               ,4
LIS_4x4 Gauss                 ,5
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
Fld_0
Typ_Sep
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Int.rule-arbitry.section(1-9999)
Typ_Int
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Fld_0
Typ_Sep
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Cross section type
Typ_LIS_RadioB
LIS_Rectangular  ,0
LIS_Tubular      ,1
LIS_Arbitrary    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
:E End
:! 
:N Fnc_KEYOPT_162
:S    752,   151,   594
:T Command
:C )! Fnc_KEYOPT_162
:A Element 162
:K (LSDYNA)
:H Hlp_E_S4.162
:D  PLANE162 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for 2D Solid Element Type Ref. No. %(I)_ET_TYPE%
Fld_0
Typ_Sep
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Stress/strain options
Typ_LIS_OptionB
LIS_Plane stress      ,0
LIS_Axisymmetric      ,1
LIS_Plane strain z=0  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Fld_0
Typ_Sep
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Material Continuum
Typ_LIS_RadioB
LIS_Lagrangian      ,0
LIS_ALE             ,1
K_LN(BETA)
LIS_Eulerian        ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
FLd_0
Typ_Sep
!
Cal_Fnc_KEYOPT_162A,4,EQ,1,1
:E End
:! 
:N Fnc_KEYOPT_162A
:S    473,   149,   317
:T Command
:C )! Fnc_KEYOPT_162A
:A Element 162
:K (LSDYNA)
:H Hlp_E_S4.162
:D  PLANE162 weighting option
Inp_NoApply
Fld_0
Typ_Lab
Prm_Weighting Options for 2D Solid Element Type Ref. No. %(I)_ET_TYPE%
Fld_0
Typ_Sep
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Weighting options
Typ_LIS_RadioB
LIS_Area weighted       ,0
LIS_Volume weighted     ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
Fld_0
Typ_Sep
!
:E END
:! 
:N Fnc_KEYOPT_163
:S   1279,   139,  1133
:T Command
:C )! Fnc_KEYOPT_163
:A Element 163
:H Hlp_E_S4.163
:D  SHELL163 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for Thin Shell163, Element Type Ref. No. %(I)_ET_TYPE%
Fld_0
Typ_Sep
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element Formulation
Typ_LIS_OptionB
LIS_Hughes-Liu      ,1
LIS_Belytschko(def) ,2
LIS_BCIZ Triangular ,3
LIS_C0 Triangular   ,4
LIS_Belytchko Membrn,5
LIS_S/R Hughes-Liu  ,6
LIS_S/R co-rotation ,7
LIS_Belytchko-Levt'n,8 
LIS_Full Intgr Membr,9
LIS_Belytschko-Wong ,10
LIS_Fast Hughes-Liu ,11
LIS_Full Intgr Shell,12
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Quadrature Rule
Typ_LIS_RadioB
LIS_Gauss(1-5 Pts.),0
LIS_Trapezoidal       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
Fld_0
Typ_Sep
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
K_FL(ed)
Prm_Layered Composite Mode
Typ_LIS_RadioB
LIS_Non-Composite     ,0
LIS_Composite         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Fld_4
K_FL(ED)
Typ_Def_0
!
Fld_0
K_FL(ed)
Typ_Sep
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Integration rule ID [1-9999]
Typ_Int
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
Fld_0
Typ_Sep
!  
:E End
:! 
:N Fnc_KEYOPT_164
:S    662,   124,   531
:T Command
:C )! Fnc_KEYOPT_164
:H Hlp_E_S4.164
:D  SOLID164 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID164, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Solid Element Formulation
Typ_LIS_RadioB
LIS_Const.Strss(def)       ,1
LIS_Full Int S/R           ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Fld_0
Typ_Sep
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Material Continuum
Typ_LIS_RadioB
LIS_Lagrangian      ,0
LIS_1 Point ALE     ,1
K_LN(BETA)
LIS_1 Point Eulerian,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
:E End
:! 
:N Fnc_KEYOPT_165
:S    425,   139,   279
:T Command
:C )! Fnc_KEYOPT_165
:A Element 165
:H Hlp_E_S4.165
:D  COMBI165 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for COMBI165, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Type of spring/damper
Typ_LIS_RadioB
LIS_Translational   ,0
LIS_Torsional       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
:E End
:! 
:N Fnc_KEYOPT_166
:S    430,   137,   286
:T Command
:C )! Fnc_KEYOPT_166
:A Element 166
:H Hlp_E_S4.166
:D MASS166 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for MASS166, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Rotary inertia options        K1
Typ_LIS_OPTIONB
LIS_No rotary inert ,0
LIS_Inertia w/o mass,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
:E End
:! 
:N Fnc_KEYOPT_167
:S    286,   139,   140
:T Command
:C )! Fnc_KEYOPT_167
:A Element 167
:H Hlp_E_S4.167
:D  CABLE167 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The CABLE167 element type does not have any options.
:E END
:! 
:N Fnc_KEYOPT_168
:S    420,   139,   274
:T Command
:C )! Fnc_KEYOPT_168
:A Element 168
:H Hlp_E_S4.168
:D  SOLID168 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID168, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element Formulation
Typ_LIS_OPTIONB
LIS_Quadratic (def), 0
LIS_Composite      , 2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
:E END
:! 
:N Fnc_KEYOPT_169
:S   1421,   333,  1063
:T Command
:C )! Fnc_KEYOPT_169
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,8
:C )*get,_z(4),ETYP,_ET_TYPE,ATTR,KOP4
:C )_z(1)=nint(_z(4)/100)
:C )_z(4)=_z(4)-_z(1)*100
:C )_z(2)=nint(_z(4)/10)
:C )_z(3)=nint(_z(4)-_z(2)*10)
:C )/GO
:A Element 169
:D TARGE169 element type options
:H Hlp_E_S4.169
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for TARGE169, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_B.C. for rigid target nodes   K2
Typ_LIS_OPTIONB
LIS_Auto constraint ,0
LIS_User definition ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Thermal contact behavior      K3
Typ_LIS_OPTIONB
LIS_Based on status ,0
LIS_Free surface    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_)/NOPR
Cmd_)*SET,_z(5)
Fld_0
Typ_Lab
Prm_Elem degree(s) of freedom     K4
Fld_2
Prm_                                blank
Typ_LOGI,UX,UX
Def_*PAR(_z(3))
!  
Fld_3
Prm_                                blank
Typ_LOGI,UY,UY
Def_*PAR(_z(2))
!  
Fld_4
Prm_                                blank
Typ_LOGI,ROTZ,ROTZ
Def_*PAR(_z(1))
Cmd_)/GO
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Constrained surface symmetry  K6
Typ_LIS_OPTIONB
LIS_None            ,0
LIS_Pilot y axis    ,1
LIS_Pilot x axis    ,10
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cal_Fnc_KEYOPT_169A
:E End_OF_Fnc_KEYOPT_169
:! 
:N Fnc_KEYOPT_169A
:S    271,   149,    96
:T Command
:C )! Fnc_KEYOPT_169A
:A Element 169
:C )/NOPR
:C )*SET,_z(8),_z(5)+10*_z(6)+100*_z(7)
:C )/GO
Inp_P
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Typ_Def_*PAR(_z(8))
!  
:E End_OF_Fnc_KEYOPT_169A
:! 
:N Fnc_KEYOPT_17
:S    209,   117,    68
:T Command
:C )! Fnc_KEYOPT_17
:A Element 17
:D PIPE17 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PIPE17'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_17
:! 
:N Fnc_KEYOPT_170
:S   2452,   517,  1910
:T Command
:C )! Fnc_KEYOPT_170
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,16
:C )*get,_z(13),ETYP,_ET_TYPE,ATTR,KOP4
:C )_z(1)=nint(_z(13)/100000)
:C )_z(13)=_z(13)-_z(1)*100000
:C )_z(2)=nint(_z(13)/10000)
:C )_z(13)=_z(13)-_z(2)*10000
:C )_z(3)=nint(_z(13)/1000)
:C )_z(13)=_z(13)-_z(3)*1000
:C )_z(4)=nint(_z(13)/100)
:C )_z(13)=_z(13)-_z(4)*100
:C )_z(5)=nint(_z(13)/10)
:C )_z(6)=nint(_z(13)-_z(5)*10)
:C )/GO
:A Element 170
:D TARGE170 element type options
:H Hlp_E_S4.170
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for TARGE170, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element order                 K1
Typ_LIS_OPTIONB
LIS_Low order       ,0
LIS_High order      ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_B.C. for rigid target nodes   K2
Typ_LIS_OPTIONB
LIS_Auto constraint ,0
LIS_User definition ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Thermal contact behavior      K3
Typ_LIS_OPTIONB
LIS_Based on status ,0
LIS_Free surface    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_)/NOPR
Cmd_)*SET,_z(7)
Fld_0
Typ_Lab
Prm_Elem degree(s) of freedom     K4
Fld_2
Prm_                                blank
Typ_LOGI,UX,UX
Def_*PAR(_z(6))
!  
Fld_3
Prm_                                blank
Typ_LOGI,UY,UY
Def_*PAR(_z(5))
!  
Fld_4
Prm_                                blank
Typ_LOGI,UZ,UZ
Def_*PAR(_z(4))
!  
Fld_5
Prm_                                blank
Typ_LOGI,ROTX,ROTX
Def_*PAR(_z(3))
!
Fld_6
Prm_                                blank
Typ_LOGI,ROTY,ROTY
Def_*PAR(_z(2))
!
Fld_7
Prm_                                blank
Typ_LOGI,ROTZ,ROTZ
Def_*PAR(_z(1))
!
Cmd_)*SET,_z(16)
Fld_2
Prm_Type of Constraint            K5
Typ_LIS_OPTIONB
LIS_Auto constraint         ,0
LIS_SLD/SLD                 ,1
LIS_SHL/SHL                 ,2
LIS_SHL/SLD (cntc norm dir) ,3
LIS_SHL/SLD (all directions),4
LIS_SHL/SLD (anywhere)      ,5
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
Cmd_)/GO
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Constrained surface symmetry  K6
Typ_LIS_OPTIONB
LIS_None            ,0
LIS_Pilot xy plane  ,100
LIS_Pilot xz plane  ,10
LIS_Pilot yz plane  ,1
LIS_Pilot xy + xz   ,110
LIS_Pilot xy + yz   ,101
LIS_Pilot xz + yz   ,11
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cal_Fnc_KEYOPT_170A
:E End_OF_Fnc_KEYOPT_170
:! 
:N Fnc_KEYOPT_170A
:S    416,   212,   178
:T Command
:C )! Fnc_KEYOPT_170A
:A Element 170
:C )/NOPR
:C )*SET,_z(14),_z(7)+10*_z(8)+100*_z(9)+1000*_z(10)
:C )*SET,_z(15),_z(14)+10000*_z(11)+100000*_z(12)
:C )/GO
Inp_P
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Typ_Def_*PAR(_z(15))
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Typ_Def_*PAR(_z(16))
!
:E End_OF_Fnc_KEYOPT_170A
:! 
:N Fnc_KEYOPT_171
:S   3891,   138,  3746
:T Command
:C )! Fnc_KEYOPT_171
:A Element 171
:D CONTA171 element type options
:H Hlp_E_S4.171
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CONTA171, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Elem degree(s) of freedom     K1
Typ_LIS_OPTIONB
LIS_UX/UY           ,0
LIS_UX/UY/TEMP      ,1
LIS_TEMP            ,2
LIS_UX/UY/TEMP/VOLT ,3
LIS_TEMP/VOLT       ,4
LIS_UX/UY/VOLT      ,5
LIS_VOLT            ,6
LIS_AZ              ,7
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Contact algorithm             K2
Typ_LIS_OPTIONB
LIS_Augmented method   ,0
LIS_Penalty method     ,1
LIS_MPC algorithm      ,2
LIS_Lagrange & penalty ,3
LIS_Lagrange method    ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Attached Superelement         K3
Typ_LIS_OPTIONB
LIS_None            ,0
LIS_Axisymmetric    ,1
LIS_Plane strn/strs ,2
LIS_Plane strs w/thk,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Cnt Detection or CERIGID/RBE3 K4
Typ_LIS_OPTIONB
LIS_At Gauss point/-               ,0
LIS_Node: Normal from contact/RBE3 ,1
LIS_Node: Normal to target/CERIGID ,2
LIS_Node: Surface projection/CP    ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Auto CNOF/ICONT adjustment    K5
Typ_LIS_OPTIONB
LIS_No Auto. Adjust.,0
LIS_Close gap       ,1
LIS_Reduce Penetrat.,2
LIS_Gap/Penetration ,3
LIS_Default ICONT   ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Auto Contact stiffness change K6
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Aggressive      ,1
LIS_Very Aggressive ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Contact time/load prediction  K7
Typ_LIS_OPTIONB
LIS_No predictions  ,0
LIS_Auto cut-back   ,1
LIS_Reasonbl T/L inc,2
LIS_Minimum T/L incr,3
LIS_Impact contraint,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Asymmetric contact selection  K8
Typ_LIS_OPTIONB
LIS_No              ,0
LIS_Yes             ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Initial penetration/gap       K9
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
LIS_Include - ramp  ,2
LIS_Offset only     ,3
LIS_Offset - ramp   ,4
LIS_Always offset only  ,5
LIS_Always offset - ramp,6
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_10
Fld_4
Prm_Contacting stiffness update  K10
Typ_LIS_OPTIONB
LIS_Each load step (PAIR ID based) ,0
LIS_Each iteration (PAIR ID based) ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO10)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Beam/shell thickness effect  K11
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
Fld_4
Prm_Behavior of contact surface  K12
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Rough           ,1
LIS_No separation   ,2
LIS_Bonded          ,3
LIS_No Sep. (always),4
LIS_Bonded (always) ,5
LIS_Bonded (initial),6
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_14
Fld_4
Prm_Fluid penetration load       K14
Typ_LIS_OPTIONB
LIS_Iteration based ,0
LIS_Substep based   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO14)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_15
Fld_4
Prm_Effect of stabiliz. damping  K15
Typ_LIS_OPTIONB
LIS_Active in 1st load step  ,0
LIS_Deactivate auto damping  ,1
LIS_Active for all load step ,2
LIS_Active all the time      ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KO15)
:E END
:! 
:N Fnc_KEYOPT_172
:S   3891,   138,  3746
:T Command
:C )! Fnc_KEYOPT_172
:A Element 172
:D CONTA172 element type options
:H Hlp_E_S4.172
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CONTA172, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Elem degree(s) of freedom     K1
Typ_LIS_OPTIONB
LIS_UX/UY           ,0
LIS_UX/UY/TEMP      ,1
LIS_TEMP            ,2
LIS_UX/UY/TEMP/VOLT ,3
LIS_TEMP/VOLT       ,4
LIS_UX/UY/VOLT      ,5
LIS_VOLT            ,6
LIS_AZ              ,7
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Contact algorithm             K2
Typ_LIS_OPTIONB
LIS_Augmented method   ,0
LIS_Penalty method     ,1
LIS_MPC algorithm      ,2
LIS_Lagrange & penalty ,3
LIS_Lagrange method    ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Attached Superelement         K3
Typ_LIS_OPTIONB
LIS_None            ,0
LIS_Axisymmetric    ,1
LIS_Plane strn/strs ,2
LIS_Plane strs w/thk,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Cnt Detection or CERIGID/RBE3 K4
Typ_LIS_OPTIONB
LIS_At Gauss point/-               ,0
LIS_Node: Normal from contact/RBE3 ,1
LIS_Node: Normal to target/CERIGID ,2
LIS_Node: Surface projection/CP    ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Auto CNOF/ICONT adjustment    K5
Typ_LIS_OPTIONB
LIS_No Auto. Adjust.,0
LIS_Close gap       ,1
LIS_Reduce Penetrat.,2
LIS_Gap/Penetration ,3
LIS_Default ICONT   ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Auto Contact stiffness change K6
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Aggressive      ,1
LIS_Very Aggressive ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Contact time/load prediction  K7
Typ_LIS_OPTIONB
LIS_No predictions  ,0
LIS_Auto cut-back   ,1
LIS_Reasonbl T/L inc,2
LIS_Minimum T/L incr,3
LIS_Impact contraint,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Asymmetric contact selection  K8
Typ_LIS_OPTIONB
LIS_No              ,0
LIS_Yes             ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Initial penetration/gap       K9
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
LIS_Include - ramp  ,2
LIS_Offset only     ,3
LIS_Offset - ramp   ,4
LIS_Always offset only  ,5
LIS_Always offset - ramp,6
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_10
Fld_4
Prm_Contacting stiffness update  K10
Typ_LIS_OPTIONB
LIS_Each load step (PAIR ID based) ,0
LIS_Each iteration (PAIR ID based) ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO10)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Beam/shell thickness effect  K11
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
Fld_4
Prm_Behavior of contact surface  K12
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Rough           ,1
LIS_No separation   ,2
LIS_Bonded          ,3
LIS_No Sep. (always),4
LIS_Bonded (always) ,5
LIS_Bonded (initial),6
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_14
Fld_4
Prm_Fluid penetration load       K14
Typ_LIS_OPTIONB
LIS_Iteration based ,0
LIS_Substep based   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO14)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_15
Fld_4
Prm_Effect of stabiliz. damping  K15
Typ_LIS_OPTIONB
LIS_Active in 1st load step  ,0
LIS_Deactivate auto damping  ,1
LIS_Active for all load step ,2
LIS_Active all the time      ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KO15)
:E END
:! 
:N Fnc_KEYOPT_173
:S   3908,   138,  3763
:T Command
:C )! Fnc_KEYOPT_173
:A Element 173
:D CONTA173 element type options
:H Hlp_E_S4.173
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CONTA173, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Elem degree(s) of freedom     K1
Typ_LIS_OPTIONB
LIS_UX/UY/UZ           ,0
LIS_UX/UY/UZ/TEMP      ,1
LIS_TEMP               ,2
LIS_UX/UY/UZ/TEMP/VOLT ,3
LIS_TEMP/VOLT          ,4
LIS_UX/UY/UZ/VOLT      ,5
LIS_VOLT               ,6
LIS_MAG                ,7
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Contact algorithm             K2
Typ_LIS_OPTIONB
LIS_Augmented method   ,0
LIS_Penalty method     ,1
LIS_MPC algorithm      ,2
LIS_Lagrange & penalty ,3
LIS_Lagrange method    ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Cnt Detection or CERIGID/RBE3 K4
Typ_LIS_OPTIONB
LIS_At Gauss point/-               ,0
LIS_Node: Normal from contact/RBE3 ,1
LIS_Node: Normal to target/CERIGID ,2
LIS_Node: Surface projection/CP    ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Auto CNOF/ICONT adjustment    K5
Typ_LIS_OPTIONB
LIS_No Auto. Adjust.,0
LIS_Close gap       ,1
LIS_Reduce Penetrat.,2
LIS_Gap/Penetration ,3
LIS_Default ICONT   ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Auto Contact stiffness change K6
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Aggressive      ,1
LIS_Very Aggressive ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Contact time/load prediction  K7
Typ_LIS_OPTIONB
LIS_No predictions  ,0
LIS_Auto cut-back   ,1
LIS_Reasonbl T/L inc,2
LIS_Minimum T/L incr,3
LIS_Impact contraint,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Asymmetric contact selection  K8
Typ_LIS_OPTIONB
LIS_No              ,0
LIS_Yes             ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Initial penetration/gap       K9
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
LIS_Include - ramp  ,2
LIS_Offset only     ,3
LIS_Offset - ramp   ,4
LIS_Always offset only  ,5
LIS_Always offset - ramp,6
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_10
Fld_4
Prm_Contacting stiffness update  K10
Typ_LIS_OPTIONB
LIS_Each load step (PAIR ID based) ,0
LIS_Each iteration (PAIR ID based) ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO10)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Shell thickness effect       K11
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
Fld_4
Prm_Behavior of contact surface  K12
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Rough           ,1
LIS_No separation   ,2
LIS_Bonded          ,3
LIS_No Sep. (always),4
LIS_Bonded (always) ,5
LIS_Bonded (initial),6
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_14
Fld_4
Prm_Fluid penetration load       K14
Typ_LIS_OPTIONB
LIS_Iteration based ,0
LIS_Substep based   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO14)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_15
Fld_4
Prm_Effect of stabiliz. damping  K15
Typ_LIS_OPTIONB
LIS_Active in 1st load step  ,0
LIS_Deactivate auto damping  ,1
LIS_Active for all load step ,2
LIS_Active all the time      ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KO15)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_16
Fld_4
Prm_Input of squeal dampings     K16
Typ_LIS_OPTIONB
LIS_Damping factor       ,0
LIS_MU-Slip velocity     ,1
LIS_Damping coefficient  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO16)
:E END
:! 
:N Fnc_KEYOPT_174
:S   3911,   138,  3766
:T Command
:C )! Fnc_KEYOPT_174
:A Element 174
:D CONTA174 element type options
:H Hlp_E_S4.174
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CONTA174, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Elem degree(s) of freedom     K1
Typ_LIS_OPTIONB
LIS_UX/UY/UZ           ,0
LIS_UX/UY/UZ/TEMP      ,1
LIS_TEMP               ,2
LIS_UX/UY/UZ/TEMP/VOLT ,3
LIS_TEMP/VOLT          ,4
LIS_UX/UY/UZ/VOLT      ,5
LIS_VOLT               ,6
LIS_MAG                ,7
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Contact algorithm             K2
Typ_LIS_OPTIONB
LIS_Augmented method   ,0
LIS_Penalty method     ,1
LIS_MPC algorithm      ,2
LIS_Lagrange & penalty ,3
LIS_Lagrange method    ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Cnt Detection or CERIGID/RBE3 K4
Typ_LIS_OPTIONB
LIS_At Gauss point/-               ,0
LIS_Node: Normal from contact/RBE3 ,1
LIS_Node: Normal to target/CERIGID ,2
LIS_Node: Surface projection/CP    ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Auto CNOF/ICONT adjustment    K5
Typ_LIS_OPTIONB
LIS_No Auto. Adjust.,0
LIS_Close gap       ,1
LIS_Reduce Penetrat.,2
LIS_Gap/Penetration ,3
LIS_Default ICONT   ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Auto Contact stiffness change K6
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Aggressive      ,1
LIS_Very Aggressive ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Contact time/load prediction  K7
Typ_LIS_OPTIONB
LIS_No predictions  ,0
LIS_Auto cut-back   ,1
LIS_Reasonbl T/L inc,2
LIS_Minimum T/L incr,3
LIS_Impact contraint,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Asymmetric contact selection  K8
Typ_LIS_OPTIONB
LIS_No              ,0
LIS_Yes             ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Initial penetration/gap       K9
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
LIS_Include - ramp  ,2
LIS_Offset only     ,3
LIS_Offset - ramp   ,4
LIS_Always offset only  ,5
LIS_Always offset - ramp,6
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_10
Fld_4
Prm_Contacting stiffness update  K10
Typ_LIS_OPTIONB
LIS_Each load step (PAIR ID based) ,0
LIS_Each iteration (PAIR ID based) ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO10)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Shell thickness effect       K11
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
!
Fld_4
Prm_Behavior of contact surface  K12
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Rough           ,1
LIS_No separation   ,2
LIS_Bonded          ,3
LIS_No Sep. (always),4
LIS_Bonded (always) ,5
LIS_Bonded (initial),6
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_14
Fld_4
Prm_Fluid penetration load       K14
Typ_LIS_OPTIONB
LIS_Iteration based ,0
LIS_Substep based   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO14)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_15
Fld_4
Prm_Effect of stabiliz. damping  K15
Typ_LIS_OPTIONB
LIS_Active in 1st load step  ,0
LIS_Deactivate auto damping  ,1
LIS_Active for all load step ,2
LIS_Active all the time      ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KO15)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_16
Fld_4
Prm_Input of squeal dampings     K16
Typ_LIS_OPTIONB
LIS_Damping factor       ,0
LIS_MU-Slip velocity     ,1
LIS_Damping coefficient  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO16)
:E END
:! 
:N Fnc_KEYOPT_175
:S   3941,   138,  3796
:T Command
:C )! Fnc_KEYOPT_175
:A Element 175
:D CONTA175 element type options
:H Hlp_E_S4.175
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CONTA175, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Elem degree(s) of freedom     K1
Typ_LIS_OPTIONB
LIS_UX/UY(/UZ)           ,0
LIS_UX/UY(/UZ)/TEMP      ,1
LIS_TEMP                 ,2
LIS_UX/UY(/UZ)/TEMP/VOLT ,3
LIS_TEMP/VOLT            ,4
LIS_UX/UY(/UZ)/VOLT      ,5
LIS_VOLT                 ,6
LIS_AZ (MAG)             ,7
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Contact algorithm             K2
Typ_LIS_OPTIONB
LIS_Augmented method   ,0
LIS_Penalty method     ,1
LIS_MPC algorithm      ,2
LIS_Lagrange & penalty ,3
LIS_Lagrange method    ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Contact model                 K3
Typ_LIS_OPTIONB
LIS_Contact force based ,0
LIS_Traction based      ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Cntc Normal or CERIGID/RBE3   K4
Typ_LIS_OPTIONB
LIS_Normal to target surface/CERIGID ,0
LIS_Normal from contact nodes/RBE3   ,1
LIS_Norm from cnt nod (Shell/Beam)/- ,2
LIS_Norm to targ surf (Shell/Beam)/- ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Auto CNOF/ICONT adjustment    K5
Typ_LIS_OPTIONB
LIS_No Auto. Adjust.,0
LIS_Close gap       ,1
LIS_Reduce Penetrat.,2
LIS_Gap/Penetration ,3
LIS_Default ICONT   ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Auto Contact stiffness change K6
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Aggressive      ,1
LIS_Very Aggressive ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Contact time/load prediction  K7
Typ_LIS_OPTIONB
LIS_No predictions  ,0
LIS_Auto cut-back   ,1
LIS_Reasonbl T/L inc,2
LIS_Minimum T/L incr,3
LIS_Impact contraint,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Asymmetric contact selection  K8
Typ_LIS_OPTIONB
LIS_No              ,0
LIS_Yes             ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Initial penetration/gap       K9
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
LIS_Include - ramp  ,2
LIS_Offset only     ,3
LIS_Offset - ramp   ,4
LIS_Always offset only  ,5
LIS_Always offset - ramp,6
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_10
Fld_4
Prm_Contacting stiffness update  K10
Typ_LIS_OPTIONB
LIS_Each load step (PAIR ID based) ,0
LIS_Each iteration (PAIR ID based) ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO10)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Shell thickness effect       K11
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
!
Fld_4
Prm_Behavior of contact surface  K12
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Rough           ,1
LIS_No separation   ,2
LIS_Bonded          ,3
LIS_No Sep. (always),4
LIS_Bonded (always) ,5
LIS_Bonded (initial),6
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_15
Fld_4
Prm_Effect of stabiliz. damping  K15
Typ_LIS_OPTIONB
LIS_Active in 1st load step  ,0
LIS_Deactivate auto damping  ,1
LIS_Active for all load step ,2
LIS_Active all the time      ,3
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_16
Fld_4
Prm_Input of squeal dampings     K16
Typ_LIS_OPTIONB
LIS_Damping factor       ,0
LIS_MU-Slip velocity     ,1
LIS_Damping coefficient  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO16)
Def_*GET(ETYP,_ET_TYPE,ATTR,KO15)
:E END
:! 
:N Fnc_KEYOPT_176
:S   3738,   138,  3593
:T Command
:C )! Fnc_KEYOPT_176
:A Element 176
:D CONTA176 element type options
:H Hlp_E_S4.176
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CONTA176, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
K_CM(BETA)
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Elem degree(s) of freedom     K1
Typ_LIS_OPTIONB
LIS_UX/UY/UZ             ,0
LIS_UX/UY/UZ/TEMP        ,1
LIS_TEMP                 ,2
LIS_UX/UY/UZ/TEMP/VOLT   ,3
LIS_TEMP/VOLT            ,4
LIS_UX/UY/UZ/VOLT        ,5
LIS_VOLT                 ,6
LIS_AZ (MAG)             ,7
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Contact algorithm             K2
Typ_LIS_OPTIONB
LIS_Augmented method   ,0
LIS_Penalty method     ,1
LIS_MPC algorithm      ,2
LIS_Lagrange & penalty ,3
LIS_Lagrange method    ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Contact model                 K3
Typ_LIS_OPTIONB
LIS_Paralled beams & force based ,0
LIS_Crossed beams & force based  ,1
LIS_Paralled beams & traction    ,2
LIS_Crossed beams & traction     ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Cntc CERIGID/RBE3 MPC         K4
Typ_LIS_OPTIONB
LIS_CERIGID MPC    ,0
LIS_RBE3 MPC       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Auto CNOF/ICONT adjustment    K5
Typ_LIS_OPTIONB
LIS_No Auto. Adjust.,0
LIS_Close gap       ,1
LIS_Reduce Penetrat.,2
LIS_Gap/Penetration ,3
LIS_Default ICONT   ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Auto Contact stiffness change K6
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Aggressive      ,1
LIS_Very Aggressive ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Contact time/load prediction  K7
Typ_LIS_OPTIONB
LIS_No predictions  ,0
LIS_Auto cut-back   ,1
LIS_Reasonbl T/L inc,2
LIS_Minimum T/L incr,3
LIS_Impact contraint,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Asymmetric contact selection  K8
Typ_LIS_OPTIONB
LIS_No              ,0
LIS_Yes             ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Initial penetration/gap       K9
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
LIS_Include - ramp  ,2
LIS_Offset only     ,3
LIS_Offset - ramp   ,4
LIS_Always offset only  ,5
LIS_Always offset - ramp,6
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_10
Fld_4
Prm_Contacting stiffness update  K10
Typ_LIS_OPTIONB
LIS_Each load step (PAIR ID based) ,0
LIS_Each iteration (PAIR ID based) ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO10)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
!
Fld_4
Prm_Behavior of contact surface  K12
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Rough           ,1
LIS_No separation   ,2
LIS_Bonded          ,3
LIS_No Sep. (always),4
LIS_Bonded (always) ,5
LIS_Bonded (initial),6
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_15
Fld_4
Prm_Effect of stabiliz. damping  K15
Typ_LIS_OPTIONB
LIS_Active in 1st load step  ,0
LIS_Deactivate auto damping  ,1
LIS_Active for all load step ,2
LIS_Active all the time      ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KO15)
! 
Cmd_KEYOPT
K_CM(BETA)
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_16
Fld_4
Prm_Input of squeal dampings     K16
Typ_LIS_OPTIONB
LIS_Damping factor       ,0
LIS_MU-Slip velocity     ,1
LIS_Damping coefficient  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO16)
:E END
:! 
:N Fnc_KEYOPT_177
:S   3649,   138,  3504
:T Command
:C )! Fnc_KEYOPT_177
:A Element 177
:D CONTA177 element type options
:H Hlp_E_S4.177
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CONTA177, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
K_CM(BETA)
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Elem degree(s) of freedom     K1
Typ_LIS_OPTIONB
LIS_UX/UY/UZ             ,0
LIS_UX/UY/UZ/TEMP        ,1
LIS_TEMP                 ,2
LIS_UX/UY/UZ/TEMP/VOLT   ,3
LIS_TEMP/VOLT            ,4
LIS_UX/UY/UZ/VOLT        ,5
LIS_VOLT                 ,6
LIS_AZ (MAG)             ,7
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Contact algorithm             K2
Typ_LIS_OPTIONB
LIS_Augmented method   ,0
LIS_Penalty method     ,1
LIS_MPC algorithm      ,2
LIS_Lagrange & penalty ,3
LIS_Lagrange method    ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Contact model                 K3
Typ_LIS_OPTIONB
LIS_Contact force based ,0
LIS_Traction based      ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Cntc CERIGID/RBE3 MPC         K4
Typ_LIS_OPTIONB
LIS_CERIGID MPC    ,0
LIS_RBE3 MPC       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Auto CNOF/ICONT adjustment    K5
Typ_LIS_OPTIONB
LIS_No Auto. Adjust.,0
LIS_Close gap       ,1
LIS_Reduce Penetrat.,2
LIS_Gap/Penetration ,3
LIS_Default ICONT   ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Auto Contact stiffness change K6
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Aggressive      ,1
LIS_Very Aggressive ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Contact time/load prediction  K7
Typ_LIS_OPTIONB
LIS_No predictions  ,0
LIS_Auto cut-back   ,1
LIS_Reasonbl T/L inc,2
LIS_Minimum T/L incr,3
LIS_Impact contraint,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Initial penetration/gap       K9
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
LIS_Include - ramp  ,2
LIS_Offset only     ,3
LIS_Offset - ramp   ,4
LIS_Always offset only  ,5
LIS_Always offset - ramp,6
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_10
Fld_4
Prm_Contacting stiffness update  K10
Typ_LIS_OPTIONB
LIS_Each load step (PAIR ID based) ,0
LIS_Each iteration (PAIR ID based) ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO10)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Beam thickness effect        K11
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
!
Fld_4
Prm_Behavior of contact surface  K12
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Rough           ,1
LIS_No separation   ,2
LIS_Bonded          ,3
LIS_No Sep. (always),4
LIS_Bonded (always) ,5
LIS_Bonded (initial),6
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_15
Fld_4
Prm_Effect of stabiliz. damping  K15
Typ_LIS_OPTIONB
LIS_Active in 1st load step  ,0
LIS_Deactivate auto damping  ,1
LIS_Active for all load step ,2
LIS_Active all the time      ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KO15)
! 
Cmd_KEYOPT
K_CM(BETA)
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_16
Fld_4
Prm_Input of squeal dampings     K16
Typ_LIS_OPTIONB
LIS_Damping factor       ,0
LIS_MU-Slip velocity     ,1
LIS_Damping coefficient  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO16)
:E END
:! 
:N Fnc_KEYOPT_178
:S   2761,   139,  2615
:T Command
:C )! Fnc_KEYOPT_178
:A Element 178
:H Hlp_E_S4.178
:D  CONTA178 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CONTA178, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Gap Type                      K1
Typ_LIS_OPTIONB
LIS_Unidirection gap,0
LIS_Cylindrical gap ,1
LIS_Spherical gap ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Contact algorithm             K2
Typ_LIS_OPTIONB
LIS_Augmented method,0
LIS_Penalty method  ,1
LIS_Lagrange & Penal,3
LIS_Lagrange method ,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Weak spring                   K3
Typ_LIS_OPTIONB
LIS_Do not use      ,0
LIS_On gap          ,1
LIS_On gap & slidng ,2
LIS_On gap + force  ,3
LIS_Gap & Sld.+Forc.,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Basis for initial gap size    K4
Typ_LIS_OPTIONB
LIS_GAP + node loc. ,0
LIS_Real const   GAP,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Basis for contact normal      K5
Typ_LIS_OPTIONB
LIS_Locat/real const,0
LIS_Nodal coor - X  ,1
LIS_Nodal coor - Y  ,2
LIS_Nodal coor - Z  ,3
LIS_ESYS  coor - X  ,4
LIS_ESYS  coor - Y  ,5
LIS_ESYS  coor - Z  ,6
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Elem degree(s) of freedom     K6
Typ_LIS_OPTIONB
LIS_UX/UY/UZ           ,0
LIS_UX/UY/UZ/TEMP      ,1
LIS_TEMP               ,2
LIS_UX/UY/UZ/TEMP/VOLT ,3
LIS_TEMP/VOLT          ,4
LIS_UX/UY/UZ/VOLT      ,5
LIS_VOLT               ,6
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Goal of contact time predict  K7
Typ_LIS_OPTIONB
LIS_No predictions  ,0
LIS_Reasnbl time inc,1
LIS_Min time incremt,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Initial penetration/gap       K9
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Ramp in 1st step,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_10
Fld_4
Prm_Behavior of contact surface  K10
Typ_LIS_OPTIONB
LIS_Standard        ,0
LIS_Rough           ,1
LIS_No separation   ,2
LIS_Bonded          ,3
LIS_No Sep. (always),4
LIS_Bonded (always) ,5
LIS_Bonded (initial),6
LIS_Rigid Coulmb frc,7
Def_*GET(ETYP,_ET_TYPE,ATTR,KO10)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
Fld_4
Prm_Contact status monitor       K12
Typ_LIS_OPTIONB
LIS_Do not use      ,0
LIS_Print           ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
!
:E END
:! 
:N Fnc_KEYOPT_179
:S    285,   138,   140
:T Command
:C )! Fnc_KEYOPT_179
:A Element 179
:H Hlp_E_S4.179
:D PRETS179 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The PRETS179 element type does not have any options.
:E End
:! 
:N Fnc_KEYOPT_18
:S    849,   132,   710
:T Command
:C )! Fnc_KEYOPT_18
:A Element 18
:H Hlp_E_S4.18
:D PIPE18 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PIPE18, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Temperatures represent        K1
Typ_LIS_OPTIONB
LIS_Thru-wall gradnt,0
LIS_Diametral gradnt,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Flex factor if FLEX not spec  K3
Typ_LIS_OPTIONB
LIS_Calc w/out press,0
LIS_Calc with press ,1
LIS_KARMAN flex fact,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Member force + moment output  K6
Typ_LIS_OPTIONB
LIS_Exclude output  ,0
LIS_Include output  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
:E END
:! 
:N Fnc_KEYOPT_180
:S    430,   137,   286
:T Command
:C )! Fnc_KEYOPT_180
:A Element 180
:H Hlp_E_S4.180
:D LINK180 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for LINK180, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Cross section scaling is      K2
Typ_LIS_OPTIONB
LIS_Func of stretch ,0
LIS_Rigid (classic) ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
:E END
:! 
:N Fnc_KEYOPT_181
:S   1079,   138,   934
:T Command
:C )! Fnc_KEYOPT_181
:A Element 181
:H Hlp_E_S4.181
:D SHELL181 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SHELL181, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element stiffness             K1
Typ_LIS_OPTIONB
LIS_Bending and membrane,0
LIS_Membrane only       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Integration option            K3
Typ_LIS_OPTIONB
LIS_Reduced integration ,0
LIS_Full w/ incompatible,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Storage of layer data         K8
Typ_LIS_OPTIONB
LIS_Bottom 1st top last,0
LIS_All layers         ,1
Lis_All layers + Middle,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_User Thickness option         K9
Typ_LIS_OPTIONB
LIS_No UTHICK routine  ,0
LIS_Use UTHICK routine ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
:E END
:! 
:N Fnc_KEYOPT_182
:S   1036,   138,   891
:T Command
:C )! Fnc_KEYOPT_182
:A Element 182
:H Hlp_E_S4.182
:D PLANE182 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE182, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element technology            K1
Typ_LIS_OPTIONB
LIS_Full Integration    ,0
LIS_Reduced integration ,1
LIS_Enhanced Strain     ,2
LIS_Simple Enhanced Strn,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane stress    ,0
LIS_Axisymmetric    ,1
LIS_Plane strain    ,2
LIS_Plane strs w/thk,3
LIS_Genrl plane strn,5
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Element formulation           K6
Typ_LIS_OPTIONB
LIS_Pure displacemnt,0
LIS_Mixed U/P       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Fld_0
Typ_Lab
Prm_(NOTE: Mixed formulation is not valid with plane stress)
!
:E END
:! 
:N Fnc_KEYOPT_183
:S    972,   138,   827
:T Command
:C )! Fnc_KEYOPT_183
:A Element 183
:H Hlp_E_S4.183
:D PLANE183 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE183, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element shape                 K1
Typ_LIS_OPTIONB
LIS_Quadrilateral   ,0
LIS_Triangle        ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane stress    ,0
LIS_Axisymmetric    ,1
LIS_Plane strain    ,2
LIS_Plane strs w/thk,3
LIS_Genrl plane strn,5
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Element formulation           K6
Typ_LIS_OPTIONB
LIS_Pure displacemnt,0
LIS_Mixed U/P       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Fld_0
Typ_Lab
Prm_(NOTE: Mixed formulation is not valid with plane stress)
!
:E END
:! 
:N Fnc_KEYOPT_184
:S    966,   136,   823
:T Command
:C )! Fnc_KEYOPT_184
:A Element 184
:H Hlp_E_S4.184
:D MPC184 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for MPC184, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element behavior              K1
Typ_Lis
Lis_Rigid Link     ,0
Lis_Rigid Beam     ,1
K_LN(BETA)
Lis_Solid-to-Shell ,2
Lis_Slider         ,3
K_LN(BETA)
Lis_Solid-to-Beam  ,4
Lis_Revolute       ,6
Lis_Universal      ,7
Lis_Slot           ,8
Lis_Point          ,9
Lis_Translational  ,10
Lis_Cylindrical    ,11
Lis_Planar         ,12
Lis_Weld           ,13
Lis_Orient         ,14
Lis_Spherical      ,15
Lis_General        ,16
Lis_Screw          ,17
Lis_Bushing        ,21
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cal_Fnc_KEYOPT_184a,4,eq,0
Cal_Fnc_KEYOPT_184a,4,eq,1
Cal_Fnc_KEYOPT_184b,4,eq,11
Cal_Fnc_KEYOPT_184c,4,eq,12
Cal_Fnc_KEYOPT_184d,4,eq,16
Cal_Fnc_KEYOPT_184e,4,eq,6
:E END
:! 
:N Fnc_KEYOPT_184a
:S    440,   138,   293
:T Command
:C )! Fnc_KEYOPT_184a
:A Element 184
:H Hlp_E_S4.184
:D MPC184 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for MPC184, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Reduction Method              K2
Typ_Lis_OptionB
Lis_Direct Elimination ,0
Lis_Lagrange Multiplier,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
:E END  
:! 
:N Fnc_KEYOPT_184b
:S    440,   138,   293
:T Command
:C )! Fnc_KEYOPT_184b
:A Element 184
:H Hlp_E_S4.184
:D MPC184 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for MPC184, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element configuration         K4
Typ_Lis_OptionB
Lis_X-axis cylindrical ,0
Lis_Z-axis cylindrical ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
:E END  
:! 
:N Fnc_KEYOPT_184c
:S    440,   138,   293
:T Command
:C )! Fnc_KEYOPT_184c
:A Element 184
:H Hlp_E_S4.184
:D MPC184 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for MPC184, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element configuration         K4
Typ_Lis_OptionB
Lis_X-axis rotation    ,0
Lis_Z-axis rotation    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
:E END  
:! 
:N Fnc_KEYOPT_184d
:S    440,   138,   293
:T Command
:C )! Fnc_KEYOPT_184d
:A Element 184
:H Hlp_E_S4.184
:D MPC184 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for MPC184, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element configuration + DOFs  K4
Typ_Lis_OptionB
Lis_Rotations activated,0
Lis_Displacements only ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
:E END  
:! 
:N Fnc_KEYOPT_184e
:S    436,   138,   291
:T Command
:C )! Fnc_KEYOPT_184e
:A Element 184
:H Hlp_E_S4.184
:D MPC184 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for MPC184, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element configuration         K4
Typ_Lis_OptionB
Lis_X-axis revolute    ,0
Lis_Z-axis revolute    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
:E END
:! 
:N Fnc_KEYOPT_185
:S   1095,   138,   950
:T Command
:C )! Fnc_KEYOPT_185
:A Element 185
:H Hlp_E_S4.185
:D SOLID185 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID185, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Element technology            K2
Typ_LIS_OPTIONB
LIS_Full Integration     ,0
LIS_Reduced integration  ,1
LIS_Enhanced Strain      ,2
LIS_Simple Enhanced  Strn,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Layer construction            K3
Typ_LIS_OPTIONB
LIS_Structural solid,0
LIS_Layered solid   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Element formulation           K6
Typ_LIS_OPTIONB
LIS_Pure displacemnt,0
LIS_Mixed U/P       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Storage of layer data         K8
Typ_LIS_OPTIONB
LIS_Bottom 1st top last,0
LIS_All layers         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
:E END
:! 
:N Fnc_KEYOPT_186
:S   1029,   138,   884
:T Command
:C )! Fnc_KEYOPT_186
:A Element 186
:H Hlp_E_S4.186
:D SOLID186 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID186, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Element technology            K2
Typ_LIS_OPTIONB
LIS_Full Integration,1
LIS_Reduced integr  ,0
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Layer construction            K3
Typ_LIS_OPTIONB
LIS_Structural solid,0
LIS_Layered solid   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Element formulation           K6
Typ_LIS_OPTIONB
LIS_Pure displacemnt,0
LIS_Mixed U/P       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Storage of layer data         K8
Typ_LIS_OPTIONB
LIS_Bottom 1st top last,0
LIS_All layers         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
:E END
:! 
:N Fnc_KEYOPT_187
:S    455,   138,   310
:T Command
:C )! Fnc_KEYOPT_187
:A Element 187
:H Hlp_E_S4.187
:D SOLID187 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID187, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Element formulation           K6
Typ_LIS_OPTIONB
LIS_Pure displacemnt,0
LIS_Mixed U/ const P,1
LIS_Mixed U/linear P,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_188
:S   2376,   137,  2232
:T Command
:C )! Fnc_KEYOPT_188
:A Element 188
:H Hlp_E_S4.188
:D BEAM188 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for BEAM188, Element Type Ref. No. %(I)_ET_TYPE%
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Warping degree of freedom     K1
Typ_LIS_OPTIONB
LIS_Unrestrained    ,0
LIS_Restrained      ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Cross section scaling is      K2
Typ_LIS_OPTIONB
LIS_Func of stretch ,0
LIS_Rigid (classic) ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Linear Form.    ,0
LIS_Quadradic Form. ,2
LIS_Cubic Form.     ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Shear stress output           K4
Typ_LIS_OPTIONB
LIS_Torsional only  ,0
LIS_Transverse only ,1
LIS_Include Both    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Section force/strain output   K6
Typ_LIS_OPTIONB
LIS_At intgr points ,0
LIS_ +Current Area  ,1
LIS_ +Basis vectors ,2
LIS_At element nodes,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Stress / Strain (sect points) K7
Typ_LIS_OPTIONB
LIS_NONE            ,0
LIS_Max and Min only,1
LIS_All Section Pts ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Stress/Strain (elmt/sect nds) K9
Typ_LIS_OPTIONB
LIS_NONE            ,0
LIS_Max and Min only,1
LIS_Ext Bndary nodes,2
LIS_All Section node,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Section integration          K11
Typ_LIS_OPTIONB
LIS_Automatic       ,0
LIS_Numerical       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
Fld_4
Prm_Taper section interpretation K12
Typ_LIS_OPTIONB
LIS_Linear          ,0
LIS_Constant        ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_15
Fld_4
Prm_Results file format          K15
Typ_LIS_OPTIONB
LIS_Avg (corner nds),0
LIS_No avg (int pts),1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO15)
!
:E END
:! 
:N Fnc_KEYOPT_189
:S   2153,   137,  2009
:T Command
:C )! Fnc_KEYOPT_189
:A Element 189
:H Hlp_E_S4.189
:D BEAM189 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for BEAM189, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Warping degree of freedom     K1
Typ_LIS_OPTIONB
LIS_Unrestrained    ,0
LIS_Restrained      ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Cross section scaling is      K2
Typ_LIS_OPTIONB
LIS_Func of stretch ,0
LIS_Rigid (classic) ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Shear stress output           K4
Typ_LIS_OPTIONB
LIS_Torsional only  ,0
LIS_Transverse only ,1
LIS_Include Both    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Section force/strain output   K6
Typ_LIS_OPTIONB
LIS_At intgr points ,0
LIS_ +Current Area  ,1
LIS_ +Basis vectors ,2
LIS_At element nodes,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Stress / Strain (sect points) K7
Typ_LIS_OPTIONB
LIS_NONE            ,0
LIS_Max and Min only,1
LIS_All Section Pts ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Stress/Strain (elmt/sect nds) K9
Typ_LIS_OPTIONB
LIS_NONE            ,0
LIS_Max and Min only,1
LIS_Ext Bndary nodes,2
LIS_All Section node,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Section integration          K11
Typ_LIS_OPTIONB
LIS_Automatic       ,0
LIS_Numerical       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
Fld_4
Prm_Taper section interpretation K12
Typ_LIS_OPTIONB
LIS_Linear          ,0
LIS_Constant        ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_15
Fld_4
Prm_Results file format          K15
Typ_LIS_OPTIONB
LIS_Avg (corner nds),0
LIS_No avg (int pts),1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO15)
!
:E END
:! 
:N Fnc_KEYOPT_19
:S   2420,   132,  2281
:T Command
:C )! Fnc_KEYOPT_19
:A Element 19
:H Hlp_E_S4.19
:D SURF19 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options fov SURF19, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element degrees of freedom    K1
Typ_LIS_OPTIONB
LIS_UX  UY          ,0
LIS_TEMP            ,1
LIS_UX  UY  TEMP    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane           ,0
LIS_Axisymmetric    ,1
LIS_Plane with thick,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Midside nodes                 K4
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra node for radiation -    K5
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
Fld_0
 Typ_Lab
 Prm_- and/or convection calculations
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
P_FL(FULL_ANS)
Prm_Use of normal -Y press loads  K6
Typ_LIS_OPTIONB
LIS_Pos and neg pres,0
LIS_Pos pres only   ,1
LIS_Neg pres only   ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Heat flux and convect loads   K8
Typ_LIS_OPTIONB
LIS_Ignore both     ,0
LIS_Heat flux only  ,1
LIS_Hf at average T ,2
LIS_Hf at surface TS,3
LIS_Hf at bulk TB   ,4
LIS_Hf at (TS - TB) ,5
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Radiation form fact calc as   K9
Typ_LIS_OPTIONB
LIS_Exclude radiatn ,0
LIS_Real const FORMF,1
LIS_Absolute value  ,2
LIS_Zero if negative,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_ET_TYPE)
 Fld_3
  Typ_Def_11
 Fld_4
  Prm_Pres. vector orientation on  K11
  Typ_Lis_OptionB
   Lis_Prj Area w/Tan  ,0
   Lis_Prj Area w/o Tan,1
   Lis_Full Area w/Tan ,2
  Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_ET_TYPE)
 Fld_3
  Typ_Def_12
 Fld_0
  Typ_Lab
  Prm_If vector oriented pressure is aligned with
 Fld_4
  Prm_the element normal then      K12
  Typ_Lis_OptionB
   Lis_pres. applied   ,0
   Lis_pres. suppressed,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
:E END
:! 
:N Fnc_KEYOPT_190
:S    832,   138,   687
:T Command
:C )! Fnc_KEYOPT_190
:A Element 190
:H Hlp_E_S4.190
:D SOLSH190 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLSH190, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Enhanced transverse shear     K2
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Element formulation           K6
Typ_LIS_OPTIONB
LIS_Pure displacemnt,0
LIS_Mixed U/P       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Storage of layer data         K8
Typ_LIS_OPTIONB
LIS_Bottom 1st top last,0
LIS_All layers         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
:E END
:! 
:N Fnc_KEYOPT_191
:S    217,   122,    70
:T Command
:C )! Fnc_KEYOPT_191
:A Element 191
:D SOLID191 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID191'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_191
:! 
:N Fnc_KEYOPT_192
:S    675,   138,   530
:T Command
:C )! Fnc_KEYOPT_192
:A Element 192
:H Hlp_E_S4.192
:D INTER192 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for INTER192, Element Type Ref. No. %(I)_ET_TYPE%
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Transverse shear              K2
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane stress    ,0
LIS_Axisymmetric    ,1
LIS_Plane strain    ,2
LIS_Plane strs w/thk,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
:E END
:! 
:N Fnc_KEYOPT_193
:S    674,   138,   529
:T Command
:C )! Fnc_KEYOPT_193
:A Element 193
:H Hlp_E_S4.193
:D INTER193 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for INTER193, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Transverse shear              K2
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane stress    ,0
LIS_Axisymmetric    ,1
LIS_Plane strain    ,2
LIS_Plane strs w/thk,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
:E END
:! 
:N Fnc_KEYOPT_194
:S    448,   138,   285
:T Command
:C )! Fnc_KEYOPT_194
:A Element 194
:H Hlp_E_S4.194
:D INTER194 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for INTER194, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Transverse shear              K2
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
:E End_OF_Fnc_KEYOPT_194
:! 
:N Fnc_KEYOPT_195
:S    448,   138,   285
:T Command
:C )! Fnc_KEYOPT_195
:A Element 195
:H Hlp_E_S4.195
:D INTER195 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for INTER195, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Transverse shear              K2
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
:E End_OF_Fnc_KEYOPT_195
:! 
:N Fnc_KEYOPT_2
:S    272,   128,   137
:T Command
:C )! Fnc_KEYOPT_2
:A Element 2
:H Hlp_E_S4.2
:D PLANE2 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The PLANE2 element type is no longer supported.
!
:E END
:! 
:N Fnc_KEYOPT_20
:S    209,   117,    68
:T Command
:C )! Fnc_KEYOPT_20
:A Element 20
:D PIPE20 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PIPE20'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_20
:! 
:N Fnc_KEYOPT_200
:S    865,   137,   721
:T Command
:C )! Fnc_KEYOPT_200
:A Element 200
:H Hlp_E_S4.200
:D MESH200 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for MESH200, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element shape and # of nodes  K1
Typ_LIS_OPTIONB
LIS_2-D LINE 2-NODE ,0
LIS_2-D LINE 3-NODE ,1
LIS_3-D LINE 2-NODE ,2
LIS_3-D LINE 3-NODE ,3
LIS_TRIA   3-NODE   ,4
LIS_TRIA   6-NODE   ,5
LIS_QUAD   4-NODE   ,6
LIS_QUAD   8-NODE   ,7
LIS_TETRA  4-NODE   ,8
LIS_TETRA 10-NODE   ,9
LIS_BRICK  8-NODE   ,10
LIS_BRICK 20-NODE   ,11
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Element shape testing         K2
Typ_LIS_OPTIONB
LIS_Normal testing  ,0
LIS_No shape testing,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
:E END
:! 
:N Fnc_KEYOPT_201
:S    288,   139,   142
:T Command
:C )! Fnc_KEYOPT_201
:A Element 201
:H Hlp_E_S4.201
:D  FOLLW201 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The FOLLW201 element type does not have any options.
!
:E End
:! 
:N Fnc_KEYOPT_202
:S    494,   138,   331
:T Command
:C )! Fnc_KEYOPT_202
:A Element 202
:H Hlp_E_S4.202
:D INTER202 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for INTER202, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane stress    ,0
LIS_Axisymmetric    ,1
LIS_Plane strain    ,2
LIS_Plane strs w/thk,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
:E End_OF_Fnc_KEYOPT_202
:! 
:N Fnc_KEYOPT_203
:S    494,   138,   331
:T Command
:C )! Fnc_KEYOPT_203
:A Element 203
:H Hlp_E_S4.203
:D INTER203 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for INTER203, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane stress    ,0
LIS_Axisymmetric    ,1
LIS_Plane strain    ,2
LIS_Plane strs w/thk,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
:E End_OF_Fnc_KEYOPT_203
:! 
:N Fnc_KEYOPT_204
:S    303,   138,   140
:T Command
:C )! Fnc_KEYOPT_204
:A Element 204
:H Hlp_E_S4.204
:D INTER204 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The INTER204 element type does not have any options.
:E End_OF_Fnc_KEYOPT_204
:! 
:N Fnc_KEYOPT_205
:S    303,   138,   140
:T Command
:C )! Fnc_KEYOPT_205
:A Element 205
:H Hlp_E_S4.205
:D INTER205 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The INTER205 element type does not have any options.
:E End_OF_Fnc_KEYOPT_205
:! 
:N Fnc_KEYOPT_208
:S   1263,   138,  1118
:T Command
:C )! Fnc_KEYOPT_208
:A Element 208
:H Hlp_E_S4.208
:D SHELL208 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SHELL208, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element stiffness             K1
Typ_LIS_OPTIONB
LIS_Bnding and membr,0
LIS_Membrane only   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Torsion capability            K2
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Linear Form.    ,0
LIS_Quadradic Form. ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Storage of layer data         K8
Typ_LIS_OPTIONB
LIS_Bottom 1st top last,0
LIS_All layers         ,1
Lis_All layers + Middle,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_User Thickness option         K9
Typ_LIS_OPTIONB
LIS_No UTHICK routine  ,0
LIS_Use UTHICK routine ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
:E END
:! 
:N Fnc_KEYOPT_209
:S   1065,   138,   920
:T Command
:C )! Fnc_KEYOPT_209
:A Element 209
:H Hlp_E_S4.209
:D SHELL209 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SHELL209, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element stiffness             K1
Typ_LIS_OPTIONB
LIS_Bnding and membr,0
LIS_Membrane only   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Torsion capability            K2
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Storage of layer data         K8
Typ_LIS_OPTIONB
LIS_Bottom 1st top last,0
LIS_All layers         ,1
Lis_All layers + Middle,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_User Thickness option         K9
Typ_LIS_OPTIONB
LIS_No UTHICK routine  ,0
LIS_Use UTHICK routine ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
:E END
:! 
:N Fnc_KEYOPT_21
:S    872,   132,   733
:T Command
:C )! Fnc_KEYOPT_21
:A Element 21
:H Hlp_E_S4.21
:D MASS21 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for MASS21, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Interpret real constants as   K1
Typ_LIS_OPTIONB
LIS_Masses-Inertias ,0
LIS_Volumes-Density ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Elem coord system initially   K2
Typ_LIS_OPTIONB
LIS_Parall to global,0
LIS_Par to nodal sys,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Rotary inertia options        K3
Typ_LIS_OPTIONB
LIS_3-D w rot inert ,0
LIS_3-D w/o rot iner,2
LIS_2-D w rot inert ,3
LIS_2-D w/o rot iner,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
:E END
:! 
:N Fnc_KEYOPT_212
:S    430,   136,   287
:T Command
:C )! Fnc_KEYOPT_212
:A Element 212
:H Hlp_E_S4.212
:D CPT212 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CPT212, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Axisymmetric    ,1
LIS_Plane strain    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
:E END
:! 
:N Fnc_KEYOPT_213
:S    430,   136,   287
:T Command
:C )! Fnc_KEYOPT_213
:A Element 213
:H Hlp_E_S4.213
:D CPT213 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CPT213, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Axisymmetric    ,1
LIS_Plane strain    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
:E END
:! 
:N Fnc_KEYOPT_214
:S    910,   138,   765
:T Command
:C )! Fnc_KEYOPT_214
:A Element 214
:H Hlp_E_S4.214
:D COMBI214 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for COMBI214, Element Type Ref. No. %(I)_ET_TYPE%
!                       
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_DOF select for 2D behavior    K2
Typ_LIS_OPTIONB
LIS_Parallel to XY plane,0
LIS_Parallel to YZ plane,1
LIS_Parallel to XZ plane,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!                       
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Select matrix option          K3
Typ_LIS_OPTIONB
LIS_Symmetric   ,0
LIS_Unsymmetric ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!           
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Include element matrix output K4
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
:E END
:! 
:N Fnc_KEYOPT_215
:S    283,   136,   140
:T Command
:C )! Fnc_KEYOPT_215
:A Element 215
:H Hlp_E_S4.215
:D CPT215 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The CPT215 element type does not have any options.
!
:E END
:! 
:N Fnc_KEYOPT_216
:S    428,   136,   285
:T Command
:C )! Fnc_KEYOPT_216
:A Element 216
:H Hlp_E_S4.216
:D CPT216 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CPT216, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Element technology            K2
Typ_LIS_OPTIONB
LIS_Full Integration,1
LIS_Reduced integr  ,0
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
:E END
:! 
:N Fnc_KEYOPT_217
:S    283,   136,   140
:T Command
:C )! Fnc_KEYOPT_217
:A Element 217
:H Hlp_E_S4.217
:D CPT217 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The CPT217 element type does not have any options.
!
:E END
:! 
:N Fnc_KEYOPT_22
:S   2147,   132,  2008
:T Command
:C )! Fnc_KEYOPT_22
:A Element 22
:H Hlp_E_S4.22
:D SURF22 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SURF22, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element degree(s) of freedom  K1
Typ_LIS_OPTIONB
LIS_UX  UY  UZ      ,0
LIS_TEMP            ,1
LIS_UX  UY  UZ  TEMP,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Midside nodes                 K4
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra node for radiation      K5
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
P_FL(FULL_ANS)
Prm_Use of normal -Z press loads  K6
Typ_LIS_OPTIONB
LIS_Pos and neg pres,0
LIS_Pos pres only   ,1
LIS_Neg pres only   ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Heat flux and convect loads   K8
Typ_LIS_OPTIONB
LIS_Ignore both     ,0
LIS_Heat flux only  ,1
LIS_Hf at average T ,2
LIS_Hf at surface TS,3
LIS_Hf at bulk TB   ,4
LIS_Hf at (TS - TB) ,5
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Radiation form factor calc as K9
Typ_LIS_OPTIONB
LIS_Exclude radiatn ,0
LIS_Real const FORMF,1
LIS_Absolute value  ,2
LIS_Zero if negative,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!  
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_ET_TYPE)
 Fld_3
  Typ_Def_11
 Fld_4
  Prm_Pres. vector orientation on  K11
  Typ_Lis_OptionB
   Lis_Prj Area w/Tan  ,0
   Lis_Prj Area w/o Tan,1
   Lis_Full Area w/Tan ,2
  Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_ET_TYPE)
 Fld_3
  Typ_Def_12
 Fld_0
  Typ_Lab
  Prm_If vector oriented pressure is aligned with
 Fld_4
  Prm_the element normal then      K12
  Typ_Lis_OptionB
   Lis_pres. applied   ,0
   Lis_pres. suppressed,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
:E END
:! 
:N Fnc_KEYOPT_220
:S    682,   138,   537
:T Command
:C )! Fnc_KEYOPT_220
:A Element 220
:H Hlp_E_S4.220
:D FLUID220 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID220 Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Structure at elem interface   K2
Typ_LIS_OPTIONB
LIS_Structure present,0
LIS_Structure absent ,1
LIS_Present for modal,2
LIS_Present for harm ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_PML absorbing condition       K4
Typ_LIS_OPTIONB
LIS_Do not include   ,0
LIS_Include          ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
:E END
:! 
:N Fnc_KEYOPT_221
:S    682,   138,   537
:T Command
:C )! Fnc_KEYOPT_221
:A Element 221
:H Hlp_E_S4.221
:D FLUID221 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID221 Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Structure at elem interface   K2
Typ_LIS_OPTIONB
LIS_Structure present,0
LIS_Structure absent ,1
LIS_Present for modal,2
LIS_Present for harm ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_PML absorbing condition       K4
Typ_LIS_OPTIONB
LIS_Do not include   ,0
LIS_Include          ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
:E END
:! 
:N Fnc_KEYOPT_223
:S   1867,   139,  1721
:T Command
:C )! Fnc_KEYOPT_223
:A Element 223
:H Hlp_E_S4.223
:D  PLANE223 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE223, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
 Prm_Analysis Type               K1
  Typ_LIS_OPTIONB
  Lis_Not specified             ,0
  Lis_Structural-thermal        ,11
  Lis_Structural-thermoelectric ,111
  Lis_Thermo-piezoelectric      ,1011
  Lis_Piezoresistive            ,101
  Lis_Electroelast/Piezoelectric,1001
  Lis_Thermoelectric            ,110
  Lis_Thermal-diffusion         ,100010
  Lis_Structural-diffusion      ,100001
  Lis_Structrl-thermal-diffusion,100011
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
 Prm_Structural-thermal coupling K2
  Typ_LIS_OPTIONB
  LIS_Strong (matrix)    ,0
  LIS_Weak (load vector) ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
 Prm_Element behavior            K3
  Typ_LIS_OPTIONB
  LIS_Plane stress ,0
  LIS_Axisymmetric ,1
  LIS_Plane strain ,2
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
 Prm_Electrostatic force         K4
  Typ_LIS_OPTIONB
  LIS_Applied to every element node ,0
  LIS_Applied to air-struc interface ,1
  LIS_Not applied ,2
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
 Prm_Thermoelastic damping       K9
  Typ_LIS_OPTIONB
  LIS_Active          ,0
  LIS_Suppressed      ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_10
Fld_4
 Prm_Specific heat matrix       K10
  Typ_LIS_OPTIONB
  LIS_Consistent         ,0
  LIS_Diagonalized       ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KO10)
!
:E END
:! 
:N Fnc_KEYOPT_226
:S   1851,   139,  1705
:T Command
:C )! Fnc_KEYOPT_226
:A Element 226
:H Hlp_E_S4.226
:D  SOLID226 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID226, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
 Prm_Analysis Type               K1
  Typ_LIS_OPTIONB
  Lis_Not specified             ,0
  Lis_Structural-thermal        ,11
  Lis_Structural-thermoelectric ,111
  Lis_Thermo-piezoelectric      ,1011
  Lis_Piezoresistive            ,101
  Lis_Electroelast/Piezoelectric,1001
  Lis_Thermoelectric            ,110
  Lis_Thermal-diffusion         ,100010
  Lis_Structural-diffusion      ,100001
  Lis_Structrl-thermal-diffusion,100011
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
 Prm_Structural-Thermal coupling K2
  Typ_LIS_OPTIONB
  LIS_Strong (matrix)    ,0
  LIS_Weak (load vector) ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
 Prm_Electrostatic force         K4
  Typ_LIS_OPTIONB
  LIS_Applied to every element node ,0
  LIS_Applied to air-struc interface ,1
  LIS_Not applied ,2
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
 Prm_Integration method          K6
  Typ_LIS_OPTIONB
  LIS_Full Integration,0
  LIS_Reduced integr  ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
 Prm_Thermoelastic damping       K9
  Typ_LIS_OPTIONB
  LIS_Active          ,0
  LIS_Suppressed      ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_10
Fld_4
 Prm_Specific heat matrix       K10
  Typ_LIS_OPTIONB
  LIS_Consistent         ,0
  LIS_Diagonalized       ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KO10)
!
:E END
:! 
:N Fnc_KEYOPT_227
:S   1647,   139,  1501
:T Command
:C )! Fnc_KEYOPT_227
:A Element 227
:H Hlp_E_S4.227
:D  SOLID227 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID227, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
 Prm_Analysis Type               K1
  Typ_LIS_OPTIONB
  Lis_Not specified             ,0
  Lis_Structural-thermal        ,11
  Lis_Structural-thermoelectric ,111
  Lis_Thermo-piezoelectric      ,1011
  Lis_Piezoresistive            ,101
  Lis_Electroelast/Piezoelectric,1001
  Lis_Thermoelectric            ,110
  Lis_Thermal-diffusion         ,100010
  Lis_Structural-diffusion      ,100001
  Lis_Structrl-thermal-diffusion,100011
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
 Prm_Structural-Thermal coupling K2
  Typ_LIS_OPTIONB
  LIS_Strong (matrix)    ,0
  LIS_Weak (load vector) ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
 Prm_Electrostatic force         K4
  Typ_LIS_OPTIONB
  LIS_Applied to every element node ,0
  LIS_Applied to air-struc interface ,1
  LIS_Not applied ,2
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
 Prm_Thermoelastic damping       K9
  Typ_LIS_OPTIONB
  LIS_Active          ,0
  LIS_Suppressed      ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_10
Fld_4
 Prm_Specific heat matrix       K10
  Typ_LIS_OPTIONB
  LIS_Consistent         ,0
  LIS_Diagonalized       ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KO10)
!
:E END
:! 
:N Fnc_KEYOPT_23
:S    192,   117,    68
:T Command
:C )! Fnc_KEYOPT_23
:A Element 23
:D BEAM23 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'BEAM23'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E END
:! 
:N Fnc_KEYOPT_230
:S    458,   138,   313
:T Command
:C )! Fnc_KEYOPT_230
:A Element 230
:H Hlp_E_S4.230
:D PLANE230 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE230, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane           ,0
LIS_Axisymmetric    ,1
LIS_Plane Thickness ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
! 
:E End
:! 
:N Fnc_KEYOPT_231
:S    289,   138,   144
:T Command
:C )! Fnc_KEYOPT_231
:A Element 231
:H Hlp_E_S4.231
:D SOLID231 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The SOLID231 element type does not have any options.
!  
:E End
:! 
:N Fnc_KEYOPT_232
:S    290,   139,   144
:T Command
:C )! Fnc_KEYOPT_232
:A Element 232
:H Hlp_E_S4.232
:D  SOLID232 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The SOLID232 element type does not have any options.  
!
:E End
:! 
:N Fnc_KEYOPT_233
:S   1494,   139,  1330
:T Command
:C )! Fnc_KEYOPT_233
:A Element 233
:H Hlp_E_S4.233
:D  PLANE233 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE233, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element degree(s) of freedom  K1
Typ_LIS_OPTIONB
LIS_Magnetic (A)     ,0
LIS_Elecmag (A+VOLT) ,1
LIS_Coil (A+VOLT+EMF),2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Electromagnetic coupling      K2
Typ_LIS_OPTIONB
LIS_Strong (matrix)    ,0
LIS_Weak (load vector) ,1
LIS_Strong (t-i VOLT)  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane           ,0
LIS_Axisymmetric    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Eddy currents                 K5
Typ_LIS_OPTIONB
LIS_Active          ,0
LIS_Suppressed      ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Electromagnetic force output  K7
Typ_LIS_OPTIONB
LIS_Corner + midside,0
LIS_Corners only    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Electromagnetic force calc    K8
Typ_LIS_OPTIONB
LIS_Maxwell         ,0
LIS_Lorentz         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
:E End_OF_Fnc_KEYOPT_233
:! 
:N Fnc_KEYOPT_236
:S   1504,   138,  1341
:T Command
:C )! Fnc_KEYOPT_236
:A Element 236
:H Hlp_E_S4.236
:D SOLID236 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID236, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element capability and DOFs   K1
Typ_LIS_OPTIONB
LIS_Magnetic (A)     ,0
LIS_Elecmag (A+VOLT) ,1
LIS_Coil (A+VOLT+EMF),2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Electromagnetic coupling      K2
Typ_LIS_OPTIONB
LIS_Strong (matrix)    ,0
LIS_Weak (load vector) ,1
LIS_Strong (t-i VOLT)  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
K_CM(BETA)
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Magnetic formulation and DOFs K3
Typ_LIS_OPTIONB
LIS_Edge (AZ)       ,0
LIS_Node (AX AY AZ) ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Eddy currents                 K5
Typ_LIS_OPTIONB
LIS_Active          ,0
LIS_Suppressed      ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Electromagnetic force output  K7
Typ_LIS_OPTIONB
LIS_Corner + midside,0
LIS_Corners only    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Electromagnetic force calc    K8
Typ_LIS_OPTIONB
LIS_Maxwell         ,0
LIS_Lorentz         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
:E End_OF_Fnc_KEYOPT_236
:! 
:N Fnc_KEYOPT_237
:S   1504,   138,  1341
:T Command
:C )! Fnc_KEYOPT_237
:A Element 237
:H Hlp_E_S4.237
:D SOLID237 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID237, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element capability and DOFs   K1
Typ_LIS_OPTIONB
LIS_Magnetic (A)     ,0
LIS_Elecmag (A+VOLT) ,1
LIS_Coil (A+VOLT+EMF),2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Electromagnetic coupling      K2
Typ_LIS_OPTIONB
LIS_Strong (matrix)    ,0
LIS_Weak (load vector) ,1
LIS_Strong (t-i VOLT)  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
K_CM(BETA)
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Magnetic formulation and DOFs K3
Typ_LIS_OPTIONB
LIS_Edge (AZ)       ,0
LIS_Node (AX AY AZ) ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Eddy currents                 K5
Typ_LIS_OPTIONB
LIS_Active          ,0
LIS_Suppressed      ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Electromagnetic force output  K7
Typ_LIS_OPTIONB
LIS_Corner + midside,0
LIS_Corners only    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Electromagnetic force calc    K8
Typ_LIS_OPTIONB
LIS_Maxwell         ,0
LIS_Lorentz         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
:E End_OF_Fnc_KEYOPT_237
:! 
:N Fnc_KEYOPT_238
:S    668,   138,   505
:T Command
:C )! Fnc_KEYOPT_238
:A Element 238
:H Hlp_E_S4.238
:D PLANE238 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE238, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Diffusion damping matrix      K1
Typ_LIS_OPTIONB
LIS_Consistent      ,0
LIS_Diagonalized    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane           ,0
LIS_Axisymmetric    ,1
LIS_Plane with thick,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
:E End_OF_Fnc_KEYOPT_238
:! 
:N Fnc_KEYOPT_239
:S    448,   138,   285
:T Command
:C )! Fnc_KEYOPT_239
:A Element 239
:H Hlp_E_S4.239
:D SOLID239 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID239, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Diffusion damping matrix      K1
Typ_LIS_OPTIONB
LIS_Consistent      ,0
LIS_Diagonalized    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
:E End_OF_Fnc_KEYOPT_239
:! 
:N Fnc_KEYOPT_24
:S    192,   117,    68
:T Command
:C )! Fnc_KEYOPT_24
:A Element 24
:D BEAM24 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'BEAM24'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E END
:! 
:N Fnc_KEYOPT_240
:S    448,   138,   285
:T Command
:C )! Fnc_KEYOPT_240
:A Element 240
:H Hlp_E_S4.240
:D SOLID240 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID240, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Diffusion damping matrix      K1
Typ_LIS_OPTIONB
LIS_Consistent      ,0
LIS_Diagonalized    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
:E End_OF_Fnc_KEYOPT_240
:! 
:N Fnc_KEYOPT_241
:S   1046,   138,   901
:T Command
:C )! Fnc_KEYOPT_241
:A Element 241
:D HSFLD241 element type options
:H Hlp_E_S4.241
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for HSFLD241, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Elem degrees of freedom       K1
Typ_LIS_OPTIONB
LIS_UX/UY/HDSP      ,0
LIS_UX/UY//HDSP/PRES,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Planar          ,0
LIS_Axisymmetric    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Fluid mass                    K5
Typ_LIS_OPTIONB
LIS_No fluid mass   ,0
LIS_Volume based    ,1
LIS_Surf area based ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Fluid compressibility         K6
Typ_LIS_OPTIONB
LIS_Compressible    ,0
LIS_Incompressible  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E End
:! 
:N Fnc_KEYOPT_242
:S    849,   138,   704
:T Command
:C )! Fnc_KEYOPT_242
:A Element 242
:D HSFLD241 element type options
:H Hlp_E_S4.242
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for HSFLD242, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Elem degrees of freedom       K1
Typ_LIS_OPTIONB
LIS_UX/UY/HDSP      ,0
LIS_UX/UY//HDSP/PRES,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Fluid mass                    K5
Typ_LIS_OPTIONB
LIS_No fluid mass   ,0
LIS_Volume based    ,1
LIS_Surf area based ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Fluid compressibility         K6
Typ_LIS_OPTIONB
LIS_Compressible    ,0
LIS_Incompressible  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E End
:! 
:N Fnc_KEYOPT_25
:S   1442,   133,  1302
:T Command
:C )! Fnc_KEYOPT_25
:A Element 25
:H Hlp_E_S4.25
:D PLANE25 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE25, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element coord system defined  K1
Typ_LIS_OPTIONB
LIS_Parall to global,0
LIS_By elem I-J side,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Extra displacement shapes     K2
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_If MODE > 0 temp used for     K3
Typ_LIS_OPTIONB
LIS_Thermal bending ,0
LIS_Mater prop evalu,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Extra stress output           K4
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_ET_TYPE)
 Fld_3
  Typ_Def_5
 Fld_4
  Prm_Combined stress output        K5
  Typ_Lis_OptionB
   Lis_Not calculated  ,0
   Lis_Calculated      ,1
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Extra surface output          K6
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Include face IJ ,1
LIS_Include IJ & KL ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_251
:S    286,   138,   141
:T Command
:C )! Fnc_KEYOPT_251
:A Element 251
:H Hlp_E_S4.251
:D  SURF251 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The SURF251 element type does not have any options.
!
:E End
:! 
:N Fnc_KEYOPT_252
:S    286,   138,   141
:T Command
:C )! Fnc_KEYOPT_252
:A Element 252
:H Hlp_E_S4.252
:D  SURF252 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The SURF252 element type does not have any options.
!
:E End
:! 
:N Fnc_KEYOPT_26
:S    213,   119,    70
:T Command
:C )! Fnc_KEYOPT_26
:A Element 26
:D CONTAC26 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'CONTAC26'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_26
:! 
:N Fnc_KEYOPT_263
:S    288,   139,   142
:T Command
:C )! Fnc_KEYOPT_263
:A Element 263
:H Hlp_E_S4.263
:D  REINF263 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The REINF263 element type does not have any options.
!
:E End
:! 
:N Fnc_KEYOPT_264
:S    288,   139,   142
:T Command
:C )! Fnc_KEYOPT_264
:A Element 264
:H Hlp_E_S4.264
:D  REINF264 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The REINF264 element type does not have any options.
!
:E End
:! 
:N Fnc_KEYOPT_265
:S    287,   138,   142
:T Command
:C )! Fnc_KEYOPT_265
:A Element 265
:H Hlp_E_S4.265
:D REINF265 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The REINF265 element type does not have any options.
!
:E End
:! 
:N Fnc_KEYOPT_27
:S    916,   134,   775
:T Command
:C )! Fnc_KEYOPT_27
:A Element 27
:H Hlp_E_S4.27
:D MATRIX27 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for MATRIX27, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
P_FL(FULL_ANS)
Prm_Matrix formulation            K2
Typ_LIS_OPTIONB
LIS_Symmetric matrix     ,0
LIS_Unsymmetric matrix   ,2
LIS_Skew symmetric matrix,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Real constant input defines   K3
Typ_LIS_OPTIONB
LIS_12x12 mass matrx,2 
LIS_12x12 stiff mtrx,4
P_LN(FULL_ANS)
LIS_12x12 damp matrx,5
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Include element matrix output K4
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
:E END
:! 
:N Fnc_KEYOPT_272
:S    967,   138,   822
:T Command
:C )! Fnc_KEYOPT_272
:A Element 272
:H Hlp_E_S4.272
:D SOLID272 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID272, Element Type Ref. No. %(I)_ET_TYPE%
!                       
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Number of node planes         K2
Typ_LIS_OPTIONB
LIS_ 0 - Not specified  ,0
LIS_ 1 - Axisymmetric   ,1
LIS_ 3 - General 3-D Def,3
LIS_ 4 - General 3-D Def,4
LIS_ 5 - General 3-D Def,5
LIS_ 6 - General 3-D Def,6
LIS_ 7 - General 3-D Def,7
LIS_ 8 - General 3-D Def,8
LIS_ 9 - General 3-D Def,9
LIS_10 - General 3-D Def,10
LIS_11 - General 3-D Def,11
LIS_12 - General 3-D Def,12
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!                       
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Element formulation           K6
Typ_LIS_OPTIONB
LIS_Pure displacemnt,0
LIS_Mixed U/P       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!           
:E END
:! 
:N Fnc_KEYOPT_273
:S    967,   138,   822
:T Command
:C )! Fnc_KEYOPT_273
:A Element 273
:H Hlp_E_S4.273
:D SOLID273 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID273, Element Type Ref. No. %(I)_ET_TYPE%
!                       
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Number of node planes         K2
Typ_LIS_OPTIONB
LIS_ 0 - Not specified  ,0
LIS_ 1 - Axisymmetric   ,1
LIS_ 3 - General 3-D Def,3
LIS_ 4 - General 3-D Def,4
LIS_ 5 - General 3-D Def,5
LIS_ 6 - General 3-D Def,6
LIS_ 7 - General 3-D Def,7
LIS_ 8 - General 3-D Def,8
LIS_ 9 - General 3-D Def,9
LIS_10 - General 3-D Def,10
LIS_11 - General 3-D Def,11
LIS_12 - General 3-D Def,12
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!                       
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Element formulation           K6
Typ_LIS_OPTIONB
LIS_Pure displacemnt,0
LIS_Mixed U/P       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!           
:E END
:! 
:N Fnc_KEYOPT_278
:S    635,   138,   490
:T Command
:C )! Fnc_KEYOPT_278
:A Element 278
:H Hlp_E_S4.278
:D SOLID278 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID278, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Layer construction            K3
Typ_LIS_OPTIONB
LIS_Structural solid,0
LIS_Layered solid   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Storage of layer data         K8
Typ_LIS_OPTIONB
LIS_Bottom 1st top last,0
LIS_All layers         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
:E END
:! 
:N Fnc_KEYOPT_279
:S    635,   138,   490
:T Command
:C )! Fnc_KEYOPT_279
:A Element 279
:H Hlp_E_S4.279
:D SOLID279 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID279, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Layer construction            K3
Typ_LIS_OPTIONB
LIS_Structural solid,0
LIS_Layered solid   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Storage of layer data         K8
Typ_LIS_OPTIONB
LIS_Bottom 1st top last,0
LIS_All layers         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
:E END
:! 
:N Fnc_KEYOPT_28
:S    428,   133,   288
:T Command
:C )! Fnc_KEYOPT_28
:A Element 28
:H Hlp_E_S4.28
:D SHELL28 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SHELL28, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element behavior              K1
Typ_LIS_OPTIONB
LIS_Shear panel     ,0
LIS_Twist panel     ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
:E END
:! 
:N Fnc_KEYOPT_281
:S    874,   138,   729
:T Command
:C )! Fnc_KEYOPT_281
:A Element 281
:H Hlp_E_S4.281
:D SHELL281 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SHELL281, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element stiffness             K1
Typ_LIS_OPTIONB
LIS_Bending and membrane,0
LIS_Membrane only       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Storage of layer data         K8
Typ_LIS_OPTIONB
LIS_Bottom 1st top last,0
LIS_All layers         ,1
Lis_All layers + Middle,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_User Thickness option         K9
Typ_LIS_OPTIONB
LIS_No UTHICK routine  ,0
LIS_Use UTHICK routine ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
:E END
:! 
:N Fnc_KEYOPT_285
:S    288,   139,   142
:T Command
:C )! Fnc_KEYOPT_285
:A Element 285
:H Hlp_E_S4.285
:D  SOLID285 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The SOLID285 element type does not have any options.
!
:E End
:! 
:N Fnc_KEYOPT_288
:S   2374,   137,  2230
:T Command
:C )! Fnc_KEYOPT_288
:A Element 288
:H Hlp_E_S4.288
:D PIPE288 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PIPE288, Element Type Ref. No. %(I)_ET_TYPE%
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Temperature input gradient    K1
Typ_LIS_OPTIONB
LIS_Through wall    ,0
LIS_Diametral       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Linear Form.    ,0
LIS_Quadradic Form. ,2
LIS_Cubic Form.     ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Hoop strain treatment         K4
Typ_LIS_OPTIONB
LIS_Thin shell      ,1
LIS_Thick shell     ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Internal / external pressures K6
Typ_LIS_OPTIONB
LIS_End cap loads   ,0
LIS_No end cap loads,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Section force/strain output   K7
Typ_LIS_OPTIONB
LIS_At intgr points ,0
LIS_ +Current Area  ,1
LIS_ +Basis vectors ,2
LIS_At element nodes,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Shear stress output           K8
Typ_LIS_OPTIONB
LIS_Combined State  ,0
LIS_Torsional only  ,1
LIS_Flexure only    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Stress / Strain (sect points) K9
Typ_LIS_OPTIONB
LIS_NONE            ,0
LIS_Max and Min only,1
LIS_All Section Pts ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Extrapolated (elmt/sect nds) K11
Typ_LIS_OPTIONB
LIS_NONE            ,0
LIS_Max and Min only,1
LIS_Ext Bndary nodes,2
LIS_All Section node,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
Fld_4
Prm_Hydronamic output            K12
Typ_LIS_OPTIONB
LIS_NONE            ,0
LIS_Centroidal      ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_15
Fld_4
Prm_Results file format          K15
Typ_LIS_OPTIONB
LIS_Avg (corner nds),0
LIS_No avg (int pts),1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO15)
!
:E END
:! 
:N Fnc_KEYOPT_289
:S   2152,   137,  2008
:T Command
:C )! Fnc_KEYOPT_289
:A Element 289
:H Hlp_E_S4.289
:D PIPE289 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PIPE289, Element Type Ref. No. %(I)_ET_TYPE%
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Temperature input gradient    K1
Typ_LIS_OPTIONB
LIS_Through wall    ,0
LIS_Diametral       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Hoop strain treatment         K4
Typ_LIS_OPTIONB
LIS_Thin shell      ,1
LIS_Thick shell     ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Internal / external pressures K6
Typ_LIS_OPTIONB
LIS_End cap loads   ,0
LIS_No end cap loads,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Section force/strain output   K7
Typ_LIS_OPTIONB
LIS_At intgr points ,0
LIS_ +Current Area  ,1
LIS_ +Basis vectors ,2
LIS_At element nodes,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Shear stress output           K8
Typ_LIS_OPTIONB
LIS_Combined State  ,0
LIS_Torsional only  ,1
LIS_Flexure only    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Stress / Strain (sect points) K9
Typ_LIS_OPTIONB
LIS_NONE            ,0
LIS_Max and Min only,1
LIS_All Section Pts ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Extrapolated (elmt/sect nds) K11
Typ_LIS_OPTIONB
LIS_NONE            ,0
LIS_Max and Min only,1
LIS_Ext Bndary nodes,2
LIS_All Section node,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_12
Fld_4
Prm_Hydronamic output            K12
Typ_LIS_OPTIONB
LIS_NONE            ,0
LIS_Centroidal      ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO12)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_15
Fld_4
Prm_Results file format          K15
Typ_LIS_OPTIONB
LIS_Avg (corner nds),0
LIS_No avg (int pts),1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO15)
!
:E END
:! 
:N Fnc_KEYOPT_29
:S    648,   133,   491
:T Command
:C )! Fnc_KEYOPT_29
:A Element 29
:H Hlp_E_S4.29
:D FLUID29 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID29, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Structure at elem interface   K2
Typ_LIS_OPTIONB
LIS_Structure present,0
LIS_Structure absent ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Planar           ,0
LIS_Axisymmetric     ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
:E End_OF_Fnc_KEYOPT_29
:! 
:N Fnc_KEYOPT_290
:S   1362,   138,  1217
:T Command
:C )! Fnc_KEYOPT_290
:A Element 290
:H Hlp_E_S4.290
:D ELBOW290 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for ELBOW290, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Temperature input gradient    K1
Typ_LIS_OPTIONB
LIS_Through wall    ,0
LIS_Diametral       ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Section flexibility           K2
Typ_LIS_OPTIONB
LIS_Uniform radial    ,0
LIS_Non-uniform radial,1
LIS_General distortion,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Internal / external pressures K6
Typ_LIS_OPTIONB
LIS_End cap loads   ,0
LIS_No end cap loads,1
LIS_Loads on end I  ,2
LIS_Loads on end J  ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Storage of layer data         K8
Typ_LIS_OPTIONB
LIS_Interior/exterior  ,0
LIS_All layers         ,1
Lis_All layers + Middle,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
! 
Cmd_KEYOPT
K_CM(BETA)
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Stress/Strain (elmt/sect nds) K9
Typ_LIS_OPTIONB
LIS_NONE            ,0
LIS_Max and Min only,1
LIS_All Section node,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
:E END
:! 
:N Fnc_KEYOPT_3
:S    203,   113,    67
:T Command
:C )! Fnc_KEYOPT_3
:A Element 3
:D BEAM3 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'BEAM3'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_3
:! 
:N Fnc_KEYOPT_30
:S    677,   133,   537
:T Command
:C )! Fnc_KEYOPT_30
:A Element 30
:H Hlp_E_S4.30
:D FLUID30 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID30, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Structure at elem interface   K2
Typ_LIS_OPTIONB
LIS_Structure present,0
LIS_Structure absent ,1
LIS_Present for modal,2
LIS_Present for harm ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_PML absorbing condition       K4
Typ_LIS_OPTIONB
LIS_Do not include   ,0
LIS_Include          ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
:E END
:! 
:N Fnc_KEYOPT_31
:S    426,   132,   287
:T Command
:C )! Fnc_KEYOPT_31
:A Element 31
:H Hlp_E_S4.31
:D LINK31 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for LINK31, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Radiation equation            K3
Typ_LIS_OPTIONB
LIS_Standard eqn    ,0
LIS_Empirical eqn   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
:E END
:! 
:N Fnc_KEYOPT_32
:S    209,   117,    68
:T Command
:C )! Fnc_KEYOPT_32
:A Element 32
:D LINK32 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'LINK32'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_32
:! 
:N Fnc_KEYOPT_33
:S    298,   132,   142
:T Command
:C )! Fnc_KEYOPT_33
:A Element 33
:H Hlp_E_S4.33
:D LINK33 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The LINK33 element type does not have any options.
!  
:E End_OF_Fnc_KEYOPT_33
:! 
:N Fnc_KEYOPT_34
:S    692,   132,   553
:T Command
:C )! Fnc_KEYOPT_34
:A Element 34
:H Hlp_E_S4.34
:D LINK34 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for LINK34, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Evaluation of film coeff      K2
Typ_LIS_OPTIONB
LIS_Average of TI&TJ,0
LIS_Greater of TI&TJ,1
LIS_Lesser of TI&TJ ,2
LIS_Difference TI&TJ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Film coef + scale factor from K3
Typ_LIS_OPTIONB
LIS_Standard input  ,0
LIS_SFE command     ,2
LIS_Discont empircal,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
:E END
:! 
:N Fnc_KEYOPT_35
:S    625,   133,   485
:T Command
:C )! Fnc_KEYOPT_35
:A Element 35
:H Hlp_E_S4.35
:D PLANE35 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE35, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Specific heat matrix          K1
Typ_LIS_OPTIONB
LIS_Consistent      ,0
LIS_Diagonal        ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane           ,0
LIS_Axisymmetric    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
:E END
:! 
:N Fnc_KEYOPT_36
:S    300,   133,   143
:T Command
:C )! Fnc_KEYOPT_36
:A Element 36
:H Hlp_E_S4.36
:D SOURC36 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The SOURC36 element type does not have any options.
!  
:E End_OF_Fnc_KEYOPT_36
:! 
:N Fnc_KEYOPT_37
:S   2096,   134,  1955
:T Command
:C )! Fnc_KEYOPT_37
:A Element 37
:H Hlp_E_S4.37
:D COMBIN37 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for COMBIN37, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Control is based on           K1
Typ_LIS_OPTIONB
LIS_Value UK-UL     ,0
LIS_1st time deriv  ,2
LIS_2nd time deriv  ,3
LIS_Integral f(time),4
LIS_Time value      ,5
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_DOF for control nodes K + L   K2
Typ_LIS_OPTIONB
LIS_UX              ,0
LIS_UY              ,2
LIS_UZ              ,3
LIS_ROTX            ,4
LIS_ROTY            ,5
LIS_ROTZ            ,6
LIS_PRES            ,7
LIS_TEMP            ,8
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_DOF for active nodes I + J    K3
Typ_LIS_OPTIONB
LIS_UX              ,0
LIS_UY              ,2
LIS_UZ              ,3
LIS_ROTX            ,4
LIS_ROTY            ,5
LIS_ROTZ            ,6
LIS_PRES            ,7
LIS_TEMP            ,8
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_ON-OFF range behavior         K4
Typ_LIS_OPTIONB
LIS_Overlaping rnges,0
LIS_Unique ranges   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_ON-OFF position behavior      K5
Typ_LIS_OPTIONB
LIS_OFF-either-ON   ,0 
LIS_ON-either-OFF   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_RVAL in RVMOD function is     K6
Typ_LIS_OPTIONB
LIS_Stiffness STIF  ,0
LIS_Dampng coef DAMP,2
LIS_Mass at J MASJ  ,3
LIS_On control ONVAL,4
LIS_Off cntrl OFFVAL,5
LIS_Ele load AFORCE ,6
LIS_Mass at I MASI  ,7
LIS_Sldng for FLSIDE,8
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Nonlin behavior defined by    K9
Typ_LIS_OPTIONB
LIS_RVMOD expression,0
LIS_User subr USERRC,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
:E END
:! 
:N Fnc_KEYOPT_38
:S    649,   133,   509
:T Command
:C )! Fnc_KEYOPT_38
:A Element 38
:H Hlp_E_S4.38
:D FLUID38 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for FLUID38, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Cross section of cylinders    K3 
Typ_LIS_OPTIONB
LIS_Circular        ,0
LIS_Arbitrary       ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Flow axis parallel to         K6
Typ_LIS_OPTIONB
LIS_Nodal Y axis    ,0
LIS_Nodal X axis    ,1
LIS_Nodal Z axis    ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_39
:S   1448,   134,  1290
:T Command
:C )! Fnc_KEYOPT_39
:A Element 39
:H Hlp_E_S4.39
:D COMBIN39 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for COMBIN39, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Unloading path                K1
Typ_LIS_OPTIONB
LIS_On loading curve,0
LIS_Par slope @ orig,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Elem behavior compress load   K2
Typ_LIS_OPTIONB
LIS_On compres curve,0
LIS_No comprs resist,1
LIS_Tens then comprs,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Elem degree(s) of freedom 1D  K3
Typ_LIS_OPTIONB
LIS_UX              ,0
LIS_UY              ,2
LIS_UZ              ,3
LIS_ROTX            ,4
LIS_ROTY            ,5
LIS_ROTZ            ,6
LIS_PRES            ,7
LIS_TEMP            ,8
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Elem DOF(s) 2D or 3D          K4
Typ_LIS_OPTIONB
LIS_Use K3 option   ,0
LIS_UX/UY/UZ        ,1
LIS_ROTX/ROTY/ROTZ  ,2
LIS_UX/UY           ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Element output                K6
Typ_LIS_OPTIONB
LIS_Basic output    ,0
LIS_Force-defl table,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
:E End_OF_Fnc_KEYOPT_39
:! 
:N Fnc_KEYOPT_4
:S   1394,   127,  1244
:T Command
:C )! Fnc_KEYOPT_4
:A Element 4
:H Hlp_E_S4.4
:D BEAM4 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_                *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Options for BEAM4, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
P_FL(FULL_ANS)
Prm_Stress stiffening option      K2
Typ_LIS_OPTIONB
LIS_Main matrix     ,0
LIS_Consistent matrx,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Member force + moment output  K6
Typ_LIS_OPTIONB
LIS_Exclude output  ,0
LIS_Include output  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
md_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
P_FL(FULL_ANS)
Prm_Gyroscopic damping matrix     K7
Typ_LIS_OPTIONB
LIS_No matrix       ,0
LIS_Calculate matrix,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Output at extra intermed pts  K9
Typ_LIS_OPTIONB
LIS_No intermed pts ,0
LIS_1 intermed pt   ,1
LIS_3 intermed pts  ,3
LIS_5 intermed pts  ,5
LIS_7 intermed pts  ,7
LIS_9 intermed pts  ,9
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_10
Fld_4
Prm_Load offset in terms of      K10
Typ_LIS_OPTIONB
LIS_Length units    ,0
LIS_Length ratio    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO10)
!
:E End_OF_Fnc_KEYOPT_4
:! 
:N Fnc_KEYOPT_40
:S   1213,   134,  1072
:T Command
:C )! Fnc_KEYOPT_40
:A Element 40
:H Hlp_E_S4.40
:D COMBIN40 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for COMBIN40, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Gap behavior                  K1
Typ_LIS_OPTIONB
LIS_Standard gap    ,0
LIS_Locks on contact,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element degree(s) of freedom  K3
Typ_LIS_OPTIONB
LIS_UX              ,0
LIS_UY              ,2
LIS_UZ              ,3
LIS_ROTX            ,4
LIS_ROTY            ,5
LIS_ROTZ            ,6
P_LN(FULL_ANS)
LIS_PRES            ,7
P_LN(FULL_ANS)
LIS_TEMP            ,8
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Produce element output for    K4
Typ_LIS_OPTIONB
LIS_All gap conditns,0
LIS_Closed gap only ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Mass location                 K6
Typ_LIS_OPTIONB
LIS_Mass at node I  ,0 
LIS_Between I & J   ,1
LIS_Mass at node J  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_41
:S   1262,   133,  1122
:T Command
:C )! Fnc_KEYOPT_41
:A Element 41
:H Hlp_E_S4.41
:D SHELL41 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SHELL41, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element stiffness behavior    K1
Typ_LIS_OPTIONB
LIS_Tensn and comprs,0
LIS_Tension only    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Extra displacement shapes     K2
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Extra stress output           K4
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Member force output           K5
Typ_LIS_OPTIONB
LIS_Exclude output  ,0
LIS_Include output  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Edge output (isotropic mat)   K6
Typ_LIS_OPTIONB
LIS_No edge output  ,0
LIS_Mid-pt I-J side ,1
LIS_Mid-pts I-J&K-L ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_42
:S   1419,   133,  1279
:T Command
:C )! Fnc_KEYOPT_42
:A Element 42
:H Hlp_E_S4.42
:D PLANE42 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_                *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Options for PLANE42, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element coord system defined  K1
Typ_LIS_OPTIONB
LIS_Parall to global,0
LIS_By elem I-J side,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Extra displacement shapes     K2
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane stress    ,0
LIS_Axisymmetric    ,1
LIS_Plane strain    ,2
LIS_Plane strs w/thk,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra stress output           K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Extra surface output          K6
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_On face IJ      ,1
LIS_On faces IJ & KL,2
P_LN(FULL_ANS)
LIS_Integration pts ,3
LIS_Non-0 pres faces,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_43
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_43
:A Element 43
:D SHELL43 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL43'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_43
:! 
:N Fnc_KEYOPT_44
:S    192,   117,    68
:T Command
:C )! Fnc_KEYOPT_44
:A Element 44
:D BEAM44 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'BEAM44'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E END
:! 
:N Fnc_KEYOPT_45
:S   1373,   133,  1233
:T Command
:C )! Fnc_KEYOPT_45
:A Element 45
:H Hlp_E_S4.45
:D SOLID45 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_                *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Options for SOLID45, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Extra displacement shapes     K1
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Integration option            K2
Typ_LIS_OPTIONB
LIS_Full Integration,0
LIS_Reduced integr  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element coord system defined  K4
Typ_LIS_OPTIONB
LIS_Parall to global,0
LIS_By elem I-J side,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Extra surface output          K6
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Incl face IJNM  ,1
LIS_Incl IJNM & KLPO,2
P_LN(FULL_ANS)
LIS_NL at integ pts ,3
LIS_Non-0 pres faces,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_46
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_46
:A Element 46
:D SOLID46 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID46'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_46
:! 
:N Fnc_KEYOPT_47
:S    661,   133,   521
:T Command
:C )! Fnc_KEYOPT_47
:A Element 47
:H Hlp_E_S4.47
:D INFIN47 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for INFIN47, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element degree(s) of freedom  K1
Typ_LIS_OPTIONB
P_LN(ELECMAG+mdl2d)
LIS_MAG             ,0
P_LN(FULL_ANS)
LIS_TEMP            ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Coefficient matrix            K2
Typ_LIS_OPTIONB
LIS_Symmetrize matrx,0
LIS_As generated    ,1 
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
:E END
:! 
:N Fnc_KEYOPT_48
:S    213,   119,    70
:T Command
:C )! Fnc_KEYOPT_48
:A Element 48
:D CONTAC48 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'CONTAC48'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_48
:! 
:N Fnc_KEYOPT_49
:S    213,   119,    70
:T Command
:C )! Fnc_KEYOPT_49
:A Element 49
:D CONTAC49 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'CONTAC49'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_49
:! 
:N Fnc_KEYOPT_5
:S   1154,   128,  1019
:T Command
:C )! Fnc_KEYOPT_5
:A Element 5
:H Hlp_E_S4.5
:D SOLID5 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_    Options for SOLID5, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element degree(s) of freedom  K1
 Typ_LIS_OPTIONB
  P_LN(FULL_ANS+E3)
  LIS_U TEMP VOLT MAG,0
  P_LN(FULL_ANS+e3)
  LIS_U TEMP VOLT ,0
  P_LN(FULL_ANS+E3)
  LIS_TEMP  VOLT  MAG ,1
  P_LN(FULL_ANS+e3)
  LIS_TEMP  VOLT      ,1
  P_LN(FULL_ANS)
  LIS_UX  UY  UZ      ,2
  P_LN(FULL_ANS)
  LIS_UX  UY  UZ  VOLT,3
  P_LN(FULL_ANS)
  LIS_TEMP            ,8
  LIS_VOLT            ,9
  P_LN(E3)
  LIS_MAG             ,10
 Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
P_FL(FULL_ANS)
Prm_Include extra shapes          K3
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
:E END
:! 
:N Fnc_KEYOPT_50
:S   1054,   135,   912
:T Command
:C )! Fnc_KEYOPT_50
:A Element 50
:H Hlp_E_S4.50
:D  MATRIX50 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for MATRIX50, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element behavior              K1
Typ_LIS_OPTIONB
P_LN(FULL_ANS)
LIS_Normal substruct,0
LIS_Radiation substr,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_NLGEOM load vector update     K3
Typ_LIS_OPTIONB
P_LN(FULL_ANS)
LIS_Rotate vectors  ,0
LIS_Do not rotate   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_NLGEOM constrained substruct  K4
Typ_LIS_OPTIONB
LIS_Unconstrained   ,0
LIS_Constrained     ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Nodal force output            K6
Typ_LIS_OPTIONB
LIS_Exclude output  ,0
LIS_Include output  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_51
:S    279,   134,   138
:T Command
:C )! Fnc_KEYOPT_51
:A Element 51
:H Hlp_E_S4.51
:D  SHELL51 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The SHELL51 element type is no longer supported.
!
:E END
:! 
:N Fnc_KEYOPT_52
:S   1457,   135,  1315
:T Command
:C )! Fnc_KEYOPT_52
:A Element 52
:H Hlp_E_S4.52
:D  CONTAC52 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CONTAC52, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
P_FL(FULL_ANS)
Prm_Sticking stiff only if MU>0   K1
Typ_LIS_OPTIONB
LIS_Elas coulomb frc,0 
LIS_Rigid coulmb frc,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
K_CM(BETA)
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Contact algorithm             K2
Typ_LIS_OPTIONB
LIS_Penalty function,0
LIS_Penal & Lagrange,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Weak spring across open gap   K3
Typ_LIS_OPTIONB
LIS_Do not use sprng,0
LIS_Use weak spring ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Basis for gap size            K4
Typ_LIS_OPTIONB
LIS_Real const   GAP,0
LIS_Initial node loc,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Goal of contact time predict  K7
Typ_LIS_OPTIONB
LIS_Min time incremt,0
LIS_Reasnbl time inc,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
!Cmd_KEYOPT
!Fld_2
!Typ_Def_*PAR(_ET_TYPE)
!Fld_3
!Typ_Def_11
!Fld_4
!Prm_Type of stiffness matrix     K11
!Typ_LIS_OPTIONB
!LIS_Symmetrical     ,0
!LIS_Unsymmetrical   ,1
!Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!
:E END
:! 
:N Fnc_KEYOPT_53
:S   1544,   134,  1386
:T Command
:C )! Fnc_KEYOPT_53
:A Element 53
:H Hlp_E_S4.53
:D  PLANE53 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE53, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element degree(s) of freedom  K1
Typ_LIS_OPTIONB
LIS_AZ              ,0
LIS_AZ  VOLT        ,1
LIS_AZ  CURR        ,2
LIS_AZ  CURR  EMF   ,3
LIS_AZ CURR EMF Coil,3
LIS_AZ CURR EMF Cond,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Element conventional velocity K2
Typ_LIS_OPTIONB
LIS_No velo effects ,0
LIS_Convent. velo   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane           ,0
LIS_Axisymmetric    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element coord system defined  K4
Typ_LIS_OPTIONB
LIS_Parall to global,0
LIS_By elem I-J side,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Magnetic force stored for     K7
Typ_LIS_OPTIONB
LIS_Midside node ele,0
LIS_Non-midside elem,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
:E END_OF_Fnc_KEYOPT_53
:! 
:N Fnc_KEYOPT_54
:S    193,   118,    68
:T Command
:C )! Fnc_KEYOPT_54
:A Element 54
:D  BEAM54 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'BEAM54'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E END
:! 
:N Fnc_KEYOPT_55
:S   1340,   134,  1199
:T Command
:C )! Fnc_KEYOPT_55
:A Element 55
:H Hlp_E_S4.55
:D  PLANE55 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE55, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Evaluate film coefficient at  K1
Typ_LIS_OPTIONB
LIS_Avg film temp   ,0
LIS_Ele surface temp,1
LIS_Fluid bulk temp ,2
LIS_Differental temp,3 
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane           ,0
LIS_Axisymmetric    ,1
LIS_Plane Thickness ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element coord system defined  K4
Typ_LIS_OPTIONB
LIS_Parall to global,0
LIS_By elem I-J side,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
P_FL(FULL_ANS)
Prm_Mass transport effects        K8
Typ_LIS_OPTIONB
LIS_Excl mass transp,0
LIS_Incl mass transp,1
LIS_Incl w/heat flow,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
P_FL(FULL_ANS)
Prm_Nonlinear fluid flow option   K9
Typ_LIS_OPTIONB
LIS_Std heat transfr,0
LIS_Nonlin fluid flo,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
:E END
:! 
:N Fnc_KEYOPT_56
:S    264,   119,   138
:T Command
:C )! Fnc_KEYOPT_56
:A Element 56
:D  HYPER56 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The HYPER56 element type is no longer supported.
!
:E End
:! 
:N Fnc_KEYOPT_57
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_57
:A Element 57
:D SHELL57 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL57'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_57
:! 
:N Fnc_KEYOPT_58
:S    264,   119,   138
:T Command
:C )! Fnc_KEYOPT_58
:A Element 56
:D  HYPER58 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The HYPER58 element type is no longer supported.
!
:E End
:! 
:N Fnc_KEYOPT_59
:S   1703,   133,  1563
:T Command
:C )! Fnc_KEYOPT_59
:A Element 59
:H Hlp_E_S4.59
:D  PIPE59 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PIPE59, Element Type Ref. No. %(I)_ET_TYPE%
!   
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element behavior              K1
Typ_LIS_OPTIONB
LIS_Pipe element    ,0 
LIS_Cable element   ,1
LIS_Pipe w/twist-ten,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Load vector and mass matrix   K2
Typ_LIS_OPTIONB
LIS_Consistent      ,0
LIS_Reduced         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Temperature representation    K3
Typ_LIS_OPTIONB
LIS_Thru-wall gradnt,0
LIS_Diametral gradnt,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Wave force modifications      K5
Typ_LIS_OPTIONB
LIS_Actual wave loca,0
LIS_Ele at wave peak,1
LIS_Upwrd vel on ele,2
LIS_Dwnwd vel on ele,3
LIS_Ele at wave trou,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Member force + moment outpt   K6
Typ_LIS_OPTIONB
LIS_Exclude output  ,0
LIS_Include output  ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Extra element output          K7
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Hydryn integ pts,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
Prm_Use of PX, PY, PZ pressures   K9
Typ_LIS_OPTIONB
LIS_Use normal comp ,0
LIS_Use full press  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!
:E END
:! 
:N Fnc_KEYOPT_60
:S    209,   117,    68
:T Command
:C )! Fnc_KEYOPT_60
:A Element 60
:D PIPE60 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PIPE60'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_60
:! 
:N Fnc_KEYOPT_61
:S   1113,   134,   972
:T Command
:C )! Fnc_KEYOPT_61
:A Element 61
:H Hlp_E_S4.61
:D  SHELL61 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SHELL61, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_If MODE > 0 temp used for     K1
Typ_LIS_OPTIONB
LIS_Thermal bending ,0
LIS_Materl prop eval,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Extra displacement shapes     K3
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Member force + moment output  K4
Typ_LIS_OPTIONB
LIS_Exclude output  ,0
LIS_Include output  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Solution output at            K6
Typ_LIS_OPTIONB
LIS_Mid-length only ,0
LIS_Ends & 1 int pt ,1
LIS_Ends & 3 int pts,3 
LIS_Ends & 5 int pts,5
LIS_Ends & 7 int pts,7
LIS_Ends & 9 int pts,9
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_62
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_62
:A Element 62
:D SOLID62 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID62'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_62
:! 
:N Fnc_KEYOPT_63
:S   2113,   134,  1955
:T Command
:C )! Fnc_KEYOPT_63
:A Element 63
:H Hlp_E_S4.63
:D  SHELL63 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SHELL63, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element stiffness             K1
Typ_LIS_OPTIONB
LIS_Bnding and membr,0
LIS_Membrane only   ,1
LIS_Bending only    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
P_FL(FULL_ANS)
Prm_Stress stiffening option      K2
Typ_LIS_OPTIONB
LIS_Main matrix     ,0
LIS_Consistent matrx,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Extra displacement shapes     K3
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
LIS_Include & Allman,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra stress output           K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Pressure loading              K6
Typ_LIS_OPTIONB
LIS_Reduced loading ,0
LIS_Consistent load ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Mass matrix                   K7
Typ_LIS_OPTIONB
LIS_Consistent      ,0
LIS_Reduced         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Stiffness matrix              K8
Typ_LIS_OPTIONB
LIS_Consistent      ,0
LIS_Reduced         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_9
Fld_4
P_FL(FULL_ANS)
Prm_Element coord sys defined by  K9
Typ_LIS_OPTIONB
LIS_Elem orientation,0
LIS_User subr USERAN,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP9)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Store Mid data on rst file   K11
Typ_LIS_OPTIONB
LIS_NO              ,0
LIS_YES             ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
!
:E End_OF_Fnc_KEYOPT_63
:! 
:N Fnc_KEYOPT_64
:S    279,   134,   138
:T Command
:C )! Fnc_KEYOPT_64
:A Element 64
:H Hlp_E_S4.64
:D  SOLID64 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The SOLID64 element type is no longer supported.
!
:E END
:! 
:N Fnc_KEYOPT_65
:S   1484,   134,  1326
:T Command
:C )! Fnc_KEYOPT_65
:A Element 65
:H Hlp_E_S4.65
:D  SOLID65 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID65, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Extra displacement shapes     K1
Typ_LIS_OPTIONB
LIS_Include         ,0
LIS_Exclude         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Crushed, unreinforced         K3
Typ_LIS_OptionB
LIS_Base            ,0
LIS_No mass or loads,1
LIS_N-R load vector ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
! 
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Concrete linear solu output   K5
Typ_LIS_OPTIONB
LIS_At centroid only,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Concrete nonlin solu output   K6
Typ_LIS_OPTIONB
LIS_Centroid only   ,0
LIS_Integration pts ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
Prm_Stress relax after cracking   K7
Typ_LIS_OPTIONB
LIS_Exclude        ,0
LIS_Include        ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
Prm_Totally crushed warning       K8
Typ_LIS_OptionB
LIS_Print           ,0
LIS_Suppress        ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!  
:E End_OF_Fnc_KEYOPT_65
:! 
:N Fnc_KEYOPT_66
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_66
:A Element 66
:D FLUID66 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'FLUID66'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_66
:! 
:N Fnc_KEYOPT_67
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_67
:A Element 67
:D PLANE67 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'PLANE67'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_67
:! 
:N Fnc_KEYOPT_68
:S    298,   132,   142
:T Command
:C )! Fnc_KEYOPT_68
:A Element 68
:H Hlp_E_S4.68
:D LINK68 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The LINK68 element type does not have any options.
!  
:E End_OF_Fnc_KEYOPT_68
:! 
:N Fnc_KEYOPT_69
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_69
:A Element 69
:D SOLID69 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SOLID69'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_69
:! 
:N Fnc_KEYOPT_7
:S    207,   115,    69
:T Command
:C )! Fnc_KEYOPT_7
:A Element 7
:D COMBIN7 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'COMBIN7'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_7
:! 
:N Fnc_KEYOPT_70
:S   1096,   134,   955
:T Command
:C )! Fnc_KEYOPT_70
:A Element 70
:H Hlp_E_S4.70
:D  SOLID70 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID70, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Evaluation of film coef at    K2
Typ_LIS_OPTIONB
LIS_Avg film temp   ,0
LIS_Ele surface temp,1
LIS_Fluid bulk temp ,2
LIS_Differntial temp,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Element coord system defined  K4
Typ_LIS_OPTIONB
LIS_Parall to global,0
LIS_By elem I-J side,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_7
Fld_4
P_FL(FULL_ANS)
Prm_Nonlinear fluid flow option   K7
Typ_LIS_OPTIONB
LIS_Std heat transfr,0
LIS_Nonlin fluid flo,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP7)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_8
Fld_4
P_FL(FULL_ANS)
Prm_Mass transport effects        K8
Typ_LIS_OPTIONB
LIS_Exclude         ,0
LIS_Include         ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP8)
!
:E END
:! 
:N Fnc_KEYOPT_71
:S    605,   133,   465
:T Command
:C )! Fnc_KEYOPT_71
:A Element 71
:H Hlp_E_S4.71
:D  MASS71 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for MASS71, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Interpret real const CON1 as  K3
Typ_LIS_OPTIONB
LIS_Volume          ,0
LIS_Therm capacitnce,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Temp depnd. heat generation   K4
Typ_LIS_OPTIONB
LIS_NO          ,0
LIS_YES,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
:E END
:! 
:N Fnc_KEYOPT_74
:S    264,   119,   138
:T Command
:C )! Fnc_KEYOPT_74
:A Element 74
:D  HYPER74 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The HYPER74 element type is no longer supported.
!
:E End
:! 
:N Fnc_KEYOPT_75
:S    300,   133,   143
:T Command
:C )! Fnc_KEYOPT_75
:A Element 75
:H Hlp_E_S4.75
:D PLANE75 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The PLANE75 element type does not have any options.
!  
:E End_OF_Fnc_KEYOPT_75
:! 
:N Fnc_KEYOPT_77
:S    649,   134,   508
:T Command
:C )! Fnc_KEYOPT_77
:A Element 77
:H Hlp_E_S4.77
:D  PLANE77 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE77, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Specific heat matrix          K1
Typ_LIS_OPTIONB
LIS_Consistent      ,0
LIS_Diagonalized    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane           ,0
LIS_Axisymmetric    ,1
LIS_Plane Thickness ,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
:E END
:! 
:N Fnc_KEYOPT_78
:S    429,   134,   288
:T Command
:C )! Fnc_KEYOPT_78
:A Element 78
:H Hlp_E_S4.78
:D  PLANE78 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE78, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Specific heat matrix          K1
Typ_LIS_OPTIONB
LIS_Consistent      ,0
LIS_Diagonalized    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
:E END
:! 
:N Fnc_KEYOPT_79
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_79
:A Element 79
:D FLUID79 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'FLUID79'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_79
:! 
:N Fnc_KEYOPT_8
:S    203,   113,    67
:T Command
:C )! Fnc_KEYOPT_8
:A Element 8
:D LINK8 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'LINK8'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_8
:! 
:N Fnc_KEYOPT_80
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_80
:A Element 80
:D FLUID80 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'FLUID80'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_80
:! 
:N Fnc_KEYOPT_81
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_81
:A Element 81
:D FLUID81 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'FLUID81'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_81
:! 
:N Fnc_KEYOPT_82
:S   1010,   133,   870
:T Command
:C )! Fnc_KEYOPT_82
:A Element 82
:H Hlp_E_S4.82
:D PLANE82 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_                *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Options for PLANE82, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_Element behavior              K3
Typ_LIS_OPTIONB
LIS_Plane stress    ,0
LIS_Axisymmetric    ,1
LIS_Plane strain    ,2
LIS_Plane strs w/thk,3
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Extra surface output          K6
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Face IJ         ,1
LIS_Faces IJ & KL   ,2
LIS_Integration pts ,3
LIS_Non-0 pres faces,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_83
:S   1245,   133,  1105
:T Command
:C )! Fnc_KEYOPT_83
:A Element 83
:H Hlp_E_S4.83
:D PLANE83 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for PLANE83, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element coord system defined  K1
Typ_LIS_OPTIONB
LIS_Parall to global,0
LIS_By elem I-J side,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
Prm_If MODE > 0 temp used for     K3
Typ_LIS_OPTIONB
LIS_Thermal bending ,0
LIS_Matl prop eval  ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_4
Fld_4
Prm_Extra element output          K4
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP4)
!
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_ET_TYPE)
 Fld_3
  Typ_Def_5
 Fld_4
  Prm_Combined stress output        K5
  Typ_Lis_OptionB
   Lis_Not calculated  ,0
   Lis_Calculated      ,1
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Extra surface output          K6
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_On face IJ      ,1
LIS_On faces IJ & KL,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_84
:S    264,   119,   138
:T Command
:C )! Fnc_KEYOPT_84
:A Element 84
:D  HYPER84 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The HYPER84 element type is no longer supported.
!
:E End
:! 
:N Fnc_KEYOPT_86
:S    264,   119,   138
:T Command
:C )! Fnc_KEYOPT_86
:A Element 86
:D  HYPER86 element type options
Inp_NoApply
Cmd_)!
Fld_0
Typ_Lab
Prm_                       - Note -
Fld_0
Typ_Lab
Prm_The HYPER86 element type is no longer supported.
!
:E End
:! 
:N Fnc_KEYOPT_87
:S    625,   133,   485
:T Command
:C )! Fnc_KEYOPT_87
:A Element 87
:H Hlp_E_S4.87
:D SOLID87 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID87, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Specific heat matrix          K1
Typ_LIS_OPTIONB
LIS_Consistent      ,0
LIS_Diagonalized    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Surface convection matrix     K5
Typ_LIS_OPTIONB
LIS_Diagonalized    ,0
LIS_Consistent      ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
:E END
:! 
:N Fnc_KEYOPT_88
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_88
:A Element 88
:D VISCO88 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'VISCO88'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_88
:! 
:N Fnc_KEYOPT_89
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_89
:A Element 89
:D VISCO89 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'VISCO89'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_89
:! 
:N Fnc_KEYOPT_9
:S    668,   128,   517
:T Command
:C )! Fnc_KEYOPT_9
:A Element 9
:H Hlp_E_S4.9
:D INFIN9 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for INFIN9, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Elem degree(s) of freedom     K1
Typ_LIS_OPTIONB
P_LN(ELECMAG)
LIS_AZ              ,0
P_LN(FULL_ANS)
LIS_TEMP            ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Coeffcnt matrix formation     K2
Typ_LIS_OPTIONB
LIS_Symmetrize matrx,0
LIS_Use as generated,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!  
:E End_OF_Fnc_KEYOPT_9
:! 
:N Fnc_KEYOPT_90
:S    428,   133,   288
:T Command
:C )! Fnc_KEYOPT_90
:A Element 90
:H Hlp_E_S4.90
:D SOLID90 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID90, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Specific heat matrix          K1
Typ_LIS_OPTIONB
LIS_Consistent      ,0
LIS_Diagonalized    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
:E END
:! 
:N Fnc_KEYOPT_91
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_91
:A Element 91
:D SHELL91 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL91'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_91
:! 
:N Fnc_KEYOPT_92
:S    698,   133,   558
:T Command
:C )! Fnc_KEYOPT_92
:A Element 92
:H Hlp_E_S4.92
:D SOLID92 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_                *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Options for SOLID92, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Extra surface output          K6
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Non-0 pres faces,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
:E END
:! 
:N Fnc_KEYOPT_93
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_93
:A Element 93
:D SHELL93 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL93'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_93
:! 
:N Fnc_KEYOPT_94
:S    772,   135,   630
:T Command
:C )! Fnc_KEYOPT_94
:A Element 94
:H Hlp_E_S4.94
:D  CIRCU94  element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CIRCU94, Element Type Ref. No. %(I)_ET_TYPE%
! 
Cmd_KEYOPT,%_ET_TYPE%,1
 Fld_2
 Prm_Circuit Component Type      K1
  Typ_Lis
   Lis_Resistor                 ,0
   Lis_Inductor                 ,1
   Lis_Capacitor                ,2
   Lis_Ind Curr Src             ,3
   Lis_Ind Vltg Src             ,4
   Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
 Fld_4
 Prm_Electric charge reaction sign K6
  Typ_LIS_OPTIONB
  Lis_Negative ,0
  Lis_Positive ,1
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cal_Fnc_KEYOPT_94a,2,eq,3,1
Cal_Fnc_KEYOPT_94a,2,eq,4,1
:E END
:! 
:N Fnc_KEYOPT_94a
:S    503,   137,   359
:T Command
:C )! Fnc_KEYOPT_94a
:A Element 94
:H Hlp_E_S4.94
:D  CIRCU94  element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for CIRCU94, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT,%_ET_TYPE%,2
 Fld_2
 Prm_Body Loads                  K2
  Typ_Lis
  Lis_DC or AC Harmonic load,0
  Lis_Sinusoidal load       ,1
  Lis_Pulse load            ,2
  Lis_Exponential load      ,3
  Lis_Piecewise Linear load ,4
  Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
:E END
:! 
:N Fnc_KEYOPT_95
:S   1175,   133,  1035
:T Command
:C )! Fnc_KEYOPT_95
:A Element 95
:H Hlp_E_S4.95
:D SOLID95 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_                *** ARCHIVE ***
Fld_0
Typ_Lab
Prm_Options for SOLID95, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element Coordinate System     K1
Typ_LIS_OPTIONB
LIS_Solid Orientat'n,0
LIS_Shell Orientat'n,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_6
Fld_4
Prm_Extra surface output          K6
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_On face IJMN    ,1
LIS_Faces IJNM&KLPO ,2
P_LN(FULL_ANS)
LIS_Integration pts ,3
LIS_Non-0 pres faces,4
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP6)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_11
Fld_4
Prm_Integration Rule             K11
Typ_LIS_OPTIONB
LIS_14 Point Rule   ,0
LIS_2x2x2 Intg Rule ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KO11)
:E END
:! 
:N Fnc_KEYOPT_96
:S    470,   133,   313
:T Command
:C )! Fnc_KEYOPT_96
:A Element 96
:H Hlp_E_S4.96
:D SOLID96 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID96, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal mag field ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!  
:E End_OF_Fnc_KEYOPT_96
:! 
:N Fnc_KEYOPT_97
:S   1057,   253,   780
:T Command
:C )! Fnc_KEYOPT_97
:C )/nopr
:C )_z2=1
:C )*GET,_z1,ETYP,_ET_TYPE,ATTR,KOP1
:C )*if,_z1,ge,5,then
:C )_z2=_z1
:C )_z1=1
:C )*endif
:C )/go
:A Element 97
:H Hlp_E_S4.97
:D SOLID97 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID97, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Element degrees of freedom    K1
Typ_LIS_OPTIONB
LIS_AX  AY  AZ      ,0
LIS_AX  AY  AZ  VOLT,1
LIS_AX AY AZ CURR   ,2
LIS_AX AY AZ CUR EMF,3
LIS_AX AY AZ CUR VLT,4
Def_*PAR(_z1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_2
Fld_4
Prm_Element conventional velocity K2
Typ_LIS_OPTIONB
LIS_No velo effects ,0
LIS_Convent. velo   ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP2)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Integration pts ,1
LIS_Nodal mag field ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
Cal_Fnc_KEYOPT_97a,4,eq,1,1
:E End_OF_Fnc_KEYOPT_97
:! 
:N Fnc_KEYOPT_97a
:S    460,   135,   300
:T Command
:C )! Fnc_KEYOPT_97a
:A Element 97
:H Hlp_E_S4.97
:D SOLID97 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Additional Element Options, Element Type Ref. No. %(I)_ET_TYPE%
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Solenoidal Load Formulation
Typ_LIS_RadioB
LIS_No solenoidal load ,1
LIS_Symmetric (nonlinear),5
LIS_Unsymmetric (linear),6
Def_*PAR(_z2)
:E End_OF_Fnc_KEYOPT_97a
:! 
:N Fnc_KEYOPT_98
:S   1116,   133,   976
:T Command
:C )! Fnc_KEYOPT_98
:A Element 98
:H Hlp_E_S4.98
:D SOLID98 element type options
Inp_NoApply
Fld_0
Typ_Lab
Prm_Options for SOLID98, Element Type Ref. No. %(I)_ET_TYPE%
!  
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_1
Fld_4
Prm_Degree of freedom selection   K1
 Typ_LIS_OPTIONB
  P_LN(FULL_ANS+E3)
  LIS_UX UY UZ T VT MG,0
  P_LN(FULL_ANS+E3)
  LIS_TEMP  VOLT  MAG ,1
  P_LN(FULL_ANS+e3)
  LIS_VOLT  MAG       ,1
  P_LN(FULL_ANS)
  LIS_UX  UY  UZ      ,2
  P_LN(FULL_ANS)
  LIS_UX  UY  UZ  VOLT,3
  P_LN(FULL_ANS)
  LIS_TEMP            ,8
  LIS_VOLT            ,9
  P_LN(E3)
  LIS_MAG             ,10
 Def_*GET(ETYP,_ET_TYPE,ATTR,KOP1)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_3
Fld_4
P_FL(FULL_ANS)
Prm_Specific heat matrix          K3
Typ_LIS_OPTIONB
LIS_Consistent      ,0
LIS_Diagonalized    ,1
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP3)
!
Cmd_KEYOPT
Fld_2
Typ_Def_*PAR(_ET_TYPE)
Fld_3
Typ_Def_5
Fld_4
Prm_Extra element output          K5
Typ_LIS_OPTIONB
LIS_No extra output ,0
LIS_Nodal stress    ,2
Def_*GET(ETYP,_ET_TYPE,ATTR,KOP5)
!
:E END
:! 
:N Fnc_KEYOPT_99
:S    211,   118,    69
:T Command
:C )! Fnc_KEYOPT_99
:A Element 99
:D SHELL99 element type options
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z9,'SHELL99'
Cmd_)/GO
Cal_Fnc_etyp_UNDOC
:E End_OF_Fnc_KEYOPT_99
:! 
:N Fnc_KFILL
:S    357,   177,   173
:T Cmd_P
:C )! Fnc_KFILL
:A Fill between KPs
:D Fill between KPs
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,2
:C )/GO
:K #(PREP7)
:H Hlp_C_KFILL
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
Fld_2
 Typ_KEYP
  Min_2
  Cnt_2
  PCN_0
  PFM_2
 Prm_[KFILL]  Pick or enter beginning and ending keypoints for fill
Cmd_)/GO
Cal_Fnc_KFILL2
:E END
:! 
:N Fnc_KFILL2
:S    608,   149,   452
:T Command
:C )! Fnc_KFILL2
:A Fill between KPs
:D Create KP by Filling between KPs
:K #(PREP7)
:H Hlp_C_KFILL
Cmd_KFILL
 Fld_0
  Typ_Lab
  Prm_[KFILL]  Create Keypoints by Filling Between 2 Keypoints
 Fld_2
  Prm_NP1,NP2  Fill between keypoints
  Typ_INT2
  Def_*PAR(_z(1)),*PAR(_z(2))
 Fld_4
  Prm_NFILL  No of keypoints to fill
  Typ_INT
  Def_*PAR(abs(_z(2)-_z(1))-1)
 Fld_5
  Prm_NSTRT  Starting keypoint number
  Typ_INT
  Def_Blank
 Fld_6
  Prm_NINC   Inc. between filled keyps
  Typ_INT
  Def_Blank
 Fld_7
  Prm_SPACE  Spacing ratio 
  Typ_REAL
  Def_1.0
:E End
:! 
:N Fnc_KGEN
:S    302,   169,   126
:T Cmd_P
:C )! Fnc_KGEN
:C )! Keyopints for KGEN command below
:A Keypoints
:D Copy Keypoints
:K #(PREP7)
:K #(priges)
:H Hlp_C_KGEN
Inp_P
Cmd_)!
 Fld_3
  Typ_KP
  Prm_[KGEN]  Pick or enter keypoints to be copied
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_KGEN2
:E END
:! 
:N Fnc_KGEN2
:S    657,   121,   529
:T Command
:C )! Fnc_KGEN2
:A Keypoints
:D Copy Keypoints
:K #(PREP7)
:H Hlp_C_KGEN
Cmd_KGEN
Fld_0
Typ_Lab
Prm_[KGEN]  Copy Keypoints
 Fld_2
  Prm_ITIME   Number of copies -
  Typ_INT
  Def_2
Fld_0
Typ_Lab
  Prm_        - including original
 Fld_3
  Typ_Def_P51X
 Fld_6
  Prm_DX      X-offset in active CS
  Typ_REAL
 Fld_7
  Prm_DY      Y-offset in active CS
  Typ_REAL
 Fld_8
  Prm_DZ      Z-offset in active CS
  Typ_REAL
 Fld_0
  Typ_Sep
 Fld_9
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_10
  Prm_NOELEM  Items to be copied
  Typ_LIS_OptionB
  LIS_Keypoints & mesh,0
  LIS_Keypoints only  ,1
:E END
:! 
:N Fnc_KGEN_move
:S    334,   192,   135
:T Cmd_P
:C )! Fnc_KGEN_move
:C )! Keypoints for KGEN command below
:A    Set of KPs
:D Move Set of Keypoints
:K #(PREP7)
:K #(priges)
:H Hlp_C_KMODIF
Inp_P
Cmd_)!
 Fld_2
  Typ_KEYP
  Prm_[KMODIF]  Pick or enter keypoints to be moved
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_KGEN_move_2
:E END
:! 
:N Fnc_KGEN_move_2
:S    408,   149,   252
:T Command
:C )! Fnc_KGEN_move_2
:A Set of Keypoints
:D Move Set of Keypoints
:K #(PREP7)
:H Hlp_C_KMODIF
Cmd_KMODIF
 Fld_0
  Typ_Lab
  Prm_[KMODIF]  Move a Set of Keypoints
 Fld_2
  Typ_Def_P51X
 Fld_3
  Prm_        X-coord. in active CS
  Typ_REAL
 Fld_4
  Prm_        Y-coord. in active CS
  Typ_REAL
 Fld_5
  Prm_        Z-coord. in active CS
  Typ_REAL
:E END
:! 
:N Fnc_KL
:S    339,   114,   218
:T Cmd_P
:C )! Fnc_KL_p
:A On Line
:D Create KP on Line
:K #(PREP7)
:H Hlp_C_KL
Inp_P
Cmd_KL
 Fld_2
  Typ_LINE
  Prm_[KL]  Pick or enter line on which to locate keypoint
  Min_1
  Cnt_1
  PFM_2
 Fld_3
  Typ_XYZ_SCREEN
  Prm_Pick the keypoint location along the line
  Min_1
  Cnt_1
  PFM_1
  Pwr_1
:E End
:! 
:N Fnc_KLD
:S    285,   123,   155
:T Cmd_P
:C )! Fnc_KL_d
:A On Line w/Ratio
:D Create KP on Line
:K #(PREP7)
:H Hlp_C_KL
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_LINE
  Prm_[KL]  Pick or enter line on which to locate keypoint
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_KL_d2
:E End
:! 
:N Fnc_KLIST_HardPt
:S    145,   122,    16
:T Cmd_P
:C )! Fnc_KLIST_HardPt
:A Hard Points
:D List HardPts
:H Hlp_C_KLIST
Inp_P
Cmd_KLIST
:E END
:! 
:N Fnc_KLIST_p
:S    244,   129,   108
:T Cmd_P
:C )! Fnc_KLIST_p
:A Coords +Attributes
:D List KPs, Coords, Attr
:H Hlp_C_KLIST
Inp_P
Cmd_KLIST
 Fld_2
  Prm_[KLIST]  Pick or enter keypoints to be listed
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_KLIST_p_coor
:S    275,   137,   131
:T Cmd_P
:C )! Fnc_KLIST_p_coor
:A Coordinates Only
:D List Picked KPs, Coord
:H Hlp_C_KLIST
Inp_P
Cmd_KLIST
 Fld_2
  Prm_[KLIST]  Pick or enter keypoints to be listed
  Typ_KP
  Min_1
  Cnt_s
  PCN_1
 Fld_5
  Typ_Def_COORD
:E END
:! 
:N Fnc_KL_d2
:S    311,   163,   141
:T Cmd_P
:C )! Fnc_KL_d2
:C )/NOPR
:C )*SET,_z2,'   '
:C )/GO
:A On Line w/Ratio
:D Create KP on Line
:K #(PREP7)
:H Hlp_C_KL
Cmd_KL
 Fld_2
  Typ_Def_*PAR(_z1)
 Fld_3
  Typ_Int
  Prm_Line ratio (0 - 1)
 Fld_4
  Typ_Int
  Prm_Keypoint number to assign
  Def_*PAR(_z2)
:E End
:! 
:N Fnc_KMESH
:S    237,   120,   110
:T Cmd_P
:C )! Fnc_KMESH
:A Keypoints
:D Mesh Keypoints
:K #(PREP7)
:H Hlp_C_KMESH
Inp_P
Cmd_KMESH
 Fld_2
  Typ_KEYP
  Prm_[KMESH]  Pick or enter keypoints to be meshed
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_KMESH_m
:S    167,   133,    27
:T Cmd_P
:C )! Fnc_KMESH_m
:A Keypoints
:D Mesh Keypoints
:K #(PREP7+meshtool)
:H Hlp_C_KMESH
Inp_P
Cmd_)!
Cal_Fnc_KMESH
:E END
:! 
:N Fnc_KMODIF
:S    377,   145,   225
:T Cmd_P
:C )! Fnc_KMODIF
:A    Single KP
:D Move Single Keypoint
:K #(PREP7)
:K #(priges)
:H Hlp_C_KMODIF
Inp_P
Cmd_KMODIF
 Fld_2
  Typ_KEYP
  Prm_[KMODIF]  Pick or enter keypoint to be moved
  Min_1
  Cnt_1
  PFM_1
 Fld_3
  Typ_XYZ
  Prm_Pick WP location or enter coordinates where keypoint is to be moved
  Min_1
  Cnt_1
  PFM_1
:E End
:! 
:N Fnc_KMOVE
:S    309,   148,   154
:T Cmd_P
:C )! Fnc_KMOVE
:A    To Intersect
:D Move KP to Intersection
:K #(PREP7)
:K #(priges)
:H Hlp_C_KMOVE
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_KP
  Prm_[KMOVE]  Pick or enter keypoint to be moved
  Min_1
  Cnt_1
  PCN_1
  PFM_2
Cmd_)/GO
Cal_Fnc_KMOVE_2
:E END
:! 
:N Fnc_KMOVE_2
:S    624,   123,   494
:T Command
:C )! Fnc_KMOVE_2
:D Move KP to Intersection 
:K #(PREP7)
:H Hlp_C_KMOVE
Cmd_KMOVE
Fld_0
Typ_Lab
Prm_[KMOVE]  Move Keypoint to Intersection
 Fld_2
  Prm_NPT       Keypoint to be moved
  Typ_INT
  Def_*PAR(_z1)
 Fld_0
  Prm_ 
 Fld_3
  Prm_KC1       1st Coord. system no.
  Typ_INT
  Def_0
 Fld_4
  Prm_X1,Y1,Z1  Coordinates of 1st CS
  Typ_REAL3
  Def_Blank,Blank,Blank
 Fld_0
  Prm_ 
 Fld_7
  Prm_KC2       2nd Coord. system no.
  Typ_INT
  Def_0
 Fld_8
  Prm_X2,Y2,Z2  Coordinates of 2nd CS     
  Typ_REAL3
  Def_Blank,Blank,Blank
Cmd_)/NOPR
Cmd_)*DEL,_z1
Cmd_)/GO
:E End
:! 
:N Fnc_KNODE
:S    265,   121,   137
:T Cmd_P
:C )! Fnc_KNODE
:A On Node
:D Create KP on Node
:K #(PREP7)
:H Hlp_C_KNODE
Inp_P
Cmd_KNODE
 Fld_2
  Typ_Def_0
 Fld_3
Prm_[KNODE]  Pick or enter node at which to locate keypoint
  Typ_NODE
  Min_1
  Cnt_s
  Pcn_1
:E End
:! 
:N Fnc_KPLOT
:S    445,   117,   321
:T Cmd
:C )! Fnc_KPLOT
:H Hlp_C_KPLOT
:A Keypoints
:D Plot Specified Keypoints 
Cmd_KPLOT
 Fld_0
  Typ_Lab
  Prm_[KPLOT]  Plot Specified Keypoints                        
 Fld_2
  Typ_INT
  Prm_NP1   First keypoint in range
  Def_1
 Fld_3 
  Typ_INT
  Prm_NP2   Last keypoint in range
  Def_Blank
 Fld_4
  Typ_INT
  Prm_NINC  Range increment
  Def_1
 Fld_5
  Typ_Char
  Prm_LAB (KPT / HPT):
  Def_KPT
:E End
:! 
:N Fnc_KPSCAL
:S    307,   166,   134
:T Cmd_P
:C )! Fnc_KPSCAL
:C )! Keypoints for KPSCAL command below
:A Keypoints
:D Scale Keypoints
:K #(PREP7)
:H Hlp_C_KPSCALE
Inp_P
Cmd_)!
 Fld_2
  Typ_KEYP
  Prm_[KPSCALE]  Pick or enter keypoints to be scaled
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_KPSCAL_2
:E END
:! 
:N Fnc_KPSCAL_2
:S    660,   131,   522
:T Command
:C )! Fnc_KPSCAL_2
:A Keypoints
:D Scale Keypoints
:K #(PREP7)
:H Hlp_C_KPSCALE
Cmd_KPSCALE
 Fld_0
  Typ_Lab
  Prm_[KPSCALE]  Scale Keypoints
 Fld_2
  Typ_Def_P51X
 Fld_5
  Typ_REAL3
  Prm_RX,RY,RZ  Scale factors -
  Def_1.0,1.0,1.0
 Fld_0
  Typ_Lab 
  Prm_          - in the active coordinate system
 Fld_8
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_9
 Prm_NOELEM   Items to be scaled
  Typ_LIS_OptionB
  LIS_Keypoints & mesh,0
  LIS_Keypoints only  ,1
 Fld_10
  Prm_IMOVE   Existing keypts will be
  Typ_LIS_OptionB
  LIS_Copied          ,0
  LIS_Moved           ,1
:E END
:! 
:N Fnc_KREF
:S    459,   138,   314
:T Cmd_P
:A    Keypoints
:D Refine mesh at keypoints
:C )!Fnc_KREF
:C )/NOPR
:C )/GO
:H Hlp_C_KREFINE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,KP
! Exclude_from_paths
Cmd_KSEL
 Fld_5
  Prm_[KREF]  Pick or enter keypoints for refinement
  Typ_KEYP
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,KP
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_KREF_1
:E END
:! 
:N Fnc_KREF_1
:S    569,   144,   418
:T Cmd
:A Refine Mesh at KP
:D Refine Mesh at Keypoint
:C )!Fnc_KREF_1
:C )/NOPR
:C )/GO
:H Hlp_C_KREFINE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_0
Typ_Lab
Prm_[KREF] Refine mesh at keypoints
 Fld_2
  Prm_LEVEL   Level of refinement
  Typ_Lis_OptionB
  Lis_1 (Minimal),1
  Lis_2     ,2
  Lis_3     ,3
  Lis_4     ,4
  Lis_5 (Maximum),5
  Def_1
Cmd_LSCLEAR,FE
K_CM(PR_SGUI)
Cmd_MTchgmsh
K_CM(PR_SGUI)
Cmd_)/GO
Fld_2
 K_FL(pr_sgui)
 Prm_Advanced options
 Typ_LOGI,No, Yes
 Def_0
Cal_Fnc_KREF_2a,2,eq,0
Cal_Fnc_KREF_2b,2,eq,1
:E END
:! 
:N Fnc_KREF_2a
:S    280,    64,   209
:T Cmd
:C )! Fnc_KREF_2a
Inp_p
Cmd_KREFINE
 Fld_2
 Typ_Def__Y1
 Fld_3
 Typ_Def_ 
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
 Typ_Def_1
 Fld_7
 Typ_Def_1
 Fld_8
 Typ_Def_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_KREF_2b
:S    626,   126,   493
:T Cmd
:D Refine mesh at keypoints advanced options
:C )! Fnc_KREF_2b
:H Hlp_C_KREFINE
Cmd_KREF
 Fld_2
 Typ_Def__Y1
 Fld_3
 Typ_Def_ 
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
  Prm_DEPTH   Depth of refinement
  Typ_INT
  Def_1
 Fld_7
  Prm_POST    Postprocessing
  Typ_Lis_OptionB
  Lis_Off             ,0
  Lis_Cleanup + Smooth,1
  Lis_Smooth          ,2
   Def_1
 Fld_8
  Prm_RETAIN  Retain Quads
  Typ_LOGI,No    ,Yes
   Def_1
Fld_0
  Typ_Lab
  Prm_        Note: This option is only valid with an all quad mesh.
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_KSCON
:S    293,   129,   157
:T Cmd_P
:C )! Fnc_KSCON
:A     Create
:D Concentration Keypoint
:K #(PREP7)
:H Hlp_C_KSCON
Inp_P
Cmd_)/NOPR
Cmd_)*set,_z1
 Fld_2
  Prm_[KSCON]  Pick or enter keypoint for concentrated mesh
  Typ_KEYP
  Min_1
  Cnt_1
  PCN_1
Cmd_)/GO
Cal_Fnc_KSCON2
:E End
:! 
:N Fnc_KSCON2
:S   1019,   529,   483
:T Command
:C )! Fnc_KSCON2
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3
:C )*VGET,_z(1),20,_z1,8,1,,,4
:C )*IF,_z(2),NE,0,THEN
:C )*IF,_z(2),LT,1E9,THEN
:C )_z2=0
:C )_z3=nint((_z(2)/1000000)-.5)
:C )_z4=_z(2)-(_z3*1000000)
:C )_z5=_z4/10000
:C )*ELSE
:C )_z2=1
:C )_z6=_z(2)-1e9
:C )_z3=nint((_z6/1000000)-.5)
:C )_z4=_z6-(_z3*1000000)
:C )_z5=_z4/10000
:C )*ENDIF
:C )*ELSE
:C )_z2=0
:C )_z3=0
:C )_z5=0
:C )*ENDIF
:C )/GO
:A Concentration KP
:D Concentration Keypoint
:K #(PREP7)
:H Hlp_C_KSCON
Cmd_KSCON
 Fld_0
  Typ_Lab
  Prm_[KSCON]  Concentration Keypoint 
 Fld_2
  Typ_INT
  Prm_NPT   Keypoint for concentration
  Def_*PAR(_z1)
 Fld_3
  Prm_DELR  Radius of 1st row of elems
  Typ_REAL
  Def_*PAR(_z(1))
 Fld_6
  Prm_RRAT  Radius ratio (2nd row/1st)
  Typ_REAL
  Def_*PAR(_z5)
 Fld_5
  Prm_NTHET No of elems around circumf
  Typ_INT
  Def_*PAR(_z3)
 Fld_4
  Prm_KCTIP midside node position
  Typ_LIS_OPTIONB
  LIS_Not skewed 1/2pt,0
  LIS_Skewed     1/4pt,1
  Def_*PAR(_z2)
:E END
:! 
:N Fnc_KSCON_stat
:S    170,   142,    21
:T Cmd_N
:C )! Fnc_KSCON_stat
:A     List
:D List Concentration Keypoint
:K #(PREP7)
:H Hlp_C_KSCON
Inp_P
Cmd_KSCON,STAT
:E End
:! 
:N Fnc_KSELH_A
:S    312,   134,   171
:T Cmd_P
:C )! Fnc_KSELH_A
:A Also select hard kpts
:D Also select hard kpts
:H Hlp_UI_KEYHARD
Inp_P
Cmd_KSEL
 Fld_2
  Typ_DEF_A
 Fld_3
  Typ_DEF_HPT
 Fld_5
Prm_[KSEL],A  Pick or enter hard kpts to be added to selected set
  Typ_KEYP
  Min_1
  Cnt_s
  PCN_1
  Sel_U
:E END
:! 
:N Fnc_KSELH_R
:S    287,   128,   152
:T Cmd_P
:C )! Fnc_KSELH_R
:A Reselect hard kpts
:D Reselect hard kpts
:H Hlp_UI_KEYHARD
Inp_P
Cmd_KSEL
 Fld_2
  Typ_DEF_R
 Fld_3
  Typ_DEF_HPT
 Fld_5
Prm_[KSEL],R  Pick or enter hard kpts to be reselected
  Typ_KEYP
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_KSELH_S
:S    289,   124,   158
:T Cmd_P
:C )! Fnc_KSELH_S
:A Select hard kpts
:D Select hard kpts
:H Hlp_UI_KEYHARD
Inp_P
Cmd_KSEL
 Fld_2
  Typ_DEF_S
 Fld_3
  Typ_DEF_HPT
 Fld_5
Prm_[KSEL],S  Pick or enter hard kpts to be selected
  Typ_KEYP
  Min_1
  Cnt_s
  PCN_1
  Sel_D
:E END
:! 
:N Fnc_KSELH_U
:S    286,   127,   152
:T Cmd_P
:C )! Fnc_KSEL_U
:A Unselect hard kpts
:D Unselect hard kpts
:H Hlp_UI_KEYHARD
Inp_P
Cmd_KSEL
 Fld_2
  Typ_DEF_U
 Fld_3
  Typ_DEF_HPT
 Fld_5
Prm_[KSEL],U  Pick or enter hard kpts to be unselected
  Typ_KEYP
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_KSEL_A
:S    285,   128,   150
:T Cmd_P
:C )! Fnc_KSEL_A
:A Also select keypoints
:D Also select keypoints
:H Hlp_C_KSEL
Inp_P
Cmd_KSEL
 Fld_2
  Typ_DEF_A
 Fld_5
Prm_[KSEL],A  Pick or enter keypoints to be added to selected set
  Typ_KEYP
  Min_1
  Cnt_s
  PCN_1
  Sel_U
:E END
:! 
:N Fnc_KSEL_R
:S    260,   122,   131
:T Cmd_P
:C )! Fnc_KSEL_R
:A Reselect keypoints
:D Reselect keypoints
:H Hlp_C_KSEL
Inp_P
Cmd_KSEL
 Fld_2
  Typ_DEF_R
 Fld_5
Prm_[KSEL],R  Pick or enter keypoints to be reselected
  Typ_KEYP
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_KSEL_S
:S    262,   118,   137
:T Cmd_P
:C )! Fnc_KSEL_S
:A Select keypoints
:D Select keypoints
:H Hlp_C_KSEL
Inp_P
Cmd_KSEL
 Fld_2
  Typ_DEF_S
 Fld_5
Prm_[KSEL],S  Pick or enter keypoints to be selected
  Typ_KEYP
  Min_1
  Cnt_s
  PCN_1
  Sel_D
:E END
:! 
:N Fnc_KSEL_U
:S    260,   122,   131
:T Cmd_P
:C )! Fnc_KSEL_U
:A Unselect keypoints
:D Unselect keypoints
:H Hlp_C_KSEL
Inp_P
Cmd_KSEL
 Fld_2
  Typ_DEF_U
 Fld_5
Prm_[KSEL],U  Pick or enter keypoints to be unselected
  Typ_KEYP
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_KSUM
:S    150,   128,    15
:T Cmd_N
:C )! Fnc_KSUM
:A Of Keypoints
:D Calc Geom of Keypoints
:K #(PREP7)
:H Hlp_C_KSUM
Inp_P
Cmd_KSUM
:E End
:! 
:N Fnc_KSYMM
:S    317,   176,   134
:T Cmd_P
:C )! Fnc_KSYMM
:C )! Keypoints for KSYMM command below
:A Keypoints
:D Reflect Keypoints
:K #(PREP7)
:K #(priges)
:H Hlp_C_KSYMM
Inp_P
Cmd_)!
 Fld_3
  Typ_KEYP
  Prm_[KSYMM]  Pick or enter keypoints to be reflected
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_KSYMM_2
:E END
:! 
:N Fnc_KSYMM_2
:S    653,   129,   517
:T Command
:C )! Fnc_KSYMM_2
:A Keypoints
:D Reflect Keypoints
:K #(PREP7)
:H Hlp_C_KSYMM
Cmd_KSYMM
 Fld_0
  Typ_Lab
  Prm_[KSYMM]  Reflect Keypoints
 Fld_2
  Prm_Ncomp  Plane of symmetry
  Typ_LIS_RADIOB
  LIS_Y-Z plane      X,X
  LIS_X-Z plane      Y,Y
  LIS_X-Y plane      Z,Z
 Fld_3
  Typ_Def_P51X
 Fld_6
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_7
 Prm_NOELEM  Items to be reflected
  Typ_LIS_OptionB
  LIS_Keypoints & mesh,0
  LIS_Keypoints only  ,1
 Fld_8
  Prm_IMOVE   Existing keypoints will be
  Typ_LIS_OptionB
  LIS_Copied          ,0
  LIS_Moved           ,1
:E END
:! 
:N Fnc_KTRAN
:S    320,   177,   136
:T Cmd_P
:C )! Fnc_KTRAN
:C )! Keypoints for KTRAN command below
:A Keypoints
:D Transfer Keypoints
:K #(PREP7)
:K #(priges)
:H Hlp_C_KTRAN
Inp_P
Cmd_)!
 Fld_3
  Typ_KEYP
  Prm_[KTRAN]  Pick or enter keypoints to be transferred
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_KTRAN_2
:E END
:! 
:N Fnc_KTRAN_2
:S    664,   144,   513
:T Command
:C )! Fnc_KTRAN_2
:A Keypoints
:D Coord Sys Transfer of Keypoints 
:K #(PREP7)
:H Hlp_C_KTRAN
Cmd_KTRAN
 Fld_0
  Typ_Lab
  Prm_[KTRAN]  Coordinate System Transfer of Keypoints
 Fld_2
  Prm_KCNTO  No. of coordinate sys -
  Typ_INT
 Fld_0
  Typ_Lab
  Prm_       - keypoints are to be transferred to
 Fld_3
  Typ_Def_P51X
 Fld_6
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_7
  Prm_NOELEM  Items to be transferred
  Typ_LIS_OptionB
  LIS_Keypoints & mesh,0
  LIS_Keypoints only  ,1
 Fld_8
  Prm_IMOVE   Existing keypts will be
  Typ_LIS_OptionB
  LIS_Copied          ,0
  LIS_Moved           ,1
:E END
:! 
:N Fnc_KUSE
:S    440,   239,   194
:T Command
:C )! Fnc_KUSE
:A Reuse LN22 Matrix
:D Reuse Factorized Matrix (File.LN22)
:K #(PREP7*SOLUTION)
:K (STATIC*(HARMONIC+FULL)*(TRNSIENT+FULL)*NOFILTER)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_KUSE
Inp_NoApply
Cmd_KUSE
 Fld_2
  Prm_[KUSE]  Reuse factorized matrix?
  Typ_LIS_RADIOB
  LIS_Program decides ,0
  LIS_YES - reuse     ,1
  LIS_NO - reformulate,-1
  Def_*GET(common,,stepcm,,int,5)
:E END
:! 
:N Fnc_KWPA
:S    233,   115,   111
:T Cmd_P
:C )! Fnc_KWPA
:A Keypoints
:D Offset WP to Keypoints
:H Hlp_C_KWPAVE
Inp_P
Cmd_KWPAVE
 Fld_2
Prm_[KWPAVE]  Pick or enter keypoints for WP offset
  Typ_KEYP
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_KWPL
:S    251,   109,   135
:T Cmd_P
:C )! Fnc_KWPL
:A Keypoints
:D Align WP with KP
:H Hlp_C_KWPLAN
Inp_P
Cmd_KWPLAN
Fld_2
Typ_Def_-1
Fld_3
Prm_[KWPLAN]  Pick or enter 3 KPs - origin, X axis, XY plane
Typ_KEYP
Min_1
Max_3
PFM_2
Rub_54
:E END
:! 
:N Fnc_K_p
:S    246,   121,   118
:T Cmd_P
:C )! Fnc_K_p
:A On Working Plane
:D Create KPs on WP
:K #(PREP7)
:H Hlp_C_K
Inp_P
Cmd_K
 Fld_3
Prm_[K]  Pick WP location or enter coordinates for the keypoints
  Typ_XYZ
  Min_1
  Cnt_s
  PFM_1
:E End
:! 
:N Fnc_L
:S    248,   121,   120
:T Cmd_P
:C )! Fnc_L
:A In Active Coord
:D Lines in Active Coord
:K #(PREP7)
:H Hlp_C_L
Inp_P
Cmd_L
 Fld_2
  Typ_KEYP
  Prm_[L]  Pick or enter end keypoints defining the line
  Rub_52
  Min_2
  Max_2
  PFM_2
:E END
:! 
:N Fnc_L2ANG
:S    345,   177,   161
:T Cmd_P
:C )! Fnc_L2ANG
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )/GO
:A Angle to 2 Lines
:D At Angle to 2 Lines
:K #(PREP7)
:H Hlp_C_L2ANG
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Typ_LINE
  Prm_[L2ANG]  Pick or enter 2 lines that intersect new line
  Min_2
  Cnt_2
  PFM_2
Cmd_)/GO
Cal_Fnc_L2ANG_2
:E END
:! 
:N Fnc_L2ANG_2
:S    542,   150,   385
:T Cmd_P
:C )! Fnc_L2ANG_2
:A Angle to 2 Lines
:D Straight Line at Angle to 2 Lines
:K #(PREP7)
:H Hlp_C_L2ANG
Cmd_L2ANG
 Fld_0
  Typ_Lab
  Prm_[L2ANG]  Create a Straight Line at Angles to 2 Existing Lines
 Fld_2
  Typ_INT2
  Prm_NL1,NL2  Existing lines
  Def_*PAR(_z(1)),*PAR(_z(2))
 Fld_4
  Typ_REAL2
  Prm_ANG1,ANG2  Angles in degrees
  Def_Blank,Blank
 Fld_6
  Typ_INT2
  Prm_PHIT1,PHIT2  Numbers to assign -
  Def_Blank,Blank
 Fld_0
  Typ_Lab
  Prm_      - to new keypoints at hit locations
:E END
:! 
:N Fnc_L2ANG_90
:S    307,   138,   162
:T Cmd_P
:C )! Fnc_L2ANG_90
:A Norm to 2 Lines
:D Line Norm to 2 Lines
:K #(PREP7)
:H Hlp_C_L2ANG
Inp_P
Cmd_L2ANG
 Fld_2
  Typ_LINE
  Prm_[L2ANG],,,90,90  Pick or enter 2 lines normal to new line
  Min_2
  Cnt_2
  PFM_2
 Fld_4
  Typ_DEF_90
 Fld_5
  Typ_DEF_90
:E END
:! 
:N Fnc_L2TAN
:S    593,   179,   407
:T Cmd_P
:C )! Fnc_L2TAN
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,4
:C )/GO
:A Tan to 2 Lines
:D Line Tangent to 2 Lines
:K #(PREP7)
:H Hlp_C_L2TAN
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Typ_LINE
  Prm_[L2TAN]  Pick or enter 1st line
  Min_1
  Cnt_1
  PFM_2
 Fld_3
  Typ_KEYP
  Prm_Pick or enter keypoint at tangency end of 1st line
  Min_1
  Cnt_1
  PFM_2
 Fld_4
  Typ_LINE
  Prm_Pick or enter 2nd line
  Min_1
  Cnt_1
  PFM_2
 Fld_5
  Typ_KEYP
  Prm_Pick or enter keypoint at tangency end of 2nd line
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_L2TAN_2
:E END
:! 
:N Fnc_L2TAN_2
:S    443,   348,    88
:T Command
:C )! Fnc_L2TAN_2
:C )/NOPR
:C )*get,_z1,line,_z(1),KP,1
:C )*get,_z2,line,_z(3),KP,2
:C )!
:C )*if,_z1,EQ,_z(2),then
:C )  _z(1)=_z(1)*(-1)
:C )*endif
:C )!
:C )*if,_z2,EQ,_z(4),then
:C )  _z(3)=_z(3)*(-1)
:C )*endif
:C )/GO
:A Tan to 2 Lines
:D Line Tangent to 2 Lines
:K #(PREP7)
:H Hlp_C_L2TAN
Inp_P
Cmd_L2TAN
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Typ_Def_*PAR(_z(3))
Cal_Fnc_L2TAN
:E END
:! 
:N Fnc_LANG
:S    532,   185,   340
:T Cmd_P
:C )! Fnc_LANG
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,4
:C )/GO
:A At angle to line
:D Straight line at angle to line
:K #(PREP7)
:H Hlp_C_LANG
Inp_P
Cmd_)/NOPR
Cmd_)! ******************* 
Cmd_)! *** _z(2) = NL1 *** 
Cmd_)! *** _z(3) = P3  ***
Cmd_)! ******************* 
Cmd_)*SET,_z(2)
 Fld_2
  Typ_LINE
  Prm_[LANG] Pick or enter line to be intersected:
  Min_1
  Cnt_1
 Fld_3
  Typ_KEYP
  Prm_[LANG] Pick or enter end keypoint of new line:
  Min_1
  Cnt_1
Cmd_)/GO
Cal_Fnc_LANG_2
:E END
:! 
:N Fnc_LANG_0
:S    361,   140,   214
:T Cmd_P
:C )! Fnc_LANG_0 ORPHAN
:A Tangent to Line
:D Line Tangent to Line
:K #(PREP7)
:H Hlp_C_LANG
Inp_P
Cmd_LANG
 Fld_2
  Typ_LINE
  Prm_[LANG],,,0  Pick or enter line that is tangent to new line
  Min_1
  Cnt_1
 Fld_3
  Typ_KEYP
  Prm_Pick or enter end keypoint of new line
  Min_1
  Cnt_1
 Fld_4
  Typ_DEF_0.0
:E END
:! 
:N Fnc_LANG_2
:S    324,   146,   171
:T Command
:C )! Fnc_LANG_2
:A At angle to line
:D Straight line at angle to line
:K #(PREP7)
:H Hlp_C_LANG
Cmd_)! ******************* 
Cmd_)! *** _z(4) = ANG ***
Cmd_)! ******************* 
Cmd_)*SET,_z(4)
 Fld_2
  Typ_REAL
  Prm_[LANG] Angle in degrees:
  Def_0
Cal_Fnc_LANG_3
:E END
:! 
:N Fnc_LANG_3
:S    282,   135,   140
:T Cmd_P
:C )! Fnc_LANG_3
:A At angle to line
:D Line at angle to line
:K #(PREP7)
:H Hlp_C_LANG
Inp_P
Cmd_LANG
 Fld_2
  Typ_Def_*PAR(_z(2))
 Fld_3
  Typ_Def_*PAR(_z(3))
 Fld_4
  Typ_Def_*PAR(_z(4))
 Fld_5
  Typ_Def_ 
 Fld_6
  Typ_Def_ 
:E END
:! 
:N Fnc_LANG_90
:S    410,   133,   270
:T Cmd_P
:C )! Fnc_LANG_90
:A Normal to Line
:D Line Normal to Line
:K #(PREP7)
:H Hlp_C_LANG
Inp_P
Cmd_LANG
 Fld_2
  Typ_LINE
  Prm_[LANG,,,90] Pick or enter line normal to new line
  Min_1
  Cnt_1
  PFM_2
 Fld_3
  Typ_KEYP
  Prm_[LANG,,,90] Pick or enter end keypoint of new line
  Min_1
  Cnt_1
  PFM_2
 Fld_4
  Typ_DEF_90
 Fld_5
  Typ_DEF_ 
 Fld_6
  Typ_DEF_ 
:E END
:! 
:N Fnc_LARC
:S    458,   175,   276
:T Cmd_P
:C )! Fnc_LARC
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3
:C )/GO
:A By End KPs & Rad
:D Arc by End KPs & Rad
:K #(PREP7)
:H Hlp_C_LARC
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Typ_KEYP
  Prm_[LARC]  Pick or enter keypoints at start and end of arc
  Min_2
  Cnt_2
  PFM_2
 Fld_4
  Typ_KEYP
  Prm_Pick or enter keypoint on center-of-curvature side and plane of arc
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_LARC2
:E END
:! 
:N Fnc_LARC2
:S    478,   117,   354
:T Command
:C )! Fnc_LARC2
:D Arc by End KPs & Radius
:K #(PREP7)
:H Hlp_C_LARC
Cmd_LARC
 Fld_0
  Typ_Lab
  Prm_[LARC]  Define Arc by End Keypoints and Radius
 Fld_5
  Typ_REAL
  Prm_RAD    Radius of the arc
  Def_Blank
 Fld_2
  Typ_INT2
  Prm_P1,P2  Keypoints at start + end
  Def_*PAR(_z(1)),*PAR(_z(2))
 Fld_4
  Typ_INT
  Prm_PC     KP on center-of-curvature
  Def_*PAR(_z(3))
 Fld_0
  Typ_Lab
  Prm_       - side and plane of arc
:E END
:! 
:N Fnc_LARC_3kp
:S    254,   129,   118
:T Cmd_P
:C )! Fnc_LARC_3kp
:A Through 3 KPs
:D Arc Thru 3 KPs
:K #(PREP7)
:H Hlp_C_LARC
Inp_P
Cmd_LARC
 Fld_2
  Typ_KEYP
  Prm_[LARC]  Pick or enter 3 KPs - starting, ending, middle
  Min_3
  Cnt_3
  PFM_2
:E END
:! 
:N Fnc_LAREA
:S    355,   134,   214
:T Cmd_P
:C )! Fnc_LAREA
:A Overlaid on Area
:D Line Overlaid on Area
:K #(PREP7)
:H Hlp_C_LAREA
Inp_P
Cmd_LAREA
 Fld_4
  Typ_AREA
  Prm_[LAREA]  Pick or enter the base area on which to overlay
  Min_1
  Cnt_1
  PFM_2
 Fld_2
  Typ_KEYP
  Prm_Pick or enter 2 keypoints to define the line
  Min_2
  Cnt_2
  PFM_2
:E END
:! 
:N Fnc_LARGE
:S    696,   150,   539
:T Command
:C )! Fnc_LARGE
:A Find Maximum
:D Find Maximum of Time-History Variables
:K #(POST26)
:H Hlp_C_LARGE
Cmd_LARGE
Fld_0
Typ_Lab
Prm_[LARGE]   IR = Largest of (FACTA * IA) , (FACTB * IB) , (FACTC * IC)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  1st Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     1st Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_10
Prm_FACTB  2nd Factor
Typ_real
Def_1.0
Fld_4
Prm_IB     2nd Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_11
Prm_FACTC  3rd Factor
Typ_real
Def_1.0
Fld_5
Prm_IC     3rd Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_LATT
:S   1356,   597,   752
:T Command
:C )! Fnc_LATT
:C )/NOPR
:C )KEYW,ETLIST,0
:C )KEYW,RLLIST,0
:C )KEYW,MPLIST,0
:C )KEYW,CSLIST,0
:C )_z1=ETYIQR(0,12)
:C )*IF,_z1,gt,10,then
:C )KEYW,ETLIST,1
:C )*ENDIF
:C )_z2=RLINQR(0,12)
:C )*IF,_z2,gt,10,then
:C )KEYW,RLLIST,1
:C )*ENDIF
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )_z4=CSYIQR(0,12)
:C )*IF,_z4,gt,10,then
:C )KEYW,CSLIST,1
:C )*ENDIF
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A All Lines
:D Line Attributes
:K #(PREP7)
:H Hlp_C_LATT
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,6
 Fld_0
  Typ_Lab
  Prm_[LATT]  Assign Attributes to All Selected Lines
 Fld_0
 Typ_Sep
 Fld_2
  Prm_MAT   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
 Fld_0
 Typ_Sep
 Fld_3
  Prm_REAL  Real constant set number
  K_LN(rllist)
  Typ_LIS_OPTIONB
  K_LN(RLLIST)
  Typ_LIS
  LIS_*READ,REAL
 Fld_0
 Typ_Sep
 Fld_4
  Prm_TYPE  Element type number
  K_LN(etlist)
  Typ_LIS_OPTIONB
  K_LN(ETLIST)
  Typ_LIS
  LIS_*READ,TYPE
 Fld_5
  Typ_Def_
 Fld_0
 Typ_Sep
 Fld_7
  Prm_SECT  Element section
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
 Fld_6
  Prm_Pick Orientation Keypoint(s)
  Typ_Logi,No, Yes
  Def_0
 Fld_0
 Typ_Sep
Cmd_)/GO
Cal_Fnc_LATT_2
:E END
:! 
:N Fnc_LATT_2
:S    217,   124,    86
:T Command
:C )! Fnc_LATT_2
:A All Lines
:D Line Attributes
:K #(PREP7)
:H Hlp_C_LATT
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*CPAR(5)
Cal_Fnc_LATT_NOKP,2,eq,0
Cal_Fnc_LATT_KP,2,eq,1
:E END
:! 
:N Fnc_LATT_KP
:S    354,   124,   223
:T Cmd_P
:C )! Fnc_LATT_KP
:A All Lines
:D Line Attributes
:K #(PREP7)
:H Hlp_C_LATT
Inp_P
Cmd_LATT
 Fld_2
 Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_*CPAR(2)
 Fld_4
 Typ_Def_*CPAR(3)
 Fld_5
 Typ_Def_
 Fld_6
  Typ_KEYP
  Prm_Pick keypoint(s) for orientation  
  Pdp_1
  Pfm_2
  Min_1
  Cnt_2
 Fld_8
 Typ_Def_*CPAR(6)
:E END
:! 
:N Fnc_LATT_NOKP
:S    269,   130,   132
:T Command
:C )! Fnc_LATT_NOKP
:A All Lines
:D Line Attributes
:K #(PREP7)
:H Hlp_C_LATT
Inp_P
Cmd_LATT
 Fld_2
 Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_*CPAR(2)
 Fld_4
 Typ_Def_*CPAR(3)
 Fld_5
 Typ_Def_
 Fld_8
 Typ_Def_*CPAR(6)
:E END
:! 
:N Fnc_LATT_p
:S    414,   125,   282
:T Cmd_P
:C )! Fnc_LATT_p
:A Picked Lines
:D Line Attributes
:K #(PREP7)
:H Hlp_C_LATT
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
! Exclude_from_paths
Cmd_LSEL
 Fld_5
  Prm_[LATT]  Pick or enter lines for attribute assignment
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_LATT_p2
:E END
:! 
:N Fnc_LATT_p2
:S   1348,   606,   735
:T Command
:C )! Fnc_LATT_p2
:C )/NOPR
:C )KEYW,ETLIST,0
:C )KEYW,RLLIST,0
:C )KEYW,MPLIST,0
:C )KEYW,CSLIST,0
:C )_z1=ETYIQR(0,12)
:C )*IF,_z1,gt,10,then
:C )KEYW,ETLIST,1
:C )*ENDIF
:C )_z2=RLINQR(0,12)
:C )*IF,_z2,gt,10,then
:C )KEYW,RLLIST,1
:C )*ENDIF
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )_z4=CSYIQR(0,12)
:C )*IF,_z4,gt,10,then
:C )KEYW,CSLIST,1
:C )*ENDIF
:C )KEYW,SELIST,0
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/GO
:A Picked Lines
:D Line Attributes
:K #(PREP7)
:H Hlp_C_LATT
Cmd_)/NOPR
Cmd_)*CSET,1,6
 Fld_0
  Typ_Lab
  Prm_[LATT]  Assign Attributes to Picked Lines
 Fld_0
 Typ_Sep
 Fld_2
  Prm_MAT   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
 Fld_0
 Typ_Sep
 Fld_3
  Prm_REAL  Real constant set number
  K_LN(rllist)
  Typ_LIS_OPTIONB
  K_LN(RLLIST)
  Typ_LIS
  LIS_*READ,REAL
 Fld_0
 Typ_Sep
 Fld_4
  Prm_TYPE  Element type number
  K_LN(etlist)
  Typ_LIS_OPTIONB
  K_LN(ETLIST)
  Typ_LIS
  LIS_*READ,TYPE
 Fld_5
  Typ_Def_
 Fld_0
 Typ_Sep
 Fld_7
  Prm_SECT  Element section
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
 Fld_6
  Prm_Pick Orientation Keypoint(s)
  Typ_Logi,No, Yes
  Def_0
 Fld_0
 Typ_Sep
Cmd_)/GO
Cal_Fnc_LATTp_2
:E END
:! 
:N Fnc_LATTp_2
:S    221,   126,    88
:T Command
:C )! Fnc_LATTp_2
:A All Lines
:D Line Attributes
:K #(PREP7)
:H Hlp_C_LATT
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*CPAR(5)
Cal_Fnc_LATTp_NOKP,2,eq,0
Cal_Fnc_LATTp_KP,2,eq,1
:E END
:! 
:N Fnc_LATTp_KP
:S    540,   126,   407
:T Cmd_P
:C )! Fnc_LATTp_KP
:A All Lines
:D Line Attributes
:K #(PREP7)
:H Hlp_C_LATT
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
Cmd_)/GO
Cmd_LATT
 Fld_2
 Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_*CPAR(2)
 Fld_4
 Typ_Def_*CPAR(3)
 Fld_5
 Typ_Def_
 Fld_6
  Typ_KEYP
  Prm_Pick keypoint(s) for orientation  
  Pdp_1
  Pfm_2
  Min_1
  Cnt_2
 Fld_8
 Typ_Def_*CPAR(6)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_LATTp_NOKP
:S    455,   132,   316
:T Command
:C )! Fnc_LATTp_NOKP
:A All Lines
:D Line Attributes
:K #(PREP7)
:H Hlp_C_LATT
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
Cmd_)/GO
Cmd_LATT
 Fld_2
 Typ_Def_*CPAR(1)
 Fld_3
 Typ_Def_*CPAR(2)
 Fld_4
 Typ_Def_*CPAR(3)
 Fld_5
 Typ_Def_
 Fld_8
 Typ_Def_*CPAR(6)
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_LAYER_p2
:S   1433,   207,  1219
:T Command
:C )! Fnc_LAYER_p2
:C )/NOPR
:C )*DEL,_Z
:C )*DIM,_Z,,9
:C )/GO
:A     Picked Lines
:D Area Layer-Mesh Controls on Picked Lines
:K #(PREP7)
:H Hlp_C_LESIZE
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[LESIZE]  Area Layer-Mesh controls on picked lines
 Fld_2
  Typ_REAL
  Prm_SIZE  Element edge length
  Def_0
 Fld_0
  Typ_Lab
  Prm_          -- or --
 Fld_3
  Typ_REAL
  Prm_NDIV  No. of line divisions
  Def_0
 Fld_10
  Prm_KYNDIV  SIZE,NDIV can be changed
  Typ_LOGI,No,Yes
  Def_1
 Fld_4
  Typ_REAL
  Prm_SPACE  Spacing ratio (Normal 1)
  Def_0
 Fld_0
  Typ_Sep
 Fld_5
  Typ_REAL
  Prm_LAYER1 Inner layer thickness
  Def_0
 Fld_0
  Typ_Lab
  Prm_                                 Size factor must be > or = 1
 Fld_6
  Prm_         Thickness input is:
  Typ_LIS_RADIOB
      LIS_Size factor     ,1
      LIS_Absolute length ,0
 Fld_0
  Typ_Lab
  Prm_ (LAYER1 elements are uniformly-sized)
 Fld_0
  Typ_Sep
 Fld_7
  Typ_REAL
  Prm_LAYER2 Outer layer thickness
  Def_0
 Fld_0
  Typ_Lab
  Prm_                                Transition factor must be > 1
 Fld_8
  Prm_         Thickness input is:
  Typ_LIS_RADIOB
      LIS_Transition fact.,1
      LIS_Absolute length ,0
 Fld_0
  Typ_Lab
  Prm_ (LAYER2 elements transition from LAYER1 size to global size)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_ NOTE:  Blank or zero settings remain the same.
Cmd_)/GO
Cal_Fnc_LAYER_p3
:E END
:! 
:N Fnc_LAYER_p3
:S    462,   204,   251
:T Command
:C )! Fnc_LAYER_p3
:C )/NOPR
:C )*IF,_z(5),GT,0,THEN
:C )_z(4)=-_z(4)
:C )*ENDIF
:C )*IF,_z(7),GT,0,THEN
:C )_z(6)=-_z(6)
:C )*ENDIF
:C )/GO
:K #(PREP7)
Inp_P
Cmd_LESIZE
 Fld_2
  Typ_Def__Y1
 Fld_3
  Typ_Def_*PAR(_z(1))
 Fld_5
  Typ_Def_*PAR(_z(2))
 Fld_6
  Typ_Def_*PAR(_z(3))
 Fld_7
  Typ_Def_4
 Fld_8
  Typ_Def_*PAR(_z(4))
 Fld_9
  Typ_Def_*PAR(_z(6))
Cmd_)/NOPR
Cmd_CMDELE,_Y
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_LAYLIS
:S   1551,   137,  1407
:T Cmd
:C )! Fnc_LAYLIS
:A Layered Elements
:D List Layered Elements
:H Hlp_C_LAYLIST
:P (LINPLUS)
Cmd_LAYLIST
 Fld_0
  Typ_Lab
  Prm_[LAYLIST]  List Layered Elements
 Fld_2
  Prm_Layered element to be listed
  Typ_Int
  Def_ALL
 Fld_3
  Typ_INT2
  Def_Blank,Blank
  Prm_LAYR1,LAYR2  Range of layers
 Fld_5
  Prm_Mplab1  1st mater prop to list
  Typ_LIS_OPTIONB
   LIS_Elast modulus EX,EX
   LIS_Elast modulus EY,EY
   LIS_Elast modulus EZ,EZ
   LIS_Therm expan ALPX,ALPX
   LIS_Therm expan ALPY,ALPY
   LIS_Therm expan ALPZ,ALPZ
   LIS_Ref temp    REFT,REFT 
   LIS_Poisson's   PRXY,PRXY 
   LIS_Poisson's   PRYZ,PRYZ
   LIS_Poisson's   PRXZ,PRXZ
   LIS_Poisson's   NUXY,NUXY
   LIS_Poisson's   NUYZ,NUYZ
   LIS_Poisson's   NUXZ,NUXZ
   LIS_Shear modul  GXY,GXY
   LIS_Shear modul  GYZ,GYZ
   LIS_Shear modul  GXZ,GXZ
   LIS_Damp mult   DAMP,DAMP
   LIS_Frictiom coef MU,MU
   LIS_Density     DENS,DENS
 Fld_6
  Prm_Mplab2  2nd mater prop to list
  Typ_LIS_OPTIONB
   LIS_Elast modulus EX,EX
   LIS_Elast modulus EY,EY
   LIS_Elast modulus EZ,EZ
   LIS_Therm expan ALPX,ALPX
   LIS_Therm expan ALPY,ALPY
   LIS_Therm expan ALPZ,ALPZ
   LIS_Ref temp    REFT,REFT
   LIS_Poisson's   PRXY,PRXY
   LIS_Poisson's   PRYZ,PRYZ
   LIS_Poisson's   PRXZ,PRXZ
   LIS_Poisson's   NUXY,NUXY
   LIS_Poisson's   NUYZ,NUYZ
   LIS_Poisson's   NUXZ,NUXZ
   LIS_Shear modul  GXY,GXY
   LIS_Shear modul  GYZ,GYZ
   LIS_Shear modul  GXZ,GXZ
   LIS_Damp mult   DAMP,DAMP
   LIS_Frictiom coef MU,MU
   LIS_Density     DENS,DENS
:E END
:! 
:N Fnc_LAYPLO
:S    308,   137,   164
:T Cmd
:C )! Fnc_LAYPLO
:H Hlp_C_LAYPLOT
:A Layered Elements
:D Plot Layer Elem Stack
:P (LINPLUS)
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_ELEM
  Prm_[LAYPLOT]  Pick or enter element for layer stacking display
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_LAYPLO2
:E End
:! 
:N Fnc_LAYPLO2
:S    380,   141,   232
:T Cmd
:C )! Fnc_LAYPLO2
:B Fnc_LAYPLO
:H Hlp_C_LAYPLOT
:P (LINPLUS)
:D Plot Layered Element Stacking
Cmd_LAYPLOT
 Fld_0
  Typ_Lab
  Prm_[LAYPLOT]  Plot Layered Element Stacking Sequence
 Fld_2
  Typ_INT
  Prm_IEL      Element no. for display
  Def_*PAR(_z1)
 Fld_3
  Typ_INT2
  Prm_LAYR1,LAYR2      Range of layers
  Def_Blank,Blank
:E End
:! 
:N Fnc_LCABS
:S    509,   190,   312
:T Command
:C )! Fnc_LCABS
:A    Absolut Value
:D Absolute Value Option for Load Case Operations
:H Hlp_C_LCABS
:K #(POST1)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_LCABS
 Fld_0
  Typ_Lab
  Prm_[LCABS]  Absolute Value Option for Load Case Operations
 Fld_2
  Prm_LCNO   Ref. no. for load case
  Typ_INT
 Fld_0
  Typ_LAB
  Prm_       (Enter ALL for all load cases)
 Fld_3
  Prm_KABS   Use absolute values?
  Typ_LOGI,No              ,Yes
  Def_*GET(common,,palccm,,int,100)
:E END
:! 
:N Fnc_LCASE
:S    272,   156,   109
:T Command
:C )! Fnc_LCASE
:A Read Load Case
:D Read Load Case
:H Hlp_C_LCASE
:K #(POST1)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_LCASE
 Fld_0
  Typ_Lab
  Prm_[LCASE]  Read Load Case
 Fld_2
  Prm_LCNO   Ref. no. of load case
  Typ_INT
:E END
:! 
:N Fnc_LCCAT
:S    242,   123,   112
:T Cmd_P
:C )! Fnc_LCCAT
:A     Lines
:D Concatenate Lines
:K #(PREP7)
:H Hlp_C_LCCAT
Inp_P
Cmd_LCCAT
 Fld_2
  Typ_LINE
  Prm_[LCCAT]  Pick or enter lines to be concatenated
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LCCAT_del
:S    782,    94,   681
:T Cmd_N
:C )! Fnc_LCCAT_del
:A    Lines
:K #(PREP7)
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
! Exclude_from_paths
Cmd__Z1=LSINQR(0,13)
! Exclude_from_paths
Cmd_*IF,_z1,ne,0,then
! Exclude_from_paths
Cmd_)/GO
! Exclude_from_paths
Cmd_LSEL,R,LCCA
! Exclude_from_paths
Cmd_)/NOPR
! Exclude_from_paths
Cmd__Z2=LSINQR(0,13)
! Exclude_from_paths
Cmd_)/GO
Cmd_LDELE,ALL
Cmd_)/NOPR
Cmd__Z3=_Z1-_Z2
! Exclude_from_paths
Cmd_*IF,_Z3,NE,0,THEN
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_*ENDIF
! Exclude_from_paths
Cmd_*ELSE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_*ENDIF
! Exclude_from_paths
Cmd_)/GO
! Exclude_from_paths
:E END
:! 
:N Fnc_LCCAT_m
:S    242,   123,   112
:T Cmd_P
:C )! Fnc_LCCAT_m
:A Lines
:D Concatenate Lines
:K #(PREP7)
:H Hlp_C_LCCAT
Inp_P
Cmd_LCCAT
 Fld_2
  Typ_LINE
  Prm_[LCCAT]  Pick or enter lines to be concatenated
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LCDEF
:S    608,   158,   443
:T Command
:C )! Fnc_LCDEF
:D Create Load Case from Results File
:H Hlp_C_LCDEF
:K #(POST1)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_LCDEF
 Fld_0
  Typ_Lab
  Prm_[LCDEF]  Create Load Case from Results File
 Fld_2
  Prm_LCNO  Ref. no. for load case
  Typ_int
 Fld_0
  Typ_Lab
  Prm_LSTEP,SBSTEP
 Fld_3
  Prm_      Load step + substep nos. -
  Typ_Int2
 Fld_0
  Typ_Lab
  Prm_      - to be defined as the load case
 Fld_5
  K_FL(HARMONIC)
  Prm_KIMG  Real or imaginary part
  Typ_LIS_OPTIONB
  LIS_Real part                       ,0
  LIS_Imaginary part                  ,1
:E END
:! 
:N Fnc_LCDEF_eras1
:S    161,   132,    22
:T Command
:C )! Fnc_LCDEF_eras1
:H Hlp_C_LCDEF
:K #(POST1)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_LCDEF,ERASE
:E END
:! 
:N Fnc_LCDEF_eras2
:S    204,   132,    65
:T Command
:C )! Fnc_LCDEF_eras2
:H Hlp_C_LCDEF
:K #(POST1)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_P
Cmd_LCDEF
 Fld_2
  Typ_DEF_*CPAR(1)
 Fld_3
  Typ_DEF_ERASE
:E END
:! 
:N Fnc_LCDEF_erase
:S    596,   236,   353
:T Command
:C )! Fnc_LCDEF_erase
:A Erase Load Case
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )/GO
:D Erase Load Cases and Load Case Files
:H Hlp_C_LCDEF
:K #(POST1)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[LCDEF]  Erase Load Cases and Load Case Files
 Fld_2
  Prm_LCNO  Load cases to be erased
  Typ_LIS_RADIOB
  LIS_All load cases  ,1
  LIS_Specified LC    ,2
Cmd_)*CSET,1,1
 Fld_2
  Prm_      Specified load case no.
  Typ_INT
Cmd_)/GO
Cal_Fnc_LCDEF_eras1,2,EQ,1,2
Cal_Fnc_LCDEF_eras2,2,EQ,2,2
:E END
:! 
:N Fnc_LCDEF_stat
:S    304,   168,   129
:T Command
:C )! Fnc_LCDEF_stat
:A List Load Cases
:D List Load Cases
:H Hlp_C_LCDEF
:K #(POST1)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_LCDEF,STAT
 Fld_2
  Prm_[LCDEF],STAT  List load cases
  Typ_LIS_RADIOB
  LIS_List selected   ," "
  LIS_List all        ,ALL
:E END
:! 
:N Fnc_LCFACT
:S    465,   183,   275
:T Command
:C )! Fnc_LCFACT
:A    Scale Factor
:D Scale Factor for Load Case Operations
:H Hlp_C_LCFACT
:K #(POST1)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_LCFACT
 Fld_0
  Typ_Lab
  Prm_[LCFACT]  Scale factor for Load Case Operations
 Fld_2
  Prm_LCNO   Ref. no. for load case
  Typ_INT
 Fld_0
  Typ_LAB
  Prm_       (Enter ALL for all load cases)
 Fld_3
  Prm_FACT   Scale factor
  Typ_REAL
  Def_*GET(common,,palccm,,real,1)
:E END
:! 
:N Fnc_LCFILE
:S    401,   198,   196
:T Command
:C )! Fnc_LCFILE
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:D Create Load Case from Load Case File
:H Hlp_C_LCFILE
:K #(POST1)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_LCFILE
 Fld_0
  Typ_Lab
  Prm_[LCFILE]  Create Load Case from Load Case File
 Fld_2
  Prm_LCNO   Ref. no. for load case
  Typ_INT
 Fld_3
  Prm_Fname  Load case file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LCLEAR
:S    232,   116,   109
:T Cmd_P
:C )! Fnc_LCLEAR
:A Lines
:D Clear Lines
:K #(PREP7)
:H Hlp_C_LCLEAR
Inp_P
Cmd_LCLEAR
 Fld_2
  Typ_LINE
  Prm_[LCLEAR]  Pick or enter lines to be cleared
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LCOMB
:S    239,   111,   121
:T Cmd_P
:C )! Fnc_LCOMB
:A Lines
:D Add Lines
:K #(PREP7)
:H Hlp_C_LCOMB
Inp_P
Cmd_)!
 Fld_2
  Typ_LINE
  Prm_[LCOMB]  Pick or enter the lines to be added
  Min_2
  Cnt_s
  PCN_1
Cal_Fnc_LCOMB2
:E END
:! 
:N Fnc_LCOMB2
:S    324,   115,   202
:T Command
:C )! Fnc_LCOMB2
:A Lines
:D Add Lines
:K #(PREP7)
:H Hlp_C_LCOMB
Cmd_LCOMB
 Fld_0
  Typ_Lab
  Prm_[LCOMB]  Combine Lines into One Line
 Fld_2
  Typ_Def_P51X
 Fld_4
  Prm_KEEP  Existing lines will be
  Typ_LIS_OptionB
  LIS_Deleted         ,0
  LIS_Kept            ,1
:E END
:! 
:N Fnc_LCOPER_add
:S    525,   164,   354
:T Command
:C )! Fnc_LCOPER_add
:A Add
:D Add Load Cases
:H Hlp_C_LCOPER
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_LCOPER,ADD
 Fld_0
  Typ_Lab
  Prm_[LCOPER],ADD    Database = Database + (LCASE1 * LCASE2)
Fld_0
Typ_SEP
 Fld_2
  Prm_LCASE1  1st Load case
  Typ_INT
  Def_1
 Fld_0
  Typ_Sep
 Fld_3
  Prm_Oper2  Operation w/2nd load case
  Typ_LIS_OptionB
  LIS_-none-          ," "
  LIS_Multiply        ,MULT
 Fld_4
  Prm_LCASE2  2nd Load case
  Typ_INT
  Def_Blank
:E END
:! 
:N Fnc_LCOPER_lprin
:S    406,   210,   189
:T Command
:C )! Fnc_LCOPER_lprin
:A Line Elem Stress
:D Recalculate Line-Element Principal Stresses
:H Hlp_C_LCOPER
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_NoApply
Cmd_LCOPER,LPRIN
 Fld_0
  Typ_Lab
  Prm_[LCOPER],LPRIN   This function recalculates principal stresses
 Fld_0
  Typ_Lab
  Prm_                 for all structural line elements.
:E END
:! 
:N Fnc_LCOPER_mn_mx
:S    728,   193,   528
:T Command
:C )! Fnc_LCOPER_mn_mx
:A Min & Max
:D Minimum and Maximum of Load Cases
:H Hlp_C_LCOPER
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_LCOPER
 Fld_0
  Typ_Lab
  Prm_[LCOPER]  Database = min or max of Database and (LCASE1 * LCASE2)
Fld_0
Typ_SEP
 Fld_2
  Prm_Oper    Type of comparison
  Typ_LIS_OPTIONB
  LIS_Algebraic min   ,MIN
  LIS_Algebraic max   ,MAX
  LIS_Absolute val min,ABMN
  LIS_Absolute val max,ABMX
 Fld_3
  Prm_LCASE1  1st Load case
  Typ_INT
  Def_1
 Fld_0
  Typ_Sep
 Fld_4
  Prm_Oper2  Operation w/2nd load case
  Typ_LIS_OptionB
  LIS_-none-          ," "
  LIS_Multiply        ,MULT
 Fld_5
  Prm_LCASE2  2nd Load Case
  Typ_INT
  Def_Blank
:E END
:! 
:N Fnc_LCOPER_sqrt
:S    390,   202,   181
:T Command
:C )! Fnc_LCOPER_sqrt
:A Square Root
:D Square Root of Results Portion of Database
:H Hlp_C_LCOPER
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_NoApply
Cmd_LCOPER,SQRT
 Fld_0
  Typ_Lab
  Prm_[LCOPER],SQRT  This function calculates the square root of
 Fld_0
  Typ_Lab
  Prm_               the results portion of database.
:E END
:! 
:N Fnc_LCOPER_squa
:S    381,   192,   182
:T Command
:C )! Fnc_LCOPER_squa
:A Square
:D Square of Results Portion of Database
:H Hlp_C_LCOPER
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_NoApply
Cmd_LCOPER,SQUA
 Fld_0
  Typ_Lab
  Prm_[LCOPER],SQUA   This function calculates the square of the
 Fld_0
  Typ_Lab
  Prm_                results portion of the database.
:E END
:! 
:N Fnc_LCOPER_srss
:S    567,   193,   367
:T Command
:C )! Fnc_LCOPER_srss
:A SRSS
:D Square-Root-Sum-of-Squares of Load Cases
:H Hlp_C_LCOPER
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_LCOPER,SRSS
 Fld_0
  Typ_Lab
  Prm_[LCOPER],SRSS     Database = SRSS of Database and (LCASE1 * LCASE2)
Fld_0
Typ_SEP
 Fld_2
  Prm_LCASE1  1st Load case
  Typ_INT
  Def_1
 Fld_0
  Typ_Sep
 Fld_3
  Prm_Oper2  Operation w/2nd load case
  Typ_LIS_OptionB
  LIS_-none-          ," "
  LIS_Multiply        ,MULT
 Fld_4
  Prm_LCASE2  2nd Load Case
  Typ_INT
  Def_Blank
:E END
:! 
:N Fnc_LCOPER_sub
:S    535,   174,   354
:T Command
:C )! Fnc_LCOPER_sub
:A Subtract
:D Subtract Load Cases
:H Hlp_C_LCOPER
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_LCOPER,SUB
 Fld_0
  Typ_Lab
  Prm_[LCOPER],SUB    Database = Database - (LCASE1 * LCASE2)
Fld_0
Typ_SEP
 Fld_2
  Prm_LCASE1  1st Load case
  Typ_INT
  Def_1
 Fld_0
  Typ_Sep
 Fld_3
  Prm_Oper2  Operation w/2nd load case
  Typ_LIS_OptionB
  LIS_-none-          ," "
  LIS_Multiply        ,MULT
 Fld_4
  Prm_LCASE2  2nd Load case
  Typ_INT
  Def_Blank
:E END
:! 
:N Fnc_LCSEL
:S    590,   161,   422
:T Command
:C )! Fnc_LCSEL
:A    Sele Ld Cases
:D Select Load Cases
:H Hlp_C_LCSEL
:K #(POST1)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_LCSEL
 Fld_0
  Typ_Lab
  Prm_[LCSEL]  Select Load Cases
 Fld_2
  Prm_Type   Type of Select
  Typ_LIS_OPTIONB
  LIS_From Full       ,S
  LIS_Reselect        ,R
  LIS_Also Select     ,A
  LIS_Unselect        ,U
  LIS_Select All      ,ALL
  LIS_Select None     ,NONE
  LIS_Invert          ,INVE
  LIS_Show status     ,STAT
 Fld_0
  Typ_Lab
  Prm_LCMIN,LCMAX,LCINC
 Fld_3
  Prm_       Load cases to be selected
  Typ_INT3
:E END
:! 
:N Fnc_LCSL
:S    248,   136,   105
:T Cmd_P
:C )! Fnc_LCSL ORPHAN
:A Lines by Lines
:D Divide Lines by Lines
:K #(PREP7)
:H Hlp_C_LCSL
Inp_P
Cmd_LCSL
 Fld_2
  Typ_LINE
  Prm_[LCSL]  Pick or enter lines to be divided
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LCWRITE
:S    462,   239,   216
:T Command
:C )! Fnc_LCWRITE
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A Write Load Case
:D Write Load Case from Database to Load Case File
:H Hlp_C_LCWRITE
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_LCWRITE
 Fld_0
  Typ_Lab
  Prm_[LCWRITE]  Write Load Case from Database to Load Case File
 Fld_2
  Prm_LCNO   Ref. no. for load case
  Typ_INT
 Fld_3
  Prm_Fname  Load case file
  Typ_FILE_INLINE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LCZERO
:S    325,   167,   151
:T Command
:C )! Fnc_LCZERO
:A Zero Load Case
:D Zero Load Case
:H Hlp_C_LCZERO
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_NoApply
Cmd_LCZERO
 Fld_0
  Typ_Lab
  Prm_[LCZERO]  This function zeroes out the results portion
 Fld_0
  Typ_Lab
  Prm_          of the database!
:E END
:! 
:N Fnc_LC_create
:S    343,   172,   164
:T Command
:C )! Fnc_LC_create
:A Create Load Case
:D Create Load Case
:H Hlp_UI_lccreate
:K #(POST1)
:P (LINPLUS*THERMAL*ELECMAG)
Inp_NoApply
Cmd_)!
 Fld_2
  Prm_Create load case from
  Typ_LIS_RADIOB
  LIS_Results file    ,1
  LIS_Load case file  ,2
Cal_Fnc_LCDEF,2,eq,1
Cal_Fnc_LCFILE,2,eq,2
:E END
:! 
:N Fnc_LDELE
:S    238,   124,   107
:T Cmd_P
:C )! Fnc_LDELE
:A Lines Only
:D Delete Lines Only
:K #(PREP7)
:H Hlp_C_LDELE
Inp_P
Cmd_LDELE
 Fld_2
  Typ_LINE
  Prm_[LDELE]  Pick or enter lines to be deleted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LDELE_sweep
:S    282,   144,   131
:T Cmd_P
:C )! Fnc_LDELE_sweep
:A Line and Below
:D Delete Line and Below
:K #(PREP7)
:H Hlp_C_LDELE
Inp_P
Cmd_LDELE
 Fld_5
  Typ_DEF_1
 Fld_2
  Typ_LINE
  Prm_[LDELE],,,,1  Pick or enter lines to be deleted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LDIV
:S    282,   131,   144
:T Cmd_P
:C )! Fnc_LDIV
:A Line into N Ln's
:D Div Line into N Lines
:K #(PREP7)
:H Hlp_C_LDIV
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_LINE
  Prm_[LDIV]  Pick or enter line to be divided
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_LDIV_B
:E END
:! 
:N Fnc_LDIV_2
:S    325,   135,   183
:T Cmd_P
:C )! Fnc_LDIV_2
:A Line into 2 Ln's
:D Div Line into 2 Lines
:K #(PREP7)
:H Hlp_C_LDIV
Inp_P
Cmd_LDIV
 Fld_2
  Typ_LINE
  Prm_[LDIV]  Pick or enter line to be divided
  Min_1
  Cnt_1
 Fld_3
  Typ_XYZ_SCREEN
  Prm_Pick location along line
  Min_1
  Cnt_1
  PFM_1
  Pwr_1
:E END
:! 
:N Fnc_LDIV_B
:S    443,   140,   296
:T Command
:C )! Fnc_LDIV_B
:A Line into N Ln's
:D Divide Line into N Lines
:K #(PREP7)
:H Hlp_C_LDIV
Cmd_LDIV
 Fld_0
  Typ_Lab
  Prm_[LDIV]  Divide Line into N Lines
 Fld_2
  Typ_INT
  Prm_NL1   Line to be divided
  Def_*PAR(_z1)
 Fld_5
  Typ_INT
  Prm_NDIV  No. of lines to create
  Def_2
 Fld_6
  Prm_KEEP  Existing line will 
  Typ_LIS_OptionB
  LIS_Be modified     ,0
  LIS_Not be modified ,1
:E END
:! 
:N Fnc_LDIV_opt
:S    289,   150,   132
:T Cmd_P
:C )! Fnc_LDIV_opt
:A Lines w/ Options
:D Divide Multiple Lines w/ Options
:K #(PREP7)
:H Hlp_C_LDIV
Inp_P
Cmd_)!
 Fld_2
  Typ_LINE
  Prm_[LDIV]  Pick or enter line(s) to be divided
  Min_1
  Cnt_s
  PFM_1
  PCN_1
Cal_Fnc_LDIV_opt_B
:E END
:! 
:N Fnc_LDIV_opt_B
:S    637,   138,   492
:T Command
:C )! Fnc_LDIV_opt_B
:D Divide Multiple Lines with Options
:K #(PREP7)
:H Hlp_C_LDIV
Cmd_LDIV
 Fld_0
  Typ_Lab
  Prm_[LDIV]  Divide Multiple Lines with Options
 Fld_2
  Typ_Def_P51X
 Fld_5
  Typ_INT
  Prm_NDIV   No. of lines to create
  Def_2
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Following 2 fields ignored if NDIV > 2
 Fld_3
  Typ_REAL
  Prm_RATIO  Ratio of line lengths
  Def_0.5
 Fld_4
  Typ_INT
  Prm_PDIV   Keypoint number to assign
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_6
  Prm_KEEP  Existing line will 
  Typ_LIS_OptionB
  LIS_Be modified     ,0
  LIS_Not be modified ,1
:E END
:! 
:N Fnc_LDPLOT
:S   2963,   326,  2630
:T Cmd
:C )! Fnc_LDPLOT
:C )/NOPR
:C )*del,_z
:C )*dim,_z,array,40
:C )*DO,_i,1,40
:C )*get,_z(_i),common,,phascom,,int,_i
:C )*if,_z(_i),eq,3,then
:C )keyw,tran%_i%,1
:C )*endif
:C )*enddo
:C )/GO
:A Transient only
:D Plot load curve for Transient Analysis
:K (LSDYNA)
:H Hlp_C_EDLDPLOT
Cmd_)/NOPR
Cmd_)*CSET,1,5
 Fld_0
  Typ_Lab
  Prm_[EDLDPLOT] Plot load curves for Transient Analysis
!
  Fld_0
   Typ_Sep
!
 Fld_2
  Prm_Load Labels
  Typ_Lis
  K_LN(TRAN2)
  Lis_FX,FX
  K_LN(TRAN3)
  Lis_FY,FY
  K_LN(TRAN4)
  Lis_FZ,FZ
  K_LN(TRAN5)
  Lis_MX,MX
  K_LN(TRAN6)
  Lis_MY,MY
  K_LN(TRAN7)
  Lis_MZ,MZ
  K_LN(TRAN8)
  Lis_UX,UX
  K_LN(TRAN9)
  Lis_UY,UY
  K_LN(TRAN10)
  Lis_UZ,UZ
  K_LN(TRAN17)
  Lis_ROTX,ROTX
  K_LN(TRAN18)
  Lis_ROTY,ROTY
  K_LN(TRAN19)
  Lis_ROTZ,ROTZ
  K_LN(TRAN14)
  Lis_VX,VX
  K_LN(TRAN15)
  Lis_VY,VY
  K_LN(TRAN16)
  Lis_VZ,VZ
  K_LN(TRAN11)
  Lis_AX,AX
  K_LN(TRAN12)
  Lis_AY,AY
  K_LN(TRAN13)
  Lis_AZ,AZ
  K_LN(TRAN20)
  Lis_ACLX,ACLX
  K_LN(TRAN21)
  Lis_ACLY,ACLY
  K_LN(TRAN22)
  Lis_ACLZ,ACLZ
  K_LN(TRAN23)
  Lis_OMGX,OMGX
  K_LN(TRAN24)
  Lis_OMGY,OMGY
  K_LN(TRAN25)
  Lis_OMGZ,OMGZ
  K_LN(TRAN1)
  Lis_PRES,PRES
  K_LN(TRAN26)
  Lis_RBUX,RBUX
  K_LN(TRAN27)
  Lis_RBUY,RBUY
  K_LN(TRAN28)
  Lis_RBUZ,RBUZ
  K_LN(TRAN29)
  Lis_RBVX,RBVX
  K_LN(TRAN30)
  Lis_RBVY,RBVY
  K_LN(TRAN31)
  Lis_RBVZ,RBVZ
  K_LN(TRAN32)
  Lis_RBRX,RBRX
  K_LN(TRAN33)
  Lis_RBRY,RBRY
  K_LN(TRAN34)
  Lis_RBRZ,RBRZ
  K_LN(TRAN35)
  Lis_RBFX,RBFX
  K_LN(TRAN36)
  Lis_RBFY,RBFY
  K_LN(TRAN37)
  Lis_RBFZ,RBFZ
  K_LN(TRAN38)
  Lis_RBMX,RBMX
  K_LN(TRAN39)
  Lis_RBMY,RBMY
  K_LN(TRAN40)
  Lis_RBMZ,RBMZ
 Fld_0
   Typ_Sep
 Fld_3
   Prm_Component name or PART number:         
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_*READ,PART
   Lis_None defined,' '
  Fld_4
   Prm_Parameter name for time values:          
   Typ_Lis_OptionB
   Lis_*READ,PAR
   Lis_None,' '
  Fld_5
   Prm_Parameter name for data values:          
   Typ_Lis_OptionB
   Lis_*READ,PAR
   Lis_None,' '
  Fld_6
   Typ_Def_0
! 
 Fld_0
  Typ_Sep
!
Cmd_)/GO
! 
! Exclude_from_paths
Cmd_/GTHK,CURVE
Fld_2
Prm_[/GTHK]   Thickness of curves
Typ_LIS_OPTIONB
LIS_Single          ,1
LIS_Double          ,2
LIS_Triple          ,3
LIS_Four times      ,4
LIS_Five times      ,5
LIS_Six times       ,6
LIS_Seven times     ,7
LIS_Eight times     ,8
LIS_Nine times      ,9
LIS_Ten times       ,10
Def_*GET(common,,grcom,,int,18)
! 
! Exclude_from_paths
Cmd_/GRID
Fld_2
Prm_[/GRID]   Type of grid
Typ_LIS_OPTIONB
LIS_None            ,0
LIS_X and Y lines   ,1
LIS_X lines only    ,2
LIS_Y lines only    ,3
   Def_*GET(COMMON,,D3COM,,INT,94)
!
Fld_0
Typ_Sep
!
! Exclude_from_paths
Cmd_/GROPT,LOGY
Fld_2
Prm_[/GROPT],LOGY    Graph type
Typ_LIS_OPTIONB
LIS_Linear          ,OFF
LIS_Semi-Log        ,ON
   Def_0
!
! Exclude_from_paths
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_[/COLOR],CURVE   Graph color
Typ_COLOR
Def_7
Fld_4
Typ_Def_1
!
Cal_Fnc_EDLDPLOT_2
:E END
:! 
:N Fnc_LDPLOT2
:S   2919,   325,  2587
:T Cmd
:C )!Fnc_LDPLOT2
:C )/NOPR
:C )*del,_z
:C )*dim,_z,array,40
:C )*DO,_i,1,40
:C )*get,_z(_i),common,,phascom,,int,_i
:C )*if,_z(_i),eq,1,then
:C )keyw,dyn%_i%,1
:C )*endif
:C )*enddo
:C )/GO
:A Dynamic relax
:D Plot load curve for Dynamic Relaxation
:K (LSDYNA)
:H Hlp_C_EDLDPLOT
Cmd_)/NOPR
Cmd_)*CSET,1,5
 Fld_0
  Typ_Lab
  Prm_[EDLDPLOT] Plot load curve for Dynamic Relaxation
  Fld_0
   Typ_Sep
!
 Fld_2
  Prm_Load Labels
  Typ_Lis
  K_LN(DYN2)
  Lis_FX,FX
  K_LN(DYN3)
  Lis_FY,FY
  K_LN(DYN4)
  Lis_FZ,FZ
  K_LN(DYN5)
  Lis_MX,MX
  K_LN(DYN6)
  Lis_MY,MY
  K_LN(DYN7)
  Lis_MZ,MZ
  K_LN(DYN8)
  Lis_UX,UX
  K_LN(DYN9)
  Lis_UY,UY
  K_LN(DYN10)
  Lis_UZ,UZ
  K_LN(DYN17)
  Lis_ROTX,ROTX
  K_LN(DYN18)
  Lis_ROTY,ROTY
  K_LN(DYN19)
  Lis_ROTZ,ROTZ
  K_LN(DYN14)
  Lis_VX,VX
  K_LN(DYN15)
  Lis_VY,VY
  K_LN(DYN16)
  Lis_VZ,VZ
  K_LN(DYN11)
  Lis_AX,AX
  K_LN(DYN12)
  Lis_AY,AY
  K_LN(DYN13)
  Lis_AZ,AZ
  K_LN(DYN20)
  Lis_ACLX,ACLX
  K_LN(DYN21)
  Lis_ACLY,ACLY
  K_LN(DYN22)
  Lis_ACLZ,ACLZ
  K_LN(DYN23)
  Lis_OMGX,OMGX
  K_LN(DYN24)
  Lis_OMGY,OMGY
  K_LN(DYN25)
  Lis_OMGZ,OMGZ
  K_LN(DYN1)
  Lis_PRES,PRES
  K_LN(DYN26)
  Lis_RBUX,RBUX
  K_LN(DYN27)
  Lis_RBUY,RBUY
  K_LN(DYN28)
  Lis_RBUZ,RBUZ
  K_LN(DYN29)
  Lis_RBVX,RBVX
  K_LN(DYN30)
  Lis_RBVY,RBVY
  K_LN(DYN31)
  Lis_RBVZ,RBVZ
  K_LN(DYN32)
  Lis_RBRX,RBRX
  K_LN(DYN33)
  Lis_RBRY,RBRY
  K_LN(DYN34)
  Lis_RBRZ,RBRZ
  K_LN(DYN35)
  Lis_RBFX,RBFX
  K_LN(DYN36)
  Lis_RBFY,RBFY
  K_LN(DYN37)
  Lis_RBFZ,RBFZ
  K_LN(DYN38)
  Lis_RBMX,RBMX
  K_LN(DYN39)
  Lis_RBMY,RBMY
  K_LN(DYN40)
  Lis_RBMZ,RBMZ
 Fld_0
   Typ_Sep
 Fld_3
   Prm_Component name or PART number:         
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_*READ,PART
   Lis_None defined,' '
  Fld_4
   Prm_Parameter name for time values:          
   Typ_Lis_OptionB
   Lis_*READ,PAR
   Lis_None,' '
  Fld_5
   Prm_Parameter name for data values:          
   Typ_Lis_OptionB
   Lis_*READ,PAR
   Lis_None,' '
  Fld_0
   Typ_Sep
  Fld_6
   Typ_Def_1
! 
Cmd_)/GO
! 
! Exclude_from_paths
Cmd_/GTHK,CURVE
Fld_2
Prm_[/GTHK]   Thickness of curves
Typ_LIS_OPTIONB
LIS_Single          ,1
LIS_Double          ,2
LIS_Triple          ,3
LIS_Four times      ,4
LIS_Five times      ,5
LIS_Six times       ,6
LIS_Seven times     ,7
LIS_Eight times     ,8
LIS_Nine times      ,9
LIS_Ten times       ,10
Def_*GET(common,,grcom,,int,18)
! 
! Exclude_from_paths
Cmd_/GRID
Fld_2
Prm_[/GRID]   Type of grid
Typ_LIS_OPTIONB
LIS_None            ,0
LIS_X and Y lines   ,1
LIS_X lines only    ,2
LIS_Y lines only    ,3
   Def_*GET(COMMON,,D3COM,,INT,94)
!
Fld_0
Typ_Sep
!
! Exclude_from_paths
Cmd_/GROPT,LOGY
Fld_2
Prm_[/GROPT],LOGY    Graph type
Typ_LIS_OPTIONB
LIS_Linear          ,OFF
LIS_Semi-Log        ,ON
   Def_0
!
! Exclude_from_paths
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_[/COLOR],CURVE   Graph color
Typ_COLOR
Def_7
Fld_4
Typ_Def_1
!
Cal_Fnc_EDLDPLOT_2
:E END
:! 
:N Fnc_LDPLOT3
:S   2993,   346,  2640
:T Cmd
:C )! Fnc_LDPLOT3
:C )/NOPR
:C )*del,_z
:C )*dim,_z,array,40
:C )*DO,_i,1,40
:C )*get,_z(_i),common,,phascom,,int,_i
:C )*if,_z(_i),eq,2,then
:C )keyw,both%_i%,1
:C )*endif
:C )*enddo
:C )/GO
:A Trans and Dynam
:D Plot load curve for both Transient and Dynamic Analyses
:K (LSDYNA)
:H Hlp_C_EDLDPLOT
Cmd_)/NOPR
Cmd_)*CSET,1,5
 Fld_0
  Typ_Lab
  Prm_[EDLDPLOT] Plot load curves for Transient and Dynamic Analyses
  Fld_0
   Typ_Sep
!
 Fld_2
  Prm_Load Labels
  Typ_Lis
  K_LN(BOTH2)
  Lis_FX,FX
  K_LN(BOTH3)
  Lis_FY,FY
  K_LN(BOTH4)
  Lis_FZ,FZ
  K_LN(BOTH5)
  Lis_MX,MX
  K_LN(BOTH6)
  Lis_MY,MY
  K_LN(BOTH7)
  Lis_MZ,MZ
  K_LN(BOTH8)
  Lis_UX,UX
  K_LN(BOTH9)
  Lis_UY,UY
  K_LN(BOTH10)
  Lis_UZ,UZ
  K_LN(BOTH17)
  Lis_ROTX,ROTX
  K_LN(BOTH18)
  Lis_ROTY,ROTY
  K_LN(BOTH19)
  Lis_ROTZ,ROTZ
  K_LN(BOTH14)
  Lis_VX,VX
  K_LN(BOTH15)
  Lis_VY,VY
  K_LN(BOTH16)
  Lis_VZ,VZ
  K_LN(BOTH11)
  Lis_AX,AX
  K_LN(BOTH12)
  Lis_AY,AY
  K_LN(BOTH13)
  Lis_AZ,AZ
  K_LN(BOTH20)
  Lis_ACLX,ACLX
  K_LN(BOTH21)
  Lis_ACLY,ACLY
  K_LN(BOTH22)
  Lis_ACLZ,ACLZ
  K_LN(BOTH23)
  Lis_OMGX,OMGX
  K_LN(BOTH24)
  Lis_OMGY,OMGY
  K_LN(BOTH25)
  Lis_OMGZ,OMGZ
  K_LN(BOTH1)
  Lis_PRES,PRES
  K_LN(BOTH26)
  Lis_RBUX,RBUX
  K_LN(BOTH27)
  Lis_RBUY,RBUY
  K_LN(BOTH28)
  Lis_RBUZ,RBUZ
  K_LN(BOTH29)
  Lis_RBVX,RBVX
  K_LN(BOTH30)
  Lis_RBVY,RBVY
  K_LN(BOTH31)
  Lis_RBVZ,RBVZ
  K_LN(BOTH32)
  Lis_RBRX,RBRX
  K_LN(BOTH33)
  Lis_RBRY,RBRY
  K_LN(BOTH34)
  Lis_RBRZ,RBRZ
  K_LN(BOTH35)
  Lis_RBFX,RBFX
  K_LN(BOTH36)
  Lis_RBFY,RBFY
  K_LN(BOTH37)
  Lis_RBFZ,RBFZ
  K_LN(BOTH38)
  Lis_RBMX,RBMX
  K_LN(BOTH39)
  Lis_RBMY,RBMY
  K_LN(BOTH40)
  Lis_RBMZ,RBMZ
 Fld_0
   Typ_Sep
 Fld_3
   Prm_Component name or PART number:         
   Typ_Lis_OptionB
   Lis_*READ,CM
   Lis_*READ,PART
   Lis_None defined,' '
  Fld_4
   Prm_Parameter name for time values:          
   Typ_Lis_OptionB
   Lis_*READ,PAR
   Lis_None,' '
  Fld_5
   Prm_Parameter name for data values:          
   Typ_Lis_OptionB
   Lis_*READ,PAR
   Lis_None,' '
  Fld_0
   Typ_Sep
  Fld_6
   Typ_Def_2
! 
Cmd_)/GO
! 
! Exclude_from_paths
Cmd_/GTHK,CURVE
Fld_2
Prm_[/GTHK]   Thickness of curves
Typ_LIS_OPTIONB
LIS_Single          ,1
LIS_Double          ,2
LIS_Triple          ,3
LIS_Four times      ,4
LIS_Five times      ,5
LIS_Six times       ,6
LIS_Seven times     ,7
LIS_Eight times     ,8
LIS_Nine times      ,9
LIS_Ten times       ,10
Def_*GET(common,,grcom,,int,18)
! 
! Exclude_from_paths
Cmd_/GRID
Fld_2
Prm_[/GRID]   Type of grid
Typ_LIS_OPTIONB
LIS_None            ,0
LIS_X and Y lines   ,1
LIS_X lines only    ,2
LIS_Y lines only    ,3
   Def_*GET(COMMON,,D3COM,,INT,94)
!
Fld_0
Typ_Sep
!
! Exclude_from_paths
Cmd_/GROPT,LOGY
Fld_2
Prm_[/GROPT],LOGY    Graph type
Typ_LIS_OPTIONB
LIS_Linear          ,OFF
LIS_Semi-Log        ,ON
   Def_0
!
! Exclude_from_paths
Cmd_/COLOR
Fld_2
Typ_Def_CURVE
Fld_3
Prm_[/COLOR],CURVE   Graph color
Typ_COLOR
Def_7
Fld_4
Typ_Def_1
!
Cal_Fnc_EDLDPLOT_2
:E END
:! 
:N Fnc_LDRAG
:S    349,   132,   210
:T Cmd_P
:C )! Fnc_LDRAG
:A    Along Lines
:D Sweep KPs along Lines
:K #(PREP7)
:H Hlp_C_LDRAG
Inp_P
Cmd_LDRAG
 Fld_2
  Typ_KEYP
  Prm_[LDRAG]  Pick or enter keypoints to be swept (dragged)
  Min_1
  Cnt_s
  PCN_1
 Fld_8
  Typ_LINE
  Prm_Pick or enter lines defining the sweep (drag) path
  Min_1
  Cnt_s
:E END
:! 
:N Fnc_LDREAD_EF
:S    709,   270,   432
:T Command
:C )! Fnc_LDREAD_EF
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A    From Elec An
:D Apply EF from Electrostatic Analysis
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((ELEM3D+MAGNETIC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_LDREAD
Cmd_LDREAD,EF
 Fld_0
  Typ_Lab
  Prm_[LDREAD],EF  Apply Electric Field from Electrostatic Analysis
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LDREAD_dyna
:S    616,   182,   427
:T Command
:C )! Fnc_LDREAD_dyna
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A Temp From ANSYS
:D Apply TEMP from Thermal Analysis
:H Hlp_C_LDREAD
Cmd_LDREAD,TEMP
 Fld_0
  Typ_Lab
  Prm_[LDREAD],TEMP  Apply Temperature from Thermal Analysis
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LDREAD_film
:S    666,   223,   436
:T Command
:C )! Fnc_LDREAD_film
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A From Fluid Analy
:D Apply FILM from Fluid Analysis
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_LDREAD
Inp_NoApply
Cmd_LDREAD,HFLM
 Fld_0
  Typ_Lab
  Prm_[LDREAD],HFLM  Apply Convection from Fluid Analysis
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LDREAD_hfhf
:S    689,   232,   450
:T Command
:C )! Fnc_LDREAD_hfhf
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A From EMAG Analy
:D Apply HFLU from Electromagnetic Analysis
:K #(PREP7*SOLUTION)
:P (THERMAL*ELECMAG)
:H Hlp_C_LDREAD
Inp_NoApply
Cmd_LDREAD,EHFL
 Fld_0
  Typ_Lab
  Prm_[LDREAD],EHFLU  Apply Heat Flux from High Frequency EMAG Analysis
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LDREAD_hflu
:S    666,   224,   435
:T Command
:C )! Fnc_LDREAD_hflu
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A From Fluid  Analy
:D Apply HFLU from Fluid Analysis
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_LDREAD
Inp_NoApply
Cmd_LDREAD,HFLU
 Fld_0
  Typ_Lab
  Prm_[LDREAD],HFLU  Apply Heat Flux from Fluid Analysis
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LDREAD_hgen
:S    816,   224,   585
:T Command
:C )! Fnc_LDREAD_hgen
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A From Mag Analy
:D Apply HGEN from Magnetic Analysis
:K #(PREP7*SOLUTION)
:P (THERMAL*FLOTRAN)
:H Hlp_C_LDREAD
Inp_NoApply
Cmd_LDREAD,HGEN
 Fld_0
  Typ_Lab
  Prm_[LDREAD],HGEN  Apply Heat Generation from Magnetic Analysis
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME,KIMG
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_5
  Prm_       Real or imaginary part
  Typ_LIS_OPTIONB
  LIS_Real part       ,0
  LIS_Imaginary part  ,1
  LIS_Time-avg. part  ,2
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LDREAD_js
:S    735,   292,   436
:T Command
:C )! Fnc_LDREAD_js
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A    From Elec An
:D Apply JS from Electric Conduction Analysis
:K (PR_ELMAG*pr_set)
:K #(PREP7*SOLUTION)
:K #((ELEM3D+MAGNETIC+VECTORP*EDGEFLX)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_LDREAD
Cmd_LDREAD,JS
 Fld_0
  Typ_Lab
  Prm_[LDREAD],JS  Apply Curr Density from Electric Conduction Analysis
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LDREAD_mforc
:S    800,   226,   567
:T Command
:C )! Fnc_LDREAD_mforc
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A From Mag Analy
:D Apply FORC from Magnetic Analysis
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG)
:H Hlp_C_LDREAD
Cmd_LDREAD,FORC
 Fld_0
  Typ_Lab
  Prm_[LDREAD],FORC  Apply Forces from a Magnetics Analysis
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME,KIMG
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_5
  Prm_       Real or imaginary part
  Typ_LIS_OPTIONB
  LIS_Real part       ,0
  LIS_Imaginary part  ,1
  LIS_Time-avg. part  ,2
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LDREAD_pres
:S    777,   223,   547
:T Command
:C )! Fnc_LDREAD_pres
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A From Fluid Analy
:D Apply PRES from Fluid Analysis
:K #(PREP7*SOLUTION)
:P (LINPLUS*FLOTRAN)
:H Hlp_C_LDREAD
Cmd_LDREAD,PRES
 Fld_0
  Typ_Lab
  Prm_[LDREAD],PRES  Apply Pressure from Fluid Analysis
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_5
  Prm_       Face Option
  Typ_LIS_OPTIONB
  LIS_Solid           ,0
  LIS_Shell Face 1    ,1
  LIS_Shell Face 2    ,2
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LDREAD_reac
:S    666,   236,   423
:T Command
:C )! Fnc_LDREAD_reac
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A From Reactions
:D Apply Force/Moment from Reaction Data
:P (LINPLUS*THERMAL*ELECMAG)
:K #(PREP7*SOLUTION)
:H Hlp_C_LDREAD
Cmd_LDREAD,REAC
 Fld_0
  Typ_Lab
  Prm_[LDREAD],REAC  Apply Force/Moment from Reaction Data
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_ LSTEP,SBSTEP,TIME
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LDREAD_temp
:S    667,   233,   427
:T Command
:C )! Fnc_LDREAD_temp
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A From Therm Analy
:D Apply TEMP from Thermal Analysis
:K #(PREP7*SOLUTION)
:P (LINPLUS*ELECMAG*FLOTRAN)
:H Hlp_C_LDREAD
Cmd_LDREAD,TEMP
 Fld_0
  Typ_Lab
  Prm_[LDREAD],TEMP  Apply Temperature from Thermal Analysis
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LDREAD_tempD
:S    681,   222,   452
:T Command
:C )! Fnc_LDREAD_tempD
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A   From ANSYS
:D Apply TEMP from ANSYS
:K #(PREP7*SOLUTION+CFD*FLUID)
:P (THERMAL*FLOTRAN)
:H Hlp_C_LDREAD
Inp_NoApply
Cmd_LDREAD,TEMP
 Fld_0
  Typ_Lab
  Prm_[LDREAD],TEMP  Apply Temperature from ANSYS
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME,KIMG
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_5
  Typ_Def_1
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LDREAD_tempIC
:S    696,   237,   452
:T Command
:C )! Fnc_LDREAD_tempIC
:C )/NOPR
:C )*SET,_zx,' '
:C )/GO
:A Temp from ANSYS
:D Apply TEMP from ANSYS
:K #(PREP7*SOLUTION+(CFD*FLUID*THERMAL))
:P (THERMAL*FLOTRAN)
:H Hlp_C_LDREAD
Inp_NoApply
Cmd_LDREAD,TEMP
 Fld_0
  Typ_Lab
  Prm_[LDREAD],TEMP  Apply Temperature from ANSYS
 Fld_0
  Typ_Lab
  Prm_Identify the data set to be read from the results file
 Fld_0
  Prm_   LSTEP,SBSTEP,TIME,KIMG
 Fld_2
  Prm_       Load step and substep no.
  Typ_INT2
  Def_Blank,Blank
 Fld_0
  Prm_        or
 Fld_4
  Prm_       Time-point
  Typ_REAL
  Def_Blank
 Fld_5
  Typ_Def_2
 Fld_6
  Prm_Fname  Name of results file
  Typ_FILE
  Def_*PAR(_zx)
:E END
:! 
:N Fnc_LECOPY
:S   1056,   610,   439
:T Cmd_P
:A     Copy Divs
:D Copy Line Divisions
:C )! Fnc_LECOPY
:C )!  copy one line's meshing
:C )!  parameters to other lines.
:C )!
:C )!  first select the example line, then select
:C )!  the lines which will be given the meshing
:C )!  control parameters.
:C )!
:C )!  the granule provides the prototype line in
:C )!  component _Y2, and the set of lines which
:C )!  will have the ndiv/spac criteria from
:C )!  the prototype line applied to them is in
:C )!  component _Y3.  The set of originally
:C )!  selected lines is in component _Y1.
:C )!
:H Hlp_UI_LECOPY
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z3
Fld_0
 Prm_Copy Mesh Criteria of One
Fld_0
 Prm_ Line to Another Line(s)
 Fld_2
  Prm_  Pick or enter line for divisions to be copied from
  Typ_LINE
  Min_1
  Cnt_1
  PCN_0
! Exclude_from_paths
Cmd_CM,_Y,LINE
! Exclude_from_paths
Cmd_LSEL
 Fld_5
  Prm_  Pick or enter line(s) for size to be copied to
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
   PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,LINE
Cmd_)/GO
Cal_Fnc_LECOPY2
:E END
:! 
:N Fnc_LECOPY2
:S   1086,   636,   443
:C )!Fnc_LECOPY2
:C )/NOPR
:C )!  get the example line
:C )!
:C )!  get it's ndiv and spacing attributes
:C )*get,_z1,line,_z3,attr,ndnx
:C )KEYW,KEY1,0
:C )*IF,_z1,eq,0,THEN
:C )*CREATE,ansuitmp
:C )*msg,warn,
:C )Cannot copy size from a line without line divisions.
:C )!
:C )*END
:C )!  since ndiv=0 we want to set it to -1 to that 0
:C )!  line divisions will be assigned.
:C )_z1=-1
:C )KEYW,KEY1,1
:C )*ENDIF
:C )!
:C )*get,_z2,line,_z3,attr,spnx
:C )*get,_z4,line,_z3,attr,kynd
:C )!
:C )!
:C )!  select the group of lines which will have ndiv and spac
:C )!  applied to them
:C )!
:C )/GO
Inp_p
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
Cmd_)/GO
Cmd_)/inp,ansuitmp
K_CM(KEY1)
Cmd_LESIZE,ALL,,
K_CM(key1)
 Fld_2
 Typ_Def_*PAR(_z1)
 Fld_3
 Typ_Def_*PAR(_z2)
 Fld_4
 Typ_Def_1
 Fld_7
 Typ_Def_*PAR(_z4)
 Fld_8
 Typ_Def_*PAR(_z5)
!
!  get the originally selected set of lines
Cmd_)/NOPR
!
!  delete the components
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_LEFLIP
:S   1121,   116,   998
:T Cmd_P
:C )! Fnc_LEFLIP
:A     Flip Bias
:D Flip Line Bias
:H Hlp_UI_LEFLIP
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_LSEL
Fld_0
 Prm_Reverse line biasing
 Fld_5
  Prm_  Pick or enter line(s)
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
   PFM_1
! Exclude_from_paths
Cmd_*GET,_z1,LINE,,COUNT
!
!  enter a do loop to invert the spacing on the
!  currently selected lines
Cmd__z2=0
!
! Exclude_from_paths
Cmd_*DO,_z5,1,_z1
Cmd__z2=LSNEXT(_z2)
!  get it's spacing attribute
! Exclude_from_paths
Cmd_*GET,_z3,LINE,_z2,ATTR,NDNX
! Exclude_from_paths
Cmd_*GET,_z4,LINE,_z2,ATTR,SPNX
! Exclude_from_paths
Cmd_*get,_z6,line,_z2,attr,kynd
!
! Exclude_from_paths
Cmd_*IF,_z3,GT,0,THEN
! Exclude_from_paths
Cmd_*IF,_z4,NE,0,THEN
!  reset the space ratio to 1/_z4
Cmd_LESIZE,_z2,,,_z3,1/_z4,,,,_z6
!
! Exclude_from_paths
Cmd_*ENDIF
! Exclude_from_paths
Cmd_*ENDIF
!
! Exclude_from_paths
Cmd_*ENDDO
!
!  return the originally selected group of lines
! Exclude_from_paths
Cmd_CMSEL,S,_Y1
!
!  delete the component
! Exclude_from_paths
Cmd_CMDELE,_Y1
!
Cmd_)/GO
:E END
:! 
:N Fnc_LELAYER_p
:S    483,   177,   299
:T Cmd_P
:C )! Fnc_LELAYER_p
:C )! Lines for LESIZE command below
:A     Picked Lines
:D Set Layer Controls
:K #(PREP7)
:H Hlp_C_LESIZE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
! Exclude_from_paths
Cmd_LSEL
 Fld_5
  Prm_[LESIZE]  Pick or enter lines to receive layer-mesh controls
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
Cmd_)/GO
Cal_Fnc_LAYER_p2
:E END
:! 
:N Fnc_LELAYER_pdel
:S    365,   183,   175
:T Cmd_P
:C )! Fnc_LELAYER_pdel
:C )! Lines for LESIZE command below
:A     Clr Layers
:D Clear Layer Controls
:K #(PREP7)
:H Hlp_C_LESIZE
Inp_P
Cmd_LESIZE
 Fld_2
  Prm_[LESIZE]  Pick or enter lines to clear layer-mesh controls
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
 Fld_7
  Typ_Def_4
 Fld_8
  Typ_Def_'OFF '
:E END
:! 
:N Fnc_LESIZE
:S    702,   150,   545
:T Command
:C )! Fnc_LESIZE
:A     All Lines
:D Element Sizes on All Selected Lines
:K #(PREP7)
:H Hlp_C_LESIZE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,7
 Fld_0
  Typ_Lab
  Prm_[LESIZE]  Element sizes on all selected lines
 Fld_2
  Typ_REAL
  Prm_SIZE    Element edge length
  Def_Blank
 Fld_3
  Typ_INT
  Prm_NDIV    No. of element divisions
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_        (NDIV is used only if SIZE is blank or zero)
 Fld_4
  Prm_KYNDIV  SIZE,NDIV can be changed
  Typ_LOGI,No,Yes
  Def_1
 Fld_5
  Typ_REAL
  Prm_SPACE   Spacing ratio 
  Def_blank
 Fld_0
 Typ_Sep
 Fld_7
 Prm_Show more options
 Typ_LOGI,No    ,Yes
 Def_0
Cmd_)/GO
Cal_Fnc_LESIZEl
:E END
:! 
:N Fnc_LESIZE1
:S    829,   167,   655
:T Command
:C )! Fnc_LESIZE1
:A     All Lines
:D Element Sizes on All Selected Lines (more options)
:K #(PREP7)
:H Hlp_C_LESIZE
Inp_NoApply
Cmd_LESIZE
 Fld_0
  Typ_Lab
  Prm_[LESIZE]  Element sizes on all selected lines
 Fld_0
  Typ_Sep
 Fld_2
  Typ_Def_ALL
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_REAL
  Prm_ANGSIZ Division arc (degrees)
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_( use ANGSIZ only if number of divisions (NDIV) and
 Fld_0
  Typ_Lab
  Prm_element edge length (SIZE) is blank or zero)
 Fld_0
  Typ_Sep
 Fld_5
  Typ_Def_*CPAR(2)
 Fld_6
  Typ_Def_*CPAR(4)
 Fld_7
  Prm_KFORC  Modify lines that have
  Typ_Lis_OptionB
  LIS_No divisions    ,0
  LIS_Modify all lines,1
  LIS_Fewer divisions ,2
  LIS_More divisions  ,3
  Def_1
 Fld_10
 Typ_Def_*CPAR(3)
 Fld_11
 Typ_Def_*CPAR(5)
:E END
:! 
:N Fnc_LESIZE2
:S    257,    68,   182
:T Command
:C )! Fnc_LESIZE2
Inp_P
Cmd_LESIZE
 Fld_2
 Typ_Def_ALL
 Fld_3
 Typ_Def_*CPAR(1)
 Fld_5
 Typ_Def_*CPAR(2)
 Fld_6
 Typ_Def_*CPAR(4)
 Fld_7
 Typ_Def_1
 Fld_10
 Typ_Def_*CPAR(3)
 Fld_11
 Typ_Def_*CPAR(5)
:E END
:! 
:N Fnc_LESIZE_p
:S    518,   223,   288
:T Cmd_P
:C )! Fnc_LESIZE_p
:C )! Lines for LESIZE command below
:C )/NOPR
:C )keyw,LAYERMES,0
:C )/GO
:A     Picked Lines
:D Element Size on Picked Lines
:K #(PREP7)
:H Hlp_C_LESIZE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
! Exclude_from_paths
Cmd_LSEL
 Fld_5
  Prm_[LESIZE]  Pick or enter lines for size assignment
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,,_Y
Cmd_)/GO
Cal_Fnc_LESIZE_p1
:E END
:! 
:N Fnc_LESIZE_p1
:S    982,   153,   822
:T Command
:C )! Fnc_LESIZE_p1
:A     Picked Lines
:D Element Sizes on Picked Lines
:K #(PREP7)
:H Hlp_C_LESIZE
!Inp_Noapply
Cmd_LESIZE
 Fld_0
  Typ_Lab
  Prm_[LESIZE]  Element sizes on picked lines
 Fld_2
  Typ_Def__Y1
 Fld_3
  Typ_REAL
  Prm_SIZE    Element edge length 
  Def_Blank
 Fld_5
  Typ_INT
  Prm_NDIV    No. of element divisions 
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_        (NDIV is used only if SIZE is blank or zero)
 Fld_10
  Prm_KYNDIV  SIZE,NDIV can be changed
  Typ_LOGI,No,Yes
  Def_1
 Fld_6
  Typ_REAL
  Prm_SPACE   Spacing ratio 
  Def_blank
 Fld_0
  Typ_Sep
 Fld_4
  Typ_REAL
  Prm_ANGSIZ  Division arc (degrees)
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_( use ANGSIZ only if number of divisions (NDIV) and
 Fld_0
  Typ_Lab
  Prm_element edge length (SIZE) are blank or zero)
 Cmd_)/NOPR
 Cmd_)*CSET,1,1
 Fld_0
 Typ_Sep
 Fld_2
 Prm_Clear attached areas and volumes
 Typ_LOGI,No    ,Yes
 Def_0
Cmd_)/GO
Cal_Fnc_LESI_pclr
:E END
:! 
:N Fnc_LESIZE_pdel
:S    354,   180,   167
:T Cmd_P
:C )! Fnc_LESIZE_pdel
:C )! Lines for LESIZE command below
:A     Clr Size
:D Element Size on Lines
:K #(PREP7)
:H Hlp_C_LESIZE
Inp_P
Cmd_LESIZE
 Fld_2
  Prm_[LESIZE]  Pick or enter lines to remove line divisions
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
 Fld_5
  Typ_Def_-1
 Fld_7
  Typ_Def_1
:E END
:! 
:N Fnc_LESIZEl
:S    161,    68,    86
:T Command
:C )! Fnc_LESIZEl
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*CPAR(6)
Cal_Fnc_LESIZE1,2,eq,1 
Cal_Fnc_LESIZE2,2,eq,0 
:E END
:! 
:N Fnc_LESI_pclr
:S    171,    72,    92
:T Command
:C )! Fnc_LESI_pclr
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*CPAR(1)
Cal_Fnc_LESI_pclr1,2,eq,1 
:C CMDELE,_Y
:C CMDELE,_Y1
:E END
:! 
:N Fnc_LESI_pclr1
:S    148,    74,    67
:T Command
:C )! Fnc_LESI_pclr1
Inp_p
! Exclude_from_paths
Cmd_CLRMSHLN
:C CMDELE,_Y
:C CMDELE,_Y1
:E END
:! 
:N Fnc_LEXTND
:S    418,   167,   244
:T Cmd_P
:C )! Fnc_LEXTND
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )/GO
:A Extend Line
:D Extend Line
:K #(PREP7)
:H Hlp_C_LEXTND
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Typ_LINE
  Prm_[LEXTND]  Pick or enter line to be extended
  Min_1
  Cnt_1
  PFM_2
 Fld_3
  Typ_KEYP
  Prm_Pick or enter keypoint at end to be extended
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_LEXTND_2
:E END
:! 
:N Fnc_LEXTND_2
:S    496,   128,   361
:T Command
:C )! Fnc_LEXTND_2
:A Extend Line
:D Extend Line
:K #(PREP7)
:H Hlp_C_LEXTND
Cmd_LEXTND
 Fld_0
  Typ_Lab
  Prm_[LEXTND]  Extend Line
 Fld_2
  Typ_INT
  Prm_NL1   Line to be extended
  Def_*PAR(_z(1))
 Fld_3
  Typ_INT
  Prm_NK1   Keypt at end to extend
  Def_*PAR(_z(2))
 Fld_4
  Typ_REAL
  Prm_DIST  Distance to extend
  Def_Blank
 Fld_5
  Prm_KEEP  Existing line will 
  Typ_LIS_OptionB
  LIS_Be modified     ,0
  LIS_Not be modified ,1
:E END
:! 
:N Fnc_LFILLT
:S    335,   170,   158
:T Cmd_P
:C )! Fnc_LFILLT
:A    Line Fillet
:D Line Fillet
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,2
:C )/GO
:K #(PREP7)
:H Hlp_C_LFILLT
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Typ_LINE
  Prm_[LFILLT]  Pick or enter the two intersecting lines
  Min_2
  Cnt_2
  PFM_2
Cmd_)/GO
Cal_Fnc_LFILLT_2
:E END
:! 
:N Fnc_LFILLT_2
:S    475,   128,   340
:T Command
:C )! Fnc_LFILLT_2
:A Line Fillet
:D Line Fillet
:K #(PREP7)
:H Hlp_C_LFILLT
Cmd_LFILLT
 Fld_0
  Typ_Lab
  Prm_[LFILLT]  Create Fillet Line
 Fld_2
  Typ_INT2
  Prm_NL1,NL2  Intersecting lines
  Def_*PAR(_z(1)),*PAR(_z(2))
 Fld_4
  Typ_REAL
  Prm_RAD      Fillet radius
  Def_Blank
 Fld_5
  Typ_INT
  Prm_PCENT    Number to assign -
  Def_Blank
 Fld_0
  Typ_Lab
  Prm_         - to generated keypoint at fillet center
:E END
:! 
:N Fnc_LGEN
:S    288,   157,   124
:T Cmd_P
:C )! Fnc_LGEN
:C )! Lines for LGEN command Below
:A Lines
:D Copy Lines
:K #(PREP7)
:K #(priges)
:H Hlp_C_LGEN
Inp_P
Cmd_)!
 Fld_3
  Typ_LINE
  Prm_[LGEN]  Pick or enter lines to be copied
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_LGEN2
:E END
:! 
:N Fnc_LGEN2
:S    634,   113,   514
:T Command
:C )! Fnc_LGEN2
:A Lines
:D Copy Lines
:K #(PREP7)
:H Hlp_C_LGEN
Cmd_LGEN
Fld_0
Typ_Lab
Prm_[LGEN]
 Fld_2
  Prm_ITIME   Number of copies -
  Typ_INT
  Def_2
Fld_0
 Typ_Lab
  Prm_        - including original
 Fld_3
  Typ_Def_P51X
 Fld_6
  Prm_DX      X-offset in active CS
  Typ_REAL
 Fld_7
  Prm_DY      Y-offset in active CS
  Typ_REAL
 Fld_8
  Prm_DZ      Z-offset in active CS
  Typ_REAL
 Fld_0
  Typ_Sep
 Fld_9
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_10
  Prm_NOELEM  Items to be copied
  Typ_LIS_OptionB
  LIS_Lines and mesh  ,0
  LIS_Lines only      ,1
:E END
:! 
:N Fnc_LGEN_move
:S    303,   167,   129
:T Cmd_P
:C )! Fnc_LGEN_move
:C )! Lines for LGEN command below
:A Lines
:D Move Lines
:K #(PREP7)
:K #(priges)
:H Hlp_C_LGEN
Inp_P
Cmd_)!
 Fld_3
  Typ_LINE
  Prm_[LGEN]  Pick or enter lines to be moved
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_LGEN_move_2
:E END
:! 
:N Fnc_LGEN_move_2
:S    387,   125,   255
:T Command
:C )! Fnc_LGEN_move_2
:A Lines
:D Move Lines
:K #(PREP7)
:H Hlp_C_LGEN
Cmd_LGEN
 Fld_0
  Typ_Lab
  Prm_[LGEN]  Move Lines
 Fld_3
  Typ_Def_P51X
 Fld_6
  Prm_DX      X-offset in active CS
  Typ_REAL
 Fld_7
  Prm_DY      Y-offset in active CS
  Typ_REAL
 Fld_8
  Prm_DZ      Z-offset in active CS
  Typ_REAL
 Fld_11
  Typ_DEF_1
:E END
:! 
:N Fnc_LGLUE
:S    224,   112,   105
:T Cmd_P
:C )! Fnc_LGLUE
:A Lines
:D Glue Lines
:K #(PREP7)
:H Hlp_C_LGLUE
Inp_P
Cmd_LGLUE
 Fld_2
  Typ_LINE
  Prm_[LGLUE]  Pick or enter lines to be glued
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LINA
:S    334,   130,   197
:T Cmd_P
:C )! Fnc_LINA
:A Line with Area
:D Intersect Line w/ Area
:K #(PREP7)
:H Hlp_C_LINA
Inp_P
Cmd_LINA
 Fld_2
  Typ_LINE
  Prm_[LINA]  Pick or enter line to be intersected
  Min_1
  Cnt_1
  PFM_2
 Fld_3
  Typ_AREA
  Prm_Pick or enter the area to be intersected
  Min_1
  Cnt_1
  PFM_2
:E END
:! 
:N Fnc_LINE_PK
:S    228,    48,   173
:T Cmd_P
Inp_P
Cmd_)/NOPR
Cmd_)CM,_Y1,KP
Cmd_)KSEL,NONE
Cmd_)/GO
Cmd_K
 Fld_3
Prm_ Pick WP location or enter coordinates for the line
 Typ_XYZ
 Min_2
 MOK_2
 PFM_1
Cal_Fnc_LINE_PK_2
:E END
:! 
:N Fnc_LINE_PK_2
:S    276,   179,    90
:T Cmd
:C )/NOPR
:C )*GET,_z1,KP,,NUM,MAX
:C )*GET,_z2,KP,_z1,NXTL
:C )CMSEL,,_Y1
:C )CMDEL,_Y1
:C )KSEL,A,,,_z1
:C )KSEL,A,,,_z2
:C )/GO
Inp_P
Cmd_L
 Fld_2
 Typ_Def_*PAR(_z1)
 Fld_3
 Typ_Def_*PAR(_z2)
Cmd_LPLOT
Cal_Fnc_LINE_PK
:E END
:! 
:N Fnc_LINL
:S    251,   126,   118
:T Cmd_P
:C )! Fnc_LINL
:A    Lines
:D Intersect Lines (Common)
:K #(PREP7)
:H Hlp_C_LINL
Inp_P
Cmd_LINL
 Fld_2
  Typ_LINE
  Prm_[LINL]  Pick or enter lines to be intersected (common)
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LINP
:S    255,   128,   120
:T Cmd_P
:C )! Fnc_LINP
:A    Lines
:D Intersect Lines (Pairwise)
:K #(PREP7)
:H Hlp_C_LINP
Inp_P
Cmd_LINP
 Fld_2
  Typ_LINE
  Prm_[LINP]  Pick or enter lines to be intersected (pairwise)
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LINV
:S    349,   143,   199
:T Cmd_P
:C )! Fnc_LINV
:A Line with Volume
:D Intersect Line w/ Volu
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_LINV
Inp_P
Cmd_LINV
 Fld_2
  Typ_LINE
  Prm_[LINV]  Pick or enter line to be intersected
  Min_1
  Cnt_1
  PFM_2
 Fld_3
  Typ_VOLU
  Prm_Pick or enter the volume to be intersected
  Min_1
  Cnt_1
  PFM_2
:E END
:! 
:N Fnc_LLIST_OPT
:S    378,   100,   271
:C )! Fnc_LLIST_OPT
:D LLIST Listing Format
:H Hlp_C_LLIST
Cmd_LLIST
Fld_0
 Typ_Lab
 Prm_[LLIST]  Select output format 
Fld_0
 Typ_Sep
Fld_2
 Typ_Def_ALL
Fld_5
 Typ_LIS_RadioB
  Prm_Output will be listed in:
 Lis_Attribute format," "
 Lis_Radius format   ,RAD
 Lis_Layer-mesh fmt. ,LAY
 Lis_Orientation KP  ,ORIENT
Fld_0
 Typ_Sep
:E END
:! 
:N Fnc_LLIST_p
:S    224,   111,   106
:T Cmd_P
:C )! Fnc_LLIST_p
:A Lines
:D List Picked Lines
:H Hlp_C_LLIST
Inp_P
Cmd_LLIST
 Fld_2
  Prm_[LLIST]  Pick or enter lines to be listed
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LMESH
:S    225,   112,   106
:T Cmd_P
:C )! Fnc_LMESH
:A Lines
:D Mesh Lines
:K #(PREP7)
:H Hlp_C_LMESH
Inp_P
Cmd_LMESH
 Fld_2
  Typ_LINE
  Prm_[LMESH]  Pick or enter lines to be meshed
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LMESH_m
:S    159,   125,    27
:T Cmd_P
:C )! Fnc_LMESH_m
:A Lines
:D Mesh Lines
:K #(PREP7+meshtool)
:H Hlp_C_LMESH
Inp_P
Cmd_)!
Cal_Fnc_LMESH
:E END
:! 
:N Fnc_LNCOLLAPSE
:S    365,   171,   187
:T Cmd_P
:A    Collapse Lines
:D Collapse Lines
:C )! Fnc_LNCOLLAPSE
:C )! This is called by LNMERGE command
:H Hlp_C_LNCOLLAPSE
Inp_P
Cmd_LNCOLLAPSE
 Fld_2
  Typ_LINE
  Prm_[LNCOLLAPSE]    Pick or enter line to collapse
  Min_1
  Cnt_1
 Fld_3
  Typ_KEYP
  Prm_Pick or enter the point to collapse to
  Min_1
  Cnt_1
:E END
:! 
:N Fnc_LNSRCH
:S    713,   420,   286
:T Command
:C )! Fnc_LNSRCH
:C )/nopr
:C )*del,_z
:C )*dim,_z,,2
:C )*get,_z(1),common,,anscom,,int,52
:C )*get,_z(2),common,,stepcm,,int,90
:C )*if,_z(1),eq,0,then
:C )*if,_z(2),eq,-1,then
:C )_z(2)=0
:C )*endif
:C )*endif
:C )/go
:A Line Search
:D Line Search
:K #(PREP7*SOLUTION)
:K #((pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL)
:P (LINPLUS*THERMAL)
:H Hlp_C_LNSRCH
Inp_NoApply
Cmd_LNSRCH
 Fld_2
 K_FL(nlcntrl)
  Prm_[LNSRCH]  Line search option
  Typ_LOGI,Off,On
  Def_*PAR(_z(2))
 Fld_2
 K_FL(NLCNTRL)
  Prm_[LNSRCH]  Line search option
  Typ_LIS_RADIOB
  LIS_ON         ,1
  LIS_OFF        ,0
  LIS_Prog Chosen,-1
  Def_*GET(common,,stepcm,,int,90)
:E END
:! 
:N Fnc_LOADPLOT
:S    283,   157,   119
:T Cmd
:C )! Fnc_LOADPLOT
:C EDLOAD,LIST
:A Plot Load Curve
:D Plot Load Curve for LS-DYNA
:K (LSDYNA)
:H Hlp_C_EDPL
Inp_Apply
Cmd_EDPL
 Fld_0
  Prm_[EDPL] Plot load curve
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Load reference number 
  Typ_Real
:E END
:! 
:N Fnc_LOCAL
:S    313,   122,   184
:T Cmd_P
:C )! Fnc_LOCAL
:A At Specified Loc
:D Create CS at Location
:H Hlp_C_LOCAL
Inp_P
Cmd_)/NOPR
Cmd_)*DEL,_z
Cmd_)*DIM,_z,,3
Cmd_)*SET,_z(1)
Fld_2
Prm_[LOCAL]  Pick WP location or enter coordinates of CS origin
Typ_XYZ
Min_1
Cnt_1
PFM_2
!
Cmd_)/GO
Cal_Fnc_LOCAL2
:E END
:! 
:N Fnc_LOCAL2
:S    847,   122,   718
:T Command
:C )! Fnc_LOCAL2
:D Create Local CS at Specified Location
:H Hlp_C_LOCAL
Cmd_LOCAL
Fld_0
Typ_Lab
Prm_[LOCAL]  Create Local CS at Specified Location
Fld_2
Prm_KCN  Ref number of new coord sys
Typ_INT
Def_11
Fld_3
Prm_KCS  Type of coordinate system
Typ_LIS_OPTIONB
LIS_Cartesian      0,0
LIS_Cylindrical    1,1
LIS_Spherical      2,2
LIS_Toroidal       3,3
!
Fld_4
Typ_REAL3
Prm_XC,YC,ZC  Origin of coord system
Def_*PAR(_z(1)),*PAR(_z(2)),*PAR(_z(3))
!
Fld_7
Typ_REAL
Prm_THXY  Rotation about local Z
Fld_8
Typ_REAL
Prm_THYZ  Rotation about local X
Fld_9
Typ_REAL
Prm_THZX  Rotation about local Y
!
Fld_0
Typ_Sep
Fld_0
Typ_Lab
Prm_Following used only for elliptical and toroidal systems
!
Fld_10
Prm_PAR1  First parameter 
Typ_REAL
Def_1.0
Fld_11
Prm_PAR2  Second parameter 
Typ_REAL
Def_1.0
:E END
:! 
:N Fnc_LOVLAP
:S    237,   118,   112
:T Cmd_P
:C )! Fnc_LOVLAP
:A Lines
:D Overlap Lines
:K #(PREP7)
:H Hlp_C_LOVLAP
Inp_P
Cmd_LOVLAP
 Fld_2
  Typ_LINE
  Prm_[LOVLAP]  Pick or enter lines to be overlapped
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LPATH
:S    254,   127,   120
:T Cmd_P
:C )! Fnc_LPATH
:A Define Path
:D Define Path
:K #(POST1+RESULTS)
:H Hlp_C_LPATH
Inp_P
Cmd_LPATH
 Fld_2
  Prm_[LPATH]  Pick or enter nodes defining the path
  Typ_NODE
  Min_2
  Cnt_10
  PFM_2
  Pdp_1
:E END
:! 
:N Fnc_LPLOT
:S    374,   109,   258
:T Cmd
:C )! Fnc_LPLOT
:H Hlp_C_LPLOT
:A Lines
:D Plot Specified Lines 
Cmd_LPLOT
 Fld_0
  Typ_Lab
  Prm_[LPLOT]  Plot Specified Lines                        
 Fld_2
  Typ_INT
  Prm_NL1   First line in range
  Def_1
 Fld_3 
  Typ_INT
  Prm_NL2   Last line in range
  Def_Blank
 Fld_4
  Typ_INT
  Prm_NINC  Range increment
  Def_1
:E End
:! 
:N Fnc_LPTN
:S    230,   114,   109
:T Cmd_P
:C )! Fnc_LPTN
:A Lines
:D Partition Lines
:K #(PREP7)
:H Hlp_C_LPTN
Inp_P
Cmd_LPTN
 Fld_2
  Typ_LINE
  Prm_[LPTN]  Pick or enter lines to be partitioned
  Min_2
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LREF
:S    451,   130,   314
:T Cmd_P
:A    Lines
:D Refine mesh at lines
:C )!Fnc_LREF
:C )/NOPR
:C )/GO
:H Hlp_C_LREFINE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
! Exclude_from_paths
Cmd_LSEL
 Fld_5
  Prm_[LREF]  Pick or enter lines for refinement
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_LREF_1
:E END
:! 
:N Fnc_LREF_1
:S    563,   142,   414
:T Cmd
:A Refine Mesh at LINE
:D Refine Mesh at Line
:C )!Fnc_LREF_1
:C )/NOPR
:C )/GO
:H Hlp_C_LREFINE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_0
Typ_Lab
Prm_[LREF] Refine mesh at lines
 Fld_2
  Prm_LEVEL   Level of refinement
  Typ_Lis_OptionB
  Lis_1 (Minimal),1
  Lis_2     ,2
  Lis_3     ,3
  Lis_4     ,4
  Lis_5 (Maximum),5
  Def_1
Cmd_LSCLEAR,FE
K_CM(PR_SGUI)
Cmd_MTchgmsh
K_CM(PR_SGUI)
Cmd_)/GO
Fld_2
 K_FL(pr_sgui)
 Prm_Advanced options
 Typ_LOGI,No, Yes
 Def_0
Cal_Fnc_LREF_2a,2,eq,0
Cal_Fnc_LREF_2b,2,eq,1
:E END
:! 
:N Fnc_LREF_2a
:S    280,    64,   209
:T Cmd
:C )! Fnc_LREF_2a
Inp_p
Cmd_LREFINE
 Fld_2
 Typ_Def__Y1
 Fld_3
 Typ_Def_ 
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
 Typ_Def_1
 Fld_7
 Typ_Def_1
 Fld_8
 Typ_Def_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_LREF_2b
:S    622,   122,   493
:T Cmd
:D Refine mesh at lines advanced options
:C )! Fnc_LREF_2b
:H Hlp_C_LREFINE
Cmd_LREF
 Fld_2
 Typ_Def__Y1
 Fld_3
 Typ_Def_ 
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
  Prm_DEPTH   Depth of refinement
  Typ_INT
  Def_1
 Fld_7
  Prm_POST    Postprocessing
  Typ_Lis_OptionB
  Lis_Off             ,0
  Lis_Cleanup + Smooth,1
  Lis_Smooth          ,2
   Def_1
 Fld_8
  Prm_RETAIN  Retain Quads
  Typ_LOGI,No    ,Yes
   Def_1
Fld_0
  Typ_Lab
  Prm_        Note: This option is only valid with an all quad mesh.
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_LREVERSE
:S    463,   147,   309
:T Cmd_P
:C )! Fnc_LREVERSE
:A of Lines
:D Reverse Line Normals
:K #(PREP7)
:K #(priges)
:H Hlp_C_LREVERSE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,LINE
! Exclude_from_paths
Cmd_LSEL
 Fld_5
  Prm_[LREVERSE]  Pick or enter lines to reverse
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
! Exclude_from_paths
Cmd_CM,_Y1,LINE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_LREVERSE2
:E End
:! 
:N Fnc_LREVERSE2
:S    325,   111,   207
:T Cmd
:D Reverse line normals
:C )! Fnc_LREVERSE2
:H Hlp_C_LREVERSE2
Cmd_LREVERSE
 Fld_0
 Typ_Lab
 Prm_[LREVERSE]  Reverse line normals 
 Fld_2
 Typ_Def__Y1
 Fld_3
 Prm_Suppress element reversal
 Typ_LOGI,No, Yes
 Def_0
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E End
:! 
:N Fnc_LROTAT
:S    433,   189,   237
:T Cmd_P
:C )! Fnc_LROTAT
:C )! Keypoints  and Keypoints for LROTAT command below
:A    About Axis
:D Sweep KPs about Axis
:K #(PREP7)
:H Hlp_C_LROTAT
Inp_P
Cmd_)!
 Fld_2
  Typ_KEYP
  Prm_[LROTAT]  Pick or enter keypoints to be swept about axis
  Min_1
  Cnt_s
  PCN_1
  PFM_1
 Fld_8
  Typ_KEYP
  Prm_Pick or enter two keypoints defining the axis
  Min_2
  Cnt_2
  PFM_1
Cal_Fnc_LROTAT_2
:E END
:! 
:N Fnc_LROTAT_2
:S    403,   145,   251
:T Command
:C )! Fnc_LROTAT_2
:A    About Axis
:D Sweep Keypoints about Axis
:K #(PREP7)
:H Hlp_C_LROTAT
Cmd_LROTAT
 Fld_0
  Typ_Lab
  Prm_[LROTAT]  Sweep Keypoints about Axis
 Fld_2
  Typ_Def_P51X
 Fld_8
  Typ_Def_P51X
 Fld_10
  Typ_REAL
  Prm_ARC        Arc length in degrees
  Def_360
 Fld_11
  Typ_INT
  Prm_NSEG       No. of line segments
  Def_Blank
:E END
:! 
:N Fnc_LSBA_div
:S    326,   133,   186
:T Cmd_P
:C )! Fnc_LSBA_div
:A Line by Area
:D Divide Line by Area
:K #(PREP7)
:H Hlp_C_LSBA
Inp_P
Cmd_LSBA
 Fld_2
  Typ_LINE
  Prm_[LSBA]  Pick or enter lines to be divided
  Min_1
  Cnt_s
  Pcn_1
 Fld_3
  Typ_AREA
  Prm_Pick or enter the dividing areas
  Min_1
  Cnt_s
  Pcn_1
:E END
:! 
:N Fnc_LSBA_div_op2
:S    688,   156,   525
:T Command
:C )! Fnc_LSBA_div_op2
:A Line by Area
:D Divide Line by Area with Options
:K #(PREP7)
:H Hlp_C_LSBA
Cmd_LSBA
 Fld_0
  Typ_Lab
  Prm_[LSBA]  Divide Line by Area with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_P51X
 Fld_4
  Prm_SEPO  Intersect bndry will have
  Typ_LIS_OptionB
  LIS_Shared entities ," "
  LIS_Separate entity ,SEPO
 Fld_5
  Prm_KEEPL  Base lines will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
 Fld_6
  Prm_KEEPA  Subtracted areas will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_LSBA_div_opt
:S    434,   197,   230
:T Cmd_P
:C )! Fnc_LSBA_div_opt
:C )! Lines and Areas for LSBA command below
:A Line by Area
:D Divide Line by Area w/ Options
:K #(PREP7)
:H Hlp_C_LSBA
Inp_P
! 
Cmd_)!
 Fld_2
  Typ_LINE
  Prm_[LSBA]  Pick or enter lines to be divided
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
 Fld_3
  Typ_AREA
  Prm_Pick or enter the dividing areas
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_LSBA_div_op2
:E END
:! 
:N Fnc_LSBL
:S    324,   113,   204
:T Cmd_P
:C )! Fnc_LSBL
:A Lines
:D Subtract Lines
:K #(PREP7)
:H Hlp_C_LSBL
Inp_P
Cmd_LSBL
 Fld_2
  Typ_LINE
  Prm_[LSBL]  Pick or enter base lines from which to subtract
  Min_1
  Cnt_s
  PCN_1
 Fld_3
  Typ_LINE
  Prm_Pick or enter lines to be subtracted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LSBL_div
:S    326,   133,   186
:T Cmd_P
:C )! Fnc_LSBL_div
:A Line by Line
:D Divide Line by Line
:K #(PREP7)
:H Hlp_C_LSBL
Inp_P
Cmd_LSBL
 Fld_2
  Typ_LINE
  Prm_[LSBL]  Pick or enter lines to be divided
  Min_1
  Cnt_s
  PCN_1
 Fld_3
  Typ_LINE
  Prm_Pick or enter the dividing lines
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LSBL_div_op2
:S    688,   156,   525
:T Command
:C )! Fnc_LSBL_div_op2
:A Line by Line
:D Divide Line by Line with Options
:K #(PREP7)
:H Hlp_C_LSBL
Cmd_LSBL
 Fld_0
  Typ_Lab
  Prm_[LSBL]  Divide Line by Line with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_P51X
 Fld_4
  Prm_SEPO  Intersect bndry will have
  Typ_LIS_OptionB
  LIS_Shared entities ," "
  LIS_Separate entity ,SEPO
 Fld_5
  Prm_KEEP1  Base lines will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
 Fld_6
  Prm_KEEP2  Subtracted lines will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_LSBL_div_opt
:S    434,   197,   230
:T Cmd_P
:C )! Fnc_LSBL_div_opt
:C )! Lines and Lines for LSBL command below
:A Line by Line
:D Divide Line by Line w/ Options
:K #(PREP7)
:H Hlp_C_LSBL
Inp_P
! 
Cmd_)!
 Fld_2
  Typ_LINE
  Prm_[LSBL]  Pick or enter lines to be divided
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
 Fld_3
  Typ_LINE
  Prm_Pick or enter the dividing lines
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_LSBL_div_op2
:E END
:! 
:N Fnc_LSBL_opt
:S    434,   177,   250
:T Cmd_P
:C )! Fnc_LSBL_opt
:C )! Lines and Lines for LSBL command below
:A Lines
:D Subtract Lines w/ Options
:K #(PREP7)
:H Hlp_C_LSBL
Inp_P
Cmd_)!
 Fld_2
  Typ_LINE
  Prm_[LSBL]  Pick or enter base lines from which to subtract
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cmd_)!
 Fld_3
  Typ_LINE
  Prm_Pick or enter lines to be subtracted
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_LSBL_opt_2
:E END
:! 
:N Fnc_LSBL_opt_2
:S    667,   140,   520
:T Command
:C )! Fnc_LSBL_opt_2
:A Lines
:D Subtract Lines with Options
:K #(PREP7)
:H Hlp_C_LSBL
Cmd_LSBL
 Fld_0
  Typ_Lab
  Prm_[LSBL]  Subtract Lines with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_P51X
 Fld_4
  Prm_SEPO  Intersect bndry will have
  Typ_LIS_OptionB
  LIS_Shared entities ," "
  LIS_Separate entity ,SEPO
 Fld_5
  Prm_KEEP1  Base lines will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
 Fld_6
  Prm_KEEP2  Subtracted lines will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_LSBV_div
:S    343,   148,   188
:T Cmd_P
:C )! Fnc_LSBV_div
:A Line by Volume
:D Divide Line by Volume
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_LSBV
Inp_P
Cmd_LSBV
 Fld_2
  Typ_LINE
  Prm_[LSBV]  Pick or enter lines to be divided
  Min_1
  Cnt_s
  Pcn_1
 Fld_3
  Typ_VOLU
  Prm_Pick or enter the dividing volumes
  Min_1
  Cnt_s
  Pcn_1
:E END
:! 
:N Fnc_LSBV_div_igs
:S    352,   157,   188
:T Cmd_P
:C )! Fnc_LSBV_div_igs
:A    Line by Volu
:D Divide Line by Volume
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_LSBV
Inp_P
Cmd_LSBV
 Fld_2
  Typ_LINE
  Prm_[LSBV]  Pick or enter lines to be divided
  Min_1
  Cnt_s
  Pcn_1
 Fld_3
  Typ_VOLU
  Prm_Pick or enter the dividing volumes
  Min_1
  Cnt_s
  Pcn_1
:E END
:! 
:N Fnc_LSBV_div_op2
:S    704,   171,   526
:T Command
:C )! Fnc_LSBV_div_op2
:A Line by Volume
:D Divide Line by Volume with Options
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_LSBV
Cmd_LSBV
 Fld_0
  Typ_Lab
  Prm_[LSBV]  Divide Line by Volume with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_P51X
 Fld_4
  Prm_SEPO  Intersect bndry will have
  Typ_LIS_OptionB
  LIS_Shared entities ," "
  LIS_Separate entity ,SEPO
 Fld_5
  Prm_KEEPL  Base lines will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
 Fld_6
  Prm_KEEPV  Subtracted vols will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_LSBV_div_opt
:S    453,   214,   232
:T Cmd_P
:C )! Fnc_LSBV_div_opt
:C )! Lines and Volumes for LSBV command below
:A Line by Volume
:D Divide Line by Volume w/ Options
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_LSBV
Inp_P
! 
Cmd_)!
 Fld_2
  Typ_LINE
  Prm_[LSBV]  Pick or enter lines to be divided
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
 Fld_3
  Typ_VOLU
  Prm_Pick or enter the dividing volumes
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_LSBV_div_op2
:E END
:! 
:N Fnc_LSBW_div
:S    253,   141,   105
:T Cmd_P
:C )! Fnc_LSBW_div
:A Line by WrkPlane
:D Divide Line by WrkPlane
:K #(PREP7)
:H Hlp_C_LSBW
Inp_P
Cmd_LSBW
 Fld_2
  Typ_LINE
  Prm_[LSBW]  Pick or enter lines to be divided
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LSBW_div_igs
:S    264,   152,   105
:T Cmd_P
:C )! Fnc_LSBW_div_igs
:A    Line by WrkPlane
:D Divide Line by WrkPlane
:K #(PREP7)
:H Hlp_C_LSBW
Inp_P
Cmd_LSBW
 Fld_2
  Typ_LINE
  Prm_[LSBW]  Pick or enter lines to be divided
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LSBW_div_op2
:S    533,   164,   362
:T Command
:C )! Fnc_LSBW_div_op2
:A Line by WrkPlane
:D Divide Line by WrkPlane with Options
:K #(PREP7)
:H Hlp_C_LSBW
Cmd_LSBW
 Fld_0
  Typ_Lab
  Prm_[LSBW]  Divide Line by WrkPlane with Options
 Fld_2
  Typ_Def_P51X
 Fld_3
  Prm_SEPO  Intersect bndry will have
  Typ_LIS_OptionB
  LIS_Shared entities ," "
  LIS_Separate entity ,SEPO
 Fld_4
  Prm_KEEP  Original lines will be
  Typ_LIS_OptionB
  LIS_Handled per BOPT," "
  LIS_Kept            ,KEEP
  LIS_Deleted         ,DELETE
:E END
:! 
:N Fnc_LSBW_div_opt
:S    340,   195,   138
:T Cmd_P
:C )! Fnc_LSBW_div_opt
:C )! Lines for LSBW command below
:A Line by WrkPlane
:D Divide Line by WrkPlane w/ Options
:K #(PREP7)
:H Hlp_C_LSBW
Inp_P
! 
Cmd_)!
 Fld_2
  Typ_LINE
  Prm_[LSBW]  Pick or enter lines to be divided
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_LSBW_div_op2
:E END
:! 
:N Fnc_LSCLEAR_all
:S    363,   169,   187
:T Command
:C )! Fnc_LSCLEAR_all
:A All Loads & Opts
:D Delete All Loads and LS Options
:K #(PREP7*SOLUTION)
:H Hlp_C_LSCLEAR
Inp_NoApply
Cmd_LSCLEAR,ALL
Fld_0
 Typ_Lab
 Prm_[LSCLEAR],ALL   This function deletes all loads in the database
Fld_0
 Typ_Lab
 Prm_                and initializes all load step options!
:E END
:! 
:N Fnc_LSCLEAR_fe
:S    336,   165,   164
:T Command
:C )! Fnc_LSCLEAR_fe
:A All F.E. Loads
:D Delete All Finite Element Loads
:K #(PREP7*SOLUTION)
:H Hlp_C_LSCLEAR
Inp_NoApply
Cmd_LSCLEAR,FE
Fld_0
 Typ_Lab
 Prm_[LSCLEAR],FE   This function deletes all nodal and element loads
Fld_0
 Typ_Lab
 Prm_               in the database!
:E END
:! 
:N Fnc_LSCLEAR_iner
:S    330,   163,   160
:T Command
:C )! Fnc_LSCLEAR_iner
:A All Inertia Lds
:D Delete All Inertia Loads
:K #(PREP7*SOLUTION)
:H Hlp_C_LSCLEAR
Inp_NoApply
Cmd_LSCLEAR,INER
Fld_0
 Typ_Lab
 Prm_[LSCLEAR],INER   This function deletes all inertia loads
Fld_0
 Typ_Lab
 Prm_                 in the database!
:E END
:! 
:N Fnc_LSCLEAR_lfac
:S    347,   158,   182
:T Command
:C )! Fnc_LSCLEAR_lfac
:A    Reset Factors
:D Reset Load Factors
:K #(PREP7*SOLUTION)
:H Hlp_C_LSCLEAR
Inp_NoApply
Cmd_LSCLEAR,LFACT
 Fld_0
  Typ_Lab
  Prm_[LSCLEAR],LFACT   This function initializes all load factors
 Fld_0
  Typ_Lab
  Prm_                  (DCUM, FCUM, SFCUM, etc.).
:E END
:! 
:N Fnc_LSCLEAR_lsop
:S    379,   187,   185
:T Command
:C )! Fnc_LSCLEAR_lsop
:A Reset Options
:D Reset All Load Step Options
:K (lsdyna)
:K #(PREP7*SOLUTION+pr_cfd+cfd)
:H Hlp_C_LSCLEAR
Inp_NoApply
Cmd_LSCLEAR,LSOPT
 Fld_0
  Typ_Lab
  Prm_[LSCLEAR],LSOPT   This function initializes all load step options
 Fld_0
  Typ_Lab
  Prm_                  to their default values!
:E END
:! 
:N Fnc_LSCLEAR_soli
:S    342,   168,   167
:T Command
:C )! Fnc_LSCLEAR_soli
:A All SolidMod Lds
:D Delete All Solid Model Loads
:K #(PREP7*SOLUTION)
:H Hlp_C_LSCLEAR
Inp_NoApply
Cmd_LSCLEAR,SOLID
Fld_0
 Typ_Lab
 Prm_[LSCLEAR],SOLID   This function deletes all solid model loads
Fld_0
 Typ_Lab
 Prm_                  in the database!
:E END
:! 
:N Fnc_LSDELE
:S    391,   148,   236
:T Command
:C )! Fnc_LSDELE
:A Delete LS Files
:D Delete Load Step Files
:K #(PREP7*SOLUTION)
:H Hlp_C_LSDELE
Cmd_LSDELE
 Fld_0
  Typ_Lab
  Prm_[LSDELE]  Delete Load Step Files
 Fld_2
  Prm_LSMIN  Starting LS file number
  Typ_INT
 Fld_3
  Prm_LSMAX  Ending LS file number
  Typ_INT
 Fld_4
  Prm_LSINC  LS file number increment
  Typ_INT
  Def_1
:E END
:! 
:N Fnc_LSELH_A
:S    300,   126,   167
:T Cmd_P
:C )! Fnc_LSEL_A
:A Also select lines
:D Also select lines
:H Hlp_UI_LINEHARD
Inp_P
Cmd_LSEL
 Fld_2
  Typ_DEF_A
 Fld_3
  Typ_DEF_HPT
 Fld_5
Prm_[LSEL],A  Pick or enter lines to be added to selected set
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  Sel_U
:E END
:! 
:N Fnc_LSELH_R
:S    275,   120,   148
:T Cmd_P
:C )! Fnc_LSEL_R
:A Reselect lines
:D Reselect lines
:H Hlp_UI_LINEHARD
Inp_P
Cmd_LSEL
 Fld_2
  Typ_DEF_R
 Fld_3
  Typ_DEF_HPT
 Fld_5
Prm_[LSEL],R  Pick or enter lines to be reselected
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LSELH_S
:S    277,   116,   154
:T Cmd_P
:C )! Fnc_LSEL_S
:A Select lines
:D Select lines
:H Hlp_UI_LINEHARD
Inp_P
Cmd_LSEL
 Fld_2
  Typ_DEF_S
 Fld_3
  Typ_DEF_HPT
 Fld_5
Prm_[LSEL],S  Pick or enter lines to be selected
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  Sel_D
:E END
:! 
:N Fnc_LSELH_U
:S    275,   120,   148
:T Cmd_P
:C )! Fnc_LSEL_U
:A Unselect lines
:D Unselect lines
:H Hlp_UI_LINEHARD
Inp_P
Cmd_LSEL
 Fld_2
  Typ_DEF_U
 Fld_3
  Typ_DEF_HPT
 Fld_5
Prm_[LSEL],U  Pick or enter lines to be unselected
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LSEL_A
:S    273,   120,   146
:T Cmd_P
:C )! Fnc_LSEL_A
:A Also select lines
:D Also select lines
:H Hlp_C_LSEL
Inp_P
Cmd_LSEL
 Fld_2
  Typ_DEF_A
 Fld_5
Prm_[LSEL],A  Pick or enter lines to be added to selected set
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  Sel_U
:E END
:! 
:N Fnc_LSEL_R
:S    248,   114,   127
:T Cmd_P
:C )! Fnc_LSEL_R
:A Reselect lines
:D Reselect lines
:H Hlp_C_LSEL
Inp_P
Cmd_LSEL
 Fld_2
  Typ_DEF_R
 Fld_5
Prm_[LSEL],R  Pick or enter lines to be reselected
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LSEL_S
:S    250,   110,   133
:T Cmd_P
:C )! Fnc_LSEL_S
:A Select lines
:D Select lines
:H Hlp_C_LSEL
Inp_P
Cmd_LSEL
 Fld_2
  Typ_DEF_S
 Fld_5
Prm_[LSEL],S  Pick or enter lines to be selected
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
  Sel_D
:E END
:! 
:N Fnc_LSEL_U
:S    248,   114,   127
:T Cmd_P
:C )! Fnc_LSEL_U
:A Unselect lines
:D Unselect lines
:H Hlp_C_LSEL
Inp_P
Cmd_LSEL
 Fld_2
  Typ_DEF_U
 Fld_5
Prm_[LSEL],U  Pick or enter lines to be unselected
  Typ_LINE
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_LSREAD
:S    292,   154,   131
:T Command
:C )! Fnc_LSREAD
:A Read LS File
:D Read Load Step File
:K (lsdyna)
:K #(PREP7*SOLUTION)
:H Hlp_C_LSREAD
Cmd_LSREAD
 Fld_0
  Typ_Lab
  Prm_[LSREAD]  Read Load Step File (Jobname.Sn)
 Fld_2
  Prm_LSNUM  Load step file number n
  Typ_INT
:E END
:! 
:N Fnc_LSSCAL
:S    291,   154,   130
:T Cmd_P
:C )! Fnc_LSSCAL
:C )! Lines for LSSCAL command below
:A Lines
:D Scale Lines
:K #(PREP7)
:H Hlp_C_LSSCALE
Inp_P
Cmd_)!
 Fld_2
  Typ_LINE
  Prm_[LSSCALE]  Pick or enter lines to be scaled
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_LSSCAL_2
:E END
:! 
:N Fnc_LSSCAL_2
:S    644,   123,   514
:T Command
:C )! Fnc_LSSCAL_2
:A Lines
:D Scale Lines
:K #(PREP7)
:H Hlp_C_LSSCALE
Cmd_LSSCALE
 Fld_0
  Typ_Lab
  Prm_[LSSCALE]  Scale Lines
 Fld_2
  Typ_Def_P51X
 Fld_5
  Typ_REAL3
  Prm_RX,RY,RZ  Scale factors -
  Def_1.0,1.0,1.0
 Fld_0
  Typ_Lab 
  Prm_          - in the active coordinate system
 Fld_8
  Typ_INT
  Prm_KINC   Keypoint increment
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_9
 Prm_NOELEM  Items to be scaled
  Typ_LIS_OptionB
  LIS_Lines and mesh  ,0
  LIS_Lines only      ,1
 Fld_10
  Prm_IMOVE  Existing lines will be
  Typ_LIS_OptionB
  LIS_Copied          ,0
  LIS_Moved           ,1
:E END
:! 
:N Fnc_LSSOLVE
:S    451,   160,   284
:T Command
:C )! Fnc_LSSOLVE
:A    From LS Files
:D Solve Load Step Files
:K #(SOLUTION)
:P (pp*LSDYNA)
:H Hlp_C_LSSOLVE
Inp_NoApply
Cmd_LSSOLVE
 Fld_0
  Typ_Lab
  Prm_[LSSOLVE]  Solve by Reading Data from Load Step (LS) Files
 Fld_2
  Prm_LSMIN  Starting LS file number
  Typ_INT
 Fld_3
  Prm_LSMAX  Ending LS file number
  Typ_INT
 Fld_4
  Prm_LSINC  File number increment
  Typ_INT
  Def_1
Cal_REFRESH
:E END
:! 
:N Fnc_LSTR
:S    250,   127,   116
:T Cmd_P
:C )! Fnc_LSTR
:A Straight Line
:D Create Straight Line
:K #(PREP7)
:H Hlp_C_LSTR
Inp_P
Cmd_LSTR
 Fld_2
  Typ_KEYP
  Prm_[LSTR]  Pick or enter end keypoints of line
  Rub_51
  Min_2
  Max_2
  PFM_2
:E END
:! 
:N Fnc_LSUM
:S    142,   120,    15
:T Cmd_N
:C )! Fnc_LSUM
:A Of Lines
:D Calc Geom of Lines
:K #(PREP7)
:H Hlp_C_LSUM
Inp_P
Cmd_LSUM
:E END
:! 
:N Fnc_LSWRITE
:S    300,   159,   134
:T Command
:C )! Fnc_LSWRITE
:A Write LS File
:D Write Load Step File
:K (lsdyna)
:K #(PREP7*SOLUTION)
:H Hlp_C_LSWRITE
Cmd_LSWRITE
 Fld_0
  Typ_Lab
  Prm_[LSWRITE]  Write Load Step File (Jobname.Sn)
 Fld_2
  Prm_LSNUM  Load step file number n
  Typ_INT
:E END
:! 
:N Fnc_LSYMM
:S    301,   164,   130
:T Cmd_P
:C )! Fnc_LSYMM
:C )! Lines for LSYMM command below
:A Lines
:D Reflect Lines
:K #(PREP7)
:K #(priges)
:H Hlp_C_LSYMM
Inp_P
Cmd_)!
 Fld_3
  Typ_LINE
  Prm_[LSYMM]  Pick or enter lines to be reflected
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_LSYMM_2
:E END
:! 
:N Fnc_LSYMM_2
:S    637,   121,   509
:T Command
:C )! Fnc_LSYMM_2
:A Lines
:D Reflect Lines
:K #(PREP7)
:H Hlp_C_LSYMM
Cmd_LSYMM
 Fld_0
  Typ_Lab
  Prm_[LSYMM]  Reflect Lines
 Fld_2
  Prm_Ncomp  Plane of symmetry
  Typ_LIS_RADIOB
  LIS_Y-Z plane      X,X
  LIS_X-Z plane      Y,Y
  LIS_X-Y plane      Z,Z
 Fld_3
  Typ_Def_P51X
 Fld_6
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_7
 Prm_NOELEM  Items to be reflected
  Typ_LIS_OptionB
  LIS_Lines and mesh  ,0
  LIS_Lines only      ,1
 Fld_8
  Prm_IMOVE   Existing lines will be
  Typ_LIS_OptionB
  LIS_Copied          ,0
  LIS_Moved           ,1
:E END
:! 
:N Fnc_LTAN
:S    532,   174,   351
:T Cmd_P
:C )! Fnc_LTAN
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,3
:C )/GO
:A Tangent to Line
:D Line Tangent to Line
:K #(PREP7)
:H Hlp_C_LTAN
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Typ_LINE
  Prm_[LTAN]  Pick or enter line that is tangent to new line
  Min_1
  Cnt_1
  PFM_2
 Fld_3
  Typ_KEYP
  Prm_Pick or enter keypoint at tangency end of existing line
  Min_1
  Cnt_1
  PFM_2
 Fld_4
  Typ_KEYP
  Prm_Pick or enter end keypoint of new line
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_LTAN_2
:E END
:! 
:N Fnc_LTAN_2
:S    607,   211,   389
:T Command
:C )! Fnc_LTAN_2
:C )/NOPR
:C )*get,_z1,line,_z(1),KP,1
:C )*if,_z1,EQ,_z(2),then
:C )  _z(1)=_z(1)*(-1)
:C )*endif
:C )/GO
:D Line Tangent to Line
:H Hlp_C_LTAN
Cmd_LTAN
Fld_0
 Typ_Lab
 Prm_[LTAN]  Create a Line Tangent to an Existing Line
Fld_2
 Typ_INT
 Prm_NL1  Line tangent to new line
 Def_*PAR(_z(1))
Fld_3
 Typ_INT
 Prm_P3   End keypoint of new line
 Def_*PAR(_z(3))
Fld_0
 Typ_Sep
Fld_4
 Typ_REAL3
 Prm_XV3,YV3,ZV3  Orientation point -
 Def_Blank,Blank,Blank
Fld_0
 Typ_Lab
 Prm_             - (optional) of outward vector of new line at P3 
:E END
:! 
:N Fnc_LTRAN
:S    304,   165,   132
:T Cmd_P
:C )! Fnc_LTRAN
:C )! Lines for LTRAN command below
:A Lines
:D Transfer Lines
:K #(PREP7)
:K #(priges)
:H Hlp_C_LTRAN
Inp_P
Cmd_)!
 Fld_3
  Typ_LINE
  Prm_[LTRAN]  Pick or enter lines to be transferred
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_LTRAN_2
:E END
:! 
:N Fnc_LTRAN_2
:S    646,   135,   504
:T Command
:C )! Fnc_LTRAN_2
:A Lines
:D Coord Sys Transfer of Lines
:K #(PREP7)
:H Hlp_C_LTRAN
Cmd_LTRAN
 Fld_0
  Typ_Lab
  Prm_[LTRAN]  Coordinate System Transfer of Lines
 Fld_2
  Prm_KCNTO  No. of coordinate sys -
  Typ_INT
 Fld_0
  Typ_Lab
  Prm_       - lines are to be transferred to
 Fld_3
  Typ_Def_P51X
 Fld_6
  Typ_INT
  Prm_KINC    Keypoint increment
  Def_Blank
 Fld_7
  Prm_NOELEM  Items to be transferred
  Typ_LIS_OptionB
  LIS_Lines and mesh  ,0
  LIS_Lines only      ,1
 Fld_8
  Prm_IMOVE   Existing lines will be
  Typ_LIS_OptionB
  LIS_Copied          ,0
  LIS_Moved           ,1
:E END
:! 
:N Fnc_LVSCALE
:S    379,   204,   168
:T Command
:C )! Fnc_LVSCALE
:A For Mode Super
:D Apply Load Vector for Mode Superposition Analysis
:K (lsdyna)
:K #(MODESUP*NOFILTER)
:P (LINPLUS)
:H Hlp_C_LVSCALE
Cmd_LVSCALE
Fld_0
 Typ_Lab
 Prm_[LVSCALE]  Apply Load Vector for Mode Superposition Analysis
Fld_2
 Prm_FACT  Scale factor
 Typ_REAL
 Def_*GET(common,,stepcm,,real,28)
:E END
:! 
:N Fnc_LVSCALE_PSD
:S    372,   202,   163
:T Command
:C )! Fnc_LVSCALE_PSD
:A For PSD
:D Apply Load Vector for Power Spectral Density 
:K (lsdyna)
:K #(PSDRANDM*NOFILTER)
:P (LINPLUS)
:H Hlp_C_LVSCALE
Cmd_LVSCALE
Fld_0
 Typ_Lab
 Prm_[LVSCALE]  Apply Load Vector for Power Spectral Density
Fld_2
 Prm_FACT  Scale factor
 Typ_REAL
 Def_*GET(common,,stepcm,,real,28)
:E END
:! 
:N Fnc_LVSCALE_del_psd
:S    454,   211,   236
:T Command
:C )! Fnc_LVSCALE_del_psd
:A For PSD
:D Delete Load Vector for Power Spectral Density 
:K (lsdyna)
:K #(PSDRANDM*NOFILTER)
:P (LINPLUS)
:H Hlp_C_LVSCALE
Inp_NoApply
Cmd_LVSCALE,1.0E-8
Fld_0
 Typ_Lab
 Prm_[LVSCALE]  This function deletes the load vector in a
Fld_0
 Typ_Lab
 Prm_           power spectral density analysis (by using a
Fld_0
 Typ_Lab
 Prm_           scale factor of 1.0E-8).
:E END
:! 
:N Fnc_LVSCALE_dele
:S    454,   215,   232
:T Command
:C )! Fnc_LVSCALE_dele
:A For Mode Super
:D Delete Load Vector for Mode Superposition Analysis
:K (lsdyna)
:K #(MODESUP*NOFILTER)
:P (LINPLUS)
:H Hlp_C_LVSCALE
Inp_NoApply
Cmd_LVSCALE,1.0E-8
Fld_0
 Typ_Lab
 Prm_[LVSCALE]  This function deletes the load vector in a
Fld_0
 Typ_Lab
 Prm_           mode superposition analysis (by using a
Fld_0
 Typ_Lab
 Prm_           scale factor of 1.0E-8).
:E END
:! 
:N Fnc_LWPL
:S    269,   125,   137
:T Cmd_P
:C )! Fnc_LWPL
:A Plane Normal to Line
:D Align WP Norm to Line
:H Hlp_C_LWPLAN
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_2
Typ_LINE
Prm_[LWPLAN]  Pick or enter line defining normal
Min_1
Cnt_1
PFM_2
Cmd_)/GO
Cal_Fnc_LWPL_2
:E END
:! 
:N Fnc_LWPL_2
:S    451,   131,   313
:T Cmd_P
:C )! Fnc_LWPL
:A Plane Normal to Line
:D Align WP at Ratio of Line
:H Hlp_C_LWPLAN
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z2
 Fld_0
  Typ_Lab
  Prm_[LWPLAN]  Enter the ratio along line or choose to pick the location
 Fld_2
  Typ_Real
  Prm_Ratio along line
Cmd_)!
 Fld_2
  Typ_Logi,No (Use Ratio),Yes (Pick Locat)
  Prm_Pick location on line
Cmd_)/GO
Cal_Fnc_LWPL_3a,2,eq,0,3
Cal_Fnc_LWPL_3b,2,eq,1,3
:E END
:! 
:N Fnc_LWPL_3a
:S    231,   135,    89
:T Cmd_P
:C )! Fnc_LWPL_3a
:A Plane Normal to Line
:D Align WP at Ratio of Line
:H Hlp_C_LWPLAN
Inp_P
Cmd_LWPL
 Fld_2
  Typ_Def_-1
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_LWPL_3b
:S    289,   138,   144
:T Cmd_P
:C )! Fnc_LWPL_3b
:A Plane Normal to Line
:D Align WP at Location on Line
:H Hlp_C_LWPLAN
Inp_P
Cmd_LWPL
 Fld_2
  Typ_Def_-1
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Typ_XYZ_SCREEN
  Prm_Pick a location on the line
  Min_1
  Cnt_1
  PFM_2
:E END
:! 
:N Fnc_M
:S    304,   166,   131
:T Cmd_P
:C )! Fnc_M
:C )! Nodes for M command below
:A    Define
:D Define Master DOFs
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_M
Inp_P
Cmd_)!
 Fld_2
  Prm_[M]  Pick or enter nodes for master DOF definition
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_M2
:E END
:! 
:N Fnc_M2
:S    363,   111,   245
:T Cmd_P
:C )! Fnc_M2
:D Define Master DOFs
:B Fnc_M
:P (LINPLUS)
:H Hlp_C_M
Cmd_M,P51X
 Fld_0
  Typ_Lab
  Prm_[M]  Define User-Selected Master DOFs
 Fld_2
  Prm_Lab1    1st degree of freedom
  Typ_LIS_OptionB
  LIS_All DOF,ALL
  LIS_*READ,DOF
 Fld_5
  Prm_Lab2-6  Additional DOFs
  Typ_MLis
  LIS_*READ,DOF
  Bnd_0.0,6.0
:E END
:! 
:N Fnc_MAGOPT_dsp
:S    444,   200,   237
:T Command
:C )! Fnc_MAGOPT_dsp
:A    DSP Method
:D Difference Scalar Potential Method
:K #((PREP7*SOLUTION)+(SCALARP*NOFILTER))
:P (ELECMAG)
:H Hlp_C_MAGOPT
Inp_NoApply
Cmd_MAGOPT
 Fld_0
  Typ_Lab
  Prm_[MAGOPT]  Difference Scalar Potential (DSP) Method
 Fld_2
  Prm_VALUE  Solution sequence
  Typ_LIS_RADIOB
  LIS_Air-only solu   ,2
  LIS_Final solution  ,3
  Def_*GET(common,,soptcm,,int,65)
:E END
:! 
:N Fnc_MAGOPT_gsp
:S    471,   201,   263
:T Command
:C )! Fnc_MAGOPT_gsp
:A    GSP Method
:D Generalized Scalar Potential Method
:K #((PREP7*SOLUTION)+(SCALARP*NOFILTER))
:P (ELECMAG)
:H Hlp_C_MAGOPT
Inp_NoApply
Cmd_MAGOPT
 Fld_0
  Typ_Lab
  Prm_[MAGOPT]  Generalized Scalar Potential (GSP) Method
 Fld_2
  Prm_VALUE  Solution sequence
  Typ_LIS_RADIOB
  LIS_Iron-only solu  ,1
  LIS_Air-only solu   ,2
  LIS_Final solution  ,3
  Def_*GET(common,,soptcm,,int,65)
:E END
:! 
:N Fnc_MAGOPT_rsp
:S    463,   197,   259
:T Command
:C )! Fnc_MAGOPT_rsp
:A    RSP Method
:D Reduced Scalar Potential Method
:K #((PREP7*SOLUTION)+(SCALARP*NOFILTER))
:P (ELECMAG)
:H Hlp_C_MAGOPT
Inp_NoApply
Cmd_MAGOPT,0
 Fld_0
  Typ_Lab
  Prm_[MAGOPT],0  Reduced Scalar Potential (RSP) Method
 Fld_0
  Typ_Lab
  Prm_    This option calculates a complete H field solution
 Fld_0
  Typ_Lab
  Prm_    in the entire domain using a single, reduced potential.
:E END
:! 
:N Fnc_MAGSOLV
:S    336,   154,   175
:T Cmd
:C )! Fnc_MAGSOLV
:A    Opt and Solv
:K #(harmonic+trnsient)*(NOFILTER)
:K #(edgeelc*NOFILTER)
:P (ELECMAG)
Inp_P
Cmd_)!
K_LN(((PREP7*SOLUTION)+(MAGNETIC*NOFILTER)+VECTORP*EDGEFLX))
Cal_Fnc_MAGSOLV_MVP
K_LN(((PREP7*SOLUTION)+(MAGNETIC*NOFILTER)+SCALARP+vectorp))
Cal_Fnc_MAGSOLV_MSP
:E End
:! 
:N Fnc_MAGSOLV_MSP
:S    680,   141,   532
:T Cmd
:C )! Fnc_MAGSOLV_MSP
:D Magnetostatics Options and Solution
:P (ELECMAG)
:H Hlp_C_MAGSOLV
Inp_Noapply
Cmd_MAGSOLV
 Fld_0
  Typ_Lab
  Prm_[MAGSOLV]  Magnetostatics Options and Solution
 Fld_2
  Prm_Option  Formulation option
  Typ_LIS_OPTIONB
  LIS_RSP       ,2
  LIS_DSP       ,3
  LIS_GSP       ,4
 Fld_5
  Prm_CNVTOL  FLUX Convergence Tol.
  Typ_Real
  Def_.001
 Fld_6
  Prm_NEQIT   Max. equilibrium iter.
  Typ_Int
  Def_25
 Fld_7
  Prm_BIOT    Force Biot-Savart Calc.
  Typ_LIS_OPTIONB
  LIS_NO         ,0
  LIS_YES        ,1
  Def_0
 Fld_0
  Typ_Sep
 Fld_0
  Prm_NOTE:  Selecting OK will execute a solution
  Typ_Lab
:E End
:! 
:N Fnc_MAGSOLV_MVP
:S    827,   141,   679
:T Cmd
:C )! Fnc_MAGSOLV_MVP
:D Magnetostatics Options and Solution
:P (ELECMAG)
:H Hlp_C_MAGSOLV
Inp_noapply
Cmd_MAGSOLV
 Fld_0
  Typ_Lab
  Prm_[MAGSOLV]  Magnetostatics Options and Solution
 Fld_2
  K_FL(edgeflx)
  Prm_Option  Formulation option
  Typ_LIS_OPTIONB
  LIS_MVP       ,0
  LIS_MVP/RSP   ,1
  Def_0
 Fld_2
  K_FL(EDGEFLX)
  Prm_Option  Formulation option
  Typ_LIS_OPTIONB
  LIS_EDGE      ,0
  Def_0
 Fld_3
  Prm_NRAMP   No. Ramp substeps -
  Typ_int
  Def_3
 Fld_0
  Prm_        - (Used only for nonlinear run, issue "-1" to ignore substeps)
  Typ_Lab
 Fld_4
  Prm_CNVTOL  CSG Convergence Tol.
  Typ_Real
  Def_.001
 Fld_6
  Prm_NEQIT   Max. equilibrium iter.
  Typ_Int
  Def_25
 Fld_0
  Typ_Sep
 Fld_0
  Prm_NOTE:  Selecting OK will execute a solution
  Typ_Lab
:E End
:! 
:N Fnc_MATREAD
:S    653,   164,   482
:T Cmd
:C )! Fnc_MATREAD
:A MATSUM file
:D Read data from the MATSUM file 
:K (LSDYNA*FULL_ANS)
:K #(POST26)
:H Hlp_C_EDREAD
Cmd_EDREAD
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab
   Prm_[EDREAD] Read MATSUM file data into variables for postprocessing
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Variable ref no.
   Typ_INT
   Def_2
 Fld_3
   Typ_Char
   Typ_Def_MATSUM
 Fld_4
   Prm_Read data for part number...
   Typ_Lis_OptionB
   Lis_*READ,PART
 Fld_5
   Prm_From load step
   Typ_Int
 Fld_6
   Prm_To load step
   Typ_Int
 Fld_0
  Typ_Lab
  Prm_                       - The default is for all load steps
 Fld_0
  Typ_Sep
:E END
:! 
:N Fnc_MAT_TYPE_gen
:S   2497,   952,  1518
:T Command
:C )! Fnc_MAT_TYPE_gen
:C )/nopr
:C )*del,_zc
:C )*dim,_zc,char,100
:C )*set,_zc(2),'LINE','PARA','ARC','CARC',' ','TRIA'
:C )*set,_zc(8),'QUAD','TRI6','QUA8'
:C )*set,_zc(12),'CIRC',' ',' ','CYLI','CONE','SPHE'
:C )*set,_zc(100),'PILO'
:C )*get,_z6,common,,gr170cm,,int,2
:C )_z6=_z6+1
:C )KEYW,ETLIST,0
:C )KEYW,RLLIST,0
:C )KEYW,MPLIST,0
:C )KEYW,CSLIST,0
:C )KEYW,YESSECT,0
:C )KEYW,SELIST,0
:C )_z1=ETYIQR(0,12)
:C )*IF,_z1,gt,10,then
:C )KEYW,ETLIST,1
:C )*ENDIF
:C )_z2=RLINQR(0,12)
:C )*IF,_z2,gt,10,then
:C )KEYW,RLLIST,1
:C )*ENDIF
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )_z4=CSYIQR(0,12)
:C )*IF,_z4,gt,10,then
:C )KEYW,CSLIST,1
:C )*ENDIF
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,0,then
:C )KEYW,YESSECT,1
:C )*ENDIF
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )/go
:A Elem Attributes
:D Element Attributes
:K #(PREP7)
:H Hlp_UI_mattpgen
Inp_NoApply
 Fld_0
  Typ_Lab
  Prm_Define attributes for elements
 Fld_0
  Typ_Sep
Cmd_TYPE
 Fld_2
  Prm_[TYPE]  Element type number
  K_LN(etlist)
  Typ_LIS_OPTIONB
  K_LN(ETLIST)
  Typ_LIS
  LIS_*READ,TYPE
  Def_*GET(ACTIVE,,TYPE)
 Fld_0
  Typ_Sep
Cmd_MAT
 Fld_2
  Prm_[MAT]   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
  Def_*GET(ACTIVE,,MAT)
 Fld_0
  Typ_Sep
Cmd_REAL
 Fld_2
  Prm_[REAL]  Real constant set number
  K_LN(rllist)
  Typ_LIS_OPTIONB
  K_LN(RLLIST)
  Typ_LIS
  LIS_*READ,REAL
  Def_*GET(ACTIVE,,REAL)
 Fld_0
  Typ_Sep
Cmd_ESYS
 Fld_2
  Prm_[ESYS]  Element coordinate sys
  K_LN(cslist)
  Typ_LIS_OPTIONB
  K_LN(CSLIST)
  Typ_LIS
  LIS_*READ,ESYS
  Def_*GET(ACTIVE,,ESYS)
 Fld_0
  Typ_Sep
Cmd_SECNUM
 Fld_2
  Prm_[SECNUM]  Section number
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  K_LN(YESSECT)
  LIS_No Section, ,
  Def_*GET(ACTIVE,,SECT)
 Fld_0
 K_FL((pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna))
 P_FL(FULL_ANS)
  Typ_Sep
Cmd_TSHAP
 K_CM((pr_set*PR_MULTI*PR_STRUC)+(pmethod)+(lsdyna))
 P_CM(FULL_ANS)
 Fld_2
  Prm_[TSHAP]  Target element shape 
Typ_LIS_OPTIONB
LIS_Straight line   ,LINE
LIS_Parabolic       ,PARA
LIS_Arc CW   (ARC)  ,ARC
LIS_Arc CCW (CARC)  ,CARC
LIS_Circle          ,CIRC
LIS_3 node Triangle ,TRIA
LIS_4 node quad     ,QUAD
LIS_6 node Triangle ,TRI6
LIS_8 node quad     ,QUA8
LIS_Cylinder        ,CYLI
LIS_Cone            ,CONE
LIS_Sphere          ,SPHE
LIS_Pilot node      ,PILO
Def_*PAR(_zc(_z6))
:E End_OF_Fnc_MAT_TYPE_gen
:! 
:N Fnc_MCHECK
:S    181,   157,    17
:T Cmd_N
:C )! Fnc_MCHECK
:A    Ck Connectvty
:D Check Element Connectivity
:K ((PREP7*SOLUTION)+begin)
:K #(igesfail)
Inp_P
Cmd_MCHECK
:E END
:! 
:N Fnc_MCHECK_ESEL
:S    193,   164,    22
:T Cmd_N
:C )! Fnc_MCHECK_ESEL
:A    Sel Bad Connt
:D Select Bad Connectivity
:K ((PREP7*SOLUTION)+begin)
:K #(igesfail)
Inp_P
Cmd_MCHECK,ESEL
:E END
:! 
:N Fnc_MDELE
:S    326,   182,   137
:T Cmd_P
:C )! Fnc_MDELE
:C )! Nodes for MDELE command below
:A    Delete
:D Delete Master DOFs
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_MDELE
Inp_P
Cmd_)!
 Fld_2
  Prm_[MDELE]  Pick or enter nodes for master DOF deletion
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_MDELE2
:E END
:! 
:N Fnc_MDELE2
:S    387,   127,   253
:T Cmd_P
:C )! Fnc_MDELE2
:D Delete Master DOFs
:B Fnc_MDELE
:P (LINPLUS)
:H Hlp_C_MDELE
Cmd_MDELE,P51X
 Fld_0
  Typ_Lab
  Prm_[MDELE]  Delete User-Selected Master DOFs
 Fld_2
  Prm_Lab1    1st degree of freedom
  Typ_LIS_OptionB
  LIS_All DOF,ALL
  LIS_*READ,DOF
 Fld_5
  Prm_Lab2-6  Additional DOFs
  Typ_MLis
  LIS_*READ,DOF
  Bnd_0.0,6.0
:E END
:! 
:N Fnc_MDPLOT
:S    690,   186,   497
:T Command
:C )! Fnc_MDPLOT
:C )/NOPR
:C )_z1='  '
:C )/GO
:A Plot Dmp Parm
:D Plot damping coefficients 
:K #(POST1+RESULTS+TFILM)
:H Hlp_C_MDPLOT
Inp_Noapply
Cmd_)/NOPR
Cmd_)*CSET,1,3
 Fld_0
  Typ_Lab
  Prm_[MDPLOT]  Plot modal damping coefficients
 Fld_2
  Prm_Scale      Plotting options
  Typ_Lis_OptionB
  Lis_Linear ,'LIN'
  Lis_Logarithmic,'LOG'
 Fld_3
  Prm_Dmpname    Damp. Results array
  Typ_Lis_OptionB
  Lis_*READ,PARA
 Fld_0
  Typ_Sep
 Fld_4
  Prm_Function   Function to display
  Typ_Lis
   Lis_Damping coeff,d_coeff
   Lis_Squeeze coeff,s_coeff
   Lis_Damping ratio,d_ratio
   Lis_Squeeze ratio,s_ratio
Cmd_)/GO
Cal_Fnc_MDPLOT2
:E END
:! 
:N Fnc_MDPLOT2
:S    289,    66,   216
:T Cmd_P
:C )! Fnc_MDPLOT2
Inp_P
Cmd_MDPLOT
 Fld_2
  Dlm_'
 Fld_3
  Typ_Def_*CPAR(3)
  Dlm_'
 Fld_4
  Typ_Lab
 Fld_5
  Dlm_'
 Fld_6
  Typ_Def_*CPAR(2)
  Dlm_'
 Fld_7
  Typ_Lab
 Fld_8
  Dlm_'
 Fld_9
  Typ_Def_*CPAR(1)
  Dlm_'
 Fld_10
  Typ_Lab
:E END
:! 
:N Fnc_MESH_clnup
:S    210,    70,   133
:T Cmd
:C )! Fnc_MESH_clnup
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y1
! Exclude_from_paths
Cmd_CMDELE,_Y2
Cmd_)/GO
:E END
:! 
:N Fnc_MFMCC_Clear
:S    356,   144,   204
:T Command
:C )! Fnc_MFMCC_Clear
:A Clear
:D MFX Clear
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFCLEAR
Inp_NoApply
 Fld_0
  Typ_lab
  Prm_[MFCL] Clear Multi-field Options
Cmd_MFCL
 Fld_2
  Prm_Clear Options
   Typ_Lis_OptionB
   LIS_Field Group,MFPS
   LIS_Group Order,MFSO
   LIS_MF Loads,MFLC
   Def_MFPS
:E END 
:! 
:N Fnc_MFMCC_Stat
:S    248,   143,    98
:T Command
:C )! Fnc_MFMCC_Stat
:A Status
:D MFX Status
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFLIST
Inp_NoApply
Cmd_MFLI
 Fld_0
  Typ_lab
  Prm_[MFLI] List All Multi-field Options
 Fld_2
   Def_ALL
:E END
:! 
:N Fnc_MFRUR_tables
:S   2166,   553,  1606
:T Command
:C )! Fnc_MFRUR_tables
:C )/NOPR
:C )KEYW,key1,0,key2,0,key3,0
:C )KEYW,key4,0,key5,0,key6,0
:C )*DO,_z1,1,5,1
:C )*IF,_zc(_z1),NE,0,THEN
:C )KEYW,KEY%_z1%,1
:C )*ELSE
:C )KEYW,KEY%_z1%,0
:C )*ENDIF
:C )*ENDDO
:C )*GET,_z1,common,,MFLDCMD,,int, 2272  ! DISP
:C )*GET,_z2,common,,MFLDCMD,,int, 2273  ! 
:C )*GET,_z3,common,,MFLDCMD,,int, 2274  ! 
:C )*GET,_z4,common,,MFLDCMD,,int, 2275  ! 
:C )*GET,_z5,common,,MFLDCMD,,int, 2276  ! 
:C )/GO
:A Relaxation
:D Set Relaxation values
:H Hlp_C_MFRELAX
Inp_NoApply
Cmd_MFRE
 Fld_0
  Typ_lab
  Prm_[MFRE]  Set Multi-field Relaxation Values and Types
 Fld_0
  Typ_lab
  Prm_
K_CM(KEY1)
 Fld_0
  Typ_SEP
 Fld_0
   Prm_    For item %_CLAB(_zc(1))% 
 Fld_2
  Typ_Def_*PAR(_CLAB(_zc(1)))
 Fld_3
  Typ_Real
   Prm_       Value:
  Def_*GET(common,,MFLDCMD,,real,_zc(1)+9)
 Fld_4
  Prm_        Type:
  Typ_Lis_RadioB
  Lis_RELX,RELX
  Lis_LINT,LINT
  Def_*PAR(_TC(_z1+1))
Cmd_MFRE
K_CM(KEY2)
 Fld_0
  Typ_SEP
 Fld_0
   Prm_    For item %_CLAB(_zc(2))% 
 Fld_2
  Typ_Def_*PAR(_CLAB(_zc(2)))
 Fld_3
  Typ_Real
   Prm_       Value:
  Def_*GET(common,,MFLDCMD,,real,_zc(2)+9)
 Fld_4
  Prm_        Type:
  Typ_Lis_RadioB
  Lis_RELX,RELX
  Lis_LINT,LINT
  Def_*PAR(_TC(_z2+1))
Cmd_MFRE
K_CM(KEY3)
 Fld_0
  Typ_SEP
 Fld_0
   Prm_    For item %_CLAB(_zc(3))% 
 Fld_2
  Typ_Def_*PAR(_CLAB(_zc(3)))
 Fld_3
  Typ_Real
   Prm_       Value:
  Def_*GET(common,,MFLDCMD,,real,_zc(3)+9)
 Fld_4
  Prm_        Type:
  Typ_Lis_RadioB
  Lis_RELX,RELX
  Lis_LINT,LINT
  Def_*PAR(_TC(_z3+1))
Cmd_MFRE
K_CM(KEY4)
 Fld_0
  Typ_SEP
 Fld_0
   Prm_    For item %_CLAB(_zc(4))% 
 Fld_2
  Typ_Def_*PAR(_CLAB(_zc(4)))
 Fld_3
  Typ_Real
   Prm_       Value:
  Def_*GET(common,,MFLDCMD,,real,_zc(4)+9)
 Fld_4
  Prm_        Type:
  Typ_Lis_RadioB
  Lis_RELX,RELX
  Lis_LINT,LINT
  Def_*PAR(_TC(_z4+1))
Cmd_MFRE
K_CM(KEY5)
 Fld_0
  Typ_SEP
 Fld_0
   Prm_    For item %_CLAB(_zc(5))% 
 Fld_2
  Typ_Def_*PAR(_CLAB(_zc(5)))
 Fld_3
  Typ_Real
   Prm_       Value:
  Def_*GET(common,,MFLDCMD,,real,_zc(5)+9)
 Fld_4
  Prm_        Type:
  Typ_Lis_RadioB
  Lis_RELX,RELX
  Lis_LINT,LINT
  Def_*PAR(_TC(_z5+1))
:E END
:! 
:N Fnc_MFR_tables
:S   2505,   593,  1905
:T Command
:C )! Fnc_MFR_tables
:C )/NOPR
:C )KEYW,key1,0,key2,0,key3,0
:C )KEYW,key4,0,key5,0,key6,0
:C )*DO,_z1,1,6,1
:C )*IF,_zc(_z1),NE,0,THEN
:C )KEYW,KEY%_z1%,1
:C )*ELSE
:C )KEYW,KEY%_z1%,0
:C )*ENDIF
:C )*ENDDO
:C )*GET,_z1,common,,MFLDCMD,,int, 2272  ! DISP
:C )*GET,_z2,common,,MFLDCMD,,int, 2273  ! 
:C )*GET,_z3,common,,MFLDCMD,,int, 2274  ! 
:C )*GET,_z4,common,,MFLDCMD,,int, 2275  ! 
:C )*GET,_z5,common,,MFLDCMD,,int, 2276  ! 
:C )*GET,_z6,common,,MFLDCMD,,int, 2277  ! 
:C )/GO
:A Relaxation
:D Set Relaxation values
:H Hlp_C_MFRELAX
Inp_NoApply
Cmd_MFRE
 Fld_0
  Typ_lab
  Prm_[MFRE]  Set Multi-field Relaxation Values and Types
 Fld_0
  Typ_lab
  Prm_
K_CM(KEY1)
 Fld_0
  Typ_SEP
 Fld_0
   Prm_    For item %_CLAB(_zc(1))% 
 Fld_2
  Typ_Def_*PAR(_CLAB(_zc(1)))
 Fld_3
  Typ_Real
   Prm_       Value:
  Def_*GET(common,,MFLDCMD,,real,_zc(1)+9)
 Fld_4
  Prm_        Type:
  Typ_Lis_RadioB
  Lis_RELX,RELX
  Lis_LINT,LINT
  Def_*PAR(_TC(_z1+1))
Cmd_MFRE
K_CM(KEY2)
 Fld_0
  Typ_SEP
 Fld_0
   Prm_    For item %_CLAB(_zc(2))% 
 Fld_2
  Typ_Def_*PAR(_CLAB(_zc(2)))
 Fld_3
  Typ_Real
   Prm_       Value:
  Def_*GET(common,,MFLDCMD,,real,_zc(2)+9)
 Fld_4
  Prm_        Type:
  Typ_Lis_RadioB
  Lis_RELX,RELX
  Lis_LINT,LINT
  Def_*PAR(_TC(_z2+1))
Cmd_MFRE
K_CM(KEY3)
 Fld_0
  Typ_SEP
 Fld_0
   Prm_    For item %_CLAB(_zc(3))% 
 Fld_2
  Typ_Def_*PAR(_CLAB(_zc(3)))
 Fld_3
  Typ_Real
   Prm_       Value:
  Def_*GET(common,,MFLDCMD,,real,_zc(3)+9)
 Fld_4
  Prm_        Type:
  Typ_Lis_RadioB
  Lis_RELX,RELX
  Lis_LINT,LINT
  Def_*PAR(_TC(_z3+1))
Cmd_MFRE
K_CM(KEY4)
 Fld_0
  Typ_SEP
 Fld_0
   Prm_    For item %_CLAB(_zc(4))% 
 Fld_2
  Typ_Def_*PAR(_CLAB(_zc(4)))
 Fld_3
  Typ_Real
   Prm_       Value:
  Def_*GET(common,,MFLDCMD,,real,_zc(4)+9)
 Fld_4
  Prm_        Type:
  Typ_Lis_RadioB
  Lis_RELX,RELX
  Lis_LINT,LINT
  Def_*PAR(_TC(_z4+1))
Cmd_MFRE
K_CM(KEY5)
 Fld_0
  Typ_SEP
 Fld_0
   Prm_    For item %_CLAB(_zc(5))% 
 Fld_2
  Typ_Def_*PAR(_CLAB(_zc(5)))
 Fld_3
  Typ_Real
   Prm_       Value:
  Def_*GET(common,,MFLDCMD,,real,_zc(5)+9)
 Fld_4
  Prm_        Type:
  Typ_Lis_RadioB
  Lis_RELX,RELX
  Lis_LINT,LINT
  Def_*PAR(_TC(_z5+1))
Cmd_MFRE
K_CM(KEY6)
 Fld_0
  Typ_SEP
 Fld_0
   Prm_    For item %_CLAB(_zc(6))% 
 Fld_2
  Typ_Def_*PAR(_CLAB(_zc(6)))
 Fld_3
  Typ_Real
   Prm_       Value:
  Def_*GET(common,,MFLDCMD,,real,_zc(6)+9)
 Fld_4
  Prm_        Type:
  Typ_Lis_RadioB
  Lis_RELX,RELX
  Lis_LINT,LINT
  Def_*PAR(_TC(_z6+1))
:E END
:! 
:N Fnc_MFR_values
:S    486,   221,   258
:T Command
:C )! Fnc_MFR_values
:C )/NOPR
:C )_item = 'ALL '
:C )*GET,_z1,common,,MFLDCMD,,int, 2272  ! 
:C )/GO
:A Relaxation
:D Set Relaxation values and types
:H Hlp_C_MFRELAX
Inp_NoApply
Cmd_MFRE
 Fld_2
 Typ_Def_*PAR(_item)
 Fld_3
  Typ_Real
  Prm_Relaxation values for ALL items
  Def_*GET(common,,MFLDCMD,,real,10)
 Fld_4
  Prm_Relaxation types for ALL items
  Typ_Lis_RadioB
  Lis_RELX,RELX
  Lis_LINT,LINT
  Def_*PAR(_TC(_z1+1))
:E END
:! 
:N Fnc_MFSCC_Clear
:S    512,   142,   362
:T Command
:C )! Fnc_MFS_Clear
:A Clear
:D MFS Clear
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFCLEAR
Inp_NoApply
 Fld_0
  Typ_lab
  Prm_[MFCL] Clear Multi-field Options
Cmd_MFCL
 Fld_2
  Prm_Clear Options
   Typ_Lis_OptionB
   LIS_SOLU,SOLU
   LIS_FIELD,FIELD
   LIS_SINT,SINT
   LIS_VINT,VINT
   LIS_ORD,ORD
   LIS_EXT,EXT
   Def_SOLU
 Fld_3
  Prm_Value 
  Typ_Int
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Value valid for FIELD, SINT and VINT options
:E END 
:! 
:N Fnc_MFSCC_Stat
:S    493,   143,   343
:T Command
:C )! Fnc_MFSCC_Stat
:A Status
:D MFS Status
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFLIST
Inp_NoApply
Cmd_MFLI
 Fld_0
  Typ_lab
  Prm_[MFLI] List Multi-field Options
 Fld_2
  Prm_List Options
   Typ_Lis_OptionB
   LIS_ALL,ALL
   LIS_SOLU,SOLU
   LIS_FIELD,FIELD
   LIS_SINT,SINT
   LIS_VINT,VINT
   Def_ALL
 Fld_3
  Prm_Value
  Typ_Int
  Def_Blank
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Value valid for FIELD, SINT and VINT options
:E END
:! 
:N Fnc_MFSUR_Converg
:S    824,   439,   378
:T Command
:C )! Fnc_MFSUR_Converg
:A Convergence
:D MFX Convergence Options
:C )/NOPR
:C )*del,_zc
:C )*dim,_zc,,8
:C )*DEL,_CLAB(1)
:C )*DIM,_CLAB,CHAR,8
:C )*SET,_CLAB(1),'UX','UY','UZ','FX','FY','FZ','TEMP','HFLU'
:C )*GET,_z2,common,,MFLDCMD,,int,3   ! Get Iteration setting
:C )*GET,_z9,common,,MFLDCMD,,int,23  ! Get Frequency for time steps
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFCONV
Inp_NoApply
Cmd_)*SET,_zc(1)
 Fld_0
  Typ_lab
  Prm_Multi-field Convergence Options
 Fld_2
  Prm_[MFCO] Convergence items
  Typ_MLIS
   LIS_ALL,0
   LIS_DISP-UX,1
   LIS_DISP-UY,2
   LIS_DISP-UZ,3
   LIS_FORC-FX,4
   LIS_FORC-FY,5
   LIS_FORC-FZ,6
   LIS_TEMP,7
   LIS_HFLU,8
   Def_1
 Fld_0
   Typ_Lab
   Prm_
Cmd_)/GO
Cal_Fnc_MFS_values,2,eq,0,1
Cal_Fnc_MFSUR_tables,2,ne,0,1
:E END
:! 
:N Fnc_MFSUR_Relax
:S    690,   367,   316
:T Command
:C )! Fnc_MFSUR_Relax
:C )/NOPR
:C )*del,_zc
:C )*dim,_zc,,5
:C )*DEL,_CLAB(1)
:C )*DIM,_CLAB,CHAR,5
:C )*SET,_CLAB(1),'DISP','FORC','TEMP','HFLU','ALL'
:C )*DEL,_TC(1)
:C )*DIM,_TC,CHAR,2
:C )*SET,_TC(1),'RELX','LINT'
:C )/GO
:K (PREP7*SOLUTION*NOFILTER)
:A Relaxation
:D MFX Relaxation options
:H Hlp_C_MFRELAX
Inp_NoApply
Cmd_)*CSET,1,1
 Fld_0
  Typ_lab
  Prm_Multi-field Relaxation Options
 Fld_0
  Typ_lab
  Prm_
Cmd_)*SET,_zc(1)
 Fld_2
  Prm_[MFRE] Relaxation items
   Typ_MLIS
   LIS_ALL,0
   LIS_DISP,1
   LIS_FORC,2
   LIS_TEMP,3
   LIS_HFLU,4
   Def_1
Cmd_)/GO
Cal_Fnc_MFR_values,2,eq,0,2
Cal_Fnc_MFRUR_tables,2,gt,0,2
:E END
:! 
:N Fnc_MFSUR_tables
:S   1526,   360,  1159
:T Command
:C )! Fnc_MFSUR_tables
:C )/NOPR
:C )KEYW,key1,0,key2,0,key3,0
:C )KEYW,key4,0,key5,0,key6,0
:C )KEYW,key7,0,key8,0,key9,0
:C )*DO,_z1,1,8,1
:C )*IF,_zc(_z1),NE,0,THEN
:C )KEYW,KEY%_z1%,1
:C )*ELSE
:C )KEYW,KEY%_z1%,0
:C )*ENDIF
:C )*ENDDO
:C )/GO
:A Convergence
:D Set Convergence values
:H Hlp_C_MFCONV
Inp_NoApply
Cmd_MFCO
 Fld_0
  Typ_lab
  Prm_[MFCO]  Set Multi-field Convergence Values
 Fld_0
  Typ_lab
  Prm_
K_CM(KEY1)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(1)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(1))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(1))
Cmd_MFCO
K_CM(KEY2)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(2)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(2))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(2))
Cmd_MFCO
K_CM(KEY3)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(3)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(3))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(3))
Cmd_MFCO
K_CM(KEY4)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(4)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(4))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(4))
Cmd_MFCO
K_CM(KEY5)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(5)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(5))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(5))
Cmd_MFCO
K_CM(KEY6)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(6)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(6))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(6))
Cmd_MFCO
K_CM(KEY7)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(7)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(7))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(7))
:E END
:! 
:N Fnc_MFS_Addelems
:S    359,   151,   201
:T Command
:C )! Fnc_MFS_Addelems
:A Add elems
:D MFS Add elems
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFEM
Cmd_MFEM
 Fld_0
  Typ_lab
  Prm_[MFEM]  Add more element types to a field
 Fld_2
  Prm_Field number
  Typ_Int
  Def_Blank
 Fld_3
  Prm_Element type
  Bnd_1,10
  Typ_MLis_
   LIS_*READ,TYPE
  Def_Blank
:E END
:! 
:N Fnc_MFS_Capture
:S    492,   167,   318
:T Command
:C )! Fnc_MFS_Capture
:A Capture 
:D MFS Solution option capture 
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFCMMAND
Inp_NoApply
Cmd_MFCM
 Fld_0
  Typ_lab
  Prm_[MFCM] Define Commands File Name
 Fld_2
  Prm_Field number
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_3
  Prm_Commands file name
  Typ_Char
  Def_
 Fld_4
  Prm_Commands file ext
  Typ_Char
  Def_
 Fld_0
  Typ_lab
  Prm_Note: Blank defaults to field"n".cmd. (n = Field number)
:E END
:! 
:N Fnc_MFS_Converg
:S    839,   442,   390
:T Command
:C )! Fnc_MFS_Converg
:A Convergence
:D MFS Convergence Options
:C )/NOPR
:C )*del,_zc
:C )*dim,_zc,,9
:C )*DEL,_CLAB(1)
:C )*DIM,_CLAB,CHAR,9
:C )*SET,_CLAB(1),'UX','UY','UZ','FX','FY','FZ','TEMP','HFLU','HGEN'
:C )*GET,_z2,common,,MFLDCMD,,int,3   ! Get Iteration setting
:C )*GET,_z9,common,,MFLDCMD,,int,23  ! Get Frequency for time steps
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFCONV
Inp_NoApply
Cmd_)*SET,_zc(1)
 Fld_0
  Typ_lab
  Prm_Multi-field Convergence Options
 Fld_2
  Prm_[MFCO] Convergence items
  Typ_MLIS
   LIS_ALL,0
   LIS_DISP-UX,1
   LIS_DISP-UY,2
   LIS_DISP-UZ,3
   LIS_FORC-FX,4
   LIS_FORC-FY,5
   LIS_FORC-FZ,6
   LIS_TEMP,7
   LIS_HFLU,8
   LIS_HGEN,9
   Def_1
 Fld_0
   Typ_Lab
   Prm_
Cmd_)/GO
Cal_Fnc_MFS_values,2,eq,0,1
Cal_Fnc_MFS_tables,2,ne,0,1
:E END
:! 
:N Fnc_MFS_Define_2
:S    536,   162,   367
:T Command
:C )! Fnc_MFS_Definefield
:A Define
:D MFS Define
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFEL
:H Hlp_C_MFFN
Inp_P
Cmd_MFEL
 Fld_2
  Typ_Def_*PAR(_Z)
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*CPAR(2)
 Fld_5
  Typ_Def_*CPAR(3)
 Fld_6
  Typ_Def_*CPAR(4)
 Fld_7
  Typ_Def_*CPAR(5)
 Fld_8
  Typ_Def_*CPAR(6)
 Fld_9
  Typ_Def_*CPAR(7)
 Fld_10
  Typ_Def_*CPAR(8)
 Fld_11
  Typ_Def_*CPAR(9)
 Fld_12
  Typ_Def_*CPAR(10)
Cmd_MFFN
 Fld_2
  Typ_Def_*PAR(_Z)
 Fld_3
  Typ_Def_*CPAR(11)
:E END
:! 
:N Fnc_MFS_Definefield
:S    629,   156,   466
:T Command
:C )! Fnc_MFS_Definefield
:A Define
:D MFS Define
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_UI_MFdefine
Cmd_)/NOPR
Cmd_)*SET,_Z
 Fld_0
  Typ_lab
  Prm_[MFEL/MFFN]  Define Field Elements and File Name
 Fld_2
  Prm_Field number
  Typ_Int
  Def_1
Cmd_)*CSET,1,10
 Fld_0
  Typ_lab
  Prm_ 
 Fld_2
  Prm_Element type
  Bnd_1,10
  Typ_MLis_
   LIS_*READ,TYPE
  Def_Blank
Cmd_)*CSET,11,11
 Fld_0
  Typ_lab
  Prm_ 
 Fld_2
  Prm_Field file name
  Typ_Char
  Def_
 Fld_0
  Typ_lab
  Prm_Note: Blank file name defaults to field"n". (n = Field number) 
Cmd_)/GO
Cal_Fnc_MFS_Define_2
:E END
:! 
:N Fnc_MFS_Extern
:S    305,   163,   135
:T Command
:C )! Fnc_MFS_Extern
:A External 
:D MFS External Field Options
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFEXTER
Inp_NoApply
Cmd_MFEX
 Fld_0
  Typ_lab
  Prm_[MFEX]  Define External Fields 
 Fld_2
  Bnd_1,10
  Typ_MLis_
  LIS_*READ,MFEL
  Def_Blank
:E END
:! 
:N Fnc_MFS_FieldGrp
:S    348,   162,   179
:T Command
:C )! Fnc_MFS_FieldGrp
:A Field Grp 
:D MFS Setup Field Groups 
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFPS
Cmd_MFPS
 Fld_0
  Typ_lab
  Prm_[MFPS] Setup Field Groups
 Fld_2
  Prm_Group Name
  Typ_Char
 Fld_3
  Prm_Field Name 
  Typ_Char
  Def_
 Fld_4
  Prm_Field Name 
  Typ_Char
  Def_
:E END
:! 
:N Fnc_MFS_Freq
:S    496,   155,   334
:T Command
:C )! Fnc_MFS_Freq
:A Frequency
:D MFS Solution Frequency
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_UI_MFsoln
Cmd_MFCA
 Fld_0
  Typ_lab
  Prm_[MFCA] Field calculation frequency
 Fld_2
  Prm_            Field number
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_3
  Prm_     Time step frequency
  Typ_Int
  Def_1
Cmd_MFOU
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_[MFOU] Results output frequency
 Fld_2
  Prm_        Output frequency
  Typ_Int
  Def_1
:E END
:! 
:N Fnc_MFS_Import
:S    429,   203,   219
:T Command
:C )! Fnc_MFS_Import
:C )/NOPR
:C )*DEL,_zc1
:C )_zc1='db'
:C )*DEL,_zc2
:C )_zc2='cdb'
:C )/GO
:A Import 
:D MFS Import
:K (PREP7)
:H Hlp_C_MFIMPORT
Inp_NoApply
Cmd_MFIM
 Fld_0
  Typ_lab
  Prm_[MFIM] Field Import 
 Fld_2
  Prm_Field number
  Typ_Int
  Def_Blank
 Fld_3
  Prm_Option
  Typ_Char
  Def_*PAR(_zc1)
 Fld_4
  Typ_FILE
  Prm_Import File Name
  Def_*PAR(_zc2)
:E END
:! 
:N Fnc_MFS_MCCOrder
:S    808,   379,   422
:T Command
:C )! Fnc_MFS_MCCOrder
:C )/NOPR
:C )*GET,_z1,common,,MFLDCMD,,int,1906  ! Get nPSolveGroup
:C )keyw,field1,0
:C )keyw,field2,0
:C )*if,_z1,ge,1,then
:C )keyw,field1,1
:C )*endif
:C )*if,_z1,ge,2,then
:C )keyw,field2,1
:C )*endif
:C )/GO
:A Order
:D MFS Solution Order Options
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFSORDER
Inp_NoApply
Cmd_MFSO
 Fld_0
  Typ_lab
  Prm_[MFSO] Define Field Group Solution Order
 Fld_0
  Typ_lab
  Prm_Select Field Group Solution Order (First to Last)
 Fld_0
  Typ_Sep
 Fld_2
!  Prm_First Group Name
!  Typ_Char
  K_FL(FIELD1)
  Typ_Lis_OptionB
   Lis_*READ,MFFG
 Fld_3
!  Prm_Second Group Name
!  Typ_Char
  K_FL(FIELD2)
  Typ_Lis_OptionB
   Lis_*READ,MFFG
Cmd_)/NOPR
Cmd_)keyw,field1,0
Cmd_)keyw,field2,0
Cmd_)/GO
:E END
:! 
:N Fnc_MFS_MCCSetup
:S   1010,   423,   580
:T Command
:C )! Fnc_MFS_MCCSetup
:C )/NOPR
:C )*del,_z
:C )*dim,_z,,4
:C )*GET,_z2,common,,MFLDCMD,,real,22   ! Get Normal tolerance for MFLC
:C )*GET,_z8,common,,MFLDCMD,,int,2368  ! get normal distance type
:C )*IF,_z8,eq,1,then
:C )_valut = 'REL'
:C )*else
:C )_valut = 'ABS'
:C )*endif
:C )/GO
:A Global
:D MFS Setup
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFBU
:H Hlp_C_MFTO
Inp_NoApply
Cmd_)*SET,_z1
Fld_0
  Typ_lab
  Prm_Multi-field Solution Global Options
 Fld_0
  Typ_Sep
Cmd_MFBU
 Fld_2
  Prm_[MFBU]  Bucket search option
  Typ_Lis_RadioB
  Lis_ON,ON
  Def_0
 Fld_3
  Prm_Scaling factor (in percent) 
  Typ_Int
  Def_50
 Fld_0
  Typ_Sep
Cmd_MFTO
 Fld_2
  Prm_[MFTO] Normal tolerance for MFLC
  Typ_Lis_RadioB
  Lis_OFF,OFF
  Lis_ON,ON
  Def_0
Fld_3 
  Prm_Tolerance for normal distance
  Typ_Real
  Def_*PAR(_z2)
Fld_4
  Prm_Normal distance type
   Typ_Lis_RadioB 	
   Lis_Relative,REL
   Lis_Absolute,ABS
   Def_*PAR(_valut)
 Fld_0
  Typ_lab
  Prm_
:E END
:! 
:N Fnc_MFS_Mapping
:S    766,   157,   602
:T Command
:C )! Fnc_MFS_Mapping
:K (PREP7*SOLUTION*NOFILTER)
:A Mapping
:D MFS Mapping operations
:H Hlp_C_MFMAP
Cmd_MFMA
 Fld_0
  Typ_lab
  Prm_[MFMA]  Surface and volumetric mapping operations
 Fld_0
  Typ_lab
  Prm_
 Fld_2
  Prm_Mapping operation labels
   Typ_LIS_OptionB
   LIS_CALC,CALC
   LIS_SAVE,SAVE
   LIS_RESU,RESU
   LIS_DELE,DELE
   Def_CALC
 Fld_3
  Prm_Mapping object options
   Typ_LIS_OptionB
   LIS_ALL,ALL
   LIS_SURF,SURF
   LIS_VOLU,VOLU
   Def_ALL
 Fld_4
  Prm_Mapping file name
  Typ_Char
  Def_
 Fld_5
  Prm_Mapping file format options
 Typ_LIS_OptionB
   LIS_Binary,BINA
   LIS_Ascii,ASCI
  Def_BINA
 Fld_0
  Typ_lab
  Prm_Note: File name and format only required for SAVE and RESU label.
:E END
:! 
:N Fnc_MFS_MaxIter
:S    628,   353,   268
:T Command
:C )! Fnc_MFS_MaxIter
:A Iterations
:D MFS Stagger Iteration
:C )/NOPR
:C )*GET,_z2,common,,MFLDCMD,,int,3      ! Get MF_MaxIter
:C )*GET,_z3,common,,MFLDCMD,,int,1734   ! Get MF_MinIter
:C )*GET,_z4,common,,MFLDCMD,,int,2269   ! Get MF_ExpIter 
:C )/GO
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFITER
Inp_NoApply
Cmd_MFIT
 Fld_0
  Prm_[MFIT] Set Up  Stagger Iteration
 Fld_2
  Prm_ Maximum Stagger Iteration 
  Typ_Int
  Def_*PAR(_z2)
 Fld_3
  Prm_ Minimum Stagger Iteration 
  Typ_Int
  Def_*PAR(_z3)
 Fld_4
  Prm_ Target Stagger Iterations 
  Typ_Int
  Def_*PAR(_z4)
:E END
:! 
:N Fnc_MFS_Relax
:S    705,   370,   328
:T Command
:C )! Fnc_MFS_Relax
:C )/NOPR
:C )*del,_zc
:C )*dim,_zc,,6
:C )*DEL,_CLAB(1)
:C )*DIM,_CLAB,CHAR,6
:C )*SET,_CLAB(1),'DISP','FORC','TEMP','HFLU','HGEN','ALL'
:C )*DEL,_TC(1)
:C )*DIM,_TC,CHAR,2
:C )*SET,_TC(1),'RELX','LINT'
:C )/GO
:K (PREP7*SOLUTION*NOFILTER)
:A Relaxation
:D MFS Relaxation options
:H Hlp_C_MFRELAX
Inp_NoApply
Cmd_)*CSET,1,1
 Fld_0
  Typ_lab
  Prm_Multi-field Relaxation Options
 Fld_0
  Typ_lab
  Prm_
Cmd_)*SET,_zc(1)
 Fld_2
  Prm_[MFRE] Relaxation items
   Typ_MLIS
   LIS_ALL,0
   LIS_DISP,1
   LIS_FORC,2
   LIS_TEMP,3
   LIS_HFLU,4
   LIS_HGEN,5
   Def_1
Cmd_)/GO
Cal_Fnc_MFR_values,2,eq,0,2
Cal_Fnc_MFR_tables,2,gt,0,2
:E END
:! 
:N Fnc_MFS_SCCOrder
:S   1893,   928,   958
:T Command
:C )! Fnc_MFS_SCCOrder
:C )/NOPR
:C )*GET,_z1,common,,MFLDCMD,,int,1  ! Get nFieldElem
:C )keyw,field1,0
:C )keyw,field2,0
:C )keyw,field3,0
:C )keyw,field4,0
:C )keyw,field5,0
:C )keyw,field6,0
:C )keyw,field7,0
:C )keyw,field8,0
:C )keyw,field9,0
:C )keyw,field10,0
:C )*if,_z1,ge,1,then
:C )keyw,field1,1
:C )*endif
:C )*if,_z1,ge,2,then
:C )keyw,field2,1
:C )*endif
:C )*if,_z1,ge,3,then
:C )keyw,field3,1
:C )*endif
:C )*if,_z1,ge,4,then
:C )keyw,field4,1
:C )*endif
:C )*if,_z1,ge,5,then
:C )keyw,field5,1
:C )*endif
:C )*if,_z1,ge,6,then
:C )keyw,field6,1
:C )*endif
:C )*if,_z1,ge,7,then
:C )keyw,field7,1
:C )*endif
:C )*if,_z1,ge,8,then
:C )keyw,field8,1
:C )*endif
:C )*if,_z1,ge,9,then
:C )keyw,field9,1
:C )*endif
:C )*if,_z1,ge,10,then
:C )keyw,field10,1
:C )*endif
:C )/GO
:A Order
:D MFS Solution Order Options
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFORDER
Inp_NoApply
Cmd_MFOR
 Fld_0
  Typ_lab
  Prm_[MFOR]  Define Field Solution Order
 Fld_0
  Typ_lab
  Prm_Select Field Solution Order (First to Last)
 Fld_0
  Typ_Sep
 Fld_2
  K_FL(FIELD1)
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_3
  K_FL(FIELD2)
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_4
  K_FL(FIELD3)
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_5
  K_FL(FIELD4)
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_6
  K_FL(FIELD5)
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_7
  K_FL(FIELD6)
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_8
  K_FL(FIELD7)
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_9
  K_FL(FIELD8)
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_10
  K_FL(FIELD9)
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_11
  K_FL(FIELD10)
  Typ_Lis_OptionB
   Lis_*READ,MFEL
Cmd_)/NOPR
Cmd_)keyw,field1,0
Cmd_)keyw,field2,0
Cmd_)keyw,field3,0
Cmd_)keyw,field4,0
Cmd_)keyw,field5,0
Cmd_)keyw,field6,0
Cmd_)keyw,field7,0
Cmd_)keyw,field8,0
Cmd_)keyw,field9,0
Cmd_)keyw,field10,0
Cmd_)/GO
:E END
:! 
:N Fnc_MFS_SCCSetup
:S   1176,   412,   757
:T Command
:C )! Fnc_MFS_SCCSetup
:C )/NOPR
:C )*del,_z
:C )*dim,_z,,4
:C )*GET,_z2,common,,MFLDCMD,,real,22  ! Get Normal tolerance for MFSU
:C )*GET,_z8,common,,MFLDCMD,,int,2368  ! get normal distance type
:C )*IF,_z8,eq,1,then
:C )_valut = 'REL'
:C )*else
:C )_valut = 'ABS'
:C )*endif
:C )/GO
:A Global
:D MFS Setup
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_UI_MFsetup
Inp_NoApply
Cmd_)*SET,_z1
Fld_0
  Typ_lab
  Prm_Multi-field Solution Global Options
 Fld_0
  Typ_Sep
Cmd_MFIN
 Fld_2
  Prm_[MFIN]    Load transfer option 
  Typ_Lis_RadioB
   Lis_Profile Preserving,NONC
   Lis_Global Conservative,CONS
   Def_NONC
 Fld_0
  Typ_Sep
Cmd_MFBU
 Fld_2
  Prm_[MFBU]  Bucket search option
  Typ_Lis_RadioB
  Lis_ON,ON
  Lis_OFF,OFF
  Def_0
 Fld_3
  Prm_Scaling factor (in percent) 
  Typ_Int
  Def_50
 Fld_0
  Typ_Sep
Cmd_MFTO
 Fld_2
  Prm_[MFTO] Normal tolerance for MFSU
  Typ_Lis_RadioB
  Lis_OFF,OFF
  Lis_ON,ON
  Def_0
Fld_3 
  Prm_Tolerance for normal distance
  Typ_Real
  Def_*PAR(_z2)
Fld_4
  Prm_Normal distance type
   Typ_Lis_RadioB 	
   Lis_Relative,REL
   Lis_Absolute,ABS
   Def_*PAR(_valut)
 Fld_0
  Typ_lab
  Prm_
:E END
:! 
:N Fnc_MFS_Surf
:S    580,   164,   409
:T Command
:C )! Fnc_MFS_Surface
:K (PREP7*SOLUTION*NOFILTER)
:A Surface
:D MFS Surface transfer options
:H Hlp_C_MFSURFACE
Cmd_MFSU
 Fld_0
  Typ_lab
  Prm_        Multi-field Surface Interface Settings
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_[MFSU]  Set multi-field surface transfer data label
 Fld_2
  Prm_Interface number
  Typ_Int
  Def_Blank
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Prm_Transfer data label
   Typ_LIS_OptionB
   LIS_DISP,DISP
   LIS_TEMP,TEMP
   LIS_FORC,FORC
   LIS_HFLU,HFLU
   Def_DISP
 Fld_5
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_MFS_Surface
:S    616,   167,   442
:T Command
:C )! Fnc_MFS_Surface
:K (PREP7*SOLUTION*NOFILTER)
:A Surface
:D MFS Surface Transfer options
:H Hlp_C_MFSURFACE
Cmd_MFSU
 Fld_0
  Typ_lab
  Prm_[MFSU]  Set Multi-field Surface Transfer Options
 Fld_0
  Typ_lab
  Prm_
 Fld_4
  Prm_Transfer data label
   Typ_LIS_OptionB
   LIS_DISP,DISP
   LIS_FORC,FORC
   LIS_TEMP,TEMP
   LIS_HFLU,HFLU
   Def_DISP
 Fld_3
  Prm_From Field number
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_5
  Prm_To Field number
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_2
  Prm_Across Interface number
  Typ_Lis_OptionB
   Lis_*READ,MFSU
:E END
:! 
:N Fnc_MFS_Time
:S   1342,   760,   575
:T Command
:C )! Fnc_MFS_Time
:C )/NOPR
:C )*GET,_z1,common,,dofcom,,int,2274  ! Get time step carry over key
:C )*GET,_z2,common,,MFLDCMD,,real,17  ! Get End time
:C )*GET,_z3,common,,MFLDCMD,,real,18  ! Get Initial Time Increment
:C )*GET,_z4,common,,MFLDCMD,,real,152  ! Get Minimum Time Increment
:C )*GET,_z5,common,,MFLDCMD,,real,153  ! Get Maximum Time Increment
:C )*GET,_z6,common,,MFLDCMD,,real,154  ! Get Increment Factor
:C )*GET,_z7,common,,MFLDCMD,,real,20   ! Get restart time
:C )*GET,_z8,common,,MFLDCMD,,int,2367  ! get restart type 
:C )*IF,_z8,eq,1,then
:C )_rest = 'MULT'
:C )*else
:C )_rest = 'SING'
:C )*endif
:C )/GO
:A Time Ctrl
:D MFS Time Control
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_UI_MFtime
Inp_NoApply
Cmd_MFTI
 Fld_2
  Prm_[MFTI]   MFS End time
  Typ_Real
  Def_*PAR(_z2)
 Fld_0
  Typ_lab
  Prm_
 Fld_0
  Typ_SEP
Cmd_MFDT
 Fld_0
 Prm_[MFDT]   MFS Time step
 Fld_2
  Prm_   Initial Time step
  Typ_Real
  Def_*PAR(_z3)
 Fld_3
  Prm_   Minimum Time step
  Typ_Real
  Def_*PAR(_z4)
 Fld_4
  Prm_   Maximum Time step
  Typ_Real
  Def_*PAR(_z5)
 Fld_5
  Prm_   MFS Time step carry over key   
  Typ_Lis_RadioB
  Lis_OFF,0
  Lis_ON,1
  Def_*PAR(_z1)
 Fld_0
  Typ_SEP
Cmd_MFRS
 Fld_0
 Prm_[MFRS]   MFS Restart step
 Fld_2
  Prm_   Restart time
  Typ_Real
  Def_*PAR(_z7)
:E END
:! 
:N Fnc_MFS_Vol
:S    570,   156,   407
:T Command
:C )! Fnc_MFS_Vol
:K (PREP7*SOLUTION*NOFILTER)
:A Volume
:D MFS Volume transfer options
:H Hlp_C_MFVOLUME
Cmd_MFVO
 Fld_0
  Typ_lab
  Prm_        Multi-field Volume Interface Settings
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_[MFVO]  Set multi-field volume transfer data label
 Fld_2
  Prm_Interface number
  Typ_Int
  Def_Blank
 Fld_3
  Typ_Def_*PAR(_z1)
 Fld_4
  Prm_Transfer data label
   Typ_LIS_OptionB
   LIS_DISP,DISP
   LIS_TEMP,TEMP
   LIS_FORC,FORC
   LIS_HGEN,HGEN
   Def_DISP
 Fld_5
  Typ_Def_*PAR(_z2)
:E END
:! 
:N Fnc_MFS_Volume
:S    614,   162,   445
:T Command
:C )! Fnc_MFS_Volume
:K (PREP7*SOLUTION*NOFILTER)
:A Volume
:D MFS Volume Transfer options
:H Hlp_C_MFVOLUME
Cmd_MFVO
 Fld_0
  Typ_lab
  Prm_[MFVO]  Set Multi-field Volume Transfer Options
 Fld_0
  Typ_lab
  Prm_
 Fld_4
  Prm_Transfer variable Label
   Typ_LIS_OptionB
   LIS_DISP,DISP
   LIS_FORC,FORC
   LIS_TEMP,TEMP
   LIS_HGEN,HGEN
   Def_DISP
 Fld_3
  Prm_From Field number
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_5
  Prm_To Field number
  Typ_Lis_OptionB
   Lis_*READ,MFEL
 Fld_2
  Prm_Across interface number
  Typ_Lis_OptionB
   Lis_*READ,MFVO
:E END
:! 
:N Fnc_MFS_tables
:S   1673,   356,  1310
:T Command
:C )! Fnc_MFS_tables
:C )/NOPR
:C )KEYW,key1,0,key2,0,key3,0
:C )KEYW,key4,0,key5,0,key6,0
:C )KEYW,key7,0,key8,0,key9,0
:C )*DO,_z1,1,9,1
:C )*IF,_zc(_z1),NE,0,THEN
:C )KEYW,KEY%_z1%,1
:C )*ELSE
:C )KEYW,KEY%_z1%,0
:C )*ENDIF
:C )*ENDDO
:C )/GO
:A Convergence
:D Set Convergence values
:H Hlp_C_MFCONV
Inp_NoApply
Cmd_MFCO
 Fld_0
  Typ_lab
  Prm_[MFCO]  Set Multi-field Convergence Values
 Fld_0
  Typ_lab
  Prm_
K_CM(KEY1)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(1)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(1))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(1))
Cmd_MFCO
K_CM(KEY2)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(2)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(2))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(2))
Cmd_MFCO
K_CM(KEY3)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(3)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(3))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(3))
Cmd_MFCO
K_CM(KEY4)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(4)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(4))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(4))
Cmd_MFCO
K_CM(KEY5)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(5)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(5))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(5))
Cmd_MFCO
K_CM(KEY6)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(6)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(6))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(6))
Cmd_MFCO
K_CM(KEY7)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(7)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(7))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(7))
Cmd_MFCO
K_CM(KEY8)
 Fld_2
 Typ_Def_*PAR(_CLAB(_zc(8)))
 Fld_3
  Typ_Real
  Prm_    For item %_CLAB(_zc(8))% 
  Def_*GET(common,,MFLDCMD,,real,_zc(8))
:E END
:! 
:N Fnc_MFS_values
:S    317,   168,   142
:T Command
:C )! Fnc_MFS_values
:C )/NOPR
:C )_item = 'ALL '
:C )/GO
:A Convergence
:D Set Convergence values
:H Hlp_C_MFCONV
Inp_NoApply
Cmd_MFCO
 Fld_2
 Typ_Def_*PAR(_item)
 Fld_3
  Typ_Real
  Prm_Convergence values for ALL items
  Def_*GET(common,,MFLDCMD,,real,1)
:E END
:! 
:N Fnc_MFX_AA
:S    377,   138,   232
:T Command
:C )! Fnc_MFX_AA
:A Global
:D MFS Setup
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFANALYSIS
Inp_P
Fld_0
  Typ_lab
  Prm_Multi-field Solution Global Options
 Fld_0
  Typ_Sep
Cmd_MFAN
 Fld_2
  Prm_[MFAN]    MF/MFX Activation key 
  Typ_Def_ON
 Fld_3
  Typ_Def_MFAA
Cmd_)KEYW,MFAA,1
Cmd_)KEYW,MFAX,0
Cmd_)KEYW,MF,0
Cal_REFRESH
:E END
:! 
:N Fnc_MFX_AA_LoadComm
:S   2298,   382,  1909
:T Command
:C )! Fnc_MFX_AA_LoadComm
:K (PREP7*SOLUTION*NOFILTER)
:C )/NOPR
:C )*GET,_z1,common,,MFLDCMD,,int,2268  ! Get nFieldMFPS
:C )keyw,field1,0
:C )keyw,field2,0
:C )*if,_z1,ge,1,then
:C )keyw,field1,1
:C )*endif
:C )*if,_z1,ge,2,then
:C )keyw,field2,1
:C )*endif
:C )/GO
:A Load Transfer 
:D MFX Load Transfer
:H Hlp_C_MFLCOMM
Cmd_MFLC
 Fld_0
  Typ_lab
  Prm_[MFLC]  Set Load Communication
 Fld_0
  Typ_Sep
 Fld_2
  Typ_lab	
  Prm_Setup load type:
  Typ_Lis_RadioB
   Lis_Surface,SURF
!  Lis_Volume,VOLU
   Def_SURF
 Fld_0
 Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup send field:
 Fld_3
  Prm_Field name
!  Typ_Char
!  Def_
  K_FL(FIELD1)
  Typ_Lis_OptionB
  Lis_*READ,MFFN
 Fld_4
  Prm_Interface number
  Typ_Char
  Def_
 Fld_0
  Typ_lab
  Prm_Note: Specify field number for ANSYS and field name for CFX.
!  Typ_Lis_OptionB
!   Lis_*READ,MFFC
 Fld_5
  Prm_Transfer data label
   Typ_LIS
   LIS_DISP,DISP
   LIS_FORC,FORC
   LIS_TEMP,TEMP
   LIS_HFLU,HFLU
!   LIS_Mesh Displacement,'Mesh Displacement'
!   LIS_Total Force,'Total Force'
!   LIS_Total Force Density,'Total Force Density'
!   LIS_Temperature,Temperature
!   LIS_Wall Heat Flux,'Wall Heat Flux'
!   LIS_Wall Heat Flow,'Wall Heat Flow'
   Def_
 Fld_0
  Typ_LAB
  Prm_Note: Single quotes are required for any user label with spaces.
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup receive field:
 Fld_6
  Prm_Field name
!  Typ_Char
!  Def_
  K_FL(FIELD2)
  Typ_Lis_OptionB
  Lis_*READ,MFFN
 Fld_7
  Prm_Interface number
  Typ_Char
  Def_
 Fld_0
  Typ_lab
  Prm_Note: Specify field number for ANSYS and field name for CFX.
!  Typ_Lis_OptionB
!   Lis_*READ,MFFC
 Fld_8
  Prm_Transfer data label
   Typ_LIS
   LIS_DISP,DISP
   LIS_FORC,FORC
   LIS_TEMP,TEMP
   LIS_HFLU,HFLU
!   LIS_Mesh Displacement,'Mesh Displacement'
!   LIS_Total Force,'Total Force'
!   LIS_Total Force Density,'Total Force Density'
!   LIS_Temperature,Temperature
!   LIS_Wall Heat Flux,'Wall Heat Flux'
!   LIS_Wall Heat Flow,'Wall Heat Flow'
   Def_
 Fld_0
  Typ_LAB
  Prm_Note: Single quotes are required for any user label with spaces.
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup option key:
 Fld_9
  Prm_Interpolation Type
  Typ_Lis_RadioB
   Lis_Profile Preserving,NONC
   Lis_Conservative,CPP
   Def_NONC
:E END
:! 
:N Fnc_MFX_AC_ARECV
:S    819,   181,   631
:T Command
:C )! Fnc_MFX_AC_ARECV
:K (PREP7*SOLUTION*NOFILTER)
:C )/NOPR
:C )/GO
:A Load Transfer 
:D MFX Load Transfer
:H Hlp_C_MFLCOMM
Inp_P
Cmd_MFLC
 Fld_0
  Typ_lab
  Prm_[MFLC]  Set Load Communication
 Fld_2
  Typ_lab	
  Prm_Setup load type:
   Typ_Def_SURF
 Fld_0
 Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup send field:
 Fld_3
  Prm_Field name
  Typ_Def_CFX
 Fld_4
  Prm_Interface number
  Typ_Def_*CPAR(2)
 Fld_5
  Dlm_'
 Fld_6
  Prm_Transfer data label
   Typ_Def_*CPAR(6)
  Dlm_'
 Fld_7
  Dlm_,
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup receive field:
 Fld_8
  Typ_Def_ANSYS
 Fld_9
  Prm_Interface name
  Typ_Def_*CPAR(1)
 Fld_10
  Prm_Transfer data label
   Typ_Def_*CPAR(5)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup option key:
 Fld_11
  Typ_Def_*CPAR(7)
:E END
:! 
:N Fnc_MFX_AC_ASEND
:S    819,   181,   631
:T Command
:C )! Fnc_MFX_AC_ASEND
:K (PREP7*SOLUTION*NOFILTER)
:C )/NOPR
:C )/GO
:A Load Transfer 
:D MFX Load Transfer
:H Hlp_C_MFLCOMM
Inp_P
Cmd_MFLC
 Fld_0
  Typ_lab
  Prm_[MFLC]  Set Load Communication
 Fld_2
  Typ_lab	
  Prm_Setup load type:
   Typ_Def_SURF
 Fld_0
 Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup send field:
 Fld_3
  Prm_Field name
  Typ_Def_ANSYS
 Fld_4
  Prm_Interface number
  Typ_Def_*CPAR(1)
 Fld_5
  Prm_Transfer data label
   Typ_Def_*CPAR(5)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup receive field:
 Fld_6
  Typ_Def_CFX
 Fld_7
  Prm_Interface name
  Typ_Def_*CPAR(2)
 Fld_8
  Dlm_'
 Fld_9
  Prm_Transfer data label
   Typ_Def_*CPAR(6)
  Dlm_'
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup option key:
 Fld_10
  Dlm_,
 Fld_11
  Typ_Def_*CPAR(7)
:E END
:! 
:N Fnc_MFX_AC_CUST
:S   1167,   179,   981
:T Command
:C )! Fnc_MFX_AC_CUST
:K (PREP7*SOLUTION*NOFILTER)
:C )/NOPR
:C )/GO
:A Load Transfer 
:D MFX Load Transfer
:H Hlp_C_MFLCOMM
Cmd_)*CSET,4,7
 Fld_0
  Typ_lab
  Prm_[MFLC]  Set Load Communication
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_ANSYS field:
 Fld_2
  Prm_ANSYS Send/receive?
    Typ_LIS_OptionB
    LIS_Send Load,SEND
    LIS_Receive Load,RECV
 Fld_3
  Prm_Transfer data label
   Typ_LIS
   LIS_DISP,DISP
   LIS_FORC,FORC
   LIS_TEMP,TEMP
   LIS_HFLU,HFLU
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_CFX field:
 Fld_4
  Prm_Transfer data label
   Typ_LIS
   LIS_Total Mesh Displacement,'Total Mesh Displacement'
   LIS_Total Force,'Total Force'
   LIS_Total Force Density,'Total Force Density'
   LIS_Temperature,Temperature
   LIS_Wall Heat Flux,'Wall Heat Flux'
   LIS_Wall Heat Flow,'Wall Heat Flow'
   Def_
 Fld_0
  Typ_LAB
  Prm_Note: Single quotes are required for any user label with spaces.
 Fld_0
  Typ_Sep
 Fld_5
 Prm_Interpolation Type
  Typ_Lis_RadioB
   Lis_Profile Preserving,NONC
   Lis_Conservative,CPP
   Def_CPP
Cmd_)/GO
Cal_Fnc_MFX_AC_ASEND,2,es,SEND,1
Cal_Fnc_MFX_AC_ARECV,2,es,RECV,1
:E END
:! 
:N Fnc_MFX_AC_LoadComm
:S    781,   206,   568
:T Command
:C )! Fnc_MFX_AC_LoadComm
:K (PREP7*SOLUTION*NOFILTER)
:C )/NOPR
:C )*SET,Default,1
:C )/GO
:A Load Transfer 
:D MFX Load Transfer
:H Hlp_C_MFLCOMM
 Fld_0
  Typ_lab
  Prm_[MFLC]  Set Load Communication
 Fld_0
  Typ_Sep
Cmd_)*CSET,1,3
 Fld_2
  Typ_lab	
  Prm_ANSYS Interface number
  Typ_Lis_OptionB
   Lis_*READ,MFSU
 Fld_0
 Typ_Sep
 Fld_3
  Prm_CFX Region name
   Typ_Char
   Def_*Str((Default))
 Fld_0
  Typ_LAB
  Prm_Note: Single quotes are required for any user label with spaces.
 Fld_0
  Typ_Sep
 Fld_4
  Prm_Select load type
  Typ_Lis_RadioB
   Lis_Mechanical,MECH
   Lis_Thermal,THER
   Lis_Custom,CUST
Cmd_)/GO
Cal_Fnc_MFX_AC_Mech,4,es,MECH,1
Cal_Fnc_MFX_AC_Ther,4,es,THER,1
Cal_Fnc_MFX_AC_CUST,4,es,CUST,1
:E END
:! 
:N Fnc_MFX_AC_Mech
:S   1394,   179,  1208
:T Command
:C )! Fnc_MFX_AC_Mech
:K (PREP7*SOLUTION*NOFILTER)
:C )/NOPR
:C )/GO
:A Load Transfer 
:D MFX Load Transfer
:H Hlp_C_MFLCOMM
Inp_P
Cmd_MFLC
 Fld_0
  Typ_lab
  Prm_[MFLC]  Set Load Communication
 Fld_2
  Typ_lab	
  Prm_Setup load type:
   Typ_Def_SURF
 Fld_0
 Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup send field:
 Fld_3
  Prm_Field name
  Typ_Def_ANSYS
 Fld_4
  Prm_Interface name/number
  Typ_Def_*CPAR(1)
 Fld_5
  Prm_Transfer data label
   Typ_Def_DISP
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup receive field:
 Fld_6
  Typ_Def_CFX
 Fld_7
  Prm_Interface name
  Typ_Def_*CPAR(2)
 Fld_8
  Prm_Transfer data label
   Typ_Def_'Total Mesh Displacement'
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup option key:
 Fld_9
  Typ_Def_NONC
 Fld_0
  Typ_Sep
Cmd_MFLC
 Fld_0
  Typ_lab
  Prm_[MFLC]  Set Load Communication
 Fld_2
  Typ_lab	
  Prm_Setup load type:
   Typ_Def_SURF
 Fld_0
 Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup send field:
 Fld_3
  Prm_Field name
  Typ_Def_CFX
 Fld_4
  Prm_Interface name/number
  Typ_Def_*CPAR(2)
 Fld_5
  Prm_Transfer data label
   Typ_Def_'Total Force'
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup receive field:
 Fld_6
  Typ_Def_ANSYS
 Fld_7
  Prm_Interface name
  Typ_Def_*CPAR(1)
 Fld_8
  Prm_Transfer data label
   Typ_Def_FORC
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup option key:
 Fld_9
  Typ_Def_CPP
:E END
:! 
:N Fnc_MFX_AC_Solu
:S    672,   299,   366
:T Command
:C )! Fnc_MFX_AC_Solu
:A Solution Ctrl
:D MFX Solution Control
:C )/NOPR
:C )*GET,_z1,common,,MFLDCMD,,real,10  ! Relaxation factor
:C )*GET,_z2,common,,MFLDCMD,,real,20  ! Get restart time
:C )/GO
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_UI_MFXSolu
Inp_NoApply
 Fld_0
  Typ_Lab
 Prm_ Setup solution method for ANSYS/CFX code coupling
Cmd_)*CSET,1,2
 Fld_2
  Prm_ Select method
  Typ_Lis_RadioB
   Lis_Sequential ,SEQ
   Lis_Simultaneous,SIMUL
Cmd_)/GO
Cal_Fnc_SEQ_Sequen,2,es,SEQ,1
Cal_Fnc_SEQ_Simul,2,eq,SIMUL,1
 Fld_0
  Typ_Sep
Cmd_)*SET,_z1
 Fld_2
  Prm_[MFRE,ALL] Global Relax Factor
  Typ_Real
  Def_*PAR(_z1)
:E END
:! 
:N Fnc_MFX_AC_Ther
:S   1383,   179,  1197
:T Command
:C )! Fnc_MFX_AC_Ther
:K (PREP7*SOLUTION*NOFILTER)
:C )/NOPR
:C )/GO
:A Load Transfer 
:D MFX Load Transfer
:H Hlp_C_MFLCOMM
Inp_P
Cmd_MFLC
 Fld_0
  Typ_lab
  Prm_[MFLC]  Set Load Communication
 Fld_2
  Typ_lab	
  Prm_Setup load type:
   Typ_Def_SURF
 Fld_0
 Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup send field:
 Fld_3
  Prm_Field name
  Typ_Def_ANSYS
 Fld_4
  Prm_Interface name/number
  Typ_Def_*CPAR(1)
 Fld_5
  Prm_Transfer data label
   Typ_Def_TEMP
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup receive field:
 Fld_6
  Typ_Def_CFX
 Fld_7
  Prm_Interface name
  Typ_Def_*CPAR(2)
 Fld_8
  Prm_Transfer data label
   Typ_Def_Temperature
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup option key:
 Fld_9
  Typ_Def_NONC
 Fld_0
  Typ_Sep
Cmd_MFLC
 Fld_0
  Typ_lab
  Prm_[MFLC]  Set Load Communication
 Fld_2
  Typ_lab	
  Prm_Setup load type:
   Typ_Def_SURF
 Fld_0
 Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup send field:
 Fld_3
  Prm_Field name
  Typ_Def_CFX
 Fld_4
  Prm_Interface name/number
  Typ_Def_*CPAR(2)
 Fld_5
  Prm_Transfer data label
   Typ_Def_'Wall Heat Flow'
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup receive field:
 Fld_6
  Typ_Def_ANSYS
 Fld_7
  Prm_Interface name
  Typ_Def_*CPAR(1)
 Fld_8
  Prm_Transfer data label
   Typ_Def_HFLU
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Setup option key:
 Fld_9
  Typ_Def_CPP
:E END
:! 
:N Fnc_MFX_AX
:S    377,   138,   232
:T Command
:C )! Fnc_MFX_AX
:A Global
:D MFS Setup
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFANALYSIS
Inp_P
Fld_0
  Typ_lab
  Prm_Multi-field Solution Global Options
 Fld_0
  Typ_Sep
Cmd_MFAN
 Fld_2
  Prm_[MFAN]    MF/MFX Activation key 
  Typ_Def_ON
 Fld_3
  Typ_Def_MFAX
Cmd_)KEYW,MF,0
Cmd_)KEYW,MFAA,0
Cmd_)KEYW,MFAX,1
Cal_REFRESH
:E END
:! 
:N Fnc_MFX_Clear
:S    246,   140,    98
:T Command
:C )! Fnc_MFX_Clear
:A Clear
:D MFX Clear
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFCLEAR
Inp_NoApply
 Fld_0
  Typ_lab
  Prm_[MFCL] Clear All Load Transfer
Cmd_MFCL
 Fld_2
   Typ_Def_MFLC
:E END 
:! 
:N Fnc_MFX_MapSetup
:S   1428,   571,   850
:T Command
:C )! Fnc_MFS_MCCSetup
:C )/NOPR
:C )*del,_z
:C )*dim,_z,,4
:C )*GET,_z2,common,,MFLDCMD,,real,22   ! Get Normal tolerance for MFLC
:C )*GET,_z3,common,,MFLDCMD,,int,2366  ! Get pixel resolution for MFLC
:C )*GET,_z4,common,,MFLDCMD,,real,236  ! Get separation factor for MFLC
:C )*GET,_z8,common,,MFLDCMD,,int,2368  ! get normal distance type
:C )*IF,_z8,eq,1,then
:C )_valut = 'REL'
:C )*else
:C )_valut = 'ABS'
:C )*endif
:C )/GO
:A Mapping
:D MFX Mapping operations
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_UI_MFXmap
Inp_NoApply
Cmd_MFBU
 Fld_0
  Typ_lab
  Prm_Options for Profile Preserving and Globally Conservative Interpolations
 Fld_0
  Typ_lab
  Prm_
 Fld_2
  Prm_[MFBU] Bucket search option
  Typ_Lis_RadioB
  Lis_ON,ON
  Def_0
 Fld_3
  Prm_Scaling factor (in percent) 
  Typ_Int
  Def_50
 Fld_0
  Typ_Lab
  Prm_
Cmd_MFTO
 Fld_2
  Prm_[MFTO] Normal tolerance for MFLC
  Typ_Lis_RadioB
  Lis_OFF,OFF
  Lis_ON,ON
  Def_0
Fld_3 
  Prm_Tolerance for normal distance
  Typ_Real
  Def_*PAR(_z2)
Fld_4
  Prm_Normal distance type
   Typ_Lis_RadioB 	
   Lis_Relative,REL
   Lis_Absolute,ABS
   Def_*PAR(_valut)
 Fld_0
  Typ_lab
  Prm_
Cmd_MFCI
 Fld_0
  Typ_Sep
 Fld_0
  Typ_lab
  Prm_Options for Conservative Interpolation
 Fld_0
  Typ_lab
  Prm_
 Fld_2
  Prm_[MFCI] Pixel resolution
  Typ_Int
  Def_100
 Fld_3
  Prm_       Separation factor
  Typ_Real
  Def_*PAR(_z4)
:E END
:! 
:N Fnc_MFX_MaxIter
:S    627,   353,   267
:T Command
:C )! Fnc_MFX_MaxIter
:A Iterations
:D MFX Stagger Iteration
:C )/NOPR
:C )*GET,_z2,common,,MFLDCMD,,int,3      ! Get MF_MaxIter
:C )*GET,_z3,common,,MFLDCMD,,int,1734   ! Get MF_MinIter
:C )*GET,_z4,common,,MFLDCMD,,int,2269   ! Get MF_ExpIter 
:C )/GO
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFITER
Inp_NoApply
Cmd_MFIT
 Fld_0
  Prm_[MFIT] Set Up  Stagger Iteration
 Fld_2
  Prm_ Maximum Stagger Iteration 
  Typ_Int
  Def_*PAR(_z2)
 Fld_3
  Prm_ Minimum Stagger Iteration 
  Typ_Int
  Def_*PAR(_z3)
 Fld_4
  Prm_ Target Stagger Iteration 
  Typ_Int
  Def_*PAR(_z4)
:E END
:! 
:N Fnc_MFX_Single
:S    385,   146,   232
:T Command
:C )! Fnc_MFX_Single
:A Global
:D MFS Setup
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFANALYSIS
Inp_P
Fld_0
  Typ_lab
  Prm_Multi-field Solution Global Options
 Fld_0
  Typ_Sep
Cmd_MFAN
 Fld_2
  Prm_[MFAN]    MF/MFX Activation key 
  Typ_Def_ON
 Fld_3
  Typ_Def_MFSC
Cmd_)KEYW,MFAX,0
Cmd_)KEYW,MFAA,0
Cmd_)KEYW,MF,1
Cal_REFRESH
:E END
:! 
:N Fnc_MFX_Time
:S   1435,   761,   667
:T Command
:C )! Fnc_MFX_Time
:C )/NOPR
:C )*GET,_z1,common,,dofcom,,int,2274  ! Get time step carry over key
:C )*GET,_z2,common,,MFLDCMD,,real,17  ! Get End time
:C )*GET,_z3,common,,MFLDCMD,,real,18  ! Get Initial Time Increment
:C )*GET,_z4,common,,MFLDCMD,,real,152  ! Get Minimum Time Increment
:C )*GET,_z5,common,,MFLDCMD,,real,153  ! Get Maximum Time Increment
:C )*GET,_z6,common,,MFLDCMD,,real,154  ! Get Increment Factor
:C )*GET,_z7,common,,MFLDCMD,,real,20  ! Get restart time
:C )*GET,_z8,common,,MFLDCMD,,int,2367  ! get restart type 
:C )*IF,_z8,eq,1,then
:C )_rest = 'MULT'
:C )*else
:C )_rest = 'SING'
:C )*endif
:C )/GO
:A Time Ctrl
:D MFX Time Control
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_UI_MFXTCtrl
Inp_NoApply
Cmd_MFTI
 Fld_2
  Prm_[MFTI]   MFX End time
  Typ_Real
  Def_*PAR(_z2)
 Fld_0
  Typ_SEP
Cmd_MFDT
 Fld_0
 Prm_[MFDT]   MFX Time step
 Fld_2
  Prm_   Initial Time step
  Typ_Real
  Def_*PAR(_z3)
 Fld_3
  Prm_   Minimum Time step
  Typ_Real
  Def_*PAR(_z4)
 Fld_4
  Prm_   Maximum Time step
  Typ_Real
  Def_*PAR(_z5)
 Fld_5
  Prm_   MFS Time step carry over key   
  Typ_Lis_RadioB
  Lis_OFF,0
  Lis_ON,1
  Def_*PAR(_z1)
 Fld_0
  Typ_SEP
Cmd_MFRS
  Fld_0
  Prm_[MFRS]   MFX Restart step
 Fld_2
  Prm_   Restart time
  Typ_Real
  Def_*PAR(_z7)
 Fld_3
   Prm_   Restart type
   Typ_Lis_RadioB
   Lis_Singleframe,SING
   Lis_Multiframe,MULT
   Def_*PAR(_rest)
:E END
:! 
:N Fnc_MFX_Write
:S    372,   180,   185
:T Command
:C )! Fnc_MFX_Write
:C )/NOPR
:C )*get,_jobname,active,,jobnam
:C )/GO
:A    Write input
:D    MFX Write input
:H Hlp_C_MFWRITE
Cmd_MFWR
 Fld_0
  Typ_Lab
  Prm_[MFWR]  Write MFX input file
 Fld_2
  Prm_Fname  Input file name
  Typ_Char
  Def_*Par(_jobname)
 Fld_3
  Prm_Fext   File extension
  Typ_Char
  Def_dat
:E END
:! 
:N Fnc_MF_ON
:S    830,   604,   219
:T  Command
:C )! Fnc_MF_ON
:K (PREP7*SOLUTION*NOFILTER)
:C )/NOPR
:C )*GET,_z1,common,,dofcom,,int,82   ! get fieldflag for MFAN command
:C )*GET,_z2,common,,MFLDCMD,,int,2273 ! 
:C )keyw,KEY,0
:C )*if,_z1,eq,1,then !{
:C )*if,_z2,eq,0,then!{
:C )keyw,KEY,1
:C )*endif  !}
:C )*endif !}
:C )*if,_z1,eq,1,then !{
:C )*if,_z2,eq,1,then!{
:C )keyw,KEY,2
:C )*endif  !}
:C )*endif !}
:C )*if,_z1,eq,1,then !{
:C )*if,_z2,eq,2,then!{
:C )keyw,KEY,3
:C )*endif  !}
:C )*endif !}
:C )/GO
:A Select method
:D Select Multi-field method
:P (FULL_ANS&LINPLUS&THERMAL&MULTDISC)
Inp_NoApply
Fld_0
  Typ_lab
  Prm_
Cmd_)*SET,KEY
 Fld_2
  Prm_Select MF method
  Typ_Lis_RadioB
  Lis_MFS-Single Code,1
  Lis_MFX-ANSYS/CFX,2
  Def_*PAR(KEY)
Cmd_)/GO
Cal_Fnc_MFX_Single,2,eq,1,1
Cal_Fnc_MFX_AX,2,eq,2,1
:E END
:! 
:N Fnc_MF_Off
:S    372,   138,   227
:T Command
:C )! Fnc_MF_Off
:A Global
:D MFS Setup
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MFANALYSIS
Inp_P
Fld_0
  Typ_lab
  Prm_Multi-field Solution Global Options
 Fld_0
  Typ_Sep
Cmd_MFAN
 Fld_2
  Prm_[MFAN]    MF/MFX Activation key 
  Typ_Def_OFF
Cmd_)KEYW,MFS,0
Cmd_)KEYW,MFAA,0
Cmd_)KEYW,MFAX,0
Cmd_)KEYW,MF,0
Cal_REFRESH
:E END
:! 
:N Fnc_MGEN
:S    312,   174,   131
:T Cmd_P
:C )! Fnc_MGEN
:C )! Nodes for MGEN command below
:A    Copy
:D Copy Master DOFs
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_MGEN
Inp_P
Cmd_)!
 Fld_4
  Prm_[MGEN]  Pick or enter master nodes to be copied
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_MGEN2
:E END
:! 
:N Fnc_MGEN2
:S    371,   121,   243
:T Cmd_P
:C )! Fnc_MGEN2
:D Copy Master DOFs
:B Fnc_MGEN
:P (LINPLUS)
:H Hlp_C_MGEN
Cmd_MGEN
 Fld_0
  Typ_Lab
  Prm_[MGEN]  Copy User-Selected Master DOFs
 Fld_2
  Prm_ITIME  Number of copies -
  Typ_INT
  Def_2
 Fld_0
  Prm_       - including original
 Fld_3
  Prm_INC    Node number increment
  Typ_INT
 Fld_4
  Typ_Def_P51X
:E END
:! 
:N Fnc_MLIST
:S    255,   143,   105
:T Cmd_P
:C )! Fnc_MLIST
:A    List Picked
:D List Master DOF at Picked Nodes
:H Hlp_C_MLIST
:P (LINPLUS)
Inp_P
Cmd_MLIST
Fld_2
Typ_NODE
Prm_[MLIST]  Pick or enter nodes for master DOF listing
Min_1
Cnt_s
Pcn_1
:E End
:! 
:N Fnc_MLIST_all
:S    177,   150,    20
:T Cmd_N
:C )! Fnc_MLIST_all
:A    List All
:D List All User-Selected Master DOF
:P (LINPLUS)
:H Hlp_C_MLIST
Inp_P
Cmd_MLIST,ALL
:E END
:! 
:N Fnc_MMF
:S    318,   153,   158
:T Command
:C )! Fnc_MMF
:A    MMF
:D Calculate MMF
:K #((POST1+RESULTS+MAGNETIC)*NOFILTER)
:P (ELECMAG)
:H Hlp_C_MMF
Inp_NoApply
Cmd_MMF
 Fld_0
  Typ_Lab
  Prm_[MMF]   This function calculates magnetomotive force (mmf)
 Fld_0
  Typ_Lab
  Prm_        along a predefined path.
:E END
:! 
:N Fnc_MODCOM_CQC
:S    496,   127,   362
:T Cmd
:C )! Fnc_MODCOM_CQC
:A CQC Method
:D CQC Mode Combination
:H Hlp_UI_modcomsp
Inp_NoApply
Cmd_CQC
 Fld_2
  Prm_SIGNIF Significant threshold
  Typ_REAL
  Def_*GET(common,,soptcm,,real,6)
 Fld_3
  Prm_LABEL  Type of output
  Typ_Lis_OptionB
  Lis_Displacement    ,DISP
  Lis_Velocity        ,VELO
  Lis_Acceleration    ,ACEL
 Fld_5
  Prm_FORCETYPE  Forces combined
  Typ_Lis_OptionB
  Lis_Modal static    ,STATIC
  Lis_Total           ,TOTAL
:E END
:! 
:N Fnc_MODCOM_DSUM
:S    554,   131,   416
:T Cmd
:C )! Fnc_MODCOM_DSUM
:A DSUM Method
:D DSUM Mode Combination
:H Hlp_UI_modcomsp
Inp_NoApply
Cmd_DSUM
 Fld_2
  Prm_SIGNIF Significant threshold
  Typ_REAL
  Def_*GET(common,,soptcm,,real,6)
 Fld_3
  Prm_LABEL  Type of output
  Typ_Lis_OptionB
  Lis_Displacement    ,DISP
  Lis_Velocity        ,VELO
  Lis_Acceleration    ,ACEL
 Fld_4
  Prm_TD  Time Duration
  Typ_REAL
  Def_10.0
 Fld_5
  Prm_FORCETYPE  Forces combined
  Typ_Lis_OptionB
  Lis_Modal static    ,STATIC
  Lis_Total           ,TOTAL
:E END
:! 
:N Fnc_MODCOM_GRP
:S    496,   127,   362
:T Cmd
:C )! Fnc_MODCOM_GRP
:A GRP Method
:D GRP Mode Combination
:H Hlp_UI_modcomsp
Inp_NoApply
Cmd_GRP
 Fld_2
  Prm_SIGNIF Significant threshold
  Typ_REAL
  Def_*GET(common,,soptcm,,real,6)
 Fld_3
  Prm_LABEL  Type of output
  Typ_Lis_OptionB
  Lis_Displacement    ,DISP
  Lis_Velocity        ,VELO
  Lis_Acceleration    ,ACEL
 Fld_5
  Prm_FORCETYPE  Forces combined
  Typ_Lis_OptionB
  Lis_Modal static    ,STATIC
  Lis_Total           ,TOTAL
:E END
:! 
:N Fnc_MODCOM_NRLSM
:S    620,   137,   476
:T Cmd
:C )! Fnc_MODCOM_NRLSM
:A NRLSUM Method
:D NRLSUM Mode Combination
:H Hlp_UI_modcomsp
Inp_NoApply
Cmd_NRLSUM
 Fld_2
  Prm_SIGNIF Significant threshold
  Typ_REAL
  Def_*GET(common,,soptcm,,real,6)
 Fld_3
  Prm_LABEL  Type of output
  Typ_Lis_OptionB
  Lis_Displacement    ,DISP
  Lis_Velocity        ,VELO
  Lis_Acceleration    ,ACEL
 Fld_4
 K_FL(DDAM)
  Prm_CSM method
  Typ_Lis_OptionB
  Lis_Do not use      ,"    "
  Lis_Use             ,CSM
 Fld_5
  Prm_FORCETYPE  Forces combined
  Typ_Lis_OptionB
  Lis_Modal static    ,STATIC
  Lis_Total           ,TOTAL
:E END
:! 
:N Fnc_MODCOM_SRSS
:S    627,   131,   489
:T Cmd
:C )! Fnc_MODCOM_SRSS
:A SRSS Method
:D SRSS Mode Combination
:H Hlp_UI_modcomsp
Inp_NoApply
Cmd_SRSS
 Fld_2
  Prm_SIGNIF Significant threshold
  Typ_REAL
  Def_*GET(common,,soptcm,,real,6)
 Fld_3
  Prm_LABEL  Type of output
  Typ_Lis_OptionB
  Lis_Displacement    ,DISP
  Lis_Velocity        ,VELO
  Lis_Acceleration    ,ACEL
 Fld_4
 K_FL(MULTIPNT)
  Prm_AbsSumKey method
  Typ_Lis_OptionB
  Lis_No              ,NO
  Lis_Yes             ,YES
  Def_NO
 Fld_5
  Prm_FORCETYPE  Forces combined
  Typ_Lis_OptionB
  Lis_Modal static    ,STATIC
  Lis_Total           ,TOTAL
:E END
:! 
:N Fnc_MODCOM_psd
:S    436,   174,   255
:T Cmd
:C )! Fnc_MODCOM_psd
:A    Mode Combine
:D PSD Combination Method
:K #((PREP7*SOLUTION)+(PSDRANDM*NOFILTER))
:H Hlp_C_PSDCOM
Inp_NoApply
Cmd_PSDCOM
 Fld_0
  Prm_[PSDCOM] Combination Method
 Fld_2
  Prm_SIGNIF Significant threshold
  Typ_REAL
  Def_*GET(common,,soptcm,,real,15)
 Fld_3
  Prm_COMODE  Combined mode
  Typ_REAL
  Def_*GET(common,,soptcm,,int,63)
! Exclude_from_paths
:E END
:! 
:N Fnc_MODCYC_0
:S    355,   181,   167
:T Command
:C )! Fnc_MODCYC_0
:A Create 2nd Sectr
:D Create 2nd Sector from Basic Sector (Phase 1)
:K #(PREP7)
:P (FULL_ANS)
:H Hlp_C_MODCYC
Inp_NoApply
Cmd_MODCYC
 Fld_0
  Typ_Lab
  Prm_[MODCYC]  This function creates a second sector overlaid
 Fld_0
  Typ_Lab
  Prm_          on the basic sector (Phase 1).
:E END
:! 
:N Fnc_MODCYC_1
:S    424,   181,   236
:T Command
:C )! Fnc_MODCYC_1
:A Do Modal Analy
:D Do Modal Analysis of Two-Sector Model (Phase 2)
:K #(PREP7)
:P (FULL_ANS)
:H Hlp_C_MODCYC
Inp_NoApply
Cmd_MODCYC
 Fld_0
  Typ_Lab
  Prm_[MODCYC]  Do Modal Analysis of Two-Sector Model (Phase 2)
 Fld_2
  Prm_HII,HIJ Range of harmonic indices
  Typ_INT2
 Fld_4
  Prm_THETN   Sector angle (degrees)
  Typ_REAL
 Fld_5
  Typ_Def_1
:E END
:! 
:N Fnc_MODE
:S    686,   231,   448
:T Command
:C )! Fnc_MODE
:A For Harmonic Ele
:D Loading Term for Harmonic Elements
:K #(PREP7*SOLUTION)
:K #((pr_elmag+magnetic+electric)*CFD*FLUID*THERMAL*STRUCTRL)
:P (FULL_ANS)
:H Hlp_C_MODE
Inp_NoApply
Cmd_MODE
 Fld_0
  Typ_Lab
  Prm_[MODE]  Harmonic Loading Term - for PLANE25,SHELL61,
 Fld_0
  Typ_Lab
  Prm_        PLANE75,PLANE78,FLUID81,PLANE83
 Fld_2
  Prm_MODE  Number of harmonic waves -
  Typ_INT
  Def_*GET(common,,stepcm,,int,30)
 Fld_0
  Typ_Lab
  Prm_      - around the circumference
 Fld_3
  Prm_ISYM  Symmetry condition
  Typ_LIS_RADIOB
  LIS_Symmetric       ,1
  LIS_Antisymmetric   ,-1
  Def_*GET(common,,stepcm,,int,31)
:E END
:! 
:N Fnc_MODFUL
:S    552,   149,   396
:T Command
:C )! Fnc_MODFUL
:A Gen Full Model
:D Generate Full Model
:K #(PREP7)
:P (FULL_ANS)
:H Hlp_C_MODFUL
Cmd_MODFUL
 Fld_0
  Typ_Lab
  Prm_[MODFUL]  Generate Full Model
 Fld_2
  Prm_HI     Harmonic index I
  Typ_INT
 Fld_0
  Typ_Lab
  Prm_       (Results file CYCSYM.I is read)
 Fld_3
  Prm_THETN  Sector angle (degrees)
  Typ_REAL
 Fld_4
  Prm_LSTEP,MODEID Load step - mode no
  Typ_INT2
 Fld_6
  Prm_FULL   Generate full geometry?
  Typ_LIS_OPTIONB
  LIS_Yes             ,0
  LIS_No              ,1
:E END
:! 
:N Fnc_MONITOR
:S    271,   141,   123
:T Cmd_P
:C )! Fnc_MONITOR
:A Monitor
:D Monitor
:P (FULL_ANS*LINPLUS)
:K #(NLCNTRL)
:H Hlp_C_MONITOR
Inp_P
Cmd_)!
Fld_3
 Prm_[MONITOR]  Pick or enter the node to be monitored
 Typ_NODE
 Min_1
 Cnt_1
 Pfm_1
Cal_Fnc_MONITOR_2
:E END
:! 
:N Fnc_MONITOR_2
:S    655,   158,   490
:T Cmd
:C )! Fnc_MONITOR_2
:A Monitor
:D Monitor
:B Fnc_MONITOR
:P (FULL_ANS*LINPLUS)
:K #(NLCNTRL)
:H Hlp_C_MONITOR
Inp_NoApply
Cmd_MONITOR
 Fld_0
  Typ_Lab
  Prm_[MONITOR] Redefine the monitor variables
 Fld_2
  Prm_Variable to redefine
  Typ_LIS_OPTIONB
  LIS_Variable 1,VAR1
  LIS_Variable 2,VAR2
  LIS_Variable 3,VAR3
 Fld_3
  Typ_Def_P51X
 Fld_4
  Prm_Quantity to be monitored
  Typ_LIS_OPTIONB
  LIS_UX  ,UX
  LIS_UY  ,UY
  LIS_UZ  ,UZ
  LIS_ROTX,ROTX
  LIS_ROTY,ROTY
  LIS_ROTZ,ROTZ
  LIS_TEMP,TEMP
  LIS_FX  ,FX
  LIS_FY  ,FY
  LIS_FZ  ,FZ
  LIS_MX  ,MX
  LIS_MY  ,MY
  LIS_MZ  ,MZ
  LIS_HEAT,HEAT
:E END
:! 
:N Fnc_MORPHING
:S    108,    88,    13
:T Cmd_N
:A -Phys Morphing-
:K #(PREP7+RESULTS)
Inp_P
Cmd_)!
:E END
:! 
:N Fnc_MORPH_ON
:S    348,   163,   178
:T Command
:C )! Fnc_MORPH_ON
:A Element Morphing
:D Activate Element Morphing
:K (PREP7*SOLUTION*NOFILTER)
:H Hlp_C_MORPH
Inp_NoApply
Cmd_MORPH
 Fld_0
  Typ_Lab
  Prm_[MORPH]  Morphing for non-structural elements 
 Fld_2
  Prm_    Morph  Elements
  Typ_Lis_RadioB
  Lis_OFF,OFF
  Lis_ON,ON
  Def_OFF
:E END
:! 
:N Fnc_MOVE
:S    295,   134,   154
:T Cmd_P
:C )! Fnc_MOVE
:A    To Intersect
:D Move Node to Intersection
:K #(PREP7)
:H Hlp_C_MOVE
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
  Typ_NODE
  Prm_[MOVE]  Pick or enter the node to be moved
  Min_1
  Cnt_1
  PCN_1
  PFM_2
Cmd_)/GO
Cal_Fnc_MOVE_2
:E END
:! 
:N Fnc_MOVE_2
:S    613,   122,   484
:T Command
:C )! Fnc_MOVE_2
:D Move Node to intersection 
:K #(PREP7)
:H Hlp_C_MOVE
Cmd_MOVE
Fld_0
Typ_Lab
Prm_[MOVE]  Move Node to Intersection
 Fld_2
  Prm_NODE      Node to be moved
  Typ_INT
  Def_*PAR(_z1)
 Fld_0
  Prm_ 
 Fld_3
  Prm_KC1       1st Coord. system no.
  Typ_INT
  Def_0
 Fld_4
  Prm_X1,Y1,Z1  Coordinates of 1st CS
  Typ_REAL3
  Def_Blank,Blank,Blank
 Fld_0
  Prm_ 
 Fld_7
  Prm_KC2       2nd Coord. system no.
  Typ_INT
  Def_0
 Fld_8
  Prm_X2,Y2,Z2  Coordinates of 2nd CS     
  Typ_REAL3
  Def_Blank,Blank,Blank
Cmd_)/NOPR
Cmd_)*DEL,_z1
Cmd_)/GO
:E End
:! 
:N Fnc_MP*VPLOT
:S    853,   154,   676
:T Cmd
:C )! Fnc_MP*VPLOT
:A Plot Columns of Array Parameters
:D Plot Columns of Array Parameters
:H Hlp_C_*VPLOT
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[*VPLOT]  Graphs Column of Array Parameters
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_*VPLOT
 Fld_4
  Prm_ParX  X-axis array parameter
  Typ_CHAR
 Fld_5
  Prm_ParY  Y-axis array parameter
  Typ_CHAR
 Fld_0
  Typ_Lab
  Prm_Additional ParY columns to be plotted
 Fld_6
  Typ_INT
  Prm_Y2              2nd column no.
 Fld_7
  Typ_INT
  Prm_Y3              3rd column no.
 Fld_8
  Typ_INT
  Prm_Y4              4th column no.
 Fld_9
  Typ_INT
  Prm_Y5              5th column no.
 Fld_10
  Typ_INT
  Prm_Y6              6th column no.
 Fld_11
  Typ_INT
  Prm_Y7              7th column no.
 Fld_12
  Typ_INT
  Prm_Y8              8th column no.
:E END OF Fnc_MP*VPLOT
:! 
:N Fnc_MPAMOD
:S    503,   223,   273
:T Command
:C )! Fnc_MPAMOD
:A Convert ALPx
:D Convert Coefficient of Thermal Expansion [ALP(X,Y,Z)] Table 
:K (lsdyna+pr_cfd)
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL)
:H Hlp_C_MPAMOD
Cmd_MPAMOD
 Fld_0
  Typ_Lab
  Prm_[MPAMOD]  Convert ALP(X,Y,Z) table from definition temperature
 Fld_0
  Typ_Lab
  Prm_          to reference temperature
 Fld_2
  Typ_INT
  Prm_MAT   Material number
  Def_1
 Fld_3
  Typ_REAL
  Prm_TEMP  Definition temperature
  Def_blank
:E END
:! 
:N Fnc_MPANEL
:S   4990,  1273,  3710
:T Command
:C )! Fnc_MPANEL
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )*IF,_EDCHK,GT,0,THEN
:C )*IF,_MODEL,EQ,3,THEN
:C )*GET,_zx(1),ANEL,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),ANEL,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),ANEL,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),ANEL,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),ANEL,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(6),ANEL,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(7),ANEL,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(8),ANEL,_MODLOC,TEMP,0,CONST,8
:C )*GET,_zx(9),ANEL,_MODLOC,TEMP,0,CONST,9
:C )*GET,_zx(10),ANEL,_MODLOC,TEMP,0,CONST,10
:C )*GET,_zx(11),ANEL,_MODLOC,TEMP,0,CONST,11
:C )*GET,_zx(12),ANEL,_MODLOC,TEMP,0,CONST,12
:C )*GET,_zx(13),ANEL,_MODLOC,TEMP,0,CONST,13
:C )*GET,_zx(14),ANEL,_MODLOC,TEMP,0,CONST,14
:C )*GET,_zx(15),ANEL,_MODLOC,TEMP,0,CONST,15
:C )*GET,_zx(16),ANEL,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(17),ANEL,_MODLOC,TEMP,0,CONST,17
:C )*GET,_zx(18),ANEL,_MODLOC,TEMP,0,CONST,18
:C )*GET,_zx(19),ANEL,_MODLOC,TEMP,0,CONST,19
:C )*GET,_zx(20),ANEL,_MODLOC,TEMP,0,CONST,20
:C )*GET,_zx(21),ANEL,_MODLOC,TEMP,0,CONST,21
:C )*get,_z8,ortho,_modloc                    
:C )*ENDIF
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY3)
:H Hlp_UI_mpanel
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
Fld_0
 Typ_Lab
 Prm_Set Anisotropic Elastic Material Model Values
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_DENS
!
 Fld_6
  Prm_Density                    DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
 Fld_0
 Typ_Sep
!
Cmd_EDMP
 Fld_2
 Typ_Def_ORTHO
!
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_4
 Prm_[EDMP] Coordinate System ID
 Typ_REAL
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_z8)
!
 Fld_0
 Typ_Sep
!
Cmd_TB
 Fld_2
 Typ_Def_ANEL
!
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_0
 Prm_[TBDATA] Define material data
!
Cmd_TBDAT
 Fld_2
 Typ_Def_1
!
 Fld_3
 Prm_C(11)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(1))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_2
!
 Fld_3
 Prm_C(12)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(2))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_3
!
 Fld_3
 Prm_C(22)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(3))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_4
!
 Fld_3
 Prm_C(13)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(4))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_5
!
 Fld_3
 Prm_C(23)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(5))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_6
!
 Fld_3
 Prm_C(33)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(6))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_7
!
 Fld_3
 Prm_C(14)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(7))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_8
!
 Fld_3
 Prm_C(24)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(8))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_9
!
 Fld_3
 Prm_C(34)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(9))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_10
!
 Fld_3
 Prm_C(44)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(10))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_11
!
 Fld_3
 Prm_C(15)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(11))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_12
!
 Fld_3
 Prm_C(25)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(12))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_13
!
 Fld_3
 Prm_C(35)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(13))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_14
!
 Fld_3
 Prm_C(45)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(14))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_15
!
 Fld_3
 Prm_C(55)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(15))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_16
!
 Fld_3
 Prm_C(16)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(16))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_17
!
 Fld_3
 Prm_C(26)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(17))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_18
!
 Fld_3
 Prm_C(36)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(18))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_19
!
 Fld_3
 Prm_C(46)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(19))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_20
!
 Fld_3
 Prm_C(56)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(20))
!
Cmd_TBDAT
 Fld_2
 Typ_Def_21
!
 Fld_3
 Prm_C(66)
 Typ_Real
 K_LN(modedit)
 Def_*PAR(_zc(1))
 K_LN(MODEDIT)
 Def_*PAR(_zx(21))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPBISO
:S    853,   128,   718
:T Command
:C )! Fnc_MPBISO
:A Define MAT Model
:D Define Material Model
:H Hlp_UI_mpanel
Inp_P
!
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
 Typ_Def_*PAR(_MPACT)
 Fld_3
 Typ_Def_*PAR(_MODTYP)
!
Cmd_~eui
 K_CM(modedit)
 Fld_2
  Typ_Def_'
  Dlm_~
 Fld_3
  Typ_Def_euidl::material::ModelControl::table_choice 
  Dlm_ 
 Fld_4
  Typ_Def_COMB_DELD_ISLS_BISO_999
  Dlm_ 
 Fld_5
  Typ_Def_*PAR(_MPACT)
  Dlm_ 
 Fld_6
  Typ_Def_0
  Dlm_~
 Fld_7
  Typ_Def_'
!
Cmd_~eui
 K_CM(MODEDIT)
 Fld_2
  Typ_Def_'
  Dlm_~
 Fld_3
  Typ_Def_euidl::material::ModelControl::table_choice 
  Dlm_ 
 Fld_4
  Typ_Def_COMB_DELD_ISLS_BISO_999
  Dlm_ 
 Fld_5
  Typ_Def_*PAR(_MODLOC)
  Dlm_ 
 Fld_6
  Typ_Def_0
  Dlm_~
 Fld_7
  Typ_Def_'
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPCHG
:S    430,   186,   237
:T Command
:C )! Fnc_MPCHG
:A Change Mat Num 
:D Change Material Number
:K #(PREP7*SOLUTION)
:K (lsdyna)
:P (LINPLUS*ELECMAG*FLOTRAN)
:H Hlp_C_MPCHG
Cmd_MPCHG
 Fld_0
  Typ_Lab
  Prm_[MPCHG]  Change Material Number
 Fld_2
  Prm_MAT   New material number
  Typ_INT
 Fld_3
  Prm_ELEM  Element no. to be modified
  Typ_INT
 Fld_0
  Typ_Lab
  Prm_      (Enter ALL for all selected elements)
:E END
:! 
:N Fnc_MPDATA
:S   7144,   145,  6992
:T Command
:C )! Fnc_MPDATA
:A    Prop Table
:D Define Material Property Table
:K (lsdyna)
:H Hlp_C_MPDATA
Cmd_MPDATA
 Fld_0
  Typ_Lab
  Prm_[MPDATA]  Define Material Property Table
 Fld_2
  Prm_Lab    Material property label
  Typ_IDX
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD*LSDYNA)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Elastic modulus ,EX              ,EX
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD*LSDYNA)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Elastic modulus ,EY              ,EY
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD*LSDYNA)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Elastic modulus ,EZ              ,EZ
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD*LSDYNA)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXY            ,PRXY
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD*LSDYNA)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRYZ            ,PRYZ
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD*LSDYNA)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXZ            ,PRXZ
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD*LSDYNA)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXY            ,NUXY
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD*LSDYNA)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUYZ            ,NUYZ
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD*LSDYNA)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXZ            ,NUXZ
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD*LSDYNA)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXY             ,GXY
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD*LSDYNA)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Shear modulus   ,GYZ             ,GYZ
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD*LSDYNA)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXZ             ,GXZ
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPX            ,ALPX
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPY            ,ALPY
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPZ            ,ALPZ
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Reference temp  ,REFT            ,REFT
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_STRUC*PR_FLUID)
P_LN(FULL_ANS)
  IDX_Friction coeff  ,MU              ,MU
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_STRUC)
P_LN(LINPLUS)
  IDX_Damping multip  ,DAMP            ,DAMP
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_THERM*PR_STRUC*PR_FLUID*PR_CFD)
P_LN(LINPLUS*THERMAL*FLOTRAN*LSDYNA)
  IDX_Density         ,DENS            ,DENS
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_THERM*PR_CFD*PR_FLUID)
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KXX             ,KXX
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_THERM*PR_CFD*PR_FLUID)
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KYY             ,KYY
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_THERM*PR_CFD*PR_FLUID)
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KZZ             ,KZZ
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_THERM*PR_CFD*PR_FLUID)
P_LN(THERMAL*FLOTRAN)
  IDX_Specific heat   ,C               ,C
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_THERM*PR_CFD*PR_FLUID)
P_LN(THERMAL)
  IDX_Enthalpy        ,ENTH            ,ENTH
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_THERM*pr_cfd*PR_FLUID)
P_LN(THERMAL)
  IDX_Conv film coeff ,HF              ,HF
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_THERM*PR_CFD*PR_FLUID)
P_LN(THERMAL)
  IDX_Emissivity      ,EMIS            ,EMIS
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_THERM*PR_CFD*PR_FLUID)
P_LN(THERMAL)
  IDX_Heat gen rate   ,QRATE           ,QRATE
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_FLUID*PR_CFD)
P_LN(FULL_ANS*FLOTRAN)
  IDX_Viscosity       ,VISC            ,VISC
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_FLUID*PR_CFD)
P_LN(FULL_ANS)
  IDX_Sonic velocity  ,SONC            ,SONC
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*(PR_ELMAG+pmethod))
P_LN(ELECMAG)
  IDX_Rel permeability,MURX            ,MURX
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*(PR_ELMAG+pmethod))
P_LN(ELECMAG)
  IDX_Rel permeability,MURY            ,MURY
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*(PR_ELMAG+pmethod))
P_LN(ELECMAG)
  IDX_Rel permeability,MURZ            ,MURZ
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*(PR_ELMAG+pmethod))
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGXX            ,MGXX
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*(PR_ELMAG+pmethod))
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGYY            ,MGYY
K_LN((electric+magnetic)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*(PR_ELMAG+pmethod))+lsdyna)
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGZZ            ,MGZZ
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*(PR_ELMAG+pmethod)*PR_THERM)
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVX            ,RSVX
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*(PR_ELMAG+pmethod)*PR_THERM)
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVY            ,RSVY
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*(PR_ELMAG+pmethod)*PR_THERM)
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVZ            ,RSVZ
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_ELMAG)
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERX            ,PERX
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_ELMAG)
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERY            ,PERY
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*PR_ELMAG)
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERZ            ,PERZ
K_LN((electric+magnetic+lsdyna)*STRUCTRL*THERMAL*FLUID*CFD)
K_LN(pr_set*(PR_ELMAG+pmethod))
P_LN(ELECMAG)
  IDX_Loss tangent    ,LSST            ,LSST
 Fld_3
  Typ_INT
  Prm_MAT    Material reference number
  Def_1
 Fld_0
  Typ_Sep
 Fld_4
  Typ_INT
  Prm_STLOC  Starting location N
  Def_1
 Fld_5
  Typ_REAL
  Prm_C1     Property value at loc N
  Def_Blank
 Fld_6
  Typ_REAL
  Prm_C2     Property value at loc N+1
  Def_Blank
 Fld_7
  Typ_REAL
  Prm_C3     Property value at loc N+2
  Def_Blank
 Fld_8
  Typ_REAL
  Prm_C4     Property value at loc N+3
  Def_Blank
 Fld_9
  Typ_REAL
  Prm_C5     Property value at loc N+4
  Def_Blank
 Fld_10
  Typ_REAL
  Prm_C6     Property value at loc N+5
  Def_Blank
:E End
:! 
:N Fnc_MPDEF
:S    457,   345,   105
:T Command
:C )! Fnc_MPDEF
:C )/NOPR
:C )_EDCHK = 0
:C )_PREDEF = 0
:C )KEYW,MODEDIT,0
:C )*del,_zx
:C )*dim,_zx,,100,1
:C )*DO,_i,1,54
:C )keyw,key%(_i)%,0
:C )*enddo
:C )*do,_i,1,100
:C )_zx(_i) = 0
:C )*enddo
:C )/GO
:A Define MAT Model
:D Add/Edit/Delete Material Models
:H Hlp_C_MP
:K #(PREP7*SOLUTION)
Inp_P
Cmd_)MTYP
Cmd_)STAT,,, ,,, ,,1
! Cust_Cal_Fnc_MP_add
! Cust_Cal_Fnc_MP_edit
! Cust_Cal_Fnc_MP_dele
:E End
:! 
:N Fnc_MPDELE
:S   2971,   153,  2811
:T Command
:C )! Fnc_MPDELE
:A Delete Mat Props
:D Delete Material Properties
:K #(PREP7*SOLUTION)
:H Hlp_C_MPDELE
Cmd_MPDELE
 Fld_0
  Typ_Lab
  Prm_[MPDELE]  Delete Material Property 
 Fld_2
  Prm_Lab  Material prop to be deleted
  Typ_IDX
  IDX_All materials   ,ALL             ,ALL
P_LN(LINPLUS)
  IDX_Elastic modulus ,EX              ,EX
P_LN(LINPLUS)
  IDX_Elastic modulus ,EY              ,EY
P_LN(LINPLUS)
  IDX_Elastic modulus ,EZ              ,EZ
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPX            ,ALPX
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPY            ,ALPY
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPZ            ,ALPZ
P_LN(LINPLUS)
  IDX_Reference temp  ,REFT            ,REFT
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXY            ,PRXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRYZ            ,PRYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXZ            ,PRXZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXY            ,NUXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUYZ            ,NUYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXZ            ,NUXZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXY             ,GXY
P_LN(LINPLUS)
  IDX_Shear modulus   ,GYZ             ,GYZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXZ             ,GXZ
P_LN(LINPLUS)
  IDX_Damping multip  ,DAMP            ,DAMP
P_LN(FULL_ANS)
  IDX_Friction coeff  ,MU              ,MU
P_LN(LINPLUS*THERMAL*FLOTRAN)
  IDX_Density         ,DENS            ,DENS
P_LN(THERMAL*FLOTRAN)
  IDX_Specific heat   ,C               ,C
P_LN(THERMAL)
  IDX_Enthalpy        ,ENTH            ,ENTH
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KXX             ,KXX
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KYY             ,KYY
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KZZ             ,KZZ
P_LN(THERMAL)
  IDX_Conv film coeff ,HF              ,HF
P_LN(THERMAL)
  IDX_Emissivity      ,EMIS            ,EMIS
P_LN(THERMAL)
  IDX_Heat gen rate   ,QRATE           ,QRATE
P_LN(FULL_ANS*FLOTRAN)
  IDX_Viscosity       ,VISC            ,VISC
P_LN(FULL_ANS)
  IDX_Sonic velocity  ,SONC            ,SONC
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVX            ,RSVX
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVY            ,RSVY
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVZ            ,RSVZ
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERX            ,PERX
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERY            ,PERY
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERZ            ,PERZ
P_LN(ELECMAG)
  IDX_Rel permeability,MURX            ,MURX
P_LN(ELECMAG)
  IDX_Rel permeability,MURY            ,MURY
P_LN(ELECMAG)
  IDX_Rel permeability,MURZ            ,MURZ
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGXX            ,MGXX
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGYY            ,MGYY
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGZZ            ,MGZZ
P_LN(ELECMAG)
  IDX_Loss tangent    ,LSST            ,LSST
 Fld_3
  Typ_INT3
  Prm_MAT1,MAT2,INC  Range of mat nos.
  Def_1,1,1
!
:E End
:! 
:N Fnc_MPDRES
:S   5807,   185,  5615
:T Command
:C )! Fnc_MPDRES
:A    Modify Temps
:D Modify Temperatures of Existing Material Table 
:K (lsdyna)
:K #(PREP7*SOLUTION)
:H Hlp_C_MPDRES
Cmd_MPDRES
 Fld_0
  Typ_Lab
  Prm_[MPDRES]  Modify Temperatures of Existing Material Table
 Fld_0
  Typ_Lab
   Prm_(Current temp table will be assembled with existing mat'l table.)
 Fld_2
  Prm_LabF  Label of existing property
  Typ_IDX
P_LN(LINPLUS)
  IDX_Elastic modulus ,EX              ,EX
P_LN(LINPLUS)
  IDX_Elastic modulus ,EY              ,EY
P_LN(LINPLUS)
  IDX_Elastic modulus ,EZ              ,EZ
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPX            ,ALPX
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPY            ,ALPY
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPZ            ,ALPZ
P_LN(LINPLUS)
  IDX_Reference temp  ,REFT            ,REFT
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXY            ,PRXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRYZ            ,PRYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXZ            ,PRXZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXY            ,NUXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUYZ            ,NUYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXZ            ,NUXZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXY             ,GXY
P_LN(LINPLUS)
  IDX_Shear modulus   ,GYZ             ,GYZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXZ             ,GXZ
P_LN(LINPLUS)
  IDX_Damping multip  ,DAMP            ,DAMP
P_LN(FULL_ANS)
  IDX_Friction coeff  ,MU              ,MU
P_LN(LINPLUS*THERMAL*FLOTRAN)
  IDX_Density         ,DENS            ,DENS
P_LN(THERMAL*FLOTRAN)
  IDX_Specific heat   ,C               ,C
P_LN(THERMAL)
  IDX_Enthalpy        ,ENTH            ,ENTH
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KXX             ,KXX
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KYY             ,KYY
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KZZ             ,KZZ
P_LN(THERMAL)
  IDX_Conv film coeff ,HF              ,HF
P_LN(THERMAL)
  IDX_Emissivity      ,EMIS            ,EMIS
P_LN(THERMAL)
  IDX_Heat gen rate   ,QRATE           ,QRATE
P_LN(FULL_ANS*FLOTRAN)
  IDX_Viscosity       ,VISC            ,VISC
P_LN(FULL_ANS)
  IDX_Sonic velocity  ,SONC            ,SONC
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVX            ,RSVX
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVY            ,RSVY
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVZ            ,RSVZ
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERX            ,PERX
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERY            ,PERY
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERZ            ,PERZ
P_LN(ELECMAG)
  IDX_Rel permeability,MURX            ,MURX
P_LN(ELECMAG)
  IDX_Rel permeability,MURY            ,MURY
P_LN(ELECMAG)
  IDX_Rel permeability,MURZ            ,MURZ
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGXX            ,MGXX
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGYY            ,MGYY
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGZZ            ,MGZZ
P_LN(ELECMAG)
  IDX_Loss tangent    ,LSST            ,LSST
 Fld_3
  Typ_INT
  Prm_MATF  Mat no. of existing prop
  Def_1
 Fld_0
  Typ_Sep
 Fld_4
  Prm_LabT  Optional new label
  Typ_IDX
  IDX_-none-          ,-none-          ," "
P_LN(LINPLUS)
  IDX_Elastic modulus ,EX              ,EX
P_LN(LINPLUS)
  IDX_Elastic modulus ,EY              ,EY
P_LN(LINPLUS)
  IDX_Elastic modulus ,EZ              ,EZ
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPX            ,ALPX
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPY            ,ALPY
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPZ            ,ALPZ
P_LN(LINPLUS)
  IDX_Reference temp  ,REFT            ,REFT
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXY            ,PRXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRYZ            ,PRYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXZ            ,PRXZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXY            ,NUXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUYZ            ,NUYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXZ            ,NUXZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXY             ,GXY
P_LN(LINPLUS)
  IDX_Shear modulus   ,GYZ             ,GYZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXZ             ,GXZ
P_LN(LINPLUS)
  IDX_Damping multip  ,DAMP            ,DAMP
P_LN(FULL_ANS)
  IDX_Friction coeff  ,MU              ,MU
P_LN(LINPLUS*THERMAL*FLOTRAN)
  IDX_Density         ,DENS            ,DENS
P_LN(THERMAL*FLOTRAN)
  IDX_Specific heat   ,C               ,C
P_LN(THERMAL)
  IDX_Enthalpy        ,ENTH            ,ENTH
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KXX             ,KXX
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KYY             ,KYY
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KZZ             ,KZZ
P_LN(THERMAL)
  IDX_Conv film coeff ,HF              ,HF
P_LN(THERMAL)
  IDX_Emissivity      ,EMIS            ,EMIS
P_LN(THERMAL)
  IDX_Heat gen rate   ,QRATE           ,QRATE
P_LN(FULL_ANS*FLOTRAN)
  IDX_Viscosity       ,VISC            ,VISC
P_LN(FULL_ANS)
  IDX_Sonic velocity  ,SONC            ,SONC
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVX            ,RSVX
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVY            ,RSVY
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVZ            ,RSVZ
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERX            ,PERX
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERY            ,PERY
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERZ            ,PERZ
P_LN(ELECMAG)
  IDX_Rel permeability,MURX            ,MURX
P_LN(ELECMAG)
  IDX_Rel permeability,MURY            ,MURY
P_LN(ELECMAG)
  IDX_Rel permeability,MURZ            ,MURZ
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGXX            ,MGXX
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGYY            ,MGYY
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGZZ            ,MGZZ
P_LN(ELECMAG)
  IDX_Loss tangent    ,LSST            ,LSST
 Fld_5
  Typ_INT
  Prm_MATT  Optional new material no.
  Def_Blank
:E End
:! 
:N Fnc_MPDYN
:S   2175,   350,  1818
:T Command
:C )! Fnc_MPDYN
:C )/NOPR
:C )*IF,_MODEL,EQ,7,THEN
:C )j=_MPEDIT
:C )*get,_z9,common,,modcom3,,int,j   ! get rotcon for RIGID
:C )*GET,_z8,RIGID,_MODLOC           ! get displacement constraints for RIGID
:C )*endif
:C )/GO
:A Nonlinear MAT Model
:D Define Nonlinear MAT Model
:K (KEY7)
:H Hlp_UI_mpdyn
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
Fld_0
 Typ_Lab
 Prm_Set Property Values for Material Model RIGID
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                    DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus              EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio             NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Fld_0
 Typ_Sep
!
Cmd_EDMP
 Fld_2
   Typ_Def_RIGID
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_4
   Prm_[EDMP] Translat'l constrnt parm
   Typ_Lis_OptionB
   Lis_No constraints,0
   Lis_X displacement,1
   Lis_Y displacement,2
   Lis_Z displacement,3
   Lis_X and Y disps.,4
   Lis_Y and Z disps.,5
   Lis_Z and X disps.,6
   Lis_All disps.,7
   K_LN(MODEDIT)
   Def_*PAR(_z8)
!
 Fld_5
   Prm_       Rotational constrnt parm
   Typ_Lis_OptionB
   Lis_No constraints,0
   Lis_X rotation,1
   Lis_Y rotation,2
   Lis_Z rotation,3
   Lis_X and Y rotate,4
   Lis_Y and Z rotate,5
   Lis_Z and X rotate,6
   Lis_All rotations,7
   K_LN(MODEDIT)
   Def_*PAR(_z9)
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPDYN2
:S   1389,   278,  1104
:T Command
:C )! Fnc_MPDYN2
:C )/NOPR
:C )*IF,_MODEL,EQ,27,THEN
:C )*GET,_z8,CABLE,_MODLOC
:C )*ENDIF
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )/GO
:A Nonlinear MAT Model
:D Define Nonlinear MAT Model
:K (KEY27)
:H Hlp_UI_mpdyn
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
Fld_0
 Typ_Lab
 Prm_Set Property Values for Material Model CABLE
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                    DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus              EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Fld_0
 Typ_Sep
!
Cmd_EDMP
 Fld_2
   Typ_Def_CABLE
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
Fld_4
  Prm_[EDMP] Load Curve ID
  Typ_Int
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_z8)
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPDYNConcr
:S  10505,  3899,  6599
:T Command
:C )! Fnc_MPDYNConcr
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )*IF,_EDCHK,GT,0,THEN
:C )*GET,_zx(1),CONCR,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),CONCR,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),CONCR,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),CONCR,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),CONCR,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(6),CONCR,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(7),CONCR,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(8),CONCR,_MODLOC,TEMP,0,CONST,8
:C )*GET,_zx(9),CONCR,_MODLOC,TEMP,0,CONST,9
:C )*GET,_zx(10),CONCR,_MODLOC,TEMP,0,CONST,10
:C )*GET,_zx(11),CONCR,_MODLOC,TEMP,0,CONST,11
:C )*GET,_zx(12),CONCR,_MODLOC,TEMP,0,CONST,12
:C )*GET,_zx(13),CONCR,_MODLOC,TEMP,0,CONST,13
:C )*GET,_zx(14),CONCR,_MODLOC,TEMP,0,CONST,14
:C )*GET,_zx(15),CONCR,_MODLOC,TEMP,0,CONST,15
:C )*GET,_zx(16),CONCR,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(17),CONCR,_MODLOC,TEMP,0,CONST,17
:C )*GET,_zx(18),CONCR,_MODLOC,TEMP,0,CONST,18
:C )*GET,_zx(19),CONCR,_MODLOC,TEMP,0,CONST,19
:C )*GET,_zx(20),CONCR,_MODLOC,TEMP,0,CONST,20
:C )*GET,_zx(21),CONCR,_MODLOC,TEMP,0,CONST,21
:C )*GET,_zx(22),CONCR,_MODLOC,TEMP,0,CONST,22
:C )*GET,_zx(23),CONCR,_MODLOC,TEMP,0,CONST,23
:C )*GET,_zx(24),CONCR,_MODLOC,TEMP,0,CONST,24
:C )*GET,_zx(25),CONCR,_MODLOC,TEMP,0,CONST,25
:C )*GET,_zx(26),CONCR,_MODLOC,TEMP,0,CONST,26
:C )*GET,_zx(27),CONCR,_MODLOC,TEMP,0,CONST,27
:C )*GET,_zx(28),CONCR,_MODLOC,TEMP,0,CONST,28
:C )*GET,_zx(29),CONCR,_MODLOC,TEMP,0,CONST,29
:C )*GET,_zx(30),CONCR,_MODLOC,TEMP,0,CONST,30
:C )*GET,_zx(31),CONCR,_MODLOC,TEMP,0,CONST,31
:C )*GET,_zx(32),CONCR,_MODLOC,TEMP,0,CONST,32
:C )*GET,_zx(33),CONCR,_MODLOC,TEMP,0,CONST,33
:C )*GET,_zx(34),CONCR,_MODLOC,TEMP,0,CONST,34
:C )*GET,_zx(35),CONCR,_MODLOC,TEMP,0,CONST,35
:C )*GET,_zx(36),CONCR,_MODLOC,TEMP,0,CONST,36
:C )*GET,_zx(37),CONCR,_MODLOC,TEMP,0,CONST,37
:C )*GET,_zx(38),CONCR,_MODLOC,TEMP,0,CONST,38
:C )*GET,_zx(39),CONCR,_MODLOC,TEMP,0,CONST,39
:C )*GET,_zx(40),CONCR,_MODLOC,TEMP,0,CONST,40
:C )*GET,_zx(41),CONCR,_MODLOC,TEMP,0,CONST,41
:C )*GET,_zx(42),CONCR,_MODLOC,TEMP,0,CONST,42
:C )*GET,_zx(43),CONCR,_MODLOC,TEMP,0,CONST,43
:C )*GET,_zx(44),CONCR,_MODLOC,TEMP,0,CONST,44
:C )*GET,_zx(45),CONCR,_MODLOC,TEMP,0,CONST,45
:C )*GET,_zx(46),CONCR,_MODLOC,TEMP,0,CONST,46
:C )*GET,_zx(47),CONCR,_MODLOC,TEMP,0,CONST,47
:C )*GET,_zx(48),CONCR,_MODLOC,TEMP,0,CONST,48
:C )*GET,_zx(49),CONCR,_MODLOC,TEMP,0,CONST,49
:C )*GET,_zx(50),CONCR,_MODLOC,TEMP,0,CONST,50
:C )*GET,_zx(51),CONCR,_MODLOC,TEMP,0,CONST,51
:C )*GET,_zx(52),CONCR,_MODLOC,TEMP,0,CONST,52
:C )*GET,_zx(53),CONCR,_MODLOC,TEMP,0,CONST,53
:C )*GET,_zx(54),CONCR,_MODLOC,TEMP,0,CONST,54
:C )*GET,_zx(55),CONCR,_MODLOC,TEMP,0,CONST,55
:C )*GET,_zx(56),CONCR,_MODLOC,TEMP,0,CONST,56
:C )*GET,_zx(57),CONCR,_MODLOC,TEMP,0,CONST,57
:C )*GET,_zx(58),CONCR,_MODLOC,TEMP,0,CONST,58
:C )*GET,_zx(59),CONCR,_MODLOC,TEMP,0,CONST,59
:C )*GET,_zx(60),CONCR,_MODLOC,TEMP,0,CONST,60
:C )*GET,_zx(61),CONCR,_MODLOC,TEMP,0,CONST,61
:C )*GET,_zx(62),CONCR,_MODLOC,TEMP,0,CONST,62
:C )*GET,_zx(63),CONCR,_MODLOC,TEMP,0,CONST,63
:C )*GET,_zx(64),CONCR,_MODLOC,TEMP,0,CONST,64
:C )*GET,_zx(65),CONCR,_MODLOC,TEMP,0,CONST,65
:C )*GET,_zx(66),CONCR,_MODLOC,TEMP,0,CONST,66
:C )*GET,_zx(67),CONCR,_MODLOC,TEMP,0,CONST,67
:C )*GET,_zx(68),CONCR,_MODLOC,TEMP,0,CONST,68
:C )*GET,_zx(69),CONCR,_MODLOC,TEMP,0,CONST,69
:C )*GET,_zx(70),CONCR,_MODLOC,TEMP,0,CONST,70
:C )*GET,_zx(71),CONCR,_MODLOC,TEMP,0,CONST,71
:C )*GET,_zx(72),CONCR,_MODLOC,TEMP,0,CONST,72
:C )*GET,_zx(73),CONCR,_MODLOC,TEMP,0,CONST,73
:C )*GET,_zx(74),CONCR,_MODLOC,TEMP,0,CONST,74
:C )*GET,_zx(75),CONCR,_MODLOC,TEMP,0,CONST,75
:C )*GET,_zx(76),CONCR,_MODLOC,TEMP,0,CONST,76
:C )*GET,_zx(77),CONCR,_MODLOC,TEMP,0,CONST,77
:C )*GET,_zx(78),CONCR,_MODLOC,TEMP,0,CONST,78
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY40)
:H Hlp_UI_mpanel
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
!
Fld_0
 Typ_Lab
 Prm_Define Material Model: Concrete Damage
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                   DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio           NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_TB
 Fld_2
 Typ_Def_CONCR
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 Typ_Def_2
! 
Fld_0
 Typ_Sep
! 
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA]  Define data for TB table
!
Cmd_TBDAT
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_                  sigmaF,A0,A1
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1)),*PAR(_zx(2)),*PAR(_zx(3))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_                    A2,A0Y,A1Y
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4)),*PAR(_zx(5)),*PAR(_zx(6))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_7
 Fld_3
  Prm_                   A2Y,A1F,A2F
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(7)),*PAR(_zx(8)),*PAR(_zx(9))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_10
 Fld_3
  Prm_                      B1,B2,B3
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(10)),*PAR(_zx(11)),*PAR(_zx(12))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_13
 Fld_3
  Prm_                  PER,Er,NUXYr
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(13)),*PAR(_zx(14)),*PAR(_zx(15))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_16
 Fld_3
  Prm_               sigmaY,Etan,LCP
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(16)),*PAR(_zx(17)),*PAR(_zx(18))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_19
 Fld_3
  Prm_           LCR,lambda1,lambda2
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(19)),*PAR(_zx(20)),*PAR(_zx(21))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_22
 Fld_3
  Prm_       lambda3,lambda4,lambda5
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(22)),*PAR(_zx(23)),*PAR(_zx(24))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_25
 Fld_3
  Prm_       lambda6,lambda7,lambda8
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(25)),*PAR(_zx(26)),*PAR(_zx(27))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_28
 Fld_3
  Prm_     lambda9,lambda10,lambda11
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(28)),*PAR(_zx(29)),*PAR(_zx(30))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_31
 Fld_3
  Prm_        lambda12,lambda13,eta1
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(31)),*PAR(_zx(32)),*PAR(_zx(33))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_34
 Fld_3
  Prm_                eta2,eta3,eta4
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(34)),*PAR(_zx(35)),*PAR(_zx(36))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_37
 Fld_3
  Prm_                eta5,eta6,eta7
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(37)),*PAR(_zx(38)),*PAR(_zx(39))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_40
 Fld_3
  Prm_               eta8,eta9,eta10
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(40)),*PAR(_zx(41)),*PAR(_zx(42))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_43
 Fld_3
  Prm_             eta11,eta12,eta13
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(43)),*PAR(_zx(44)),*PAR(_zx(45))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_46
 Fld_3
  Prm_                   gamma,E0,V0
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(46)),*PAR(_zx(47)),*PAR(_zx(48))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_49
 Fld_3
  Prm_        epsilon:(v1),(v2),(v3)
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(49)),*PAR(_zx(50)),*PAR(_zx(51))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_52
 Fld_3
  Prm_        epsilon:(v4),(v5),(v6)
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(52)),*PAR(_zx(53)),*PAR(_zx(54))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_55
 Fld_3
  Prm_        epsilon:(v7),(v8),(v9)
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(55)),*PAR(_zx(56)),*PAR(_zx(57))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_58
 Fld_3
  Prm_            epsilon(v10),C1,C2
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(58)),*PAR(_zx(59)),*PAR(_zx(60))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_61
 Fld_3
  Prm_                      C3,C4,C5
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(61)),*PAR(_zx(62)),*PAR(_zx(63))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_64
 Fld_3
  Prm_                      C6,C7,C8
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(64)),*PAR(_zx(65)),*PAR(_zx(66))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_67
 Fld_3
  Prm_                     C9,C10,T1
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(67)),*PAR(_zx(68)),*PAR(_zx(69))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_70
 Fld_3
  Prm_                      T2,T3,T4 
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(70)),*PAR(_zx(71)),*PAR(_zx(72))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_73
 Fld_3
  Prm_                      T5,T6,T7
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(73)),*PAR(_zx(74)),*PAR(_zx(75))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_76
 Fld_3
  Prm_                     T8,T9,T10
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(76)),*PAR(_zx(77)),*PAR(_zx(78))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPDYNFluid
:S   1402,   154,  1241
:T Command
:C )! Fnc_MPDYNFluid
:A Nonlinear MAT Model
:D Define Nonlinear MAT Model
:K (KEY39)
:H Hlp_UI_mpdyn
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
Fld_0
 Typ_Lab
 Prm_Set Property Values for Material Model: Elastic Fluid
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                    DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus              EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio             NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_EDMP
 Fld_2
   Typ_Def_FLUID
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPEOS
:S  13041,  3591,  9443
:T Command
:C )! Fnc_MPEOS
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )*IF,_EDCHK,GT,0,THEN
:C )*if,_MODEL,eq,29,then
:C )*GET,_zx(1),EOS,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),EOS,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),EOS,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),EOS,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),EOS,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(6),EOS,_MODLOC,TEMP,0,CONST,17
:C )*GET,_zx(7),EOS,_MODLOC,TEMP,0,CONST,18
:C )*GET,_zx(8),EOS,_MODLOC,TEMP,0,CONST,19
:C )*GET,_zx(9),EOS,_MODLOC,TEMP,0,CONST,20
:C )*GET,_zx(10),EOS,_MODLOC,TEMP,0,CONST,21
:C )*GET,_zx(11),EOS,_MODLOC,TEMP,0,CONST,22
:C )*GET,_zx(12),EOS,_MODLOC,TEMP,0,CONST,23
:C )*elseif,_MODEL,eq,30,then
:C )*GET,_zx(13),EOS,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(14),EOS,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(15),EOS,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(16),EOS,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(17),EOS,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(18),EOS,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(19),EOS,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(20),EOS,_MODLOC,TEMP,0,CONST,8
:C )*GET,_zx(21),EOS,_MODLOC,TEMP,0,CONST,9
:C )*GET,_zx(22),EOS,_MODLOC,TEMP,0,CONST,10
:C )*GET,_zx(23),EOS,_MODLOC,TEMP,0,CONST,11
:C )*GET,_zx(24),EOS,_MODLOC,TEMP,0,CONST,12
:C )*GET,_zx(25),EOS,_MODLOC,TEMP,0,CONST,13
:C )*GET,_zx(26),EOS,_MODLOC,TEMP,0,CONST,14
:C )*GET,_zx(27),EOS,_MODLOC,TEMP,0,CONST,15
:C )*GET,_zx(28),EOS,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(29),EOS,_MODLOC,TEMP,0,CONST,17
:C )*GET,_zx(30),EOS,_MODLOC,TEMP,0,CONST,18
:C )*GET,_zx(31),EOS,_MODLOC,TEMP,0,CONST,19
:C )*GET,_zx(32),EOS,_MODLOC,TEMP,0,CONST,20
:C )*GET,_zx(33),EOS,_MODLOC,TEMP,0,CONST,21
:C )*GET,_zx(34),EOS,_MODLOC,TEMP,0,CONST,22
:C )*GET,_zx(35),EOS,_MODLOC,TEMP,0,CONST,23
:C )*GET,_zx(36),EOS,_MODLOC,TEMP,0,CONST,24
:C )*elseif,_MODEL,eq,31,then
:C )*GET,_zx(37),EOS,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(38),EOS,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(39),EOS,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(40),EOS,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(41),EOS,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(42),EOS,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(43),EOS,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(44),EOS,_MODLOC,TEMP,0,CONST,8
:C )*GET,_zx(45),EOS,_MODLOC,TEMP,0,CONST,9
:C )*GET,_zx(46),EOS,_MODLOC,TEMP,0,CONST,10
:C )*GET,_zx(47),EOS,_MODLOC,TEMP,0,CONST,11
:C )*GET,_zx(48),EOS,_MODLOC,TEMP,0,CONST,12
:C )*GET,_zx(49),EOS,_MODLOC,TEMP,0,CONST,13
:C )*GET,_zx(50),EOS,_MODLOC,TEMP,0,CONST,14
:C )*GET,_zx(51),EOS,_MODLOC,TEMP,0,CONST,15
:C )*GET,_zx(52),EOS,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(53),EOS,_MODLOC,TEMP,0,CONST,17
:C )*GET,_zx(54),EOS,_MODLOC,TEMP,0,CONST,18
:C )*GET,_zx(55),EOS,_MODLOC,TEMP,0,CONST,19
:C )*GET,_zx(56),EOS,_MODLOC,TEMP,0,CONST,20
:C )*GET,_zx(57),EOS,_MODLOC,TEMP,0,CONST,21
:C )*GET,_zx(58),EOS,_MODLOC,TEMP,0,CONST,22
:C )*GET,_zx(59),EOS,_MODLOC,TEMP,0,CONST,23
:C )*elseif,_MODEL,eq,32,then
:C )*GET,_zx(60),EOS,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(61),EOS,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(62),EOS,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(63),EOS,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(64),EOS,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(65),EOS,_MODLOC,TEMP,0,CONST,17
:C )*GET,_zx(66),EOS,_MODLOC,TEMP,0,CONST,18
:C )*GET,_zx(67),EOS,_MODLOC,TEMP,0,CONST,19
:C )*GET,_zx(68),EOS,_MODLOC,TEMP,0,CONST,20
:C )*GET,_zx(69),EOS,_MODLOC,TEMP,0,CONST,21
:C )*GET,_zx(70),EOS,_MODLOC,TEMP,0,CONST,22
:C )*GET,_zx(71),EOS,_MODLOC,TEMP,0,CONST,23
:C )*GET,_zx(72),EOS,_MODLOC,TEMP,0,CONST,24
:C )*endif
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY29*KEY30*KEY31*KEY32)
:H Hlp_UI_mpanel
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
Fld_0
 K_FL(KEY30)
 Typ_Lab
 Prm_Define Material Model EOS: Johnson Cook - Linear Polynomial  
!
Fld_0
 K_FL(KEY31)
 Typ_Lab
 Prm_Define Material Model EOS: Johnson Cook - Gruneisen  
!
Fld_0
 K_FL(KEY32)
 Typ_Lab
 Prm_Define Material Model EOS: NULL - Linear Polynomial
! 
Fld_0
 K_FL(KEY29)
 Typ_Lab
 Prm_Define Material Model EOS: NULL - Gruneisen
! 
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                   DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus             EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio           NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_TB
 Fld_2
 Typ_Def_EOS
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 K_LN(KEY30*KEY31)
 Typ_Def_1
 K_LN(KEY29*KEY32)
 Typ_Def_2
 Fld_7
 K_LN(KEY30*KEY32)
 Typ_Def_1
 K_LN(KEY29*KEY31)
 Typ_Def_2
! 
Fld_0
 Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA]  Define data for TB table
!
Cmd_TBDAT
 Fld_2
  Typ_Def_1
 Fld_3
  K_LN(KEY30*KEY31)
  Prm_                            A
  K_LN(KEY32*KEY29)
  Prm_              Pressure Cutoff
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY29)
  Def_*PAR(_zx(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(13))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(37))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(60))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_2
 Fld_3
  K_LN(KEY30*KEY31)
  Prm_                            B
  K_LN(KEY32*KEY29)
  Prm_        Viscosity Coefficient
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY29)
  Def_*PAR(_zx(2))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(14))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(38))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(61))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_3
 Fld_3
  K_LN(KEY30*KEY31)
  Prm_                            N
  K_LN(KEY32*KEY29)
  Prm_    Relative volume - tension
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY29)
  Def_*PAR(_zx(3))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(15))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(39))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(62))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_4
 Fld_3
  K_LN(KEY30*KEY31)
  Prm_                            C
  K_LN(KEY32*KEY29)
  Prm_Relative volume - compression
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY29)
  Def_*PAR(_zx(4))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(16))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(40))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(63))
!
Cmd_TBDAT
 K_CM(KEY30*KEY31)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_                            M
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(17))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(41))
!
Cmd_TBDAT
 K_CM(KEY30*KEY31)
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_                    Melt Temp
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(18))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(42))
!
Cmd_TBDAT
 K_CM(KEY30*KEY31)
 Fld_2
  Typ_Def_7
 Fld_3
  Prm_                    Room Temp
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(19))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(43))
!
Cmd_TBDAT
 K_CM(KEY30*KEY31)
 Fld_2
  Typ_Def_8
 Fld_3
  Prm_                     Ef P1 SR
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(20))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(44))
!
Cmd_TBDAT
 K_CM(KEY30*KEY31)
 Fld_2
  Typ_Def_9
 Fld_3
  Prm_                Specific Heat
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(21))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(45))
!
Cmd_TBDAT
 K_CM(KEY30*KEY31)
 Fld_2
  Typ_Def_10
 Fld_3
  Prm_                  Fail Stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(22))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(46))
!
Cmd_TBDAT
 K_CM(KEY30*KEY31)
 Fld_2
  Typ_Def_11
 Fld_3
  Prm_                           D1
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(23))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(47))
!
Cmd_TBDAT
 K_CM(KEY30*KEY31)
 Fld_2
  Typ_Def_12
 Fld_3
  Prm_                           D2
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(24))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(48))
!
Cmd_TBDAT
 K_CM(KEY30*KEY31)
 Fld_2
  Typ_Def_13
 Fld_3
  Prm_                           D3
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(25))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(49))
!
Cmd_TBDAT
 K_CM(KEY30*KEY31)
 Fld_2
  Typ_Def_14
 Fld_3
  Prm_                           D4
  K_CM(KEY30*KEY31)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(26))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(50))
!
Cmd_TBDAT
 K_CM(KEY30*KEY31)
 Fld_2
  Typ_Def_15
 Fld_3
  Prm_                           D5
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(27))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(51))
!
Cmd_TBDAT
 K_CM(KEY30*KEY32)
 Fld_2
  Typ_Def_16
 Fld_3
  Prm_                           C0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(28))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(64))
!
Cmd_TBDAT
K_CM(KEY30*KEY32)
 Fld_2
  Typ_Def_17
 Fld_3
  Prm_                           C1
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(29))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(65))
!
Cmd_TBDAT
K_CM(KEY30*KEY32)
 Fld_2
  Typ_Def_18
 Fld_3
  Prm_                           C2
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(30))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(66))
!
Cmd_TBDAT
K_CM(KEY30*KEY32)
 Fld_2
  Typ_Def_19
 Fld_3
  Prm_                           C3
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(31))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(67))
!
Cmd_TBDAT
K_CM(KEY30*KEY32)
 Fld_2
  Typ_Def_20
 Fld_3
  Prm_                           C4
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(32))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(68))
!
Cmd_TBDAT
K_CM(KEY30*KEY32)
 Fld_2
  Typ_Def_21
 Fld_3
  Prm_                           C5
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(33))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(69))
!
Cmd_TBDAT
K_CM(KEY30*KEY32)
 Fld_2
  Typ_Def_22
 Fld_3
  Prm_                           C6
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(34))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(70))
!
Cmd_TBDAT
K_CM(KEY30*KEY32)
 Fld_2
  Typ_Def_23
 Fld_3
  Prm_                           EO
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(35))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(71))
!
Cmd_TBDAT
K_CM(KEY30*KEY32)
 Fld_2
  Typ_Def_24
 Fld_3
  Prm_                           VO
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY30)
  Def_*PAR(_zx(36))
  K_LN(MODEDIT+KEY32)
  Def_*PAR(_zx(72))
!
Cmd_TBDAT
K_CM(KEY29*KEY31)
 Fld_2
  Typ_Def_16
 Fld_3
  Prm_                            C
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY29)
  Def_*PAR(_zx(5))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(52))
!
Cmd_TBDAT
K_CM(KEY29*KEY31)
 Fld_2
  Typ_Def_17
 Fld_3
  Prm_                           S1
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY29)
  Def_*PAR(_zx(6))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(53))
!
Cmd_TBDAT
K_CM(KEY29*KEY31)
 Fld_2
  Typ_Def_18
 Fld_3
  Prm_                           S2
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY29)
  Def_*PAR(_zx(7))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(54))
!
Cmd_TBDAT
K_CM(KEY29*KEY31)
 Fld_2
  Typ_Def_19
 Fld_3
  Prm_                           S3
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY29)
  Def_*PAR(_zx(8))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(55))
!
Cmd_TBDAT
K_CM(KEY29*KEY31)
 Fld_2
  Typ_Def_20
 Fld_3
  Prm_                        GAMAO
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY29)
  Def_*PAR(_zx(9))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(56))
!
Cmd_TBDAT
K_CM(KEY31*KEY29)
 Fld_2
  Typ_Def_21
 Fld_3
  Prm_                            A
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY29)
  Def_*PAR(_zx(10))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(57))
!
Cmd_TBDAT
K_CM(KEY31*KEY29)
 Fld_2
  Typ_Def_22
 Fld_3
  Prm_ Initial relative energy E(0)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY29)
  Def_*PAR(_zx(11))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(58))
!
Cmd_TBDAT
K_CM(KEY31*KEY29)
 Fld_2
  Typ_Def_23
 Fld_3
  Prm_ Initial relative volume V(0)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY29)
  Def_*PAR(_zx(12))
  K_LN(MODEDIT+KEY31)
  Def_*PAR(_zx(59))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPEOS34 
:S   9011,  2425,  6579
:T Command
:C )! Fnc_MPEOS34
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )*IF,_EDCHK,GT,0,THEN
:C )*GET,_zx(1),EOS,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),EOS,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),EOS,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),EOS,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),EOS,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(6),EOS,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(7),EOS,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(8),EOS,_MODLOC,TEMP,0,CONST,8
:C )*GET,_zx(9),EOS,_MODLOC,TEMP,0,CONST,9
:C )*GET,_zx(10),EOS,_MODLOC,TEMP,0,CONST,10
:C )*GET,_zx(11),EOS,_MODLOC,TEMP,0,CONST,11
:C )*GET,_zx(12),EOS,_MODLOC,TEMP,0,CONST,12
:C )*GET,_zx(13),EOS,_MODLOC,TEMP,0,CONST,13
:C )*GET,_zx(14),EOS,_MODLOC,TEMP,0,CONST,14
:C )*GET,_zx(15),EOS,_MODLOC,TEMP,0,CONST,15
:C )*GET,_zx(16),EOS,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(17),EOS,_MODLOC,TEMP,0,CONST,17
:C )*GET,_zx(18),EOS,_MODLOC,TEMP,0,CONST,18
:C )*GET,_zx(19),EOS,_MODLOC,TEMP,0,CONST,19
:C )*GET,_zx(20),EOS,_MODLOC,TEMP,0,CONST,20
:C )*GET,_zx(21),EOS,_MODLOC,TEMP,0,CONST,21
:C )*GET,_zx(22),EOS,_MODLOC,TEMP,0,CONST,22
:C )*GET,_zx(23),EOS,_MODLOC,TEMP,0,CONST,23
:C )*GET,_zx(24),EOS,_MODLOC,TEMP,0,CONST,24
:C )*GET,_zx(25),EOS,_MODLOC,TEMP,0,CONST,25
:C )*GET,_zx(26),EOS,_MODLOC,TEMP,0,CONST,26
:C )*GET,_zx(27),EOS,_MODLOC,TEMP,0,CONST,27
:C )*GET,_zx(28),EOS,_MODLOC,TEMP,0,CONST,28
:C )*GET,_zx(29),EOS,_MODLOC,TEMP,0,CONST,29
:C )*GET,_zx(30),EOS,_MODLOC,TEMP,0,CONST,30
:C )*GET,_zx(31),EOS,_MODLOC,TEMP,0,CONST,31
:C )*GET,_zx(32),EOS,_MODLOC,TEMP,0,CONST,32
:C )*GET,_zx(33),EOS,_MODLOC,TEMP,0,CONST,33
:C )*GET,_zx(34),EOS,_MODLOC,TEMP,0,CONST,34
:C )*GET,_zx(35),EOS,_MODLOC,TEMP,0,CONST,35
:C )*GET,_zx(36),EOS,_MODLOC,TEMP,0,CONST,36
:C )*GET,_zx(37),EOS,_MODLOC,TEMP,0,CONST,37
:C )*GET,_zx(38),EOS,_MODLOC,TEMP,0,CONST,38
:C )*GET,_zx(39),EOS,_MODLOC,TEMP,0,CONST,39
:C )*GET,_zx(40),EOS,_MODLOC,TEMP,0,CONST,40
:C )*GET,_zx(41),EOS,_MODLOC,TEMP,0,CONST,41
:C )*GET,_zx(42),EOS,_MODLOC,TEMP,0,CONST,42
:C )*GET,_zx(43),EOS,_MODLOC,TEMP,0,CONST,43
:C )*GET,_zx(44),EOS,_MODLOC,TEMP,0,CONST,44
:C )*GET,_zx(45),EOS,_MODLOC,TEMP,0,CONST,45
:C )*GET,_zx(46),EOS,_MODLOC,TEMP,0,CONST,46
:C )*GET,_zx(47),EOS,_MODLOC,TEMP,0,CONST,47
:C )*GET,_zx(48),EOS,_MODLOC,TEMP,0,CONST,48
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY34)
:H Hlp_C_MP
:H Hlp_C_TB
:H Hlp_C_TBDATA
:H Hlp_E_S2.6
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
!
Fld_0
 Typ_Lab
 Prm_Define Material Model EOS: Johnson/Cook - Tabulated
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                   DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus             EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio           NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_TB
 Fld_2
 Typ_Def_EOS
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 Typ_Def_1
 Fld_7
 Typ_Def_3
! 
Fld_0
 Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA]  Define data for TB table
!
Cmd_TBDAT
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_                             A
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_                             B    
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_                             N
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_                             C
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_                             M 
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_                     Melt Temp
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(6))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_7
 Fld_3
  Prm_                     Room Temp
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(7))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_8
 Fld_3
  Prm_                      Ef P1 SR
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(8))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_9
 Fld_3
  Prm_                 Specific Heat
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(9))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_10
 Fld_3
  Prm_                   Fail Stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(10))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_11
 Fld_3
  Prm_                      D1,D2,D3
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(11)),*PAR(_zx(12)),*PAR(_zx(13))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_14
 Fld_3
  Prm_                         D4,D5
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(14)),*PAR(_zx(15))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_16
 Fld_3
  Prm_                         GAMMA
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(16))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_17
 Fld_3
  Prm_                            E0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(17))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_18
 Fld_3
  Prm_                            V0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(18))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_19
 Fld_3
  Prm_       epsilon(v1),epsilon(v2)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(19)),*PAR(_zx(20))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_21
 Fld_3
  Prm_       epsilon(v3),epsilon(v4)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(21)),*PAR(_zx(22))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_23
 Fld_3
  Prm_       epsilon(v5),epsilon(v6)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(23)),*PAR(_zx(24))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_25
 Fld_3
  Prm_       epsilon(v7),epsilon(v8)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(25)),*PAR(_zx(26))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_27
 Fld_3
  Prm_      epsilon(v9),epsilon(v10)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(27)),*PAR(_zx(28))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_29
 Fld_3
  Prm_                         C1,C2
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(29)),*PAR(_zx(30))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_31
 Fld_3
  Prm_                         C3,C4
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(31)),*PAR(_zx(32))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_33
 Fld_3
  Prm_                         C5,C6
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(33)),*PAR(_zx(34))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_35
 Fld_3
  Prm_                         C7,C8
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(35)),*PAR(_zx(36))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_37
 Fld_3
  Prm_                        C9,C10
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(37)),*PAR(_zx(38))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_39
 Fld_3
  Prm_                         T1,T2
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(39)),*PAR(_zx(40))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_41
 Fld_3
  Prm_                         T3,T4
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(41)),*PAR(_zx(42))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_43
 Fld_3
  Prm_                         T5,T6
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(43)),*PAR(_zx(44))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_45
 Fld_3
  Prm_                         T7,T8
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(45)),*PAR(_zx(46))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_47
 Fld_3
  Prm_                        T9,T10
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(47)),*PAR(_zx(48))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPEOS35 
:S   7167,  1935,  5225
:T Command
:C )! Fnc_MPEOS35
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )*IF,_EDCHK,GT,0,THEN
:C )*GET,_zx(1),EOS,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),EOS,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),EOS,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),EOS,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),EOS,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(6),EOS,_MODLOC,TEMP,0,CONST,17
:C )*GET,_zx(7),EOS,_MODLOC,TEMP,0,CONST,18
:C )*GET,_zx(8),EOS,_MODLOC,TEMP,0,CONST,19
:C )*GET,_zx(9),EOS,_MODLOC,TEMP,0,CONST,20
:C )*GET,_zx(10),EOS,_MODLOC,TEMP,0,CONST,21
:C )*GET,_zx(11),EOS,_MODLOC,TEMP,0,CONST,22
:C )*GET,_zx(12),EOS,_MODLOC,TEMP,0,CONST,23
:C )*GET,_zx(13),EOS,_MODLOC,TEMP,0,CONST,24
:C )*GET,_zx(14),EOS,_MODLOC,TEMP,0,CONST,25
:C )*GET,_zx(15),EOS,_MODLOC,TEMP,0,CONST,26
:C )*GET,_zx(16),EOS,_MODLOC,TEMP,0,CONST,27
:C )*GET,_zx(17),EOS,_MODLOC,TEMP,0,CONST,28
:C )*GET,_zx(18),EOS,_MODLOC,TEMP,0,CONST,29
:C )*GET,_zx(19),EOS,_MODLOC,TEMP,0,CONST,30
:C )*GET,_zx(20),EOS,_MODLOC,TEMP,0,CONST,31
:C )*GET,_zx(21),EOS,_MODLOC,TEMP,0,CONST,32
:C )*GET,_zx(22),EOS,_MODLOC,TEMP,0,CONST,33
:C )*GET,_zx(23),EOS,_MODLOC,TEMP,0,CONST,34
:C )*GET,_zx(24),EOS,_MODLOC,TEMP,0,CONST,35
:C )*GET,_zx(25),EOS,_MODLOC,TEMP,0,CONST,36
:C )*GET,_zx(26),EOS,_MODLOC,TEMP,0,CONST,37
:C )*GET,_zx(27),EOS,_MODLOC,TEMP,0,CONST,38
:C )*GET,_zx(28),EOS,_MODLOC,TEMP,0,CONST,39
:C )*GET,_zx(29),EOS,_MODLOC,TEMP,0,CONST,40
:C )*GET,_zx(30),EOS,_MODLOC,TEMP,0,CONST,41
:C )*GET,_zx(31),EOS,_MODLOC,TEMP,0,CONST,42
:C )*GET,_zx(32),EOS,_MODLOC,TEMP,0,CONST,43
:C )*GET,_zx(33),EOS,_MODLOC,TEMP,0,CONST,44
:C )*GET,_zx(34),EOS,_MODLOC,TEMP,0,CONST,45
:C )*GET,_zx(35),EOS,_MODLOC,TEMP,0,CONST,46
:C )*GET,_zx(36),EOS,_MODLOC,TEMP,0,CONST,47
:C )*GET,_zx(37),EOS,_MODLOC,TEMP,0,CONST,48
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY35)
:H Hlp_C_MP
:H Hlp_C_TB
:H Hlp_C_TBDATA
:H Hlp_E_S2.6
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
!
Fld_0
 Typ_Lab
 Prm_Define Material Model EOS: Null - Tabulated
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                   DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus             EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio           NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_TB
 Fld_2
 Typ_Def_EOS
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 Typ_Def_2
 Fld_7
 Typ_Def_3
! 
Fld_0
 Typ_Sep
! 
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA]  Define data for TB table
!
Cmd_TBDAT
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_               Pressure Cutoff
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_         Viscosity Coefficient
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_     Relative volume - tension
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_ Relative volume - compression
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_16
 Fld_3
  Prm_                         GAMMA
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_17
 Fld_3
  Prm_                            E0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(6))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_18
 Fld_3
  Prm_                            V0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(7))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_19
 Fld_3
  Prm_       epsilon(v1),epsilon(v2)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(8)),*PAR(_zx(9))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_21
 Fld_3
  Prm_       epsilon(v3),epsilon(v4)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(10)),*PAR(_zx(11))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_23
 Fld_3
  Prm_       epsilon(v5),epsilon(v6)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(12)),*PAR(_zx(13))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_25
 Fld_3
  Prm_       epsilon(v7),epsilon(v8)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(14)),*PAR(_zx(15))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_27
 Fld_3
  Prm_      epsilon(v9),epsilon(v10)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(16)),*PAR(_zx(17))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_29
 Fld_3
  Prm_                         C1,C2
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(18)),*PAR(_zx(19))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_31
 Fld_3
  Prm_                         C3,C4
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(20)),*PAR(_zx(21))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_33
 Fld_3
  Prm_                         C5,C6
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(22)),*PAR(_zx(23))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_35
 Fld_3
  Prm_                         C7,C8
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(24)),*PAR(_zx(25))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_37
 Fld_3
  Prm_                        C9,C10
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(26)),*PAR(_zx(27))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_39
 Fld_3
  Prm_                         T1,T2
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(28)),*PAR(_zx(29))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_41
 Fld_3
  Prm_                         T3,T4
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(30)),*PAR(_zx(31))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_43
 Fld_3
  Prm_                         T5,T6
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(32)),*PAR(_zx(33))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_45
 Fld_3
  Prm_                         T7,T8
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(34)),*PAR(_zx(35))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_47
 Fld_3
  Prm_                        T9,T10
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(36)),*PAR(_zx(37))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPEOS36
:S   7991,  1530,  6454
:T Command
:C )! Fnc_MPEOS36
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )*IF,_EDCHK,GT,0,THEN
:C )*GET,_zx(1),EOS,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),EOS,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),EOS,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),EOS,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),EOS,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(6),EOS,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(7),EOS,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(8),EOS,_MODLOC,TEMP,0,CONST,8
:C )*GET,_zx(9),EOS,_MODLOC,TEMP,0,CONST,9
:C )*GET,_zx(10),EOS,_MODLOC,TEMP,0,CONST,10
:C )*GET,_zx(11),EOS,_MODLOC,TEMP,0,CONST,11
:C )*GET,_zx(12),EOS,_MODLOC,TEMP,0,CONST,12
:C )*GET,_zx(13),EOS,_MODLOC,TEMP,0,CONST,13
:C )*GET,_zx(14),EOS,_MODLOC,TEMP,0,CONST,14
:C )*GET,_zx(15),EOS,_MODLOC,TEMP,0,CONST,15
:C )*GET,_zx(16),EOS,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(17),EOS,_MODLOC,TEMP,0,CONST,17
:C )*GET,_zx(18),EOS,_MODLOC,TEMP,0,CONST,18
:C )*GET,_zx(19),EOS,_MODLOC,TEMP,0,CONST,19
:C )*GET,_zx(20),EOS,_MODLOC,TEMP,0,CONST,20
:C )*GET,_zx(21),EOS,_MODLOC,TEMP,0,CONST,21
:C )*GET,_zx(22),EOS,_MODLOC,TEMP,0,CONST,22
:C )*GET,_zx(23),EOS,_MODLOC,TEMP,0,CONST,23
:C )*GET,_zx(24),EOS,_MODLOC,TEMP,0,CONST,24
:C )*GET,_zx(25),EOS,_MODLOC,TEMP,0,CONST,25
:C )*GET,_zx(26),EOS,_MODLOC,TEMP,0,CONST,26
:C )*GET,_zx(27),EOS,_MODLOC,TEMP,0,CONST,27
:C )*if,_MODEL,eq,36,then
:C )*GET,_zx(28),EOS,_MODLOC,TEMP,0,CONST,28
:C )*endif
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY36*KEY37)
:H Hlp_UI_mpanel
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
Fld_0
 K_FL(KEY36)
 Typ_Lab
 Prm_Define Material Model EOS: Zerelli/Armstrong - Linear Polynomial  
!
Fld_0
 K_FL(KEY37)
 Typ_Lab
 Prm_Define Material Model EOS: Zerelli/Armstrong - Gruneisen  
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                   DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus             EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio           NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_TB
 Fld_2
 Typ_Def_EOS
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 Typ_Def_3
 Fld_7
 K_LN(KEY36)
 Typ_Def_1
 K_LN(KEY37)
 Typ_Def_2
! 
Fld_0
 Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA]  Define data for TB table
!
Cmd_TBDAT
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_                Initial Strain
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_ Strain exponent for BCC mat'l    
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_              Room temperature    
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_         Pressure cutoff value
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_                    Spall type 
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_                            F1
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(6))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_7
 Fld_3
  Prm_                            F2
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(7))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_8
 Fld_3
  Prm_                            F3
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(8))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_9
 Fld_3
  Prm_                            F4
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(9))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_10
 Fld_3
  Prm_                            F5
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(10))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_11
 Fld_3
  Prm_                            F6
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(11))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_12
 Fld_3
  Prm_                Failure strain
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(12))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_13
 Fld_3
  Prm_                            B1
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(13))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_14
 Fld_3
  Prm_                            B2
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(14))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_15
 Fld_3
  Prm_                            B3
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(15))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_16
 Fld_3
  Prm_                            G1
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(16))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_17
 Fld_3
  Prm_                            G2
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(17))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_18
 Fld_3
  Prm_                            G3
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(18))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_19
 Fld_3
  Prm_                            G4
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(19))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_20
 Fld_3
  K_LN(KEY36)
  Prm_                            C0
  K_LN(KEY37)
  Prm_                             C
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(20))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_21
 Fld_3
  K_LN(KEY36)
  Prm_                            C1
  K_LN(KEY37)
  Prm_                            S1
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(21))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_22
 Fld_3
  K_LN(KEY36)
  Prm_                            C2
  K_LN(KEY37)
  Prm_                            S2
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(22))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_23
 Fld_3
  K_LN(KEY36)
  Prm_                            C3
  K_LN(KEY37)
  Prm_                            S3
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(23))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_24
 Fld_3
  K_LN(KEY36)
  Prm_                            C4
  K_LN(KEY37)
  Prm_                        GAMMA0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(24))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_25
 Fld_3
  K_LN(KEY36)
  Prm_                            C5
  K_LN(KEY37)
  Prm_                             A
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(25))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_26
 Fld_3
  K_LN(KEY36)
  Prm_                            C6
  K_LN(KEY37)
  Prm_                            E0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(26))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_27
 Fld_3
  K_LN(KEY36)
  Prm_                            E0
  K_LN(KEY37)
  Prm_                             V
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(27))
!
Cmd_TBDAT
 K_CM(KEY36)
 Fld_2
  Typ_Def_28
 Fld_3
  Prm_                            VO
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(28))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPEOS38 
:S   9145,  2568,  6570
:T Command
:C )! Fnc_MPEOS38
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )*IF,_EDCHK,GT,0,THEN
:C )*GET,_zx(1),EOS,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),EOS,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),EOS,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),EOS,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),EOS,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(6),EOS,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(7),EOS,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(8),EOS,_MODLOC,TEMP,0,CONST,8
:C )*GET,_zx(9),EOS,_MODLOC,TEMP,0,CONST,9
:C )*GET,_zx(10),EOS,_MODLOC,TEMP,0,CONST,10
:C )*GET,_zx(11),EOS,_MODLOC,TEMP,0,CONST,11
:C )*GET,_zx(12),EOS,_MODLOC,TEMP,0,CONST,12
:C )*GET,_zx(13),EOS,_MODLOC,TEMP,0,CONST,13
:C )*GET,_zx(14),EOS,_MODLOC,TEMP,0,CONST,14
:C )*GET,_zx(15),EOS,_MODLOC,TEMP,0,CONST,15
:C )*GET,_zx(16),EOS,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(17),EOS,_MODLOC,TEMP,0,CONST,17
:C )*GET,_zx(18),EOS,_MODLOC,TEMP,0,CONST,18
:C )*GET,_zx(19),EOS,_MODLOC,TEMP,0,CONST,19
:C )*GET,_zx(20),EOS,_MODLOC,TEMP,0,CONST,20
:C )*GET,_zx(21),EOS,_MODLOC,TEMP,0,CONST,21
:C )*GET,_zx(22),EOS,_MODLOC,TEMP,0,CONST,22
:C )*GET,_zx(23),EOS,_MODLOC,TEMP,0,CONST,23
:C )*GET,_zx(24),EOS,_MODLOC,TEMP,0,CONST,24
:C )*GET,_zx(25),EOS,_MODLOC,TEMP,0,CONST,25
:C )*GET,_zx(26),EOS,_MODLOC,TEMP,0,CONST,26
:C )*GET,_zx(27),EOS,_MODLOC,TEMP,0,CONST,27
:C )*GET,_zx(28),EOS,_MODLOC,TEMP,0,CONST,28
:C )*GET,_zx(29),EOS,_MODLOC,TEMP,0,CONST,29
:C )*GET,_zx(30),EOS,_MODLOC,TEMP,0,CONST,30
:C )*GET,_zx(31),EOS,_MODLOC,TEMP,0,CONST,31
:C )*GET,_zx(32),EOS,_MODLOC,TEMP,0,CONST,32
:C )*GET,_zx(33),EOS,_MODLOC,TEMP,0,CONST,33
:C )*GET,_zx(34),EOS,_MODLOC,TEMP,0,CONST,34
:C )*GET,_zx(35),EOS,_MODLOC,TEMP,0,CONST,35
:C )*GET,_zx(36),EOS,_MODLOC,TEMP,0,CONST,36
:C )*GET,_zx(37),EOS,_MODLOC,TEMP,0,CONST,37
:C )*GET,_zx(38),EOS,_MODLOC,TEMP,0,CONST,38
:C )*GET,_zx(39),EOS,_MODLOC,TEMP,0,CONST,39
:C )*GET,_zx(40),EOS,_MODLOC,TEMP,0,CONST,40
:C )*GET,_zx(41),EOS,_MODLOC,TEMP,0,CONST,41
:C )*GET,_zx(42),EOS,_MODLOC,TEMP,0,CONST,42
:C )*GET,_zx(43),EOS,_MODLOC,TEMP,0,CONST,43
:C )*GET,_zx(44),EOS,_MODLOC,TEMP,0,CONST,44
:C )*GET,_zx(45),EOS,_MODLOC,TEMP,0,CONST,45
:C )*GET,_zx(46),EOS,_MODLOC,TEMP,0,CONST,46
:C )*GET,_zx(47),EOS,_MODLOC,TEMP,0,CONST,47
:C )*GET,_zx(48),EOS,_MODLOC,TEMP,0,CONST,48
:C )*GET,_zx(49),EOS,_MODLOC,TEMP,0,CONST,49
:C )*GET,_zx(50),EOS,_MODLOC,TEMP,0,CONST,50
:C )*GET,_zx(51),EOS,_MODLOC,TEMP,0,CONST,51
:C )*GET,_zx(52),EOS,_MODLOC,TEMP,0,CONST,52
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY38)
:H Hlp_UI_mpanel
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
!
Fld_0
 Typ_Lab
 Prm_Define Material Model EOS: Zerelli/Armstrong - Tabulated
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                   DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus             EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio           NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_TB
 Fld_2
 Typ_Def_EOS
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 Typ_Def_3
 Fld_7
 Typ_Def_3
! 
Fld_0
 Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA]  Define data for TB table
!
Cmd_TBDAT
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_                Initial Strain
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_ Strain exponent for BCC mat'l    
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_              Room temperature    
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_         Pressure cutoff value
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_                    Spall type 
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_                      F1,F2,F3
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(6)),*PAR(_zx(7)),*PAR(_zx(8))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_9
 Fld_3
  Prm_                      F4,F5,F6
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(9)),*PAR(_zx(10)),*PAR(_zx(11))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_12
 Fld_3
  Prm_                Failure strain
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(12))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_13
 Fld_3
  Prm_                      B1,B2,B3
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(13)),*PAR(_zx(14)),*PAR(_zx(15))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_16
 Fld_3
  Prm_                         G1,G2
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(16)),*PAR(_zx(17))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_18
 Fld_3
  Prm_                         G3,G4
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(18)),*PAR(_zx(19))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_20
 Fld_3
  Prm_                         GAMMA
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(20))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_21
 Fld_3
  Prm_                            E0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(21))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_22
 Fld_3
  Prm_                            V0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(22))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_23
 Fld_3
  Prm_       epsilon(v1),epsilon(v2)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(23)),*PAR(_zx(24))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_25
 Fld_3
  Prm_       epsilon(v3),epsilon(v4)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(25)),*PAR(_zx(26))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_27
 Fld_3
  Prm_       epsilon(v5),epsilon(v6)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(27)),*PAR(_zx(28))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_29
 Fld_3
  Prm_       epsilon(v7),epsilon(v8)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(29)),*PAR(_zx(30))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_31
 Fld_3
  Prm_      epsilon(v9),epsilon(v10)
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(31)),*PAR(_zx(32))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_33
 Fld_3
  Prm_                         C1,C2
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(33)),*PAR(_zx(34))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_35
 Fld_3
  Prm_                         C3,C4
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(35)),*PAR(_zx(36))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_37
 Fld_3
  Prm_                         C5,C6
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(37)),*PAR(_zx(38))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_39
 Fld_3
  Prm_                         C7,C8
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(39)),*PAR(_zx(40))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_41
 Fld_3
  Prm_                        C9,C10
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(41)),*PAR(_zx(42))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_43
 Fld_3
  Prm_                         T1,T2
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(43)),*PAR(_zx(44))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_45
 Fld_3
  Prm_                         T3,T4
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(45)),*PAR(_zx(46))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_47
 Fld_3
  Prm_                         T5,T6
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(47)),*PAR(_zx(48))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_49
 Fld_3
  Prm_                         T7,T8
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(49)),*PAR(_zx(50))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_51
 Fld_3
  Prm_                        T9,T10
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(51)),*PAR(_zx(52))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPEOS42 
:S   7215,  1488,  5720
:T Command
:C )! Fnc_MPEOS42
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )*IF,_EDCHK,GT,0,THEN
:C )*GET,_zx(1),EOS,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),EOS,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),EOS,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),EOS,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),EOS,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(6),EOS,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(7),EOS,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(8),EOS,_MODLOC,TEMP,0,CONST,8
:C )*GET,_zx(9),EOS,_MODLOC,TEMP,0,CONST,9
:C )*GET,_zx(10),EOS,_MODLOC,TEMP,0,CONST,10
:C )*GET,_zx(11),EOS,_MODLOC,TEMP,0,CONST,11
:C )*GET,_zx(12),EOS,_MODLOC,TEMP,0,CONST,12
:C )*GET,_zx(13),EOS,_MODLOC,TEMP,0,CONST,13
:C )*GET,_zx(14),EOS,_MODLOC,TEMP,0,CONST,14
:C )*GET,_zx(15),EOS,_MODLOC,TEMP,0,CONST,15
:C )*GET,_zx(16),EOS,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(17),EOS,_MODLOC,TEMP,0,CONST,17
:C )*GET,_zx(18),EOS,_MODLOC,TEMP,0,CONST,18
:C )*GET,_zx(19),EOS,_MODLOC,TEMP,0,CONST,19
:C )*GET,_zx(20),EOS,_MODLOC,TEMP,0,CONST,20
:C )*GET,_zx(21),EOS,_MODLOC,TEMP,0,CONST,21
:C )*GET,_zx(22),EOS,_MODLOC,TEMP,0,CONST,22
:C )*GET,_zx(23),EOS,_MODLOC,TEMP,0,CONST,23
:C )*GET,_zx(24),EOS,_MODLOC,TEMP,0,CONST,24
:C )*GET,_zx(25),EOS,_MODLOC,TEMP,0,CONST,25
:C )*GET,_zx(26),EOS,_MODLOC,TEMP,0,CONST,26
:C )*GET,_zx(27),EOS,_MODLOC,TEMP,0,CONST,27
:C )*GET,_zx(28),EOS,_MODLOC,TEMP,0,CONST,28
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY42)
:H Hlp_UI_mpanel
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
!
Fld_0
 Typ_Lab
 Prm_Define Material Model EOS: Bamman
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                   DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus             EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio           NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_TB
 Fld_2
 Typ_Def_EOS
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 Typ_Def_4
! 
Fld_0
 Typ_Sep
! 
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA]  Define data for TB table
!
Cmd_TBDAT
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_           Initial Temperature
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_   Heat Generation Coefficient
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_                            C1
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_                            C2
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_                            C3
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_                            C4
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(6))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_7
 Fld_3
  Prm_                            C5
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(7))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_8
 Fld_3
  Prm_                            C6
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(8))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_9
 Fld_3
  Prm_                            C7
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(9))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_10
 Fld_3
  Prm_                            C8
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(10))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_11
 Fld_3
  Prm_                            C9
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(11))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_12
 Fld_3
  Prm_                           C10
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(12))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_13
 Fld_3
  Prm_                           C11
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(13))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_14
 Fld_3
  Prm_                           C12
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(14))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_15
 Fld_3
  Prm_                           C13
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(15))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_16
 Fld_3
  Prm_                           C14
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(16))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_17
 Fld_3
  Prm_                           C15
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(17))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_18
 Fld_3
  Prm_                           C16
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(18))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_19
 Fld_3
  Prm_                           C17
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(19))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_20
 Fld_3
  Prm_                           C18
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(20))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_21
 Fld_3
  Prm_                           C19
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(21))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_22
 Fld_3
  Prm_                           C20
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(22))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_23
 Fld_3
  Prm_                            A1
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(23))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_24
 Fld_3
  Prm_                            A2
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(24))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_25
 Fld_3
  Prm_                            A3
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(25))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_26
 Fld_3
  Prm_                            A4
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(26))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_27
 Fld_3
  Prm_                            A5
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(27))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_28
 Fld_3
  Prm_                            A6
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(28))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPEPLO
:S    117,    45,    65
:T Cmd
Inp_P
Cmd_/GCMD
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_ELEM
:E END
:! 
:N Fnc_MPFSPLOT
:S    959,   148,   788
:T Cmd
:C )! Fnc_MPFSPLOT
:A Plot Fatigue Stress
:D Plot Fatigue Stress
:H Hlp_C_FSPLOT
:K #(POST1+RESULTS)
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[FSPLOT] Plot Fatigue Stress
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_FSPLOT
 Fld_4
  Prm_NLOC  Location number
  Typ_int
  Def_1
 Fld_5
  Prm_NEV   Event number
  Typ_int
  Def_1
 Fld_6
  Prm_ITEM  Item to be plotted
  Typ_IDX
IDX_Total stresses  ,Direct        SX,1
IDX_Total stresses  ,              SY,2
IDX_Total stresses  ,              SZ,3
IDX_Total stresses  ,Shear        SXY,4
IDX_Total stresses  ,             SYZ,5
IDX_Total stresses  ,             SXZ,6
IDX_Membrane+bending,Direct        SX,8
IDX_Membrane+bending,              SY,9
IDX_Membrane+bending,              SZ,10
IDX_Membrane+bending,Shear        SXY,11
IDX_Membrane+bending,             SYZ,12
IDX_Membrane+bending,             SXZ,13
IDX_Temperature     ,Temperature TEMP,7
:E END OF Fnc_MPFSPLOT
:! 
:N Fnc_MPKEY1
:S    976,   967,     2
:T Command
:A Define MAT Model
:C )! Fnc_MPKEY1
:C )/NOPR
:C )keyw,key1,0
:C )keyw,key2,0
:C )keyw,key3,0
:C )keyw,key4,0
:C )keyw,key5,0
:C )keyw,key6,0
:C )keyw,key7,0
:C )keyw,key8,0
:C )keyw,key9,0
:C )keyw,key10,0
:C )keyw,key11,0
:C )keyw,key12,0
:C )keyw,key13,0
:C )keyw,key14,0
:C )keyw,key15,0
:C )keyw,key16,0
:C )keyw,key17,0
:C )keyw,key18,0
:C )keyw,key19,0
:C )keyw,key20,0
:C )keyw,key21,0
:C )keyw,key22,0
:C )keyw,key23,0
:C )keyw,key24,0
:C )keyw,key25,0
:C )keyw,key26,0
:C )keyw,key27,0
:C )keyw,key28,0
:C )keyw,key29,0
:C )keyw,key30,0
:C )keyw,key31,0
:C )keyw,key32,0
:C )keyw,key33,0
:C )keyw,key34,0
:C )keyw,key35,0
:C )keyw,key36,0
:C )keyw,key37,0
:C )keyw,key38,0
:C )keyw,key39,0
:C )keyw,key40,0
:C )keyw,key41,0
:C )keyw,key42,0
:C )keyw,key43,0
:C )keyw,key44,0
:C )keyw,key45,0
:C )keyw,key46,0
:C )keyw,key47,0
:C )keyw,key48,0
:C )keyw,key49,0
:C )keyw,key50,0
:C )keyw,key%_z(1)%,1
:C )/GO
!
:E END
:! 
:N Fnc_MPLIN
:S   3746,   332,  3407
:T Command
:C )! Fnc_MPLIN
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )*IF,_EDCHK,GT,0,THEN
:C )*IF,_MODEL,EQ,2,THEN
:C )*get,_z8,ORTHO,_MODLOC                    
:C )*ENDIF
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY1*KEY2*KEY5)
:H Hlp_UI_mplin
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
!
 Fld_0
  Typ_Lab
  K_LN(KEY1)
  Prm_[MP] Set Isotropic Material Model Values
  K_LN(KEY2)
  Prm_[MP] Set Orthotropic Material Model Values
  K_LN(KEY5)
  Prm_[MP] Set BLATZ-KO Rubber Material Model Values
!
Fld_0
 Typ_Sep
!
Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                    DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
K_CM(KEY1)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus              EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
K_CM(KEY2)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_4
  Typ_Def_EY
 Fld_5
  Typ_Def_EZ
 Fld_6
  Prm_Young's modulus        EX,EY,EZ 
  Typ_REAL3
  K_LN(modedit)
  Def_*GET(EX,_MPACT),*GET(EY,_MPACT),*GET(EZ,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC),*GET(EY,_MODLOC),*GET(EZ,_MODLOC)
!
Cmd_UIMP
K_CM(KEY5)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_GXY
 Fld_6
  Prm_Shear Modulus               GXY
  Typ_REAL                                                         
  K_LN(modedit)
  Def_*GET(GXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(GXY,_MODLOC)
!
!
Cmd_UIMP
 K_CM(KEY2)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_GXY
 Fld_4
  Typ_Def_GYZ
 Fld_5
  Typ_Def_GXZ
 Fld_6
  Prm_Shear Modulus     GXY, GYZ, GXZ
  Typ_REAL3
  K_LN(modedit)
  Def_*GET(GXY,_MPACT),*GET(GYZ,_MPACT),*GET(GXZ,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(GXY,_MODLOC),*GET(GYZ,_MODLOC),*GET(GXZ,_MODLOC)
!
Fld_0
  K_FL(KEY2)
  Prm_
!
Cmd_UIMP
 K_CM(KEY2)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_PRXY
 Fld_4
  Typ_Def_PRYZ
 Fld_5
  Typ_Def_PRXZ
 Fld_6
  Prm_Poisson's Ratio  PRXY,PRYZ,PRXZ
  Typ_REAL3
  K_LN(modedit)
  Def_*GET(PRXY,_MPACT),*GET(PRYZ,_MPACT),*GET(PRXZ,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(PRXY,_MODLOC),*GET(PRYZ,_MODLOC),*GET(PRXZ,_MODLOC)
!
 Fld_0
  K_FL(KEY2)
  Prm_           OR 
!
Cmd_UIMP
 K_CM(KEY1)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio            NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_UIMP
 K_CM(KEY2)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_4
  Typ_Def_NUYZ
 Fld_5
  Typ_Def_NUXZ
 Fld_6
  Prm_Poisson's Ratio  NUXY,NUYZ,NUXZ
  Typ_REAL3
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT),*GET(NUYZ,_MPACT),*GET(NUXZ,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC),*GET(NUYZ,_MODLOC),*GET(NUXZ,_MODLOC)
!
Cmd_EDMP
K_CM(KEY2)
 Fld_2
   Typ_Def_ORTHO
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_0
  Typ_Sep
!
Fld_4
  Prm_[EDMP] Coordinate System ID
  Typ_REAL
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_z8)
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPLIST
:S   2907,   147,  2753
:T Cmd
:C )! Fnc_MPLIST
:A Specified Matl, All Temps
:D List Specified Material at All Temps
:H Hlp_C_MPLIST
Cmd_MPLIST
 Fld_0
  Typ_Lab
  Prm_[MPLIST]  List Specified Material at All Temps
 Fld_5
  Prm_Lab  Material property
  Typ_IDX
  P_LN(LINPLUS)
  IDX_Elastic modulus ,EX              ,EX
  P_LN(LINPLUS)
  IDX_Elastic modulus ,EY              ,EY
  P_LN(LINPLUS)
  IDX_Elastic modulus ,EZ              ,EZ
  P_LN(LINPLUS)
  IDX_Therm expan coef,ALPX            ,ALPX
  P_LN(LINPLUS)
  IDX_Therm expan coef,ALPY            ,ALPY
  P_LN(LINPLUS)
  IDX_Therm expan coef,ALPZ            ,ALPZ
  P_LN(LINPLUS)
  IDX_Reference temp  ,REFT            ,REFT
  P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXY            ,PRXY
  P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRYZ            ,PRYZ
  P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXZ            ,PRXZ
  P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXY            ,NUXY
  P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUYZ            ,NUYZ
  P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXZ            ,NUXZ
  P_LN(LINPLUS)
  IDX_Shear modulus   ,GXY             ,GXY
  P_LN(LINPLUS)
  IDX_Shear modulus   ,GYZ             ,GYZ
  P_LN(LINPLUS)
  IDX_Shear modulus   ,GXZ             ,GXZ
  P_LN(LINPLUS)
  IDX_Damping multip  ,DAMP            ,DAMP
  P_LN(FULL_ANS)
  IDX_Friction coeff  ,MU              ,MU
  P_LN(LINPLUS*THERMAL*FLOTRAN)
  IDX_Density         ,DENS            ,DENS
  P_LN(THERMAL*FLOTRAN)
  IDX_Specific heat   ,C               ,C
  P_LN(THERMAL)
  IDX_Enthalpy        ,ENTH            ,ENTH
  P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KXX             ,KXX
  P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KYY             ,KYY
  P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KZZ             ,KZZ
  P_LN(THERMAL)
  IDX_Conv film coeff ,HF              ,HF
  P_LN(THERMAL)
  IDX_Emissivity      ,EMIS            ,EMIS
  P_LN(THERMAL)
  IDX_Heat gen rate   ,QRATE           ,QRATE
  P_LN(FULL_ANS)
  IDX_Viscosity       ,VISC            ,VISC
  P_LN(FULL_ANS)
  IDX_Sonic velocity  ,SONC            ,SONC
  P_LN(ELECMAG)
  IDX_Elec resistivity,RSVX            ,RSVX
  P_LN(ELECMAG)
  IDX_Elec resistivity,RSVY            ,RSVY
  P_LN(ELECMAG)
  IDX_Elec resistivity,RSVZ            ,RSVZ
  P_LN(ELECMAG)
  IDX_Elec permittivit,PERX            ,PERX
  P_LN(ELECMAG)
  IDX_Elec permittivit,PERY            ,PERY
  P_LN(ELECMAG)
  IDX_Elec permittivit,PERZ            ,PERZ
  P_LN(ELECMAG)
  IDX_Rel permeability,MURX            ,MURX
  P_LN(ELECMAG)
  IDX_Rel permeability,MURY            ,MURY
  P_LN(ELECMAG)
  IDX_Rel permeability,MURZ            ,MURZ
  P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGXX            ,MGXX
  P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGYY            ,MGYY
  P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGZZ            ,MGZZ
 Fld_0
  Typ_Sep
 Fld_2
  Prm_MAT1,MAT2,INC  Mat'l num range
  Typ_INT3
  Def_1,Blank,Blank
:E END
:! 
:N Fnc_MPLIST_all
:S    189,   165,    17
:T Cmd_N
:C )! Fnc_MPLIST_all
:A    List
:D List All Temperature-Dependent Material Properties
:K (lsdyna)
:H Hlp_C_MPLIST
Inp_P
Cmd_MPLIST
:E End
:! 
:N Fnc_MPLIST_evlt
:S    185,   150,    28
:T Cmd_N
:C )! Fnc_MPLIST_evlt
:A    List
:D List Constant-Temperature Material Properties
:H Hlp_C_MPLIST
Inp_P
Cmd_MPLIST,ALL,,,EVLT
:E End
:! 
:N Fnc_MPLIST_temp
:S    361,   157,   197
:T Cmd
:C )! Fnc_MPLIST_temp
:A All Matls, Specified Temp
:D List All Materials at Specified Temp
:H Hlp_C_MPLIST
Cmd_MPLIST
 Fld_2
  Typ_Def_ALL
 Fld_5
  Typ_Def_EVLT
 Fld_0
  Typ_Lab
  Prm_[MPLIST]  List All Materials at Specified Temperature
 Fld_6
  Typ_REAL
  Prm_TEVL  Temperature for listing
  Def_BLANK
:E End
:! 
:N Fnc_MPLib_3
:S    414,   233,   174
:T Cmd
:D Isotropic Material Properties
:C )!Fnc_MPLib_3
:C )! Define a property so MPDE always finds something to delete!
:C )/NOPR
:C )*IF,_z2,LE,_z3,THEN
:C )MPDEL,ALL,_z2
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)!
Cmd_*SET,ARG1
 K_CM(MPLFND)
 Fld_2
  Typ_Def_*PAR(_z2)
Cmd_/INPUT,ansuitmp,,,,1
 K_CM(MPLFND)
Cmd_)MPLIST,_z2,,,evlt
 K_CM(MPLFND)
K_LN(mplfnd)
Cal_Fnc_MPLib_NA
:E End
:! 
:N Fnc_MPLib_List
:S    488,   227,   254
:T Cmd_N
:C )! Fnc_MPLib_List
:C )/NOPR
:C )*del,_zpop
:C )*get,_zpop,common,,d3com2,,int,31
:C )/GO
:A List Material
:D List Imported Material
:K #(PREP7*SOLUTION)
:H Hlp_UI_mpliblist
Inp_P
Cmd_)/NOPR
Cmd_)/UIS,MSGPOP,3
Cmd_)/GO
Cmd_)/LWBEGIN,ansuitmp
Cmd_)$MPLIST
Fld_2
  Typ_Def_*GET(active,,mat)
Cmd_)$TBLIST,ALL
Fld_2
  Typ_Def_*GET(active,,mat)
Cmd_)/LWSHOW,ansuitmp
Cmd_)/NOPR
Cmd_)/UIS,MSGPOP
 Fld_2
  Typ_Def_*PAR(_zpop)
Cmd_)/GO
:E END
:! 
:N Fnc_MPLib_NA
:S    302,    98,   197
:T Cmd
:C )!Fnc_MPLib_NA
:D Isotropic Material Properties
Inp_P
Cmd_)/NOPR
Cmd_)*CREATE,ansuitmp
Cmd_)*MSG,WARN,_zc(1),_zc(2),_zc(3)
Cmd_)No properties have been defined for %c %c %/&
Cmd_)in the %c system of units
Cmd_)*END
Cmd_)/INPUT,ansuitmp
Cmd_)/GO
:E End
:! 
:N Fnc_MPLib_NA2
:S    246,   100,   139
:T Cmd
:C )!Fnc_MPLib_NA2
:D Isotropic Material Properties
Inp_P
Cmd_)/NOPR
Cmd_)*CREATE,ansuitmp
Cmd_)*MSG,WARN
Cmd_)This function can only be used in PREP7
Cmd_)*END
Cmd_)/INPUT,ansuitmp
Cmd_)/GO
:E End
:! 
:N Fnc_MPLib_Read
:S    267,   148,   112
:T Cmd
:C )! Fnc_MPlib_Read
:C )/NOPR
:C )_z1=0
:C )/GO
:A Import Library
:D Import Material Library File
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*GET(COMMON,,DOFCOM,,INT,61)
Cal_Fnc_MPLib_UNITS,2,lt,0
Cal_Fnc_MPLib_Read1,2,ge,0
:E END
:! 
:N Fnc_MPLib_Read1
:S   2163,  1698,   458
:T Cmd
:C )! Fnc_MPLib_Read1
:C )/NOPR
:C )*DEL,_zc
:C )*DEL,_zp
:C )*GET,_z0,COMMON,,DOFCOM,,INT,61
:C )*IF,_z0,EQ,-1,THEN
:C )*SET,_zc,'/*.UNDF*'
:C )*ELSEIF,_z0,EQ,0,THEN
:C )*SET,_zc,'/*.USER*'
:C )*ELSEIF,_z0,EQ,1,THEN
:C )*SET,_zc,'/*.SI_M*'
:C )*ELSEIF,_z0,EQ,2,THEN
:C )*SET,_zc,'/*.CGS_*'
:C )*ELSEIF,_z0,EQ,3,THEN
:C )*SET,_zc,'/*.BFT_*'
:C )*ELSEIF,_z0,EQ,4,THEN
:C )*SET,_zc,'/*.BIN_*'
:C )*ENDIF
:C )*IF,_z0,EQ,-1,THEN
:C )*SET,_zp,'\*.UNDF*'
:C )*ELSEIF,_z0,EQ,0,THEN
:C )*SET,_zp,'\*.USER*'
:C )*ELSEIF,_z0,EQ,1,THEN
:C )*SET,_zp,'\*.SI_M*'
:C )*ELSEIF,_z0,EQ,2,THEN
:C )*SET,_zp,'\*.CGS_*'
:C )*ELSEIF,_z0,EQ,3,THEN
:C )*SET,_zp,'\*.BFT_*'
:C )*ELSEIF,_z0,EQ,4,THEN
:C )*SET,_zp,'\*.BIN_*'
:C )*ENDIF
:C )*IF,_z0,EQ,-1,THEN
:C )*SET,_zv,'*.UNDF*'
:C )*ELSEIF,_z0,EQ,0,THEN
:C )*SET,_zv,'*.USER*'
:C )*ELSEIF,_z0,EQ,1,THEN
:C )*SET,_zv,'*.SI_M*'
:C )*ELSEIF,_z0,EQ,2,THEN
:C )*SET,_zv,'*.CGS_*'
:C )*ELSEIF,_z0,EQ,3,THEN
:C )*SET,_zv,'*.BFT_*'
:C )*ELSEIF,_z0,EQ,4,THEN
:C )*SET,_zv,'*.BIN_*'
:C )*ENDIF
:C )_z1=mpinqr(0,0,14)  !Get the maximum Mat'l Ref. Number
:C )_z1=_z1+1
:C )*GET,_z2,common,,mpcom,,chr8,159
:C )*IF,_z2,NE,'OFF',THEN
:C )*GET,_z3,common,,mpcom,,chr8,161
:C )*GET,_z4,common,,mpcom,,chr8,163
:C )*GET,_z5,common,,mpcom,,chr8,165
:C )*GET,_z6,common,,mpcom,,chr8,167
:C )*GET,_z7,common,,mpcom,,chr8,169
:C )*GET,_z8,common,,mpcom,,chr8,171
:C )*GET,_z9,common,,mpcom,,chr8,173
:C )*ELSE
:C )*SET,_z2,' '
:C )*SET,_z3,' '
:C )*SET,_z4,' '
:C )*SET,_z5,' '
:C )*SET,_z6,' '
:C )*SET,_z7,' '
:C )*SET,_z8,' '
:C )*SET,_z9,'.'
:C )*ENDIF
:C )!
:C )/GO
:A Import Library
:D Import Material Library File
:H Hlp_UI_mplibread
Inp_Noapply
! Exclude_from_paths
Cmd_MAT
 Fld_0
  Typ_Lab
  Prm_[MAT] [MPREAD] Import Material Library File
 Fld_2
  Prm_MAT     Read into material
  Typ_Int
  Def_*PAR(_z1)
 Fld_0
 Typ_Sep
Cmd_MPREAD
 Fld_2
  Prm_FILE    Material library file
  Typ_FILE
K_LN(intelnt+alphant)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zc%)
K_LN(INTELNT*ALPHANT)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zp%)
  Fld_5
    Typ_Def_LIB
Cal_Fnc_MPLib_List
:E END
:! 
:N Fnc_MPLib_UNITS
:S    718,   151,   560
:T Cmd
:C )! Fnc_MPLib_UNITS
:A Select Units
:D Select Filtering Units for Material Library
:H Hlp_C_/UNITS
Inp_NoApply
Cmd_)/UNITS
Fld_0
 Typ_Lab
 Prm_[/UNITS]  Select the UNITS system matching your model
Fld_0
 Typ_Lab
 Prm_(Note: The units must be selected to allow for proper filtering,
Fld_0 
 Typ_Lab
 Prm_       NO conversion is done by setting the units.)
Fld_2
 Typ_LIS_RADIOB
 Prm_Specify Working Units
 Lis_SI (MKS)   ,SI
 Lis_CGS        ,CGS
K_LN(pr_cfd+pr_elmag)*PR_MULTI
 Lis_BFT        ,BFT
K_LN(pr_cfd+pr_elmag)*PR_MULTI
 Lis_BIN        ,BIN
 Lis_USER       ,USER
Cmd_)!
 Fld_2
 Typ_Def_*PAR(_z1)
Cal_Fnc_MPLib_Read1,2,eq,0
Cal_Fnc_MPLib_Write1,2,eq,1
:E END
:! 
:N Fnc_MPLib_UNITS2
:S    231,   146,    78
:T Cmd
:C )! Fnc_MPLib_UNITS
:C )_z1=3
:A Select Units
:D Select Filtering Units for Material Library
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_2
 Typ_Def_3
Cmd_)/GO
Cal_Fnc_MPLib_UNITS
:E End
:! 
:N Fnc_MPLib_Write
:S    270,   150,   113
:T Cmd
:C )! Fnc_MPlib_Write
:C )/NOPR
:C )_z1=1
:C )/GO
:A Export Library
:D Export Material Library File
Inp_P
Cmd_)!
 Fld_2
 Typ_Def_*GET(COMMON,,DOFCOM,,INT,61)
Cal_Fnc_MPLib_UNITS,2,lt,0
Cal_Fnc_MPLib_Write1,2,ge,0
:E END
:! 
:N Fnc_MPLib_Write1
:S   2058,  1624,   427
:T Cmd
:C )! Fnc_MPLib_Write1
:C )/NOPR
:C )*DEL,_zc
:C )*DEL,_zp
:C )*GET,_z0,COMMON,,DOFCOM,,INT,61
:C )*IF,_z0,EQ,-1,THEN
:C )*SET,_zc,'/*.UNDF*'
:C )*ELSEIF,_z0,EQ,0,THEN
:C )*SET,_zc,'/*.USER*'
:C )*ELSEIF,_z0,EQ,1,THEN
:C )*SET,_zc,'/*.SI_M*'
:C )*ELSEIF,_z0,EQ,2,THEN
:C )*SET,_zc,'/*.CGS_*'
:C )*ELSEIF,_z0,EQ,3,THEN
:C )*SET,_zc,'/*.BFT_*'
:C )*ELSEIF,_z0,EQ,4,THEN
:C )*SET,_zc,'/*.BIN_*'
:C )*ENDIF
:C )*IF,_z0,EQ,-1,THEN
:C )*SET,_zp,'\*.UNDF*'
:C )*ELSEIF,_z0,EQ,0,THEN
:C )*SET,_zp,'\*.USER*'
:C )*ELSEIF,_z0,EQ,1,THEN
:C )*SET,_zp,'\*.SI_M*'
:C )*ELSEIF,_z0,EQ,2,THEN
:C )*SET,_zp,'\*.CGS_*'
:C )*ELSEIF,_z0,EQ,3,THEN
:C )*SET,_zp,'\*.BFT_*'
:C )*ELSEIF,_z0,EQ,4,THEN
:C )*SET,_zp,'\*.BIN_*'
:C )*ENDIF
:C )*IF,_z0,EQ,-1,THEN
:C )*SET,_zv,'*.UNDF*'
:C )*ELSEIF,_z0,EQ,0,THEN
:C )*SET,_zv,'*.USER*'
:C )*ELSEIF,_z0,EQ,1,THEN
:C )*SET,_zv,'*.SI_M*'
:C )*ELSEIF,_z0,EQ,2,THEN
:C )*SET,_zv,'*.CGS_*'
:C )*ELSEIF,_z0,EQ,3,THEN
:C )*SET,_zv,'*.BFT_*'
:C )*ELSEIF,_z0,EQ,4,THEN
:C )*SET,_zv,'*.BIN_*'
:C )*ENDIF
:C )*GET,_z2,common,,mpcom,,chr8,221
:C )*IF,_z2,NE,'OFF',THEN
:C )*GET,_z3,common,,mpcom,,chr8,223
:C )*GET,_z4,common,,mpcom,,chr8,225
:C )*GET,_z5,common,,mpcom,,chr8,227
:C )*GET,_z6,common,,mpcom,,chr8,229
:C )*GET,_z7,common,,mpcom,,chr8,231
:C )*GET,_z8,common,,mpcom,,chr8,233
:C )*GET,_z9,common,,mpcom,,chr8,235
:C )*ELSE
:C )*SET,_z2,' '
:C )*SET,_z3,' '
:C )*SET,_z4,' '
:C )*SET,_z5,' '
:C )*SET,_z6,' '
:C )*SET,_z7,' '
:C )*SET,_z8,' '
:C )*SET,_z9,'.'
:C )*ENDIF
:C )!
:C )/GO
:A Export Library
:D Export Material Library File
:H Hlp_C_MPWRITE
Inp_Noapply
Cmd_MPWRITE
 Fld_0
  Typ_Lab
  Prm_[MPWRITE] Export Material Library File
 Fld_2
  Prm_FILE    Material library file
  Typ_FILE_INLINE
K_LN(intelnt+alphant)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zc%)
K_LN(INTELNT*ALPHANT)
  Def_*STR(%_z2%%_z3%%_z4%%_z5%%_z6%%_z7%%_z8%%_z9%%_zp%)
  Fld_5
    Typ_Def_LIB
 Fld_0
 Typ_Sep
  Fld_6
  Prm_MAT Existing material to export
  Typ_INT
  Def_*GET(active,,mat)
:E END
:! 
:N Fnc_MPMATP
:S   3023,   123,  2893
:T Command
:C )! Fnc_MPPLOT
:A    Graph
:D Graph Material Properties
:H Hlp_C_MPPLOT
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[MPPLOT]  Graph Material Properties vs. Temperature
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_MPPL
 Fld_4
  Prm_Lab  Property to be graphed
  Typ_IDX
P_LN(LINPLUS)
  IDX_Elastic modulus ,EX              ,EX
P_LN(LINPLUS)
  IDX_Elastic modulus ,EY              ,EY
P_LN(LINPLUS)
  IDX_Elastic modulus ,EZ              ,EZ
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPX            ,ALPX
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPY            ,ALPY
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPZ            ,ALPZ
P_LN(LINPLUS)
  IDX_Reference temp  ,REFT            ,REFT
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXY            ,PRXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRYZ            ,PRYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXZ            ,PRXZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXY            ,NUXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUYZ            ,NUYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXZ            ,NUXZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXY             ,GXY
P_LN(LINPLUS)
  IDX_Shear modulus   ,GYZ             ,GYZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXZ             ,GXZ
P_LN(LINPLUS)
  IDX_Damping multip  ,DAMP            ,DAMP
P_LN(FULL_ANS)
  IDX_Friction coeff  ,MU              ,MU
P_LN(LINPLUS*THERMAL*FLOTRAN)
  IDX_Density         ,DENS            ,DENS
P_LN(THERMAL*FLOTRAN)
  IDX_Specific heat   ,C               ,C
P_LN(THERMAL)
  IDX_Enthalpy        ,ENTH            ,ENTH
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KXX             ,KXX
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KYY             ,KYY
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KZZ             ,KZZ
P_LN(THERMAL)
  IDX_Conv film coeff ,HF              ,HF
P_LN(THERMAL)
  IDX_Emissivity      ,EMIS            ,EMIS
P_LN(THERMAL)
  IDX_Heat gen rate   ,QRATE           ,QRATE
P_LN(FULL_ANS*FLOTRAN)
  IDX_Viscosity       ,VISC            ,VISC
P_LN(FULL_ANS)
  IDX_Sonic velocity  ,SONC            ,SONC
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVX            ,RSVX
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVY            ,RSVY
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVZ            ,RSVZ
P_LN(ELECMAG)
  IDX_Elec permittivit,PERX            ,PERX
P_LN(ELECMAG)
  IDX_Elec permittivit,PERY            ,PERY
P_LN(ELECMAG)
  IDX_Elec permittivit,PERZ            ,PERZ
P_LN(ELECMAG)
  IDX_Rel permeability,MURX            ,MURX
P_LN(ELECMAG)
  IDX_Rel permeability,MURY            ,MURY
P_LN(ELECMAG)
  IDX_Rel permeability,MURZ            ,MURZ
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGXX            ,MGXX
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGYY            ,MGYY
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGZZ            ,MGZZ
 Fld_5
  Typ_INT
  Prm_MAT        Material number
  Def_*GET(ACTIVE,,MAT)
 Fld_6
  Prm_TMIN,TMAX  Range of temp values
  Typ_REAL2
  Def_Blank,Blank
 Fld_7
  Prm_PMIN,PMAX  Range of prop values
  Typ_REAL2
  Def_Blank,Blank
:E END
:! 
:N Fnc_MPNOEP
:S    118,    45,    66
:T Cmd
Inp_P
Cmd_/GTYPE
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_ELEM
:E END
:! 
:N Fnc_MPOPLFA
:S   1392,   488,   882
:T Cmd
:C )! Fnc_MPOPLFA
:A Plot Results of Factorial Evaluation
:D Plot Results of Factorial Evaluation
:C )/NOPR
:C )*GET,_Z1,COMMON,,CMOPT,,INTE,13232     ! No. of SVs
:C )*GET,_Z2,COMMON,,CMOPT,,INTE,13234     ! Obj Fn key
:C )*IF,_Z1,EQ,0,THEN
:C ) KEYW,KEY1,0
:C )*ELSE
:C ) KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_Z2,EQ,0,THEN
:C ) KEYW,KEY2,0
:C )*ELSE
:C ) KEYW,KEY2,1
:C )*ENDIF
:C )*DEL,_Z1  $)*DEL,_Z2
:C )/GO
:H Hlp_C_OPLFA
:K #(POST1+RESULTS)
Cmd_/GCMD
 Fld_0
  Prm_ [OPLFA]  Display factorial analysis results
  Typ_Lab
 Fld_0
  Prm_           X-axis    Design variable interactions
  Typ_Lab
 Fld_0
  Prm_           Y-axis    Effect on a response quantity
  Typ_Lab
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_OPLFA
 Fld_4
  K_FL(KEY1+KEY2)
  Prm_ NAME     Y-axis SV or OBJ
  Typ_Lis
   Lis_*READ,SV
   Lis_*READ,OBJ
 Fld_4
  Prm_ NAME     Y-axis SV or OBJ
  K_FL(key1)
  Typ_Lis
   Lis_*READ,OBJ
 Fld_4
  K_FL(KEY1+key2)
  Prm_ NAME     Y-axis SV or OBJ
  Typ_Lis
   Lis_*READ,SV
 Fld_0
  Prm_
 Fld_5
  Prm_ EFFECT   Type of effect
  Typ_Lis_OptionB
   Lis_Main effect     ,MAIN
   Lis_2-Factor intertn,2FAC
   Lis_3-Factor intertn,3FAC
 Fld_6
  Prm_ EMIN     Min value of effect
  Typ_Char,8
 Fld_7
  Prm_ EMAX     Max value of effect
  Typ_Char,8
 Fld_0
  Prm_          (10 largest interactions will be shown)
  Typ_Lab
:E END OF Fnc_MPOPLFA
:! 
:N Fnc_MPOPLGR
:S   1150,   486,   642
:T Cmd
:C )! Fnc_MPOPLGR
:A Plot Results of Gradient Evaluation
:D Plot Results of Gradient Evaluation
:C )/NOPR
:C )*GET,_Z1,COMMON,,CMOPT,,INTE,13232     ! No. of SVs
:C )*GET,_Z2,COMMON,,CMOPT,,INTE,13234     ! Obj Fn key
:C )*IF,_Z1,EQ,0,THEN
:C ) KEYW,KEY1,0
:C )*ELSE
:C ) KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_Z2,EQ,0,THEN
:C ) KEYW,KEY2,0
:C )*ELSE
:C ) KEYW,KEY2,1
:C )*ENDIF
:C )*DEL,_Z1  $)*DEL,_Z2
:C )/GO
:H Hlp_C_OPLGR
:K #(POST1+RESULTS)
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[OPLGR] Display gradient evaluation results
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_OPLGR
 Fld_0
  Prm_           X-axis    (+/-) 1 percent change in DVs
  Typ_Lab
 Fld_0
  Prm_           Y-axis    Variation in a response quantity
  Typ_Lab
 Fld_5
  Prm_ DVNAM    X-axis DVs (up to 6)
  Typ_MLis
   Lis_*READ,DV
  Bnd_0.0,6.0
 Fld_0
  Prm_
 Fld_4
  Prm_ PNAME    Y-axis SV or OBJ
  K_FL(KEY1+KEY2)
  Typ_Lis
   Lis_*READ,SV
   Lis_*READ,OBJ
 Fld_4
  Prm_ PNAME    Y-axis SV or OBJ
  K_FL(key1)
  Typ_Lis
   Lis_*READ,OBJ
 Fld_4
  Prm_ PNAME    Y-axis SV or OBJ
  K_FL(KEY1+key2)
  Typ_Lis
   Lis_*READ,SV
:E END OF Fnc_MPOPLGR
:! 
:N Fnc_MPOPLSW
:S   1133,   472,   639
:T Cmd
:C )! Fnc_MPOPLSW
:A Plot Global Sweep Generation
:D Plot Global Sweep Generation
:C )/NOPR
:C )*GET,_Z1,COMMON,,CMOPT,,INTE,13232     ! No. of SVs
:C )*GET,_Z2,COMMON,,CMOPT,,INTE,13234     ! Obj Fn key
:C )*IF,_Z1,EQ,0,THEN
:C ) KEYW,KEY1,0
:C )*ELSE
:C ) KEYW,KEY1,1
:C )*ENDIF
:C )*IF,_Z2,EQ,0,THEN
:C ) KEYW,KEY2,0
:C )*ELSE
:C ) KEYW,KEY2,1
:C )*ENDIF
:C )*DEL,_Z1  $)*DEL,_Z2
:C )/GO
:H Hlp_C_OPLSW
:K #(POST1+RESULTS)
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[OPLSW]  Plot Global Sweep Generation
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_OPLSW
 Fld_0
  Prm_           X-axis    Normalized design variable ranges
  Typ_Lab
 Fld_0
  Prm_           Y-axis    Variation in a response quantity
  Typ_Lab
 Fld_5
  Prm_ DVNAM    X-axis DVs (up to 6)
  Typ_MLis
   Lis_*READ,DV
  Bnd_0.0,6.0
 Fld_0
  Prm_
 Fld_4
  Prm_ PNAME    Y-axis SV or OBJ
  K_FL(KEY1+KEY2)
  Typ_Lis
   Lis_*READ,SV
   Lis_*READ,OBJ
 Fld_4
  Prm_ PNAME    Y-axis SV or OBJ
  K_FL(key1)
  Typ_Lis
   Lis_*READ,OBJ
 Fld_4
  Prm_ PNAME    Y-axis SV or OBJ
  K_FL(KEY1+key2)
  Typ_Lis
  Lis_*READ,SV
:E END OF Fnc_MPOPLSW
:! 
:N Fnc_MPPLDI
:S    438,   173,   244
:T Cmd
:C )! Fnc_MPPLDI
:A Deformed Shape
:D Plot Deformed Shape
:H Hlp_C_PLDISP
:K (PR_STRUC*pr_set)
:K #(POST1+RESULTS)
:P (LINPLUS)
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[PLDISP]  Plot Deformed Shape
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_PLDI
 Fld_4
  Prm_KUND   Items to be plotted
  Typ_LIS_RADIOB
  LIS_Def shape only  ,0
  LIS_Def + undeformed,1
  LIS_Def + undef edge,2
:E END OF Fnc_MPPLDI
:! 
:N Fnc_MPPLES
:S  31018,   151, 30846
:T Cmd
:C )! Fnc_MPPLES
:A    Element Solu
:D Contour Element Solution Data
:H Hlp_UI_plesol
:K #(POST1+RESULTS)
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[PLESOL]  Contour Element Solution Data
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_PLES
 Fld_4
  K_FL(LSDYNA)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
!  
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!  
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!  
  P_LN(LINPLUS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
!  
  P_LN(LINPLUS)
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  P_LN(LINPLUS)
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  P_LN(LINPLUS)
  IDX_Geometry        ,           CENTY,CENT,Y
  P_LN(LINPLUS)
  IDX_Geometry        ,           CENTZ,CENT,Z
!
  P_LN(LINPLUS)
  Idx_By sequence num ,"SMISC,"
  P_LN(LINPLUS)
  Idx_By sequence num ,"NMISC,"
!  
 Fld_4
  K_FL(STRUCTRL+lsdyna+multifld)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!  
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!  
  P_LN(LINPLUS)
  IDX_Nodal force data,Struct force  FX,F,X
  P_LN(LINPLUS)
  IDX_Nodal force data,              FY,F,Y
  P_LN(LINPLUS)
  IDX_Nodal force data,              FZ,F,Z
  P_LN(LINPLUS)
  IDX_Nodal force data,Struct moment MX,M,X
  P_LN(LINPLUS)
  IDX_Nodal force data,              MY,M,Y
  P_LN(LINPLUS)
  IDX_Nodal force data,              MZ,M,Z
!  
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
  P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Strain enrg SENE,SENE,
  P_LN(LINPLUS)
  IDX_Energy          ,Kinetc enrg KENE,KENE,
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,SEND,ELAS
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,SEND,PLAS
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,SEND,CREE
!  
  P_LN(LINPLUS)
  IDX_Error estimation,StruErrEnrg SERR,SERR,
  P_LN(LINPLUS)
  IDX_Error estimation,Strs deviat SDSG,SDSG,
!  
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  IDX_Geometry        ,           CENTY,CENT,Y
  IDX_Geometry        ,           CENTZ,CENT,Z
!  
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!  
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!  
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!  
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!  
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO,
!
  P_LN(LINPLUS)
  IDX_Failure Criteria,Max Stress     SMAX,FAIL,SMAX
  P_LN(LINPLUS)
  IDX_Failure Criteria,Tsai-Wu Index  TWSI,FAIL,TWSI
  P_LN(LINPLUS)
  IDX_Failure Criteria,Tsai-Wu Ratio  TWSR,FAIL,TWSR
  P_LN(LINPLUS)
  IDX_Failure Criteria,Max Strain     EMAX,FAIL,EMAX
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!  
Fld_4
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!  
  P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,HEAT,
!  
  P_LN(THERMAL)
  IDX_Energy          ,Therm enrg  TENE,TENE,
!  
  P_LN(THERMAL)
  IDX_Error estimation,TherErrEnrg TERR,TERR,
  P_LN(THERMAL)
  IDX_Error estimation,Grad deviat TDSG,TDSG,
!  
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  IDX_Geometry        ,           CENTY,CENT,Y
  IDX_Geometry        ,           CENTZ,CENT,Z
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!  
Fld_4
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  P_FL(elecmag)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(THERMAL)
  IDX_Nodal force data,Elec currnt AMPS,AMPS,
  P_LN(LINPLUS)
  IDX_Energy          ,Mag energy  SENE,SENE,
  P_LN(THERMAL)
  IDX_Energy          ,Joule heat JHEAT,JHEAT,
  P_LN(LINPLUS)
  IDX_Energy          ,Elec energy SENE,SENE,
!
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  IDX_Geometry        ,           CENTY,CENT,Y
  IDX_Geometry        ,           CENTZ,CENT,Z
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!
Fld_4
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  P_FL(ELECMAG)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Flux & gradient ,              BY,B,Y
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Flux & gradient ,              BZ,B,Z
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Flux & gradient ,            BSUM,B,SUM
  K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC)*NOFILTER
  IDX_Flux & gradient ,Mag field     HX,H,X
  K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC)*NOFILTER
  IDX_Flux & gradient ,              HY,H,Y
  K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC)*NOFILTER
  IDX_Flux & gradient ,              HZ,H,Z
  K_LN((VECTORP*SCALARP)*EDGEFLX*EDGEELC)*NOFILTER
  IDX_Flux & gradient ,            HSUM,H,SUM
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,              DY,D,Y
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,              DZ,D,Z
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,            DSUM,D,SUM
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,             EFY,EF,Y
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,             EFZ,EF,Z
  K_LN((vectorp+scalarp+edgeflx)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
!  
  K_LN(edgeelc*NOFILTER)
  IDX_Current Density ,Total        JTX,JT,X
  K_LN(edgeelc*NOFILTER)
  IDX_Current Density ,             JTY,JT,Y
  K_LN(edgeelc*NOFILTER)
  IDX_Current Density ,             JTZ,JT,Z
  K_LN(edgeelc*NOFILTER)
  IDX_Current Density ,           JTSUM,JT,SUM
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Current Density ,Current dens JSX,JS,X
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Current Density ,             JSY,JS,Y
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Current Density ,             JSZ,JS,Z
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Current Density ,           JSSUM,JS,SUM
!  
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Reynold's number,Magnetic     MRE,MRE
!
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Nodal force data,           FMAGY,FMAG,Y
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  K_LN((VECTORP*SCALARP)*EDGEFLX+edgeelc)*NOFILTER
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Nodal force data,Elec currnt AMPS,AMPS,
!  
  IDX_Energy          ,Joule heat JHEAT,JHEAT,
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Energy          ,Elec energy SENE,SENE,
  K_LN(EDGEELC*NOFILTER)
  IDX_Energy          ,Poynting vect PX,P,X
  K_LN(EDGEELC*NOFILTER)
  IDX_Energy          ,              PY,P,Y
  K_LN(EDGEELC*NOFILTER)
  IDX_Energy          ,              PZ,P,Z
  K_LN(EDGEELC*NOFILTER)
  IDX_Energy          ,            PSUM,P,SUM
!  
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  IDX_Geometry        ,           CENTY,CENT,Y
  IDX_Geometry        ,           CENTZ,CENT,Z
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!  
Fld_4
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!  
  P_LN(FULL_ANS)
  IDX_Nodal force data,Flow rate   FLOW,FLOW,
  P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,HEAT,
!  
  P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Flow energy SENE,SENE,
!  
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  IDX_Geometry        ,           CENTY,CENT,Y
  IDX_Geometry        ,           CENTZ,CENT,Z
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!  
Fld_4
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!  
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!  
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,B,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,B,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,B,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,H,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,H,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,H,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,H,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,              DY,D,Y
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,              DZ,D,Z
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,            DSUM,D,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,             EFY,EF,Y
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,             EFZ,EF,Z
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,Total        JTX,JT,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,             JTY,JT,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,             JTZ,JT,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,           JTSUM,JT,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,Current dens JSX,JS,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,             JSY,JS,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,             JSZ,JS,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Current Density ,           JSSUM,JS,SUM
!  
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Reynold's number,Magnetic     MRE,MRE
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Nodal force data,Struct force  FX,F,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Nodal force data,              FY,F,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Nodal force data,              FZ,F,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Nodal force data,Struct moment MX,M,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Nodal force data,              MY,M,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Nodal force data,              MZ,M,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,HEAT,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,FMAG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag flux    FLUX,FLUX,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Curr segmt  CSGX,CSG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,            CSGY,CSG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,            CSGZ,CSG,Z
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_Nodal force data,Elec currnt AMPS,AMPS,
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Nodal force data,Flow rate   FLOW,FLOW,
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Nodal force data,Heat flow   HEAT,HEAT,
!  
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Strain enrg SENE,SENE,
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Energy          ,Kinetc enrg KENE,KENE,
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Energy          ,Therm enrg  TENE,TENE,
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Mag energy  SENE,SENE,
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_Energy          ,Joule heat JHEAT,JHEAT,
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Elec energy SENE,SENE,
  K_LN(lsdyna)
  P_LN(LINPLUS*ELECMAG)
  IDX_Energy          ,Flow energy SENE,SENE,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Energy          ,Poynting vect PX,P,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Energy          ,              PY,P,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Energy          ,              PZ,P,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Energy          ,            PSUM,P,SUM
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,SEND,ELAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,SEND,PLAS
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,SEND,CREE
!  
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Error estimation,StruErrEnrg SERR,SERR,
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Error estimation,TherErrEnrg TERR,TERR,
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Error estimation,Strs deviat SDSG,SDSG,
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Error estimation,Grad deviat TDSG,TDSG,
!  
  K_LN(lsdyna)
  IDX_Geometry        ,Elem volume VOLU,VOLU,
  IDX_Geometry        ,Elem loc   CENTX,CENT,X
  IDX_Geometry        ,           CENTY,CENT,Y
  IDX_Geometry        ,           CENTZ,CENT,Z
!  
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!  
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!  
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!  
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!  
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO,
!
  Idx_By sequence num ,"SMISC,"
  Idx_By sequence num ,"NMISC,"
!  
 Fld_0
  K_FL(MULTIFLD*STRUCTRL*LSDYNA*THERMAL*FLUID*ELECTRIC*MAGNETIC*CFD)
  Typ_Lab
  Prm_                               (For "By sequence num", enter sequence
 Fld_0
  Typ_Lab
  Prm_                                no. in Selection box.  See Table 4.xx-3
 Fld_0
  Typ_Lab
  Prm_                                in Elements Manual for seq. numbers.)
!
 Fld_5
  K_FL(cfd)
  Prm_KUND   Items to be plotted
  Typ_LIS_RADIOB
  LIS_Def shape only  ,0
  LIS_Def + undeformed,1
  LIS_Def + undef edge,2
!
 Fld_6
 K_FL(STRUCTRL*CFD)
  Prm_Fact  Optional scale factor
  Typ_REAL
  Def_1.0
!
Cmd_AVPRIN
K_CM(STRUCTRL)
 Fld_0
  Typ_Lab
  Prm_
 Fld_2
  Typ_Def_*GET(COMMON,,CPOST1,,INT,1)
 Fld_3
  Prm_[AVPRIN]  Eff NU for EQV strain
  Typ_REAL
  K_LN(KYAVPR)
  Def_*GET(COMMON,,CPOST1,,REAL,565)
:E END OF Fnc_MPPLES
:! 
:N Fnc_MPPLET
:S    477,   155,   315
:T Cmd
:C )! Fnc_MPPLET
:A Plot Elem Table
:D Contour Plot of Element Table Data
:H Hlp_C_PLETAB
:K #(POST1+RESULTS)
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[PLETAB]  Contour Element Table Data
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_PLET
 Fld_4
  Prm_Itlab   Item to be plotted
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_5
  Prm_Avglab  Average at common nodes?
  Typ_LIS_OPTIONB
  LIS_No  - do not avg ,NOAV
  LIS_Yes - average    ,AVG
:E END
:! 
:N Fnc_MPPLLS
:S    716,   170,   539
:T Command
:C )! Fnc_MPPLLS
:A    Line Elem Res
:D Plot Line-Element Results
:H Hlp_C_PLLS
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL)
Cmd_/GCMD
 Fld_0
  Prm_[PLLS]  Plot Line-Element Results
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_PLLS
 Fld_4
  Prm_LabI  Elem table item at node I
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_5
  Prm_LabJ  Elem table item at node J
  Typ_LIS_OPTIONB
  LIS_*READ,ETAB
 Fld_6
  Prm_Fact  Optional scale factor
  Typ_REAL
  Def_1.0
 Fld_7
 K_FL(STRUCTRL)
  Prm_KUND   Items to be plotted on
  Typ_LIS_RADIOB
  LIS_Undeformed shape,0
  LIS_Deformed shape  ,1
 Fld_8
  Prm_ViewUP Align With ViewUp Vector
  Typ_LIS_RADIOB
  LIS_NO,0
  LIS_YES,1
:E END
:! 
:N Fnc_MPPLNS
:S  32080,   293, 31766
:T Cmd
:C )! Fnc_MPPLNS
:C )*GET,_z10,common,,d3com,,int,132   ! PGrLevel (for /EFACET)
:C )*IF,_z10,LE,0,THEN
:C )_z10=1
:C )*ELSEIF,_z10,GE,3,THEN
:C )_z10=4
:C )*ENDIF
:A    Nodal Solu
:D Contour Nodal Solution Data
:H Hlp_C_PLNSOL
:K #(POST1+RESULTS)
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[PLNSOL]  Contour Nodal Solution Data
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_PLNS
 Fld_4
  K_FL(LSDYNA)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Acceleration  AX,A,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              AY,A,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              AZ,A,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ASUM,A,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            VSUM,V,SUM
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
!
 Fld_4
  K_FL(STRUCTRL+lsdyna+multifld)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,WARP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
  P_LN(LINPLUS)
  IDX_Strain ener dens,Elastic     ELAS,SEND,ELAS
  P_LN(LINPLUS)
  IDX_Strain ener dens,Plastic     PLAS,SEND,PLAS
  P_LN(LINPLUS)
  IDX_Strain ener dens,Creep       CREE,SEND,CREE
!
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Stress         GKS   X,GKS,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Total closure  GKD   X,GKD,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Mech closure   GKDI  X,GKDI,X
!
  K_LN((STRUCTRL)+(pmethod+flotran))
  P_LN(LINPLUS)
  Idx_Gasket          ,Therm closure  GKTH  X,GKTH,X
!
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO,
!
  P_LN(LINPLUS)
  IDX_Failure Criteria,Max Stress     SMAX,FAIL,SMAX
  P_LN(LINPLUS)
  IDX_Failure Criteria,Tsai-Wu Index  TWSI,FAIL,TWSI
  P_LN(LINPLUS)
  IDX_Failure Criteria,Tsai-Wu Ratio  TWSR,FAIL,TWSR
  P_LN(LINPLUS)
  IDX_Failure Criteria,Max Strain     EMAX,FAIL,EMAX
!
 Fld_4
  K_FL(THERMAL+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9 
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE10,TE10
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE11,TE11
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE12,TE12
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE13,TE13
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE14,TE14
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE15,TE15
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE16,TE16
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE17,TE17
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE18,TE18
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE19,TE19
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE20,TE20
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE21,TE21
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE22,TE22
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE23,TE23
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE24,TE24
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE25,TE25
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE26,TE26
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE27,TE27
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE28,TE28
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE29,TE29
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE30,TE30
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TE31,TE31
  K_LN(THERMAL+flotran)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP
!
!
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
 Fld_4
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  P_FL(elecmag)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(THERMAL)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
!
 Fld_4
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid+lsdyna)
  P_FL(ELECMAG)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,MagVectPoten  AX,A,X
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,              AY,A,Y
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,              AZ,A,Z
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,            ASUM,A,SUM
  K_LN((VECTORP*SCALARP*EDGEFLX)+edgeelc)*NOFILTER
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  K_LN((vectorp+scalarp+edgeflx+edgeelc))
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  K_LN((vectorp+scalarp+edgeflx+edgeelc))
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  K_LN((VECTORP*SCALARP)+edgeflx+edgeelc)*NOFILTER
  IDX_DOF solution    ,Current     CURR,CURR,
  K_LN((vectorp+scalarp+edgeflx+edgeelc))
  IDX_DOF solution    ,Current     CURR,CURR,
!
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,              BY,B,Y
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,              BZ,B,Z
  K_LN((VECTORP*SCALARP*EDGEFLX+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,            BSUM,B,SUM
  K_LN((VECTORP*SCALARP*EDGEFLX)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,Mag field     HX,H,X
  K_LN((VECTORP*SCALARP*EDGEFLX)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,              HY,H,Y
  K_LN((VECTORP*SCALARP*EDGEFLX)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,              HZ,H,Z
  K_LN((VECTORP*SCALARP*EDGEFLX)*EDGEELC*NOFILTER)
  IDX_Flux & gradient ,            HSUM,H,SUM
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,              DY,D,Y
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,              DZ,D,Z
  K_LN((vectorp+scalarp+edgeflx+edgeelc)*NOFILTER)
  IDX_Flux & gradient ,            DSUM,D,SUM
  K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
  IDX_Flux & gradient ,             EFY,EF,Y
  K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
  IDX_Flux & gradient ,             EFZ,EF,Z
  K_LN((vectorp+scalarp+edgeflx)*EDGELEC*NOFILTER)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
!
  K_LN(edgeelc*NOFILTER)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  K_LN(edgeelc*NOFILTER)
  IDX_Nodal force data,           FMAGY,FMAG,Y
  K_LN(edgeelc*NOFILTER)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  K_LN(edgeelc*NOFILTER)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
 Fld_4
  K_FL(FLUID+multifld+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
!
 Fld_4
  K_FL(CFD+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Displacement  UX,U,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  P_LN(FLOTRAN)
  IDX_Other quantities,Sp. Heat    SPHT,SPHT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Density     DENS,DENS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Viscosity   VISC,VISC,
  P_LN(FLOTRAN)
  IDX_Other quantities,Conductivit COND,COND,
  P_LN(FLOTRAN)
  IDX_Other quantities,SFTS Coeff  SFTS,SFTS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Viscos  EVIS,EVIS,
  P_LN(FLOTRAN)
  IDX_Other quantities,Eff Conduct ECON,ECON,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total temp  TTOT,TTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Strm func2D STRM,STRM,
  P_LN(FLOTRAN)
  IDX_Other quantities,PressurCoef PCOE,PCOE,
  P_LN(FLOTRAN)
  IDX_Other quantities,Mach number MACH,MACH,
  P_LN(FLOTRAN)
  IDX_Other quantities,Total pres  PTOT,PTOT,
  P_LN(FLOTRAN)
  IDX_Other quantities,Heat flux   HFLU,HFLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Film coeff  HFLM,HFLM,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb law Y+ YPLU,YPLU,
  P_LN(FLOTRAN)
  IDX_Other quantities,Wall shear  TAUW,TAUW,
  P_LN(FLOTRAN)
  IDX_Other quantities,Turb coeff  CMUV,CMUV,
 P_LN(FLOTRAN)
  IDX_Other quantities,Rad  flux   RDFL,RDFL,
!
 Fld_4
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID)+lsdyna)
  Prm_Item,Comp   Item to be contoured
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation   UX,U,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UY,U,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,              UZ,U,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,            USUM,U,SUM
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation    ROTX,ROT,X
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTY,ROT,Y
  P_LN(LINPLUS)
  IDX_DOF solution    ,            ROTZ,ROT,Z
  P_LN(LINPLUS)
  IDX_DOF solution    ,          ROTSUM,ROT,SUM
  P_LN(FULL_ANS)
  IDX_DOF solution    ,Warping     WARP,WARP,
  K_LN(lsdyna)
  P_LN(THERMAL*FLOTRAN)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagScalPoten MAG,MAG,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,MagVectPoten  AX,A,X
  K_LN(LSDYNA)
  IDX_DOF solution    ,Acceleration  AX,A,X
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AY,A,Y
  P_LN(ELECMAG)
  IDX_DOF solution    ,              AZ,A,Z
  P_LN(ELECMAG)
  IDX_DOF solution    ,            ASUM,A,SUM
  K_LN(lsdyna)
  P_LN(THERMAL*ELECMAG)
  IDX_DOF solution    ,Elec poten  VOLT,VOLT,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,EMF drop     EMF,EMF,
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_DOF solution    ,Current     CURR,CURR,
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity      VX,V,X
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VY,V,Y
  P_LN(FLOTRAN)
  IDX_DOF solution    ,              VZ,V,Z
  P_LN(FLOTRAN)
  IDX_DOF solution    ,            VSUM,V,SUM
  K_LN(lsdyna)
  P_LN(FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Pressure    PRES,PRES,
  K_LN(lsdyna)
  P_LN(THERMAL*FLOTRAN*FULL_ANS)
  IDX_DOF solution    ,Temperature TEMP,TEMP,
!
  P_LN(LINPLUS)
  IDX_Stress          ,X-direction   SX,S,X
  P_LN(LINPLUS)
  IDX_Stress          ,Y-direction   SY,S,Y
  P_LN(LINPLUS)
  IDX_Stress          ,Z-direction   SZ,S,Z
  P_LN(LINPLUS)
  IDX_Stress          ,XY-shear     SXY,S,XY
  P_LN(LINPLUS)
  IDX_Stress          ,YZ-shear     SYZ,S,YZ
  P_LN(LINPLUS)
  IDX_Stress          ,XZ-shear     SXZ,S,XZ
  P_LN(LINPLUS)
  IDX_Stress          ,1st principal S1,S,1
  P_LN(LINPLUS)
  IDX_Stress          ,2nd principal S2,S,2
  P_LN(LINPLUS)
  IDX_Stress          ,3rd principal S3,S,3
  P_LN(LINPLUS)
  IDX_Stress          ,Intensity   SINT,S,INT
  P_LN(LINPLUS)
  IDX_Stress          ,von Mises   SEQV,S,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,StressRatio SRAT,NL,SRAT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
  P_LN(LINPLUS)
  IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
  P_LN(LINPLUS)
  IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
  P_LN(LINPLUS)
  IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
  P_LN(LINPLUS)
  IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
  P_LN(LINPLUS)
  IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
  P_LN(LINPLUS)
  IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
  P_LN(LINPLUS)
  IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
  P_LN(LINPLUS)
  IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
  P_LN(LINPLUS)
  IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
  P_LN(LINPLUS)
  IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux TFX,TF,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFY,TF,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TFZ,TF,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TFSUM,TF,SUM
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad TGX,TG,X
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGY,TG,Y
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,             TGZ,TG,Z
  K_LN(lsdyna)
  P_LN(THERMAL)
  IDX_Flux & gradient ,           TGSUM,TG,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,MagFluxDens   BX,B,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BY,B,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              BZ,B,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            BSUM,B,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,Mag field     HX,H,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HY,H,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,              HZ,H,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Flux & gradient ,            HSUM,H,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,ElecFluxDens  DX,D,X
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,              DY,D,Y
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,              DZ,D,Z
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,            DSUM,D,SUM
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,Elec field   EFX,EF,X
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,             EFY,EF,Y
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,             EFZ,EF,Z
  K_LN(lsdyna)
  P_LN(ELECMAG*MULTDISC)
  IDX_Flux & gradient ,           EFSUM,EF,SUM
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressur grad PGX,PG,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGY,PG,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,             PGZ,PG,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,           PGSUM,PG,SUM
!
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,Mag force  FMAGX,FMAG,X
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGY,FMAG,Y
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,           FMAGZ,FMAG,Z
  K_LN(lsdyna)
  P_LN(ELECMAG)
  IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,Plast work  PLWK,NL,PLWK
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Energy          ,PlasStateVar PSV,NL,PSV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Applied ele temp,BFE,TEMP
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
  K_LN(lsdyna)
  P_LN(FULL_ANS)
  IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Status      STAT,CONT,STAT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Penetration PENE,CONT,PENE
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Gap         GAP ,CONT,GAP
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Pressure    PRES,CONT,PRES
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,TotalStress STOT,CONT,STOT
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,SlidingDist SLID,CONT,SLID
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Chattering  CNOS,CONT,CNOS
  K_LN(lsdyna)
  P_LN(FULL_ANS*PROFS)
  IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
  K_LN(lsdyna)
  P_LN(LINPLUS)
  IDX_Optimization    ,Topological TOPO,TOPO,
!
 Fld_0
  Prm_                                                                     .
!
 Fld_5
  Prm_KUND   Items to be plotted
  Typ_LIS_RADIOB
  LIS_Def shape only  ,0
  LIS_Def + undeformed,1
  LIS_Def + undef edge,2
!
 Fld_6
 K_FL(STRUCTRL)
  Prm_Fact  Optional scale factor
  Typ_REAL
  Def_1.0
!
Cmd_/EFACE
 Fld_2
  Prm_[/EFACET] Interpolation Nodes
  Typ_LIS_RADIOB
  LIS_ 1 Corner only     ,1
  LIS_ 2 Corner + midside,2
  LIS_ 4 All applicable  ,4
  Def_*PAR(_z10)
!
Cmd_AVPRIN
K_CM(STRUCTRL)
 Fld_0
  Typ_Lab
  Prm_
 Fld_2
  Typ_Def_*GET(COMMON,,CPOST1,,INT,1)
 Fld_3
  Prm_[AVPRIN]  Eff NU for EQV strain
  Typ_REAL
  K_LN(KYAVPR)
  Def_*GET(COMMON,,CPOST1,,REAL,565)
:E END OF Fnc_MPPLNS
:! 
:N Fnc_MPPLOT
:S   3301,   135,  3159
:T Command
:C )! Fnc_MPPLOT
:A    Graph
:D Graph Material Properties
:K (lsdyna)
:H Hlp_C_MPPLOT
Cmd_MPPLOT
 Fld_0
  Typ_Lab
  Prm_[MPPLOT]  Graph Material Properties vs. Temperature
 Fld_2
  Prm_Lab  Property to be graphed
  Typ_IDX
P_LN(LINPLUS)
  IDX_Elastic modulus ,EX              ,EX
P_LN(LINPLUS)
  IDX_Elastic modulus ,EY              ,EY
P_LN(LINPLUS)
  IDX_Elastic modulus ,EZ              ,EZ
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPX            ,ALPX
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPY            ,ALPY
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPZ            ,ALPZ
P_LN(LINPLUS)
  IDX_Reference temp  ,REFT            ,REFT
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXY            ,PRXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRYZ            ,PRYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXZ            ,PRXZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXY            ,NUXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUYZ            ,NUYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXZ            ,NUXZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXY             ,GXY
P_LN(LINPLUS)
  IDX_Shear modulus   ,GYZ             ,GYZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXZ             ,GXZ
P_LN(LINPLUS)
  IDX_Damping multip  ,DAMP            ,DAMP
P_LN(FULL_ANS)
  IDX_Friction coeff  ,MU              ,MU
P_LN(LINPLUS*THERMAL*FLOTRAN)
  IDX_Density         ,DENS            ,DENS
P_LN(THERMAL*FLOTRAN)
  IDX_Specific heat   ,C               ,C
P_LN(THERMAL)
  IDX_Enthalpy        ,ENTH            ,ENTH
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KXX             ,KXX
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KYY             ,KYY
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KZZ             ,KZZ
P_LN(THERMAL)
  IDX_Conv film coeff ,HF              ,HF
P_LN(THERMAL)
  IDX_Emissivity      ,EMIS            ,EMIS
P_LN(THERMAL)
  IDX_Heat gen rate   ,QRATE           ,QRATE
P_LN(FULL_ANS*FLOTRAN)
  IDX_Viscosity       ,VISC            ,VISC
P_LN(FULL_ANS)
  IDX_Sonic velocity  ,SONC            ,SONC
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVX            ,RSVX
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVY            ,RSVY
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVZ            ,RSVZ
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERX            ,PERX
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERY            ,PERY
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERZ            ,PERZ
P_LN(ELECMAG)
  IDX_Rel permeability,MURX            ,MURX
P_LN(ELECMAG)
  IDX_Rel permeability,MURY            ,MURY
P_LN(ELECMAG)
  IDX_Rel permeability,MURZ            ,MURZ
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGXX            ,MGXX
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGYY            ,MGYY
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGZZ            ,MGZZ
P_LN(ELECMAG)
  IDX_Loss tangent    ,LSST            ,LSST
P_LN(THERMAL*ELECMAG*FULL_ANS)
  IDX_Seebeck coeffs. ,SBKX            ,SBKX
P_LN(THERMAL*ELECMAG*FULL_ANS)
  IDX_Seebeck coeffs. ,SBKY            ,SBKY
P_LN(THERMAL*ELECMAG*FULL_ANS)
  IDX_Seebeck coeffs. ,SBKZ            ,SBKZ
 Fld_3
  Typ_INT
  Prm_MAT        Material number
  Def_*GET(ACTIVE,,MAT)
 Fld_4
  Prm_TMIN,TMAX  Range of temp values
  Typ_REAL2
  Def_Blank,Blank
 Fld_5
  Prm_PMIN,PMAX  Range of prop values
  Typ_REAL2
  Def_Blank,Blank
:E END
:! 
:N Fnc_MPPLPA
:S    355,   144,   190
:T Cmd
:C )! Fnc_MPPLPA
:A Plot Path Items
:D Path Plot of Path Items
:H Hlp_C_PLPATH
:K #(POST1+RESULTS)
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[PLPATH]  Path Plot
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_PLPA
 Fld_4
  Prm_Lab1-6  Path items to be graphed
  Typ_MLis
  LIS_*READ,PATH
  Bnd_0.0,6.0
:E END OF Fnc_MPPLPA
:! 
:N Fnc_MPPLSE
:S    906,   170,   729
:T Command
:C )! Fnc_MPPLSE
:A Linearized Strs
:D Path Plot of Linearized Stresses
:H Hlp_C_PLSECT
:K #(POST1+RESULTS)
:P (LINPLUS)
 Fld_0
typ_Lab
  Prm_[PLSECT]  Path Plot of Linearized Stresses
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_Item,Comp
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_PLSE
 Fld_4
  Prm_    Stress item to be linearized
  Typ_LIS_OPTIONB
   LIS_X-dir stress  SX,S,X
   LIS_Y-dir stress  SY,S,Y
   LIS_Z-dir stress  SZ,S,Z
   LIS_XY-shearStrs SXY,S,XY
   LIS_YZ-shearStrs SYZ,S,YZ
   LIS_XZ-shearStrs SXZ,S,XZ
   LIS_1st prinStrs  S1,S,1
   LIS_2nd prinStrs  S2,S,2
   LIS_3rd prinStrs  S3,S,3
   LIS_Strs Intens SINT,S,INT
   LIS_von Mises   SEQV,S,EQV
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_For axisymmetric models
 Fld_5
  Prm_  RHO  Avg radius of curvature
  Typ_REAL
  Def_Blank
 Fld_6
  Prm_  KBR  Ignore bending stresses?
  Typ_LOGI,No,Yes
:E END
:! 
:N Fnc_MPPLTR
:S   1792,   174,  1597
:T Cmd
:C )! Fnc_MPPLTR
:A    Plot Flow Tra
:D Plot Flow Trace
:H Hlp_C_PLTRAC
:K (lsdyna)
:K #(POST1+RESULTS+CFD)
:P (THERMAL*FLOTRAN)
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[PLTRAC]  Plot Flow Trace
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_PLTR
 Fld_4
  Typ_Def_FLUID
 Fld_5
  Prm_Item to be contoured along trace
  Typ_IDX
  IDX_DOF solution    ,None            ," "
  IDX_DOF solution    ,Temperature TEMP,TEMP,
  IDX_DOF solution    ,Velocity      VX,V,X
  IDX_DOF solution    ,              VY,V,Y
  IDX_DOF solution    ,              VZ,V,Z
  IDX_DOF solution    ,            VSUM,V,SUM
  IDX_DOF solution    ,Pressure    PRES,PRES,
  IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
  IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
!
  IDX_Other quantities,Sp. Heat    SPHT,SPHT,
  IDX_Other quantities,Density     DENS,DENS,
  IDX_Other quantities,Viscosity   VISC,VISC,
  IDX_Other quantities,Conductivit COND,COND,
  IDX_Other quantities,SFTS Coeff  SFTS,SFTS,
  IDX_Other quantities,Eff Viscos  EVIS,EVIS,
  IDX_Other quantities,Eff Conduct ECON,ECON,
  IDX_Other quantities,Total temp  TTOT,TTOT,
  IDX_Other quantities,Strm func2D STRM,STRM,
  IDX_Other quantities,PressurCoef PCOE,PCOE,
  IDX_Other quantities,Mach number MACH,MACH,
  IDX_Other quantities,Total pres  PTOT,PTOT,
  IDX_Other quantities,Turb coeff  CMUV,CMUV,
!
 Fld_10
  Prm_OPTION  Plot flow trace based on
  Typ_LIS_OPTIONB
  LIS_Undeformed Mesh  ,0
  LIS_Deformed Mesh    ,1
!
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_       Store trace path data in array parameters
 Fld_6
  Prm_Numtr  Valid trace point number
  Typ_Int
  Def_0
 Fld_7
  Prm_Name1  Array param. identifier
  Typ_Char,4,4
  Def_TRAC
 Fld_8
  Prm_Mxloop Max number of loops
  Typ_Int
  Def_25
!
:E END OF Fnc_MPPLTR
:! 
:N Fnc_MPPLVAp26
:S    733,   151,   575
:T Command
:C )! Fnc_MPPLVAp26
:A Graph Variables
:D Graph Time-History Variables
:K #(POST26)
:H Hlp_C_PLVAR
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[PLVAR]  Graph Time-History Variables
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_PLVAR
 Fld_4
  Prm_NVAR1   1st variable to graph
  Typ_int
 Fld_5
  Prm_NVAR2   2nd variable
  Typ_int
 Fld_6
  Prm_NVAR3   3rd variable
  Typ_int
 Fld_7
  Prm_NVAR4   4th variable
  Typ_int
 Fld_8
  Prm_NVAR5   5th variable
  Typ_int
 Fld_9
  Prm_NVAR6   6th variable
  Typ_int
 Fld_10
  Prm_NVAR7   7th variable
  Typ_int
 Fld_11
  Prm_NVAR8   8th variable
  Typ_int
 Fld_12
  Prm_NVAR9   9th variable
  Typ_int
 Fld_13
  Prm_NVAR10  10th variable
  Typ_int
:E END
:! 
:N Fnc_MPPLVE
:S   5222,   353,  4848
:T Cmd
:C )! Fnc_MPPLVE
:C )/NOPR
:C )*GET,_z1,GRAPH,,DISPLAY
:C )*IF,_z1,EQ,0,THEN
:C )_z2='RAST'
:C )*ELSE
:C )_z2='VECT'
:C )*ENDIF
:C )*DEL,_z
:C )*DIM,_z,,3,2
:C )*DEL,_zc
:C )*DIM,_zc,char,2
:C )_zc(1)='!','!'
:C )/GOP
:A    Predefined
:D Vector Plot of Predefined Vectors
:H Hlp_C_PLVECT
:K #(POST1+RESULTS)
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[PLVECT]  Vector Plot of Predefined Vectors
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_PLVE
 Fld_4
  K_FL(STRUCTRL+multifld+lsdyna)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation    U,U
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation     ROT,ROT
!  
  P_LN(LINPLUS)
  IDX_Stress          ,Principal      S,S
!  
  P_LN(LINPLUS)
  IDX_Strain-total    ,Principal   EPTO,EPTO
!  
  P_LN(LINPLUS)
  IDX_Strain-elastic  ,Principal   EPEL,EPEL
!  
  P_LN(LINPLUS)
  IDX_Strain-thermal  ,Principal   EPTH,EPTH
!  
  P_LN(FULL_ANS)
  IDX_Strain-plastic  ,Principal   EPPL,EPPL
!  
  P_LN(FULL_ANS)
  IDX_Strain-creep    ,Principal   EPCR,EPCR
!  
 Fld_4
  K_FL(THERMAL+multifld)
  P_FL(THERMAL)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  IDX_Flux & gradient ,Thermal flux  TF,TF
  IDX_Flux & gradient ,Thermal grad  TG,TG
!  
 Fld_4
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid)
  P_FL(ELECMAG)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  IDX_DOF solution    ,Mag vect poten A,A
!  
  IDX_Flux & gradient ,Mag flux dens  B,B
  IDX_Flux & gradient ,Mag field      H,H
  K_LN(ELECCOND|EDGEELC|NOFILTER)
  IDX_Flux & gradient ,Current dens  JC,JC
  K_LN(eleccond)
  IDX_Flux & gradient ,Elec flux dens D,D
  IDX_Flux & gradient ,Elec field    EF,EF
!  
  IDX_Energy          ,Poynting vect  P,P
!
  IDX_Nodal force data,Mag force   FMAG,FMAG
!  
  IDX_Current Density ,Total         JT,JT
  IDX_Current Density ,Cpl'd Source  JS,JS
!  
 Fld_4
  K_FL(FLUID+multifld)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity       V,V
!  
  P_LN(FULL_ANS)
  IDX_Flux & gradient ,Pressure grad PG,PG
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal flux  TF,TF
  P_LN(THERMAL)
  IDX_Flux & gradient ,Thermal grad  TG,TG
!  
 Fld_4
  K_FL(CFD)
  Prm_Item  Vector item to be plotted
  Typ_IDX
  P_LN(FLOTRAN)
  IDX_DOF solution    ,Velocity       V,V
!  
 Fld_4
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID*LSDYNA))
  Prm_Item  Vector item to be plotted
  Typ_IDX
  P_LN(LINPLUS)
  IDX_DOF solution    ,Translation    U,U
  P_LN(LINPLUS)
  IDX_DOF solution    ,Rotation     ROT,ROT
  P_LN(ELECMAG)
  K_LN((VECTORP*SCALARP+edgeflx+edgeelc+elem2d)*NOFILTER)
  K_LN(lsdyna)
  IDX_DOF solution    ,Mag vect poten A,A
  K_LN(LSDYNA)
  IDX_DOF solution    ,Nodal Accel    A,A
  P_LN(FLOTRAN*LSDYNA)
  IDX_DOF solution    ,Velocity       V,V
!  
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Stress          ,Principal      S,S
!  
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Strain-total    ,Principal   EPTO,EPTO
!  
  P_LN(THERMAL)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Thermal flux  TF,TF
  P_LN(THERMAL)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Thermal grad  TG,TG
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Mag flux dens  B,B
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Mag field      H,H
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Elec flux dens D,D
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Elec field    EF,EF
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Flux & gradient ,Pressure grad PG,PG
!  
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Nodal force data,Mag force   FMAG,FMAG
!
  K_LN(lsdyna)
  IDX_Current Density ,Total         JT,JT
  K_LN(lsdyna)
  IDX_Current Density ,Cpl'd Source  JS,JS
!  
  P_LN(ELECMAG)
  K_LN(lsdyna)
  IDX_Energy          ,Poynting vect  P,P
!  
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Strain-elastic  ,Principal   EPEL,EPEL
!  
  P_LN(LINPLUS)
  K_LN(lsdyna)
  IDX_Strain-thermal  ,Principal   EPTH,EPTH
!  
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Strain-plastic  ,Principal   EPPL,EPPL
!  
  P_LN(FULL_ANS)
  K_LN(lsdyna)
  IDX_Strain-creep    ,Principal   EPCR,EPCR
!  
 Fld_0
  Typ_Sep
 Fld_8
  Prm_Mode  Vector or Raster display
  Typ_Lis_OptionB
   Lis_Vector Mode,VECT
   Lis_Raster Mode,RAST
  Def_*PAR(_z2)
 Fld_9
  Prm_Loc  Vector location for results
  Typ_Lis_OptionB
   Lis_Elem Centroid,ELEM
   Lis_Elem Nodes   ,NODE
 Fld_10
  Prm_Edge Element edges
  Typ_Lis_OptionB
   Lis_Elem Outlines,OFF
   Lis_Edges only   ,ON
!
 Fld_0
  Typ_Sep
Cmd_)*SET,_z(1)
 Fld_0
  Typ_Lab
  Prm_[/VSCALE] Scaling of Vector Arrows
 Fld_2
  Prm_WN  Window Number
  Typ_LIS_OPTIONB
  LIS_All active wind ,6
  LIS_ Window 1       ,1
  LIS_ Window 2       ,2
  LIS_ Window 3       ,3
  LIS_ Window 4       ,4
  LIS_ Window 5       ,5
 Def_1
Cmd_)*CSET,1,1
 Fld_2
  Prm_VRATIO  Scale factor multiplier
  Typ_REAL
  Def_*GET(COMMON,,D3COM,,REAL,168)
Cmd_)*SET,_z(2)
 Fld_2
  Prm_KEY     Vector scaling will be
  Typ_LIS_OPTIONB
  LIS_Magnitude based  ,0
  LIS_Uniform          ,1
  Def_*GET(COMMON,,D3COM,,INT,193)
 Fld_3
  Typ_Def_1
!
 Fld_0
  Typ_Sep
Cmd_)*SET,_z7
 Fld_2
  Prm_OPTION  Vector plot based on
  Typ_LIS_OPTIONB
  LIS_Undeformed Mesh  ,0
  LIS_Deformed Mesh    ,1
Cal_Fnc_Pl_/VSCALE_A
:E END OF Fnc_MPPLVE
:! 
:N Fnc_MPPLVE_user
:S   1022,   290,   706
:T Command
:C )! Fnc_MPPLVE_user
:C )/NOPR
:C )*GET,_z1,GRAPH,,DISPLAY
:C )*IF,_z1,EQ,0,THEN
:C )_z2='RAST'
:C )*ELSE
:C )_z2='VECT'
:C )*ENDIF
:C )/GOP
:A    User-defined
:D Vector Plot of User-defined Vectors
:H Hlp_C_PLVECT
:K #(POST1+RESULTS)
 Fld_0
  Typ_Lab
  Prm_[PLVECT]  Vector Plot of User-defined Vectors
Cmd_/GCMD
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_PLVU
 Fld_4
  Prm_Item  I-component of vector
  Typ_CHAR,8
 Fld_5
  Prm_Lab2  J-component of vector
  Typ_CHAR,8
 Fld_6
  Prm_Lab3  K-component of vector
  Typ_CHAR,8
 Fld_0
  Typ_Sep
 Fld_7
  Prm_LabP  User label for resultant
  Typ_CHAR,8
 Fld_8
  Prm_Mode  Vector or Raster display
  Typ_Lis_OptionB
   Lis_Raster Mode,RAST
   Lis_Vector Mode,VECT
  Def_*PAR(_z2)
 Fld_9
  Prm_Loc  Vector location for results
  Typ_Lis_OptionB
   Lis_Elem Nodes   ,NODE
   Lis_Elem Centroid,ELEM
 Fld_10
  Prm_Edge Element edges
  Typ_Lis_OptionB
   Lis_Elem Outlines,OFF
   Lis_Edges only   ,ON
:E END OF Fnc_MPPLVE_user
:! 
:N Fnc_MPPlasHyd
:S   7600,  2301,  5292
:T Command
:C )! Fnc_MPPlasHyd
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )*IF,_EDCHK,GT,0,THEN
:C )*GET,_zx(1),PLAW,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),PLAW,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),PLAW,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),PLAW,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),PLAW,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(6),PLAW,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(7),PLAW,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(8),PLAW,_MODLOC,TEMP,0,CONST,8
:C )*GET,_zx(9),PLAW,_MODLOC,TEMP,0,CONST,9
:C )*GET,_zx(10),PLAW,_MODLOC,TEMP,0,CONST,10
:C )*GET,_zx(11),PLAW,_MODLOC,TEMP,0,CONST,11
:C )*GET,_zx(12),PLAW,_MODLOC,TEMP,0,CONST,12
:C )*GET,_zx(13),PLAW,_MODLOC,TEMP,0,CONST,13
:C )*GET,_zx(14),PLAW,_MODLOC,TEMP,0,CONST,14
:C )*GET,_zx(15),PLAW,_MODLOC,TEMP,0,CONST,15
:C )*GET,_zx(16),PLAW,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(17),PLAW,_MODLOC,TEMP,0,CONST,17
:C )*GET,_zx(18),PLAW,_MODLOC,TEMP,0,CONST,18
:C )*GET,_zx(19),PLAW,_MODLOC,TEMP,0,CONST,19
:C )*GET,_zx(20),PLAW,_MODLOC,TEMP,0,CONST,20
:C )*GET,_zx(21),PLAW,_MODLOC,TEMP,0,CONST,21
:C )*GET,_zx(22),PLAW,_MODLOC,TEMP,0,CONST,22
:C )*GET,_zx(23),PLAW,_MODLOC,TEMP,0,CONST,23
:C )*GET,_zx(24),PLAW,_MODLOC,TEMP,0,CONST,24
:C )*GET,_zx(25),PLAW,_MODLOC,TEMP,0,CONST,25
:C )*GET,_zx(26),PLAW,_MODLOC,TEMP,0,CONST,26
:C )*GET,_zx(27),PLAW,_MODLOC,TEMP,0,CONST,27
:C )*GET,_zx(28),PLAW,_MODLOC,TEMP,0,CONST,28
:C )*GET,_zx(29),PLAW,_MODLOC,TEMP,0,CONST,29
:C )*GET,_zx(30),PLAW,_MODLOC,TEMP,0,CONST,30
:C )*GET,_zx(31),PLAW,_MODLOC,TEMP,0,CONST,31
:C )*GET,_zx(32),PLAW,_MODLOC,TEMP,0,CONST,32
:C )*GET,_zx(33),PLAW,_MODLOC,TEMP,0,CONST,33
:C )*GET,_zx(34),PLAW,_MODLOC,TEMP,0,CONST,34
:C )*GET,_zx(35),PLAW,_MODLOC,TEMP,0,CONST,35
:C )*GET,_zx(36),PLAW,_MODLOC,TEMP,0,CONST,36
:C )*GET,_zx(37),PLAW,_MODLOC,TEMP,0,CONST,37
:C )*GET,_zx(38),PLAW,_MODLOC,TEMP,0,CONST,38
:C )*GET,_zx(39),PLAW,_MODLOC,TEMP,0,CONST,39
:C )*GET,_zx(40),PLAW,_MODLOC,TEMP,0,CONST,40
:C )*GET,_zx(41),PLAW,_MODLOC,TEMP,0,CONST,41
:C )*GET,_zx(42),PLAW,_MODLOC,TEMP,0,CONST,42
:C )*GET,_zx(43),PLAW,_MODLOC,TEMP,0,CONST,43
:C )*GET,_zx(44),PLAW,_MODLOC,TEMP,0,CONST,44
:C )*GET,_zx(45),PLAW,_MODLOC,TEMP,0,CONST,45
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY41)
:H Hlp_UI_mpanel
Inp_NoApply
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
!
Fld_0
 Typ_Lab
 Prm_Define Material Model: Elastic-Plastic Hydrodynamic
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                   DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus             EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_GXY
 Fld_6
  Prm_Shear modulus              GXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(GXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(GXY,_MODLOC)
!
Cmd_TB
 Fld_2
 Typ_Def_PLAW
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 Typ_Def_9
! 
Fld_0
 Typ_Sep
! 
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA]  Define data for TB table
!
Cmd_TBDAT
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_                  Yield stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_               Tangent modulus
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_               Pressure cutoff
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_               Failure Strain
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_    epsilon1,epsilon2,epsilon3
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5)),*PAR(_zx(6)),*PAR(_zx(7))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_8
 Fld_3
  Prm_    epsilon4,epsilon5,epsilon6
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(8)),*PAR(_zx(9)),*PAR(_zx(10))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_11
 Fld_3
  Prm_    epsilon7,epsilon8,epsilon9
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(11)),*PAR(_zx(12)),*PAR(_zx(13))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_14
 Fld_3
  Prm_ epsilon10,epsilon11,epsilon12
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(14)),*PAR(_zx(15)),*PAR(_zx(16))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_17
 Fld_3
  Prm_ epsilon13,epsilon14,epsilon15
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(17)),*PAR(_zx(18)),*PAR(_zx(19))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_20
 Fld_3
  Prm_                     epsilon16
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(20))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_21
 Fld_3
  Prm_          sigma1,sigma2,sigma3
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(21)),*PAR(_zx(22)),*PAR(_zx(23))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_24
 Fld_3
  Prm_          sigma4,sigma5,sigma6
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(24)),*PAR(_zx(25)),*PAR(_zx(26))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_27
 Fld_3
  Prm_          sigma7,sigma8,sigma9
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(27)),*PAR(_zx(28)),*PAR(_zx(29))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_30
 Fld_3
  Prm_       sigma10,sigma11,sigma12
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(30)),*PAR(_zx(31)),*PAR(_zx(32))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_33
 Fld_3
  Prm_       sigma13,sigma14,sigma15
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(33)),*PAR(_zx(34)),*PAR(_zx(35))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_36
 Fld_3
  Prm_                       sigma16
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(36))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_37
 Fld_3
  Prm_                      C0,C1,C2
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(37)),*PAR(_zx(38)),*PAR(_zx(39))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_40
 Fld_3
  Prm_                      C3,C4,C5
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(40)),*PAR(_zx(41)),*PAR(_zx(42))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_43
 Fld_3
  Prm_                            C6
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(43))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_44
 Fld_3
  Prm_                            E0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(44))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_45
 Fld_3
  Prm_                            V0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(45))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPREAD
:S    321,   230,    84
:T Command
:C )! Fnc_MPREAD
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),' '
:C )/GO
:A Read from File
:D Read Material Properties from File
:K #(PREP7*SOLUTION)
:H Hlp_C_MPREAD
Cmd_MPREAD
 Fld_2
  Typ_FILE
  Prm_[MPREAD]  Read material props
  Def_*PAR(_zc(1))
:E End
:! 
:N Fnc_MPTB
:S   8262,  1881,  6374
:T Command
:C )! Fnc_MPTB
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,33
:C )_zc(1)=' ',' ',' ',' ',' ','BISO',' ','MOONEY','HYPER'
:C )_zc(10)='PLAW',' ','FOAM','FOAM','COMP','FOAM','FOAM'
:C )_zc(17)='PLAW','EVISC','PLAW','PLAW ','PLAW'
:C )_zc(22)='PLAW','PLAW','PLAW'
:C )_zc(25)='HONE','COMP',' ','PLAW',' ',' ','COMP'
:C )_zc(32)='COMP','BKIN'
:C )*IF,_EDCHK,GT,0,THEN
:C )*if,_MODEL,eq,6,then
:C )*GET,_zx(1),BISO,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),BISO,_MODLOC,TEMP,0,CONST,2
:C )*elseif,_MODEL,eq,8,then
:C )*GET,_zx(1),MOON,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),MOON,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),MOON,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),MOON,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),MOON,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(6),MOON,_MODLOC,TEMP,0,CONST,6
:C )*elseif,_MODEL,eq,18,then
:C )*GET,_zx(1),EVISC,_MODLOC,TEMP,0,CONST,46
:C )*GET,_zx(2),EVISC,_MODLOC,TEMP,0,CONST,47
:C )*GET,_zx(3),EVISC,_MODLOC,TEMP,0,CONST,48
:C )*GET,_zx(4),EVISC,_MODLOC,TEMP,0,CONST,61
:C )*elseif,_MODEL,eq,17,then
:C )*GET,_zx(27),PLAW,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(28),PLAW,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(29),PLAW,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(30),PLAW,_MODLOC,TEMP,0,CONST,4
:C )*elseif,_MODEL,eq,19,then
:C )*GET,_zx(31),PLAW,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(32),PLAW,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(33),PLAW,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(34),PLAW,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(35),PLAW,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(36),PLAW,_MODLOC,TEMP,0,CONST,6
:C )*elseif,_MODEL,eq,21,then
:C )*GET,_zx(37),PLAW,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(38),PLAW,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(39),PLAW,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(40),PLAW,_MODLOC,TEMP,0,CONST,4
:C )*ENDIF
:C )*ENDIF
:C )/GOPR
:A Define MAT Model
:D Define Material Model
:K (KEY6*KEY8*KEY17*KEY18*KEY19*KEY21)
:H Hlp_UI_mpanel
Inp_NoApply
!
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
 Typ_Def_*PAR(_MPACT)
 Fld_3
 Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
Fld_0
 K_FL(modedit)
 Typ_Lab
 Prm_Define Material Model %_zc(_MODTYP)%
!
Fld_0
 K_FL(MODEDIT)
 Typ_Lab
 Prm_Define Material Model %_zc(_MODEL)%
!
!
! This is now available for Rev. 5.7  (lao)
! Fld_0
!  K_FL(KEY8)
!  Typ_Lab
!  Prm_NOTE: The *MOONEY command is not available via the GUI
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_3
  Typ_Def_DENS
!
 Fld_6
  Prm_Density                   DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
K_CM(key18+key8)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus             EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
K_CM(key18)
 Fld_2
  K_FL(modedit)
  Typ_Def_*PAR(_MPACT)
 Fld_2
  K_FL(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio           NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
! Filter out GXY for BISO model as per qt-15183  (lao)
! Cmd_UIMP
! K_CM(KEY6)
!  Fld_2
!   K_LN(modedit)
!   Typ_Def_*PAR(_MPACT)
!   K_LN(MODEDIT)
!   Typ_Def_*PAR(_MODLOC)
!  Fld_3
!   Typ_Def_GXY
!  Fld_6
!   Prm_Shear Modulus              GXY
!   Typ_REAL
!   K_LN(modedit)
!   Def_*GET(GXY,_MPACT)
!   K_LN(MODEDIT)
!   Def_*GET(GXY,_MODLOC)
!
Cmd_TB
 Fld_2
 K_FL(modedit)
 Typ_Def_*PAR(_zc(_MODTYP))
!
 Fld_2
 K_FL(MODEDIT)
 Typ_Def_*PAR(_zc(_MODEL))
!
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 K_FL(KEY8*KEY17*KEY19*KEY21)
 K_LN(KEY17)
 Typ_Def_4
 K_LN(KEY19)
 Typ_Def_1
 K_LN(KEY21)
 Typ_Def_2
 K_LN(KEY8+MODEDIT)
 Typ_Def_*PAR(_MOONOPT(_MODLOC))
 K_LN(KEY8+modedit)
 Typ_Def_*PAR(_MOONOPT(_MPACT))
! 
Fld_0
 Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA]  Define data for TB table
!
!
Cmd_TBDAT
K_CM(setmoon+KEY8)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Coefficient              C(10)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(setmoon+KEY8)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Coefficient              C(01)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Fld_0
K_FL(SETMOON+KEY8)
 Typ_Lab
 Prm_Calculate C(10) and C(01) using the following experimental data:
!
Cmd_TBDAT
K_CM(SETMOON+KEY8)
 Fld_2
 Typ_Def_3
 Fld_3
  Prm_Specimen gauge length
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
K_CM(SETMOON+KEY8)
 Fld_2
 Typ_Def_4
 Fld_3
  Prm_Specimen width
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
K_CM(SETMOON+KEY8)
 Fld_2
 Typ_Def_5
 Fld_3
  Prm_Specimen thickness
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_TBDAT
K_CM(SETMOON+KEY8)
 Fld_2
 Typ_Def_6
 Fld_3
  Prm_Load curve ID    LCID
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(6))
!
Cmd_TBDAT
K_CM(KEY6*KEY19)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Yield Stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY19)
  Def_*PAR(_zx(31))
  K_LN(MODEDIT+KEY6)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY6*KEY19)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Tangent Modulus
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT+KEY6)
  Def_*PAR(_zx(2))
  K_LN(MODEDIT+KEY19)
  Def_*PAR(_zx(32))
!
Cmd_TBDAT
K_CM(KEY19)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Hardening parameter   (beta)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(33))
!
Cmd_TBDAT
K_CM(KEY19)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Strain rate parameter    (C)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(34))
!
Cmd_TBDAT
K_CM(KEY19)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_Strain rate parameter    (P)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(35))
!
Cmd_TBDAT
K_CM(KEY19)
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_Failure strain       
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(36))
!
Cmd_TBDAT
K_CM(KEY21)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Strength coefficient   (k)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(37))
!
Cmd_TBDAT
K_CM(KEY21)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Hardening coefficient  (n)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(38))
!
Cmd_TBDAT
K_CM(KEY21)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Strain rate parameter  (C)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(39))
!
Cmd_TBDAT
K_CM(KEY21)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Strain rate parameter  (P)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(40))
!
Cmd_TBDAT
K_CM(KEY17)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Material constant            (k)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(27))
!
Cmd_TBDAT
K_CM(KEY17)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Hardening coefficient        (m)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(28))
!
Cmd_TBDAT
K_CM(KEY17)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Strain rate parameter        (n)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(29))
!
Cmd_TBDAT
K_CM(KEY17)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Initial strain rate
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(30))
!
Cmd_TBDAT
K_CM(KEY18)
 Fld_2
  Typ_Def_46
 Fld_3
  Prm_Elastic shear modulus - origin
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY18)
 Fld_2
  Typ_Def_47
 Fld_3
  Prm_Elastic shear modulus - infinity
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
K_CM(KEY18)
 Fld_2
  Typ_Def_48
 Fld_3
  Prm_Elastic bulk modulus
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
K_CM(KEY18)
 Fld_2
  Typ_Def_61
 Fld_3
  Prm_Reciprocal of Beta
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPTB2
:S  10018,  1957,  8054
:T Command
:C )! Fnc_MPTB2
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,33
:C )_zc(1)=' ',' ',' ',' ',' ','BISO',' ','MOONEY','HYPER'
:C )_zc(10)='PLAW',' ','FOAM','FOAM','COMP','FOAM','FOAM'
:C )_zc(17)='PLAW','EVISC','PLAW','PLAW ','PLAW'
:C )_zc(22)='PLAW','PLAW','PLAW'
:C )_zc(25)='HONE','COMP',' ','PLAW',' ',' ',' '
:C )_zc(32)=' ','BKIN'
:C )*IF,_EDCHK,GT,0,THEN
:C )*if,_MODEL,eq,25,then
:C )*GET,_zx(41),HONE,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(42),HONE,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(43),HONE,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(44),HONE,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(45),HONE,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(46),HONE,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(47),HONE,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(48),HONE,_MODLOC,TEMP,0,CONST,8
:C )*GET,_zx(49),HONE,_MODLOC,TEMP,0,CONST,9
:C )*GET,_zx(50),HONE,_MODLOC,TEMP,0,CONST,10
:C )*GET,_zx(51),HONE,_MODLOC,TEMP,0,CONST,11
:C )*GET,_zx(52),HONE,_MODLOC,TEMP,0,CONST,12
:C )*GET,_zx(53),HONE,_MODLOC,TEMP,0,CONST,13
:C )*GET,_zx(54),HONE,_MODLOC,TEMP,0,CONST,14
:C )*GET,_zx(55),HONE,_MODLOC,TEMP,0,CONST,15
:C )*GET,_zx(56),HONE,_MODLOC,TEMP,0,CONST,16
:C )*GET,_zx(57),HONE,_MODLOC,TEMP,0,CONST,17
:C )*elseif,_MODEL,eq,26,then
:C )*GET,_zx(1),COMP,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),COMP,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),COMP,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),COMP,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),COMP,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(6),COMP,_MODLOC,TEMP,0,CONST,6
:C )*elseif,_MODEL,eq,28,then
:C )*GET,_zx(45),PLAW,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(46),PLAW,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(47),PLAW,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(48),PLAW,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(49),PLAW,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(50),PLAW,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(51),PLAW,_MODLOC,TEMP,0,CONST,7
:C )*endif
:C )*endif
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY25*KEY26*KEY28)
:H Hlp_UI_mpanel
Inp_NoApply
!
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
 Typ_Def_*PAR(_MPACT)
 Fld_3
 Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
Fld_0
 K_FL(MODEDIT)
 Typ_Lab
 Prm_Set Values for Material Model %_zc(_MODEL)%
!
Fld_0
 K_FL(modedit)
 Typ_Lab
 Prm_Set Values for Material Model %_zc(_MODTYP)%
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_DENS
!
 Fld_6
  Prm_Density                    DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 K_CM(key26)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus              EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 K_CM(KEY26)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_4
  Typ_Def_EY
 Fld_5
  Typ_Def_EZ
 Fld_6
  Prm_Young's modulus        EX,EY,EZ 
  Typ_REAL3
  K_LN(modedit)
  Def_*GET(EX,_MPACT),*GET(EY,_MPACT),*GET(EZ,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC),*GET(EY,_MODLOC),*GET(EZ,_MODLOC)
!
Cmd_UIMP
 K_CM(KEY26)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_GXY
 Fld_4
  Typ_Def_GYZ
 Fld_5
  Typ_Def_GXZ
 Fld_6
  Prm_Shear Modulus     GXY, GYZ, GXZ
  Typ_REAL3
  K_LN(modedit)
  Def_*GET(GXY,_MPACT),*GET(GYZ,_MPACT),*GET(GXZ,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(GXY,_MODLOC),*GET(GYZ,_MODLOC),*GET(GXZ,_MODLOC)
!
Fld_0
  K_FL(KEY26)
  Prm_
!
Cmd_UIMP
 K_CM(KEY26)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_PRXY
 Fld_4
  Typ_Def_PRYZ
 Fld_5
  Typ_Def_PRXZ
 Fld_6
  Prm_Poisson's Ratio  PRXY,PRYZ,PRXZ
  Typ_REAL3
  K_LN(modedit)
  Def_*GET(PRXY,_MPACT),*GET(PRYZ,_MPACT),*GET(PRXZ,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(PRXY,_MODLOC),*GET(PRYZ,_MODLOC),*GET(PRXZ,_MODLOC)
!
 Fld_0
  K_FL(KEY26)
  Prm_           OR 
!
Cmd_UIMP
 K_CM(key26)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio            NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_UIMP
 K_CM(KEY26)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_4
  Typ_Def_NUYZ
 Fld_5
  Typ_Def_NUXZ
 Fld_6
  Prm_Poisson's Ratio  NUXY,NUYZ,NUXZ
  Typ_REAL3
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT),*GET(NUYZ,_MPACT),*GET(NUXZ,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC),*GET(NUYZ,_MODLOC),*GET(NUXZ,_MODLOC)
!
Cmd_)!
Fld_0
 Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA] Define data for TB table
!
Cmd_TB
 Fld_2
 K_FL(MODEDIT)
 Typ_Def_*PAR(_zc(_MODEL))
!
 Fld_2
 K_FL(modedit)
 Typ_Def_*PAR(_zc(_MODTYP))
!
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 K_FL(KEY28)
 Typ_Def_8
! 
Cmd_TBDAT
K_CM(KEY28)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Yield stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(45))
!
Cmd_TBDAT
K_CM(KEY28)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Tangent Modulus
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(46))
!
Cmd_TBDAT
K_CM(KEY28)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Effective plastic strain
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(47))
!
Cmd_TBDAT
K_CM(KEY28)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Strain rate parameter     (C)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(48))
!
Cmd_TBDAT
K_CM(KEY28)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_Strain rate parameter     (P)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(49))
!
Cmd_TBDAT
K_CM(KEY28)
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_Load curve ID (1)
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(50))
!
Cmd_TBDAT
K_CM(KEY28)
 Fld_2
  Typ_Def_7
 Fld_3
  Prm_Load curve ID (2)
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(51))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Yield stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(41))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Honeycomb volume
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(42))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Material viscosity coefficient
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(43))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Elastic modulus (aa direction)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(44))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_Elastic modulus (bb direction)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(45))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_Elastic modulus (cc direction)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(46))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_7
 Fld_3
  Prm_Shear modulus (ab direction)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(47))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_8
 Fld_3
  Prm_Shear modulus (bc direction)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(48))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_9
 Fld_3
  Prm_Shear modulus (ca direction)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(49))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_10
 Fld_3
  Prm_Load curve ID (aa direction)
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(50))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_11
 Fld_3
  Prm_Load curve ID (bb direction)
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(51))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_12
 Fld_3
  Prm_Load curve ID (cc direction)
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(52))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_13
 Fld_3
  Prm_Load curve ID (Shr yld/Rel vol)
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(53))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_14
 Fld_3
  Prm_Load curve ID (ab direction)
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(54))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_15
 Fld_3
  Prm_Load curve ID (bc direction)
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(55))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_16
 Fld_3
  Prm_Load curve ID (ca direction)
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(56))
!
Cmd_TBDAT
K_CM(KEY25)
 Fld_2
  Typ_Def_17
 Fld_3
  Prm_Load curve ID (Strain rate)
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(57))
!
Cmd_TBDAT
K_CM(KEY26)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Bulk modulus
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY26)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Shear strength
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
K_CM(KEY26)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Longitudinal tensile stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
K_CM(KEY26)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Transverse tensile strength
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
K_CM(KEY26)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_Transverse compressive strength
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_TBDAT
K_CM(KEY26)
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_Nonlinear shear stress parameter
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(6))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPTB2_moon
:S    656,   508,   141
:T Command
:C )! Fnc_MPTB2_moon
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,33
:C )_zc(1)=' ',' ',' ',' ',' ','BISO',' ','MOONEY','HYPER'
:C )_zc(10)='PLAW',' ','FOAM','FOAM','COMP','FOAM','FOAM'
:C )_zc(17)='PLAW','EVISC','PLAW','PLAW ','PLAW'
:C )_zc(22)='PLAW','PLAW','PLAW'
:C )_zc(25)='HONE','COMP',' ','PLAW',' ',' ','COMP'
:C )_zc(32)='COMP','BKIN'
:C )*if,_MOONOPT(_MODLOC),gt,0,then
:C )keyw,SETMOON,1
:C )*else
:C )keyw,SETMOON,0
:C )*endif
:C )/GO
:K (KEY8)
Inp_P
! 
Cmd_)TB
 Fld_2
 Typ_Def_*PAR(_zc(_MODEL))
!
 Fld_3
  Typ_Def_*PAR(_MODLOC)
!
 Fld_6
 Typ_Def_*PAR(_MOONOPT(_MODLOC))
!
Cal_Fnc_MPTB
:E END
:! 
:N Fnc_MPTB2a
:S   7450,  1795,  5648
:T Command
:C )! Fnc_MPTB2a
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,33
:C )_zc(1)=' ',' ',' ',' ',' ','BISO',' ','MOONEY','HYPER'
:C )_zc(10)='PLAW',' ','FOAM','FOAM','COMP','FOAM','FOAM'
:C )_zc(17)='PLAW','EVISC','PLAW','PLAW ','PLAW'
:C )_zc(22)='PLAW','PLAW','PLAW'
:C )_zc(25)='HONE','COMP',' ','PLAW',' ',' ',' '
:C )_zc(32)=' ','BKIN'
:C )*IF,_EDCHK,GT,0,THEN
:C )*if,_MODEL,eq,10,then
:C )*GET,_zx(41),PLAW,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(42),PLAW,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(43),PLAW,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(44),PLAW,_MODLOC,TEMP,0,CONST,4
:C )*elseif,_MODEL,eq,12,then
:C )*GET,_zx(1),FOAM,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),FOAM,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),FOAM,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),FOAM,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),FOAM,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(6),FOAM,_MODLOC,TEMP,0,CONST,6
:C )*elseif,_MODEL,eq,13,then
:C )*GET,_zx(7),FOAM,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(8),FOAM,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(9),FOAM,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(10),FOAM,_MODLOC,TEMP,0,CONST,4
:C )*elseif,_MODEL,eq,15,then
:C )*GET,_zx(11),FOAM,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(12),FOAM,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(13),FOAM,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(14),FOAM,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(15),FOAM,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(16),FOAM,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(17),FOAM,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(18),FOAM,_MODLOC,TEMP,0,CONST,8
:C )*elseif,_MODEL,eq,16,then
:C )*GET,_zx(19),FOAM,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(20),FOAM,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(21),FOAM,_MODLOC,TEMP,0,CONST,3
:C )*endif
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY10*KEY12*KEY13*KEY15*KEY16)
:H Hlp_UI_mpanel
Inp_NoApply
!
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
 Typ_Def_*PAR(_MPACT)
 Fld_3
 Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
Fld_0
 K_FL(MODEDIT)
 Typ_Lab
 Prm_Set Values for Material Model %_zc(_MODEL)%
!
Fld_0
 K_FL(modedit)
 Typ_Lab
 Prm_Set Values for Material Model %_zc(_MODTYP)%
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_DENS
!
 Fld_6
  Prm_Density                    DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus              EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 K_CM(key12+key15)
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio            NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_)!
Fld_0
 Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA] Define data for TB table
!
Cmd_TB
 Fld_2
 K_FL(MODEDIT)
 Typ_Def_*PAR(_zc(_MODEL))
!
 Fld_2
 K_FL(modedit)
 Typ_Def_*PAR(_zc(_MODTYP))
!
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 K_LN(KEY10) 
 Typ_Def_7
 K_LN(KEY12) 
 Typ_Def_1
 K_LN(KEY13) 
 Typ_Def_3
 K_LN(KEY15) 
 Typ_Def_2
 K_LN(KEY16) 
 Typ_Def_4
! 
Cmd_TBDAT
K_CM(KEY10)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Yield stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(41))
!
Cmd_TBDAT
K_CM(KEY10)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Tangent modulus
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(42))
!
Cmd_TBDAT
K_CM(KEY10)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Hardening parameter
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(43))
!
Cmd_TBDAT
K_CM(KEY10)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Load curve ID
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(44))
!
Cmd_TBDAT
K_CM(KEY12)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Yield stress constant      (a)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY12)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Yield stress constant      (b)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
K_CM(KEY12)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Yield stress constant      (c)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
K_CM(KEY12)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Initial foam pressure
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
K_CM(KEY12)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_Ratio of foam/polymer density
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_TBDAT
K_CM(KEY12)
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_Initial volumetric strain
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(6))
!
Cmd_TBDAT
K_CM(KEY15)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Load curve ID        LCID
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(11))
!
Cmd_TBDAT
K_CM(KEY15)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Tension cutoff stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(12))
!
Cmd_TBDAT
K_CM(KEY15)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Hysteretic unloading factor
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(13))
!
Cmd_TBDAT
K_CM(KEY15)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Decay constant
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(14))
!
Cmd_TBDAT
K_CM(KEY15)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_Viscous coefficient
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(15))
!
Cmd_TBDAT
K_CM(KEY15)
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_Shape unloading factor
  Typ_Int
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(16))
!
Cmd_TBDAT
K_CM(KEY15)
 Fld_2
  Typ_Def_7
 Fld_3
  Prm_Failure option
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(17))
!
Cmd_TBDAT
K_CM(KEY15)
 Fld_2
  Typ_Def_8
 Fld_3
  Prm_Bulk viscosity flag
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(18))
!
Cmd_TBDAT
K_CM(KEY13)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Elastic stiffness powerlaw
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(7))
!
Cmd_TBDAT
K_CM(KEY13)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Initial viscous coefficient
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(8))
!
Cmd_TBDAT
K_CM(KEY13)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Elastic stiffness
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(9))
!
Cmd_TBDAT
K_CM(KEY13)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Viscous coefficient powerlaw
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(10))
!
Cmd_TBDAT
K_CM(KEY16)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Load curve ID
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(19))
!
Cmd_TBDAT
K_CM(KEY16)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Tension cutoff value
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(20))
!
Cmd_TBDAT
K_CM(KEY16)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Viscous damping coefficient
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(21))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPTBPLOT
:S   2064,   920,  1121
:T Cmd
:C )! Fnc_MPTBPLOT
:A Plot Data Tables
:D Plot Data Tables
:C )/NOPR
:C )!
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,55
:C )!look_at_UtilList_TBLI_command_for_all_labels
:C )!only_valid_plot_labels_shown_here
:C )_zc(1)='BKIN','MKIN','MISO','BISO','ANISO','DP','ANAND','HYPER'
:C )_zc(9)='CREEP','SWELL','CONCR','MELAS','EVISC','ANEL','BH','PIEZ'
:C )_zc(17)='FAIL','WATER','PFLOW','USER','ALL',' ','NONE','MOONEY'
:C )_zc(25)='     ','    ','    ','PLAW','FOAM','HONE','COMP','KINH'
:C )_zc(33)='     ','    ','    ','    ','    ','CHAB','NLIS','    '
:C )_zc(41)='BOYC','DISC','    ','HILL','    ','9999','    ','    '
:C )_zc(49)='    ','    ','UNIA','    ','    ','    ','9998'
:C )!
:C )*get,_z8,common,,tblecm,,int,1  ! active table no.
:C )*if,_z8,le,0,then
:C )_z8=23
:C )*elseif,_z8,gt,55,then
:C )_z8=22
:C )*endif
:C )_z8=_zc(_z8)
:C )!
:C )/GO
:H Hlp_C_TBPLOT
:K #(PREP7)
Cmd_)/NOPR
Cmd_)*CSET,1,4
 Fld_0
  Typ_Lab
  Prm_[TBPLOT]  Graph Data Tables (stress-strain and B-H curves only)
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_TBPLOT
 Fld_4
  Prm_Lab  Type of data table
  Typ_LIS_OPTIONB
    P_LN(FULL_ANS)
   LIS_Bilin kinem BKIN,BKIN
    P_LN(FULL_ANS)
   LIS_Multi kinem MKIN,MKIN
    P_LN(FULL_ANS)
   LIS_Kin Harden  KINH,KINH
    P_LN(FULL_ANS)
   LIS_Multi isotr MISO,MISO
    P_LN(FULL_ANS)
   LIS_Bilin isotr BISO,BISO
    P_LN(FULL_ANS)
   LIS_Multi elas MELAS,MELAS
    P_LN(ELECMAG)
   LIS_MagField data BH,BH
    P_LN(FULL_ANS*ELECMAG)
   LIS_NU vs. B**2   NB,NB
    P_LN(FULL_ANS*ELECMAG)
   LIS_MU vs. H      MH,MH
    P_LN(FULL_ANS*ELECMAG)
   LIS_BH slope     SBH,SBH
    P_LN(FULL_ANS*ELECMAG)
   LIS_NB slope     SNB,SNB
    P_LN(FULL_ANS*ELECMAG)
   LIS_MH slope     SMH,SMH
    P_LN(FULL_ANS)
   LIS_Gasket      GASK,9999
    K_LN(BETA1)
   LIS_Joint       JOIN,9998
  Def_*PAR(_z8)
 Fld_5
  Typ_INT
  Prm_MAT  Material number
  Def_*GET(common,,tblecm,,int,2)
Cmd_)/GO
Cal_Fnc_MPTBPLOT_ex1,4,LT,9998,2
Cal_Fnc_MPTBPLOT_ex2,4,EQ,9999,2
Cal_Fnc_MPTBPLOT_ex3,4,EQ,9998,2
:E END OF Fnc_MPTBPLOT
:! 
:N Fnc_MPTBPLOT_ex1
:S    279,   152,   120
:T Cmd
:C )! Fnc_MPTBPLOT_ex1
:A Plot Data Tables
:D Plot Data Tables
:C )/NOPR
:H Hlp_C_TBPLOT
:K #(PREP7)
Inp_P
Cmd_/GCMD
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(3)
 Fld_5
  Typ_Def_*CPAR(4)
:E END
:! 
:N Fnc_MPTBPLOT_ex2
:S    642,   176,   459
:T Cmd
:C )! Fnc_MPTBPLOT_ex2
:C )/NOPR
:C )_zc99='   '
:C )/GO
:A Plot Data Tables
:D Plot Data Tables
:H Hlp_C_TBPLOT
:K #(PREP7)
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[TBPLOT]  Graph Data Tables (Gasket only)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_GASK
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Prm_Curve to graph
  Typ_Lis_OptionB
   Lis_Compression     ,COMP
   Lis_Linear Unloading,LUNL
   Lis_Nonlin Unloading,NUNL
   Lis_All             ,ALL
 Fld_7
  Prm_Temperature (Blank = All)
  Typ_REAL
  Def_Blank
 Fld_8
  Prm_Show segment numbers
  Typ_LOGI,No,Yes
  Def_No
:E END
:! 
:N Fnc_MPTBPLOT_ex3
:S    551,   176,   368
:T Cmd
:C )! Fnc_MPTBPLOT_ex3
:C )/NOPR
:C )_zc99='   '
:C )/GO
:A Plot Data Tables
:D Plot Data Tables
:H Hlp_C_TBPLOT
:K #(PREP7)
Cmd_/GCMD
 Fld_0
  Typ_Lab
  Prm_[TBPLOT]  Graph Data Tables (Joint only)
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_JOIN
 Fld_5
  Typ_Def_*CPAR(4)
 Fld_6
  Prm_Curve to graph
  Typ_Lis_OptionB
   Lis_Linear Stiffness,STIF
   Lis_Linear Damping  ,DAMP
   Lis_All             ,ALL
 Fld_7
  Prm_Temperature (Blank = All)
  Typ_REAL
  Def_Blank
:E END
:! 
:N Fnc_MPTB_moon
:S    804,   528,   269
:T Command
:C )! Fnc_MPTB_moon
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,33
:C )_zc(1)=' ',' ',' ',' ',' ','BISO',' ','MOONEY','HYPER'
:C )_zc(10)='PLAW',' ','FOAM','FOAM','COMP','FOAM','FOAM'
:C )_zc(17)='PLAW','EVISC','PLAW','PLAW ','PLAW'
:C )_zc(22)='PLAW','PLAW','PLAW'
:C )_zc(25)='HONE','COMP',' ','PLAW',' ',' ','COMP'
:C )_zc(32)='COMP','BKIN'
:C )/GOPR
:A Define Mooney-Rivlin Data Calculation Options
:D Define Mooney-Rivlin Data Calculation Options
:K (KEY8)
:H Hlp_UI_mpanel
Cmd_)/NOPR
Cmd_)*SET,_MOONOPT(_MPACT)
 Fld_2
  Prm_TBOPT  Define data using
  Typ_LIS_RadioB
  LIS_Direct Input    ,0
  LIS_Test Data Calcs ,2
! 
Cmd_)*if,_MOONOPT(_MPACT),gt,0,then
Cmd_)keyw,SETMOON,1
Cmd_)*else
Cmd_)keyw,SETMOON,0
Cmd_)*endif
Cmd_)/GO
!
Cal_Fnc_MPTB
:E END
:! 
:N Fnc_MPTBa
:S   7635,  1809,  5819
:T Command
:C )! Fnc_MPTBa
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,33
:C )_zc(1)=' ',' ',' ',' ',' ','BISO',' ','MOONEY','HYPER'
:C )_zc(10)='PLAW',' ','FOAM','FOAM','COMP','FOAM','FOAM'
:C )_zc(17)='PLAW','EVISC','PLAW','PLAW ','PLAW'
:C )_zc(22)='PLAW','PLAW','PLAW'
:C )_zc(25)='HONE','COMP',' ','PLAW',' ',' ','COMP'
:C )_zc(32)='COMP','BKIN'
:C )*IF,_EDCHK,GT,0,THEN
:C )*if,_MODEL,eq,22,then
:C )*GET,_zx(1),PLAW,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),PLAW,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),PLAW,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),PLAW,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),PLAW,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(6),PLAW,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(7),PLAW,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(8),PLAW,_MODLOC,TEMP,0,CONST,8
:C )*elseif,_MODEL,eq,23,then
:C )*GET,_zx(9),PLAW,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(10),PLAW,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(11),PLAW,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(12),PLAW,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(13),PLAW,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(14),PLAW,_MODLOC,TEMP,0,CONST,6
:C )*GET,_zx(15),PLAW,_MODLOC,TEMP,0,CONST,7
:C )*GET,_zx(16),PLAW,_MODLOC,TEMP,0,CONST,8
:C )*GET,_zx(17),PLAW,_MODLOC,TEMP,0,CONST,9
:C )*GET,_zx(18),PLAW,_MODLOC,TEMP,0,CONST,10
:C )*elseif,_MODEL,eq,24,then
:C )*GET,_zx(19),PLAW,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(20),PLAW,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(21),PLAW,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(22),PLAW,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(23),PLAW,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(24),PLAW,_MODLOC,TEMP,0,CONST,6
:C )*elseif,_MODEL,eq,33,then
:C )*GET,_zx(25),BKIN,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(26),BKIN,_MODLOC,TEMP,0,CONST,2
:C )*endif
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY22*KEY23*KEY24*KEY33)
:H Hlp_UI_mpanel
Inp_NoApply
!
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
 Typ_Def_*PAR(_MPACT)
 Fld_3
 Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
Fld_0
 K_FL(modedit)
 Typ_Lab
 Prm_Define Material Model %_zc(_MODTYP)%
!
Fld_0
 K_FL(MODEDIT)
 Typ_Lab
 Prm_Define Material Model %_zc(_MODEL)%
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_3
  Typ_Def_DENS
!
 Fld_6
  Prm_Density                   DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus             EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_FL(modedit)
  Typ_Def_*PAR(_MPACT)
 Fld_2
  K_FL(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio           NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_TB
 Fld_2
 K_FL(modedit)
 Typ_Def_*PAR(_zc(_MODTYP))
!
 Fld_2
 K_FL(MODEDIT)
 Typ_Def_*PAR(_zc(_MODEL))
!
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 K_FL(KEY22*KEY23*KEY24)
 K_LN(KEY22)
 Typ_Def_3
 K_LN(KEY23)
 Typ_Def_6
 K_LN(KEY24)
 Typ_Def_5
! 
Fld_0
 Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA]  Define data for TB table
!
Cmd_TBDAT
K_CM(KEY33)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Yield Stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(25))
!
Cmd_TBDAT
K_CM(KEY33)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Tangent Modulus
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(26))
!
Cmd_TBDAT
K_CM(KEY22)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Hardening rule type
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY22)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Tangent modulus / Strength coeff
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
K_CM(KEY22)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Yield stress / Hardening coeff
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
K_CM(KEY22)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Barlat exponent              (m)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
K_CM(KEY22)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_Width-thickness ratio (origin)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_TBDAT
K_CM(KEY22)
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_Width-thickness ratio (45 degs)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(6))
!
Cmd_TBDAT
K_CM(KEY22)
 Fld_2
  Typ_Def_7
 Fld_3
  Prm_Width-thickness ratio (90 degs)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(7))
!
Cmd_TBDAT
K_CM(KEY22)
 Fld_2
  Typ_Def_8
 Fld_3
  Prm_Orthotropic material axis (CSID)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(8))
!
Cmd_TBDAT
K_CM(KEY24)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_LCID 1
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(19))
!
Cmd_TBDAT
K_CM(KEY24)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Hardening modulus
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(20))
!
Cmd_TBDAT
K_CM(KEY24)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_LCID 2
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(21))
!
Cmd_TBDAT
K_CM(KEY24)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_LCID 3
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(22))
!
Cmd_TBDAT
K_CM(KEY24)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_LCID 4
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(23))
!
Cmd_TBDAT
K_CM(KEY24)
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_Minimum time step size
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(24))
!
Cmd_TBDAT
K_CM(KEY23)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Strength coefficient         (k)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(9))
!
Cmd_TBDAT
K_CM(KEY23)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Initial strain            (EPS0)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(10))
!
Cmd_TBDAT
K_CM(KEY23)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Hardening coefficient        (n)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(11))
!
Cmd_TBDAT
K_CM(KEY23)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Flow potential exponent      (m)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(12))
!
Cmd_TBDAT
K_CM(KEY23)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_Anisotropic material const   (a)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(13))
!
Cmd_TBDAT
K_CM(KEY23)
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_Anisotropic material const   (b)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(14))
!
Cmd_TBDAT
K_CM(KEY23)
 Fld_2
  Typ_Def_7
 Fld_3
  Prm_Anisotropic material const   (c)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(15))
!
Cmd_TBDAT
K_CM(KEY23)
 Fld_2
  Typ_Def_8
 Fld_3
  Prm_Anisotropic material const   (f)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(16))
!
K_CM(KEY23)
 Fld_2
  Typ_Def_9
 Fld_3
  Prm_Anisotropic material const   (g)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(17))
!
Cmd_TBDAT
K_CM(KEY23)
 Fld_2
  Typ_Def_10
 Fld_3
  Prm_Anisotropic material const   (h)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(18))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPTEMP
:S    697,   157,   533
:T Command
:C )! Fnc_MPTEMP
:A    Temp Table
:D Define Material Property Temperature Table
:K (lsdyna)
:H Hlp_C_MPTEMP
Cmd_MPTEMP
 Fld_0
  Typ_Lab
  Prm_[MPTEMP]  Define Material Property Temperature Table
 Fld_2
  Typ_INT
  Prm_STLOC  Starting location N
  Def_1
 Fld_3
  Typ_REAL
  Prm_T1     Temp value at loc N
  Def_Blank
 Fld_4
  Typ_REAL
  Prm_T2     Temp value at loc N+1
  Def_Blank
 Fld_5
  Typ_REAL
  Prm_T3     Temp value at loc N+2
  Def_Blank
 Fld_6
  Typ_REAL
  Prm_T4     Temp value at loc N+3
  Def_Blank
 Fld_7
  Typ_REAL
  Prm_T5     Temp value at loc N+4
  Def_Blank
 Fld_8
  Typ_REAL
  Prm_T6     Temp value at loc N+5
  Def_Blank
:E End
:! 
:N Fnc_MPTGEN
:S    525,   177,   341
:T Command
:C )! Fnc_MPTGEN
:A    Generate Temp
:D Define Temperature Table by Generation
:K (lsdyna)
:K #(PREP7*SOLUTION)
:H Hlp_C_MPTGEN
Cmd_MPTGEN
 Fld_0
  Typ_Lab
  Prm_[MPTGEN]  Define Temperature Table by Generation
 Fld_2
  Typ_INT
  Prm_STLOC  Starting location N
  Def_1
 Fld_4
  Typ_REAL
  Prm_TSTRT  Temp value at location N
  Def_Blank
 Fld_3
  Typ_INT
  Prm_NUM    No. of temps to generate
  Def_Blank
 Fld_5
  Typ_REAL
  Prm_TINC   Temperature increment
  Def_Blank
:E End
:! 
:N Fnc_MPTRES
:S   2938,   164,  2767
:T Command
:C )! Fnc_MPTRES
:A    Restore Temps
:D Restore Temperature Table
:K (lsdyna)
:K #(PREP7*SOLUTION)
:H Hlp_C_MPTRES
Cmd_MPTRES
 Fld_0
  Typ_Lab
  Prm_[MPTRES]  Restore Temperature Table from Existing Material Table
 Fld_2
  Prm_Lab  Label of property
  Typ_IDX
P_LN(LINPLUS)
  IDX_Elastic modulus ,EX              ,EX
P_LN(LINPLUS)
  IDX_Elastic modulus ,EY              ,EY
P_LN(LINPLUS)
  IDX_Elastic modulus ,EZ              ,EZ
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPX            ,ALPX
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPY            ,ALPY
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPZ            ,ALPZ
P_LN(LINPLUS)
  IDX_Reference temp  ,REFT            ,REFT
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXY            ,PRXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRYZ            ,PRYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXZ            ,PRXZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXY            ,NUXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUYZ            ,NUYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXZ            ,NUXZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXY             ,GXY
P_LN(LINPLUS)
  IDX_Shear modulus   ,GYZ             ,GYZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXZ             ,GXZ
P_LN(LINPLUS)
  IDX_Damping multip  ,DAMP            ,DAMP
P_LN(FULL_ANS)
  IDX_Friction coeff  ,MU              ,MU
P_LN(LINPLUS*THERMAL*FLOTRAN)
  IDX_Density         ,DENS            ,DENS
P_LN(THERMAL*FLOTRAN)
  IDX_Specific heat   ,C               ,C
P_LN(THERMAL)
  IDX_Enthalpy        ,ENTH            ,ENTH
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KXX             ,KXX
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KYY             ,KYY
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KZZ             ,KZZ
P_LN(THERMAL)
  IDX_Conv film coeff ,HF              ,HF
P_LN(THERMAL)
  IDX_Emissivity      ,EMIS            ,EMIS
P_LN(THERMAL)
  IDX_Heat gen rate   ,QRATE           ,QRATE
P_LN(FULL_ANS*FLOTRAN)
  IDX_Viscosity       ,VISC            ,VISC
P_LN(FULL_ANS)
  IDX_Sonic velocity  ,SONC            ,SONC
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVX            ,RSVX
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVY            ,RSVY
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVZ            ,RSVZ
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERX            ,PERX
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERY            ,PERY
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERZ            ,PERZ
P_LN(ELECMAG)
  IDX_Rel permeability,MURX            ,MURX
P_LN(ELECMAG)
  IDX_Rel permeability,MURY            ,MURY
P_LN(ELECMAG)
  IDX_Rel permeability,MURZ            ,MURZ
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGXX            ,MGXX
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGYY            ,MGYY
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGZZ            ,MGZZ
P_LN(ELECMAG)
  IDX_Loss tangent    ,LSST            ,LSST
 Fld_3
  Typ_INT
  Prm_MAT  Material number
  Def_1
:E End
:! 
:N Fnc_MPWRITE
:S    344,   243,    94
:T Command
:C )! Fnc_MPWRITE
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )*SET,_zc(1),' '
:C )/GO
:A Write to File
:D Write Material Properties to File
:K #(PREP7*SOLUTION)
:K (lsdyna)
:H Hlp_C_MPWRITE
Cmd_MPWRITE
 Fld_2
  Typ_FILE_INLINE
  Prm_[MPWRITE]Write linear matl data
  Def_*PAR(_zc(1))
:E End
:! 
:N Fnc_MP_ENT
:S   1855,   565,  1283
:T Cmd
:H Hlp_C_/GTYPE
:A Multi-Plotting
:D Multi-Plotting
:C )! Fnc_MP_ENT
:C )/NOPR
:C )*DEL,_zz
:C )*DIM,_zz,,10
:C )_z1=2+((_zw-1)*7)
:C )_zeloc=37+_zw
:C )*GET,_zz(1),common,,mpltcm,,int,3+_z1
:C )*GET,_zz(2),common,,mpltcm,,int,4+_z1
:C )*GET,_zz(3),common,,mpltcm,,int,5+_z1
:C )*GET,_zz(4),common,,mpltcm,,int,6+_z1
:C )*GET,_zz(5),common,,mpltcm,,int,1+_z1
:C )*GET,_zz(6),common,,mpltcm,,int,2+_z1
:C )*IF,_zz(6),eq,0,THEN
:C )_zelem=22
:C )*ELSE
:C )*GET,_zelem,COMMON,,mpltcm,,int,_zeloc
:C )*ENDIF
:C )/GOPR
:C )!
Cmd_/GTYPE
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_KEYP
 Fld_4
  Prm_KeyPoints
  Typ_LOGI,Off,On
  Def_*PAR(_zz(1))
Cmd_/GTYPE
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_LINE
 Fld_4
  Prm_Lines
  Typ_LOGI,Off,On
  Def_*PAR(_zz(2))
Cmd_/GTYPE
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_AREA
 Fld_4
  Prm_Areas
  Typ_LOGI,Off,On
  Def_*PAR(_zz(3))
Cmd_/GTYPE
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_VOLU
 Fld_4
  Prm_Volumes
  Typ_LOGI,Off,On
  Def_*PAR(_zz(4))
Cmd_/GTYPE
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_NODE
 Fld_4
  Prm_Nodes
  Typ_LOGI,Off,On
  Def_*PAR(_zz(5))
Cmd_/GTYPE
 K_CM(post1*results)
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_ELEM
 Fld_4
  Prm_Elements
  Typ_LOGI,Off,On
  Def_*PAR(_zz(6))
Cmd_/GCMD
 K_CM(post1*results)
 Fld_2
  Typ_Def_*PAR(_zw)
Cmd_)/NOPR
Cmd_)*SET,_zelem
 K_CM(POST1+RESULTS)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Elements
  Typ_LIS_RADIOB
  LIS_No Elements      ,22
  LIS_Elements         ,0
  LIS_Deformed Shape...,1
  LIS_Nodal Solution...,2
  LIS_Element Solu  ...,3
  LIS_Element Table ...,4
  LIS_LineElem Result..,5
  K_LN(CFD)
  LIS_Trace Plots   ...,7
  LIS_Predefined Vect..,8
  LIS_Usrdefined Vect..,9
  Def_*PAR(_zelem)
Cmd_)/GOP
K_LN(POST1+RESULTS)
Cal_Fnc_MPNOEP, 2,EQ,22,7
K_LN(POST1+RESULTS)
Cal_Fnc_MP_ENT2,2,NE,22,7
:E END
:! 
:N Fnc_MP_ENT2
:S    428,    46,   375
:T Cmd
Inp_P
Cmd_/GTYPE
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_ELEM
 Fld_4
  Typ_Def_1
Cmd_)/NOPR
Cmd_)*SET,_zelem
 Fld_2
  Typ_Def_*PAR(_zelem)
Cmd_)/GOPR
Cal_Fnc_MPEPLO,2,EQ,0,3
Cal_Fnc_MPPLDI,2,EQ,1,3
Cal_Fnc_MPPLNS,2,EQ,2,3
Cal_Fnc_MPPLES,2,EQ,3,3
Cal_Fnc_MPPLET,2,EQ,4,3
Cal_Fnc_MPPLLS,2,EQ,5,3
Cal_Fnc_MPPLTR,2,EQ,7,3
Cal_Fnc_MPPLVE,2,EQ,8,3
Cal_Fnc_MPPLVE_user,2,EQ,9,3
:E END
:! 
:N Fnc_MP_GRF
:S   1143,   204,   932
:T Cmd
:H Hlp_C_/GTYPE
:A Multi-Plotting
:D Multi-Plotting
:C )! Fnc_MP_GRF
:C )/NOPR
:C )*DEL,_zz
:C )*DIM,_zz,,10
:C )_z1=2+((_zw-1)*7)
:C )_zgrph=37+_zw
:C )/GOPR
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_zgrph
 Fld_2
  Prm_Graph Display Type
  Typ_LIS_RADIOB
  LIS_Material Plots...,13
  K_LN(POST1+RESULTS)
  LIS_Path Plots    ...,14
  K_LN(POST26)
  LIS_Time History  ...,15
  K_LN(POST1+RESULTS)
  LIS_Linearized Strs..,16
  K_LN(OPT+RESULTS)
  LIS_Factorial Eval...,17
  K_LN(OPT+RESULTS)
  LIS_Gradient  Eval...,18
  K_LN(OPT+RESULTS)
  LIS_Global Sweep  ...,19
  K_LN(PREP7)
  LIS_Data Table    ...,20
  LIS_Array Column  ...,21
  K_LN(POST1+RESULTS)
  LIS_Fatigue Stress...,22
  Def_*GET(COMMON,,mpltcm,,int,_zgrph)
Cmd_)/GOPR
Cmd_/GTYP
 Fld_2
  Typ_Def_*PAR(_zw)
 Fld_3
  Typ_Def_GRPH
 Fld_4
  Typ_Def_1
Cal_Fnc_MPMATP,    2,EQ,13,2
Cal_Fnc_MPPLPA,    2,EQ,14,2
Cal_Fnc_MPPLVAp26, 2,EQ,15,2
Cal_Fnc_MPPLSE,    2,EQ,16,2
Cal_Fnc_MPOPLFA,   2,EQ,17,2
Cal_Fnc_MPOPLGR,   2,EQ,18,2
Cal_Fnc_MPOPLSW,   2,EQ,19,2
Cal_Fnc_MPTBPLOT,  2,EQ,20,2
Cal_Fnc_MP*VPLOT,  2,EQ,21,2
Cal_Fnc_MPFSPLOT,  2,EQ,22,2
:E END
:! 
:N Fnc_MP_add
:S   6975,  1383,  5585
:T Command
:C )! Fnc_MP_add
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,4,1
:C )*do,_i,1,100
:C )_zx(_i) = 0
:C )*enddo
:C )_EDCHK = 0
:C )_MP_NEXT = _MPACT
:C )*IF,_PREDEF,GT,0,then
:C )_MP_NEXT = _MP_NEXT + 1
:C )_PREDEF = 0
:C )*ENDIF
:C )*if,_MP_NEXT,LE,0,then
:C )_MP_NEXT = 1
:C )*endif
:C )*DEL,_MOONOPT
:C )*DIM,_MOONOPT,,50,1
:C )*DO,_i,1,50
:C )_MOONOPT(_i)=0
:C )*enddo
:C )keyw,key1,0
:C )keyw,key2,0
:C )keyw,key3,0
:C )keyw,key4,0
:C )keyw,key5,0
:C )keyw,key6,0
:C )keyw,key7,0
:C )keyw,key8,0
:C )keyw,key9,0
:C )keyw,key10,0
:C )keyw,key11,0
:C )keyw,key12,0
:C )keyw,key13,0
:C )keyw,key15,0
:C )keyw,key16,0
:C )keyw,key17,0
:C )keyw,key18,0
:C )keyw,key19,0
:C )keyw,key20,0
:C )keyw,key21,0
:C )keyw,key22,0
:C )keyw,key23,0
:C )keyw,key24,0
:C )keyw,key25,0
:C )keyw,key26,0
:C )keyw,key27,0
:C )keyw,key28,0
:C )keyw,key29,0
:C )keyw,key30,0
:C )keyw,key31,0
:C )keyw,key32,0
:C )keyw,key33,0
:C )keyw,key34,0
:C )keyw,key35,0
:C )keyw,key36,0
:C )keyw,key37,0
:C )keyw,key38,0
:C )keyw,key39,0
:C )keyw,key40,0
:C )keyw,key41,0
:C )keyw,key42,0
:C )keyw,key43,0
:C )keyw,key44,0
:C )keyw,key45,0
:C )keyw,key46,0
:C )keyw,key47,0
:C )keyw,key48,0
:C )keyw,key49,0
:C )keyw,key50,0
:C )keyw,key51,0
:C )keyw,key52,0
:C )keyw,key53,0
:C )keyw,key54,0
:C )/GO
:A Define MAT Model
:D Explicit Dynamics Material Models
:H Hlp_UI_mpadd
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(2)
 Fld_2
  Prm_Define Model for Material Number
  Typ_INT
  Def_*PAR(_MP_NEXT)
!
Cmd_)*SET,_z(1)
 Fld_2
  Prm_Available Material Models
  K_FL(LSDYNA)
  P_FL(FULL_ANS+ed)
  Typ_IDX
  IDX_Linear Elastic       ,Isotropic              ,1
  IDX_Linear Elastic       ,Orthotropic            ,2
  IDX_Linear Elastic       ,Anisotropic            ,3
  IDX_Nonlin Elastic       ,BLATZ-KO Rubber        ,5
  IDX_Nonlin Elastic       ,Mooney-Rivlin          ,8
  IDX_Nonlin Elastic       ,Viscoelastic           ,18
  IDX_Plasticity           ,Bilinear Isotrop       ,6
  IDX_Plasticity           ,Temp Depend BISO       ,4
  IDX_Plasticity           ,Transvrs Anisotr       ,10
  IDX_Plasticity           ,Trans Aniso FLD        ,54
  IDX_Plasticity           ,Rate Sensitive         ,17
  IDX_Plasticity           ,Plastic Kinemat        ,19
  IDX_Plasticity           ,Bilinear Kinemat       ,33
  IDX_Plasticity           ,Power Law              ,21
  IDX_Plasticity           ,3-Param Barlat         ,22
  IDX_Plasticity           ,Barlat Anisotro        ,23
  IDX_Plasticity           ,Rate Dependent         ,24
  IDX_Plasticity           ,Piecewise Linear       ,28
  IDX_Plasticity           ,Hydrodynamic           ,41
  IDX_Foam                 ,Closed Cell            ,12
  IDX_Foam                 ,Viscous                ,13
  IDX_Foam                 ,Low Density            ,15
  IDX_Foam                 ,Crushable              ,16
  IDX_Foam                 ,Honeycomb              ,25
  IDX_Composite            ,Damage                 ,26
  IDX_Concrete             ,Damage                 ,40
  IDX_EOS                  ,J.Cook-Lin. Poly       ,30
  IDX_EOS                  ,J.Cook-Gruneisen       ,31
  IDX_EOS                  ,J.Cook-Tabulated       ,34
  IDX_EOS                  ,Null-Lin.Poly          ,32
  IDX_EOS                  ,Null-Gruneisen         ,29
  IDX_EOS                  ,Null-Tabulated         ,35
  IDX_EOS                  ,Zer/Arm-Lin. Poly      ,36
  IDX_EOS                  ,Zer/Arm-Gruneisen      ,37
  IDX_EOS                  ,Zer/Arm-Tabulated      ,38
  IDX_EOS                  ,Bamman                 ,42
  IDX_EOS                  ,Steinbrg-Lin Poly      ,51
  IDX_EOS                  ,Steinbrg-Grneisen      ,52
  IDX_EOS                  ,Steinbrg-Tabulatd      ,53
  IDX_Discrete             ,Linear Elas Sprng      ,43
  IDX_Discrete             ,Linear Visc Dampr      ,44
  IDX_Discrete             ,Elastoplast Sprng      ,45
  IDX_Discrete             ,Nonlin Elas Sprng      ,46
  IDX_Discrete             ,Nonlin Visc Dampr      ,47
  IDX_Discrete             ,Genl Nonlin Sprng      ,48
  IDX_Discrete             ,Maxwl Visco Sprng      ,49
  IDX_Discrete             ,Inelastic Spring       ,50
  IDX_Other                ,Rigid                  ,7
  IDX_Other                ,Cable                  ,27
  IDX_Other                ,Fluid                  ,39
  Def_*PAR(_z(1))
!
 Fld_2
  Prm_Available Material Models
  K_FL(LSDYNA)
  P_FL(ED)
  Typ_IDX
  IDX_Linear Elastic       ,Isotropic              ,1
  IDX_Linear Elastic       ,Orthotropic            ,2
  IDX_Linear Elastic       ,Anisotropic            ,3
  IDX_Nonlin Elastic       ,BLATZ-KO Rubber        ,5
  IDX_Nonlin Elastic       ,Mooney-Rivlin          ,8
  IDX_Nonlin Elastic       ,Viscoelastic           ,18
  IDX_Plasticity           ,Bilinear Isotrop       ,6
  IDX_Plasticity           ,Temp Depend BISO       ,4
  IDX_Plasticity           ,Transvrs Anisotr       ,10
  IDX_Plasticity           ,Rate Sensitive         ,17
  IDX_Plasticity           ,Plastic Kinemat        ,19
  IDX_Plasticity           ,Bilinear Kinemat       ,33
  IDX_Plasticity           ,Power Law              ,21
  IDX_Plasticity           ,3-Param Barlat         ,22
  IDX_Plasticity           ,Barlat Anisotro        ,23
  IDX_Plasticity           ,Rate Dependent         ,24
  IDX_Plasticity           ,Piecewise Linear       ,28
  IDX_Plasticity           ,Hydrodynamic           ,41
  IDX_Foam                 ,Closed Cell            ,12
  IDX_Foam                 ,Viscous                ,13
  IDX_Foam                 ,Low Density            ,15
  IDX_Foam                 ,Crushable              ,16
  IDX_Concrete             ,Damage                 ,40
  IDX_Other                ,Rigid                  ,7
  IDX_Other                ,Cable                  ,27
  IDX_Other                ,Fluid                  ,39
  Def_*PAR(_z(1))
!
Cmd_)_MODTYP = _z(1)
Cmd_)_MPACT = _z(2)
Cmd_)keyw,modedit,0
!
Cmd_)keyw,key%_z(1)%,1
Cmd_)/GO
!
Cal_Fnc_MPLIN,2,le,2,3
Cal_Fnc_MPANEL,2,eq,3,3
Cal_Fnc_MPLIN,2,eq,5,3
Cal_Fnc_MPTB,2,eq,6,3
Cal_Fnc_MPBISO,2,eq,4,3
Cal_Fnc_MPDYN,2,eq,7,3
Cal_Fnc_MPTB_moon,2,eq,8,3
Cal_Fnc_MPTB2a,2,eq,10,3
Cal_Fnc_MPTB2a,2,eq,12,3
Cal_Fnc_MPTB2a,2,eq,13,3
Cal_Fnc_MPTB2a,2,eq,15,3
Cal_Fnc_MPTB2a,2,eq,16,3
Cal_Fnc_MPTB,2,eq,17,3
Cal_Fnc_MPTB,2,eq,18,3
Cal_Fnc_MPTB,2,eq,19,3
Cal_Fnc_MPTB,2,eq,21,3
Cal_Fnc_MPTBa,2,eq,22,3
Cal_Fnc_MPTBa,2,eq,23,3
Cal_Fnc_MPTBa,2,eq,24,3
Cal_Fnc_MPTB2,2,eq,25,3
Cal_Fnc_MPTB2,2,eq,26,3
Cal_Fnc_MPDYN2,2,eq,27,3
Cal_Fnc_MPTB2,2,eq,28,3
Cal_Fnc_MPEOS,2,eq,29,3
Cal_Fnc_MPEOS,2,eq,30,3
Cal_Fnc_MPEOS,2,eq,31,3
Cal_Fnc_MPEOS,2,eq,32,3
Cal_Fnc_MPTBa,2,eq,33,3
Cal_Fnc_MPEOS34,2,eq,34,3
Cal_Fnc_MPEOS35,2,eq,35,3
Cal_Fnc_MPEOS36,2,eq,36,3
Cal_Fnc_MPEOS36,2,eq,37,3
Cal_Fnc_MPEOS38,2,eq,38,3
Cal_Fnc_MPDYNFluid,2,eq,39,3
Cal_Fnc_MPDYNConcr,2,eq,40,3
Cal_Fnc_MPPlasHyd,2,eq,41,3
Cal_Fnc_MPEOS42,2,eq,42,3
Cal_Fnc_MPspring,2,le,50,3
Cal_Fnc_MPstein,2,le,53,3
Cal_Fnc_MPfld,2,eq,54,3
:E END
:! 
:N Fnc_MP_dele
:S    490,    88,   395
:T Command
:C )! Fnc_MP_dele
:D Delete Mat Props
Inp_P
!
Cmd_MPDELE
 Fld_2
  Typ_Def_all
 Fld_3
  Typ_Def_*PAR(_MODDEL)
 Fld_4
  Typ_Def_*PAR(_MODDEL)
 Fld_5
  Typ_Def_1
!
Cmd_TBDELE
K_CM(key1+key2+key4+key5+key7+key11+key20+key27)
 Fld_2
  Typ_Def_all
 Fld_3
  Typ_Def_*PAR(_MODDEL)
 Fld_4
  Typ_Def_*PAR(_MODDEL)
 Fld_5
  Typ_Def_1
!
Cmd_MPUNDO
 Fld_2
 Typ_Def_*PAR(_MODDEL)
!
Cmd_)/NOPR
Cmd_)_MODDEL = 
Cmd_)MTYP
Cmd_)STAT,,,,,,,,1
Cmd_)/GO
:E END
:! 
:N Fnc_MP_edit
:S   2410,  1286,  1117
:T Command
:C )! Fnc_MP_edit
:C )/NOPR
:C )_EDCHK = 1
:C )_j = 1
:C )*get,_NUMMOD,common,,modcom,,int,_j  ! Number of models
:C )_j = _MPEDIT 
:C )*get,_MODEL,common,,modcom1,,int,_j  ! active model type  
:C )_j = _MPEDIT
:C )*get,_MODLOC,common,,modcom2,,int,_j  ! material number
:C )*do,_i,1,100
:C )_zx(_i) = 0
:C )*enddo
:C )keyw,key1,0
:C )keyw,key2,0
:C )keyw,key3,0
:C )keyw,key4,0
:C )keyw,key5,0
:C )keyw,key6,0
:C )keyw,key7,0
:C )keyw,key8,0
:C )keyw,key9,0
:C )keyw,key10,0
:C )keyw,key11,0
:C )keyw,key12,0
:C )keyw,key13,0
:C )keyw,key15,0
:C )keyw,key16,0
:C )keyw,key17,0
:C )keyw,key18,0
:C )keyw,key19,0
:C )keyw,key20,0
:C )keyw,key21,0
:C )keyw,key22,0
:C )keyw,key23,0
:C )keyw,key24,0
:C )keyw,key25,0
:C )keyw,key26,0
:C )keyw,key27,0
:C )keyw,key28,0
:C )keyw,key29,0
:C )keyw,key30,0
:C )keyw,key31,0
:C )keyw,key32,0
:C )keyw,key33,0
:C )keyw,key34,0
:C )keyw,key35,0
:C )keyw,key36,0
:C )keyw,key37,0
:C )keyw,key38,0
:C )keyw,key39,0
:C )keyw,key40,0
:C )keyw,key41,0
:C )keyw,key42,0
:C )keyw,key43,0
:C )keyw,key44,0
:C )keyw,key45,0
:C )keyw,key46,0
:C )keyw,key47,0
:C )keyw,key48,0
:C )keyw,key49,0
:C )keyw,key50,0
:C )keyw,key51,0
:C )keyw,key52,0
:C )keyw,key53,0
:C )keyw,key54,0
:C )/GO
:A Define MAT model
Inp_P
!
Cmd_)!
 Fld_2
 Typ_Def_*PAR(_MODEL)
!
Cmd_)/NOPR
Cmd_)_z1=_MODEL
Cmd_)keyw,key%_z1%,1
Cmd_)keyw,modedit,1
Cmd_)/GO
!
Cal_Fnc_MPLIN,2,le,2,1
Cal_Fnc_MPANEL,2,eq,3,1
Cal_Fnc_MPBISO,2,eq,4,1
Cal_Fnc_MPLIN,2,eq,5,1
Cal_Fnc_MPTB,2,eq,6,1
Cal_Fnc_MPDYN,2,eq,7,1
Cal_Fnc_MPTB2_moon,2,eq,8,1
Cal_Fnc_MPTB2a,2,eq,10,1
Cal_Fnc_MPTB2a,2,eq,12,1
Cal_Fnc_MPTB2a,2,eq,13,1
Cal_Fnc_MPTB2a,2,eq,15,1
Cal_Fnc_MPTB2a,2,eq,16,1
Cal_Fnc_MPTB,2,eq,17,1
Cal_Fnc_MPTB,2,eq,18,1
Cal_Fnc_MPTB,2,eq,19,1
Cal_Fnc_MPTB,2,eq,21,1
Cal_Fnc_MPTBa,2,eq,22,1
Cal_Fnc_MPTBa,2,eq,23,1
Cal_Fnc_MPTBa,2,eq,24,1
Cal_Fnc_MPTB2,2,eq,25,1
Cal_Fnc_MPTB2,2,eq,26,1
Cal_Fnc_MPDYN2,2,eq,27,1
Cal_Fnc_MPTB2,2,eq,28,1
Cal_Fnc_MPEOS,2,eq,29,1
Cal_Fnc_MPEOS,2,eq,30,1
Cal_Fnc_MPEOS,2,eq,31,1
Cal_Fnc_MPEOS,2,eq,32,1
Cal_Fnc_MPTBa,2,eq,33,1
Cal_Fnc_MPEOS34,2,eq,34,1
Cal_Fnc_MPEOS35,2,eq,35,1
Cal_Fnc_MPEOS36,2,eq,36,1
Cal_Fnc_MPEOS36,2,eq,37,1
Cal_Fnc_MPEOS38,2,eq,38,1
Cal_Fnc_MPDYNFluid,2,eq,39,1
Cal_Fnc_MPDYNConcr,2,eq,40,1
Cal_Fnc_MPPlasHyd,2,eq,41,1
Cal_Fnc_MPEOS42,2,eq,42,1
Cal_Fnc_MPspring,2,le,50,1
Cal_Fnc_MPstein,2,le,53,1
Cal_Fnc_MPfld,2,eq,54,1
:E END
:! 
:N Fnc_MP_poly
:S   3269,   148,  3114
:T Command
:C )! Fnc_MP_poly
:A    Polynomial
:D Define Polynomial Material Function
:K (lsdyna)
:H Hlp_C_MP
! Exclude_from_paths
Cmd_MP
 Fld_0
  Typ_Lab
Prm_[MP] Polynomial Mat'l Func = C0 + C1(T) + C2(T)**2 + C3(T)**3 + C4(T)**4
 Fld_2
  Prm_Lab    Material property label
  Typ_IDX
P_LN(LINPLUS)
  IDX_Elastic modulus ,EX              ,EX
P_LN(LINPLUS)
  IDX_Elastic modulus ,EY              ,EY
P_LN(LINPLUS)
  IDX_Elastic modulus ,EZ              ,EZ
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPX            ,ALPX
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPY            ,ALPY
P_LN(LINPLUS)
  IDX_Therm expan coef,ALPZ            ,ALPZ
P_LN(LINPLUS)
  IDX_Reference temp  ,REFT            ,REFT
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXY            ,PRXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRYZ            ,PRYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,PRXZ            ,PRXZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXY            ,NUXY
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUYZ            ,NUYZ
P_LN(LINPLUS)
  IDX_Poisson's ratio ,NUXZ            ,NUXZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXY             ,GXY
P_LN(LINPLUS)
  IDX_Shear modulus   ,GYZ             ,GYZ
P_LN(LINPLUS)
  IDX_Shear modulus   ,GXZ             ,GXZ
P_LN(LINPLUS)
  IDX_Damping multip  ,DAMP            ,DAMP
P_LN(FULL_ANS)
  IDX_Friction coeff  ,MU              ,MU
P_LN(LINPLUS*THERMAL*FLOTRAN)
  IDX_Density         ,DENS            ,DENS
P_LN(THERMAL*FLOTRAN)
  IDX_Specific heat   ,C               ,C
P_LN(THERMAL)
  IDX_Enthalpy        ,ENTH            ,ENTH
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KXX             ,KXX
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KYY             ,KYY
P_LN(THERMAL*FLOTRAN)
  IDX_Th conductivity ,KZZ             ,KZZ
P_LN(THERMAL)
  IDX_Conv film coeff ,HF              ,HF
P_LN(THERMAL)
  IDX_Emissivity      ,EMIS            ,EMIS
P_LN(THERMAL)
  IDX_Heat gen rate   ,QRATE           ,QRATE
P_LN(FULL_ANS*FLOTRAN)
  IDX_Viscosity       ,VISC            ,VISC
P_LN(FULL_ANS)
  IDX_Sonic velocity  ,SONC            ,SONC
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVX            ,RSVX
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVY            ,RSVY
P_LN(THERMAL*ELECMAG)
  IDX_Elec resistivity,RSVZ            ,RSVZ
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERX            ,PERX
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERY            ,PERY
P_LN(ELECMAG*FULL_ANS)
  IDX_Rel permittivity,PERZ            ,PERZ
P_LN(ELECMAG)
  IDX_Rel permeability,MURX            ,MURX
P_LN(ELECMAG)
  IDX_Rel permeability,MURY            ,MURY
P_LN(ELECMAG)
  IDX_Rel permeability,MURZ            ,MURZ
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGXX            ,MGXX
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGYY            ,MGYY
P_LN(ELECMAG)
  IDX_Mag coerciv forc,MGZZ            ,MGZZ
P_LN(ELECMAG)
  IDX_Loss tangent    ,LSST            ,LSST
 Fld_3
  Typ_INT
  Prm_MAT  Material reference number
  Def_1
 Fld_4
  Typ_REAL
  Prm_C0   Constant term
  Def_Blank
 Fld_5
  Typ_REAL
  Prm_C1   Coeff of linear term
  Def_Blank
 Fld_6
  Typ_REAL
  Prm_C2   Coeff of quadratic term
  Def_Blank
 Fld_7
  Typ_REAL
  Prm_C3   Coeff of cubic term
  Def_Blank
 Fld_8
  Typ_REAL
  Prm_C4   Coeff of quartic term
  Def_Blank
:E End
:! 
:N Fnc_MPfld
:S   2558,   474,  2076
:T Command
:C )! Fnc_MPfld
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )*IF,_EDCHK,GT,0,THEN
:C )*GET,_zx(1),PLAW,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),PLAW,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),PLAW,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),PLAW,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),PLAW,_MODLOC,TEMP,0,CONST,5
:C )*ENDIF
:C )/GO
:A ) Anisotropic FLD
:D ) Define Transverse Anisotropic FLD material
:H )Hlp_C_mpanel
!
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
 Fld_0
  Typ_Lab
  Prm_Define Transverse Anisotropic FLD material model
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                   DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_EX
 Fld_6
  Prm_Young's modulus             EX
  Typ_REAL
  K_LN(modedit)
  Def_*GET(EX,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(EX,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio           NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
!
FLd_0
 Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_[TB] Define data tables
!
Fld_0
 Prm_
!
Cmd_TB
 Fld_2
 Typ_Def_PLAW
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_6
 Typ_Def_10
!
Cmd_TBDAT
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Yield Stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Tangent Modulus
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Anisotropic Hardening Parameter
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Load curve for effective stress vs. plastic strain
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_Load curve for FLD
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END 
:! 
:N Fnc_MPspring
:S   5912,  1768,  4137
:T Command
:C )! Fnc_MPspring
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,33
:C )_zc(1)=' ',' ',' ',' ',' ','BISO',' ','MOONEY','HYPER'
:C )_zc(10)='PLAW','DISC','FOAM','FOAM','COMP','FOAM','FOAM'
:C )_zc(17)='PLAW','EVISC','PLAW','PLAW ','PLAW'
:C )_zc(22)='PLAW','PLAW','PLAW'
:C )_zc(25)='HONE','COMP',' ','PLAW',' ',' ','COMP'
:C )_zc(32)='COMP','BKIN'
:C )*IF,_EDCHK,GT,0,THEN
:C )*if,_MODEL,eq,43,then
:C )*GET,_zx(1),DISC,_MODLOC,TEMP,0,CONST,1
:C )*elseif,_MODEL,eq,44,then
:C )*GET,_zx(1),DISC,_MODLOC,TEMP,0,CONST,1
:C )*elseif,_MODEL,eq,45,then
:C )*GET,_zx(1),DISC,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),DISC,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),DISC,_MODLOC,TEMP,0,CONST,3
:C )*elseif,_MODEL,eq,46,then
:C )*GET,_zx(1),DISC,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),DISC,_MODLOC,TEMP,0,CONST,2
:C )*elseif,_MODEL,eq,47,then
:C )*GET,_zx(1),DISC,_MODLOC,TEMP,0,CONST,1
:C )*elseif,_MODEL,eq,48,then
:C )*GET,_zx(1),DISC,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),DISC,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),DISC,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),DISC,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),DISC,_MODLOC,TEMP,0,CONST,5
:C )*elseif,_MODEL,eq,49,then
:C )*GET,_zx(1),DISC,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),DISC,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),DISC,_MODLOC,TEMP,0,CONST,3
:C )*GET,_zx(4),DISC,_MODLOC,TEMP,0,CONST,4
:C )*GET,_zx(5),DISC,_MODLOC,TEMP,0,CONST,5
:C )*GET,_zx(6),DISC,_MODLOC,TEMP,0,CONST,6
:C )*elseif,_MODEL,eq,50,then
:C )*GET,_zx(1),DISC,_MODLOC,TEMP,0,CONST,1
:C )*GET,_zx(2),DISC,_MODLOC,TEMP,0,CONST,2
:C )*GET,_zx(3),DISC,_MODLOC,TEMP,0,CONST,3
:C )*endif
:C )*ENDIF
:C )/GO
:A Define MAT Model
:D Define Material Model
:K (KEY43*KEY44*KEY45*KEY46*KEY47*KEY48*KEY49*KEY50)
:H Hlp_UI_mpanel
Inp_NoApply
!
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
 Typ_Def_*PAR(_MPACT)
 Fld_3
 Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
Fld_0
 Typ_Lab
 Prm_Define Discrete Material Model 
!
Fld_0
 Typ_Sep
!
Cmd_TB
 Fld_2
 Typ_Def_DISC
!
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_6
 K_LN(KEY43)
 Typ_Def_0
 K_LN(KEY44)
 Typ_Def_1
 K_LN(KEY45)
 Typ_Def_2
 K_LN(KEY46)
 Typ_Def_3
 K_LN(KEY47)
 Typ_Def_4
 K_LN(KEY48)
 Typ_Def_5
 K_LN(KEY49)
 Typ_Def_6
 K_LN(KEY50)
 Typ_Def_7
! 
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA]  Define data for TB table
!
Cmd_TBDAT
K_CM(KEY43)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Spring Constant
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY44)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Damping Constant
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY45)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Elastic Stiffness
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY45)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Tangent Stiffness
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
K_CM(KEY45)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Yield Force/Moment
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
K_CM(KEY46)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Load Curve ID
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY46)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Optional Load Curve ID
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
K_CM(KEY47)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Load Curve ID
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY48)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Load Curve ID (loading)
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY48)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Load Curve ID (unloading)
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
K_CM(KEY48)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Hardening Parameter
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
K_CM(KEY48)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Initial Yield Force (tension)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
K_CM(KEY48)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_Initial Yield Force(compression)
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_TBDAT
K_CM(KEY49)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Short Time Stiffness
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY49)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Long TIme Stiffness
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
K_CM(KEY49)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Decay Parameter
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_TBDAT
K_CM(KEY49)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Cutoff Time
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
K_CM(KEY49)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_Force/moment after cutoff time
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_TBDAT
K_CM(KEY49)
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_Time implementation option
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(6))
!
Cmd_TBDAT
K_CM(KEY50)
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Load Curve ID
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
K_CM(KEY50)
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Unloading stiffness
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2))
!
Cmd_TBDAT
K_CM(KEY50)
 Fld_2
  Typ_Def_3
 Fld_3
  Prm_Compression/Tension Flag
  Typ_INT
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(3))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MPstein
:S   9879,   691,  9181
:T Command
:C )! Fnc_MPstein
:C )/NOPR
:C )*del,_zc
:C )*DIM,_zc,CHAR,1
:C )_zc(1) = ' '
:C )*IF,_EDCHK,GT,0,THEN
:C )*do,_i,1,28
:C )*get,_zx(%_i%),EOS,_MODLOC,TEMP,0,CONST,%_i%
:C )*enddo
:C )*IF, _MODEL,EQ,51,THEN
:C )*do,_i,29,37
:C )*get,_zx(%_i%),EOS,_MODLOC,TEMP,0,CONST,%_i%
:C )*enddo
:C )*ELSEIF, _MODEL,EQ,52,THEN
:C )*do,_i,29,36
:C )*get,_zx(%_i%),EOS,_MODLOC,TEMP,0,CONST,%_i%
:C )*enddo
:C )*ELSEIF, _MODEL,EQ,53,THEN
:C )*do,_i,29,61
:C )*get,_zx(%_i%),EOS,_MODLOC,TEMP,0,CONST,%_i%
:C )*enddo
:C )*ENDIF
:C )*ENDIF
:C )/GO
:A Define Steinberg Material Models
:D Define Steinberg Material Models
:K (KEY51*KEY52*KEY53)
:H Hlp_UI_mpanel
Inp_NoApply
!
Cmd_MPMOD
 K_CM(modedit)
 Fld_2
  Typ_Def_*PAR(_MPACT)
 Fld_3
  Typ_Def_*PAR(_MODTYP)
!
Cmd_UIMP
Fld_0
 K_FL(KEY51)
 Typ_Lab
 Prm_Define Material Model EOS: Steinberg - Linear Polynomial  
!
Fld_0
 K_FL(KEY52)
 Typ_Lab
 Prm_Define Material Model EOS: Steinberg - Gruneisen  
!
Fld_0
 K_FL(KEY53)
 Typ_Lab
 Prm_Define Material Model EOS: Steinberg - Tabulated  
!
Fld_0
 Typ_Sep
!
 Fld_0
  Typ_Lab
  Prm_[MP] Linear Material Values
!
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
!
 Fld_3
  Typ_Def_DENS
 Fld_6
  Prm_Density                   DENS
  Typ_REAL
  K_LN(modedit)
  Def_*GET(DENS,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(DENS,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_GXY
 Fld_6
  Prm_Shear modulus              GXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(GXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(GXY,_MODLOC)
!
Cmd_UIMP
 Fld_2
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_3
  Typ_Def_NUXY
 Fld_6
  Prm_Poisson's Ratio           NUXY
  Typ_REAL
  K_LN(modedit)
  Def_*GET(NUXY,_MPACT)
  K_LN(MODEDIT)
  Def_*GET(NUXY,_MODLOC)
!
Cmd_TB
 Fld_2
 Typ_Def_EOS
 Fld_3
  K_LN(modedit)
  Typ_Def_*PAR(_MPACT)
  K_LN(MODEDIT)
  Typ_Def_*PAR(_MODLOC)
 Fld_5
 Typ_Def_5
 Fld_6
 K_LN(KEY51)
 Typ_Def_1
 K_LN(KEY52)
 Typ_Def_2
 K_LN(KEY53)
 Typ_Def_3
! 
Fld_0
 Typ_Sep
!
Fld_0
 Typ_Lab
 Prm_[TB]/[TBDATA]  Define data for TB table
!
Cmd_TBDAT
 Fld_2
  Typ_Def_1
 Fld_3
  Prm_Initial Yield Stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(1))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_2
 Fld_3
  Prm_Hardening Coef/ Hardening Parm
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(2)),*PAR(_zx(3))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Init Plast Strn/ Max Yld Strss
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4)),*PAR(_zx(5))
!
Cmd_TBDAT
 K_CM(KEY51*KEY52)
 Fld_2
  Typ_Def_4
 Fld_3
  Prm_Initial Plastic Strain
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(4))
!
Cmd_TBDAT
 K_CM(KEY51*KEY52)
 Fld_2
  Typ_Def_5
 Fld_3
  Prm_Maximum Yield Stress
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(5))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_6
 Fld_3
  Prm_Shear Modulus Parameter
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(6))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_7
 Fld_3
  Prm_Yield Strength Parameters
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(7)),*PAR(_zx(8))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_9
 Fld_3
  Prm_Exponential Coefficient
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(9))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_10
 Fld_3
  Prm_Atomic Weight
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(10))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_11
 Fld_3
  Prm_Absolute Melting Temperature
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(11))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_12
 Fld_3
  Prm_Melting Temperature Parameters
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(12)),*PAR(_zx(13))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_14
 Fld_3
  Prm_Pressure Cutoff
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(14))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_15
 Fld_3
  Prm_Spall Type
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(15))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_16
 Fld_3
  Prm_Cold Compression Energy Flag
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(16))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_17
 Fld_3
  Prm_Min/Max Bulk Modulus
  Typ_Real2
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(17)),*PAR(_zx(18))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_19
 Fld_3
  Prm_Cold Comp Cons EC0, EC1, EC2
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(19)),*PAR(_zx(20)),*PAR(_zx(21))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_22
 Fld_3
  Prm_Cold Comp Cons EC3, EC4, EC5
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(22)),*PAR(_zx(23)),*PAR(_zx(24))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_25
 Fld_3
  Prm_Cold Comp Cons EC6, EC7, EC8
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(25)),*PAR(_zx(26)),*PAR(_zx(27))
!
Cmd_TBDAT
 Fld_2
  Typ_Def_28
 Fld_3
  Prm_Cold Compression Constant  EC9
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(28))
!
Cmd_TBDAT
 K_CM(KEY51)
 Fld_2
  Typ_Def_29
 Fld_3
  Prm_EOS Constants  C0, C1, C2
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(29)),*PAR(_zx(30)),*PAR(_zx(31))
!
Cmd_TBDAT
 K_CM(KEY51)
 Fld_2
  Typ_Def_32
 Fld_3
  Prm_EOS Constants  C3, C4, C5
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(32)),*PAR(_zx(33)),*PAR(_zx(34))
!
Cmd_TBDAT
 K_CM(KEY51)
 Fld_2
  Typ_Def_35
 Fld_3
  Prm_EOS Constants  C6, E0, V0
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(35)),*PAR(_zx(36)),*PAR(_zx(37))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_29
 Fld_3
  Prm_EOS Constants GAMMA, E0, V0
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(29)),*PAR(_zx(30)),*PAR(_zx(31))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_32
 Fld_3
  Prm_EOS Constants  e1, e2, e3
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(32)),*PAR(_zx(33)),*PAR(_zx(34))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_35
 Fld_3
  Prm_EOS Constants  e4, e5, e6
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(35)),*PAR(_zx(36)),*PAR(_zx(37))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_38
 Fld_3
  Prm_EOS Constants  e7, e8, e9
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(38)),*PAR(_zx(39)),*PAR(_zx(40))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_41
 Fld_3
  Prm_EOS Constant  e10
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(41))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_42
 Fld_3
  Prm_EOS Constants  c1, c2, c3
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(42)),*PAR(_zx(43)),*PAR(_zx(44))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_45
 Fld_3
  Prm_EOS Constants  c4, c5, c6
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(45)),*PAR(_zx(46)),*PAR(_zx(47))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_48
 Fld_3
  Prm_EOS Constants  c7, c8, c9
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(48)),*PAR(_zx(49)),*PAR(_zx(50))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_51
 Fld_3
  Prm_EOS Constant  c10
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(51))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_52
 Fld_3
  Prm_EOS Constants  T1, T2, T3
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(52)),*PAR(_zx(53)),*PAR(_zx(54))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_55
 Fld_3
  Prm_EOS Constants  T4, T5, T6
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(55)),*PAR(_zx(56)),*PAR(_zx(57))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_58
 Fld_3
  Prm_EOS Constants  T7, T8, T9
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(58)),*PAR(_zx(59)),*PAR(_zx(60))
!
Cmd_TBDAT
 K_CM(KEY53)
 Fld_2
  Typ_Def_61
 Fld_3
  Prm_EOS Constant  T10
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(61))
!
Cmd_TBDAT
K_CM(KEY52)
 Fld_2
  Typ_Def_29
 Fld_3
  Prm_EOS Constants  C
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(29))
!
Cmd_TBDAT
K_CM(KEY52)
 Fld_2
  Typ_Def_30
 Fld_3
  Prm_EOS Constants  S1, S2, S3
  Typ_Real3
  K_LN(modedit)
  Def_*PAR(_zc(1)),*PAR(_zc(1)),*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(30)),*PAR(_zx(31)),*PAR(_zx(32))
!
Cmd_TBDAT
K_CM(KEY52)
 Fld_2
  Typ_Def_33
 Fld_3
  Prm_EOS Constants  Gamma0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(33))
!
Cmd_TBDAT
K_CM(KEY52)
 Fld_2
  Typ_Def_34
 Fld_3
  Prm_EOS Constants  A
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(34))
!
Cmd_TBDAT
K_CM(KEY52)
 Fld_2
  Typ_Def_35
 Fld_3
  Prm_EOS Constants  E0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(35))
!
Cmd_TBDAT
K_CM(KEY52)
 Fld_2
  Typ_Def_36
 Fld_3
  Prm_EOS Constants  V0
  Typ_Real
  K_LN(modedit)
  Def_*PAR(_zc(1))
  K_LN(MODEDIT)
  Def_*PAR(_zx(36))
!
Cmd_)/NOPR
K_LN(modedit)
Cmd_)MTYP
K_LN(modedit)
Cmd_)STAT,,,,,,,,1
K_LN(MODEDIT)
Cmd_)keyw,modedit,0
Cmd_)/GO
:E END
:! 
:N Fnc_MSHA
:S    715,   279,   429
:T Cmd
:C )! Fnc_MesherShape
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z1,common,,cfprp7,,int,107
:C )*IF,_z1,eq,0,then
:C )KEYW,KEY1,1
:C )*ENDIF
:C )*GET,_z2,common,,cfprp7,,int,110
:C )/GOPR
:A Mesher & Shape
:D Set Element Shape
:H Hlp_C_MSHAPE
Inp_NoApply
Cmd_MSHAPE
   Fld_0
   Typ_Lab
   Prm_[MSHAPE] Set Element Shape
   Fld_2
   Prm_2D Shape key
   Typ_LIS_OPTIONB
   LIS_Quad  ,0
   LIS_Tri  ,1
   Def_*PAR(_z2)
   Fld_3
   Typ_Def_2D
Cmd_MSHAPE
   Fld_2
   K_LN(key1)
   Typ_Def_0
   K_LN(KEY1)
   Typ_Def_1
   Fld_0
   Typ_Lab
   K_LN(key1)
   Prm_3D Shape key                     HEX
   K_LN(KEY1)
   Prm_3D Shape key                     TET
   Fld_3
   Typ_Def_3D
:E END
:! 
:N Fnc_MSHC_a
:S    411,   159,   245
:T Cmd_P
:C )! Fnc_MSHC_a
:C )! Areas for MSHC command below
:A Area Mesh
:D Copy Area Mesh
:K #(PREP7)
:H Hlp_C_MSHCOPY
Inp_P
Cmd_)!
 Fld_3
  Typ_AREA
  Prm_[MSHC]  Pick or enter areas containing mesh to be copied
  Min_1
  Cnt_s
  PCN_1
  PFM_1
 Fld_4
  Typ_AREA
  Prm_Pick or enter areas to receive copied mesh
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_MSHC_a_2
:E END
:! 
:N Fnc_MSHC_a_2
:S    697,   139,   551
:T Command
:C )! Fnc_MSHC_a_2
:A Area Mesh
:D Copy Mesh Between Areas
:K #(PREP7)
:H Hlp_C_MSHCOPY
Cmd_MSHCOPY
 Fld_0
  Typ_Lab
  Prm_[MSHCOPY]  Copy Area Mesh
 Fld_2
  Typ_Def_AREA
 Fld_3
  Typ_Def_P51X
 Fld_4
  Typ_Def_P51X
 Fld_5
  Prm_KCN    Offset coordinate system
  Typ_INT
  Def_0
 Fld_6
  Prm_DX     Offset in X-direction
  Typ_REAL
  Def_0.0
 Fld_7
  Prm_DY     Offset in Y-direction
  Typ_REAL
  Def_0.0
 Fld_8
  Prm_DZ     Offset in Z-direction
  Typ_REAL
  Def_0.0
 Fld_9
  Prm_TOLER  Tolerance for offset
  Typ_REAL
  Def_0.0001
 Fld_10
  Prm_LOW    Low component name
  Typ_CHAR,8
 Fld_11
  Prm_HIGH   High component name
  Typ_CHAR,8
:E END
:! 
:N Fnc_MSHC_l
:S    411,   159,   245
:T Cmd_P
:C )! Fnc_MSHC_l
:C )! Lines for MSHC command below
:A Line Mesh
:D Copy Line Mesh
:K #(PREP7)
:H Hlp_C_MSHCOPY
Inp_P
Cmd_)!
 Fld_3
  Typ_LINE
  Prm_[MSHC]  Pick or enter lines containing mesh to be copied
  Min_1
  Cnt_s
  PCN_1
  PFM_1
 Fld_4
  Typ_LINE
  Prm_Pick or enter lines to receive copied mesh
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! 
Cal_Fnc_MSHC_l_2
:E END
:! 
:N Fnc_MSHC_l_2
:S    697,   139,   551
:T Command
:C )! Fnc_MSHC_l_2
:A Line Mesh
:D Copy Mesh Between Lines
:K #(PREP7)
:H Hlp_C_MSHCOPY
Cmd_MSHCOPY
 Fld_0
  Typ_Lab
  Prm_[MSHCOPY]  Copy Line Mesh
 Fld_2
  Typ_Def_LINE
 Fld_3
  Typ_Def_P51X
 Fld_4
  Typ_Def_P51X
 Fld_5
  Prm_KCN    Offset coordinate system
  Typ_INT
  Def_0
 Fld_6
  Prm_DX     Offset in X-direction
  Typ_REAL
  Def_0.0
 Fld_7
  Prm_DY     Offset in Y-direction
  Typ_REAL
  Def_0.0
 Fld_8
  Prm_DZ     Offset in Z-direction
  Typ_REAL
  Def_0.0
 Fld_9
  Prm_TOLER  Tolerance for offset
  Typ_REAL
  Def_0.0001
 Fld_10
  Prm_LOW    Low component name
  Typ_CHAR,8
 Fld_11
  Prm_HIGH   High component name
  Typ_CHAR,8
:E END
:! 
:N Fnc_MULTIPLOT
:S    548,   128,   413
:T Cmd
:H Hlp_UI_multiplot
:A Multi-Plot Contrls
:D Multi-Plotting
:C )! Fnc_MULTIPLOT
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_zw
 Fld_2
  Prm_Edit Window
  Typ_LIS_RADIOB
   LIS_Window 1        ,1
   LIS_Window 2        ,2
   LIS_Window 3        ,3
   LIS_Window 4        ,4
   LIS_Window 5        ,5
  Def_1
 Fld_0
  Typ_Sep
Cmd_)*SET,_ztype
 Fld_2
  Prm_Display Type
  Typ_LIS_RADIOB
   LIS_Entity Plots    ,1
   LIS_Graph Plots     ,2
  Def_1
Cmd_)/GOPR
Cal_Fnc_MP_ENT,2,EQ,1,3
Cal_Fnc_MP_GRF,2,EQ,2,3
:E END
:! 
:N Fnc_MULTIWIND
:S    738,   202,   529
:T Cmd
:H Hlp_C_/WINDOW
:A MultiWindow Layout
:D Multi-Plotting
:C )! Fnc_MULTIWIND
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,char,3
:C )_zc(1)=')!','/REPLOT','GPLOT'
Cmd_)!
 Fld_2
  Prm_Window Layout
  Typ_LIS_RADIOB
   LIS_One Window      ,1
   LIS_Two (Left-Right),2
   LIS_Two (Top-Bottom),3
   LIS_Three(2Top/Bot) ,4
   LIS_Three(Top/2Bot) ,5
   LIS_Four (2Top/2Bot),6
  Def_1
Cmd_)*SET,_z1
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Display upon OK/Apply?
  Typ_LIS_OPTIONB
   LIS_No re-display   ,1
   LIS_Replot          ,2
   LIS_Multi-Plots     ,3
  Def_3
Cmd_)/GOPR
Cal_Fnc_MW1 ,2,EQ,1,1
Cal_Fnc_MW2A,2,EQ,2,1
Cal_Fnc_MW2B,2,EQ,3,1
Cal_Fnc_MW3A,2,EQ,4,1
Cal_Fnc_MW3B,2,EQ,5,1
Cal_Fnc_MW4 ,2,EQ,6,1
:E END
:! 
:N Fnc_MW1
:S    223,   145,    71
:T Cmd
:H Hlp_C_/WINDOW
:A Multi-Plotting
:D Multi-Plotting
:C )! Fnc_MP_ENT
:C /WIND,ALL,OFF
:C /WIND,1,FULL
Inp_P
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z1))
:E END
:! 
:N Fnc_MW2A
:S    241,   163,    71
:T Cmd
:H Hlp_C_/WINDOW
:A Multi-Plotting
:D Multi-Plotting
:C )! Fnc_MP_ENT
:C /WIND,ALL,OFF
:C /WIND,1,LEFT
:C /WIND,2,RIGHT
Inp_P
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z1))
:E END
:! 
:N Fnc_MW2B
:S    238,   160,    71
:T Cmd
:H Hlp_C_/WINDOW
:A Multi-Plotting
:D Multi-Plotting
:C )! Fnc_MP_ENT
:C /WIND,ALL,OFF
:C /WIND,1,TOP
:C /WIND,2,BOT
Inp_P
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z1))
:E END
:! 
:N Fnc_MW3A
:S    255,   177,    71
:T Cmd
:H Hlp_C_/WINDOW
:A Multi-Plotting
:D Multi-Plotting
:C )! Fnc_MP_ENT
:C /WIND,ALL,OFF
:C /WIND,1,LTOP
:C /WIND,2,RTOP
:C /WIND,3,BOT
Inp_P
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z1))
:E END
:! 
:N Fnc_MW3B
:S    255,   177,    71
:T Cmd
:H Hlp_C_/WINDOW
:A Multi-Plotting
:D Multi-Plotting
:C )! Fnc_MP_ENT
:C /WIND,ALL,OFF
:C /WIND,1,TOP
:C /WIND,2,LBOT
:C /WIND,3,RBOT
Inp_P
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z1))
:E END
:! 
:N Fnc_MW4
:S    271,   193,    71
:T Cmd
:H Hlp_C_/WINDOW
:A Multi-Plotting
:D Multi-Plotting
:C )! Fnc_MP_ENT
:C /WIND,ALL,OFF
:C /WIND,1,LTOP
:C /WIND,2,RTOP
:C /WIND,3,LBOT
:C /WIND,4,RBOT
Inp_P
! Exclude_from_paths
Cmd_/REPLOT
 Fld_1
  Typ_Def_*PAR(_zc(_z1))
:E END
:! 
:N Fnc_MXPAND
:S    808,   309,   492
:T Command
:C )! Fnc_MXPAND
:A Expand Modes
:D Expand Modes
:C )/NOPR
:C )*GET,_z1,common,,soptcm,,int,14 ! modexp
:C )! Define value of tiny for blank defaults
:C )*IF,_z1,EQ,-1,THEN
:C )_z1=2**(-100)
:C )*ENDIF
:C )/GO
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_MXPAND
Inp_NoApply
Cmd_MXPAND
 Fld_0
  Typ_Lab
  Prm_[MXPAND]  Expand Modes
 Fld_2
  Prm_NMODE   No. of modes to expand
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Prm_FREQB,FREQE   Frequency range
  Typ_REAL2
  Def_*GET(COMMON,,STEPCM,,REAL,13),*GET(COMMON,,STEPCM,,REAL,14)
 Fld_5
  Prm_Elcalc  Calculate elem results?
  Typ_LOGI,No,Yes
  Def_*GET(COMMON,,SOPTCM,,INT,13)
 Fld_0
  Prm_SIGNIF Significant Threshold
 Fld_6
  Prm_   -only valid for SPRS and DDAM
  Typ_REAL
  Def_*GET(COMMON,,SOPTCM,,REAL,6)
:E END
:! 
:N Fnc_M_EVAL
:S   1041,   162,   872
:T Command
:A Evaluate Const
:D Evaluate Mooney-Rivlin Hyperelastic Constants
:C )! Fnc_M_EVAL
:H Hlp_C_*EVAL
:P (FULL_ANS)
Cmd_)/NOPR
Cmd_)*CSET,106,106
 Fld_0
  Typ_Lab
  Prm_[*EVAL]  Evaluate Mooney-Rivlin hyperelastic constants
 Fld_2
  Prm_No. of data points to evaluate
  Typ_int
Cmd_)/COM
 Fld_0
  Typ_Sep
Cmd_)*CSET,103,103
 Fld_2
  Prm_EVPARM  Type of hyperelast eqns
  Typ_LIS_OptionB
  LIS_Uniaxial test   ,1
  LIS_Equibiaxial test,2
  LIS_Shear(planar)tst,3
Cmd_)*CSET,104,105
 Fld_2
  Typ_REAL2
  Prm_XMIN,XMAX  Engineering strains
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Array parameter which contains hyperelastic constants
Cmd_)*CSET,3,3
 Fld_2
  Prm_CONST   Hyper mat'l constants
  Typ_CHAR
  Def_*CPAR(3)
 Fld_0
  Typ_Sep
 Fld_0
  Typ_Lab
  Prm_Array parameter names accepting *EVAL data
Cmd_)*CSET,7,7
 Fld_2
  Prm_XVAL    Eng'g strains for eval
  Typ_CHAR
  Def_XVAL
Cmd_)*CSET,8,8
 Fld_2
  Prm_ECALC   Evaluated eng'g stresses
  Typ_CHAR
  Def_ECALC
Cmd_)/GO
Cal_Fnc_M_EVAL2
:E END
:! 
:N Fnc_M_EVAL2
:S    718,   209,   502
:T Command
:C )! Fnc_M_EVAL2
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,6
:C )*GET,_z(3),CPAR,103
:C )*GET,_z(4),CPAR,104
:C )*GET,_z(5),CPAR,105
:C )*GET,_z(6),CPAR,106
:C )/GO
Inp_P
! Exclude_from_paths
Cmd_*DIM
 Fld_2
  Typ_Def_*CPAR(7)
 Fld_3
  Typ_Def_table
 Fld_4
  Typ_Def_*PAR(_z(6))
! Exclude_from_paths
Cmd_*DIM
 Fld_2
  Typ_Def_*CPAR(8)
 Fld_3
  Typ_Def_table
 Fld_4
  Typ_Def_*PAR(_z(6))
Cmd_*EVAL
 Fld_2
  Typ_Def_1
 Fld_3
  Typ_Def_*PAR(_z(3))
 Fld_4
  Typ_Def_*CPAR(3)
  Dlm_(
 Fld_5
  Typ_Def_1)
 Fld_6
  Typ_Def_*PAR(_z(4))
 Fld_7
  Typ_Def_*PAR(_z(5))
 Fld_8
  Typ_Def_*CPAR(7)
  Dlm_(
 Fld_9
  Typ_Def_1)
 Fld_10
  Typ_Def_*CPAR(8)
  Dlm_(
 Fld_11
  Typ_Def_1)
:E END
:! 
:N Fnc_MacLib
:S   1317,   130,  1180
:T Cmd
:C )!  Fnc_MacLib
:H Hlp_UI_maclib
:A Execute Data Block
:D Execute Macro Data Block
Cmd_*ULIB
 Fld_2
  Typ_FILE
  Prm_[*ULIB]  Macro library file name
 Fld_0
  Typ_Sep
Cmd_*USE
 Fld_2
  Typ_CHAR,8
  Prm_[*USE] Data block to be executed
 Fld_3
  Typ_REAL
  Prm_ARG1     Argument 1
  Def_BLANK
 Fld_4
  Typ_REAL
  Prm_ARG2     Argument 2
  Def_BLANK
 Fld_5
  Typ_REAL
  Prm_ARG3     Argument 3
  Def_BLANK
 Fld_6
  Typ_REAL
  Prm_ARG4     Argument 4
  Def_BLANK
 Fld_7
  Typ_REAL
  Prm_ARG5     Argument 5
  Def_BLANK
 Fld_8
  Typ_REAL
  Prm_ARG6     Argument 6
  Def_BLANK
 Fld_9
  Typ_REAL
  Prm_ARG7     Argument 7
  Def_BLANK
 Fld_10
  Typ_REAL
  Prm_ARG8     Argument 8
  Def_BLANK
 Fld_11
  Typ_REAL
  Prm_ARG9     Argument 9
  Def_BLANK
 Fld_12
  Typ_REAL
  Prm_AR10     Argument 10
  Def_BLANK
 Fld_13
  Typ_REAL
  Prm_AR11     Argument 11
  Def_BLANK
 Fld_14
  Typ_REAL
  Prm_AR12     Argument 12
  Def_BLANK
 Fld_15
  Typ_REAL
  Prm_AR13     Argument 13
  Def_BLANK
 Fld_16
  Typ_REAL
  Prm_AR14     Argument 14
  Def_BLANK
 Fld_17
  Typ_REAL
  Prm_AR15     Argument 15
  Def_BLANK
 Fld_18
  Typ_REAL
  Prm_AR16     Argument 16
  Def_BLANK
 Fld_19
  Typ_REAL
  Prm_AR17     Argument 17
  Def_BLANK
 Fld_20
  Typ_REAL
  Prm_AR18     Argument 18
  Def_BLANK
:E End
:! 
:N Fnc_Macro
:S   1242,   128,  1107
:T Cmd
:C )!  Fnc_Macro
:A Execute Macro
:H Hlp_C_*USE
:D Execute "Unknown Command" Macro 
Cmd_!
 Fld_1
  Typ_CHAR,8
  Prm_  Name of macro to be executed
 Fld_0
  Typ_Sep
 Fld_2
  Typ_REAL
  Prm_ARG1     Argument 1
  Def_BLANK
 Fld_3
  Typ_REAL
  Prm_ARG2     Argument 2
  Def_BLANK
 Fld_4
  Typ_REAL
  Prm_ARG3     Argument 3
  Def_BLANK
 Fld_5
  Typ_REAL
  Prm_ARG4     Argument 4
  Def_BLANK
 Fld_6
  Typ_REAL
  Prm_ARG5     Argument 5
  Def_BLANK
 Fld_7
  Typ_REAL
  Prm_ARG6     Argument 6
  Def_BLANK
 Fld_8
  Typ_REAL
  Prm_ARG7     Argument 7
  Def_BLANK
 Fld_9
  Typ_REAL
  Prm_ARG8     Argument 8
  Def_BLANK
 Fld_10
  Typ_REAL
  Prm_ARG9     Argument 9
  Def_BLANK
 Fld_11
  Typ_REAL
  Prm_AR10     Argument 10
  Def_BLANK
 Fld_12
  Typ_REAL
  Prm_AR11     Argument 11
  Def_BLANK
 Fld_13
  Typ_REAL
  Prm_AR12     Argument 12
  Def_BLANK
 Fld_14
  Typ_REAL
  Prm_AR13     Argument 13
  Def_BLANK
 Fld_15
  Typ_REAL
  Prm_AR14     Argument 14
  Def_BLANK
 Fld_16
  Typ_REAL
  Prm_AR15     Argument 15
  Def_BLANK
 Fld_17
  Typ_REAL
  Prm_AR16     Argument 16
  Def_BLANK
 Fld_18
  Typ_REAL
  Prm_AR17     Argument 17
  Def_BLANK
 Fld_19
  Typ_REAL
  Prm_AR18     Argument 18
  Def_BLANK
:E End
:! 
:N Fnc_Mass
:S    236,   109,   120
:T Cmd_P
:A Mass
:D Structural Mass Location
:H Hlp_E_S4.21
:P (ELECMAG)
Inp_P
Cmd_)!
 Fld_2
  Typ_XYZ
  Prm_[Mass]  Pick 1 WP locations
  Min_1
  Mok_1
  Pwr_1
  PFM_1
  Rub_217
Cal_Fnc_Masss
:E END
:! 
:N Fnc_Mass_RCA
:S    781,   149,   625
:T Cmd
:C )! Fnc_Mass_RCA
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_z(5)%, for MASS21
:H Hlp_E_S4.21
Cmd_R
Fld_0
Typ_Lab
Prm_Real Constants for 3-D Mass with Rotary Inertia (KEYOPT(3)=0)
Fld_2
Typ_Def_*PAR(_z(5))
Fld_3
Prm_Mass in X direction        MASSX
Typ_Real
Def_*GET(rcon,_z(5),const,1)
Fld_4
Prm_Mass in Y direction        MASSY
Typ_Real
Def_*GET(rcon,_z(5),const,2)
Fld_5
Prm_Mass in Z direction        MASSZ
Typ_Real
Def_*GET(rcon,_z(5),const,3)
Fld_6
Prm_Rotary inertia about X       IXX
Typ_Real
Def_*GET(rcon,_z(5),const,4)
Fld_7
Prm_Rotary inertia about Y       IYY
Typ_Real
Def_*GET(rcon,_z(5),const,5)
Fld_8
Prm_Rotary inertia about Z       IZZ
Typ_Real
Def_*GET(rcon,_z(5),const,6)
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E End
:! 
:N Fnc_Mass_RCB
:S    378,   149,   222
:T Cmd
:C )! Fnc_Mass_RCB
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_z(5)%, for MASS21
:H Hlp_E_S4.21
Cmd_R
Fld_0
Typ_Lab
Prm_Real Constant for 3-D Mass without Rotary Inertia (KEYOPT(3)=2)
Fld_2
Typ_Def_*PAR(_z(5))
Fld_3
Prm_3-D mass                    MASS
Typ_Real
Def_*GET(rcon,_z(5),const,1)
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E End
:! 
:N Fnc_Mass_RCC
:S    457,   149,   301
:T Cmd
:C )! Fnc_Mass_RCC
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_z(5)%, for MASS21
:H Hlp_E_S4.21
Cmd_R
Fld_0
Typ_Lab
Prm_Real Constants for 2-D Mass with Rotary Inertia (KEYOPT(3)=3)
Fld_2
Typ_Def_*PAR(_z(5))
Fld_3
Prm_2-D mass                    MASS
Typ_Real
Def_*GET(rcon,_z(5),const,1)
Fld_4
Prm_Rotary inertia about Z       IZZ
Typ_Real
Def_*GET(rcon,_z(5),const,2)
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E End
:! 
:N Fnc_Mass_RCD
:S    378,   149,   222
:T Cmd
:C )! Fnc_Mass_RCD
:C )/GO
:B Fnc_R
:D Real Constant Set Number %(I)_z(5)%, for MASS21
:H Hlp_E_S4.21
Cmd_R
Fld_0
Typ_Lab
Prm_Real Constant for 2-D Mass without Rotary Inertia (KEYOPT(3)=4)
Fld_2
Typ_Def_*PAR(_z(5))
Fld_3
Prm_2-D mass                    MASS
Typ_Real
Def_*GET(rcon,_z(5),const,1)
Cmd_)/GO
Cal_Fnc_MeCirBD_1
:E End
:! 
:N Fnc_Masss
:S    790,   232,   551
:T Command
:D KEYOPTs for 21 - Structural Mass
:H Hlp_E_S4.21
:H Hlp_C_R
:C )/nopr
:C )*del,_z
:C )*dim,_z,,45
:C )_z(3)=0
:C )_z(4)=0
:C )_z(5)=rlinqr(0,14)+1
:C )_z(45)=21
:C )/go
:P (ELECMAG)
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z(1),1
 Fld_0
  Typ_Lab
  Prm_Structural Mass
 Fld_2
  Typ_INT
  Prm_ID Number                    ID
Cmd_)*SET,_z(4)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Elem coord system initially
  Typ_LIS_RadioB
  LIS_Parall to global,0
  LIS_Par to nodal sys,1
Cmd_)*SET,_z(44)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select DOF set
  Typ_LIS_RadioB
  LIS_UX/Y/Z ROTX/Y/Z ,0
  LIS_UX UY UZ   DOFs ,2
  LIS_UX UY ROTZ DOFs ,3
  LIS_UX UY    DOFs   ,4
Cal_Fnc_Mass_RCA,2,LE,1
Cal_Fnc_Mass_RCB,2,EQ,2
Cal_Fnc_Mass_RCC,2,EQ,3
Cal_Fnc_Mass_RCD,2,EQ,4
:E END
:! 
:N Fnc_MatCopyExec
:S    274,   114,   153
:T Cmd_N
:A Copy Material Model
:D Copy Material Model
:H Hlp_C_TBCOPY
Inp_P
Cmd_MPCOPY
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*CPAR(2)
Cmd_TBCOPY
 Fld_2
  Typ_Def_ALL
 Fld_3
  Typ_Def_*CPAR(1)
 Fld_4
  Typ_Def_*CPAR(2)
:E END
:! 
:N Fnc_MeCirBD_1
:S   1711,  1216,   488
:T Cmd
:A Hidden
:C )! Fnc_MeCirBD_1
:C )! --- Variable Definitions -------
:C )!
:C )! Picked Pt            X,Y,Z
:C )!    1        _z(13),_z(14),_z(15)
:C )!    2        _z(16),_z(17),_z(18)
:C )!    3        _z(19),_z(20),_z(21)
:C )!    4        _z(22),_z(23),_z(24)
:C )! --------------------------------
:C )/NOPR
:C )KEYW,ELEM14,0
:C )KEYW,ELEM21,0
:C )KEYW,ELEM39,0
:C )KEYW,ELE125,0
:C )KEYW,ELE126,0
:C )KEYW,ELE139,0
:C )KEYW,ELE200,0
:C )*if,_z(45),eq,14,then
:C )KEYW,ELEM14,1
:C )*elseif,_z(45),eq,21,then
:C )KEYW,ELEM21,1
:C )*elseif,_z(45),eq,39,then
:C )KEYW,ELEM39,1
:C )*elseif,_z(45),eq,125,then
:C )KEYW,ELE125,1
:C )*elseif,_z(45),eq,126,then
:C )KEYW,ELE126,1
:C )*elseif,_z(45),eq,200,then
:C )KEYW,ELE200,1
:C )*elseif,_z(45),eq,139,then
:C )KEYW,ELE139,1
:C )KEYW,EL1391,0
:C )*if,_z(4),eq,1,then
:C )KEYW,EL1391,1
:C )*endif
:C )*endif
:C )*if,_z(4),eq,14,then
:C )_z(4)=0
:C )_z(44)=2
:C )*elseif,_z(4),eq,15,then
:C )_z(4)=0
:C )_z(44)=1
:C )*endif
:C )*if,_z(44),eq,14,then
:C )_z(44)=0
:C )_z(43)=3
:C )*elseif,_z(44),eq,15,then
:C )_z(44)=0
:C )_z(43)=2
:C )*elseif,_z(44),eq,16,then
:C )_z(44)=0
:C )_z(43)=1
:C )*endif
:C )/GO
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
Cmd_)*set,_z(13)
 Fld_2
  Typ_Def_*FPIK(2,1)
Cmd_)*set,_z(14)
 Fld_2
  Typ_Def_*FPIK(2,2)
Cmd_)*set,_z(15)
 Fld_2
  Typ_Def_*FPIK(2,3)
Cmd_)*set,_z(16)
 Fld_2
  Typ_Def_*FPIK(2,4)
Cmd_)*set,_z(17)
 Fld_2
  Typ_Def_*FPIK(2,5)
Cmd_)*set,_z(18)
 Fld_2
  Typ_Def_*FPIK(2,6)
Cmd_)*set,_z(19)
K_CM(ele200)
 Fld_2
  Typ_Def_*FPIK(2,7)
Cmd_)*set,_z(20)
K_CM(ele200)
 Fld_2
  Typ_Def_*FPIK(2,8)
Cmd_)*set,_z(21)
K_CM(ele200)
 Fld_2
  Typ_Def_*FPIK(2,9)
Cmd_)/GO
Cal_Fnc_MeCirBD_2
:E END
:! 
:N Fnc_MeCirBD_2
:S   4646,  3232,  1407
:T Command
:A Hidden
:C )! Fnc_MeCirBD_2
:C )/nopr
:C )! ---- Variable Definitions -----
:C )! _z1  - node i
:C )! _z2    node j
:C )! _z3    delx
:C )! _z4    dely
:C )! _z5    ang1
:C )! _z6    ang2
:C )! _z7    angdif
:C )! _z8    leng
:C )! _z9    h
:C )!
:C )! keywords - cirn1, cirn2
:C )!            (existing node flag)
:C )! --------------------------------
:C )keyw,cirn1,0
:C )keyw,cirn2,0
:C )*get,_z(1),etyp,,num,max
:C )_z(1) = _z(1) + 1                    ! et num
:C )*afun,deg
:C )_z3 = _z(16)-_z(13)
:C )_z4 = _z(17)-_z(14)
:C )*if,_z3,ne,0,then
:C )_z5 = ATAN(ABS(_z4)/ABS(_z3))
:C )*else
:C )_z5 = 90.0
:C )*endif
:C )*if,_z3,ge,0.0,then
:C )*if,_z4,lt,0.0,then
:C )_z5 = 360.0 - _z5
:C )*endif
:C )*elseif,_z4,ge,0.0
:C )_z5 = 180.0 - _z5
:C )*else
:C )_z5 = _z5 + 180.0
:C )*endif
:C )!
:C )_z3 = _z(19)-_z(13)
:C )_z4 = _z(20)-_z(14)
:C )*if,_z3,ne,0,then
:C )_z6 = ATAN(ABS(_z4)/ABS(_z3))
:C )*else
:C )_z6 = 90.0
:C )*endif
:C )*if,_z3,ge,0.0,then
:C )*if,_z4,lt,0.0,then
:C )_z6 = 360.0 - _z6
:C )*endif
:C )*elseif,_z4,ge,0.0
:C )_z6 = 180.0 - _z6
:C )*else
:C )_z6 = _z6 + 180.0
:C )*endif
:C )!
:C )*if,_z6,lt,_z5,then
:C )_z6 = _z6 + 360.0
:C )*endif
:C )_z7 = _z6 - _z5
:C )_z8 = SQRT((_z(13)-_z(19))**2+(_z(14)-_z(20))**2)
:C )_z9=SIN(_z7)*_z8
:C )*if,_z7,ge,180,then
:C )_z9=-ABS(_z9)
:C )*else
:C )_z9=ABS(_z9)
:C )*endif
:C )_z(6)=_z9
:C )!
:C )! --- Duplicate Node Logic ------------
:C )_z(7)=ndinqr(0,14)+1          ! Node i
:C )_z(8)=_z(7)+1                 !      j
:C )_z(9)=_z(8)+1                 !      k
:C )_z(10)=_z(9)+1                !      l
:C )! -- Retrieve Nearest Node
:C )_z(31)=node(_z(13),_z(14),_z(15))
:C )_z(32)=node(_z(16),_z(17),_z(18))
:C )_z(33)=node(_z(19),_z(20),_z(21))
:C )_z(34)=node(_z(22),_z(23),_z(24))
:C )! -- Check Nodal Coordinates
:C )_z(35)=0
:C )*if,_z(31),gt,0,then
:C )*if,_z(13),eq,nx(_z(31)),then
:C )_z(35)=_z(35)+1
:C )*endif
:C )*if,_z(14),eq,ny(_z(31)),then
:C )_z(35)=_z(35)+1
:C )*endif
:C )*if,_z(15),eq,nz(_z(31)),then
:C )_z(35)=_z(35)+1
:C )*endif
:C )*endif
:C )_z(36)=0
:C )*if,_z(32),gt,0,then
:C )*if,_z(16),eq,nx(_z(32)),then
:C )_z(36)=_z(36)+1
:C )*endif
:C )*if,_z(17),eq,ny(_z(32)),then
:C )_z(36)=_z(36)+1
:C )*endif
:C )*if,_z(18),eq,nz(_z(32)),then
:C )_z(36)=_z(36)+1
:C )*endif
:C )*endif
:C )_z(37)=0
:C )*if,_z(33),gt,0,then
:C )*if,_z(19),eq,nx(_z(33)),then
:C )_z(37)=_z(37)+1
:C )*endif
:C )*if,_z(20),eq,ny(_z(33)),then
:C )_z(37)=_z(37)+1
:C )*endif
:C )*if,_z(21),eq,nz(_z(33)),then
:C )_z(37)=_z(37)+1
:C )*endif
:C )*endif
:C )_z(38)=0
:C )*if,_z(34),gt,0,then
:C )*if,_z(22),eq,nx(_z(34)),then
:C )_z(38)=_z(38)+1
:C )*endif
:C )*if,_z(23),eq,ny(_z(34)),then
:C )_z(38)=_z(38)+1
:C )*endif
:C )*if,_z(24),eq,nz(_z(34)),then
:C )_z(38)=_z(38)+1
:C )*endif
:C )*endif
:C )! -- Reassign Nodes
:C )*if,_z(35),eq,3,then
:C )_z(7)=_z(31)
:C )_z(8)=ndinqr(0,14)+1
:C )_z(9)=_z(8)+1
:C )_z(10)=_z(10)-1
:C )keyw,cirn1,1
:C )*endif
:C )*if,_z(36),eq,3,then
:C )_z(8)=_z(32)
:C )_z(9)=ndinqr(0,14)+1
:C )_z(10)=_z(9)+1
:C )keyw,cirn2,1
:C )*endif
:C )*get,_z(30),active,,imme
:C *GET,_zz2,active,,csys
:C *GET,_zz3,active,,dsys
:C CSYS,0
:C DSYS,0
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_N
 K_CM(cirn1)
 Fld_2
  Typ_Def_*PAR(_z(7))
 Fld_3
  Typ_Def_*PAR(_z(13))
 Fld_4
  Typ_Def_*PAR(_z(14))
 Fld_5
  Typ_Def_*PAR(_z(15))
! Exclude_from_paths
Cmd_N
 K_CM(cirn2+elem21)
 Fld_2
  Typ_Def_*PAR(_z(8))
 Fld_3
  Typ_Def_*PAR(_z(16))
 Fld_4
  Typ_Def_*PAR(_z(17))
 Fld_5
  Typ_Def_*PAR(_z(18))
! Exclude_from_paths
Cmd_CSYS,_zz2
! Exclude_from_paths
Cmd_DSYS,_zz3
Cmd_)/NOPR
Cmd_)immed,_z(30)
Cmd_)/ESHAPE,1
 K_CM(ELEM14*ELEM21*ELEM39)
Cmd_)/GO
! Exclude_from_paths
Cmd_RMOD
 K_CM(ele200)
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  K_LN(ELEM14)
  Typ_Def_4
  K_LN(ELEM21)
  Typ_Def_7
  K_LN(ELEM39)
  Typ_Def_41
  K_LN(ELE126*ELE125)
  Typ_Def_1
  K_LN(ELE139)
  Typ_Def_15
 Fld_4
  K_FL(elem21)
  Typ_Def_*PAR(_z(6))
 Fld_5
  Typ_Def_*PAR(_z(2))
! Exclude_from_paths
Cmd_ET
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Typ_Def_*PAR(_z(45))
 Fld_4
  Typ_Def_*PAR(_z(3))
 Fld_5
  Typ_Def_*PAR(_z(4))
 Fld_6
  Typ_Def_*PAR(_z(44))
 Fld_7
  Typ_Def_*PAR(_z(43))
! Exclude_from_paths
Cmd_KEYOPT
 K_CM(ELEM14*ELEM21*ELEM39)
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Typ_Def_7
 Fld_4
  Typ_Def_1
! Exclude_from_paths
Cmd_TYPE
 Fld_2
  Typ_Def_*PAR(_z(1))
! Exclude_from_paths
Cmd_REAL
 K_CM(ele200)
 Fld_2
  Typ_Def_*PAR(_z(5))
! Exclude_from_paths
Cmd_)/GO
 Fld_2
  Typ_Def_*PAR(_z(45))
Cal_Fnc_CirBD_MA, 2,eq,21
K_LN(el1391)
Cal_Fnc_CirBD_R0, 2,ne,21
K_LN(EL1391)
Cal_Fnc_CirBD_SF, 2,ne,21
:E END
:! 
:N Fnc_MeROMBD_1
:S    614,   368,   239
:T Cmd
:A Hidden
:C )! Fnc_MeROMBD_1
:C )! --- Variable Definitions -------
:C )!
:C )! Picked Pt            X,Y,Z
:C )!    1        _z(10),_z(11),_z(12)
:C )! --------------------------------
:C )/NOPR
:C *del,_z
:C *dim,_z,,55
:C *get,_z(1),etyp,,num,max
:C _z(1) = _z(1) + 1                    ! et num
:C )/GO
:P (ELECMAG)
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_*set,_z(10)
 Fld_2
  Typ_Def_*FPIK(2,1)
! Exclude_from_paths
Cmd_*set,_z(11)
 Fld_2
  Typ_Def_*FPIK(2,2)
! Exclude_from_paths
Cmd_*set,_z(12)
 Fld_2
  Typ_Def_*FPIK(2,3)
Cmd_)/GO
Cal_Fnc_MeROMBD_3
:E END
:! 
:N Fnc_MeROMBD_2
:S   1385,   984,   394
:T Command
:A Hidden
:C )! Fnc_MeROMBD_2
:C )/nopr
:C )keyw,resrpt,1
:C *get,_ddx,common,,wplncm,,real,16     ! WP snap size
:C *if,_ddx,le,0,then
:C  _ddx=0.01                            ! default snap size
:C *endif
:C _dd2=_ddx+_ddx
:C )! ------ creating rectangle opposite corner points ---
:C *do,_i98,1,2
:C _z(12+_i98)=_z(9+_i98)-_ddx*6
:C _z(15+_i98)=_z(9+_i98)+_ddx*5
:C *enddo
:C _z(15)=_z(12)
:C _z(18)=_z(12)
:C )!-------------------------------------------------
:C _zx8=_z(13)-_ddx
:C _zy8=_z(17)
:C _zz8=_z(15)
:C _zn8=ndinqr(0,14)
:C *do,_i98,21,30           ! create 10 nodes straigth down
:C _zy8=_zy8-_ddx
:C _zn8=_zn8+1
:C _z(_i98)=_zn8
:C N,_zn8,_zx8,_zy8,_zz8
:C *enddo
:C )!
:C _zx8=_z(13)-_ddx
:C _zy8=_z(14)-_ddx
:C _zn8=ndinqr(0,14)
:C *do,_i98,31,40            ! create 10 horizontal nodes
:C *if,_i98,le,36,then
:C _zx8=_zx8+_dd2
:C *endif
:C _zn8=_zn8+1
:C _z(_i98)=_zn8
:C N,_zn8,_zx8,_zy8,_zz8
:C *enddo
:C )/go
Inp_P
! Exclude_from_paths
Cmd_ET
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Typ_Def_144
 Fld_4
  Typ_Def_*PAR(_z(2))
! Exclude_from_paths
Cmd_KEYOPT
 Fld_2
  Typ_Def_*PAR(_z(1))
 Fld_3
  Typ_Def_2
 Fld_4
  Typ_Def_*PAR(_z(3))
! Exclude_from_paths
Cmd_TYPE
 Fld_2
  Typ_Def_*PAR(_z(1))
! Exclude_from_paths
Cmd_REAL
 Fld_2
  Typ_Def_*PAR(_z(5))
Cal_Fnc_MeROMB_20,4,EQ,0,1
Cal_Fnc_MeROMB_30,4,EQ,1,1
:E END
:! 
:N Fnc_MeROMBD_3
:S    714,   208,   499
:T Command
:D ROM144 Keyopts settings
:H Hlp_E_S4.144
:C )/nopr
:C )_z1=2**(-100)
:C )_z(2)=0
:C )_z(3)=0
:C )_z(5)=rlinqr(0,14)+1
:C )_z(55)=144
:C )/go
:P (ELECMAG)
Inp_NoApply
! Exclude_from_paths
Cmd_R
 Fld_0
  Typ_Lab
  Prm_Electrostatic-Structural ROM144 Element
 Fld_2
  Typ_Def_*PAR(_z(5))
 Fld_3
  Typ_INT
  Prm_ID Number                    ID
! Exclude_from_paths
Cmd_)/NOPR
Cmd_)*set,_z(2)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select DOF set
  Typ_LIS_RadioB
  LIS_EMF VOLT    ,0
  LIS_EMF VOLT UX ,1
  Def_0
Cmd_)*set,_z(3)
 Fld_0
  Typ_Sep
 Fld_2
  Prm_Select matrix option
  Typ_LIS_RadioB
  LIS_Unsymmetric ,0
  LIS_Symmetric   ,1
Cmd_)/GO
Cal_Fnc_MeROMBD_2
:E END
:! 
:N Fnc_MeROMB_20
:S    701,   401,   293
:T Command
:A Hidden
:C )! Fnc_MeROMB_20
:C )/nopr
:C E,_z(21),_z(22),_z(23),_z(24),_z(25),_z(26),_z(27),_z(28)
:C EMORE,_z(29),_z(30),_z(31),_z(32),_z(33),_z(34),_z(35),_z(36)
:C EMORE,_z(37),_z(38),_z(39),_z(40)
:C )! --------------------------------
:C *GET,_zz2,active,,csys
:C *GET,_zz3,active,,dsys
:C CSYS,0
:C DSYS,0
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_)EPLOT
Cmd_)/NOPR
Cmd_)immed,on
Cmd_)/ESHAPE,1
Cmd_)*set,_zz2 $*set,_zz3 $*set,_zx8 $*set,_zy8 $*set,_zz8 $*set,_zn8
Cmd_)*set,_z $*set,_z1 $*set,_z2 $*set,_ddx $*set,_ddx $*set,_i98
Cmd_)/GO
! Exclude_from_paths
Cmd_CSYS,_zz2
! Exclude_from_paths
Cmd_DSYS,_zz3
:E END
:! 
:N Fnc_MeROMB_30
:S    981,   681,   293
:T Command
:A Hidden
:C )! Fnc_MeROMB_30
:C )/nopr
:C _zx8=_z(16)+_ddx
:C _zy8=_z(17)
:C _zn8=ndinqr(0,14)
:C *do,_i98,41,50           ! create 10 nodes straigth down
:C _zy8=_zy8-_ddx
:C _zn8=_zn8+1
:C _z(_i98)=_zn8
:C N,_zn8,_zx8,_zy8,_zz8
:C *enddo
:C E,_z(21),_z(22),_z(23),_z(24),_z(25),_z(26),_z(27),_z(28)
:C EMORE,_z(29),_z(30),_z(31),_z(32),_z(33),_z(34),_z(35),_z(36)
:C EMORE,_z(37),_z(38),_z(39),_z(40),_z(41),_z(42),_z(43),_z(44)
:C EMORE,_z(45),_z(46),_z(47),_z(48),_z(49),_z(50)
:C )! --------------------------------
:C *GET,_zz2,active,,csys
:C *GET,_zz3,active,,dsys
:C CSYS,0
:C DSYS,0
:C )immed,off
:C )/go
:P (ELECMAG)
Inp_P
! Exclude_from_paths
Cmd_)EPLOT
Cmd_)/NOPR
Cmd_)immed,on
Cmd_)/ESHAPE,1
Cmd_)*set,_zz2 $*set,_zz3 $*set,_zx8 $*set,_zy8 $*set,_zz8 $*set,_zn8
Cmd_)*set,_z $*set,_z1 $*set,_z2 $*set,_ddx $*set,_ddx $*set,_i98
Cmd_)/GO
! Exclude_from_paths
Cmd_CSYS,_zz2
! Exclude_from_paths
Cmd_DSYS,_zz3
:E END
:! 
:N Fnc_Menu_Refresh
:S    106,    74,    25
:T Cmd
:C )! Fnc_Menu_Refresh
Inp_P
Cmd_)!
Cal_REFRESH
:E END
:! 
:N Fnc_MeshAttrib
:S   2893,  1167,  1719
:T Command
:C )! Fnc_MeshAttrib
:C )/NOPR
:C )KEYW,ETLIST,0
:C )KEYW,RLLIST,0
:C )KEYW,MPLIST,0
:C )KEYW,CSLIST,0
:C )KEYW,YESSECT,0
:C )KEYW,SELIST,0
:C )KEYW,ETERR,0
:C )KEYW,RLERR,0
:C )KEYW,MPERR,0
:C )KEYW,CSERR,0
:C )KEYW,SEERR,0
:C )_z1=ETYIQR(0,12)
:C )*IF,_z1,gt,10,then
:C )KEYW,ETLIST,1
:C )*ENDIF
:C )*IF,_z1,gt,400,then ! *** 400 is the limit in cmdknl.F ***
:C )KEYW,ETLIST,0
:C )KEYW,ETERR,1
:C )*ENDIF
:C )_z2=RLINQR(0,12)
:C )*IF,_z2,gt,10,then
:C )KEYW,RLLIST,1
:C )*ENDIF
:C )*IF,_z2,gt,400,then
:C )KEYW,RLLIST,0
:C )KEYW,RLERR,1
:C )*ENDIF
:C )_z3=MPINQR(0,0,12)
:C )*IF,_z3,gt,10,then
:C )KEYW,MPLIST,1
:C )*ENDIF
:C )*IF,_z3,gt,400,then
:C )KEYW,MPLIST,0
:C )KEYW,MPERR,1
:C )*ENDIF
:C )_z4=CSYIQR(0,12)
:C )*IF,_z4,gt,10,then
:C )KEYW,CSLIST,1
:C )*ENDIF
:C )*IF,_z4,gt,400,then
:C )KEYW,CSLIST,0
:C )KEYW,CSERR,1
:C )*ENDIF
:C )_z5=SECTINQR(0,12)
:C )*IF,_z5,gt,0,then
:C )KEYW,YESSECT,1
:C )*ENDIF
:C )*IF,_z5,gt,10,then
:C )KEYW,SELIST,1
:C )*ENDIF
:C )*IF,_z5,gt,400,then
:C )KEYW,SELIST,0
:C )KEYW,SEERR,1
:C )*ENDIF
:C )/GO
:A Default Attribs
:D Meshing Attributes
:K #(PREP7)
:H Hlp_UI_meshatt
Inp_NoApply
Fld_0
 Prm_Default Attributes for Meshing
Fld_0
 K_FL(PR_SGUI)
 Prm_ 
Fld_0
 K_FL(PR_SGUI)
 Typ_Lab
  Prm_To specify the element shape, material, and attributes use the
Fld_0
 K_FL(PR_SGUI)
 Typ_Lab
  Prm_Mechanical Toolbar Setup tab.
Fld_0
 K_FL(PR_SGUI)
 Typ_Sep
Cmd_TYPE
 K_CM(pr_sgui)
 Fld_0
 Typ_Sep
 Fld_2
  K_FL(eterr)
  Prm_[TYPE]  Element type number
  K_LN(etlist)
  Typ_LIS_OPTIONB
  K_LN(ETLIST&eterr)
  Typ_LIS
  LIS_*READ,TYPE
  Def_*GET(ACTIVE,,TYPE)
 Fld_2
  K_FL(ETERR)
  Prm_[TYPE]  Element type number
  Typ_Real
  Def_*GET(ACTIVE,,TYPE)
 Fld_0
 Typ_Sep
Cmd_MAT
 K_CM(pr_sgui)
 Fld_2
  K_FL(mperr)
  Prm_[MAT]   Material number
  K_LN(mplist)
  Typ_LIS_OPTIONB
  K_LN(MPLIST)
  Typ_LIS
  LIS_*READ,MAT
  Def_*GET(ACTIVE,,MAT)
 Fld_2
  K_FL(MPERR)
  Prm_[MAT]   Material number
  Typ_Real
  Def_*GET(ACTIVE,,MAT)
 Fld_0
 Typ_Sep
Cmd_REAL
 K_CM(pr_sgui)
 Fld_2
  K_FL(rlerr)
  Prm_[REAL]  Real constant set number
  K_LN(rllist)
  Typ_LIS_OPTIONB
  K_LN(RLLIST)
  Typ_LIS
  LIS_*READ,REAL
  Def_*GET(ACTIVE,,REAL)
 Fld_2
  K_FL(RLERR)
  Prm_[REAL]  Real constant set number
  Typ_Real
  Def_*GET(ACTIVE,,REAL)
 Fld_0
 Typ_Sep
Cmd_ESYS
 Fld_2
  K_FL(cserr)
  Prm_[ESYS]  Element coordinate sys
  K_LN(cslist)
  Typ_LIS_OPTIONB
  K_LN(CSLIST)
  Typ_LIS
  LIS_*READ,ESYS
  Def_*GET(ACTIVE,,ESYS)
 Fld_2
  K_FL(CSERR)
  Prm_[ESYS]  Element coordinate sys
  Typ_Real
  Def_*GET(ACTIVE,,ESYS)
 Fld_0
 Typ_Sep
Cmd_SECNUM
 Fld_2
  K_FL(seerr)
  Prm_[SECNUM]  Section number
  K_LN(selist)
  Typ_LIS_OPTIONB
  K_LN(SELIST)
  Typ_LIS
  LIS_*READ,SECT
  K_LN(YESSECT)
  LIS_No Section, ,
  Def_*GET(ACTIVE,,SECT)
 Fld_2
  K_FL(SEERR)
  Prm_[SECNUM]  Section number
  Typ_Real
  Def_*GET(ACTIVE,,SECT)
:E End
:! 
:N Fnc_Mesh_Check
:S    770,   545,   217
:T Command
:C )! Fnc_Mesh_Check
:C )/NOPR
:C )*GET,_z1,common,,cfprp7,,int,102
:C )*IF,_z1,eq,0,then
:C )_z3='ON'
:C )*ELSEIF,_z1,eq,1,then
:C )_z3='WARN'
:C )*ELSEIF,_z1,eq,-1,then
:C )_z3='ON'
:C )*ELSE
:C )_z3='OFF'
:C )*ENDIF
:C )*GET,_z4,common,,cfprp7,,int,58   ! model-fea checking    
:C )*IF,_z4,EQ,1,THEN
:C )_z5='NOCHECK'
:C )*ELSEIF,_Z4,EQ,2,THEN
:C )_z5='CHECK'
:C )*ELSE
:C )_z5='STAT'
:C )*ENDIF
:C )/GO
:A Model Checking
:D Model Checking Controls
:K #(PREP7)+(igesfail)
:H Hlp_C_MODMSH
Inp_NoApply
Cmd_MODMSH
 Fld_2
  Prm_[MODMSH]  Model/FEA checking
  Typ_LIS_OptionB
  LIS_Give status     ,STAT
  LIS_Deactivate check,NOCHECK
  LIS_Reactivate check,CHECK
  LIS_Detach          ,DETACH
  Def_*PAR(_z5)
:E END 
:! 
:N Fnc_Mesh_tool
:S    551,   404,   140
:T Cmd
:C )! Fnc_Mesh_tool
:C )/NOPR
:C )*get,_z1,active,,routin
:C )*get,_z2,active,,keyw,,rezone
:C )*if,_z2,eq,1,then
:C )_z2=17
:C )*endif
:C )*if,_z1,ne,17,then
:C )_z2=')!'
:C )*create,ansuitmp
:C )*msg,warn,
:C )The Meshing Tool is only available in PREP7
:C )*end
:C )/input,ansuitmp
:C )*else
:C )_z2=')/UI'
:C )*endif
:C )/go
:A MeshTool
:K #(igesfail)
Inp_p
! Exclude_from_paths
Cmd_)/UI,MESH,1
   Fld_1
   Typ_Def_*PAR(_z2)
   Fld_2
   Typ_Def_MESH,1
Cal_REFRESH
! Cust_Cal_Fnc_Meshing_tool
:E END
:! 
:N Fnc_Message
:S   2722,  1178,  1537
:T Cmd
:C )!Fnc_Message
:!
:! *** primary function:   This function block is used to implement
:!                         the *MSG command from a function block
:!                         it allows for 80 characters per line
:!
:! input arguments:
:!    variable (typ,siz,intent)    description
:!    _z1                        - MSGPOP switch to force showing all
:!                                 messages regardless of type
:!    CPAR(100-101)              - *MSG fields
:!    CPAR(110-139)              - Each set of 3 consecutive vectors
:!                                 is 80 characters set by using *CSET
:!                                 If more than 1 line is used the 80th
:!                                 character must be an "&" ampersand
:!                     Cmd_)*CSET,110,110,'123456789x123456789x123456789x12'
:!                     Cmd_)*CSET,111,111,'123456789x123456789x123456789x12'
:!                     Cmd_)*CSET,112,112,'123456789x12345&'
:!
:! output arguments:
:!    none
:C )!
:C )/NOPR
:C )*GET,_z2,COMMON,,D3COM2,,INT,31
:C )*IF,_z1,EQ,'POP',then
:C )/UIS,MSGPOP,0
:C )*SET,_z1,' '
:C )*ENDIF
:C )/GO
Inp_P
Cmd_)/NOPR
Cmd_)*CREATE,ansuitmp
Cmd_)*MSG
 Fld_2
  Typ_Def_*CPAR(100)
  Dlm_~
 Fld_3
  Typ_Def_*CPAR(101)
Cmd_)!
 Fld_1
  Typ_Def_)
  Dlm_~
 Fld_2
  Typ_Def_*CPAR(110)
  Dlm_~
 Fld_3
  Typ_Def_*CPAR(111)
  Dlm_~
 Fld_4
  Typ_Def_*CPAR(112)
Cmd_)!
 Fld_1
  Typ_Def_)
  Dlm_~
 Fld_2
  Typ_Def_*CPAR(113)
  Dlm_~
 Fld_3
  Typ_Def_*CPAR(114)
  Dlm_~
 Fld_4
  Typ_Def_*CPAR(115)
Cmd_)!
 Fld_1
  Typ_Def_)
  Dlm_~
 Fld_2
  Typ_Def_*CPAR(116)
  Dlm_~
 Fld_3
  Typ_Def_*CPAR(117)
  Dlm_~
 Fld_4
  Typ_Def_*CPAR(118)
Cmd_)!
 Fld_1
  Typ_Def_)
  Dlm_~
 Fld_2
  Typ_Def_*CPAR(119)
  Dlm_~
 Fld_3
  Typ_Def_*CPAR(120)
  Dlm_~
 Fld_4
  Typ_Def_*CPAR(121)
Cmd_)!
 Fld_1
  Typ_Def_)
  Dlm_~
 Fld_2
  Typ_Def_*CPAR(122)
  Dlm_~
 Fld_3
  Typ_Def_*CPAR(123)
  Dlm_~
 Fld_4
  Typ_Def_*CPAR(124)
Cmd_)!
 Fld_1
  Typ_Def_)
  Dlm_~
 Fld_2
  Typ_Def_*CPAR(125)
  Dlm_~
 Fld_3
  Typ_Def_*CPAR(126)
  Dlm_~
 Fld_4
  Typ_Def_*CPAR(127)
Cmd_)!
 Fld_1
  Typ_Def_)
  Dlm_~
 Fld_2
  Typ_Def_*CPAR(128)
  Dlm_~
 Fld_3
  Typ_Def_*CPAR(129)
  Dlm_~
 Fld_4
  Typ_Def_*CPAR(130)
Cmd_)!
 Fld_1
  Typ_Def_)
  Dlm_~
 Fld_2
  Typ_Def_*CPAR(131)
  Dlm_~
 Fld_3
  Typ_Def_*CPAR(132)
  Dlm_~
 Fld_4
  Typ_Def_*CPAR(133)
Cmd_)!
 Fld_1
  Typ_Def_)
  Dlm_~
 Fld_2
  Typ_Def_*CPAR(134)
  Dlm_~
 Fld_3
  Typ_Def_*CPAR(135)
  Dlm_~
 Fld_4
  Typ_Def_*CPAR(136)
Cmd_)!
 Fld_1
  Typ_Def_)
  Dlm_~
 Fld_2
  Typ_Def_*CPAR(137)
  Dlm_~
 Fld_3
  Typ_Def_*CPAR(138)
  Dlm_~
 Fld_4
  Typ_Def_*CPAR(139)
Cmd_)*END
Cmd_)/INPUT,ansuitmp
Cmd_)/UIS,MSGPOP
 Fld_2
  Typ_Def_*PAR(_z2)
Cmd_)/GO
:E End
:! 
:N Fnc_Msgctrls
:S    963,   125,   831
:T Cmd
:C )! Fnc_Msgctrls
:A Message Controls
:D Message Controls
:H Hlp_UI_msgctrls
Cmd_/UIS
Fld_0
Typ_Lab
Prm_[/UIS]  Display of messages in pop-up dialogs
Fld_2
Typ_Def_MSGPOP
Fld_3
Prm_MSGPOP  Use pop-up dialogs for
Typ_Lis_OptionB
LIS_Note+Warn+Errors,1
LIS_Warnings+Errors ,2
LIS_Errors only     ,3
Def_*GET(COMMON,,d3com2,,int,31)
! Exclude_from_paths
Cmd_KEYW,PR_SGVOF
Fld_2
Prm_  Suppress Verify pop-up dialogs
Typ_Logi,No,Yes
Def_*GET(ACTIVE,,KEYWORD,,PR_SGVOF)
Fld_0
Typ_Sep
Cmd_/NERR
Fld_0
Typ_Lab
Prm_[/NERR]  Limits on number of warning and error messages (per command)
Fld_2
Typ_INT
Prm_NMERR  Max number displayed
Def_*GET(COMMON,,errcom,,int,6)
Fld_3
Typ_INT
Prm_NMABT  Max number before abort
Def_*GET(COMMON,,errcom,,int,7)
Fld_5
Typ_Logi,Off,On
Prm_IFKEY  Abort if /INPUT errors
Def_*GET(COMMON,,errcom,,int,27)
Fld_6
Typ_INT
Prm_NUM    Warnings before stop warn
Def_*GET(COMMON,,ertrkcm,,int,2)
:E END
:! 
:N Fnc_MshrOpts
:S   3382,  1093,  2282
:T Cmd
:A    Mesher Opts
:D Mesher Options
:C )! Fnc_MshrOpts
:C )/NOPR
:C )*GET,_z2,common,,mesh_tol,,int,24
:C )*GET,_z7,common,,mesh_tol,,int,11
:C )*GET,_z1,ACTIVE,,KEYWORD,,ACCEPT
:C )*GET,_z4,ACTIVE,,KEYWORD,,MESHTOOL
:C )*IF,_z7,eq,0,then
:C )_z9=1
:C )*ENDIF
:C )*IF,_z7,eq,0,then
:C )*IF,_z2,eq,2,then
:C )_z9=3
:C )*ENDIF
:C )*ENDIF
:C )*IF,_z7,eq,2,then
:C )*IF,_z2,eq,1,then
:C )_z9=2
:C )*ELSE
:C )_z9=4
:C )*ENDIF
:C )*ENDIF
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,4
:C )*SET,_zc(1),'ALT2','DEFA','ALTE','MAIN'
:C )*DEL,_zc1
:C )*DIM,_zc1,CHAR,4
:C )*SET,_zc1(1),'ALTE','    ','MAIN','DEFA'
:C )*GET,_z3,common,,mesh_tol,,int,15
:C )_z3=_z3+1
:C )*GET,_z5,common,,cfprp7,,int,107
:C )*IF,_z5,lt,0,then
:C )_z5=0
:C )*ENDIF
:C )*GET,_z6,common,,mesh_tol,,int,13
:C )_z6=_z6+1
:C )*GET,_z44,common,,mesh_tol,,int,44
:C )*DEL,_zc2
:C )*DIM,_zc2,CHAR,2
:C )*SET,_zc2(1),'OFF ','ON  '
:C )*DEL,_zc3
:C )*DIM,_zc3,CHAR,3
:C )*SET,_zc3(1),'DEFA ','MAIN','ALTE'
:C )*GET,_z8,common,,mesh_tol,,int,38
:C )_z8=_z8+1
:C )/GO
:K #(igesfail)
:H Hlp_UI_mshropts
Inp_NoApply
Cmd_MOPT,AMESH
 Fld_0
  Typ_Lab
   Prm_[MOPT]  Mesher options
 Fld_2
  Prm_AMESH   Triangle Mesher
  Typ_Lis_OptionB
   Lis_Program chooses,DEFA
   Lis_Main       ,MAIN
   Lis_Alternate  ,ALTE
   Lis_Alternate 2,ALT2
  Def_*PAR(_zc(_z9))
Cmd_MOPT,QMESH
 Fld_2
  Prm_QMESH   Quad Mesher
  Typ_Lis_OptionB
   Lis_Program chooses,DEFA
   Lis_Main       ,MAIN
   Lis_Alternate  ,ALTE
  Def_*PAR(_zc3(_z8))
Cmd_MOPT,VMESH
  Fld_2
  Prm_VMESH   Tet Mesher
  Typ_Lis_OptionB
  Lis_Program chooses,DEFA
  Lis_Alternate       ,ALTE
  Lis_Main       ,MAIN
  Def_*PAR(_zc1(_z3))
Cmd_MOPT,TIMP
  Fld_2
  Prm_TIMP    Tet Improvement in VMESH
  Typ_Lis_OptionB
  Lis_0 (Off)         ,0
  Lis_1 (Def)         ,1
  Lis_2               ,2
  Lis_3               ,3
  Lis_4               ,4
  Lis_5               ,5
  Lis_6 (Max)         ,6
  Def_*GET(common,,mesh_tol,,int,16)
Cmd_MOPT,PYRA
  Fld_2
  Prm_PYRA    Hex to Tet Interface
  Typ_Lis_OptionB
  Lis_Pyramids,ON
  Lis_No Pyramids,OFF
  Def_*PAR(_zc2(_z6))
Cmd_MOPT,AORD
  Fld_2
  Prm_AORD    Mesh Areas By Size
  Typ_LOGI, No, Yes
  Def_*PAR(_z44)
Cmd_MOPT,SPLIT
  Fld_2
  Prm_SPLIT   Split poor quality quads
  Typ_Lis_OptionB
  Lis_Off, 0
  Lis_On Error,1
  Lis_On Warning,2
  Def_*GET(common,,mesh_tol,,int,8)
Fld_0
Typ_Sep
Cmd_MSHKEY
K_CM(meshtool)
   Fld_0
   Prm_[MSHKEY]  Set Mesher Key
   Fld_2
   Prm_KEY     Mesher Type
   Typ_LIS_RADIOB
   LIS_Free    ,0
   LIS_Mapped  ,1
   Def_*PAR(_z5)
   Fld_0
   Typ_Sep
Cmd_MSHMID
Fld_0
 Typ_Lab
  Prm_[MSHMID]  Midside node key
Fld_2
 Prm_KEY     Midside node placement
 Typ_LIS_OPTIONB
 LIS_Follow curves   ,0
 LIS_Force straight  ,1
 LIS_No midside nodes,2
 Def_*GET(common,,cfprp7,,int,55)
Fld_0
Typ_Sep
Cmd_MSHPATTERN
K_CM(rezone)
Fld_0
 Typ_Lab
  Prm_[MSHPATTERN]  Mapped Tri Meshing Pattern
Fld_2
 Prm_KEY     Pattern Key
 Typ_LIS_OPTIONB
 LIS_Program chooses ,0
 LIS_Split in dir 1 ,1
 LIS_Split in dir 2 ,2
 Def_*GET(common,,cfprp7,,int,109)
Fld_0
Typ_Sep
! Exclude_from_paths
Cmd_KEYW,ACCEPT
 Fld_2
 Prm_Accept/Reject prompt ?
 Typ_LOGI, No, Yes
 Def_*PAR(_z1)
 Fld_0
 Typ_Lab
 Prm_If yes, a dialog box will appear after a successful        
 Fld_0
 Typ_Lab
 Prm_meshing operation asking if the mesh should be kept.
Cmd_)!
 Fld_2
 Typ_Def_*PAR(_z4)
Cal_Fnc_MSHA,2,eq,0
:E END
:! 
:N Fnc_MshrStat
:S    735,   405,   323
:T Cmd_N
:C )! Fnc_MshrStat
:C )/NOPR
:C )KEYW,KEY1,0
:C )*GET,_z1,ACTIVE,,ROUTIN
:C )*IF,_z1,ne,17,THEN
:C )KEYW,KEY1,1
:C )*GET,_z2,COMMON,,D3COM2,,INT,31
:C )/UIS,MSGPOP,0
:C )*CREATE,ansuitmp
:C )*MSG,note
:C )<Meshing> status is available only in the preprocessor.
:C )*END
:C )/input,ansuitmp
:C )/UIS,MSGPOP,_z2
:C )*endif
:C )/GO
:A Meshing 
:K #(igesfail)
Inp_P
Cmd_)/nopr
K_CM(key1)
Cmd_)/LWBEGIN,ansuitmp
K_CM(key1)
! Cust_Cmd_MESHING
Cmd_)$MESH
K_CM(key1)
Cmd_)$STAT
K_CM(key1)
K_CM(key1)
! Exclude_from_paths
Cmd_)/COM
K_CM(key1)
Cmd_)$MOPT, STAT
K_CM(key1)
K_CM(key1)
! Exclude_from_paths
Cmd_)$SMRTSIZE, STAT
K_CM(key1)
K_CM(key1)
Cmd_)/LWSHOW,ansuitmp
K_CM(key1)
Cmd_)/go
:E END
:! 
:N Fnc_N
:S    415,   139,   269
:T Command
:C )! Fnc_N
:A In Active CS
:D Create Nodes in Active Coordinate System
:K #(PREP7)
:H Hlp_C_N
Cmd_N
 Fld_0
  Typ_Lab
  Prm_[N]  Create Nodes in Active Coordinate System
 Fld_2
  Prm_NODE   Node number
  Typ_INT
  Def_Blank
 Fld_3
  Prm_X,Y,Z  Location in active CS
  Typ_REAL3
 Fld_0
  Prm_THXY,THYZ,THZX
 Fld_4
  Prm_       Rotation angles (degrees)
  Typ_REAL3
:E End
:! 
:N Fnc_N/A_Prod
:S    471,    47,   417
:T Cmd
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z1,'POP'
Cmd_)*CSET,100,100,'WARN'
Cmd_)*CSET,110,110,'This function is not avaiable in'
Cmd_)*CSET,111,111
 Fld_2
  Typ_Def_*STR(' the %_zc(1,1,1)%%_zc(1,2,1)%%_zc(1,3,1)%')
Cmd_)*CSET,112,112,' product   '
Cmd_)*CSET,113,121,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,122,130,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cmd_)*CSET,131,139,' ',' ',' ',' ',' ',' ',' ',' ',' '
Cal_Fnc_Message
:E End
:! 
:N Fnc_NANG
:S    361,   185,   169
:T Cmd_P
:C )! Fnc_NANG
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,10
:C )/GO
:A    By Vectors
:D Rotate Node by Vector
:K #(PREP7)
:P (mdl2d)
:H Hlp_C_NANG
Inp_P
Cmd_)/NOPR
Cmd_)*set,_z(1)
 Fld_2
  Typ_NODE
  Prm_[NANG]  Pick or enter node to be rotated by orientation vectors
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_NANG_2
:E End
:! 
:N Fnc_NANG_2
:S    651,   179,   465
:T Command
:C )! Fnc_NANG_2
:A    by Vector
:D Rotate Nodal CS by Orientation Vectors
:K #(PREP7)
:H Hlp_C_NANG
:P (LINPLUS*THERMAL*ELECMAG)
Cmd_)/NOPR
Cmd_)*CSET,1,4
 Fld_0
  Typ_Lab 
  Prm_[NANG]  Rotate Nodal CS by Orientation Vectors
 Fld_2
  Prm_NODE      Node to be rotated
  Typ_INT
  Def_*PAR(_z(1))
 Fld_3
  Prm_X1,Y1,Z1  X Coord for each vect
  Typ_REAL3
  Def_Blank,Blank,Blank
Cmd_)*CSET,5,7
 Fld_2
  Prm_X2,Y2,Z2  Y Coord for each vect
  Typ_REAL3
  Def_Blank,Blank,Blank
Cmd_)*CSET,8,10
 Fld_2
  Prm_X3,Y3,Z3  Z Coord for each vect
  Typ_REAL3
  Def_Blank,Blank,Blank
Cmd_)/GO
Cal_Fnc_NANG_3
:E End
:! 
:N Fnc_NANG_3
:S    351,    66,   278
:T Command
:C )! Fnc_NANG_3
Inp_P
Cmd_NANG
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*CPAR(5)
 Fld_5
  Typ_Def_*CPAR(8)
 Fld_6
  Typ_Def_*CPAR(3)
 Fld_7
  Typ_Def_*CPAR(6)
 Fld_8
  Typ_Def_*CPAR(9)
 Fld_9
  Typ_Def_*CPAR(4)
 Fld_10
  Typ_Def_*CPAR(7)
 Fld_11
  Typ_Def_*CPAR(10)
:E End
:! 
:N Fnc_NAXIS
:S    448,   200,   241
:T Command
:C )! Fnc_NAXIS
:A About AXIS Section
:C )/NOPR
:C )*DEL,_z(1)
:C )*DIM,_z,,3
:C )/GO
:D About Axisymmetric Section
:K #(PREP7+AXISSECT)
:H Hlp_C_NAXIS
Cmd_NAXIS
 Fld_0
  Typ_Lab
  Prm_[NAXIS] Generate nodes for axisymmetric sections
 Fld_2
  Prm_Action
  Typ_LIS_OptionB
  LIS_Generate nodes  ,GEN
  LIS_Clear nodes     ,CLEAR
 Fld_3
  Prm_TOLER   Range of coincidence
  Typ_REAL
  Def_Blank
:E END
:! 
:N Fnc_NCNV
:S    833,   214,   612
:T Command
:C )! Fnc_NCNV
:A Criteria to Stop
:D Criteria to Stop an Analysis
:K #((PREP7*SOLUTION)+(STATIC*(TRNSIENT+FULL)*NOFILTER))
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_NCNV
Inp_NoApply
Cmd_NCNV
 Fld_0
  Typ_Lab
  Prm_[NCNV]  Criteria to Stop an Analysis
 Fld_2
  Prm_KSTOP  Stop if no convergence?
  Typ_LIS_OPTIONB
  LIS_No - do not stop,0
  LIS_Stop - quit prog,1
  LIS_Stop and stay   ,2
  Def_*GET(common,,stepcm,,int,55)
 Fld_3
  Prm_DLIM   Limit on nodal DOF solu
  Typ_REAL
  Def_*GET(common,,stepcm,,real,119)
 Fld_4
  Prm_ITLIM  Limit on cumulative iter
  Typ_REAL
  Def_*GET(common,,stepcm,,int,56)
 Fld_5
  Prm_ETLIM  Limit on elapsed time
  Typ_REAL
  Def_*GET(common,,stepcm,,real,123)
 Fld_6
  Prm_CPLIM  Limit on CPU time
  Typ_REAL
  Def_*GET(common,,stepcm,,real,124)
:E END
:! 
:N Fnc_NDELE
:S    229,   115,   107
:T Cmd_P
:C )! Fnc_NDELE
:A Nodes 
:D Delete Nodes
:K #(PREP7)
:H Hlp_C_NDELE
Inp_P
Cmd_NDELE
 Fld_2
  Typ_NODE
  Prm_[NDELE]  Pick or enter nodes to be deleted
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_NDIS
:S    189,    94,    88
:T Cmd_P
:A ND distances
:D Node distances
:H Hlp_C_NDIST
Inp_P
Cmd_NDIST
 Fld_2
  Prm_[NDIS]   Pick two nodes
  Typ_NODE
  Min_2
  Max_2
  PFM_2
:E End
:! 
:N Fnc_NDREAD
:S    290,   119,   164
:T Cmd_P
:C )! Fnc_NDREAD
:A NODOUT file
:D Choose node for data
:H Hlp_C_EDREAD
Inp_P
Cmd_)/NOPR
Cmd_)*DEL,_z
Cmd_)*DIM,_z,,6
Cmd_)*SET,_z(1)
Fld_2
Prm_[EDREAD] Read data from the NODOUT file
Typ_NODE
Min_1
Cnt_1
PFM_2
!
Cmd_)/GO
Cal_Fnc_NODE3
:E END
:! 
:N Fnc_NEQIT
:S    392,   275,   110
:T Command
:C )! Fnc_NEQIT
:C )/NOPR
:C )*GET,_z1,common,,stepcm,,int,16
:C )*IF,_z1,EQ,0,THEN
:C )  _z1=25
:C )*ENDIF
:C )/GO
:A Equilibrium Iter
:D Equilibrium Iterations
:K #(PREP7*SOLUTION)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_NEQIT
Inp_NoApply
Cmd_NEQIT
 Fld_2
  Prm_[NEQIT]  No. of equilibrium iter
  Typ_INT
  K_LN(nlcntrl)
  Def_*PAR(_z1)
:E END
:! 
:N Fnc_NFORCE
:S    558,   193,   358
:T Command
:C )! Fnc_NFORCE
:A Sum @ Each Node
:D Calculate Force/Moment Sum at Each Node
:K #(POST1+RESULTS)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_NFORCE
Inp_NoApply
Cmd_NFORCE
 Fld_0
  Typ_Lab
  Prm_[NFORCE]  This function calculates, for each selected node,
 Fld_0
  Typ_Lab
  Prm_          the nodal force and moment contributions of all selected
 Fld_0
  Typ_Lab
  Prm_          elements attached to the node.
 Fld_2
  Prm_ITEM      Selected Nodes
  Typ_LIS_OPTIONB
   LIS_ALL   , 
   LIS_Contact Only ,CONT
:E END
:! 
:N Fnc_NGEN_copy
:S    296,   157,   132
:T Cmd_P
:C )! Fnc_NGEN_copy
:C )! Nodes for NGEN command below
:A    Copy
:D Copy nodes 
:K #(PREP7)
:H Hlp_C_NGEN
Inp_P
Cmd_)!
  Fld_4
  Typ_NODE
  Prm_[NGEN]  Pick or enter nodes to be copied 
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_NGEN_copy_2
:E END
:! 
:N Fnc_NGEN_copy_2
:S    653,   156,   490
:T Command
:C )! Fnc_NGEN_copy_2
:C )/NOPR
:C )_z1=ndinqr(0,14)
:C )/GO
:D Copy nodes 
:K #(PREP7)
:H Hlp_C_NGEN
Cmd_NGEN
 Fld_0
  Typ_Lab
  Prm_[NGEN]  Copy Nodes
 Fld_2
  Prm_ITIME  Total number of copies -
  Typ_INT
  Def_2
 Fld_0
  Typ_Lab
   Prm_      - including original
 Fld_7
  Prm_DX     X-offset in active CS
  Typ_REAL
 Fld_8
  Prm_DY     Y-offset in active CS
  Typ_REAL
 Fld_9
  Prm_DZ     Z-offset in active CS
  Typ_REAL
 Fld_0
  Typ_Sep
 Fld_3
  Prm_INC    Node number increment 
  Typ_INT
  Def_*PAR(_z1)
 Fld_4
  Typ_Def_P51X 
 Fld_10
  Typ_REAL
  Prm_RATIO  Spacing ratio 
  Def_1.0
:E END
:! 
:N Fnc_NGEN_move
:S    338,   180,   151
:T Cmd_P
:C )! Fnc_NMODIF
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,4
:C )/GO
:A    Set of Nodes
:D Move Set of Nodes
:K #(PREP7)
:H Hlp_C_NMODIF
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_NODE
  Prm_[NMODIF]  Pick or enter nodes to be moved
  Min_1
  Cnt_s
  Pfm_1
  Pcn_1
Cmd_)/GO
Cal_Fnc_NGEN_move_2
:E END
:! 
:N Fnc_NGEN_move_2
:S    375,   125,   243
:T Command
:C )! Fnc_NGEN_move_2
:D Move Set of Nodes
:K #(PREP7)
:H Hlp_C_NMODIF
Cmd_NMODIF
 Fld_0
  Typ_Lab
  Prm_[NMODIF]  Move Set of Nodes
 Fld_2
  Typ_Def_P51X
 Fld_3
  Prm_       X-coord. in active CS
  Typ_REAL
 Fld_4
  Prm_       Y-coord. in active CS
  Typ_REAL
 Fld_5
  Prm_       Z-coord. in active CS
  Typ_REAL
:E END
:! 
:N Fnc_NKPT
:S    264,   122,   135
:T Cmd_P
:C )! Fnc_NKPT
:A On Keypoint
:D Create Node on KP
:K #(PREP7)
:H Hlp_C_NKPT
Inp_P
Cmd_NKPT
 Fld_2
  Typ_Def_0
 Fld_3
Prm_[NKPT]  Pick or enter keypoint at which to locate node
  Typ_KEYP
  Min_1
  Cnt_s
  Pcn_1
:E End
:! 
:N Fnc_NLDIAG
:S    224,   133,    84
:T Cmd
:C )! Fnc_NLDIAG
:A Nonlinear Diagnostics
:K #(SOLUTION)
:P (pp*LSDYNA)
:H Hlp_C_NLDIAG
Inp_P
! Cust_Cmd_NLDIAG
Cmd_)~eui,'euidl::solution::diagnostics::nldiag::interface'
:E END
:! 
:N Fnc_NLHIST
:S    202,   112,    83
:T Cmd
:C )! Fnc_NLHIST
:A Results Tracking
:P (FULL_ANS)
:H Hlp_C_NLHIST
Inp_P
! Cust_Cmd_NLHIST
Cmd_)~eui,'euidl::solution::timeHist::Initialize [list] 0'
:E END
:! 
:N Fnc_NLIST_SORT
:S    933,    99,   827
:C )! Fnc_NLIST_SORT
:D Sort NODE Listing
:H Hlp_C_NLIST
Cmd_NLIST
Fld_0
 Typ_Lab
 Prm_[NLIST]  Select node-list format and sorting criteria
Fld_2
 Typ_Def_ALL
Fld_5
 Typ_LIS_RadioB
  Prm_Output listing will contain
 Lis_Coord. w/ Angles," "
 Lis_Coordinates only,XYZ
Fld_6
 Typ_LIS_OptionB
  Prm_Sort first by
 Lis_X Coordinate,X
 Lis_Y Coordinate,Y
 Lis_Z Coordinate,Z
 Lis_NODE Number,NODE
 Lis_Theta XY   ,THXY
 Lis_Theta YZ   ,THYZ
 Lis_Theta XZ   ,THXZ
 Def_NODE
Fld_0
Fld_7
 Typ_LIS_OptionB
  Prm_Sort second by
 Lis_X Coordinate,X
 Lis_Y Coordinate,Y
 Lis_Z Coordinate,Z
 Lis_NODE Number,NODE
 Lis_Theta XY   ,THXY
 Lis_Theta YZ   ,THYZ
 Lis_Theta XZ   ,THXZ
 Def_NODE
Fld_0
Fld_8
 Typ_LIS_OptionB
  Prm_Sort third by
 Lis_X Coordinate,X
 Lis_Y Coordinate,Y
 Lis_Z Coordinate,Z
 Lis_NODE Number,NODE
 Lis_Theta XY   ,THXY
 Lis_Theta YZ   ,THYZ
 Lis_Theta XZ   ,THXZ
 Def_NODE
:E END
:! 
:N Fnc_NLIST_p
:S    224,   111,   106
:T Cmd_P
:C )! Fnc_NLIST_p
:A Nodes
:D List Picked Nodes
:H Hlp_C_NLIST
Inp_P
Cmd_NLIST
 Fld_2
  Prm_[NLIST]  Pick or enter nodes to be listed
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_NLOG
:S    514,   145,   362
:T Command
:C )! Fnc_NLOG
:A Natural Log
:D Natural Log of Time-History Variables
:K #(POST26)
:H Hlp_C_NLOG
Cmd_NLOG
Fld_0
Typ_Lab
Prm_[NLOG]                  IR = FACTB * LN(FACTA * IA)
Fld_2
Prm_IR   Reference number for result
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_9
Prm_FACTA  1st Factor
Typ_real
Def_1.0
Fld_3
Prm_IA     Variable
Typ_int
Def_Blank
Fld_0
Prm_  
Fld_10
Prm_FACTB  2nd Factor
Typ_real
Def_1.0
Fld_0
Prm_  
Fld_6
Prm_Name  User-specified label
Typ_CHAR,8
:E END
:! 
:N Fnc_NLPOST
:S    215,   123,    85
:T Cmd
:C )! Fnc_NLPOST
:A Nonlinear Diagnostics
:K #(POST1&RESULTS)
:H Hlp_C_NLPOST
Inp_P
! Cust_Cmd_NLDPOST
Cmd_)~eui,'euidl::solution::diagnostics::nlpost::interface'
:E END
:! 
:N Fnc_NMODIF
:S    438,   177,   254
:T Cmd_P
:C )! Fnc_NMODIF
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,4
:C )/GO
:A    Single Node  
:D Move Single Node
:K #(PREP7)
:H Hlp_C_NMODIF
Inp_P
Cmd_)/NOPR
Cmd_)!
 Fld_2
  Typ_NODE
  Prm_[NMODIF]  Pick or enter node to be moved
  Min_1
  Cnt_1
  Pfm_1
 Fld_3
  Typ_XYZ
  Prm_Pick WP location or enter coordinates where the node is to be moved
  Min_1
  Cnt_1
  Pfm_1
Cmd_)/GO
Cal_Fnc_NMODIF_2
:E End
:! 
:N Fnc_NMODIF_2
:S    452,   131,   314
:T Command
:C )! Fnc_NMODIF_2
:D Move and Modify a Single Node
:K #(PREP7)
:H Hlp_C_NMODIF
Cmd_NMODIF
 Fld_0
  Typ_Lab
  Prm_[NMODIF]  Move and Modify a Single Node
 Fld_2
  Typ_Def_P51X
 Fld_3
  Typ_Def_P51X
 Fld_0
  Typ_Lab
  Prm_Rotations of nodal CS 
 Fld_6
  Prm_THXY   about nodal Z-axis
  Typ_REAL
 Fld_7
  Prm_THYZ   about nodal X-axis
  Typ_REAL
 Fld_8
  Prm_THZX   about nodal Y-axis
  Typ_REAL
:E End
:! 
:N Fnc_NMODIF_ang
:S    356,   186,   163
:T Cmd_P
:C )! Fnc_NMODIF_ang
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,4
:C )/GO
:A    By Angles
:D Rotate Node by Angles
:K #(PREP7)
:H Hlp_C_NMODIF
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z(1)
 Fld_2
  Typ_NODE
  Prm_[NMODIF]  Pick or enter node to be rotated by angles
  Min_1
  Cnt_1
  PFM_2
Cmd_)/GO
Cal_Fnc_NMODIF_ang2
:E End
:! 
:N Fnc_NMODIF_ang2
:S    647,   246,   394
:T Command
:C )! Fnc_NMODIF_ang2
:D Rotate Node by Angles
:C )/nopr
:C )*get,_z(2),node,_z(1),ang,xy
:C )*get,_z(3),node,_z(1),ang,yz
:C )*get,_z(4),node,_z(1),ang,zx
:C )/go
:K #(PREP7)
:H Hlp_C_NMODIF
Cmd_NMODIF
 Fld_0
  Typ_Lab
  Prm_[NMODIF]  Rotate a Node by Specified Angles
 Fld_2
  Prm_NODE   Node to be rotated
  Typ_INT
  Def_*PAR(_z(1))
 Fld_0
  Typ_Lab
  Prm_Nodal rotation angles
 Fld_6
  Prm_THXY   about nodal Z-axis
  Typ_REAL
  Def_*PAR(_z(2))
 Fld_7
  Prm_THYZ   about nodal X-axis
  Typ_REAL
  Def_*PAR(_z(3))
 Fld_8
  Prm_THZX   about nodal Y-axis
  Typ_REAL
  Def_*PAR(_z(4))
:E End
:! 
:N Fnc_NODE2
:S    593,   116,   470
:T Command
:C )! Fnc_NODE2
:D Read data from the SPCFORC file 
:H Hlp_C_EDREAD
Cmd_EDREAD
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab
   Prm_[EDREAD] Read SPCFORC file data into variables for postprocessing
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Variable reference number
   Typ_INT
   Def_2
 Fld_3
   Typ_Char
   Typ_Def_SPCFORC
 Fld_4
   Typ_INT 
   Prm_Read data for node number...
   Def_*PAR(_z(1))
 Fld_5
   Prm_From load step
   Typ_Int
 Fld_6
   Prm_To load step
   Typ_Int
 Fld_0
  Typ_Lab
  Prm_                       - The default is for all load steps
:E END
:! 
:N Fnc_NODE3
:S    588,   114,   467
:T Command
:C )! Fnc_NODE3
:D Read data from the NODOUT file
:H Hlp_C_EDREAD
Cmd_EDREAD
 Fld_0
   Typ_Sep
 Fld_0
   Typ_Lab
   Prm_[EDREAD] Read NODOUT file data into variables for postprocessing
 Fld_0
   Typ_Sep
 Fld_2
   Prm_Variable reference number
   Typ_INT
   Def_2
 Fld_3
   Typ_Char
   Typ_Def_NODOUT
 Fld_4
   Typ_INT
   Prm_Read data for node number...
   Def_*PAR(_z(1))
 Fld_5
   Prm_From load step
   Typ_Int
 Fld_6
   Prm_To load step
   Typ_Int
 Fld_0
  Typ_Lab
  Prm_                       - The default is for all load steps
:E END
:! 
:N Fnc_NOORDER
:S    430,   173,   250
:T Command
:C )! Fnc_NOORDER
:A Reset Elem Order 
:D Reset Element Ordering
:K #(PREP7)
:P (LINPLUS*THERMAL*ELECMAG)
:H Hlp_C_NOORDER
Inp_NoApply
Cmd_NOORDER
Fld_0
 Typ_Lab
  Prm_[NOORDER]  This function reestablishes the original 
Fld_0
 Typ_Lab
  Prm_           element ordering.  No automatic reordering
Fld_0
 Typ_Lab
  Prm_           will occur at the beginning of the solution.
:E END
:! 
:N Fnc_NORA
:S    355,   118,   230
:T Cmd
:C )! Fnc_NORA
:A    On Areas
:D Rotate Nodal CS
:K #(PREP7)
:H Hlp_C_NORA
Inp_NoApply
Cmd_*CSET,1,3
 Fld_0
  Typ_Lab
   Prm_[NORA]  Rotate Nodal CS to Surface Normal
 Fld_4
  Prm_NDIR Direction of the normal
  Typ_LIS_OptionB
  LIS_Along area norm     ,1
  LIS_Opp to area norm     ,-1
Cal_Fnc_NORA_ara2
:E END
:! 
:N Fnc_NORA_ara2
:S    295,   130,   158
:T Cmd_P
:C )! Fnc_NORA_ara2
:A    On Areas
:D Rotate Nodal CS
:K #(PREP7)
:H Hlp_C_NORA
Inp_P
Cmd_NORA
 Fld_2
  Typ_AREA
  Prm_[NORA]  Pick or enter areas to be rotated
  Min_1
  Cnt_s
  Pcn_1
 Fld_3
  Typ_Def_*CPAR(3)
Cmd_/PSYMB,NDIR,1
Cmd_NPLO
:E End
:! 
:N Fnc_NORL
:S    353,   118,   228
:T Cmd
:C )! Fnc_NORL
:A    On Lines
:D Rotate Nodal CS
:K #(PREP7)
:H Hlp_C_NORL
Inp_NoApply
Cmd_*CSET,1,3
 Fld_0
  Typ_Lab
   Prm_[NORL]  Rotate Nodal CS to Line Normal
 Fld_4
  Prm_NDIR Direction of the normal
  Typ_LIS_OptionB
  LIS_Along line norm     ,1
  LIS_Opp to line norm     ,-1
Cal_Fnc_NORL_line2
:E End
:! 
:N Fnc_NORL_line2
:S    297,   132,   158
:T Cmd_P
:C )! Fnc_NORL_line2
:A    On Lines
:D Rotate Nodal CS
:K #(PREP7)
:H Hlp_C_NORL
Inp_P
Cmd_NORL
 Fld_2
  Typ_LINE
  Prm_[NORL]  Pick or enter lines to be rotated
  Min_1
  Cnt_s
  Pcn_1
 Fld_4
  Typ_Def_*CPAR(3)
Cmd_/PSYMB,NDIR,1
Cmd_NPLO
:E End
:! 
:N Fnc_NORL_with
:S    367,   132,   228
:T Cmd
:C )! Fnc_NORL_with
:A       with Area
:D Rotate Nodal CS
:K #(PREP7)
:H Hlp_C_NORL
Inp_NoApply
Cmd_*CSET,1,3
 Fld_0
  Typ_Lab
   Prm_[NORL]  Rotate Nodal CS to Line Normal
 Fld_4
  Prm_NDIR Direction of the normal
  Typ_LIS_OptionB
  LIS_Along line norm     ,1
  LIS_Opp to line norm     ,-1
Cal_Fnc_NORL_with2
:E End
:! 
:N Fnc_NORL_with2
:S    391,   136,   248
:T Cmd_P
:C )! Fnc_NORL_with2
:A    ...with Area
:D Rotate Nodal CS
:K #(PREP7)
:H Hlp_C_NORL
Inp_P
Cmd_NORL
  Fld_2
Prm_[NORL]  Pick or enter line to be rotated
   Typ_LINE
   Min_1
   Cnt_1
  Fld_3
Prm_[NORL]  Pick or enter the area that contains this line
   Typ_AREA
   Min_1
   Cnt_1
 Fld_4
  Typ_Def_*CPAR(3)
Cmd_/PSYMB,NDIR,1
Cmd_NPLO
:E End
:! 
:N Fnc_NREAD_NRRANG
:S    381,   159,   215
:T Command
:C )! Fnc_NREAD_NRRANG
:C )*SET,_zx,'*'
:A Read Node File
:D Read Node File
:K #(PREP7)
:H Hlp_UI_nread
Inp_NoApply
Cmd_NRRANG
 Fld_0
  Typ_Lab
  Prm_[NRRANG]  Range of Node Numbers
 Fld_2
  Prm_ NMIN,NMAX,NINC
  Typ_INT3
  Def_1,99999999,1
Cmd_NREAD
 Fld_2
  Prm_[NREAD]   Name of node file
  Typ_FILE
  Def_*PAR(_zx)
:E End
:! 
:N Fnc_NREF
:S    451,   130,   314
:T Cmd_P
:A    Nodes
:D Refine mesh at nodes
:C )!Fnc_NREF
:C )/NOPR
:C )/GO
:H Hlp_C_NREFINE
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CM,_Y,NODE
! Exclude_from_paths
Cmd_NSEL
 Fld_5
  Prm_[NREF]  Pick or enter nodes for refinement
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  PFM_1
! Exclude_from_paths
Cmd_CM,_Y1,NODE
! Exclude_from_paths
Cmd_CMSEL,S,_Y
! Exclude_from_paths
Cmd_CMDELE,_Y
Cmd_)/GO
Cal_Fnc_NREF_1
:E END
:! 
:N Fnc_NREF_1
:S    563,   142,   414
:T Cmd
:A Refine Mesh at NODE
:D Refine Mesh at Node
:C )!Fnc_NREF_1
:C )/NOPR
:C )/GO
:H Hlp_C_NREFINE
Inp_NoApply
Cmd_)/NOPR
Cmd_)*SET,_z1
Fld_0
Typ_Lab
Prm_[NREF] Refine mesh at nodes
 Fld_2
  Prm_LEVEL   Level of refinement
  Typ_Lis_OptionB
  Lis_1 (Minimal),1
  Lis_2     ,2
  Lis_3     ,3
  Lis_4     ,4
  Lis_5 (Maximum),5
  Def_1
Cmd_LSCLEAR,FE
K_CM(PR_SGUI)
Cmd_MTchgmsh
K_CM(PR_SGUI)
Cmd_)/GO
Fld_2
 K_FL(pr_sgui)
 Prm_Advanced options
 Typ_LOGI,No, Yes
 Def_0
Cal_Fnc_NREF_2a,2,eq,0
Cal_Fnc_NREF_2b,2,eq,1
:E END
:! 
:N Fnc_NREF_2a
:S    280,    64,   209
:T Cmd
:C )! Fnc_NREF_2a
Inp_p
Cmd_NREFINE
 Fld_2
 Typ_Def__Y1
 Fld_3
 Typ_Def_ 
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
 Typ_Def_1
 Fld_7
 Typ_Def_1
 Fld_8
 Typ_Def_1
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_NREF_2b
:S    625,   122,   496
:T Cmd
:D Refine mesh at nodes advanced options
:C )! Fnc_NREF_2b
:H Hlp_C_NREFINE
Cmd_NREFINE
 Fld_2
 Typ_Def__Y1
 Fld_3
 Typ_Def_ 
 Fld_4
 Typ_Def_
 Fld_5
 Typ_Def_*PAR(_z1)
 Fld_6
  Prm_DEPTH   Depth of refinement
  Typ_INT
  Def_1
 Fld_7
  Prm_POST    Postprocessing
  Typ_Lis_OptionB
  Lis_Off             ,0
  Lis_Cleanup + Smooth,1
  Lis_Smooth          ,2
   Def_1
 Fld_8
  Prm_RETAIN  Retain Quads
  Typ_LOGI,No    ,Yes
   Def_1
Fld_0
  Typ_Lab
  Prm_        Note: This option is only valid with an all quad mesh.
Cmd_)/NOPR
! Exclude_from_paths
Cmd_CMDELE,_Y1
Cmd_)/GO
:E END
:! 
:N Fnc_NROTAT
:S    265,   135,   123
:T Cmd_P
:C )! Fnc_NROTAT
:A    To Active CS
:D Rotate Nodes into CS
:K #(PREP7)
:H Hlp_C_NROTAT
Inp_P
Cmd_NROTAT
  Fld_2
Prm_[NROTAT]  Pick or enter nodes to be rotated into active CS
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
:E End
:! 
:N Fnc_NSCALE_copy
:S    325,   183,   135
:T Cmd_P
:C )! Fnc_NSCALE_copy
:C )! Nodes for NSCALE command below
:A    Scale & Copy
:D Scale and Copy Nodes 
:K #(PREP7)
:H Hlp_C_NSCALE
Inp_P
Cmd_)!
  Fld_3
  Typ_NODE
  Prm_[NSCALE]  Pick or enter nodes to be scaled
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_NSCALE_copy_2
:E END
:! 
:N Fnc_NSCALE_copy_2
:S    432,   133,   292
:T Command
:C )! Fnc_NSCALE_copy_2
:D Scale and Copy Nodes 
:K #(PREP7)
:H Hlp_C_NSCALE
Cmd_NSCALE
 Fld_0
  Typ_Lab 
  Prm_[NSCALE]  Scale and Copy Nodes
 Fld_3
  Typ_Def_P51X
 Fld_6
  Prm_RX,RY,RZ  Scale factors -
  Typ_REAL3
  Def_1.0,1.0,1.0
 Fld_0
  Typ_Lab 
  Prm_          - in the active coordinate system
 Fld_2
  Prm_INC       Node number increment
  Typ_INT
  Def_Blank
:E END
:! 
:N Fnc_NSCALE_move
:S    326,   183,   136
:T Cmd_P
:C )! Fnc_NSCALE_move
:C )! Nodes for NSCALE command below
:A    Scale & Move
:D Scale and Move Nodes 
:K #(PREP7)
:H Hlp_C_NSCALE
Inp_P
Cmd_)!
  Fld_3
  Typ_NODE
  Prm_[NSCALE]  Pick or enter nodes to be scaled 
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_NSCALE_move_2
:E END
:! 
:N Fnc_NSCALE_move_2
:S    421,   133,   281
:T Command
:C )! Fnc_NSCALE_move_2
:D Scale and Move Nodes 
:K #(PREP7)
:H Hlp_C_NSCALE
Cmd_NSCALE
 Fld_0
  Typ_Lab 
  Prm_[NSCALE]  Scale and Move Nodes
 Fld_2
  Typ_Def_0
 Fld_3
  Typ_Def_P51X
 Fld_6
  Prm_RX   X-scale factor ratio
  Typ_REAL
  Def_1
 Fld_7
  Prm_RY   Y-scale factor ratio
  Typ_REAL
  Def_1
 Fld_8
  Prm_RZ   Z-scale factor ratio
  Typ_REAL
  Def_1
:E END
:! 
:N Fnc_NSEL_A
:S    277,   120,   150
:T Cmd_P
:C )! Fnc_NSEL_A
:A Also select nodes
:D Also select nodes
:H Hlp_C_NSEL
Inp_P
Cmd_NSEL
 Fld_2
  Typ_DEF_A
 Fld_5
Prm_[NSEL],A  Pick or enter nodes to be added to the selected set
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  Sel_U
:E END
:! 
:N Fnc_NSEL_A_resul
:S    203,   119,    77
:T Command
:C )! Fnc_NSEL_A_resul
:D Select Nodes by Results
:H Hlp_C_NSEL
Inp_P
Cmd_)/NOPR
Cmd_)_z1='Also-'
Cmd_)_z2='A'
Cmd_)/GO
Cal_Fnc_NSEL_results
:E END
:! 
:N Fnc_NSEL_R
:S    248,   114,   127
:T Cmd_P
:C )! Fnc_NSEL_R
:A Reselect nodes
:D Reselect nodes
:H Hlp_C_NSEL
Inp_P
Cmd_NSEL
 Fld_2
  Typ_DEF_R
 Fld_5
Prm_[NSEL],R  Pick or enter nodes to be reselected
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_NSEL_R_resul
:S    201,   119,    75
:T Command
:C )! Fnc_NSEL_R_resul
:D Select Nodes by Results
:H Hlp_C_NSEL
Inp_P
Cmd_)/NOPR
Cmd_)_z1='Re-'
Cmd_)_z2='R'
Cmd_)/GO
Cal_Fnc_NSEL_results
:E END
:! 
:N Fnc_NSEL_S
:S    250,   110,   133
:T Cmd_P
:C )! Fnc_NSEL_S
:A Select nodes
:D Select nodes
:H Hlp_C_NSEL
Inp_P
Cmd_NSEL
 Fld_2
  Typ_DEF_S
 Fld_5
Prm_[NSEL],S  Pick or enter nodes to be selected
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
  Sel_D
:E END
:! 
:N Fnc_NSEL_S_ARC
:S    353,   120,   226
:T Command
:C )! Fnc_NSEL_S_ARC
:A Select Node
:D Select Node
:H Hlp_C_ARCTRM
Inp_P
Cmd_)/NOPR
! Exclude_from_paths
Cmd_)CM,_Y,AREA
! Exclude_from_paths
Cmd_)*SET,_zARC
 Fld_2
  Prm_Pick or enter node (blank uses max displacement)
  Typ_NODE
  Min_1
  Max_1
  Cnt_1
  PCN_1
! Exclude_from_paths
Cmd_)/GO
:E END
:! 
:N Fnc_NSEL_S_resul
:S    185,   105,    73
:T Command
:C )! Fnc_NSEL_S_resul
:D Select Nodes by Results
Inp_P
Cmd_)/NOPR
Cmd_)_z1=' '
Cmd_)_z2='S'
Cmd_)/GO
Cal_Fnc_NSEL_results
:E END
:! 
:N Fnc_NSEL_U
:S    248,   114,   127
:T Cmd_P
:C )! Fnc_NSEL_U
:A Unselect nodes
:D Unselect nodes
:H Hlp_C_NSEL
Inp_P
Cmd_NSEL
 Fld_2
  Typ_DEF_U
 Fld_5
Prm_[NSEL],U  Pick or enter nodes to be unselected
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_NSEL_U_resul
:S    187,   105,    75
:T Command
:C )! Fnc_NSEL_U_resul
:D Select Nodes by Results
Inp_P
Cmd_)/NOPR
Cmd_)_z1='Un-'
Cmd_)_z2='U'
Cmd_)/GO
Cal_Fnc_NSEL_results
:E END
:! 
:N Fnc_NSEL_results
:S  33775,   293, 33475
:T Command
:C )! Fnc_NSEL_results
:C )/nopr
:C )!
:C )maxlayer = 0
:C )*GET,maxlayer,ACTIVE,,DOF,LTEM
:C )*DO,i,1,32
:C )keyw,layer%i%,0
:C )*ENDDO
:C )*DO,i,1,maxlayer
:C )keyw,layer%i%,1
:C )*ENDDO
:C )/go
:D Select Nodes by Results
:H Hlp_C_NSEL
Cmd_NSEL
Fld_0
Typ_Lab
Prm_[NSEL],%_z2%  %_z1%Select Nodes by Results
Fld_2
Typ_Def_*PAR(_z2)
Fld_3
K_FL(STRUCTRL+multifld)
Prm_Item,Comp   Results item
Typ_IDX
P_LN(LINPLUS)
IDX_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS)
IDX_DOF solution    ,              UY,U,Y
P_LN(LINPLUS)
IDX_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS)
IDX_DOF solution    ,            USUM,U,SUM
P_LN(LINPLUS)
IDX_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTZ,ROT,Z
P_LN(LINPLUS)
IDX_DOF solution    ,          ROTSUM,ROT,SUM
!
P_LN(LINPLUS)
IDX_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS)
IDX_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS)
IDX_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS)
IDX_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS)
IDX_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS)
IDX_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS)
IDX_Stress          ,1st principal S1,S,1
P_LN(LINPLUS)
IDX_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS)
IDX_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS)
IDX_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS)
IDX_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS)
IDX_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS)
IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS)
IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS)
IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS)
IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS)
IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS)
IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS)
IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS)
IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS)
IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS)
IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS)
IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(LINPLUS)
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS)
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS)
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS)
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS)
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS)
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS)
IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS)
IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS)
IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS)
IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS)
IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS)
IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS)
IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS)
IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS)
IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
P_LN(FULL_ANS)
IDX_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
IDX_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
IDX_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
IDX_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
IDX_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
IDX_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
IDX_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
Fld_3
K_FL(THERMAL+multifld)
Prm_Item,Comp   Results item
Typ_IDX
P_LN(THERMAL*FLOTRAN)
K_LN(laytherm)
 IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!
Fld_3
K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid)
Prm_Item,Comp   Results item
Typ_IDX
P_LN(ELECMAG)
IDX_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
IDX_DOF solution    ,MagVectPoten  AX,A,X
P_LN(ELECMAG)
IDX_DOF solution    ,              AY,A,Y
P_LN(ELECMAG)
IDX_DOF solution    ,              AZ,A,Z
P_LN(ELECMAG)
IDX_DOF solution    ,            ASUM,A,SUM
P_LN(THERMAL*ELECMAG)
IDX_DOF solution    ,Elec poten  VOLT,VOLT,
P_LN(ELECMAG)
IDX_DOF solution    ,EMF drop     EMF,EMF,
P_LN(ELECMAG)
IDX_DOF solution    ,Current     CURR,CURR,
!
P_LN(ELECMAG)
IDX_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,           EFSUM,EF,SUM
!
P_LN(ELECMAG)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
Fld_3
K_FL(FLUID+multifld)
Prm_Item,Comp   Results item
Typ_IDX
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN)
IDX_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
K_LN(laytherm)
IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
P_LN(FULL_ANS)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
IDX_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!
Fld_3
K_FL(CFD)
Prm_Item,Comp   Results item
Typ_IDX
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN)
IDX_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(FLOTRAN)
IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,
P_LN(FLOTRAN)
IDX_DOF solution    ,Enrg dissip ENDS,ENDS,
P_LN(THERMAL*FLOTRAN)
K_LN(laytherm)
IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
P_LN(FULL_ANS)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
IDX_Flux & gradient ,           PGSUM,PG,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM
!
P_LN(FLOTRAN)
IDX_Other quantities,Density     DENS,DENS,
P_LN(FLOTRAN)
IDX_Other quantities,Viscosity   VISC,VISC,
P_LN(FLOTRAN)
IDX_Other quantities,Conductivit COND,COND,
P_LN(FLOTRAN)
IDX_Other quantities,Eff Viscos  EVIS,EVIS,
P_LN(FLOTRAN)
IDX_Other quantities,Eff Conduct ECON,ECON,
P_LN(FLOTRAN)
IDX_Other quantities,Total temp  TTOT,TTOT,
P_LN(FLOTRAN)
IDX_Other quantities,Strm func2D STRM,STRM,
P_LN(FLOTRAN)
IDX_Other quantities,PressurCoef PCOE,PCOE,
P_LN(FLOTRAN)
IDX_Other quantities,Mach number MACH,MACH,
P_LN(FLOTRAN)
IDX_Other quantities,Total pres  PTOT,PTOT,
P_LN(FLOTRAN)
IDX_Other quantities,Heat flux   HFLU,HFLU,
P_LN(FLOTRAN)
IDX_Other quantities,Film coeff  HFLM,HFLM,
P_LN(FLOTRAN)
IDX_Other quantities,Turb law Y+ YPLU,YPLU,
P_LN(FLOTRAN)
IDX_Other quantities,Wall shear  TAUW,TAUW,
!
Fld_3
K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID))
Prm_Item,Comp   Results item
Typ_IDX
P_LN(LINPLUS)
IDX_DOF solution    ,Translation   UX,U,X
P_LN(LINPLUS)
IDX_DOF solution    ,              UY,U,Y
P_LN(LINPLUS)
IDX_DOF solution    ,              UZ,U,Z
P_LN(LINPLUS)
IDX_DOF solution    ,            USUM,U,SUM
P_LN(LINPLUS)
IDX_DOF solution    ,Rotation    ROTX,ROT,X
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTY,ROT,Y
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTZ,ROT,Z
P_LN(LINPLUS)
IDX_DOF solution    ,          ROTSUM,ROT,SUM
P_LN(THERMAL*FLOTRAN)
K_LN(laytherm)
IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
P_LN(ELECMAG)
IDX_DOF solution    ,MagScalPoten MAG,MAG,
P_LN(ELECMAG)
IDX_DOF solution    ,MagVectPoten  AX,A,X
P_LN(ELECMAG)
IDX_DOF solution    ,              AY,A,Y
P_LN(ELECMAG)
IDX_DOF solution    ,              AZ,A,Z
P_LN(ELECMAG)
IDX_DOF solution    ,            ASUM,A,SUM
P_LN(THERMAL*ELECMAG)
IDX_DOF solution    ,Elec poten  VOLT,VOLT,
P_LN(ELECMAG)
IDX_DOF solution    ,EMF drop     EMF,EMF,
P_LN(ELECMAG)
IDX_DOF solution    ,Current     CURR,CURR,
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,V,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,V,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,V,Z
P_LN(FLOTRAN)
IDX_DOF solution    ,            VSUM,V,SUM
P_LN(FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Pressure    PRES,PRES,
P_LN(THERMAL*FLOTRAN*FULL_ANS)
K_LN(laytherm)
IDX_DOF solution    ,Temperature TEMP,TEMP,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER1)
  IDX_DOF solution    ,Layer Temp  TBOT,TBOT,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER3)
  IDX_DOF solution    ,Layer Temp  TE2 ,TE2,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER4)
  IDX_DOF solution    ,Layer Temp  TE3 ,TE3,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER5)
  IDX_DOF solution    ,Layer Temp  TE4 ,TE4,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER6)
  IDX_DOF solution    ,Layer Temp  TE5 ,TE5,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER7)
  IDX_DOF solution    ,Layer Temp  TE6 ,TE6,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER8)
  IDX_DOF solution    ,Layer Temp  TE7 ,TE7,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER9)
  IDX_DOF solution    ,Layer Temp  TE8 ,TE8,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER10)
  IDX_DOF solution    ,Layer Temp  TE9 ,TE9,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER11)
  IDX_DOF solution    ,Layer Temp  TE10,TE10,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER12)
  IDX_DOF solution    ,Layer Temp  TE11,TE11,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER13)
  IDX_DOF solution    ,Layer Temp  TE12,TE12,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER14)
  IDX_DOF solution    ,Layer Temp  TE13,TE13,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER15)
  IDX_DOF solution    ,Layer Temp  TE14,TE14,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER16)
  IDX_DOF solution    ,Layer Temp  TE15,TE15,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER17)
  IDX_DOF solution    ,Layer Temp  TE16,TE16,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER18)
  IDX_DOF solution    ,Layer Temp  TE17,TE17,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER19)
  IDX_DOF solution    ,Layer Temp  TE18,TE18,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER20)
  IDX_DOF solution    ,Layer Temp  TE19,TE19,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER21)
  IDX_DOF solution    ,Layer Temp  TE20,TE20,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER22)
  IDX_DOF solution    ,Layer Temp  TE21,TE21,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER23)
  IDX_DOF solution    ,Layer Temp  TE22,TE22,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER24)
  IDX_DOF solution    ,Layer Temp  TE23,TE23,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER25)
  IDX_DOF solution    ,Layer Temp  TE24,TE24,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER26)
  IDX_DOF solution    ,Layer Temp  TE25,TE25,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER27)
  IDX_DOF solution    ,Layer Temp  TE26,TE26,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER28)
  IDX_DOF solution    ,Layer Temp  TE27,TE27,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER29)
  IDX_DOF solution    ,Layer Temp  TE28,TE28,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER30)
  IDX_DOF solution    ,Layer Temp  TE29,TE29,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER31)
  IDX_DOF solution    ,Layer Temp  TE30,TE30,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER32)
  IDX_DOF solution    ,Layer Temp  TE31,TE31,
  K_LN((THERMAL+flotran)+LAYTHERM+LAYER2)
  IDX_DOF solution    ,Layer Temp  TTOP,TTOP,
!
P_LN(LINPLUS)
IDX_Stress          ,X-direction   SX,S,X
P_LN(LINPLUS)
IDX_Stress          ,Y-direction   SY,S,Y
P_LN(LINPLUS)
IDX_Stress          ,Z-direction   SZ,S,Z
P_LN(LINPLUS)
IDX_Stress          ,XY-shear     SXY,S,XY
P_LN(LINPLUS)
IDX_Stress          ,YZ-shear     SYZ,S,YZ
P_LN(LINPLUS)
IDX_Stress          ,XZ-shear     SXZ,S,XZ
P_LN(LINPLUS)
IDX_Stress          ,1st principal S1,S,1
P_LN(LINPLUS)
IDX_Stress          ,2nd principal S2,S,2
P_LN(LINPLUS)
IDX_Stress          ,3rd principal S3,S,3
P_LN(LINPLUS)
IDX_Stress          ,Intensity   SINT,S,INT
P_LN(LINPLUS)
IDX_Stress          ,von Mises   SEQV,S,EQV
P_LN(FULL_ANS)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL
P_LN(FULL_ANS)
IDX_Stress          ,StressRatio SRAT,NL,SRAT
P_LN(FULL_ANS)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE
!
P_LN(LINPLUS)
IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X
P_LN(LINPLUS)
IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y
P_LN(LINPLUS)
IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z
P_LN(LINPLUS)
IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY
P_LN(LINPLUS)
IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ
P_LN(LINPLUS)
IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ
P_LN(LINPLUS)
IDX_Strain-total    ,1st prin EPTO  1,EPTO,1
P_LN(LINPLUS)
IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2
P_LN(LINPLUS)
IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3
P_LN(LINPLUS)
IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT
P_LN(LINPLUS)
IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV
!
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,MagFluxDens   BX,B,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              BY,B,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              BZ,B,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,            BSUM,B,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,Mag field     HX,H,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              HY,H,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              HZ,H,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,            HSUM,H,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X
P_LN(ELECMAG)
IDX_Flux & gradient ,              DY,D,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,              DZ,D,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,            DSUM,D,SUM
P_LN(ELECMAG)
IDX_Flux & gradient ,Elec field   EFX,EF,X
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFY,EF,Y
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFZ,EF,Z
P_LN(ELECMAG)
IDX_Flux & gradient ,           EFSUM,EF,SUM
P_LN(FULL_ANS)
IDX_Flux & gradient ,Pressur grad PGX,PG,X
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGY,PG,Y
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGZ,PG,Z
P_LN(FULL_ANS)
IDX_Flux & gradient ,           PGSUM,PG,SUM
!
P_LN(ELECMAG)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGY,FMAG,Y
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGZ,FMAG,Z
P_LN(ELECMAG)
IDX_Nodal force data,         FMAGSUM,FMAG,SUM
!
P_LN(LINPLUS)
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X
P_LN(LINPLUS)
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y
P_LN(LINPLUS)
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z
P_LN(LINPLUS)
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY
P_LN(LINPLUS)
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ
P_LN(LINPLUS)
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ
P_LN(LINPLUS)
IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1
P_LN(LINPLUS)
IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2
P_LN(LINPLUS)
IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3
P_LN(LINPLUS)
IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT
P_LN(LINPLUS)
IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV
!
P_LN(LINPLUS)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X
P_LN(LINPLUS)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y
P_LN(LINPLUS)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z
P_LN(LINPLUS)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY
P_LN(LINPLUS)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ
P_LN(LINPLUS)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ
P_LN(LINPLUS)
IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1
P_LN(LINPLUS)
IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2
P_LN(LINPLUS)
IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3
P_LN(LINPLUS)
IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT
P_LN(LINPLUS)
IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV
!
P_LN(FULL_ANS)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z
P_LN(FULL_ANS)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY
P_LN(FULL_ANS)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ
P_LN(FULL_ANS)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ
P_LN(FULL_ANS)
IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1
P_LN(FULL_ANS)
IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2
P_LN(FULL_ANS)
IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT
P_LN(FULL_ANS)
IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ
!
P_LN(FULL_ANS)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X
P_LN(FULL_ANS)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y
P_LN(FULL_ANS)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z
P_LN(FULL_ANS)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY
P_LN(FULL_ANS)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ
P_LN(FULL_ANS)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ
P_LN(FULL_ANS)
IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1
P_LN(FULL_ANS)
IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2
P_LN(FULL_ANS)
IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3
P_LN(FULL_ANS)
IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT
P_LN(FULL_ANS)
IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV
!
P_LN(FULL_ANS)
IDX_Strain-other    ,Swelling    EPSW,EPSW,
!
P_LN(FULL_ANS)
IDX_Contact         ,Status      STAT,CONT,STAT
P_LN(FULL_ANS)
IDX_Contact         ,Penetration PENE,CONT,PENE
P_LN(FULL_ANS)
IDX_Contact         ,Gap         GAP ,CONT,GAP
P_LN(FULL_ANS)
IDX_Contact         ,Pressure    PRES,CONT,PRES
P_LN(FULL_ANS)
IDX_Contact         ,Fric Stress SFRI,CONT,SFRI
P_LN(FULL_ANS)
IDX_Contact         ,TotalStress STOT,CONT,STOT
P_LN(FULL_ANS)
IDX_Contact         ,SlidingDist SLID,CONT,SLID
P_LN(FULL_ANS)
IDX_Contact         ,Heat flux   FLUX,CONT,FLUX
P_LN(FULL_ANS)
IDX_Contact         ,Chattering  CNOS,CONT,CNOS
P_LN(FULL_ANS)
IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS
!
Fld_4
Prm_VMIN,VMAX   Range of values
Typ_real2
Fld_7
Prm_KABS        Use absolute values?
Typ_LOGI,No              ,Yes
:E END
:! 
:N Fnc_NSOL
:S   1895,  1861,    27
:T Command
:C )! Fnc_NSOL
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,37,2
:C )*SET,_zc(1,1),'U','U','U','ROT','ROT','ROT','TEMP','MAG'
:C )*SET,_zc(1,2),'X','Y','Z','X','Y','Z','    ','    '
:C )*SET,_zc(9,1),'A','A','A','V','V','V'
:C )*SET,_zc(9,2),'X','Y','Z','X','Y','Z'
:C )*SET,_zc(15,1),'VOLT','PRES','ENKE','ENDS','DENS','VISC'
:C )*SET,_zc(15,2),'    ','    ','    ','    ','    ','    '
:C )*SET,_zc(21,1),'COND','EVIS','ECON','TTOT','STRM','PCOE'
:C )*SET,_zc(21,2),'    ','    ','    ','    ','    ','    '
:C )*SET,_zc(27,1),'MACH','PTOT','HFLU','HFLM','YPLU','TAUW'
:C )*SET,_zc(27,2),'    ','    ','    ','    ','    ','    '
:C )*SET,_zc(33,1),'CURR','EMF ','RDFL','CONC'
:C )*SET,_zc(33,2),'    ','    ','    ','    '
:C )*GET,_z2,COMMON,,CPST26,,CHR4,_z1+420   ! Item component label   
:C )*IF,_z2,EQ,'UX',THEN
:C )_z2='U'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'UY',THEN
:C )_z2='U'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'UZ',THEN
:C )_z2='U'
:C )_z3='Z'
:C )*ELSEIF,_z2,EQ,'ROTX',THEN
:C )_z2='ROT'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'ROTY',THEN
:C )_z2='ROT'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'ROTZ',THEN
:C )_z2='ROT'
:C )_z3='Z'
:C )*ELSEIF,_z2,EQ,'VX',THEN
:C )_z2='V'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'VY',THEN
:C )_z2='V'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'VZ',THEN
:C )_z2='V'
:C )_z3='Z'
:C )*ELSEIF,_z2,EQ,'AX',THEN
:C )_z2='A'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'AY',THEN
:C )_z2='A'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'AZ',THEN
:C )_z2='A'
:C )_z3='Z'
:C )*ELSE
:C )_z2=_z2
:C )_z3='    '
:C )*ENDIF
:C )_z4=0
:C )*DO,_z4,1,34
:C )/NOPR
:C )*IF,_zc(_z4,1),EQ,_z2,THEN
:C )*IF,_zc(_z4,2),EQ,_z3,EXIT
:C )*ENDIF
:C )*ENDDO
:C )*GET,_z98,common,,cycsym_com,,int,2
:C )KEYWD,CYCLIC,0
:C )*IF,_z98,gt,1,then
:C )KEYWD,CYCLIC,1
:C )*ENDIF
:C )*DEL,_z
:C )*DIM,_z,,5
:C )/GO
:A Nodal Data
:D Define Nodal Data
:K #(POST26)
:H Hlp_C_NSOL
Inp_P
Cmd_)!
Cal_Fnc_NSOL1
:E END
:! 
:N Fnc_NSOL1
:S    374,   229,   138
:T Command
:C )! Fnc_NSOL1
:C )/NOPR
:C )*IF,_z4,EQ,34,THEN
:C )*IF,_zc(34,1),NE,_z2,THEN
:C )_z4=1
:C )*ENDIF
:C )*ENDIF
:C )/GO
:A Nodal Data
:D Define Nodal Data
:K #(POST26)
:H Hlp_C_NSOL
Inp_P
Cmd_)/NOPR
Cmd_)*SET,_z5
 Fld_2
  Prm_[NSOL] Pick node for time history
  Typ_NODE
  Min_0
  Cnt_1
  Pfm_2
Cmd_)/GO
Cal_Fnc_NSOL1_a
:E END
:! 
:N Fnc_NSOL1_a
:S   5112,   117,  4988
:T Command
:C )! Fnc_NSOL1_a
:A Nodal Data
:D Define Nodal Data
:H Hlp_C_NSOL
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,4
 Fld_0
  Typ_LAB
  Prm_[NSOL]  Define Nodal DOF variable
 Fld_2
  Prm_NVAR  Ref number of variable
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Prm_NODE  Node number
  Typ_INT
  Def_*PAR(_z5)
 Fld_4
  Typ_CHAR
  Prm_Name  User-specified label
  Def_*GET(COMMON,,CPST26,,CHAR,_z1)
 Fld_5
  K_FL(CYCLIC)
  Prm_SECTOR  Sector number
  Typ_INT
Cmd_)*SET,_z(3)
 Fld_2
K_FL(STRUCTRL+multifld) 
P_FL(LINPLUS)
  Prm_Item,Comp  Data item
  Typ_IDX
IDX_DOF solution    ,Translation   UX,1
IDX_DOF solution    ,              UY,2
IDX_DOF solution    ,              UZ,3
IDX_DOF solution    ,Rotation    ROTX,4
IDX_DOF solution    ,            ROTY,5
IDX_DOF solution    ,            ROTZ,6
Def_*PAR(_z4)
!
 Fld_2
K_FL(THERMAL+multifld) 
P_FL(THERMAL)
  Prm_Item,Comp  Data item
  Typ_IDX
IDX_DOF solution    ,Temperature TEMP,7
Def_*PAR(_z4)
!
 Fld_2
K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid)
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(ELECMAG)
IDX_DOF solution    ,MagScalPoten MAG,8
P_LN(ELECMAG)
IDX_DOF solution    ,MagVectPoten  AX,9
P_LN(ELECMAG)
IDX_DOF solution    ,              AY,10
P_LN(ELECMAG)
IDX_DOF solution    ,              AZ,11
P_LN(THERMAL*ELECMAG)
IDX_DOF solution    ,Elec poten  VOLT,15
P_LN(ELECMAG)
IDX_DOF solution    ,Current     CURR,33
P_LN(ELECMAG)
IDX_DOF solution    ,EMF drop     EMF,34
Def_*PAR(_z4)
!
 Fld_2
K_FL(FLUID+multifld)
P_FL(FLOTRAN*FULL_ANS)
  Prm_Item,Comp  Data item
  Typ_IDX
IDX_DOF solution    ,Velocity      VX,12
IDX_DOF solution    ,              VY,13
IDX_DOF solution    ,              VZ,14
IDX_DOF solution    ,Pressure    PRES,16
IDX_DOF solution    ,Temperature TEMP,7
Def_*PAR(_z4)
!
 Fld_2
K_FL(CFD) 
P_FL(FLOTRAN)
  Prm_Item,Comp  Data item
  Typ_IDX
IDX_DOF solution    ,Displacement  UX,1 
IDX_DOF solution    ,              UY,2 
IDX_DOF solution    ,              UZ,3 
IDX_DOF solution    ,Velocity      VX,12
IDX_DOF solution    ,              VY,13
IDX_DOF solution    ,              VZ,14
IDX_DOF solution    ,Pressure    PRES,16
IDX_DOF solution    ,Turb K.E.   ENKE,17
IDX_DOF solution    ,Enrg dissip ENDS,18
IDX_DOF solution    ,Temperature TEMP,7
!
IDX_Other quantities,Density     DENS,19
IDX_Other quantities,Viscosity   VISC,20
IDX_Other quantities,Conductivit COND,21
IDX_Other quantities,Eff Viscos  EVIS,22
IDX_Other quantities,Eff Conduct ECON,23
IDX_Other quantities,Total temp  TTOT,24
IDX_Other quantities,Strm func2D STRM,25
IDX_Other quantities,Velo mag 3D STRM,25
IDX_Other quantities,PressurCoef PCOE,26
IDX_Other quantities,Mach number MACH,27
IDX_Other quantities,Total pres  PTOT,28
IDX_Other quantities,Heat flux   HFLU,29
IDX_Other quantities,Film coeff  HFLM,30
IDX_Other quantities,Turb law Y+ YPLU,31
IDX_Other quantities,Wall shear  TAUW,32
IDX_Other quantities,Rad flux    RDFL,35
Def_*PAR(_z4)
!
 Fld_2
K_FL(DIFFUSN+multifld) 
  Prm_Item,Comp  Data item
  Typ_IDX
IDX_DOF solution    ,Concentratn CONC,36
!
 Fld_2
K_FL(MULTIFLD+lsdyna+(STRUCTRL*THERMAL*FLUID)) 
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,Translation   UX,1
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,              UY,2
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,              UZ,3
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,Rotation    ROTX,4
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,            ROTY,5
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,            ROTZ,6
P_LN(THERMAL*FLOTRAN)
IDX_DOF solution    ,Temperature TEMP,7
P_LN(ELECMAG)
IDX_DOF solution    ,MagScalPoten MAG,8
P_LN(ELECMAG)
IDX_DOF solution    ,MagVectPoten  AX,9
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AY,10
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AZ,11
P_LN(THERMAL*ELECMAG)
IDX_DOF solution    ,Elec poten  VOLT,15
P_LN(ELECMAG)
IDX_DOF solution    ,Current     CURR,33
P_LN(ELECMAG)
IDX_DOF solution    ,EMF drop     EMF,34
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,Velocity      VX,12
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VY,13
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VZ,14
P_LN(FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Pressure    PRES,16
K_LN(DIFFUSN)
IDX_DOF solution    ,Concentratn CONC,36
Def_*PAR(_z4)
 Fld_2
K_FL(MULTIFLD+LSDYNA))
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,Translation   UX,1
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,              UY,2
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,              UZ,3
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,Rotation    ROTX,4
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,            ROTY,5
P_LN(LINPLUS*LSDYNA)
IDX_DOF solution    ,            ROTZ,6
IDX_DOF solution    ,Nodal Accel   AX,9
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AY,10
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AZ,11
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,Velocity      VX,12
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VY,13
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VZ,14
Def_*PAR(_z4)
Cal_Fnc_NSOL_A
:E END
:! 
:N Fnc_NSOL1e
:S   4877,   231,  4639
:T Command
:C )! Fnc_NSOL1e
:C )/NOPR
:C )*IF,_z4,EQ,34,THEN
:C )*IF,_zc(34,1),NE,_z2,THEN
:C )_z4=1
:C )*ENDIF
:C )*ENDIF
:C )/GO
:A Nodal Data
:D Define Nodal Data
:K #(POST26)
:H Hlp_C_NSOL
Inp_NoApply
Cmd_)/NOPR
Cmd_)*CSET,1,3
 Fld_0
  Typ_LAB
  Prm_[NSOL]  Define Nodal DOF variable
 Fld_2
  Prm_NVAR  Ref number of variable
  Typ_INT
  Def_*PAR(_z1)
 Fld_3
  Prm_NODE  Node number
  Typ_INT
  Def_*GET(COMMON,,CPST26,,INT,_z1)
 Fld_4
  Typ_CHAR
  Prm_Name  User-specified label
  Def_*GET(COMMON,,CPST26,,CHAR,_z1)
Cmd_)*SET,_z(3)
 Fld_2
K_FL(STRUCTRL+multifld) 
P_FL(LINPLUS)
  Prm_Item,Comp  Data item
  Typ_IDX
IDX_DOF solution    ,Translation   UX,1
IDX_DOF solution    ,              UY,2
IDX_DOF solution    ,              UZ,3
IDX_DOF solution    ,Rotation    ROTX,4
IDX_DOF solution    ,            ROTY,5
IDX_DOF solution    ,            ROTZ,6
Def_*PAR(_z4)
!
 Fld_2
K_FL(THERMAL+multifld) 
P_FL(THERMAL)
  Prm_Item,Comp  Data item
  Typ_IDX
IDX_DOF solution    ,Temperature TEMP,7
Def_*PAR(_z4)
!
 Fld_2
K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid)
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(ELECMAG)
IDX_DOF solution    ,MagScalPoten MAG,8
P_LN(ELECMAG)
IDX_DOF solution    ,MagVectPoten  AX,9
P_LN(ELECMAG)
IDX_DOF solution    ,              AY,10
P_LN(ELECMAG)
IDX_DOF solution    ,              AZ,11
P_LN(THERMAL*ELECMAG)
IDX_DOF solution    ,Elec poten  VOLT,15
P_LN(ELECMAG)
IDX_DOF solution    ,Current     CURR,33
P_LN(ELECMAG)
IDX_DOF solution    ,EMF drop     EMF,34
Def_*PAR(_z4)
!
 Fld_2
K_FL(FLUID+multifld)
P_FL(FLOTRAN*FULL_ANS)
  Prm_Item,Comp  Data item
  Typ_IDX
IDX_DOF solution    ,Velocity      VX,12
IDX_DOF solution    ,              VY,13
IDX_DOF solution    ,              VZ,14
IDX_DOF solution    ,Pressure    PRES,16
IDX_DOF solution    ,Temperature TEMP,7
Def_*PAR(_z4)
!
 Fld_2
K_FL(CFD) 
P_FL(FLOTRAN)
  Prm_Item,Comp  Data item
  Typ_IDX
IDX_DOF solution    ,Displacement  UX,1 
IDX_DOF solution    ,              UY,2 
IDX_DOF solution    ,              UZ,3 
IDX_DOF solution    ,Velocity      VX,12
IDX_DOF solution    ,              VY,13
IDX_DOF solution    ,              VZ,14
IDX_DOF solution    ,Pressure    PRES,16
IDX_DOF solution    ,Turb K.E.   ENKE,17
IDX_DOF solution    ,Enrg dissip ENDS,18
IDX_DOF solution    ,Temperature TEMP,7
!
IDX_Other quantities,Density     DENS,19
IDX_Other quantities,Viscosity   VISC,20
IDX_Other quantities,Conductivit COND,21
IDX_Other quantities,Eff Viscos  EVIS,22
IDX_Other quantities,Eff Conduct ECON,23
IDX_Other quantities,Total temp  TTOT,24
IDX_Other quantities,Strm func2D STRM,25
IDX_Other quantities,Velo mag 3D STRM,25
IDX_Other quantities,PressurCoef PCOE,26
IDX_Other quantities,Mach number MACH,27
IDX_Other quantities,Total pres  PTOT,28
IDX_Other quantities,Heat flux   HFLU,29
IDX_Other quantities,Film coeff  HFLM,30
IDX_Other quantities,Turb law Y+ YPLU,31
IDX_Other quantities,Wall shear  TAUW,32
IDX_Other quantities,Rad flux    RDFL,35
Def_*PAR(_z4)
!
 Fld_2
K_FL(DIFFUSN+multifld)
  Prm_Item,Comp  Data item
  Typ_IDX
IDX_DOF solution    ,Concentratn CONC,36
!
 Fld_2
K_FL(MULTIFLD+lsdyna+(STRUCTRL*THERMAL*FLUID)) 
  Prm_Item,Comp  Data item
  Typ_IDX
P_LN(LINPLUS)
IDX_DOF solution    ,Translation   UX,1
P_LN(LINPLUS)
IDX_DOF solution    ,              UY,2
P_LN(LINPLUS)
IDX_DOF solution    ,              UZ,3
P_LN(LINPLUS)
IDX_DOF solution    ,Rotation    ROTX,4
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTY,5
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTZ,6
P_LN(THERMAL*FLOTRAN)
IDX_DOF solution    ,Temperature TEMP,7
P_LN(ELECMAG)
IDX_DOF solution    ,MagScalPoten MAG,8
P_LN(ELECMAG)
IDX_DOF solution    ,MagVectPoten  AX,9
P_LN(ELECMAG)
IDX_DOF solution    ,              AY,10
P_LN(ELECMAG)
IDX_DOF solution    ,              AZ,11
P_LN(THERMAL*ELECMAG)
IDX_DOF solution    ,Elec poten  VOLT,15
P_LN(ELECMAG)
IDX_DOF solution    ,Current     CURR,33
P_LN(ELECMAG)
IDX_DOF solution    ,EMF drop     EMF,34
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,12
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,13
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,14
P_LN(FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Pressure    PRES,16
Def_*PAR(_z4)
 Fld_2
K_FL(MULTIFLD+LSDYNA)
  Prm_Item,Comp  Data item
  Typ_IDX
IDX_DOF solution    ,Translation   UX,1
IDX_DOF solution    ,              UY,2
IDX_DOF solution    ,              UZ,3
IDX_DOF solution    ,Rotation    ROTX,4
IDX_DOF solution    ,            ROTY,5
IDX_DOF solution    ,            ROTZ,6
IDX_DOF solution    ,Nodal Accel   AX,9
IDX_DOF solution    ,              AY,10
IDX_DOF solution    ,              AZ,11
IDX_DOF solution    ,Velocity      VX,12
IDX_DOF solution    ,              VY,13
IDX_DOF solution    ,              VZ,14
K_LN(DIFFUSN)
IDX_DOF solution    ,Concentratn CONC,36
Def_*PAR(_z4)
Cal_Fnc_NSOL_Ae
:E END
:! 
:N Fnc_NSOL_A
:S    320,    66,   247
:T Command
:C )! Fnc_NSOL_A
Inp_P
Cmd_)/GO
Cmd_NSOL
Fld_2
Typ_Def_*CPAR(1)
Fld_3
Typ_Def_*CPAR(2)
Fld_4
Typ_Def_*PAR(_zc(_z(3),1))
Fld_5
Typ_Def_*PAR(_zc(_z(3),2))
Fld_6
Typ_Def_*CPAR(3)
Fld_7
K_FL(CYCLIC)
Typ_Def_*CPAR(4)
Cmd_)/NOPR
Cmd_)DEFINE
Cmd_)STAT,,,, ,,,,1
Cmd_)/GO
:E END
:! 
:N Fnc_NSOL_Ae
:S    286,    68,   211
:T Command
:C )! Fnc_NSOL_Ae
Inp_P
Cmd_)/GO
Cmd_NSOL
Fld_2
Typ_Def_*CPAR(1)
Fld_3
Typ_Def_*CPAR(2)
Fld_4
Typ_Def_*PAR(_zc(_z(3),1))
Fld_5
Typ_Def_*PAR(_zc(_z(3),2))
Fld_6
Typ_Def_*CPAR(3)
Cmd_)/NOPR
Cmd_)DEFINE
Cmd_)STAT,,,, ,,,,1
Cmd_)/GO
:E END
:! 
:N Fnc_NSOLe
:S   1786,  1751,    28
:T Command
:C )! Fnc_NSOLe
:C )/NOPR
:C )*DEL,_zc
:C )*DIM,_zc,CHAR,37,2
:C )*SET,_zc(1,1),'U','U','U','ROT','ROT','ROT','TEMP','MAG'
:C )*SET,_zc(1,2),'X','Y','Z','X','Y','Z','    ','    '
:C )*SET,_zc(9,1),'A','A','A','V','V','V'
:C )*SET,_zc(9,2),'X','Y','Z','X','Y','Z'
:C )*SET,_zc(15,1),'VOLT','PRES','ENKE','ENDS','DENS','VISC'
:C )*SET,_zc(15,2),'    ','    ','    ','    ','    ','    '
:C )*SET,_zc(21,1),'COND','EVIS','ECON','TTOT','STRM','PCOE'
:C )*SET,_zc(21,2),'    ','    ','    ','    ','    ','    '
:C )*SET,_zc(27,1),'MACH','PTOT','HFLU','HFLM','YPLU','TAUW'
:C )*SET,_zc(27,2),'    ','    ','    ','    ','    ','    '
:C )*SET,_zc(33,1),'CURR','EMF ','RDFL','CONC'
:C )*SET,_zc(33,2),'    ','    ','    ','    '
:C )*GET,_z2,COMMON,,CPST26,,CHR4,_z1+420   ! Item component label   
:C )*IF,_z2,EQ,'UX',THEN
:C )_z2='U'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'UY',THEN
:C )_z2='U'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'UZ',THEN
:C )_z2='U'
:C )_z3='Z'
:C )*ELSEIF,_z2,EQ,'ROTX',THEN
:C )_z2='ROT'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'ROTY',THEN
:C )_z2='ROT'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'ROTZ',THEN
:C )_z2='ROT'
:C )_z3='Z'
:C )*ELSEIF,_z2,EQ,'VX',THEN
:C )_z2='V'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'VY',THEN
:C )_z2='V'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'VZ',THEN
:C )_z2='V'
:C )_z3='Z'
:C )*ELSEIF,_z2,EQ,'AX',THEN
:C )_z2='A'
:C )_z3='X'
:C )*ELSEIF,_z2,EQ,'AY',THEN
:C )_z2='A'
:C )_z3='Y'
:C )*ELSEIF,_z2,EQ,'AZ',THEN
:C )_z2='A'
:C )_z3='Z'
:C )*ELSE
:C )_z2=_z2
:C )_z3='    '
:C )*ENDIF
:C )_z4=0
:C )*DO,_z4,1,34
:C )/NOPR
:C )*IF,_zc(_z4,1),EQ,_z2,THEN
:C )*IF,_zc(_z4,2),EQ,_z3,EXIT
:C )*ENDIF
:C )*ENDDO
:C )*DEL,_z
:C )*DIM,_z,,5
:C )/GO
:A Nodal Data
:D Define Nodal Data
:K #(POST26)
:H Hlp_C_NSOL
Inp_P
Cmd_)!
Cal_Fnc_NSOL1e
:E END
:! 
:N Fnc_NSORT
:S  30053,   130, 29903
:T Command
:C )! Fnc_NSORT
:A    Sort Nodes
:D Sort Nodes
:H Hlp_C_NSORT
:K #(POST1+RESULTS)
Cmd_)/NOPR
Cmd_)*SET,_z1
 Fld_0
  Typ_Lab
  Prm_[NSORT]  Sort Nodes
 Fld_2
  Prm_ORDER  Order in which to sort
  Typ_LIS_OPTIONB
   LIS_Descending order,0
   LIS_Ascending order ,1
Cmd_)*SET,_z2
 Fld_2
  Prm_KABS   Sort on absolute value?
  Typ_LOGI,No              ,Yes
Cmd_)*SET,_z3
 Fld_2
  Prm_NUMB   Number of nodes for sort
  Typ_int
  Def_Blank
Cmd_)*SET,_z4
 Fld_2
  Prm_SELECT Select sorted nodes
  Typ_Logi,No,Yes
  Def_0
Cmd_)*SET,_z5
 Fld_2
  Typ_Lis_OptionB
   Lis_None            ,0
   Lis_Results         ,1
   Lis_Coordinates     ,2
   Lis_Results/Coords  ,3
   Prm_List sorted nodes for
Cmd_)*SET,_z6
 Fld_2
  Typ_Lis_OptionB
   Lis_None            ,0
   Lis_Current plot    ,1
   Lis_Result plot     ,2
   Lis_Vector Edge plot,3
   Lis_Line plot       ,4
   Prm_Superimpose nodes on
Cmd_)*CSET,1,4
 Fld_2
  K_FL(STRUCTRL+multifld)
  Prm_Item,Comp  Sort nodes based on
  Typ_IDX
P_LN(LINPLUS)
IDX_DOF solution    ,Translation   UX,U,X,U,X
P_LN(LINPLUS)
IDX_DOF solution    ,              UY,U,Y,U,Y
P_LN(LINPLUS)
IDX_DOF solution    ,              UZ,U,Z,U,Z
P_LN(LINPLUS)
IDX_DOF solution    ,            USUM,U,SUM,U,COMP
P_LN(LINPLUS)
IDX_DOF solution    ,Rotation    ROTX,ROT,X,ROT,X
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTY,ROT,Y,ROT,Y
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTZ,ROT,Z,ROT,Z
P_LN(LINPLUS)
IDX_DOF solution    ,          ROTSUM,ROT,SUM,ROT,COMP
P_LN(FULL_ANS)
IDX_DOF solution    ,Warping     WARP,WARP,,WARP
!
P_LN(LINPLUS)
IDX_Stress          ,X-direction   SX,S,X,S,COMP
P_LN(LINPLUS)
IDX_Stress          ,Y-direction   SY,S,Y,S,COMP
P_LN(LINPLUS)
IDX_Stress          ,Z-direction   SZ,S,Z,S,COMP
P_LN(LINPLUS)
IDX_Stress          ,XY-shear     SXY,S,XY,S,COMP
P_LN(LINPLUS)
IDX_Stress          ,YZ-shear     SYZ,S,YZ,S,COMP
P_LN(LINPLUS)
IDX_Stress          ,XZ-shear     SXZ,S,XZ,S,COMP
P_LN(LINPLUS)
IDX_Stress          ,1st principal S1,S,1,S,PRIN
P_LN(LINPLUS)
IDX_Stress          ,2nd principal S2,S,2,S,PRIN
P_LN(LINPLUS)
IDX_Stress          ,3rd principal S3,S,3,S,PRIN
P_LN(LINPLUS)
IDX_Stress          ,Intensity   SINT,S,INT,S,PRIN
P_LN(LINPLUS)
IDX_Stress          ,von Mises   SEQV,S,EQV,S,PRIN
P_LN(FULL_ANS)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL,NL,""
P_LN(FULL_ANS)
IDX_Stress          ,StressRatio SRAT,NL,SRAT,NL,""
P_LN(FULL_ANS)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE,NL,""
!
P_LN(LINPLUS)
IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X,EPTO,COMP
P_LN(LINPLUS)
IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y,EPTO,COMP
P_LN(LINPLUS)
IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z,EPTO,COMP
P_LN(LINPLUS)
IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY,EPTO,COMP
P_LN(LINPLUS)
IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ,EPTO,COMP
P_LN(LINPLUS)
IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ,EPTO,COMP
P_LN(LINPLUS)
IDX_Strain-total    ,1st prin EPTO  1,EPTO,1,EPTO,PRIN
P_LN(LINPLUS)
IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2,EPTO,PRIN
P_LN(LINPLUS)
IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3,EPTO,PRIN
P_LN(LINPLUS)
IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT,EPTO,PRIN
P_LN(LINPLUS)
IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV,EPTO,PRIN
!
P_LN(LINPLUS)
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X,EPEL,COMP
P_LN(LINPLUS)
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y,EPEL,COMP
P_LN(LINPLUS)
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z,EPEL,COMP
P_LN(LINPLUS)
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY,EPEL,COMP
P_LN(LINPLUS)
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ,EPEL,COMP
P_LN(LINPLUS)
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ,EPEL,COMP
P_LN(LINPLUS)
IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1,EPEL,PRIN
P_LN(LINPLUS)
IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2,EPEL,PRIN
P_LN(LINPLUS)
IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3,EPEL,PRIN
P_LN(LINPLUS)
IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT,EPEL,PRIN
P_LN(LINPLUS)
IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV,EPEL,PRIN
!
P_LN(LINPLUS)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X,EPTH,COMP
P_LN(LINPLUS)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y,EPTH,COMP
P_LN(LINPLUS)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z,EPTH,COMP
P_LN(LINPLUS)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY,EPTH,COMP
P_LN(LINPLUS)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ,EPTH,COMP
P_LN(LINPLUS)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ,EPTH,COMP
P_LN(LINPLUS)
IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1,EPTH,PRIN
P_LN(LINPLUS)
IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2,EPTH,PRIN
P_LN(LINPLUS)
IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3,EPTH,PRIN
P_LN(LINPLUS)
IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT,EPTH,PRIN
P_LN(LINPLUS)
IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV,EPTH,PRIN
!
P_LN(FULL_ANS)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X,EPPL,COMP
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y,EPPL,COMP
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z,EPPL,COMP
P_LN(FULL_ANS)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY,EPPL,COMP
P_LN(FULL_ANS)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ,EPPL,COMP
P_LN(FULL_ANS)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ,EPPL,COMP
P_LN(FULL_ANS)
IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1,EPPL,PRIN
P_LN(FULL_ANS)
IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2,EPPL,PRIN
P_LN(FULL_ANS)
IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3,EPPL,PRIN
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT,EPPL,PRIN
P_LN(FULL_ANS)
IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV,EPPL,PRIN
P_LN(FULL_ANS)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ,NL,""
!
P_LN(FULL_ANS)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X,EPCR,COMP
P_LN(FULL_ANS)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y,EPCR,COMP
P_LN(FULL_ANS)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z,EPCR,COMP
P_LN(FULL_ANS)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY,EPCR,COMP
P_LN(FULL_ANS)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ,EPCR,COMP
P_LN(FULL_ANS)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ,EPCR,COMP
P_LN(FULL_ANS)
IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1,EPCR,PRIN
P_LN(FULL_ANS)
IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2,EPCR,PRIN
P_LN(FULL_ANS)
IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3,EPCR,PRIN
P_LN(FULL_ANS)
IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT,EPCR,PRIN
P_LN(FULL_ANS)
IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV,EPCR,PRIN
!
P_LN(FULL_ANS)
IDX_Strain-other    ,Swelling    EPSW,EPSW,,EPSW,""
!
P_LN(FULL_ANS*PROFS)
IDX_Contact         ,Status      STAT,CONT,STAT,CONT,""
P_LN(FULL_ANS*PROFS)
IDX_Contact         ,Penetration PENE,CONT,PENE,CONT,""
P_LN(FULL_ANS*PROFS)
IDX_Contact         ,Gap         GAP ,CONT,GAP ,CONT,""
P_LN(FULL_ANS*PROFS)
IDX_Contact         ,Pressure    PRES,CONT,PRES,CONT,""
P_LN(FULL_ANS*PROFS)
IDX_Contact         ,Fric Stress SFRI,CONT,SFRI,CONT,""
P_LN(FULL_ANS*PROFS)
IDX_Contact         ,TotalStress STOT,CONT,STOT,CONT,""
P_LN(FULL_ANS*PROFS)
IDX_Contact         ,SlidingDist SLID,CONT,SLID,CONT,""
P_LN(FULL_ANS*PROFS)
IDX_Contact         ,Heat flux   FLUX,CONT,FLUX,CONT,""
P_LN(FULL_ANS*PROFS)
IDX_Contact         ,Chattering  CNOS,CONT,CNOS,CONT,""
P_LN(FULL_ANS*PROFS)
IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS,CONT,""
!
IDX_Geometry        ,Node loc       X,LOC,X,1,NLIST
IDX_Geometry        ,               Y,LOC,Y,1,NLIST
IDX_Geometry        ,               Z,LOC,Z,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,Node rot angl XY,ANG,XY,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,              YZ,ANG,YZ,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,              ZX,ANG,ZX,1,NLIST
!
P_LN(LINPLUS)
IDX_Failure Criteria,Max Stress     SMAX,FAIL,SMAX
P_LN(LINPLUS)
IDX_Failure Criteria,Tsai-Wu Index  TWSI,FAIL,TWSI
P_LN(LINPLUS)
IDX_Failure Criteria,Tsai-Wu Ratio  TWSR,FAIL,TWSR
P_LN(LINPLUS)
IDX_Failure Criteria,Max Strain     EMAX,FAIL,EMAX
!
 Fld_2
  K_FL(THERMAL+multifld)
  Prm_Item,Comp  Sort nodes based on
  Typ_IDX
P_LN(THERMAL*FLOTRAN)
IDX_DOF solution    ,Temperature TEMP,TEMP,,TEMP
!
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X,TF,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y,TF,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z,TF,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM,TF,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X,TG,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y,TG,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z,TG,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM,TG,COMP
!
IDX_Geometry        ,Node loc       X,LOC,X,1,NLIST
IDX_Geometry        ,               Y,LOC,Y,1,NLIST
IDX_Geometry        ,               Z,LOC,Z,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,Node rot angl XY,ANG,XY,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,              YZ,ANG,YZ,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,              ZX,ANG,ZX,1,NLIST
!
 Fld_2
  K_FL((ELECTRIC*MAGNETIC)+structrl+thermal+fluid)
  Prm_Item,Comp  Sort nodes based on
  Typ_IDX
P_LN(ELECMAG)
IDX_DOF solution    ,MagScalPoten MAG,MAG,,MAG,""
P_LN(ELECMAG)
IDX_DOF solution    ,MagVectPoten  AX,A,X,A,X
P_LN(ELECMAG)
IDX_DOF solution    ,              AY,A,Y,A,Y
P_LN(ELECMAG)
IDX_DOF solution    ,              AZ,A,Z,A,Z
P_LN(ELECMAG)
IDX_DOF solution    ,            ASUM,A,SUM,A,COMP
P_LN(THERMAL*ELECMAG)
IDX_DOF solution    ,Elec poten  VOLT,VOLT,VOLT,""
P_LN(ELECMAG)
IDX_DOF solution    ,Current     CURR,CURR,CURR,""
P_LN(ELECMAG)
IDX_DOF solution    ,EMF drop     EMF,EMF,EMF,""
!
P_LN(ELECMAG)
IDX_Flux & gradient ,MagFluxDens   BX,B,X,B,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,              BY,B,Y,B,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,              BZ,B,Z,B,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,            BSUM,B,SUM,B,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,Mag field     HX,H,X,H,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,              HY,H,Y,H,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,              HZ,H,Z,H,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,            HSUM,H,SUM,H,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X,D,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,              DY,D,Y,D,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,              DZ,D,Z,D,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,            DSUM,D,SUM,D,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,Elec field   EFX,EF,X,EF,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFY,EF,Y,EF,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,             EFZ,EF,Z,EF,COMP
P_LN(ELECMAG)
IDX_Flux & gradient ,           EFSUM,EF,SUM,EF,COMP
!
P_LN(ELECMAG)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X,FMAG,COMP
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGY,FMAG,Y,FMAG,COMP
P_LN(ELECMAG)
IDX_Nodal force data,           FMAGZ,FMAG,Z,FMAG,COMP
P_LN(ELECMAG)
IDX_Nodal force data,         FMAGSUM,FMAG,SUM,FMAG,COMP
!
IDX_Geometry        ,Node loc       X,LOC,X,1,NLIST
IDX_Geometry        ,               Y,LOC,Y,1,NLIST
IDX_Geometry        ,               Z,LOC,Z,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,Node rot angl XY,ANG,XY,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,              YZ,ANG,YZ,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,              ZX,ANG,ZX,1,NLIST
!
 Fld_2
  K_FL(FLUID+multifld)
  Prm_Item,Comp  Sort nodes based on
  Typ_IDX
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,V,X,V,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,V,Y,V,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,V,Z,V,Z
P_LN(FLOTRAN)
IDX_DOF solution    ,            VSUM,V,SUM,V,COMP
P_LN(FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Pressure    PRES,PRES,,PRES,""
P_LN(THERMAL*FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Temperature TEMP,TEMP,,TEMP,""
!
P_LN(FULL_ANS)
IDX_Flux & gradient ,Pressur grad PGX,PG,X,PG,COMP
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGY,PG,Y,PG,COMP
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGZ,PG,Z,PG,COMP
P_LN(FULL_ANS)
IDX_Flux & gradient ,           PGSUM,PG,SUM,PG,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X,TF,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y,TF,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z,TF,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM,TF,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X,TG,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y,TG,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z,TG,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM,TG,COMP
!
IDX_Geometry        ,Node loc       X,LOC,X,1,NLIST
IDX_Geometry        ,               Y,LOC,Y,1,NLIST
IDX_Geometry        ,               Z,LOC,Z,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,Node rot angl XY,ANG,XY,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,              YZ,ANG,YZ,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,              ZX,ANG,ZX,1,NLIST
!
 Fld_2
  K_FL(CFD)
  Prm_Item,Comp  Sort nodes based on
  Typ_IDX
P_LN(FLOTRAN)
IDX_DOF solution    ,Displacement  UX,U,X,U,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              UY,U,Y,U,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              UZ,U,Z,U,Z
P_LN(FLOTRAN)
IDX_DOF solution    ,            USUM,U,SUM,U,COMP
P_LN(FLOTRAN)
IDX_DOF solution    ,Velocity      VX,V,X,V,X
P_LN(FLOTRAN)
IDX_DOF solution    ,              VY,V,Y,V,Y
P_LN(FLOTRAN)
IDX_DOF solution    ,              VZ,V,Z,V,Z
P_LN(FLOTRAN)
IDX_DOF solution    ,            VSUM,V,SUM,V,COMP
P_LN(FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Pressure    PRES,PRES,,PRES,""
P_LN(FLOTRAN)
IDX_DOF solution    ,Turb K.E.   ENKE,ENKE,,ENKE,""
P_LN(FLOTRAN)
IDX_DOF solution    ,Enrg dissip ENDS,ENDS,,ENDS,""
P_LN(THERMAL*FLOTRAN*FULL_ANS)
IDX_DOF solution    ,Temperature TEMP,TEMP,,TEMP,""
!
P_LN(FULL_ANS)
IDX_Flux & gradient ,Pressur grad PGX,PG,X,PG,COMP
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGY,PG,Y,PG,COMP
P_LN(FULL_ANS)
IDX_Flux & gradient ,             PGZ,PG,Z,PG,COMP
P_LN(FULL_ANS)
IDX_Flux & gradient ,           PGSUM,PG,SUM,PG,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal flux TFX,TF,X,TF,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,             TFY,TF,Y,TF,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,             TFZ,TF,Z,TF,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,           TFSUM,TF,SUM,TF,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,Thermal grad TGX,TG,X,TG,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,             TGY,TG,Y,TG,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,             TGZ,TG,Z,TG,COMP
P_LN(THERMAL)
IDX_Flux & gradient ,           TGSUM,TG,SUM,TG,COMP
!
P_LN(FLOTRAN)
IDX_Other quantities,Density     DENS,DENS,,DENS,""
P_LN(FLOTRAN)
IDX_Other quantities,Viscosity   VISC,VISC,,VISC,""
P_LN(FLOTRAN)
IDX_Other quantities,Conductivit COND,COND,,COND,""
P_LN(FLOTRAN)
IDX_Other quantities,Eff Viscos  EVIS,EVIS,,EVIS,""
P_LN(FLOTRAN)
IDX_Other quantities,Eff Conduct ECON,ECON,,ECON,""
P_LN(FLOTRAN)
IDX_Other quantities,Total temp  TTOT,TTOT,,TTOT,""
P_LN(FLOTRAN)
IDX_Other quantities,Strm func2D STRM,STRM,,STRM,""
P_LN(FLOTRAN)
IDX_Other quantities,PressurCoef PCOE,PCOE,,PCOE,""
P_LN(FLOTRAN)
IDX_Other quantities,Mach number MACH,MACH,,MACH,""
P_LN(FLOTRAN)
IDX_Other quantities,Total pres  PTOT,PTOT,,PTOT,""
P_LN(FLOTRAN)
IDX_Other quantities,Heat flux   HFLU,HFLU,,HFLU,""
P_LN(FLOTRAN)
IDX_Other quantities,Film coeff  HFLM,HFLM,,HFLM,""
P_LN(FLOTRAN)
IDX_Other quantities,Turb law Y+ YPLU,YPLU,,YPLU,""
P_LN(FLOTRAN)
IDX_Other quantities,Wall shear  TAUW,TAUW,,TAUW,""
!
IDX_Geometry        ,Node loc       X,LOC,X,1,NLIST
IDX_Geometry        ,               Y,LOC,Y,1,NLIST
IDX_Geometry        ,               Z,LOC,Z,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,Node rot angl XY,ANG,XY,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,              YZ,ANG,YZ,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
IDX_Geometry        ,              ZX,ANG,ZX,1,NLIST
!
 Fld_2
  K_FL(DIFFUSN+multifld)
  Prm_Item,Comp  Sort nodes based on
  Typ_IDX
IDX_DOF solution    ,Concetration CONC,CONC,,CONC,
IDX_Flux & gradient ,Diffusn flux DFX,DF,X,DF,COMP
IDX_Flux & gradient ,             DFY,DF,Y,DF,COMP
IDX_Flux & gradient ,             DFZ,DF,Z,DF,COMP
IDX_Flux & gradient ,           DFSUM,DF,SUM,DF,COMP
IDX_Flux & gradient ,Concent grad CGX,CG,X,CG,COMP
IDX_Flux & gradient ,             CGY,CG,Y,CG,COMP
IDX_Flux & gradient ,             CGZ,CG,Z,CG,COMP
IDX_Flux & gradient ,           CGSUM,CG,SUM,CG,COMP
IDX_Strain-diffusion,X-dir'n  EPDI  X,EPDI,X,EPDI,COMP
IDX_Strain-diffusion,Y-dir'n  EPDI  Y,EPDI,Y,EPDI,COMP
IDX_Strain-diffusion,Z-dir'n  EPDI  Z,EPDI,Z,EPDI,COMP
IDX_Strain-diffusion,XY-shear EPDI XY,EPDI,XY,EPDI,COMP
IDX_Strain-diffusion,YZ-shear EPDI YZ,EPDI,YZ,EPDI,COMP
IDX_Strain-diffusion,XZ-shear EPDI XZ,EPDI,XZ,EPDI,COMP
IDX_Strain-diffusion,1st prin EPDI  1,EPDI,1,EPDI,PRIN
IDX_Strain-diffusion,2nd prin EPDI  2,EPDI,2,EPDI,PRIN
IDX_Strain-diffusion,3rd prin EPDI  3,EPDI,3,EPDI,PRIN
IDX_Strain-diffusion,Intensty EPDIINT,EPDI,INT,EPDI,PRIN
IDX_Strain-diffusion,vonMises EPDIEQV,EPDI,EQV,EPDI,PRIN
!
 Fld_2
  K_FL(MULTIFLD+(STRUCTRL*THERMAL*FLUID*LSDYNA*DIFFUSN))
  Prm_Item,Comp  Sort nodes based on
  Typ_IDX
P_LN(LINPLUS)
IDX_DOF solution    ,Translation   UX,U,X,U,X
P_LN(LINPLUS)
IDX_DOF solution    ,              UY,U,Y,U,Y
P_LN(LINPLUS)
IDX_DOF solution    ,              UZ,U,Z,U,Z
P_LN(LINPLUS)
IDX_DOF solution    ,            USUM,U,SUM,U,COMP
P_LN(LINPLUS)
IDX_DOF solution    ,Rotation    ROTX,ROT,X,ROT,X
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTY,ROT,Y,ROT,Y
P_LN(LINPLUS)
IDX_DOF solution    ,            ROTZ,ROT,Z,ROT,Z
P_LN(LINPLUS)
IDX_DOF solution    ,          ROTSUM,ROT,SUM,ROT,COMP
P_LN(FULL_ANS)
IDX_DOF solution    ,Warping     WARP,WARP,,WARP
P_LN(THERMAL*FLOTRAN*FULL_ANS)
K_LN(lsdyna)
IDX_DOF solution    ,Temperature TEMP,TEMP,,TEMP,""
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,MagScalPoten MAG,MAG,,MAG,""
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,MagVectPoten  AX,A,X,A,X
K_LN(LSDYNA)
IDX_DOF solution    ,Acceleration  AX,A,X,A,X
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AY,A,Y,A,Y
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,              AZ,A,Z,A,Z
P_LN(ELECMAG*LSDYNA)
IDX_DOF solution    ,            ASUM,A,SUM,A,COMP
P_LN(THERMAL*ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,Elec poten  VOLT,VOLT,,VOLT,""
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,Current     CURR,CURR,,CURR,""
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_DOF solution    ,EMF drop     EMF,EMF,,EMF,""
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,Velocity      VX,V,X,V,X
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VY,V,Y,V,Y
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,              VZ,V,Z,V,Z
P_LN(FLOTRAN*LSDYNA)
IDX_DOF solution    ,            VSUM,V,SUM,V,SUM
P_LN(FLOTRAN*FULL_ANS)
K_LN(lsdyna)
IDX_DOF solution    ,Pressure    PRES,PRES,,PRES,""
K_LN(DIFFUSN)
IDX_DOF solution    ,Concetration CONC,CONC,,CONC,
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,X-direction   SX,S,X,S,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,Y-direction   SY,S,Y,S,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,Z-direction   SZ,S,Z,S,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,XY-shear     SXY,S,XY,S,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,YZ-shear     SYZ,S,YZ,S,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,XZ-shear     SXZ,S,XZ,S,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,1st principal S1,S,1,S,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,2nd principal S2,S,2,S,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,3rd principal S3,S,3,S,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,Intensity   SINT,S,INT,S,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Stress          ,von Mises   SEQV,S,EQV,S,PRIN
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,PlasEqvStrs SEPL,NL,SEPL,NL,""
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,StressRatio SRAT,NL,SRAT,NL,""
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Stress          ,HydrostPres HPRE,NL,HPRE,NL,""
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,X-dir'n  EPTO  X,EPTO,X,EPTO,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,Y-dir'n  EPTO  Y,EPTO,Y,EPTO,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,Z-dir'n  EPTO  Z,EPTO,Z,EPTO,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,XY-shear EPTO XY,EPTO,XY,EPTO,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,YZ-shear EPTO YZ,EPTO,YZ,EPTO,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,XZ-shear EPTO XZ,EPTO,XZ,EPTO,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,1st prin EPTO  1,EPTO,1,EPTO,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,2nd prin EPTO  2,EPTO,2,EPTO,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,3rd prin EPTO  3,EPTO,3,EPTO,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,Intensty EPTOINT,EPTO,INT,EPTO,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-total    ,vonMises EPTOEQV,EPTO,EQV,EPTO,PRIN
!
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal flux TFX,TF,X,TF,COMP
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFY,TF,Y,TF,COMP
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TFZ,TF,Z,TF,COMP
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TFSUM,TF,SUM,TF,COMP
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,Thermal grad TGX,TG,X,TG,COMP
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGY,TG,Y,TG,COMP
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,             TGZ,TG,Z,TG,COMP
P_LN(THERMAL)
K_LN(lsdyna)
IDX_Flux & gradient ,           TGSUM,TG,SUM,TG,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,MagFluxDens   BX,B,X,B,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              BY,B,Y,B,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              BZ,B,Z,B,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            BSUM,B,SUM,B,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Mag field     HX,H,X,H,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              HY,H,Y,H,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              HZ,H,Z,H,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            HSUM,H,SUM,H,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,ElecFluxDens  DX,D,X,D,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              DY,D,Y,D,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,              DZ,D,Z,D,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,            DSUM,D,SUM,D,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,Elec field   EFX,EF,X,EF,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             EFY,EF,Y,EF,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,             EFZ,EF,Z,EF,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Flux & gradient ,           EFSUM,EF,SUM,EF,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,Pressur grad PGX,PG,X,PG,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,             PGY,PG,Y,PG,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,             PGZ,PG,Z,PG,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Flux & gradient ,           PGSUM,PG,SUM,PG,COMP
K_LN(DIFFUSN)
IDX_Flux & gradient ,Diffusn flux DFX,DF,X,DF,COMP
K_LN(DIFFUSN)
IDX_Flux & gradient ,             DFY,DF,Y,DF,COMP
K_LN(DIFFUSN)
IDX_Flux & gradient ,             DFZ,DF,Z,DF,COMP
K_LN(DIFFUSN)
IDX_Flux & gradient ,           DFSUM,DF,SUM,DF,COMP
K_LN(DIFFUSN)
IDX_Flux & gradient ,Concent grad CGX,CG,X,CG,COMP
K_LN(DIFFUSN)
IDX_Flux & gradient ,             CGY,CG,Y,CG,COMP
K_LN(DIFFUSN)
IDX_Flux & gradient ,             CGZ,CG,Z,CG,COMP
K_LN(DIFFUSN)
IDX_Flux & gradient ,           CGSUM,CG,SUM,CG,COMP
!
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,Mag force  FMAGX,FMAG,X,FMAG,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,           FMAGY,FMAG,Y,FMAG,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,           FMAGZ,FMAG,Z,FMAG,COMP
P_LN(ELECMAG)
K_LN(lsdyna)
IDX_Nodal force data,         FMAGSUM,FMAG,SUM,FMAG,COMP
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,X-dir'n  EPEL  X,EPEL,X,EPEL,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,Y-dir'n  EPEL  Y,EPEL,Y,EPEL,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,Z-dir'n  EPEL  Z,EPEL,Z,EPEL,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,XY-shear EPEL XY,EPEL,XY,EPEL,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,YZ-shear EPEL YZ,EPEL,YZ,EPEL,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,XZ-shear EPEL XZ,EPEL,XZ,EPEL,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,1st prin EPEL  1,EPEL,1,EPEL,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,2nd prin EPEL  2,EPEL,2,EPEL,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,3rd prin EPEL  3,EPEL,3,EPEL,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,Intensty EPELINT,EPEL,INT,EPEL,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-elastic  ,vonMises EPELEQV,EPEL,EQV,EPEL,PRIN
!
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,X-dir'n  EPTH  X,EPTH,X,EPTH,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Y-dir'n  EPTH  Y,EPTH,Y,EPTH,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Z-dir'n  EPTH  Z,EPTH,Z,EPTH,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XY-shear EPTH XY,EPTH,XY,EPTH,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,YZ-shear EPTH YZ,EPTH,YZ,EPTH,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,XZ-shear EPTH XZ,EPTH,XZ,EPTH,COMP
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,1st prin EPTH  1,EPTH,1,EPTH,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,2nd prin EPTH  2,EPTH,2,EPTH,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,3rd prin EPTH  3,EPTH,3,EPTH,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,Intensty EPTHINT,EPTH,INT,EPTH,PRIN
P_LN(LINPLUS)
K_LN(lsdyna)
IDX_Strain-thermal  ,vonMises EPTHEQV,EPTH,EQV,EPTH,PRIN
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,X-dir'n  EPPL  X,EPPL,X,EPPL,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Y-dir'n  EPPL  Y,EPPL,Y,EPPL,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Z-dir'n  EPPL  Z,EPPL,Z,EPPL,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,XY-shear EPPL XY,EPPL,XY,EPPL,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,YZ-shear EPPL YZ,EPPL,YZ,EPPL,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,XZ-shear EPPL XZ,EPPL,XZ,EPPL,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,1st prin EPPL  1,EPPL,1,EPPL,PRIN
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,2nd prin EPPL  2,EPPL,2,EPPL,PRIN
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,3rd prin EPPL  3,EPPL,3,EPPL,PRIN
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Intensty EPPLINT,EPPL,INT,EPPL,PRIN
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,vonMises EPPLEQV,EPPL,EQV,EPPL,PRIN
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-plastic  ,Eqv plastic EPEQ,NL,EPEQ,EPPL,PRIN
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,X-dir'n  EPCR  X,EPCR,X,EPCR,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Y-dir'n  EPCR  Y,EPCR,Y,EPCR,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Z-dir'n  EPCR  Z,EPCR,Z,EPCR,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XY-shear EPCR XY,EPCR,XY,EPCR,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,YZ-shear EPCR YZ,EPCR,YZ,EPCR,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,XZ-shear EPCR XZ,EPCR,XZ,EPCR,COMP
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,1st prin EPCR  1,EPCR,1,EPCR,PRIN
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,2nd prin EPCR  2,EPCR,2,EPCR,PRIN
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,3rd prin EPCR  3,EPCR,3,EPCR,PRIN
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,Intensty EPCRINT,EPCR,INT,EPCR,PRIN
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-creep    ,vonMises EPCREQV,EPCR,EQV,EPCR,PRIN
!
K_LN(DIFFUSN)
IDX_Strain-diffusion,X-dir'n  EPDI  X,EPDI,X,EPDI,COMP
K_LN(DIFFUSN)
IDX_Strain-diffusion,Y-dir'n  EPDI  Y,EPDI,Y,EPDI,COMP
K_LN(DIFFUSN)
IDX_Strain-diffusion,Z-dir'n  EPDI  Z,EPDI,Z,EPDI,COMP
K_LN(DIFFUSN)
IDX_Strain-diffusion,XY-shear EPDI XY,EPDI,XY,EPDI,COMP
K_LN(DIFFUSN)
IDX_Strain-diffusion,YZ-shear EPDI YZ,EPDI,YZ,EPDI,COMP
K_LN(DIFFUSN)
IDX_Strain-diffusion,XZ-shear EPDI XZ,EPDI,XZ,EPDI,COMP
K_LN(DIFFUSN)
IDX_Strain-diffusion,1st prin EPDI  1,EPDI,1,EPDI,PRIN
K_LN(DIFFUSN)
IDX_Strain-diffusion,2nd prin EPDI  2,EPDI,2,EPDI,PRIN
K_LN(DIFFUSN)
IDX_Strain-diffusion,3rd prin EPDI  3,EPDI,3,EPDI,PRIN
K_LN(DIFFUSN)
IDX_Strain-diffusion,Intensty EPDIINT,EPDI,INT,EPDI,PRIN
K_LN(DIFFUSN)
IDX_Strain-diffusion,vonMises EPDIEQV,EPDI,EQV,EPDI,PRIN
!
P_LN(FULL_ANS)
K_LN(lsdyna)
IDX_Strain-other    ,Swelling    EPSW,EPSW,,EPSW,""
!
P_LN(FULL_ANS*PROFS)
K_LN(lsdyna)
IDX_Contact         ,Status      STAT,CONT,STAT,CONT,""
P_LN(FULL_ANS*PROFS)
K_LN(lsdyna)
IDX_Contact         ,Penetration PENE,CONT,PENE,CONT,""
P_LN(FULL_ANS*PROFS)
K_LN(lsdyna)
IDX_Contact         ,Gap         GAP ,CONT,GAP ,CONT,""
P_LN(FULL_ANS*PROFS)
K_LN(lsdyna)
IDX_Contact         ,Pressure    PRES,CONT,PRES,CONT,""
P_LN(FULL_ANS*PROFS)
K_LN(lsdyna)
IDX_Contact         ,Fric Stress SFRI,CONT,SFRI,CONT,""
P_LN(FULL_ANS*PROFS)
K_LN(lsdyna)
IDX_Contact         ,TotalStress STOT,CONT,STOT,CONT,""
P_LN(FULL_ANS*PROFS)
K_LN(lsdyna)
IDX_Contact         ,SlidingDist SLID,CONT,SLID,CONT,""
P_LN(FULL_ANS*PROFS)
K_LN(lsdyna)
IDX_Contact         ,Heat flux   HEAT,CONT,HEAT,CONT,""
P_LN(FULL_ANS*PROFS)
K_LN(lsdyna)
IDX_Contact         ,Chattering  CNOS,CONT,CNOS,CONT,""
P_LN(FULL_ANS*PROFS)
K_LN(lsdyna)
IDX_Contact         ,Fluid Pres  FPRS,CONT,FPRS,CONT,""
!
IDX_Geometry        ,Node loc       X,LOC,X,1,NLIST
IDX_Geometry        ,               Y,LOC,Y,1,NLIST
IDX_Geometry        ,               Z,LOC,Z,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
K_LN(lsdyna)
IDX_Geometry        ,Node rot angl XY,ANG,XY,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
K_LN(lsdyna)
IDX_Geometry        ,              YZ,ANG,YZ,1,NLIST
P_LN(LINPLUS*THERMAL*ELECMAG)
K_LN(lsdyna)
IDX_Geometry        ,              ZX,ANG,ZX,1,NLIST
!  
Cmd_)/GO
Cal_Fnc_NSORT2
:E END OF Fnc_NSORT
:! 
:N Fnc_NSORT2
:S   1617,  1038,   558
:T Command
:C )! Fnc_NSORT2
:A Hidden
:C )/NOPR
:C )KEYW,KEY1,0
:C )KEYW,KEY2,0
:C )KEYW,KEY3,0
:C )KEYW,KEY4,0
:C )KEYW,KEY5,0
:C )KEYW,KEY6,0
:C )KEYW,KEY7,0
:C )KEYW,KEY8,0
:C )*GET,_z9,PARM,_z3,TYPE
:C )*IF,_z9,EQ,-1,THEN !{
:C )_z3=' '
:C )*ENDIF !}
:C )*GET,_z9,CPAR,3
:C )*IF,_z9,EQ,1,THEN
:C )KEYW,KEY4,1
:C )CM,_CMNODE,NODE
:C )_z4=1
:C )KEYW,KEY3,1
:C )*ENDIF
:C )*IF,_z4,EQ,0,THEN
:C )*IF,_z5,GE,2,THEN
:C )CM,_CMNODE,NODE
:C )_z4=1
:C )KEYW,KEY3,1
:C )*ELSEIF,_z6,GE,2,THEN
:C )CM,_CMNODE,NODE
:C )_z4=1
:C )KEYW,KEY3,1
:C )*ENDIF
:C )*ENDIF
:C )*IF,_z4,EQ,1,THEN
:C )_z4='SELECT'
:C )*ENDIF
:C )*IF,_z5,EQ,1,THEN
:C )KEYW,KEY1,1
:C )*ELSEIF,_z5,EQ,2,THEN
:C )KEYW,KEY2,1
:C )*ELSEIF,_z5,EQ,3,THEN
:C )KEYW,KEY1,1
:C )KEYW,KEY2,1
:C )*ENDIF
:C )*IF,_z6,EQ,1,THEN
:C )KEYW,KEY5,1
:C )KEYW,KEY9,1
:C )*ELSEIF,_z6,EQ,2,THEN
:C )KEYW,KEY6,1
:C )KEYW,KEY9,1
:C )*ELSEIF,_z6,EQ,3,THEN
:C )KEYW,KEY7,1
:C )KEYW,KEY9,1
:C )*ELSEIF,_z6,EQ,4,THEN
:C )KEYW,KEY8,1
:C )KEYW,KEY9,1
:C )*ENDIF
:C )/GO
Inp_P
Cmd_NSORT
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
 Fld_4
  Typ_Def_*PAR(_z1)
 Fld_5
  Typ_Def_*PAR(_z2)
 Fld_6
  Typ_Def_*PAR(_z3)
 Fld_7
  Typ_Def_*PAR(_z4)
Cmd_)/NOPR
Cmd_PRNSOL
K_CM(KEY1&key4)
 Fld_2
  Typ_Def_*CPAR(3)
 Fld_3
  Typ_Def_*CPAR(4)
Cmd_NLIST
K_CM(KEY2)
Cmd_NLIST
K_CM(KEY4)
 Fld_6
   Typ_Def_*CPAR(2)
Cmd_)CMSEL,S,_CMNODE
K_CM(KEY3&key9)
Cmd_)CMDELE,_CMNODE
K_CM(KEY3&key9)
K_LN(KEY5)
Cmd_)/GO
Cmd_)!
 Fld_2
  Typ_Def_*PAR(_z6)
Cal_Fnc_NSORT_CP,2,EQ,1
Cal_Fnc_NSORT_RP,2,EQ,2
Cal_Fnc_NSORT_EP,2,EQ,3
Cal_Fnc_NSORT_LP,2,EQ,4
:E END OF Fnc_NSORT2
:! 
:N Fnc_NSORT_CP
:S    346,   231,   108
:T Command
:C )! Fnc_NSORT_CP
:A Hidden
:C )/NOPR
:C )*GET,_z1,COMMON,,D3COM,,INT,96
:C )/USER,ALL
:C )/NOERASE
:C )/PNUM,NODE,1
:C )NPLOT
:C )/AUTO,ALL
:C )/ERASE
:C )/PNUM,NODE,_z1
:C )/GO
Inp_P
Cmd_)!
  Typ_Def_1
Cmd_)/NOPR
Cmd_)CMSEL,S,_CMNODE
K_CM(KEY3)
Cmd_)CMDELE,_CMNODE
K_CM(KEY3)
Cmd_)/GO
:E End
:! 
:N Fnc_NSORT_EP
:S    612,   497,   108
:T Command
:C )! Fnc_NSORT_EP
:A Hidden
:C )/NOPR
:C )*GET,_z1,COMMON,,D3COM,,INT,96
:C )*GET,_z2,COMMON,,D3COM,,INT,16
:C )*GET,_z3,COMMON,,D3COM,,INT,173
:C )CM,_NODESET,NODE
:C )CM,_ELEMSET,ELEM
:C )NSEL,ALL
:C )ESEL,ALL
:C )/EDGE,1,1,45
:C )EPLOT
:C )CMSEL,S,_NODESET
:C )/USER,ALL
:C )/NOERASE
:C )/PNUM,NODE,1
:C )NPLOT
:C )/AUTO,ALL
:C )/ERASE
:C )/PNUM,NODE,_z1
:C )/EDGE,1,_z2,_z3
:C )CMSEL,S,_ELEMSET
:C )CMDEL,_ELEMSET
:C )CMDEL,_NODESET
:C )/GO
Inp_P
Cmd_)!
  Typ_Def_1
Cmd_)/NOPR
Cmd_)CMSEL,S,_CMNODE
K_CM(KEY3)
Cmd_)CMDELE,_CMNODE
K_CM(KEY3)
Cmd_)/GO
:E End
:! 
:N Fnc_NSORT_LP
:S    356,   241,   108
:T Command
:C )! Fnc_NSORT_LP
:A Hidden
:C )/NOPR
:C )*GET,_z1,COMMON,,D3COM,,INT,96
:C )LPLOT
:C )/USER,ALL
:C )/NOERASE
:C )/PNUM,NODE,1
:C )NPLOT
:C )/AUTO,ALL
:C )/ERASE
:C )/PNUM,NODE,_z1
:C )/GO
Inp_P
Cmd_)!
  Typ_Def_1
Cmd_)/NOPR
Cmd_)CMSEL,S,_CMNODE
K_CM(KEY3)
Cmd_)CMDELE,_CMNODE
K_CM(KEY3)
Cmd_)/GO
:E End
:! 
:N Fnc_NSORT_RP
:S    194,    80,   107
:T Command
:C )! Fnc_NSORT_RP
:A Hidden
Inp_P
Cmd_)/NOPR
Cmd_)PLNSOL
 Fld_2
  Typ_Def_*CPAR(1)
 Fld_3
  Typ_Def_*CPAR(2)
Cmd_)/GO
Cal_Fnc_NSORT_CP
:E End
:! 
:N Fnc_NSYM
:S    284,   148,   129
:T Cmd_P
:C )! Fnc_NSYM
:C )! Nodes for NSYM command below
:A Nodes 
:D Reflect Nodes
:K #(PREP7)
:H Hlp_C_NSYM
Inp_P
Cmd_)!
  Fld_4
  Typ_NODE
  Prm_[NSYM]  Pick or enter nodes to be reflected
  Min_1
  Cnt_s
  PCN_1
  PFM_1
Cal_Fnc_NSYM_2
:E END
:! 
:N Fnc_NSYM_2
:S    431,   148,   276
:T Command
:C )! Fnc_NSYM_2
:C )/NOPR
:C )_z1=ndinqr(0,14)
:C )/GO
:D Reflect Nodes
:K #(PREP7)
:H Hlp_C_NSYM
Cmd_NSYM
 Fld_0
  Typ_Lab 
  Prm_[NSYM]  Reflect Nodes
 Fld_2
  Prm_Ncomp  Plane of symmetry
  Typ_LIS_RADIOB
  LIS_Y-Z plane      X,X
  LIS_X-Z plane      Y,Y
  LIS_X-Y plane      Z,Z
 Fld_3
  Prm_INC    Node number increment 
  Typ_INT
  Def_*PAR(_z1)
 Fld_4
  Typ_Def_P51X
:E END
:! 
:N Fnc_NUMCMP
:S    590,   134,   449
:T Command
:C )! Fnc_NUMCMP
:A Compress Numbers
:D Compress Numbers
:K #(PREP7)
:H Hlp_C_NUMCMP
Cmd_NUMCMP
 Fld_0
  Typ_Lab
  Prm_[NUMCMP]  Compress Numbers
 Fld_2
  Prm_Label  Item to be compressed
  Typ_LIS_OptionB
  LIS_Nodes           ,NODE
  LIS_Elements        ,ELEM
  LIS_Keypoints       ,KP
  LIS_Lines           ,LINE
  LIS_Areas           ,AREA
  LIS_Volumes         ,VOLU
  LIS_Material props  ,MAT
  LIS_Element types   ,TYPE
  LIS_Real constants  ,REAL
  LIS_Coupled sets    ,CP
  LIS_Constraint eqs. ,CE
  LIS_All             ,ALL
:E END
:! 
:N Fnc_NUMEXP_HREXP
:S   1470,   584,   879
:T Command
:C )! Fnc_NUMEXP_HREXP
:C )/NOPR
:C )*GET,_z1,common,,stepcm,,real,16   ! Phase angle (degrees)
:C )*GET,_z2,common,,soptcm,,int,15    ! Phase angle (all)    
:C )*IF,_z2,EQ,1,THEN
:C )_z3='ALL'
:C )*ELSE
:C )_z3=_z1
:C )*ENDIF
:C )*GET,_z4,common,,stepcm,,int,10    ! Num to expand (all)    
:C )*IF,_z4,EQ,-1,THEN
:C )_z5='ALL'
:C )*ELSE
:C )_z5=_z4
:C )*ENDIF
:C )/GO
:A Range of Solu's
:D Expand A Range of Solutions
:K #((PREP7*SOLUTION)+((TRNSIENT+full)*(HARMONIC+full)*SUBSTRUC*NOFILTER))
:P (LINPLUS)
:H Hlp_UI_numexphrx
Inp_NoApply
Cmd_NUMEXP
Fld_0
 Typ_Lab
 Prm_[NUMEXP]  Expand A Range of Solutions
 Fld_2
  Prm_NUM     Number of solu to expand
  Typ_INT
  Def_*PAR(_z5)
 Fld_0
  Typ_Lab
  Prm_     (Enter ALL to expand all in the time or freq range)
 Fld_0
  Typ_Sep
 Fld_3
  Prm_BEGRNG  Beginning time (or freq)
  Typ_REAL
  Def_*GET(common,,stepcm,,real,13)
 Fld_4
  Prm_ENDRNG  Ending time (or freq)
  Typ_REAL
  Def_*GET(common,,stepcm,,real,14)
 Fld_5
  Prm_Elcalc  Calculate elem results?
  Typ_LOGI,No,Yes
  Def_*GET(common,,stepcm,,int,13)
Fld_0
K_FL(HARMONIC*NOFILTER)
Typ_Sep
Cmd_HREXP
K_CM(HARMONIC*NOFILTER)
Fld_2
 K_FL(HARMONIC*NOFILTER)
 Prm_[HREXP]  Phase angle (degrees) -
 Typ_REAL
 Def_*PAR(_z3)
Fld_0
 K_FL(HARMONIC*NOFILTER)
 Typ_Lab
 Prm_         - for harmonic analysis
Fld_0
 K_FL(HARMONIC*NOFILTER)
 Typ_Lab
 Prm_       (Enter ALL to expand both real and imaginary parts)
:E END
:! 
:N Fnc_NUMMRG
:S    925,   159,   759
:T Command
:C )! Fnc_NUMMRG
:A Merge Items
:D Merge Coincident or Equivalently Defined Items
:K #(PREP7)
:H Hlp_C_NUMMRG
Cmd_NUMMRG
 Fld_0
  Typ_Lab
  Prm_[NUMMRG]  Merge Coincident or Equivalently Defined Items
 Fld_2
  Prm_Label   Type of item to be merged
  Typ_LIS_OptionB
  LIS_Nodes           ,NODE
  LIS_Elements        ,ELEM
  LIS_Keypoints       ,KP
  LIS_Material props  ,MAT
  LIS_Element types   ,TYPE
  LIS_Real constants  ,REAL
  LIS_Coupled sets    ,CP
  LIS_Constraint eqs. ,CE
  LIS_All             ,ALL
 Fld_3
  Prm_TOLER   Range of coincidence
  Typ_REAL
  Def_Blank
 Fld_4
  Prm_GTOLER  Solid model tolerance
  Typ_REAL
  Def_Blank
 Fld_5
  Prm_ACTION  Merge items or select?
  Typ_LIS_Radiog
   Lis_Merge items," "
   Lis_Select w/o merge, SELE
 Fld_6
  Prm_SWITCH  Retain lowest/highest?
  Typ_LIS_OptionB
   Lis_LOWest number,LOW
   Lis_HIGHest number,HIGH
:E END
:! 
:N Fnc_NUMOFF
:S    691,   146,   538
:T Command
:C )! Fnc_NUMOFF
:A Add Num Offset 
:D Add an Offset to Item Numbers
:K #(PREP7)
:H Hlp_C_NUMOFF
Cmd_NUMOFF
 Fld_0
  Typ_Lab
  Prm_[NUMOFF]  Add an Offset to Item Numbers
 Fld_2
  Prm_Label  Type of item to be offset
  Typ_LIS_OptionB
  LIS_Nodes           ,NODE
  LIS_Elements        ,ELEM
  LIS_Keypoints       ,KP
  LIS_Lines           ,LINE
  LIS_Areas           ,AREA
  LIS_Volumes         ,VOLU
  LIS_Material props  ,MAT
  LIS_Element types   ,TYPE
  LIS_Real constants  ,REAL
  LIS_Section numbers ,SECN
  LIS_Coupled sets    ,CP
  LIS_Constraint eqs. ,CE
  LIS_Coordinate sys  ,CSYS
 Fld_3
  Prm_VALUE  Offset value
  Typ_INT
:E END
:! 
:N Fnc_NUMSTR
:S    841,   149,   685
:T Command
:C )! Fnc_NUMSTR
:A Set Start Number 
:D Starting Number Specifications
:K #(PREP7)
:H Hlp_C_NUMSTR
Inp_NoApply
Cmd_NUMSTR
 Fld_0
  Typ_Lab
  Prm_[NUMSTR]  Starting Number Specifications
 Fld_2
 Typ_Def_NODE
 Fld_3
  Prm_For nodes 
  Typ_INT
  Def_*GET(common,,cfprp7,,int,69)
Cmd_NUMSTR
 Fld_2
 Typ_Def_ELEM
 Fld_3
  Prm_For elements
  Typ_INT
  Def_*GET(common,,cfprp7,,int,39)
Cmd_NUMSTR
 Fld_2
 Typ_Def_KP
 Fld_3
  Prm_For keypoints
  Typ_INT
  Def_*GET(common,,cfprp7,,int,66)
Cmd_NUMSTR
 Fld_2
 Typ_Def_LINE
 Fld_3
  Prm_For lines
  Typ_INT
  Def_*GET(common,,cfprp7,,int,68)
Cmd_NUMSTR
 Fld_2
 Typ_Def_AREA
 Fld_3
  Prm_For areas
  Typ_INT
  Def_*GET(common,,cfprp7,,int,65)
Cmd_NUMSTR
 Fld_2
 Typ_Def_VOLU
 Fld_3
  Prm_For volumes 
  Typ_INT
  Def_*GET(common,,cfprp7,,int,89)
:E END
:! 
:N Fnc_NUMSTR_defa
:S    333,   163,   163
:T Command
:C )! Fnc_NUMSTR_defa
:A Reset Start Num
:D Reset Starting Number Specifications
:K #(PREP7)
:H Hlp_C_NUMSTR
Inp_NoApply
Cmd_NUMSTR,DEFA
Fld_0
 Typ_Lab
  Prm_[NUMSTR],DEFA  This function resets starting numbers to
Fld_0
 Typ_Lab
  Prm_               their default values.
:E END
:! 
:N Fnc_NUMSTR_stat
:S    177,   148,    22
:T Cmd_N
:C )! Fnc_NUMSTR_stat
:A Start Num Status
:D Starting Number Status
:K #(PREP7)
:H Hlp_C_NUMSTR
Inp_P
Cmd_NUMSTR,STAT
:E END
:! 
:N Fnc_NUSORT
:S    298,   137,   154
:T Command
:C )! Fnc_NUSORT
:A    Unsort Nodes
:D Unsort Nodes
:H Hlp_C_NUSORT
:K #(POST1+RESULTS)
Inp_NoApply
Cmd_NUSORT
 Fld_0
  Typ_Lab
  Prm_[NUSORT]  This function unsorts nodes and restores them to
 Fld_0
  Typ_Lab
  Prm_          original order.
:E END
:! 
:N Fnc_NWPA
:S    221,   107,   107
:T Cmd_P
:C )! Fnc_NWPA
:A Nodes
:D Offset WP to Nodes
:H Hlp_C_NWPAVE
Inp_P
Cmd_NWPAVE
 Fld_2
Prm_[NWPAVE]  Pick or enter nodes for WP offset
  Typ_NODE
  Min_1
  Cnt_s
  PCN_1
:E END
:! 
:N Fnc_NWPL
:S    252,   108,   137
:T Cmd_P
:C )! Fnc_NWPL
:A Nodes
:D Align WP with Nodes
:H Hlp_C_NWPLAN
Inp_P
Cmd_NWPLAN
Fld_2
Typ_Def_-1
Fld_3
Prm_[NWPLAN]  Pick or enter 3 nodes - origin, X axis, XY plane
Typ_NODE
Min_1
Max_3
PFM_2
Rub_54
:E END
:! 
:N Fnc_NWRITE
:S    368,   154,   207
:T Command
:C )! Fnc_NWRITE
:C )*SET,_zx,'*'
:A Write Node File 
:D Write Nodes to File
:K #(PREP7)
:H Hlp_C_NWRITE
Cmd_NWRITE
 Fld_0
  Typ_Lab
  Prm_[NWRITE]  Write All Selected Nodes to a File
 Fld_2
  Prm_        Name of file
  Typ_FILE_INLINE
  Def_*PAR(_zx)
 Fld_5
  Prm_KAPPND  Append data to file?
  Typ_LOGI,No,Yes
:E End
:! 
:N Fnc_N_p
:S    247,   124,   116
:T Cmd_P
:C )! Fnc_N_p
:A On Working Plane 
:D Create Nodes on WP
:K #(PREP7)
:H Hlp_C_N
Inp_P
Cmd_N
 Fld_3
  Prm_[N]  Pick WP location or enter coordinates for the nodes
  Typ_XYZ
  Min_1
  Cnt_s
  PFM_1
:E End
:! 
:N Fnc_Nd_Surf
:S    668,   531,   130
:T Command
:C )! Fnc_Nd_Surf
:C )/NOPR
:C )*DEL,_z
:C )*DIM,_z,,4
:C )*GET,_z(4),ACTIVE,,KEYWORD,,BETA
:C )*GET,_z(3),ACTIVE,0,TYPE
:C )*GET,_z(2),ETYP,_z(3),ATTR,ENAME
:C )_z(1)=1
:C )*IF,_z(2),EQ,48,THEN
:C ) _z(1)=3
:C )*ELSEIF,_z(2),EQ,49,THEN
:C ) _z(1)=3
:C )*ELSEIF,_z(2),EQ,175,THEN
:C )_z(1)=1
:C )*ELSE
:C ) *IF,_z(4),EQ,0,THEN
:C ) _z(1)=3
:C ) *ELSE
:C ) _z(1)=2
:C ) *ENDIF
:C )*ENDIF
:C )/GOPR
:A    Node to Surf
:D Create Elements at Contact Surfaces
:K #(PREP7)
:P (FULL_ANS)
Inp_P
Cmd_)!
  Fld_2
  Typ_Def_*PAR(_z(1))
Cal_Fnc_ESURF_175,2,EQ,1,1
Cal_Fnc_UNADAPTED_ET,2,EQ,2,1
Cal_Fnc_UNADPT_BETA0,2,EQ,3,1
:E END
:! 
:N Fnc_NonlinRC
:S   2590,   134,  2449
:T Command
:D Real Constants for 39 - Nonlinear Spring
:H Hlp_E_S4.39
:H Hlp_C_R
:P (ELECMAG)
Inp_NoApply
Cmd_R
 Fld_2
  Typ_Def_*PAR(_z(5))
Fld_0
Typ_Lab
Prm_Displacement-force curve data          D             F
Fld_3
Prm_                    Data set 1
Typ_Real2
Def_*GET(rcon,_z(5),const,1),*GET(rcon,_z(5),const,2)
Fld_5
Prm_                    Data set 2
Typ_Real2
Def_*GET(rcon,_z(5),const,3),*GET(rcon,_z(5),const,4)
Fld_7
Prm_                    Data set 3
Typ_Real2
Def_*GET(rcon,_z(5),const,5),*GET(rcon,_z(5),const,6)
!
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 4
Typ_Real2
Def_*GET(rcon,_z(5),const,7),*GET(rcon,_z(5),const,8)
Fld_4
Prm_                    Data set 5
Typ_Real2
Def_*GET(rcon,_z(5),const,9),*GET(rcon,_z(5),const,10)
Fld_6
Prm_                    Data set 6
Typ_Real2
Def_*GET(rcon,_z(5),const,11),*GET(rcon,_z(5),const,12)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 7
Typ_Real2
Def_*GET(rcon,_z(5),const,13),*GET(rcon,_z(5),const,14)
Fld_4
Prm_                    Data set 8
Typ_Real2
Def_*GET(rcon,_z(5),const,15),*GET(rcon,_z(5),const,16)
Fld_6
Prm_                    Data set 9
Typ_Real2
Def_*GET(rcon,_z(5),const,17),*GET(rcon,_z(5),const,18)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 10
Typ_Real2
Def_*GET(rcon,_z(5),const,19),*GET(rcon,_z(5),const,20)
Fld_4
Prm_                    Data set 11
Typ_Real2
Def_*GET(rcon,_z(5),const,21),*GET(rcon,_z(5),const,22)
Fld_6
Prm_                    Data set 12
Typ_Real2
Def_*GET(rcon,_z(5),const,23),*GET(rcon,_z(5),const,24)
Cmd_RMORE
Fld_2
Prm_                    Data set 13
Typ_Real2
Def_*GET(rcon,_z(5),const,25),*GET(rcon,_z(5),const,26)
Fld_4
Prm_                    Data set 14
Typ_Real2
Def_*GET(rcon,_z(5),const,27),*GET(rcon,_z(5),const,28)
Fld_6
Prm_                    Data set 15
Typ_Real2
Def_*GET(rcon,_z(5),const,29),*GET(rcon,_z(5),const,30)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 16
Typ_Real2
Def_*GET(rcon,_z(5),const,31),*GET(rcon,_z(5),const,32)
Fld_4
Prm_                    Data set 17
Typ_Real2
Def_*GET(rcon,_z(5),const,33),*GET(rcon,_z(5),const,34)
Fld_6
Prm_                    Data set 18
Typ_Real2
Def_*GET(rcon,_z(5),const,35),*GET(rcon,_z(5),const,36)
! Exclude_from_paths
Cmd_RMORE
Fld_2
Prm_                    Data set 19
Typ_Real2
Def_*GET(rcon,_z(5),const,37),*GET(rcon,_z(5),const,38)
Fld_4
Prm_                    Data set 20
Typ_Real2
Def_*GET(rcon,_z(5),const,39),*GET(rcon,_z(5),const,40)
!
Cal_Fnc_MeCirBD_1
:E END
:! 
:N Fnc_OMEGA
:S    494,   152,   335
:T Command
:C )! Fnc_OMEGA
:A    Global
:D Apply Angular Velocity
:K #(PREP7*SOLUTION)
:P (LINPLUS)
:H Hlp_C_OMEGA
Inp_NoApply
Cmd_OMEGA
Fld_0
 Typ_LAB
 Prm_[OMEGA]  Apply Angular Velocity
Fld_2
 Typ_REAL
 Prm_OMEGX  Global Cartesian X-comp
 Def_*GET(common,,ACELCM,,real,31)
Fld_3
 Typ_REAL
 Prm_OMEGY  Global Cartesian Y-comp
 Def_*GET(common,,ACELCM,,real,32)
Fld_4
 Typ_REAL
 Prm_OMEGZ  Global Cartesian Z-comp
 Def_*GET(common,,ACELCM,,real,33)
:E END
:! 
:X INDEX ADDED BY ANSYS 
Fnc_*AFUN             89
Fnc_*ASK             559
Fnc_*ASK_2          4134
Fnc_*ASK_HELP       7194
Fnc_*CREATE         8217
Fnc_*GET            9748
Fnc_*GET_active    13620
Fnc_*GET_area      16943
Fnc_*GET_cdsy      17653
Fnc_*GET_compchr   18536
Fnc_*GET_compsno   18983
Fnc_*GET_comptyp   19378
Fnc_*GET_continf   19762
Fnc_*GET_contno    20272
Fnc_*GET_elem      20638
Fnc_*GET_ent       22603
Fnc_*GET_etyp      32286
Fnc_*GET_graph     33209
Fnc_*GET_kp        41375
Fnc_*GET_line      42189
Fnc_*GET_mat       42994
Fnc_*GET_more      46038
Fnc_*GET_node      46776
Fnc_*GET_onelems   47436
Fnc_*GET_onnodes   48058
Fnc_*GET_opt       49077
Fnc_*GET_p1_elem   49722
Fnc_*GET_p1_etab   51775
Fnc_*GET_p1_gm     52251
Fnc_*GET_p1_misc   65265
Fnc_*GET_p1_mode   65940
Fnc_*GET_p1_node   66440
Fnc_*GET_p1_othr   79529
Fnc_*GET_p1_path   81937
Fnc_*GET_p1_ssum   82491
Fnc_*GET_p26       82963
Fnc_*GET_parm      83928
Fnc_*GET_parmloc   84504
Fnc_*GET_partel    84917
Fnc_*GET_partmat   85306
Fnc_*GET_partno    85674
Fnc_*GET_partrl    86034
Fnc_*GET_rad       86433
Fnc_*GET_rcon      86887
Fnc_*GET_runst     87324
Fnc_*GET_subcnam   90103
Fnc_*GET_subcomp   90580
Fnc_*GET_tb        90987
Fnc_*GET_topo1     92454
Fnc_*GET_topo2     93253
Fnc_*GET_topo3     93646
Fnc_*GET_topo4     94046
Fnc_*GET_topo5     94681
Fnc_*GET_volu      95333
Fnc_*GET_weldmax   96053
Fnc_*GET_weldmin   96432
Fnc_*GET_weldno    96810
Fnc_*GET_weldnod   97158
Fnc_*GET_weldnxt   97627
Fnc_*MFOURI        98002
Fnc_*MFUN          98627
Fnc_*MOONEY        99064
Fnc_*MOONEY2      100777
Fnc_*MOONEY2a     100990
Fnc_*MOPER        101982
Fnc_*STAT         102592
Fnc_*STAT_array   103630
Fnc_*TOPER        103869
Fnc_*VFILL        104852
Fnc_*VFILL_beta   105837
Fnc_*VFILL_data   106387
Fnc_*VFILL_gamm   107227
Fnc_*VFILL_gdis   107718
Fnc_*VFILL_ramp   108156
Fnc_*VFILL_rand   108561
Fnc_*VFILL_tria   108987
Fnc_*VFUN         109491
Fnc_*VGET         110802
Fnc_*VGET_area    111816
Fnc_*VGET_cdsy    112731
Fnc_*VGET_elem    113855
Fnc_*VGET_kp      116159
Fnc_*VGET_line    117225
Fnc_*VGET_node    118286
Fnc_*VGET_p1_eta  119124
Fnc_*VGET_p1_nod  119722
Fnc_*VGET_rcon    132501
Fnc_*VGET_tb      133087
Fnc_*VGET_volu    134705
Fnc_*VITRP        135630
Fnc_*VOPER        136162
Fnc_*VPLOT        137305
Fnc_*VPLO_choice  138072
Fnc_*VPUT         139465
Fnc_*VPUT_etab    139855
Fnc_*VPUT_node    140479
Fnc_*VREAD        152979
Fnc_*VREAD1       153270
Fnc_*VREAD2       154243
Fnc_*VSCFUN       154659
Fnc_*VWRITE       155418
Fnc_*V_settings   156587
Fnc_-AppCharDens  185572
Fnc_-AppCharge-   185814
Fnc_-AppCurrDens  186045
Fnc_-AppCurrSeg-  186278
Fnc_-AppCurrent-  186471
Fnc_-AppElecFiel  186722
Fnc_-AppImped_E-  186914
Fnc_-AppInfinite  187112
Fnc_-AppMCI-      187297
Fnc_-AppMagField  187504
Fnc_-AppMagFlux-  187718
Fnc_-AppMaxwell-  187899
Fnc_-AppShield-   188080
Fnc_-AppSurfChar  188261
Fnc_-AppVirtDisp  188497
Fnc_-AppVoltDrop  188687
Fnc_-BasePSD-     188889
Fnc_-BodyForces-  189027
Fnc_-ConcPlot-    189185
Fnc_-DelCurrDens  189349
Fnc_-DelElecFiel  189569
Fnc_-DelExtPort-  189749
Fnc_-DelIntPort-  189920
Fnc_-DelMagField  190091
Fnc_-EdgeEDOF-    190293
Fnc_-EdgeMVP-     190485
Fnc_-Electric-    190635
Fnc_-Fluence-     190810
Fnc_-FluidANSYS-  190917
Fnc_-FluidCFD-    191076
Fnc_-ImprCurr-    191225
Fnc_-InitialCon-  191397
Fnc_-J-Normal-    191524
Fnc_-J-Normal-T   191749
Fnc_-Magnetic-    191950
Fnc_-MultiPt-     192098
Fnc_-MultiPtBas-  192233
Fnc_-MultiPtNod-  192376
Fnc_-NodePSD-     192520
Fnc_-Options Onl  192658
Fnc_-PMLOpt-      192803
Fnc_-PMLParamDel  192992
Fnc_-PSD-         193176
Fnc_-PerfEC-      193295
Fnc_-RotateNode-  193476
Fnc_-ScalFluxN-   193596
Fnc_-ScalFluxP-   193744
Fnc_-ScalarPot-   193891
Fnc_-SinglPtFor-  194040
Fnc_-SinglePt-    194184
Fnc_-Solve-       194322
Fnc_-StaticMag-   194461
Fnc_-Structural-  194612
Fnc_-Superelem-   194752
Fnc_-Temperature  194888
Fnc_-Thermal-     195129
Fnc_-TimeInt-     195281
Fnc_-VectorPot-   195508
Fnc_-Voltage-     195657
Fnc_/CLEAR        158060
Fnc_/CLEAR_2      158507
Fnc_/COLOR_p      159358
Fnc_/CWD          159910
Fnc_/CYCEXPAND    160477
Fnc_/ColA_p       161208
Fnc_/ColE_p       161501
Fnc_/ColL_p       161803
Fnc_/ColV_p       162096
Fnc_/EXIT         162395
Fnc_/EXIT_ANS     162577
Fnc_/EXIT_WB      163113
Fnc_/EXPAND1      163408
Fnc_/EXPAND1A     163902
Fnc_/EXPAND_axi   164598
Fnc_/EXPAND_axi1  165095
Fnc_/EXPAND_moda  166190
Fnc_/EXPAND_user  167007
Fnc_/FILNAM       168979
Fnc_/FILNAM2      169268
Fnc_/GRAPHICS     169836
Fnc_/GST          170274
Fnc_/MPLIB        170549
Fnc_/MPLIB_STATU  170678
Fnc_/PSEARCH      170875
Fnc_/TITLE        171229
Fnc_/TRLCY_p      171851
Fnc_/TXTRE2       172276
Fnc_/TXTRE_a      173447
Fnc_/TXTRE_a2     173735
Fnc_/TXTRE_a2_of  173927
Fnc_/TXTRE_a2_p   174051
Fnc_/TXTRE_a_off  174395
Fnc_/TXTRE_a_p    174678
Fnc_/TXTRE_bmp    174972
Fnc_/TXTRE_cm     175319
Fnc_/TXTRE_cm2    175610
Fnc_/TXTRE_e      176854
Fnc_/TXTRE_e2     177142
Fnc_/TXTRE_e2_of  177337
Fnc_/TXTRE_e2_p   177464
Fnc_/TXTRE_e_off  177817
Fnc_/TXTRE_e_p    178100
Fnc_/TXTRE_err    178394
Fnc_/TXTRE_jpg    178869
Fnc_/TXTRE_load   179174
Fnc_/TXTRE_off    179692
Fnc_/TXTRE_off2   179970
Fnc_/TXTRE_png    180086
Fnc_/TXTRE_unloa  180388
Fnc_/TXTRE_v      180634
Fnc_/TXTRE_v2     180922
Fnc_/TXTRE_v2_of  181116
Fnc_/TXTRE_v2_p   181242
Fnc_/TXTRE_v_off  181592
Fnc_/TXTRE_v_p    181875
Fnc_/TrnA_p       182169
Fnc_/TrnE_p       182466
Fnc_/TrnV_p       182772
Fnc_/XFRM_p       183075
Fnc_/XFrmA_p      183560
Fnc_/XFrmE_p      183842
Fnc_/XFrmK_p      184133
Fnc_/XFrmL_p      184427
Fnc_/XFrmN_p      184709
Fnc_/XFrmV_p      184991
Fnc_/ZOO          185279
Fnc_A             195877
Fnc_AADD          196112
Fnc_AATT          196334
Fnc_AATT_p        197691
Fnc_AATT_p2       198109
Fnc_ABBRESU       199649
Fnc_ABBSAVE       200071
Fnc_ABEXTRACT     200366
Fnc_ABEXTRACT2    201064
Fnc_ABS           201339
Fnc_ACCAT         201784
Fnc_ACCAT_del     202030
Fnc_ACCAT_m       202858
Fnc_ACEL          203104
Fnc_ACEL_dele     203702
Fnc_ACLEAR        204102
Fnc_ACNTRL        204338
Fnc_ADAMSOUT      205207
Fnc_ADAMSOUT1     205348
Fnc_ADAPT         205637
Fnc_ADD           206509
Fnc_ADELE         207172
Fnc_ADELE_sweep   207414
Fnc_ADGL          207700
Fnc_ADRAG         207845
Fnc_AESIZE        208196
Fnc_AESIZE_p      208517
Fnc_AESIZE_p2     208847
Fnc_AESIZE_pdel   209168
Fnc_AFILLT        209508
Fnc_AFILLT_2      209847
Fnc_AFILLT_3d     210190
Fnc_AFILLT_3d_2   210546
Fnc_AFLIST        210930
Fnc_AFLIST_no     211170
Fnc_AFLIST_yes    211695
Fnc_AGEN          211834
Fnc_AGEN2         212126
Fnc_AGEN_move     212776
Fnc_AGEN_move_2   213086
Fnc_AGLUE         213478
Fnc_AINA          213706
Fnc_AINP          213961
Fnc_AINV          214220
Fnc_AL            214557
Fnc_ALIST_p       214789
Fnc_ALLSEL        215017
Fnc_AMAP          215161
Fnc_AMAP_1        215622
Fnc_AMAP_2        215840
Fnc_AMAP_3        216063
Fnc_AMAP_4        216449
Fnc_AMESH         216914
Fnc_AMESH4        217409
Fnc_AMESH4_1      217931
Fnc_AMESH4_2      218104
Fnc_AMESH4_3      218577
Fnc_AMESH4_4      218908
Fnc_AMESH4_5      219549
Fnc_AMESH_1       220088
Fnc_AMESH_2       220257
Fnc_AMESH_3       220544
Fnc_AMESH_4       220906
Fnc_AMESH_5       221351
Fnc_AMESH_m       221704
Fnc_AMESHtar      221882
Fnc_AMESHtar_1    222413
Fnc_AMESHtar_2    222594
Fnc_AMESHtar_3    223071
Fnc_AMESHtar_4    223410
Fnc_AMESHtar_5    224055
Fnc_AMOR21        224598
Fnc_AMOR22        224806
Fnc_AMOR23        225136
Fnc_AMORP1        225448
Fnc_AMORPH        225923
Fnc_ANORM         226273
Fnc_ANORM2        226595
Fnc_ANSYS_1st     226873
Fnc_ANTDIR        227403
Fnc_ANTDIR_L      229041
Fnc_ANTEFF        230677
Fnc_ANTPAT        232125
Fnc_ANTPAT_L      233252
Fnc_ANTPGAIN      234346
Fnc_ANTPRAD       235800
Fnc_ANTYPE        237199
Fnc_ANTYPE_01     238278
Fnc_ANTYPE_02     239043
Fnc_AOFFST        240587
Fnc_AOFFST_2      240892
Fnc_AOVLAP        241311
Fnc_APLOT         241552
Fnc_APLOT_deg     241930
Fnc_APPEND        242449
Fnc_APPEND_l      244746
Fnc_APPEND_ll     244926
Fnc_APPEND_ln     245197
Fnc_APPEND_n      245463
Fnc_APPEND_nl     245643
Fnc_APPEND_nn     245968
Fnc_APTN          246288
Fnc_ARC_opts      246522
Fnc_AREF          248103
Fnc_AREF_1        248558
Fnc_AREF_2a       249125
Fnc_AREF_2b       249409
Fnc_AREMESH       250038
Fnc_AREVERSE      250524
Fnc_AREVERSE2     250995
Fnc_AROTAT        251323
Fnc_AROTAT_2      251753
Fnc_ARRAY_ADD     252152
Fnc_ARSCAL        252780
Fnc_ARSCAL_2      253075
Fnc_ARSYM         253723
Fnc_ARSYM_2       254028
Fnc_ASBA          254669
Fnc_ASBA_div      254997
Fnc_ASBA_div_op2  255327
Fnc_ASBA_div_opt  256019
Fnc_ASBA_opt      256444
Fnc_ASBA_opt_2    256862
Fnc_ASBL_div      257531
Fnc_ASBL_div_op2  257861
Fnc_ASBL_div_opt  258435
Fnc_ASBV_div      258864
Fnc_ASBV_div_igs  259211
Fnc_ASBV_div_op2  259567
Fnc_ASBV_div_opt  260275
Fnc_ASBW_div      260723
Fnc_ASBW_div_igs  260980
Fnc_ASBW_div_op2  261248
Fnc_ASBW_div_opt  261785
Fnc_ASELH_A       262123
Fnc_ASELH_R       262430
Fnc_ASELH_S       262709
Fnc_ASELH_U       262990
Fnc_ASEL_A        263269
Fnc_ASEL_R        263549
Fnc_ASEL_S        263801
Fnc_ASEL_U        264055
Fnc_ASKIN         264307
Fnc_ASUB          264558
Fnc_ASUM          264901
Fnc_ATAN          265116
Fnc_ATRAN         265593
Fnc_ATRAN_2       265901
Fnc_An_Opts       266551
Fnc_An_Opts_0     267447
Fnc_An_Opts_1     274555
Fnc_An_Opts_2     275350
Fnc_An_Opts_2a    278491
Fnc_An_Opts_2a2   279869
Fnc_An_Opts_2a3   281507
Fnc_An_Opts_2a4   282135
Fnc_An_Opts_2a5   282753
Fnc_An_Opts_2a5a  283085
Fnc_An_Opts_2a6   283911
Fnc_An_Opts_2a7   285805
Fnc_An_Opts_2a7a  286132
Fnc_An_Opts_3     287097
Fnc_An_Opts_3a    288944
Fnc_An_Opts_3a2   289755
Fnc_An_Opts_3a3   290586
Fnc_An_Opts_4     293070
Fnc_An_Opts_4a0   293581
Fnc_An_Opts_4a1   294340
Fnc_An_Opts_4a1a  299570
Fnc_An_Opts_4a1r  299777
Fnc_An_Opts_4a3   300193
Fnc_An_Opts_4x    300742
Fnc_An_Opts_7     301917
Fnc_An_Opts_8     303503
Fnc_An_Sub_CMS    304546
Fnc_App_Coriolis  304849
Fnc_App_Stress    305555
Fnc_ArclenWarn    306409
Fnc_Aux12Fil      306763
Fnc_AxisAdd       307002
Fnc_AxisAddEdit2  307243
Fnc_AxisAddEdit3  307867
Fnc_AxisEdit      309134
Fnc_BFADELE_all   309598
Fnc_BFADELE_chrg  310018
Fnc_BFADELE_ef    310417
Fnc_BFADELE_flue  310779
Fnc_BFADELE_h     311111
Fnc_BFADELE_hgen  311469
Fnc_BFADELE_js    311785
Fnc_BFADELE_port  312164
Fnc_BFADELE_temp  312526
Fnc_BFADELE_vltg  312844
Fnc_BFADE_norm_v  313177
Fnc_BFALIS        313505
Fnc_BFA_chrg      313749
Fnc_BFA_chrg2     314136
Fnc_BFA_ef        314432
Fnc_BFA_ef2       314783
Fnc_BFA_flue      315202
Fnc_BFA_flue2     315522
Fnc_BFA_h         315782
Fnc_BFA_h2        316129
Fnc_BFA_hgen      316538
Fnc_BFA_js        316928
Fnc_BFA_js2       317296
Fnc_BFA_js3       317911
Fnc_BFA_norm_v    318426
Fnc_BFA_norm_v1   318738
Fnc_BFA_temp      319023
Fnc_BFA_temp2     319329
Fnc_BFA_vltg      319928
Fnc_BFA_vltg2     320249
Fnc_BFCUM         320599
Fnc_BFDELE_Force  324221
Fnc_BFDELE_all    324547
Fnc_BFDELE_chrg   324888
Fnc_BFDELE_dyna   325284
Fnc_BFDELE_ef     325439
Fnc_BFDELE_flue   325796
Fnc_BFDELE_h      326123
Fnc_BFDELE_hgen   326476
Fnc_BFDELE_js     326793
Fnc_BFDELE_mvdi   327167
Fnc_BFDELE_port   327515
Fnc_BFDELE_teCM   327848
Fnc_BFDELE_temp   328254
Fnc_BFDEL_p       328567
Fnc_BFDEL_p2      328839
Fnc_BFECUM        329296
Fnc_BFEDELE_FVIN  332829
Fnc_BFEDELE_all   333124
Fnc_BFEDELE_chrg  333475
Fnc_BFEDELE_ef    333882
Fnc_BFEDELE_flue  334250
Fnc_BFEDELE_h     334566
Fnc_BFEDELE_hgen  334930
Fnc_BFEDELE_js    335258
Fnc_BFEDELE_p     335643
Fnc_BFEDELE_p2    335929
Fnc_BFEDELE_teCM  336397
Fnc_BFEDELE_temp  336809
Fnc_BFEDELE_vltg  337125
Fnc_BFEDE_norm_v  337484
Fnc_BFELIS        337821
Fnc_BFESCAL       338066
Fnc_BFE_EF        338869
Fnc_BFE_EF2       339262
Fnc_BFE_FVI2      339578
Fnc_BFE_FVIN      339863
Fnc_BFE_chrgd     340153
Fnc_BFE_chrgd2    340587
Fnc_BFE_ef        341133
Fnc_BFE_ef2       341527
Fnc_BFE_flue      341985
Fnc_BFE_flue2     342349
Fnc_BFE_h         342881
Fnc_BFE_h2        343271
Fnc_BFE_hgen      343723
Fnc_BFE_js        344165
Fnc_BFE_js2       344576
Fnc_BFE_norm_v    345041
Fnc_BFE_norm_v1   345362
Fnc_BFE_p         345653
Fnc_BFE_p2        345925
Fnc_BFE_temp      346644
Fnc_BFE_temp2     346986
Fnc_BFE_temp2CM   347859
Fnc_BFE_tempCM    348761
Fnc_BFE_vltg      349215
Fnc_BFE_vltg2     349595
Fnc_BFINT         349966
Fnc_BFKDELE_all   350811
Fnc_BFKDELE_chrg  351267
Fnc_BFKDELE_ef    351674
Fnc_BFKDELE_flue  352042
Fnc_BFKDELE_h     352379
Fnc_BFKDELE_hgen  352743
Fnc_BFKDELE_js    353088
Fnc_BFKDELE_mvdi  353473
Fnc_BFKDELE_temp  353832
Fnc_BFKDEL_p      354148
Fnc_BFKDEL_p2     354430
Fnc_BFKLIS        354895
Fnc_BFK_chrgd     355139
Fnc_BFK_chrgd2    355575
Fnc_BFK_ef        355869
Fnc_BFK_ef2       356265
Fnc_BFK_flue      356686
Fnc_BFK_flue2     357050
Fnc_BFK_h         357307
Fnc_BFK_h2        357699
Fnc_BFK_hgen      358110
Fnc_BFK_js        358571
Fnc_BFK_js2       358984
Fnc_BFK_mvdi      359409
Fnc_BFK_mvdi2     359813
Fnc_BFK_p         360120
Fnc_BFK_p2        360392
Fnc_BFK_temp      361090
Fnc_BFK_temp2     361433
Fnc_BFLDELE_all   362038
Fnc_BFLDELE_chrg  362455
Fnc_BFLDELE_ef    362854
Fnc_BFLDELE_flue  363216
Fnc_BFLDELE_h     363548
Fnc_BFLDELE_hgen  363906
Fnc_BFLDELE_js    364245
Fnc_BFLDELE_temp  364624
Fnc_BFLIST        364942
Fnc_BFLIST_dyna   365182
Fnc_BFLLIS        365346
Fnc_BFL_chrg      365590
Fnc_BFL_chrg2     365977
Fnc_BFL_ef        366273
Fnc_BFL_ef2       366624
Fnc_BFL_flue      367043
Fnc_BFL_flue2     367363
Fnc_BFL_h         367623
Fnc_BFL_h2        367970
Fnc_BFL_hgen      368379
Fnc_BFL_js        368793
Fnc_BFL_js2       369161
Fnc_BFL_js3       369776
Fnc_BFL_temp      370291
Fnc_BFL_temp2     370597
Fnc_BFSCALE       371196
Fnc_BFTRAN        371940
Fnc_BFUNIF_flue   372328
Fnc_BFUNIF_hgen   372629
Fnc_BFUNIF_temp   372979
Fnc_BFVDELE_all   373275
Fnc_BFVDELE_chrg  373701
Fnc_BFVDELE_ef    374106
Fnc_BFVDELE_flue  374474
Fnc_BFVDELE_h     374812
Fnc_BFVDELE_hgen  375176
Fnc_BFVDELE_js    375498
Fnc_BFVDELE_temp  375883
Fnc_BFVDELE_vltg  376207
Fnc_BFVLIS        376546
Fnc_BFV_chrg      376796
Fnc_BFV_chrg2     377189
Fnc_BFV_ef        377489
Fnc_BFV_ef2       377846
Fnc_BFV_flue      378269
Fnc_BFV_flue2     378595
Fnc_BFV_h         378859
Fnc_BFV_h2        379212
Fnc_BFV_hgen      379625
Fnc_BFV_js        380020
Fnc_BFV_js2       380394
Fnc_BFV_temp      380821
Fnc_BFV_temp2     381133
Fnc_BFV_vltg      381738
Fnc_BFV_vltg2     382065
Fnc_BF_Force      382419
Fnc_BF_chrgd      383129
Fnc_BF_chrgd2     383549
Fnc_BF_ef         383834
Fnc_BF_ef2        384214
Fnc_BF_flue       384627
Fnc_BF_flue2      384976
Fnc_BF_h          385236
Fnc_BF_h2         385612
Fnc_BF_hgen       386015
Fnc_BF_js         386442
Fnc_BF_js2        386839
Fnc_BF_js3        387448
Fnc_BF_mvdi       387960
Fnc_BF_mvdi2      388348
Fnc_BF_p          388638
Fnc_BF_p2         388899
Fnc_BF_tem3a      389589
Fnc_BF_tem3b2     390055
Fnc_BF_tem3b3     390292
Fnc_BF_temp       390784
Fnc_BF_temp2      391119
Fnc_BF_temp2CM    391729
Fnc_BF_tempCM     392364
Fnc_BIOT          392808
Fnc_BLC4          393225
Fnc_BLC4_2d       393638
Fnc_BLC5          394006
Fnc_BLC5_2d       394416
Fnc_BLC5_iges     394798
Fnc_BLOCK         395210
Fnc_BSPLIN_kp     395631
Fnc_BSPLIN_kp_en  395896
Fnc_BSPLIN_kp_op  396208
Fnc_BSPLIN_wp     396512
Fnc_BSPLIN_wp_en  396884
Fnc_BSPLIN_wp_op  397218
Fnc_BeamComposit  397614
Fnc_BeamPreInt    397889
Fnc_Beam_Edit     398243
Fnc_Beam_Tool     398421
Fnc_Bool_opts     398624
Fnc_CAPMATR       399604
Fnc_CAPMATR_0     400248
Fnc_CBDOF         400574
Fnc_CDREAD        401429
Fnc_CDWRITE       401650
Fnc_CE            401881
Fnc_CECMOD        403128
Fnc_CEDELE        403534
Fnc_CEINTF        404000
Fnc_CENTER        404861
Fnc_CENTER2       405202
Fnc_CERIG_P       405783
Fnc_CERIG_P2      406428
Fnc_CESGEN        408224
Fnc_CFACT         408700
Fnc_CFDLoad       409314
Fnc_CFDLoad2      411067
Fnc_CFDLoad4      411214
Fnc_CFDLoad50     411537
Fnc_CFDLoad6      412655
Fnc_CFDLoad7      412980
Fnc_CFDLoad8      413697
Fnc_CFDLoad9      413948
Fnc_CFX_1st       414247
Fnc_CHECK_ESEL    414741
Fnc_CHECK_plt     415141
Fnc_CHKMODCYC     415722
Fnc_CHK_ROUT      416483
Fnc_CIRCLE        418642
Fnc_CIRCLE_arc    418909
Fnc_CIRCLE_arc2   419249
Fnc_CLOG          419616
Fnc_CM            420132
Fnc_CMACEL        420560
Fnc_CMDELE        421155
Fnc_CMDOMEGA_AK   421456
Fnc_CMDOMEGA_AKP  422068
Fnc_CMDOMEGA_AN   422367
Fnc_CMDOMEGA_ANP  422991
Fnc_CMDOMEGA_AxK  423287
Fnc_CMDOMEGA_AxN  423582
Fnc_CMDOMEGA_Axi  423873
Fnc_CMDOMEGA_DK   424437
Fnc_CMDOMEGA_DKP  425126
Fnc_CMDOMEGA_DN   425443
Fnc_CMDOMEGA_DNP  426138
Fnc_CMDOMEGA_Dir  426452
Fnc_CMDOMEGA_del  427140
Fnc_CMEDIT        427635
Fnc_CMGRP         428170
Fnc_CMLIST        428628
Fnc_CMLIST1       429085
Fnc_CMLIST2       429451
Fnc_CMLIST3       429944
Fnc_CMLIST4       430274
Fnc_CMOMEGA_AK    430565
Fnc_CMOMEGA_AKPi  431164
Fnc_CMOMEGA_AN    431460
Fnc_CMOMEGA_ANPi  432071
Fnc_CMOMEGA_AxK   432364
Fnc_CMOMEGA_AxN   432656
Fnc_CMOMEGA_Axis  432944
Fnc_CMOMEGA_DK    433495
Fnc_CMOMEGA_DKPi  434171
Fnc_CMOMEGA_DN    434481
Fnc_CMOMEGA_DNPi  435163
Fnc_CMOMEGA_Dir   435470
Fnc_CMOMEGA_dele  436145
Fnc_CMPL          436625
Fnc_CMPL1         437025
Fnc_CMPL2         437429
Fnc_CMPL3         437700
Fnc_CMSEL         438237
Fnc_CMSEL1        438620
Fnc_CMSEL2        439159
Fnc_CMSE_A        439806
Fnc_CMSE_R        440103
Fnc_CMSE_S        440371
Fnc_CMSE_U        440641
Fnc_CMS_Name      440909
Fnc_CMS_Stat      441149
Fnc_CNVTOL        441298
Fnc_CNVTOL2       441588
Fnc_CNVTOL_0      441864
Fnc_CNVTOL_1      442044
Fnc_CNVTOL_2      442216
Fnc_CNVTOL_3      442391
Fnc_CNVTOL_ADD    442566
Fnc_CNVTOL_ADD0   442776
Fnc_CNVTOL_EDIT   449346
Fnc_CON4          449558
Fnc_CON4_iges     449957
Fnc_CONE          450363
Fnc_CONJUG        450898
Fnc_COPSD         451419
Fnc_COVAL         452214
Fnc_COVAL1        452734
Fnc_COVAL2        456461
Fnc_COVAL3        456692
Fnc_COVAL4        460235
Fnc_CO_QD_eras    462450
Fnc_CP            462895
Fnc_CPCYC         463155
Fnc_CPDELE        463907
Fnc_CPINTF        464328
Fnc_CPLGEN        464754
Fnc_CPSGEN        465534
Fnc_CP_1a         466021
Fnc_CP_1b         466310
Fnc_CP_2          466601
Fnc_CRPLIM        467035
Fnc_CS            467618
Fnc_CS2           467919
Fnc_CSCIR         468565
Fnc_CSDELE        469042
Fnc_CSKP          469416
Fnc_CSKP2         469727
Fnc_CSWPLA        470385
Fnc_CSYS          471018
Fnc_CSecAddEdit2  471306
Fnc_CSecAddEdit3  471975
Fnc_CSecBolt      473551
Fnc_CSecCircle    474303
Fnc_CSecCylind    474714
Fnc_CSecSphere    475244
Fnc_CURR2D        475662
Fnc_CUTCONTROL    476081
Fnc_CUTCONTROL_2  476817
Fnc_CWz_CntcArFl  477360
Fnc_CWz_CntcKpFl  477761
Fnc_CWz_CntcLn3D  478177
Fnc_CWz_CntcLnFl  478589
Fnc_CWz_CntcNdFl  478997
Fnc_CWz_CntcVlFl  479398
Fnc_CWz_CntcVolF  479824
Fnc_CWz_DelePair  480254
Fnc_CWz_Entry     480640
Fnc_CWz_EntryOld  480865
Fnc_CWz_FlipArea  482262
Fnc_CWz_FlipElem  483465
Fnc_CWz_FlipLine  484040
Fnc_CWz_NodePick  485096
Fnc_CWz_PiloKP    485501
Fnc_CWz_PiloND    485898
Fnc_CWz_PiloWP    486289
Fnc_CWz_RevNrmLb  486591
Fnc_CWz_TargArFl  486726
Fnc_CWz_TargArRg  487123
Fnc_CWz_TargLnFl  487520
Fnc_CWz_TargLnRg  487917
Fnc_CWz_TargNdFl  488305
Fnc_CWz_TargVlFl  488702
Fnc_CWz_TargVlRg  489120
Fnc_CWz_TargVolF  489538
Fnc_CWz_TargVolR  489961
Fnc_CWz_ViewPair  490383
Fnc_CYCEXPAND_01  490536
Fnc_CYCEXPAND_05  490770
Fnc_CYCEXPAND_06  491480
Fnc_CYCEXPAND_07  491909
Fnc_CYCEXPAND_08  492411
Fnc_CYCGEN        492778
Fnc_CYCLICAUTO    493705
Fnc_CYCLICMAN     494033
Fnc_CYCLICOFF     494369
Fnc_CYCLICSTAT    494783
Fnc_CYCLICUNDO    495016
Fnc_CYCLIC_exec   495580
Fnc_CYCOPT        496444
Fnc_CYCOPT_01     497396
Fnc_CYCOPT_02     497588
Fnc_CYCOPT_03     497757
Fnc_CYCOPT_04     498948
Fnc_CYCOPT_05     499237
Fnc_CYCOPT_06     499575
Fnc_CYCOPT_07     500243
Fnc_CYCOPT_08     500785
Fnc_CYCOPT_09     501360
Fnc_CYCOPT_10     501740
Fnc_CYCOPT_11     502124
Fnc_CYCSOL        502788
Fnc_CYL4          504186
Fnc_CYL4_2d       504560
Fnc_CYL4_holl_2d  504894
Fnc_CYL4_hollow   505278
Fnc_CYL4_iges     505703
Fnc_CYL4_part     506089
Fnc_CYL4_part_2d  506571
Fnc_CYL5          507021
Fnc_CYL5_2d       507436
Fnc_CYLIND        507809
Fnc_CheckCyc      508363
Fnc_CirBD_1       508694
Fnc_CirBD_2       509899
Fnc_CirBD_3       514368
Fnc_CirBD_MA      514599
Fnc_CirBD_R0      514876
Fnc_CirBD_R10     515390
Fnc_CirBD_R11     516251
Fnc_CirBD_R12     517295
Fnc_CirBD_R4      518189
Fnc_CirBD_R5      518846
Fnc_CirBD_R6      519183
Fnc_CirBD_R7      519520
Fnc_CirBD_R8      519886
Fnc_CirBD_R9      520954
Fnc_CirBD_SF      521321
Fnc_CirP0         522317
Fnc_CirP1         522564
Fnc_CirP10_1      522813
Fnc_CirP10_p2     523091
Fnc_CirP11_1      523439
Fnc_CirP11_p2     523720
Fnc_CirP11_p3     524074
Fnc_CirP12_1      524827
Fnc_CirP12_p2     525105
Fnc_CirP12_p3     525458
Fnc_CirP2         526196
Fnc_CirP3_0       526447
Fnc_CirP3_1       526790
Fnc_CirP3_2       527110
Fnc_CirP3_3       527420
Fnc_CirP3_4       527743
Fnc_CirP4_0       528058
Fnc_CirP4_1       528401
Fnc_CirP4_2       528722
Fnc_CirP4_3       529032
Fnc_CirP4_4       529353
Fnc_CirP5_1       529669
Fnc_CirP5_p2      529933
Fnc_CirP6_1       530243
Fnc_CirP6_p2      530518
Fnc_CirP7_1       530849
Fnc_CirP7_p2      531123
Fnc_CirP8         531454
Fnc_CirP9_1       531718
Fnc_CirP9_p2      531994
Fnc_CirPR         532344
Fnc_CirPWF_1      532697
Fnc_CirPWF_2      532960
Fnc_CirPW_3       533567
Fnc_CirPW_4       533850
Fnc_CirPW_5       534150
Fnc_CirPW_6       534446
Fnc_CirPW_7       536436
Fnc_CirPW_8       536795
Fnc_CirR0         536999
Fnc_CirR1         537566
Fnc_CirR10        538222
Fnc_CirR11        538785
Fnc_CirR12        539369
Fnc_CirR2         539953
Fnc_CirR3_0       540616
Fnc_CirR3_1       541314
Fnc_CirR3_2       542338
Fnc_CirR3_3       543518
Fnc_CirR3_4       544667
Fnc_CirR5         545886
Fnc_CirR6         546471
Fnc_CirR7         547045
Fnc_CirR8         547618
Fnc_CirR9         548375
Fnc_Cir_Merge     548934
Fnc_Cir_Merge0    549271
Fnc_Cir_Nod       549621
Fnc_Cir_WP        549979
Fnc_Cl_Mesh       550642
Fnc_Clear_Sym     551055
Fnc_Cms_Opts      551344
Fnc_Cms_Opts_0    553445
Fnc_Cms_Opts_1    553810
Fnc_CommontoSect  554221
Fnc_Condensation  555324
Fnc_ContSectAdd   555698
Fnc_ContSectEdit  555974
Fnc_CopyMatModel  556473
Fnc_CopyMatNo     556756
Fnc_CopyMatYes    556984
Fnc_Coriolis      557627
Fnc_Coriolis_del  559132
Fnc_Cr_Mesh       559678
Fnc_CustBeam_Fin  560071
Fnc_CycPhase_Cle  560279
Fnc_CycPhase_Get  560426
Fnc_CycPhase_Lis  561876
Fnc_CycPhase_Put  562020
Fnc_CycPhase_Sta  562309
Fnc_CycPhase_Swe  562463
Fnc_Cyc_Sym       562879
Fnc_DADELE        563279
Fnc_DADELE2       563603
Fnc_DADELE_a      563976
Fnc_DADELE_all    564286
Fnc_DADELE_azP    564711
Fnc_DADELE_mag    565044
Fnc_DADELE_pec    565368
Fnc_DADELE_pres   565712
Fnc_DADELE_spec   566069
Fnc_DADELE_spec2  566835
Fnc_DADELE_temp   567983
Fnc_DADELE_ti     568345
Fnc_DADELE_turb   568705
Fnc_DADELE_turb2  569196
Fnc_DADELE_turb3  569665
Fnc_DADELE_uva    569854
Fnc_DADELE_v      570177
Fnc_DADELE_v2     570672
Fnc_DADELE_v3     571511
Fnc_DADELE_volt   571781
Fnc_DADEL_flo     572163
Fnc_DADEL_p       572460
Fnc_DADEL_p2      572818
Fnc_DALIST        573185
Fnc_DA_a          573434
Fnc_DA_a2         573774
Fnc_DA_aN         574244
Fnc_DA_aP         574588
Fnc_DA_asym       574932
Fnc_DA_azN        575249
Fnc_DA_azP        575677
Fnc_DA_flo        576027
Fnc_DA_mag        576398
Fnc_DA_mag2       576751
Fnc_DA_magN       577185
Fnc_DA_p          577544
Fnc_DA_p2         577874
Fnc_DA_pec        578165
Fnc_DA_pmc        578554
Fnc_DA_pres       578998
Fnc_DA_spec       579697
Fnc_DA_symm       580521
Fnc_DA_temp       580834
Fnc_DA_temp2      581310
Fnc_DA_turb       582037
Fnc_DA_u          582742
Fnc_DA_u2         583053
Fnc_DA_uCFD       583881
Fnc_DA_v          584581
Fnc_DA_volt       585271
Fnc_DA_volt0      585769
Fnc_DA_volt0_ti   586214
Fnc_DA_volt_ti    586656
Fnc_DCUM          587142
Fnc_DDAM          588403
Fnc_DDELE_a       589338
Fnc_DDELE_all     589531
Fnc_DDELE_azP     589870
Fnc_DDELE_mag     590208
Fnc_DDELE_pec     590527
Fnc_DDELE_pres    590877
Fnc_DDELE_spec    591165
Fnc_DDELE_spec2   591925
Fnc_DDELE_temp    593037
Fnc_DDELE_temp2   593321
Fnc_DDELE_ti      593658
Fnc_DDELE_turb    593985
Fnc_DDELE_turb2   594458
Fnc_DDELE_turb3   594922
Fnc_DDELE_uva     595107
Fnc_DDELE_uva2    595438
Fnc_DDELE_uva2CM  595770
Fnc_DDELE_uvaCM   596127
Fnc_DDELE_v       596567
Fnc_DDELE_v2      597027
Fnc_DDELE_v3      597861
Fnc_DDELE_volt    598124
Fnc_DDEL_p        598472
Fnc_DDEL_p2       598746
Fnc_DELTIM        599059
Fnc_DERIV         599658
Fnc_DESIZE        600170
Fnc_DESOL         602006
Fnc_DESOL2        602369
Fnc_DETAB         613754
Fnc_DETAB2        614091
Fnc_DIST_KP       614847
Fnc_DIST_KP_1     615042
Fnc_DIST_ND       615490
Fnc_DIST_ND_1     615687
Fnc_DJDELE_all    616136
Fnc_DJDE_joint    616365
Fnc_DJDE_joint2   616925
Fnc_DJLIST        617604
Fnc_DJ_joint      617861
Fnc_DJ_joint2     618407
Fnc_DKDELE_a      619092
Fnc_DKDELE_all    619319
Fnc_DKDELE_ends   619783
Fnc_DKDELE_enke   620134
Fnc_DKDELE_mag    620486
Fnc_DKDELE_pres   620845
Fnc_DKDELE_temp   621190
Fnc_DKDELE_ti     621534
Fnc_DKDELE_uva    621900
Fnc_DKDELE_uva2   622304
Fnc_DKDELE_volt   622626
Fnc_DKDEL_p       623014
Fnc_DKDEL_p2      623295
Fnc_DKLIST        623616
Fnc_DK_a          623868
Fnc_DK_a2         624250
Fnc_DK_enke       624809
Fnc_DK_enke2      625185
Fnc_DK_mag        625531
Fnc_DK_mag2       625921
Fnc_DK_mult_del   626416
Fnc_DK_mult_del2  626821
Fnc_DK_multi      627206
Fnc_DK_multi2     627595
Fnc_DK_p          628030
Fnc_DK_p2         628287
Fnc_DK_pres       628744
Fnc_DK_psd        629457
Fnc_DK_psd2       629830
Fnc_DK_psd_dele   630326
Fnc_DK_psd_dele2  630713
Fnc_DK_temp       631169
Fnc_DK_temp2      631633
Fnc_DK_u          632372
Fnc_DK_u2         632728
Fnc_DK_uCFD       633628
Fnc_DK_v          634350
Fnc_DK_volt       635062
Fnc_DK_volt_ti    635568
Fnc_DLDELE        636065
Fnc_DLDELE2       636390
Fnc_DLDELE_a      636763
Fnc_DLDELE_all    637073
Fnc_DLDELE_pec    637498
Fnc_DLDELE_pres   637842
Fnc_DLDELE_spec   638195
Fnc_DLDELE_spec2  638961
Fnc_DLDELE_temp   640109
Fnc_DLDELE_turb   640467
Fnc_DLDELE_turb2  640958
Fnc_DLDELE_turb3  641427
Fnc_DLDELE_uva    641616
Fnc_DLDELE_v      641939
Fnc_DLDELE_v2     642434
Fnc_DLDELE_v3     643273
Fnc_DLDELE_volt   643543
Fnc_DLDEL_flo     643925
Fnc_DLDEL_p       644199
Fnc_DLDEL_p2      644557
Fnc_DLIST         644892
Fnc_DLLIST        645137
Fnc_DL_a          645386
Fnc_DL_a2         645726
Fnc_DL_aN_na      646196
Fnc_DL_aP_na      646723
Fnc_DL_asym       647073
Fnc_DL_asym_na    647496
Fnc_DL_dof        647811
Fnc_DL_dof2       648060
Fnc_DL_magN_na    648425
Fnc_DL_magP_na    648593
Fnc_DL_p          648763
Fnc_DL_p2         649162
Fnc_DL_pec        649512
Fnc_DL_pres       649901
Fnc_DL_spec       650600
Fnc_DL_symm       651424
Fnc_DL_symm_na    651843
Fnc_DL_temp       652154
Fnc_DL_temp2      652630
Fnc_DL_turb       653353
Fnc_DL_u          654053
Fnc_DL_u2         654364
Fnc_DL_uCFD       655148
Fnc_DL_v          655848
Fnc_DL_volt       656538
Fnc_DL_volt0      657036
Fnc_DMPEXT        657502
Fnc_DMPEXT2       658386
Fnc_DMPEXT4       658796
Fnc_DMPEXT_EIG    659151
Fnc_DNSOL         659887
Fnc_DNSOL2        660205
Fnc_DOF           681251
Fnc_DOF_DEL       684426
Fnc_DOMEGA        684825
Fnc_DOMEGA_dele   685336
Fnc_DSCALE        685667
Fnc_DSYM_aN       686440
Fnc_DSYM_aP       687256
Fnc_DSYM_asym     687943
Fnc_DSYM_symm     688392
Fnc_DSYS          688854
Fnc_DTRAN         689144
Fnc_DUMP          689563
Fnc_DUMP1         689846
Fnc_DUMP2         690014
Fnc_DUMP_2        690200
Fnc_DUMP_3        690571
Fnc_DYNA_ALEADD   691743
Fnc_DYNA_ALEDELE  692246
Fnc_DYNA_ALEDEal  692511
Fnc_DYNA_ALELIST  692763
Fnc_DYNA_ALELSal  693024
Fnc_DYNA_ActCon   693271
Fnc_DYNA_AdList   695013
Fnc_DYNA_Assem    695344
Fnc_DYNA_Assem1   695828
Fnc_DYNA_Assem2   696939
Fnc_DYNA_BND      697133
Fnc_DYNA_CPU      697956
Fnc_DYNA_CSdele   698268
Fnc_DYNA_CSlist   698680
Fnc_DYNA_ConMore  698999
Fnc_DYNA_Contopt  699485
Fnc_DYNA_Coord    701405
Fnc_DYNA_CurvAdd  701917
Fnc_DYNA_CurvDel  702419
Fnc_DYNA_CurvLis  702818
Fnc_DYNA_CurvPlt  703209
Fnc_DYNA_Damp     703584
Fnc_DYNA_DeacCon  704152
Fnc_DYNA_DefBox   705901
Fnc_DYNA_DelCon   706791
Fnc_DYNA_Double   708527
Fnc_DYNA_EDAC     708834
Fnc_DYNA_EDGC     710709
Fnc_DYNA_EDNB     712085
Fnc_DYNA_EDRC     712683
Fnc_DYNA_EDRD     713324
Fnc_DYNA_EDRI     713976
Fnc_DYNA_EDTERls  714622
Fnc_DYNA_EDTERnd  714797
Fnc_DYNA_EDTERpt  715141
Fnc_DYNA_EDTEnd2  715752
Fnc_DYNA_Edadapt  716376
Fnc_DYNA_Edhist   716744
Fnc_DYNA_Edint    717176
Fnc_DYNA_Edopt    717676
Fnc_DYNA_Edout    718589
Fnc_DYNA_Energy   719598
Fnc_DYNA_Hourgls  720107
Fnc_DYNA_Input    720442
Fnc_DYNA_LisCont  720968
Fnc_DYNA_Load     721347
Fnc_DYNA_MatProp  723607
Fnc_DYNA_Par1     724419
Fnc_DYNA_Par2     725191
Fnc_DYNA_Par3     725979
Fnc_DYNA_Par4     727377
Fnc_DYNA_Par5     728466
Fnc_DYNA_Par6     729607
Fnc_DYNA_Par7     730709
Fnc_DYNA_Par8     731668
Fnc_DYNA_Paralel  732756
Fnc_DYNA_Params   733270
Fnc_DYNA_Parts    736172
Fnc_DYNA_Parts_1  736761
Fnc_DYNA_Parts_2  737081
Fnc_DYNA_Parts_3  737455
Fnc_DYNA_PltCont  737770
Fnc_DYNA_Relax    738137
Fnc_DYNA_Rigid    739365
Fnc_DYNA_RstHt    740164
Fnc_DYNA_RstHtDt  740940
Fnc_DYNA_Scale    741699
Fnc_DYNA_Shell    742166
Fnc_DYNA_Spotgen  743531
Fnc_DYNA_Spotwld  744464
Fnc_DYNA_Start    744797
Fnc_DYNA_StrInit  745537
Fnc_DYNA_Subcycl  746118
Fnc_DYNA_Term     746560
Fnc_DYNA_TmHis2   746917
Fnc_DYNA_TmHis3   747234
Fnc_DYNA_VelDele  747937
Fnc_DYNA_VelExe1  748838
Fnc_DYNA_VelExe2  749398
Fnc_DYNA_VelGene  749958
Fnc_DYNA_VelInpt  751488
Fnc_DYNA_VelList  752733
Fnc_DYNA_Visco    753639
Fnc_DYNA_Wlddele  754049
Fnc_DYNA_Wldlist  754366
Fnc_DYNA_adBND    754677
Fnc_DYNA_adEDNB   754973
Fnc_DYNA_adLoad   755221
Fnc_DYNA_adapsta  755455
Fnc_DYNA_dBND     755628
Fnc_DYNA_dEDNB    756402
Fnc_DYNA_dLoad    756996
Fnc_DYNA_globsta  759047
Fnc_DYNApVelDele  759217
Fnc_DYNApVelGene  759583
Fnc_DYNApVelInpt  760836
Fnc_DYNApVelList  761709
Fnc_DYNROT        762069
Fnc_DYN_cnst      763467
Fnc_DYN_cnst1     764015
Fnc_DYNexport     765219
Fnc_D_a           765921
Fnc_D_a2          766256
Fnc_D_azP         766751
Fnc_D_current     767079
Fnc_D_enke        767464
Fnc_D_enke2       767785
Fnc_D_mag         768064
Fnc_D_mag2        768411
Fnc_D_magN        768841
Fnc_D_magNN       769166
Fnc_D_magP        769504
Fnc_D_mult_del    770001
Fnc_D_mult_del2   770367
Fnc_D_multi       770739
Fnc_D_multi2      771101
Fnc_D_p           771467
Fnc_D_p2          771720
Fnc_D_pec         772090
Fnc_D_pres        772457
Fnc_D_psd         773114
Fnc_D_psd2        773460
Fnc_D_psd_dele    773891
Fnc_D_psd_dele2   774251
Fnc_D_spec        774694
Fnc_D_temp        775470
Fnc_D_temp2       775872
Fnc_D_turb        776548
Fnc_D_u           777230
Fnc_D_u2          777535
Fnc_D_u2CM        778439
Fnc_D_uCFD        779369
Fnc_D_uCM         780050
Fnc_D_v           780464
Fnc_D_volt        781135
Fnc_D_volt0       781597
Fnc_D_volt0_ti    782036
Fnc_D_volt_ti     782472
Fnc_Damping       782925
Fnc_DecOpt        784529
Fnc_Dec_Stat      784910
Fnc_Def_port      785083
Fnc_DelBodyFor    785274
Fnc_DelInitCon    785476
Fnc_Diode         785876
Fnc_Diode_1       786132
Fnc_DomainDcomp   787210
Fnc_DropControl   787512
Fnc_DropControl2  788348
Fnc_DropNode1     788486
Fnc_DropNode2     788773
Fnc_DtAndyna      789044
Fnc_DtSolve       789339
Fnc_DtTmHis       789628
Fnc_DtTmHis2      791224
Fnc_DtTmHis3gl    791437
Fnc_DtTmHis3sc    792055
Fnc_DtTmHis3sc2   793373
Fnc_DtTmHis4      793726
Fnc_DtTmHisPlot   794306
Fnc_DtTmHisPrnt   794536
Fnc_E             794763
Fnc_EALIVE        795011
Fnc_EDELE         795288
Fnc_EDELE_pret    795530
Fnc_EDELE_pret2   795872
Fnc_EDELE_pret3n  796476
Fnc_EDELE_pret3y  796891
Fnc_EDEL_ME0      797439
Fnc_EDEL_ME1      797686
Fnc_EDEL_ME2      797812
Fnc_EDEL_MEF      798150
Fnc_EDEL_MEM      798343
Fnc_EDEL_MFF      798757
Fnc_EDFPLOT       798981
Fnc_EDG_GAUGE     799379
Fnc_EDIPART_def   799810
Fnc_EDIPART_defB  800459
Fnc_EDIPART_defC  800754
Fnc_EDIPART_defD  801920
Fnc_EDIPART_defE  802758
Fnc_EDIPART_defF  804114
Fnc_EDIPART_defX  805098
Fnc_EDIPART_del   805752
Fnc_EDIPART_lis   806100
Fnc_EDLDPLOT_2    806441
Fnc_EDNDTSD       806787
Fnc_EDNDTSD_1     809582
Fnc_EDNDTSD_2     810161
Fnc_EDNDTSD_3     811240
Fnc_EDPRTLST      811976
Fnc_EDPRTPLT      812107
Fnc_EDPRTSEL      812241
Fnc_EDTIMSTP      812826
Fnc_EDTP2         813458
Fnc_EGEN_copy     813810
Fnc_EGEN_copy_2   814133
Fnc_EINTF         815009
Fnc_EINTF_2       815652
Fnc_EINTF_3       816051
Fnc_EINTF_4       816448
Fnc_EINTF_5       816819
Fnc_EINTF_OFFSET  817372
Fnc_EKILL         818266
Fnc_ELBOW_all     818536
Fnc_ELBOW_node    819386
Fnc_ELBO_node_2   819951
Fnc_ELIST_p_00    820969
Fnc_ELIST_p_01    821225
Fnc_ELIST_p_10    821505
Fnc_ELIST_p_11    821802
Fnc_ELMORPH       822072
Fnc_EMAGERR       822451
Fnc_EMA_HFEL      823049
Fnc_EMA_STAN      824715
Fnc_EMF           824949
Fnc_EMFTMAC       825350
Fnc_EMID_add      825611
Fnc_EMID_remove   826079
Fnc_EMLoad        826581
Fnc_EMLoad2       828602
Fnc_EMLoad4       828827
Fnc_EMLoad42      829222
Fnc_EMLoad50      829488
Fnc_EMLoad6       831431
Fnc_EMLoad62      831743
Fnc_EMLoad7       832189
Fnc_EMLoad72      832903
Fnc_EMLoad8       833634
Fnc_EMLoad82      833992
Fnc_EMLoad9       834243
Fnc_EMLoad92      834540
Fnc_EMODIF_attr   834836
Fnc_EMODIF_attr2  835174
Fnc_EMODIF_node   835782
Fnc_EMODIF_node2  836115
Fnc_EMORP1        836962
Fnc_EMORP2        837447
Fnc_EMSYM         837681
Fnc_EMTGEN        838128
Fnc_EMTGEN_0      839435
Fnc_EMTGEN_1      840316
Fnc_EMT_RC0       840905
Fnc_EMT_RC1       841641
Fnc_EMUNIT        844243
Fnc_EMUNIT2       844931
Fnc_EMUNIT21      845357
Fnc_EMUNIT3       845648
Fnc_EM_BFADELE_t  845830
Fnc_EM_BFA_temp   846221
Fnc_EM_BFA_temp2  846603
Fnc_EM_BFDELE_te  846874
Fnc_EM_BFEDELE_t  847260
Fnc_EM_BFE_temp   847657
Fnc_EM_BFE_temp2  848083
Fnc_EM_BFKDELE_t  848635
Fnc_EM_BFK_temp   849032
Fnc_EM_BFK_temp2  849459
Fnc_EM_BFLDELE_t  849750
Fnc_EM_BFL_temp   850141
Fnc_EM_BFL_temp2  850523
Fnc_EM_BFVDELE_t  850794
Fnc_EM_BFV_temp   851191
Fnc_EM_BFV_temp2  851579
Fnc_EM_BF_temp    851854
Fnc_EM_BF_temp2   852265
Fnc_EM_LDREAD_te  852548
Fnc_EM_TUNIF      853284
Fnc_EN            853624
Fnc_EN2           853913
Fnc_ENDR_all      854186
Fnc_ENDR_node     854676
Fnc_ENDR_node_2   855242
Fnc_ENGEN         855885
Fnc_ENGEN_2       856199
Fnc_ENORM         857084
Fnc_ENSYM         857380
Fnc_ENSYMM_rv     857697
Fnc_ENSYM_2       857959
Fnc_EORIENT       858287
Fnc_EORIENT_dir   859099
Fnc_EORIENT_pck   859304
Fnc_EPLOT         859588
Fnc_EREAD_ERRANG  859706
Fnc_EREF          860118
Fnc_EREF_1        860582
Fnc_EREF_2a       861155
Fnc_EREF_2b       861436
Fnc_EREF_ALL      862065
Fnc_EREF_ALL_2a   862652
Fnc_EREF_ALL_2b   862941
Fnc_ERESX         863534
Fnc_ESCHECK_ESEL  864255
Fnc_ESCHECK_plt   864719
Fnc_ESEL_A        865417
Fnc_ESEL_A_resul  865703
Fnc_ESEL_R        865910
Fnc_ESEL_R_resul  866171
Fnc_ESEL_S        866376
Fnc_ESEL_S1       866639
Fnc_ESEL_S_resul  866911
Fnc_ESEL_U        867100
Fnc_ESEL_U_resul  867361
Fnc_ESEL_results  867552
Fnc_ESIZE         867995
Fnc_ESIZE_ndiv    868634
Fnc_ESOL          868873
Fnc_ESOL1A        872178
Fnc_ESOL1e        892542
Fnc_ESOL_A        911561
Fnc_ESOL_Ae       912356
Fnc_ESOL_SN       913153
Fnc_ESOL_SNA      913432
Fnc_ESOL_SNAe     915569
Fnc_ESOL_SNB      916619
Fnc_ESOL_SNe      917667
Fnc_ESOLe         919825
Fnc_ESOLp1        923145
Fnc_ESOLp2        923416
Fnc_ESORT         923676
Fnc_ESSOLV        924312
Fnc_ESSOLV_0      925463
Fnc_ESSOLV_1      927198
Fnc_ESSOLV_7      928016
Fnc_ESTIF         928587
Fnc_ESURF         928951
Fnc_ESURF2        929594
Fnc_ESURFA        929915
Fnc_ESURFL        930427
Fnc_ESURFLA       930939
Fnc_ESURFL_T      931448
Fnc_ESURFN        931858
Fnc_ESURFN1       932370
Fnc_ESURFN2       932806
Fnc_ESURFNO       933249
Fnc_ESURFN_T      933509
Fnc_ESURFT_1      933926
Fnc_ESURFT_2      934195
Fnc_ESURF_175     934482
Fnc_ESURF_2       934789
Fnc_ESURF_22      935279
Fnc_ESURF_3       935457
Fnc_ESURF_4       935876
Fnc_ESURF_5       936288
Fnc_ESURF_575     936726
Fnc_ESYM          937116
Fnc_ESYM_2        937431
Fnc_ET            937724
Fnc_ETABLE        938005
Fnc_ETABLE_ADD    938201
Fnc_ETABLE_erase  989912
Fnc_ETCHG         990240
Fnc_ETCONTROL     990820
Fnc_ET_add        991579
Fnc_EUSORT       1014773
Fnc_EWRITE       1015081
Fnc_EXP          1015459
Fnc_EXPAND       1015972
Fnc_EXPASS       1016914
Fnc_EXPASS_0     1017400
Fnc_EXPASS_1     1017555
Fnc_EXPSOL_HREX2 1018089
Fnc_EXPSOL_HREXP 1019150
Fnc_EXTOPT       1020295
Fnc_EXTOPT2      1022427
Fnc_EXTOPT_vswe  1023013
Fnc_EXTREM       1023221
Fnc_Emiss_aux12  1023552
Fnc_EuidlMat     1023913
Fnc_EuidlSol     1024827
Fnc_ExitRout     1025785
Fnc_Export       1026544
Fnc_Export_2     1026991
Fnc_ExtPort      1027640
Fnc_FCUM         1027804
Fnc_FCritChek    1028909
Fnc_FCritDef     1029249
Fnc_FCritDef2    1029734
Fnc_FCritDef2a   1030066
Fnc_FCritDef2a1  1031567
Fnc_FCritDef2b   1033639
Fnc_FCritDef2bx  1035625
Fnc_FCritDef2by  1036996
Fnc_FCritDele    1038077
Fnc_FCritList    1038513
Fnc_FCritTemp    1039188
Fnc_FCritTemp2   1039683
Fnc_FDELE_all    1041360
Fnc_FDELE_amps   1041714
Fnc_FDELE_chrg   1042101
Fnc_FDELE_csg    1042498
Fnc_FDELE_csg2   1042884
Fnc_FDELE_flow_a 1043177
Fnc_FDELE_flux   1043519
Fnc_FDELE_fm     1043881
Fnc_FDELE_fm2    1044217
Fnc_FDELE_fm2CM  1044504
Fnc_FDELE_fmCM   1044817
Fnc_FDELE_heat   1045262
Fnc_FDELE_heat2  1045573
Fnc_FDELE_ic     1045889
Fnc_FDELE_multi  1046268
Fnc_FDELE_multi2 1046659
Fnc_FDELE_p      1047028
Fnc_FDELE_p2     1047275
Fnc_FDELE_psd    1047548
Fnc_FDELE_psd2   1047903
Fnc_FDELE_sv     1048325
Fnc_FDELE_sv2    1048694
Fnc_FE           1049038
Fnc_FELIST       1049519
Fnc_FE_erase     1049832
Fnc_FIDAP        1050171
Fnc_FILL         1050300
Fnc_FILL2        1050652
Fnc_FILL_p26     1051593
Fnc_FINISH       1052168
Fnc_FJDELE_all   1052271
Fnc_FJDE_joint   1052490
Fnc_FJDE_joint2  1053040
Fnc_FJLIST       1053697
Fnc_FJ_joint     1053947
Fnc_FJ_joint2    1054479
Fnc_FKDELE_all   1055140
Fnc_FKDELE_amps  1055590
Fnc_FKDELE_chrg  1055988
Fnc_FKDELE_csg   1056396
Fnc_FKDELE_csg2  1056797
Fnc_FKDELE_flow_ 1057079
Fnc_FKDELE_flux  1057431
Fnc_FKDELE_fm    1057804
Fnc_FKDELE_fm2   1058155
Fnc_FKDELE_heat  1058449
Fnc_FKDELE_ic    1058774
Fnc_FKDELE_mult  1059164
Fnc_FKDELE_mult2 1059567
Fnc_FKDELE_psd   1059940
Fnc_FKDELE_psd2  1060310
Fnc_FKDELE_sv    1060739
Fnc_FKDELE_sv2   1061123
Fnc_FKDEL_p      1061474
Fnc_FKDEL_p2     1061731
Fnc_FKLIST       1061993
Fnc_FK_amps      1062230
Fnc_FK_amps_ic   1062742
Fnc_FK_chrg      1063234
Fnc_FK_csg       1063757
Fnc_FK_csg2      1064154
Fnc_FK_flow_a    1064674
Fnc_FK_flux      1065371
Fnc_FK_flux2     1065770
Fnc_FK_fm        1066206
Fnc_FK_fm2       1066547
Fnc_FK_heat      1067364
Fnc_FK_heat2     1067806
Fnc_FK_multi     1068473
Fnc_FK_multi2    1068864
Fnc_FK_p         1069273
Fnc_FK_p2        1069526
Fnc_FK_psd       1069874
Fnc_FK_psd2      1070248
Fnc_FK_sv        1070715
Fnc_FK_sv2       1071094
Fnc_FL           1071491
Fnc_FLIST        1072112
Fnc_FLLIST       1072339
Fnc_FLUXV        1072759
Fnc_FMAGBC       1073166
Fnc_FMAGBCE      1073656
Fnc_FMAGBC_2     1074116
Fnc_FMAGBC_3     1075163
Fnc_FMAGBC_4     1075485
Fnc_FMAGSUM      1076557
Fnc_FMAGSUM_2    1077022
Fnc_FMAGSUM_3    1078072
Fnc_FMAGSUM_4    1078396
Fnc_FOR2D        1079471
Fnc_FP           1080054
Fnc_FP2          1082046
Fnc_FPLIST       1083405
Fnc_FP_erase     1083588
Fnc_FP_erase1    1084052
Fnc_FP_erase2    1084166
Fnc_FP_mn        1084357
Fnc_FP_smt       1084751
Fnc_FP_smt2      1085909
Fnc_FREQ         1086638
Fnc_FREQ1        1088747
Fnc_FREQ2        1088972
Fnc_FREQ_erase   1089908
Fnc_FS           1090263
Fnc_FS1          1090887
Fnc_FS2          1091259
Fnc_FS3          1091657
Fnc_FSCALE       1091933
Fnc_FSDELE       1092583
Fnc_FSILoad      1092945
Fnc_FSI_Conv     1093702
Fnc_FSI_Iter     1094406
Fnc_FSI_Opt      1094711
Fnc_FSI_Options  1095100
Fnc_FSI_Relax    1096828
Fnc_FSI_Restart  1097367
Fnc_FSI_Stat     1097876
Fnc_FSI_Time     1097983
Fnc_FSI_tables   1098549
Fnc_FSI_values   1099255
Fnc_FSLIST       1099601
Fnc_FSNODE       1100036
Fnc_FSPLOT       1100474
Fnc_FSRS_tables  1101376
Fnc_FSRS_values  1101916
Fnc_FSSECT       1102227
Fnc_FSSPARM      1102817
Fnc_FSUM         1103301
Fnc_FTCALC       1103983
Fnc_FTCALC2      1104430
Fnc_FTRAN        1104802
Fnc_FTSIZE       1105172
Fnc_FTWRIT       1105645
Fnc_FUNC_EDIT    1105943
Fnc_FUNC_READ    1106108
Fnc_FVMESH       1106271
Fnc_F_amps       1106617
Fnc_F_amps_ic    1107113
Fnc_F_chrg       1107588
Fnc_F_csg        1108094
Fnc_F_csg2       1108475
Fnc_F_flow_a     1108954
Fnc_F_flux       1109628
Fnc_F_flux2      1110011
Fnc_F_fm         1110439
Fnc_F_fm2        1110764
Fnc_F_fm2CM      1111686
Fnc_F_fmCM       1112634
Fnc_F_heat       1113068
Fnc_F_heat2      1113492
Fnc_F_multi      1114264
Fnc_F_multi2     1114639
Fnc_F_p          1115040
Fnc_F_p2         1115285
Fnc_F_psd        1115626
Fnc_F_psd2       1115984
Fnc_F_sv         1116443
Fnc_F_sv2        1116806
Fnc_FileOpt2     1117195
Fnc_FileOpts     1119434
Fnc_FloLoad      1119720
Fnc_FloLoad10    1124009
Fnc_FloLoad20    1124783
Fnc_FloLoad50    1125404
Fnc_FloTurb      1127231
Fnc_FloVelo      1127466
Fnc_FlowTrace    1128463
Fnc_Forc_C1      1128627
Fnc_Forc_C2      1128898
Fnc_Forc_C3      1129209
Fnc_Forc_C4      1129520
Fnc_Forc_C5      1129872
Fnc_Forc_C6      1130183
Fnc_Forc_C7      1130535
Fnc_Forc_C8      1130887
Fnc_Forc_Q       1131281
Fnc_Forc_T       1132196
Fnc_FullGui      1132714
Fnc_FullMatGui   1132951
Fnc_GAPF         1133172
Fnc_GLREAD       1133806
Fnc_GMATRIX      1134413
Fnc_GP           1135017
Fnc_GP2          1135381
Fnc_GPDELE       1136166
Fnc_GPLIST       1136572
Fnc_GPLIST_all   1136977
Fnc_GSBloads     1137149
Fnc_GSG          1138599
Fnc_GSUM         1139345
Fnc_Geom         1139528
Fnc_GlobalStat   1140175
Fnc_GrphSet1     1140313
Fnc_HARFRQ_etc   1140697
Fnc_HBMAT        1141439
Fnc_HEXMAP       1142445
Fnc_HFFAR        1142807
Fnc_HFFAR_1      1144062
Fnc_HFFAR_2      1144882
Fnc_HFFAR_L      1145224
Fnc_HFNEAR       1146369
Fnc_HFNEAR_1     1147659
Fnc_HFSWEEP0     1148004
Fnc_HFSWEEP1     1148242
Fnc_HFSWEEP2     1148580
Fnc_HF_PLSP      1149085
Fnc_HMAGSOLV     1149920
Fnc_HPTAC        1150847
Fnc_HPTAC_2      1151217
Fnc_HPTAP        1151581
Fnc_HPTAP_2      1151943
Fnc_HPTDELE      1152361
Fnc_HPTLC        1152642
Fnc_HPTLC_2      1153044
Fnc_HPTLP        1153408
Fnc_HPTLP_2      1153767
Fnc_HPTLR        1154188
Fnc_HPTLR_2      1154542
Fnc_HROCEAN_etc  1154911
Fnc_HomePage     1155979
Fnc_HomePage_2   1156156
Fnc_HostSelect   1157630
Fnc_ICLIST       1157842
Fnc_ICLIST1      1158207
Fnc_ICLIST2      1158366
Fnc_ICLIST_all   1158689
Fnc_IC_p         1158952
Fnc_IC_p2        1159273
Fnc_IDEAS        1159681
Fnc_IMAGIN       1159811
Fnc_IMESH2D      1160324
Fnc_IMESH2Da     1160972
Fnc_IMESH2Db     1161313
Fnc_IMESH2Dc     1161797
Fnc_IMESH2Dd     1162094
Fnc_IMESH2Df     1162576
Fnc_IMESH3D      1163052
Fnc_IMESH3Da     1163700
Fnc_IMESH3Db     1164041
Fnc_IMESH3Dc     1164525
Fnc_IMESH3Dd     1164822
Fnc_IMESH3Df     1165304
Fnc_IMPD         1165780
Fnc_IMPD_1       1166487
Fnc_IMPD_2       1166821
Fnc_INDMATR      1167014
Fnc_INDMATR_0    1167809
Fnc_INDMATR_1    1168148
Fnc_INDMATR_2    1168400
Fnc_INDMATR_21   1168751
Fnc_INDMATR_3    1168952
Fnc_INDMATR_4    1169201
Fnc_INT1         1169785
Fnc_INTSRF       1170411
Fnc_IRLF         1170894
Fnc_IRLF_-1      1171387
Fnc_IRLIST       1171913
Fnc_ISFILE_del   1172910
Fnc_ISFILE_list  1173377
Fnc_ISFILE_read  1173834
Fnc_ISFILE_read1 1174597
Fnc_ISFILE_read2 1174899
Fnc_ISTRESS      1175442
Fnc_ISTRESS_ex1  1175979
Fnc_ISTRESS_ex2  1176337
Fnc_ISWRITE      1176924
Fnc_Iconscale    1177187
Fnc_Import       1177653
Fnc_Import_2     1177981
Fnc_Import_3     1178608
Fnc_Import_x     1179828
Fnc_InfAElm      1180245
Fnc_IntPort      1180656
Fnc_J-Parall     1180820
Fnc_J-Parall-T   1181264
Fnc_JointAddEdit 1181686
Fnc_K            1181964
Fnc_KATT         1182309
Fnc_KATT_p       1183467
Fnc_KATT_p2      1183884
Fnc_KBET         1185211
Fnc_KBET_2       1185547
Fnc_KCALC        1185918
Fnc_KCEN         1186600
Fnc_KCENK_2      1186914
Fnc_KCENL        1187193
Fnc_KCENL_2      1187488
Fnc_KCENL_3      1187697
Fnc_KCENR        1188042
Fnc_KCENR_2      1188367
Fnc_KCLEAR       1188696
Fnc_KDELE        1188944
Fnc_KDIS         1189188
Fnc_KESIZE       1189389
Fnc_KESIZE1      1189929
Fnc_KESIZE2      1190506
Fnc_KESIZE_p     1190647
Fnc_KESIZE_p2    1191128
Fnc_KESIZE_p3    1191735
Fnc_KESIZE_p4    1192510
Fnc_KESIZE_pdel  1192839
Fnc_KESIZE_pl    1193179
Fnc_KESIZEl      1193352
Fnc_KEY116_0     1193517
Fnc_KEY116_1     1194106
Fnc_KEY116_12    1194654
Fnc_KEY116_16    1195456
Fnc_KEY116_2     1196132
Fnc_KEYOPT_0     1196659
Fnc_KEYOPT_1     1196950
Fnc_KEYOPT_10    1197157
Fnc_KEYOPT_106   1197353
Fnc_KEYOPT_107   1197626
Fnc_KEYOPT_108   1197899
Fnc_KEYOPT_109   1198172
Fnc_KEYOPT_11    1198393
Fnc_KEYOPT_110   1198701
Fnc_KEYOPT_111   1199823
Fnc_KEYOPT_115   1200763
Fnc_KEYOPT_116   1200984
Fnc_KEYOPT_117   1201608
Fnc_KEYOPT_118   1201829
Fnc_KEYOPT_119   1202044
Fnc_KEYOPT_12    1202259
Fnc_KEYOPT_120   1203763
Fnc_KEYOPT_121   1203978
Fnc_KEYOPT_122   1205241
Fnc_KEYOPT_123   1206287
Fnc_KEYOPT_124   1207334
Fnc_KEYOPT_124a  1208241
Fnc_KEYOPT_125   1208794
Fnc_KEYOPT_126   1209199
Fnc_KEYOPT_126fu 1210246
Fnc_KEYOPT_127   1210660
Fnc_KEYOPT_128   1210842
Fnc_KEYOPT_129   1211024
Fnc_KEYOPT_13    1211484
Fnc_KEYOPT_130   1213011
Fnc_KEYOPT_131   1213302
Fnc_KEYOPT_132   1214517
Fnc_KEYOPT_136   1215734
Fnc_KEYOPT_138   1216382
Fnc_KEYOPT_139   1216990
Fnc_KEYOPT_14    1217836
Fnc_KEYOPT_141   1218948
Fnc_KEYOPT_142   1219169
Fnc_KEYOPT_143   1219390
Fnc_KEYOPT_144   1219662
Fnc_KEYOPT_145   1220277
Fnc_KEYOPT_146   1220459
Fnc_KEYOPT_147   1220641
Fnc_KEYOPT_148   1220823
Fnc_KEYOPT_15    1221005
Fnc_KEYOPT_150   1221828
Fnc_KEYOPT_151   1222011
Fnc_KEYOPT_152   1224563
Fnc_KEYOPT_153   1227309
Fnc_KEYOPT_154   1229199
Fnc_KEYOPT_156   1230981
Fnc_KEYOPT_157   1232039
Fnc_KEYOPT_158   1232523
Fnc_KEYOPT_159   1232796
Fnc_KEYOPT_16    1234802
Fnc_KEYOPT_160   1236409
Fnc_KEYOPT_161   1236696
Fnc_KEYOPT_162   1237926
Fnc_KEYOPT_162A  1238682
Fnc_KEYOPT_163   1239159
Fnc_KEYOPT_164   1240442
Fnc_KEYOPT_165   1241108
Fnc_KEYOPT_166   1241537
Fnc_KEYOPT_167   1241971
Fnc_KEYOPT_168   1242261
Fnc_KEYOPT_169   1242685
Fnc_KEYOPT_169A  1244110
Fnc_KEYOPT_17    1244385
Fnc_KEYOPT_170   1244598
Fnc_KEYOPT_170A  1247054
Fnc_KEYOPT_171   1247474
Fnc_KEYOPT_172   1251369
Fnc_KEYOPT_173   1255264
Fnc_KEYOPT_174   1259176
Fnc_KEYOPT_175   1263091
Fnc_KEYOPT_176   1267036
Fnc_KEYOPT_177   1270778
Fnc_KEYOPT_178   1274431
Fnc_KEYOPT_179   1277196
Fnc_KEYOPT_18    1277485
Fnc_KEYOPT_180   1278338
Fnc_KEYOPT_181   1278772
Fnc_KEYOPT_182   1279855
Fnc_KEYOPT_183   1280895
Fnc_KEYOPT_184   1281871
Fnc_KEYOPT_184a  1282841
Fnc_KEYOPT_184b  1283285
Fnc_KEYOPT_184c  1283729
Fnc_KEYOPT_184d  1284173
Fnc_KEYOPT_184e  1284617
Fnc_KEYOPT_185   1285057
Fnc_KEYOPT_186   1286156
Fnc_KEYOPT_187   1287189
Fnc_KEYOPT_188   1287648
Fnc_KEYOPT_189   1290028
Fnc_KEYOPT_19    1292185
Fnc_KEYOPT_190   1294609
Fnc_KEYOPT_191   1295445
Fnc_KEYOPT_192   1295666
Fnc_KEYOPT_193   1296345
Fnc_KEYOPT_194   1297023
Fnc_KEYOPT_195   1297475
Fnc_KEYOPT_2     1297927
Fnc_KEYOPT_20    1298203
Fnc_KEYOPT_200   1298416
Fnc_KEYOPT_201   1299285
Fnc_KEYOPT_202   1299577
Fnc_KEYOPT_203   1300075
Fnc_KEYOPT_204   1300573
Fnc_KEYOPT_205   1300880
Fnc_KEYOPT_208   1301187
Fnc_KEYOPT_209   1302454
Fnc_KEYOPT_21    1303523
Fnc_KEYOPT_212   1304399
Fnc_KEYOPT_213   1304833
Fnc_KEYOPT_214   1305267
Fnc_KEYOPT_215   1306181
Fnc_KEYOPT_216   1306468
Fnc_KEYOPT_217   1306900
Fnc_KEYOPT_22    1307187
Fnc_KEYOPT_220   1309338
Fnc_KEYOPT_221   1310024
Fnc_KEYOPT_223   1310710
Fnc_KEYOPT_226   1312581
Fnc_KEYOPT_227   1314436
Fnc_KEYOPT_23    1316087
Fnc_KEYOPT_230   1316283
Fnc_KEYOPT_231   1316745
Fnc_KEYOPT_232   1317038
Fnc_KEYOPT_233   1317332
Fnc_KEYOPT_236   1318830
Fnc_KEYOPT_237   1320338
Fnc_KEYOPT_238   1321846
Fnc_KEYOPT_239   1322518
Fnc_KEYOPT_24    1322970
Fnc_KEYOPT_240   1323166
Fnc_KEYOPT_241   1323618
Fnc_KEYOPT_242   1324668
Fnc_KEYOPT_25    1325521
Fnc_KEYOPT_251   1326967
Fnc_KEYOPT_252   1327257
Fnc_KEYOPT_26    1327547
Fnc_KEYOPT_263   1327764
Fnc_KEYOPT_264   1328056
Fnc_KEYOPT_265   1328348
Fnc_KEYOPT_27    1328639
Fnc_KEYOPT_272   1329559
Fnc_KEYOPT_273   1330530
Fnc_KEYOPT_278   1331501
Fnc_KEYOPT_279   1332140
Fnc_KEYOPT_28    1332779
Fnc_KEYOPT_281   1333211
Fnc_KEYOPT_285   1334089
Fnc_KEYOPT_288   1334381
Fnc_KEYOPT_289   1336759
Fnc_KEYOPT_29    1338915
Fnc_KEYOPT_290   1339567
Fnc_KEYOPT_3     1340933
Fnc_KEYOPT_30    1341140
Fnc_KEYOPT_31    1341821
Fnc_KEYOPT_32    1342251
Fnc_KEYOPT_33    1342464
Fnc_KEYOPT_34    1342766
Fnc_KEYOPT_35    1343462
Fnc_KEYOPT_36    1344091
Fnc_KEYOPT_37    1344395
Fnc_KEYOPT_38    1346495
Fnc_KEYOPT_39    1347148
Fnc_KEYOPT_4     1348600
Fnc_KEYOPT_40    1349998
Fnc_KEYOPT_41    1351215
Fnc_KEYOPT_42    1352481
Fnc_KEYOPT_43    1353904
Fnc_KEYOPT_44    1354119
Fnc_KEYOPT_45    1354315
Fnc_KEYOPT_46    1355692
Fnc_KEYOPT_47    1355907
Fnc_KEYOPT_48    1356572
Fnc_KEYOPT_49    1356789
Fnc_KEYOPT_5     1357006
Fnc_KEYOPT_50    1358164
Fnc_KEYOPT_51    1359222
Fnc_KEYOPT_52    1359505
Fnc_KEYOPT_53    1360966
Fnc_KEYOPT_54    1362514
Fnc_KEYOPT_55    1362711
Fnc_KEYOPT_56    1364055
Fnc_KEYOPT_57    1364323
Fnc_KEYOPT_58    1364538
Fnc_KEYOPT_59    1364806
Fnc_KEYOPT_60    1366513
Fnc_KEYOPT_61    1366726
Fnc_KEYOPT_62    1367843
Fnc_KEYOPT_63    1368058
Fnc_KEYOPT_64    1370175
Fnc_KEYOPT_65    1370458
Fnc_KEYOPT_66    1371946
Fnc_KEYOPT_67    1372161
Fnc_KEYOPT_68    1372376
Fnc_KEYOPT_69    1372678
Fnc_KEYOPT_7     1372893
Fnc_KEYOPT_70    1373104
Fnc_KEYOPT_71    1374204
Fnc_KEYOPT_74    1374813
Fnc_KEYOPT_75    1375081
Fnc_KEYOPT_77    1375385
Fnc_KEYOPT_78    1376038
Fnc_KEYOPT_79    1376471
Fnc_KEYOPT_8     1376686
Fnc_KEYOPT_80    1376893
Fnc_KEYOPT_81    1377108
Fnc_KEYOPT_82    1377323
Fnc_KEYOPT_83    1378337
Fnc_KEYOPT_84    1379586
Fnc_KEYOPT_86    1379854
Fnc_KEYOPT_87    1380122
Fnc_KEYOPT_88    1380751
Fnc_KEYOPT_89    1380966
Fnc_KEYOPT_9     1381181
Fnc_KEYOPT_90    1381853
Fnc_KEYOPT_91    1382285
Fnc_KEYOPT_92    1382500
Fnc_KEYOPT_93    1383202
Fnc_KEYOPT_94    1383417
Fnc_KEYOPT_94a   1384193
Fnc_KEYOPT_95    1384700
Fnc_KEYOPT_96    1385879
Fnc_KEYOPT_97    1386353
Fnc_KEYOPT_97a   1387414
Fnc_KEYOPT_98    1387878
Fnc_KEYOPT_99    1388998
Fnc_KFILL        1389213
Fnc_KFILL2       1389574
Fnc_KGEN         1390186
Fnc_KGEN2        1390492
Fnc_KGEN_move    1391153
Fnc_KGEN_move_2  1391491
Fnc_KL           1391903
Fnc_KLD          1392246
Fnc_KLIST_HardPt 1392535
Fnc_KLIST_p      1392684
Fnc_KLIST_p_coor 1392932
Fnc_KL_d2        1393211
Fnc_KMESH        1393526
Fnc_KMESH_m      1393767
Fnc_KMODIF       1393938
Fnc_KMOVE        1394319
Fnc_KMOVE_2      1394632
Fnc_KNODE        1395260
Fnc_KPLOT        1395529
Fnc_KPSCAL       1395978
Fnc_KPSCAL_2     1396289
Fnc_KREF         1396953
Fnc_KREF_1       1397416
Fnc_KREF_2a      1397989
Fnc_KREF_2b      1398273
Fnc_KSCON        1398903
Fnc_KSCON2       1399200
Fnc_KSCON_stat   1400223
Fnc_KSELH_A      1400397
Fnc_KSELH_R      1400713
Fnc_KSELH_S      1401004
Fnc_KSELH_U      1401297
Fnc_KSEL_A       1401587
Fnc_KSEL_R       1401876
Fnc_KSEL_S       1402140
Fnc_KSEL_U       1402406
Fnc_KSUM         1402670
Fnc_KSYMM        1402824
Fnc_KSYMM_2      1403145
Fnc_KTRAN        1403802
Fnc_KTRAN_2      1404126
Fnc_KUSE         1404794
Fnc_KWPA         1405238
Fnc_KWPL         1405475
Fnc_K_p          1405730
Fnc_L            1405980
Fnc_L2ANG        1406232
Fnc_L2ANG_2      1406581
Fnc_L2ANG_90     1407127
Fnc_L2TAN        1407438
Fnc_L2TAN_2      1408035
Fnc_LANG         1408482
Fnc_LANG_0       1409018
Fnc_LANG_2       1409383
Fnc_LANG_3       1409711
Fnc_LANG_90      1409997
Fnc_LARC         1410411
Fnc_LARC2        1410873
Fnc_LARC_3kp     1411355
Fnc_LAREA        1411613
Fnc_LARGE        1411972
Fnc_LATT         1412672
Fnc_LATT_2       1414032
Fnc_LATT_KP      1414253
Fnc_LATT_NOKP    1414611
Fnc_LATT_p       1414884
Fnc_LATT_p2      1415302
Fnc_LATTp_2      1416654
Fnc_LATTp_KP     1416879
Fnc_LATTp_NOKP   1417423
Fnc_LAYER_p2     1417882
Fnc_LAYER_p3     1419319
Fnc_LAYLIS       1419785
Fnc_LAYPLO       1421340
Fnc_LAYPLO2      1421652
Fnc_LCABS        1422036
Fnc_LCASE        1422549
Fnc_LCCAT        1422825
Fnc_LCCAT_del    1423071
Fnc_LCCAT_m      1423857
Fnc_LCDEF        1424103
Fnc_LCDEF_eras1  1424715
Fnc_LCDEF_eras2  1424880
Fnc_LCDEF_erase  1425088
Fnc_LCDEF_stat   1425688
Fnc_LCFACT       1425996
Fnc_LCFILE       1426465
Fnc_LCLEAR       1426870
Fnc_LCOMB        1427106
Fnc_LCOMB2       1427349
Fnc_LCOPER_add   1427677
Fnc_LCOPER_lprin 1428206
Fnc_LCOPER_mn_mx 1428616
Fnc_LCOPER_sqrt  1429348
Fnc_LCOPER_squa  1429742
Fnc_LCOPER_srss  1430127
Fnc_LCOPER_sub   1430698
Fnc_LCSEL        1431237
Fnc_LCSL         1431831
Fnc_LCWRITE      1432083
Fnc_LCZERO       1432549
Fnc_LC_create    1432878
Fnc_LDELE        1433225
Fnc_LDELE_sweep  1433467
Fnc_LDIV         1433753
Fnc_LDIV_2       1434039
Fnc_LDIV_B       1434368
Fnc_LDIV_opt     1434815
Fnc_LDIV_opt_B   1435108
Fnc_LDPLOT       1435749
Fnc_LDPLOT2      1438716
Fnc_LDPLOT3      1441639
Fnc_LDRAG        1444636
Fnc_LDREAD_EF    1444989
Fnc_LDREAD_dyna  1445702
Fnc_LDREAD_film  1446322
Fnc_LDREAD_hfhf  1446992
Fnc_LDREAD_hflu  1447685
Fnc_LDREAD_hgen  1448355
Fnc_LDREAD_js    1449175
Fnc_LDREAD_mforc 1449914
Fnc_LDREAD_pres  1450718
Fnc_LDREAD_reac  1451499
Fnc_LDREAD_temp  1452169
Fnc_LDREAD_tempD 1452840
Fnc_LDREAD_tempI 1453525
Fnc_LECOPY       1454225
Fnc_LECOPY2      1455285
Fnc_LEFLIP       1456375
Fnc_LELAYER_p    1457500
Fnc_LELAYER_pdel 1457987
Fnc_LESIZE       1458356
Fnc_LESIZE1      1459062
Fnc_LESIZE2      1459895
Fnc_LESIZE_p     1460156
Fnc_LESIZE_p1    1460678
Fnc_LESIZE_pdel  1461664
Fnc_LESIZEl      1462022
Fnc_LESI_pclr    1462187
Fnc_LESI_pclr1   1462362
Fnc_LEXTND       1462514
Fnc_LEXTND_2     1462936
Fnc_LFILLT       1463436
Fnc_LFILLT_2     1463775
Fnc_LGEN         1464254
Fnc_LGEN2        1464546
Fnc_LGEN_move    1465184
Fnc_LGEN_move_2  1465491
Fnc_LGLUE        1465882
Fnc_LINA         1466110
Fnc_LINE_PK      1466448
Fnc_LINE_PK_2    1466680
Fnc_LINL         1466960
Fnc_LINP         1467215
Fnc_LINV         1467474
Fnc_LLIST_OPT    1467827
Fnc_LLIST_p      1468209
Fnc_LMESH        1468437
Fnc_LMESH_m      1468666
Fnc_LNCOLLAPSE   1468829
Fnc_LNSRCH       1469198
Fnc_LOADPLOT     1469915
Fnc_LOCAL        1470202
Fnc_LOCAL2       1470519
Fnc_LOVLAP       1471370
Fnc_LPATH        1471611
Fnc_LPLOT        1471869
Fnc_LPTN         1472247
Fnc_LREF         1472481
Fnc_LREF_1       1472936
Fnc_LREF_2a      1473503
Fnc_LREF_2b      1473787
Fnc_LREVERSE     1474413
Fnc_LREVERSE2    1474880
Fnc_LROTAT       1475209
Fnc_LROTAT_2     1475646
Fnc_LSBA_div     1476053
Fnc_LSBA_div_op2 1476383
Fnc_LSBA_div_opt 1477075
Fnc_LSBL         1477513
Fnc_LSBL_div     1477841
Fnc_LSBL_div_op2 1478171
Fnc_LSBL_div_opt 1478863
Fnc_LSBL_opt     1479301
Fnc_LSBL_opt_2   1479739
Fnc_LSBV_div     1480410
Fnc_LSBV_div_igs 1480757
Fnc_LSBV_div_op2 1481113
Fnc_LSBV_div_opt 1481821
Fnc_LSBW_div     1482278
Fnc_LSBW_div_igs 1482535
Fnc_LSBW_div_op2 1482803
Fnc_LSBW_div_opt 1483340
Fnc_LSCLEAR_all  1483684
Fnc_LSCLEAR_fe   1484051
Fnc_LSCLEAR_iner 1484391
Fnc_LSCLEAR_lfac 1484725
Fnc_LSCLEAR_lsop 1485076
Fnc_LSCLEAR_soli 1485459
Fnc_LSDELE       1485805
Fnc_LSELH_A      1486200
Fnc_LSELH_R      1486504
Fnc_LSELH_S      1486783
Fnc_LSELH_U      1487064
Fnc_LSEL_A       1487343
Fnc_LSEL_R       1487620
Fnc_LSEL_S       1487872
Fnc_LSEL_U       1488126
Fnc_LSREAD       1488378
Fnc_LSSCAL       1488674
Fnc_LSSCAL_2     1488969
Fnc_LSSOLVE      1489617
Fnc_LSTR         1490072
Fnc_LSUM         1490326
Fnc_LSWRITE      1490472
Fnc_LSYMM        1490776
Fnc_LSYMM_2      1491081
Fnc_LTAN         1491722
Fnc_LTAN_2       1492258
Fnc_LTRAN        1492869
Fnc_LTRAN_2      1493177
Fnc_LVSCALE      1493827
Fnc_LVSCALE_PSD  1494210
Fnc_LVSCALE_del_ 1494586
Fnc_LVSCALE_dele 1495044
Fnc_LWPL         1495502
Fnc_LWPL_2       1495775
Fnc_LWPL_3a      1496230
Fnc_LWPL_3b      1496465
Fnc_M            1496758
Fnc_M2           1497066
Fnc_MAGOPT_dsp   1497433
Fnc_MAGOPT_gsp   1497881
Fnc_MAGOPT_rsp   1498356
Fnc_MAGSOLV      1498823
Fnc_MAGSOLV_MSP  1499163
Fnc_MAGSOLV_MVP  1499847
Fnc_MATREAD      1500678
Fnc_MAT_TYPE_gen 1501335
Fnc_MCHECK       1503836
Fnc_MCHECK_ESEL  1504021
Fnc_MDELE        1504218
Fnc_MDELE2       1504548
Fnc_MDPLOT       1504939
Fnc_MDPLOT2      1505633
Fnc_MESH_clnup   1505926
Fnc_MFMCC_Clear  1506140
Fnc_MFMCC_Stat   1506500
Fnc_MFRUR_tables 1506752
Fnc_MFR_tables   1508922
Fnc_MFR_values   1511431
Fnc_MFSCC_Clear  1511921
Fnc_MFSCC_Stat   1512437
Fnc_MFSUR_Conver 1512934
Fnc_MFSUR_Relax  1513762
Fnc_MFSUR_tables 1514456
Fnc_MFS_Addelems 1515986
Fnc_MFS_Capture  1516349
Fnc_MFS_Converg  1516845
Fnc_MFS_Define_2 1517688
Fnc_MFS_Definefi 1518228
Fnc_MFS_Extern   1518861
Fnc_MFS_FieldGrp 1519170
Fnc_MFS_Freq     1519522
Fnc_MFS_Import   1520022
Fnc_MFS_MCCOrder 1520455
Fnc_MFS_MCCSetup 1521267
Fnc_MFS_Mapping  1522281
Fnc_MFS_MaxIter  1523051
Fnc_MFS_Relax    1523683
Fnc_MFS_SCCOrder 1524392
Fnc_MFS_SCCSetup 1526289
Fnc_MFS_Surf     1527469
Fnc_MFS_Surface  1528053
Fnc_MFS_Time     1528673
Fnc_MFS_Vol      1530019
Fnc_MFS_Volume   1530593
Fnc_MFS_tables   1531211
Fnc_MFS_values   1532888
Fnc_MFX_AA       1533209
Fnc_MFX_AA_LoadC 1533590
Fnc_MFX_AC_ARECV 1535892
Fnc_MFX_AC_ASEND 1536715
Fnc_MFX_AC_CUST  1537538
Fnc_MFX_AC_LoadC 1538709
Fnc_MFX_AC_Mech  1539494
Fnc_MFX_AC_Solu  1540892
Fnc_MFX_AC_Ther  1541568
Fnc_MFX_AX       1542955
Fnc_MFX_Clear    1543336
Fnc_MFX_MapSetup 1543586
Fnc_MFX_MaxIter  1545018
Fnc_MFX_Single   1545649
Fnc_MFX_Time     1546038
Fnc_MFX_Write    1547477
Fnc_MF_ON        1547853
Fnc_MF_Off       1548687
Fnc_MGEN         1549063
Fnc_MGEN2        1549379
Fnc_MLIST        1549754
Fnc_MLIST_all    1550013
Fnc_MMF          1550194
Fnc_MODCOM_CQC   1550516
Fnc_MODCOM_DSUM  1551016
Fnc_MODCOM_GRP   1551574
Fnc_MODCOM_NRLSM 1552074
Fnc_MODCOM_SRSS  1552698
Fnc_MODCOM_psd   1553329
Fnc_MODCYC_0     1553769
Fnc_MODCYC_1     1554128
Fnc_MODE         1554556
Fnc_MODFUL       1555246
Fnc_MONITOR      1555802
Fnc_MONITOR_2    1556077
Fnc_MORPHING     1556736
Fnc_MORPH_ON     1556848
Fnc_MOVE         1557200
Fnc_MOVE_2       1557499
Fnc_MP*VPLOT     1558116
Fnc_MPAMOD       1558973
Fnc_MPANEL       1559480
Fnc_MPBISO       1564474
Fnc_MPCHG        1565331
Fnc_MPDATA       1565765
Fnc_MPDEF        1572913
Fnc_MPDELE       1573374
Fnc_MPDRES       1576349
Fnc_MPDYN        1582160
Fnc_MPDYN2       1584339
Fnc_MPDYNConcr   1585732
Fnc_MPDYNFluid   1596241
Fnc_MPEOS        1597647
Fnc_MPEOS34      1610692
Fnc_MPEOS35      1619707
Fnc_MPEOS36      1626878
Fnc_MPEOS38      1634873
Fnc_MPEOS42      1644022
Fnc_MPEPLO       1651241
Fnc_MPFSPLOT     1651362
Fnc_MPKEY1       1652325
Fnc_MPLIN        1653305
Fnc_MPLIST       1657055
Fnc_MPLIST_all   1659966
Fnc_MPLIST_evlt  1660159
Fnc_MPLIST_temp  1660348
Fnc_MPLib_3      1660713
Fnc_MPLib_List   1661131
Fnc_MPLib_NA     1661623
Fnc_MPLib_NA2    1661929
Fnc_MPLib_Read   1662179
Fnc_MPLib_Read1  1662450
Fnc_MPLib_UNITS  1664617
Fnc_MPLib_UNITS2 1665339
Fnc_MPLib_Write  1665574
Fnc_MPLib_Write1 1665848
Fnc_MPMATP       1667910
Fnc_MPNOEP       1670937
Fnc_MPOPLFA      1671059
Fnc_MPOPLGR      1672455
Fnc_MPOPLSW      1673609
Fnc_MPPLDI       1674746
Fnc_MPPLES       1675188
Fnc_MPPLET       1706210
Fnc_MPPLLS       1706691
Fnc_MPPLNS       1707411
Fnc_MPPLOT       1739495
Fnc_MPPLPA       1742800
Fnc_MPPLSE       1743159
Fnc_MPPLTR       1744069
Fnc_MPPLVAp26    1745865
Fnc_MPPLVE       1746602
Fnc_MPPLVE_user  1751828
Fnc_MPPlasHyd    1752854
Fnc_MPREAD       1760458
Fnc_MPTB         1760783
Fnc_MPTB2        1769049
Fnc_MPTB2_moon   1779071
Fnc_MPTB2a       1779731
Fnc_MPTBPLOT     1787185
Fnc_MPTBPLOT_ex1 1789253
Fnc_MPTBPLOT_ex2 1789536
Fnc_MPTBPLOT_ex3 1790182
Fnc_MPTB_moon    1790737
Fnc_MPTBa        1791545
Fnc_MPTEMP       1799184
Fnc_MPTGEN       1799885
Fnc_MPTRES       1800414
Fnc_MPWRITE      1803356
Fnc_MP_ENT       1803704
Fnc_MP_ENT2      1805563
Fnc_MP_GRF       1805995
Fnc_MP_add       1807142
Fnc_MP_dele      1814121
Fnc_MP_edit      1814615
Fnc_MP_poly      1817029
Fnc_MPfld        1820302
Fnc_MPspring     1822864
Fnc_MPstein      1828780
Fnc_MSHA         1838663
Fnc_MSHC_a       1839382
Fnc_MSHC_a_2     1839797
Fnc_MSHC_l       1840498
Fnc_MSHC_l_2     1840913
Fnc_MULTIPLOT    1841614
Fnc_MULTIWIND    1842166
Fnc_MW1          1842908
Fnc_MW2A         1843135
Fnc_MW2B         1843380
Fnc_MW3A         1843622
Fnc_MW3B         1843881
Fnc_MW4          1844140
Fnc_MXPAND       1844415
Fnc_M_EVAL       1845227
Fnc_M_EVAL2      1846272
Fnc_MacLib       1846994
Fnc_Macro        1848315
Fnc_Mass         1849561
Fnc_Mass_RCA     1849801
Fnc_Mass_RCB     1850586
Fnc_Mass_RCC     1850968
Fnc_Mass_RCD     1851429
Fnc_Masss        1851811
Fnc_MatCopyExec  1852605
Fnc_MeCirBD_1    1852883
Fnc_MeCirBD_2    1854598
Fnc_MeROMBD_1    1859248
Fnc_MeROMBD_2    1859866
Fnc_MeROMBD_3    1861255
Fnc_MeROMB_20    1861973
Fnc_MeROMB_30    1862678
Fnc_Menu_Refresh 1863663
Fnc_MeshAttrib   1863773
Fnc_Mesh_Check   1866670
Fnc_Mesh_tool    1867444
Fnc_Message      1867999
Fnc_Msgctrls     1870725
Fnc_MshrOpts     1871692
Fnc_MshrStat     1875078
Fnc_N            1875817
Fnc_N/A_Prod     1876236
Fnc_NANG         1876711
Fnc_NANG_2       1877076
Fnc_NANG_3       1877731
Fnc_NAXIS        1878086
Fnc_NCNV         1878538
Fnc_NDELE        1879375
Fnc_NDIS         1879608
Fnc_NDREAD       1879801
Fnc_NEQIT        1880095
Fnc_NFORCE       1880491
Fnc_NGEN_copy    1881053
Fnc_NGEN_copy_2  1881353
Fnc_NGEN_move    1882010
Fnc_NGEN_move_2  1882352
Fnc_NKPT         1882731
Fnc_NLDIAG       1882999
Fnc_NLHIST       1883227
Fnc_NLIST_SORT   1883433
Fnc_NLIST_p      1884370
Fnc_NLOG         1884598
Fnc_NLPOST       1885116
Fnc_NMODIF       1885335
Fnc_NMODIF_2     1885777
Fnc_NMODIF_ang   1886233
Fnc_NMODIF_ang2  1886593
Fnc_NODE2        1887244
Fnc_NODE3        1887841
Fnc_NOORDER      1888433
Fnc_NORA         1888867
Fnc_NORA_ara2    1889226
Fnc_NORL         1889525
Fnc_NORL_line2   1889882
Fnc_NORL_with    1890183
Fnc_NORL_with2   1890554
Fnc_NREAD_NRRANG 1890949
Fnc_NREF         1891334
Fnc_NREF_1       1891789
Fnc_NREF_2a      1892356
Fnc_NREF_2b      1892640
Fnc_NROTAT       1893269
Fnc_NSCALE_copy  1893538
Fnc_NSCALE_copy_ 1893867
Fnc_NSCALE_move  1894303
Fnc_NSCALE_move_ 1894633
Fnc_NSEL_A       1895058
Fnc_NSEL_A_resul 1895339
Fnc_NSEL_R       1895546
Fnc_NSEL_R_resul 1895798
Fnc_NSEL_S       1896003
Fnc_NSEL_S_ARC   1896257
Fnc_NSEL_S_resul 1896614
Fnc_NSEL_U       1896803
Fnc_NSEL_U_resul 1897055
Fnc_NSEL_results 1897246
Fnc_NSOL         1931025
Fnc_NSOL1        1932924
Fnc_NSOL1_a      1933302
Fnc_NSOL1e       1938418
Fnc_NSOL_A       1943299
Fnc_NSOL_Ae      1943623
Fnc_NSOLe        1943913
Fnc_NSORT        1945703
Fnc_NSORT2       1975760
Fnc_NSORT_CP     1977381
Fnc_NSORT_EP     1977731
Fnc_NSORT_LP     1978347
Fnc_NSORT_RP     1978707
Fnc_NSYM         1978905
Fnc_NSYM_2       1979193
Fnc_NUMCMP       1979628
Fnc_NUMEXP_HREXP 1980222
Fnc_NUMMRG       1981696
Fnc_NUMOFF       1982625
Fnc_NUMSTR       1983320
Fnc_NUMSTR_defa  1984165
Fnc_NUMSTR_stat  1984502
Fnc_NUSORT       1984683
Fnc_NWPA         1984985
Fnc_NWPL         1985210
Fnc_NWRITE       1985466
Fnc_N_p          1985838
Fnc_Nd_Surf      1986089
Fnc_NonlinRC     1986761
Fnc_OMEGA        1989355
